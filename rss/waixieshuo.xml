<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fwaixieshuo.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/waixieshuo.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fwaixieshuo.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fwaixieshuo.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>歪理邪说</title>
<link>http://www.jintiankansha.me/column/vMKQ8I2fSF</link>
<description>歪理邪说 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>李笑来，那个一顿饭点8条鲈鱼的人</title>
<link>http://www.jintiankansha.me/t/XQrvPUnXkY</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/XQrvPUnXkY</guid>
<description>&lt;p&gt;我已经记不清到底哪年认识的李笑来，大概是2006年吧。到现在已经超过10年了。这10年间我看着他做过无数事情，聊过很多想法。今天笑来变成了众矢之的，似乎所有事情都怪他，很多文章干脆把他描述成一个处心积虑的骗子的文章。但李笑来究竟如何想，他的逻辑是什么，没有一篇文章写过。当然，他们没采访过李笑来，没读过他的文章，怎么能解释这些问题呢？我想，与其让别人来批判他，不如由我这个熟悉他的人来吧。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;李笑来有太多想法和行为是不合常理的，我非常理解他会被人们误会。从我认识他的第一天，就明白了他肯定是个有争议的人物。我们第一次见面是在一家川菜馆吃饭，那顿饭至今难忘，因为桌上有个人点菜的方式太奇怪了。我们一共4个人，这家伙点了8份豆干，4盘回锅肉，正常人哪有这么点菜的？他的逻辑倒是很简单，既然这个好吃，为什么不多点几份？全然不顾普通人点菜的习惯是不会点重复的菜。这个人就是李笑来。我想了想他的逻辑，觉得确实是合理的。但是大多数人未必会接受这种逻辑，更不会仔细考虑是不是他这样做有道理，只会觉得他太不正常了，更别说之后几年他展现了更奇怪的点菜法：请8个人在“美炉村”吃饭，直接点了8条纸包鲈鱼，每人一条，其他什么菜都没点。&lt;/p&gt;

&lt;p&gt;一直到今天，李笑来做过的事情我都是大致能理解的。虽然他做的事情有一些我认同，另外一些不认同，但无论是否认同，我都理解他到底为什么这样做。所有的事情都跟他点菜一样，看上去离经叛道甚至荒唐，但如果真的认真仔细推敲，又合乎逻辑，产生这种错位只是因为他对很多事情看法甚至很多东西的基础概念，都是不同于大多数人的。&lt;/p&gt;

&lt;p&gt;在那一顿饭之后，我们就成了很好的朋友，经常在一起聊各种想法，也谋划做各种项目。认识之后没多久，笑来专门跑来我家，跟我讨论一个他想做的项目，这个项目并不是什么赚钱的项目，而是写一本计算机普及教材，让人们可以更简单的学习如何使用计算机和网络。他相信每个人都应该认真学习如何使用计算机和上网，最好能学会写程序。今天看来这是理所应当的事，但10年前，很多人家里甚至是没有计算机的。那时候想教会所有人使用计算机，看起来也是一个挺不正常的想法。几个月之后，笑来迷上了Linux，于是他又有了一个新想法，收集那些已经淘汰的计算机，把它们装好Linux配置好，然后把这些机器免费送给买不起或者不愿意买计算机的学生们用。这样可以帮助他们更容易学习计算机和上网，这和前面写教材的思路是一样的，就是，无论如何，应该让每个人学会计算机，这对于这些人至关重要。他当时酷爱Ubuntu，于是给这个项目起了个名字，叫做“有奔头”，意思就是，如果你学习计算机，学会用Linux，不管你现在什么状——失业也好，没上过学也好，贫困生也好——你的将来一定是有奔头的（有奔头是个中国北方常用词，意思是有希望、有前途）。&lt;/p&gt;

&lt;p&gt;当年笑来写的第一版计划书，我从邮箱里面找出来截了个图。（其他人名字我打了码，因为没征求他们许可。）&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UWyTBKo5Q4EES2BTTou2T518ux3fvHfVAicic33CDZrq3ZUvaXWdjic4ZJPniaPKanAn6uprVSnLSnENw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;1.0958005249343832&quot; data-w=&quot;762&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从今天的情况看，他的想法完全正确，如果2006年学会了使用Linux和写程序，在之后的10年里面找到一份高薪工作轻而易举。只不过那个时代相信这件事的人仍然不多。这个项目后来也没成功，有很多现实的因素困扰它，包括如何设立一个非盈利组织等等现实问题，总之，最后我们没能做下去。&lt;/p&gt;

&lt;p&gt;2007年左右，我们还发生过一次激烈的争论。笑来坚决认为每个人都应该学会投资股票，甚至，每个家长应该给孩子开一个股票帐号，让孩子从学就学习。我觉得太荒唐了，投资股票是高风险活动，成年人也不一定能适应，更别说是让孩子做，更何况万一赔钱，有很多人是经受不起那种损失的。笑来完全不同意的我看法，他认为越是有可能遭遇损失，越应该尽早开始，因为早的时候人可以调动的资金很少，损失不会太大。家长给孩子开个帐号，放1000块钱，已经足够让孩子去熟悉金融操作了，全损失也不过1000块，但是这个过程学习到的知识，包括因为损失带来的心理建设，都是受益终生的，比到成年之后一次损失50万对人生的影响小的多。那一天我甚至花了几个小时时间试图用数学证明他的想法是错的，但他不为所动。坚决认为人必须从尽量小的时候学会投资，而且必须是自己教会自己这件事。&lt;/p&gt;

&lt;p&gt;笑来对“教自己学会某种知识”这个年头有无穷的执念。他非常相信，人可以通过自学掌握各种知识，只要你有正确的方法。他自己确实也是这样做的，他教了自己英语，之后成了新东方被打分最高的英语老师。他教了自己计算机，建站写文章，成了那个时代中文文章流传最广的人之一，他教了自己统计、分析和概率，写下了销量惊人的英语词汇书《TOEFL核心词汇21天突破》，后来，他终于教了自己计算机，还真的做出来了一个分享科技产品的网站KnewOne.com，后来还拿到了创新工厂的投资…当然，他还教了自己如何投资，并且在股票上小赚，最终在比特币上成就了传奇。&lt;/p&gt;

&lt;p&gt;到今天为止，他的很多行为仍然是这种理念的贯彻。比如，他写了一本书，叫做《把时间当做朋友》，试图教会人们如何换一个方式看待时间和自己的成长，这本书成了畅销书，这并不意外。但今天很多人并不知道，这本书出版之前，其中所有内容，就都公开放在笑来自己的Blog上，当时笑来的blog是中文互联网上订阅最多的blog之一，目标读者都可以免费阅读这些内容。出版了一段时间之后，他更是把排版好的电子书直接公布在网上。这同样也是普通人不会做的事情，有几个人会把自己正在出售的一本畅销书书直接免费公布了的？但他就是会这样做的人，他希望更多人学会这些方法，这是他认为最重要事情，至于他从里面赚多少钱，那反而不是最重要的。&lt;/p&gt;

&lt;p&gt;李笑来有太多的行为不合普通人的逻辑，对于一个完全不理解他的人，用阴谋论解释这一切也不奇怪，毕竟阴谋论总是最流行。比如前几天有一篇文章，试图把李笑来10年来干过的所有事情全连到一起，来证明这些都是事先设计好的阴谋，甚至认为李笑来投资了Linkedin，分答，得到…等等一系列公司，这种说法未免太夸张了，让他这一说，李笑来简直成了巴菲特。当然，笑来同时涉足了大量的领域，同时做很多件事情，这是真的，虽然这看起来也不太合常理，但这确实就是他的生活理念之一：人不能同时只做一件事，那样太浪费了。如果你从他的角度看，把自己的时间看作最宝贵的资源，人生唯一不可再生的资源，花费时间就相当于进行投资，那么同时只做一件事来消耗这种不可再生的宝贵资源，确实太浪费了，所以他永远在同时做很多件事。他一直在试图用自己的行为和其他人证明，同时做很多事是合理，并且可以取得成果的。这个观点有多难以被认同呢？甚至在我家都有分歧，我认为笑来是对的，西乔则不认同，我甚至没法说服她。&lt;/p&gt;

&lt;p&gt;这些年来，也许是觉得光写文章已经不够了，他就试图亲自做各种事情，做出榜样，趟出路来，这样就更可以说服别人：“你也可以这样做”。长达10年来，笑来一直着迷于知识的分享，这也是现在看起来古典的互联网精神。他自己一直致力于此，写作，分享，甚至免费分享。在这个基础上，他一直在寻找一种让提供知识的人（可以理解成作者）更方便、更低门槛获得收益的办法。这种驱动力让他去测试了收费群，之后又测试了得到专栏。他测试收费群的行为就是被媒体报道的“情非得已”和那些以人名命名的一系列公司，那时候他几乎劝所有认识的，有写作能力的人开一个这样的公司，然后一起来尝试知识经济的各种可能性。后来罗振宇做了得到，他也立马去尝试，希望通过得到订阅情况测试市场规模，进而让作者们理解“这种方式是可行的，你可以教自己这样做”。如果能理解到他背后的动机，就能理解他的逻辑，这一件件看起来毫无关联的事情，背后也确实没什么关系，它们之中唯一的关联，概括起来简直是一句鸡汤：让更多人可以低成本学会更多的东西。&lt;/p&gt;

&lt;p&gt;最近产生了很多争议的Press.One也是如此，我相信很多骂这个项目的人，并没有去试图了解它到底是什么。恰好，知识分享平台也符合我一直以来对互联网的期待，于是几个月之前，我跟笑来聊过不少。如果你读过我上一篇文章的话，应该可以理解现在很多早期互联网用户，都认为目前互联网发展的方向已经出问题了，互联网已经被几家大公司垄断了。笑来也是这么认为的，他希望通过区块链技术来改变它，他想提供一个建立于区块链之上的内容分发渠道。读者可以通过电子合约来和作者签署订阅关系，免费或者支付费用。这个平台有一个最小可用的原型，就是steem.it，这个社区已经运转了一年，它证明了这种想法是可以被实现的。（顺便说一声，steem.it也是笑来投资的，他对自己相信的事情，一直都肯冒比其他人更大的风险）。&lt;/p&gt;

&lt;p&gt;考虑到技术细节，现在的以太坊网络承担不了这种应用。如果你看过以太坊的代码和实现就会知道，它虽然是了不起的发明，但是里面有诸多限制没法解决。比如最容易感受到的，每个block有gas限制，这导致了它无法负担大规模应用，数据都存储在链上，如果用来分发内容，会造成链急速膨胀，最终变得不可用，更别说负载图片和音频等等多媒体内容，它的交易速度也不够高…&lt;/p&gt;

&lt;p&gt;总之，这些限制导致了以太坊虽然可以做产品原型，但是没法完全独立负担一个复杂的应用。要想做一个内容分发产品，从区块链技术本身到产品实现 ，都有太多的工作要做。这是一个挺大规模的项目，我不确定它最终是否能实现目标，毕竟你没法在事先担保任何产品可以成功，哪怕它再好再伟大再创新，也没法预测。但是我知道它有完善的产品设计和技术逻辑，并不是空气，下面放一些我们6月份聊起这件事时候的截图。&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UWyTBKo5Q4EES2BTTou2T51OwoK74P5iaH6DxavG8FD74zr9ROqOViax0qJlICflBOHo3Qn3ubdaeVA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;1.5833333333333333&quot; data-w=&quot;720&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UWyTBKo5Q4EES2BTTou2T51r4PHsEByN7UiaFTk5KD9hAQo826ldkHIJF65v8LDSfZ5WSQXQvdwsyg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;1.5819444444444444&quot; data-w=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从比特币开始，笑来一直是负担最大风险的人。他在所有人都不看好比特币的时候，用自己的储蓄购买它，他亲自投资了若干项目，希望能让整个生态完整。当然，他早期的冒险，随着比特币价值的上升也得到了回报。笑来总是相信，别人可以和他一样取得这样的成就。&lt;/p&gt;

&lt;p&gt;我觉得他未免太理想主义了，我认识了他这么多年，同样是最早关注比特币的人，但到今天，我可以不怕丢人的坦白，我在比特币上没赚到任何钱。我在烤猫上损失掉了几乎全部的比特币，这也是李笑来被人们批判最多的事情之一。但是我并不会因此怪他，投资决定是我自己作出的，我是一个成年人，自己做了决策，自己承担责任，怪不着其他人。何况，烤猫的失败也的确不能怪李笑来，对于他来说那也完全是个意外事件，他自己同样损失很大。但是在现实世界往往不是这样，房价跌了，会有人去砸售楼处。承担自己的责任和损失是困难的，人们总需要找个发泄出口。&lt;/p&gt;

&lt;p&gt;每一篇文章都列举李笑来成功项目，但是没有人提及过他的失败。当然，大批失败的项目没人能看到，人们总是拿看得到的那一面来评价。但是我知道，我知道并且参与过他很多个不成功的项目，从写一本书到英语教学网站…且不说这些已经看不到的东西，就说他买比特币的行为，当年在知乎上有一个关于李笑来的帖子，下面无数回复是嘲笑李笑来笃信比特币，甚至有“李笑来这个人最大的缺点就是太相信比特币了”，那时候比特币价格正在低点，笑来被嘲笑的非常凄惨。不过几年之后，比特币涨了，很多回答者悄悄跑去删了自己的回答。&lt;/p&gt;

&lt;p&gt;就算是他因为持有大量比特币而出名之后，仍然遭遇过很多失败，我还记得有一次另外一个朋友因为一个项目损失惨重，我去问他状况怎么样，他回答“我也损失很大，不过我承受能力比较强”。其实，这才是他在这些年身体力行尝试各种事情的原因，他认为自己承受力更强（事实上也是的，从心智到资产他都承受力都很强），所以他总是希望亲自尝试，承受这些风险。这当然也不是正常人的逻辑，以正常人的想法，别说他持有那个规模的比特币，哪怕只有他的1%，也可以退休了。按照正常人的逻辑，此时应该到南太平洋买个小岛，像我们所知道的那些富豪一样，快乐的度过奢侈的后半生，尤其是对于他这样的糖尿病人，何必那么辛苦呢？但这恰恰不是他的想法。他不仅自己不会这样做，还多次批评我躲在加拿大悠闲的养猫，不做点正经的事情，是巨大的浪费。几年来他多次劝我回国，到北京再一起做点事情，我曾经动心过，但最终还是放弃了。比起来北京的纷乱，我更喜欢北方雪国的清冷。&lt;/p&gt;

&lt;p&gt;如果让我来批判李笑来，我首先要批评的就是他过于理想主义。不是所有人都可以教会自己任何东西的，不是所有人都有他那样的自控能力，不是所有人都愿意和他一样把一个基本的概念想透彻。更不是所有人都可以同时做很多件事且都取得成功。恐怕大部分人，哪怕专心做好一件事都不容易。无论李笑来用什么样的方式试图教人们这样做，我仍然不相信有多少人能做到，这些注定都是少数人的事。这些年来，我看着他为了把这件事说清楚，想尽了办法。比如笑来多次提到一个词叫做 Serendipity ，意思是“意外的好运”，笑来坚信意外的好运可以创造，甚至发明了一套方法论，比如如何保持开放乐观和耐心…但是能把这些都做到的，只能是少数中的少数，更别说做到了还要等待好运到来…&lt;/p&gt;

&lt;p&gt;2012年，我眼看着笑来放弃了矿场项目，他想明白了挖矿太困难，决定直接花钱买比特币，当他买的越来越多的时候，我曾经问过他到底是怎么想的，除了我知道的对比特币理念的认同之外，还有什么动力驱动他这样狂买？笑来回答我：“有这样一个经济体的1%，那不是很酷的事吗？”为了追求这个目标，他当时几乎付出了自己全部积蓄。在那个时刻，这当然也是普通人无法理解的行为。他总是这样，身体力行的干着别人没法理解的事情，然后真诚的跟别人讲自己的理由和逻辑，希望别人也能理解甚至学习他。这么多年过去了，他一点也没变。&lt;/p&gt;

&lt;p&gt;认识笑来这些年，我真正相信了很多人生活在不同时空里面——这是一个浪漫的说法。更生硬的表达是：这个世界的分裂已经越来越严重了。不同的人群之间无论怎么做也难以互相理解。整个事情最讽刺的地方是，笑来这10年，甚至20年的努力，都是围绕着消除不同人之间在知识上存在的鸿沟，但最终，连他自己也没法被人们广泛理解。要想理解他复杂的理论和经历，学习和提高自己，自己决策参与冒险并且承担可能的损失……这些都太困难了，相比起来，骂他一声骗子确实简单很多。&lt;/p&gt;

&lt;p&gt;笑来比我岁数大不少，也经历过更多的事情。除了聊互联网和各种技术，我也经常请教他各种生活问题。很多事情我一筹莫展，他总是呵呵一乐，说这还不简单，我告诉你这样做。基本上他说的都对。有一次我问他，为什么总是知道应该怎么考虑这些问题？他说，嗨，因为我老嘛。&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UWyTBKo5Q4EES2BTTou2T51c1raY3RBVOCibkVpzqDajnIjJiaXukrvs5516ib7u04LHKyuO7RPoBVWQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;1.5779944289693593&quot; data-w=&quot;718&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但几乎每一次他提出太前瞻的项目想法，我都会说，“笑来，我觉得你说的这些没几个人能理解。”但是他总是回答我，“没事儿，我能讲清楚。”多少年来，我俩之间发生的每一次争论，都是笑来对，我错。这一次似乎是我对了，人们真的没法理解他，但是我一点也不想要这种“对”。&lt;/p&gt;

&lt;p&gt;李笑来，你这个天真的理想主义者。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;参考备注：&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0.4748322147651&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;标题图：Image used under Standard license from Shutterstock.com （这张图是我们付费购买的，转载也可直接使用，不用换掉它）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;

&lt;/li&gt;
&lt;li readability=&quot;0.85365853658537&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=2650741755&amp;amp;idx=1&amp;amp;sn=d53dc6d886288ae9d99e53c1de657fc6&amp;amp;chksm=beb2ed6689c56470497ffcdf810c900fee00770980801b1e0ad0b2fbab929e175ffeaa9717f4&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;互联网完蛋了，已经。&lt;/a&gt; 这是我的上一篇文章，这里面也提到了现在互联网的问题，明白了这个前提，就更容易理解为什么笑来相信区块链是在重建互联网。&lt;/p&gt;

&lt;/li&gt;
&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;本文来自霍炬的微信公共帐号“歪理邪说”，用微信添加 wxieshuo 公众号即可订阅。转载必须保留作者、公共帐号信息，内容必须与本文保持严格一致，不得修改/替换/增减本文包含的任何文字，不得擅自增加小标题、引语、摘要等。本公众号一切内容禁止摘编、衍生及演绎。&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 30 Sep 2017 23:10:37 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/XQrvPUnXkY</dc:identifier>
</item>
<item>
<title>做一个病毒卷土重来时代的幸存者</title>
<link>http://www.jintiankansha.me/t/vgN8vFZYw5</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/vgN8vFZYw5</guid>
<description>&lt;p&gt;出门了10天，没怎么看新闻。回家之后发现这几天出了好多大事，和我们最直接相关的应该是wannaCry病毒爆发事件。现在它已经不算热点了，于是我得以避开人们最惊讶的时刻，可以更冷静的思考一下这件事的产生以及影响，更重要的是，我们应该如何做避免这种事情发生。&lt;/p&gt;

&lt;p&gt;很多文章里面说用Mac会更安全，这是严重的误导，这种态度将来会把Mac用户害的更惨。2015年有过XcodeGhost（我写过文章：墙、感染、信任和欺骗，但是被删掉了。后台回复“感染”，可以看到那篇文章。 ）影响了iOS，2014年两次严重漏洞，心脏滴血和Shellshock，Mac都没跑掉，而windows倒是影响不大。（关于心脏滴血，我也写过文章 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=202751465&amp;amp;idx=1&amp;amp;sn=8b6459dba93203cfac5884f4c69c2b50&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data_ue_src=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=202751465&amp;amp;idx=1&amp;amp;sn=8b6459dba93203cfac5884f4c69c2b50&amp;amp;scene=21#wechat_redirect&quot;&gt;到底谁才是真正的隐形战友—开源软件和OpenSSL的真实故事&lt;/a&gt; ）就算用比特币勒索的病毒，Mac也曾经出现过，叫做KeRanger。比起这些，wannaCry的病毒影响确实更大，传播性更强，但主要问题不在于什么系统更好一点，而是应该弄清楚发生了什么，以及如何应对。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;为什么病毒又重新成为一个问题？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我相信很多人看到这个事件的新闻，都会问这个问题。为什么病毒又重新成为问题了？很多年前，使用计算机总是要担心病毒破坏文件，让系统无法系统甚至破坏硬件。但是这些年，似乎没什么病毒作怪了。这是为什么？&lt;/p&gt;

&lt;p&gt;病毒的存在始终依赖于系统和软件的漏洞，是这些年软件质量提高了，没什么漏洞供病毒使用了吗？我认为最直接的原因应该是黑产行业的兴起，从而使直接破坏文件，影响用户使用的病毒行为不再有价值。很多年前，人们会使用漏洞制作病毒，这种行为更多是为了恶作剧或者在地下世界出名，以及满足自己的兴趣，而不是为了获得实际利益。黑产行业形成之后，每一个漏洞都是有价格的，发现漏洞之后更好的选择是卖掉它们。&lt;/p&gt;

&lt;p&gt;收购漏洞的组织身份多样，从地下组织到企业甚至政府机构都有，但是他们的共同点是，不希望利用漏洞影响用户正常使用计算机，尽管他们有不同的使用这些漏洞的方式。比如地下组织可能会利用漏洞植入木马，获得用户数据再去卖掉获利，企业会用于提供付费咨询和修补解决方案，政府组织，比如这次的漏洞持有者NSA，会把它当作武器储备。但是如果引起大规模用户难以使用，造成巨大的影响，这个珍贵的漏洞就废了--现在我们看到的就是，wannaCry造成了巨大的经济损失，但是其制作者实际受益并没那么大。这个漏洞也迅速引起重视，它失效了。&lt;/p&gt;

&lt;p&gt;所以最近这些年一直没有大规模病毒爆发事件，木马、流氓软件成了计算机上的主要威胁，无论木马还是流氓软件，目的都是尽量久的存在在这台计算机上，不要暴露，不要影响用户使用，这样才能避免被清除，获得更有价值数据，它们顶多占用点系统资源或者改下浏览器首页获得点流量，但不愿意破坏用户文件或者系统。&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UUYGP2HJmXrH3qmy1ZZZya0ENg4NhrISC0u1q7r779Z6AncNjAHcyVwGgdvhRQgwTOgXbV27zLicOw/0?wx_fmt=png&quot; data-ratio=&quot;0.6607669616519174&quot; data-w=&quot;1017&quot; /&gt;&lt;/p&gt;

&lt;p&gt;直到最近这几年，开始有小规模的基于比特币勒索的病毒出现，去年Mac上出现过KeRanger，也是锁硬盘勒索比特币，2014年windows上出现过CryptoLocker，这些案例证明了通过比特币，可以安全的从被害个人手里直接获得利益，并且被难以追踪到。再加上NAS的漏洞库被泄漏出来，终于有了这一次的wannaCry。在这以后，大规模的勒索病毒会不会出现很难说，但各种小规模的病毒肯定会比过去多。病毒+虚拟加密货币的模式会重新回到人们视野中，成为一个常见威胁。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Mac比Windows更安全吗？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当然不是。所有系统都有漏洞，更简单点说，代码中出现漏洞只是一个概率问题。无论什么公司，代码到了一定数量，就一定会出现严重漏洞，这是不可避免的。对于很多非技术行业的人会觉得这不可思议，但这就是现实，以目前人类的能力，无论投入多大成本，仍然做不到消除bug。也许未来人工智能发展的足够强大，能提供更好的自动代码审查工具，避免出现致命bug。但就算到那个时候，也会有大量历史积累的代码中存在的问题难以解决。&lt;/p&gt;

&lt;p&gt;比较单独对应版本的OS X和Windows，OS X应该是更&lt;strong&gt;不安全&lt;/strong&gt;的系统。无论是safari、iTunes还是系统本身，以及内置的普通用户不怎么接触的开源软件，漏洞数量和危险程度，比起Windows只高不低。且不说苹果一直不怎么上心的OS X，就说苹果的命根子iOS，每个版本都是发布不久就被越狱，而越狱行为本身就是通过系统漏洞完成的提升权限和破解过程。连iOS都始终有这样的漏洞，OS X怎么可能安全呢？&lt;/p&gt;

&lt;p&gt;更糟糕的是苹果补漏洞的速度远比不上开源社区，这意味着一个苹果用户，如果没有自己编译代码修开源软件bug的能力，就没办法及时获得安全补丁，至少会落后于Linux主流发行版本好几天。在这段时间内，用户会面临巨大风险。无论是Linux用户还是单纯使用商业软件的Windows用户，面对的状况都还好一些。&lt;/p&gt;

&lt;p&gt;我从cvedetails抓了OS X和 windows 10的漏洞统计做对比。注意因为统计方式的问题，OS X被算作一个产品，Windows不同版本算不同产品，这样分类不合理，但只对比 OS X的2015-2017大致可以参考，OS X的问题还是更严重一些的。cvedetails的数据很完整，但是分类和统计做的太糟糕了，它的Top 50排行也因为这个原因导致意义不大&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UUYGP2HJmXrH3qmy1ZZZya0mCfzGxTjDt82gVLzGwp0QBALIpOtQ0WPZAB3kxzXN71icFP0mjL5NTw/0?wx_fmt=png&quot; data-ratio=&quot;0.6560077519379846&quot; data-w=&quot;1032&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UUYGP2HJmXrH3qmy1ZZZya03ce8fDDf2mWANXJYmlPLZtXibe8xyMjIekVkL8ficb5M0KDYQt8d7j4Q/0?wx_fmt=png&quot; data-ratio=&quot;0.31848983543078413&quot; data-w=&quot;1033&quot; /&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;那么为什么没有OS X用户出现大规模被病毒骚扰的事件？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;之前说过，从漏洞到病毒或者木马，都和利益直接相关。OS X用户占1%左右的份额，实在不值得骚扰，更不值得费劲勒索。而windows XP这种古老系统仍然在无数个人、企业甚至系统中使用，显然是更好的获利渠道。从这个角度说，OS X用户更不应该过于乐观，等到有人相信了“苹果用户付费能力更好”，那时候就算1%也会有人试图通过勒索获利，如果最终这个观点真的被证实了，苹果用户付赎金更爽快，那之后就是无穷无尽的灾难。&lt;/p&gt;

&lt;p&gt;除此之外，功能越多，就代表其中存在漏洞的可能性越大。一台断网，放在法拉第笼里面的计算机，别管用什么系统，都挺安全的，《疑犯追踪》里面就有这么一段剧情。除了某些特殊用途，这样的计算机虽然安全，对正常用户完全没意义。&lt;/p&gt;

&lt;p&gt;Windows系统提供了更多功能，出现漏洞的机会也就更大。除了系统本身，运行于其上的软件更是造成安全问题的来源。比如这次的问题，是来自文件共享的早期协议samba 1，这是很多办公环境内网不得不有的功能，因为还有大量早期开发的软件建立其上，一直没有升级。这些用户也就没法升级到不兼容这种旧协议的新系统，最后成了被攻击的目标。OS X缺乏足够办公辅助应用，功能是不完全的，软件和服务少，漏洞也就少。主要使用OS X办公的团队通常依赖互联网服务完全办公流程，那些依赖自己提供的内网服务的企业，就只能使用Windows了，这也是没选择的事。&lt;/p&gt;

&lt;p&gt;所以，与其迷信什么系统更安全，不如理解漏洞是不可避免的，这样才能做好预防措施。实际上，严重漏洞还不仅仅出现在软件厂商中，5月1日，Intel发了一个更新，修补了一个在其芯片上7年之久的严重漏洞，通过这个漏洞，可以绕过操作系统直接控制计算机。连cpu都有问题，纠结哪个系统更安全就更没意义了。另外，这也不是Intel cpu第一次出漏洞，前几年也出过好几次了。AMD cpu用户也不用高兴太早，AMD一样出过好几次类似问题。&lt;/p&gt;

&lt;p&gt;所以，使用什么操作系统只是一种个人偏好，无论使用什么系统，都应该做到这些:&lt;/p&gt;

&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;-2&quot;&gt;&lt;li&gt;
&lt;p&gt;使用最新的软件 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;及时更新系统 &lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;为自己制订一个恰当的使用策略 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备份&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;前两个不用多说，最新的操作系统都能比较好的解决这个问题。Windows 10不惜得罪用户也要强制更新系统，虽然弄出来很多让人哭笑不得的奇葩案例，但是这种强制更新是必要的，它可以有效降低用户遭受严重伤害。微软吃了这么多年亏，终于狠下心来做了这件事。系统维护对于安全性相当重要，就算是公认安全的OpenBSD系统，如果常年没人维护，一样不堪一击。&lt;/p&gt;

&lt;p&gt;前面说过，很多企业有大量老旧软件没法更新，只能停留在旧的系统上。这种情况就需要制订合适的使用策略。比如限制使用这些旧系统的人数，凡是不依赖旧软件的用户，应该尽量升级到新系统。必须使用的，如果有可能的话，应该把这些软件隔离在虚拟机系统里面，在虚拟机内部使用旧版操作系统，外部仍然可以升级到最新系统。应用这些策略，就会让旧软件和旧系统带来的威胁降低很多。顺便说一句，Windows 10自带的Hyper-V虚拟机系统已经相当完善，性能也很好，完全可以做日常应用，大多数Windows用户没理由不升级到Windows 10了。&lt;/p&gt;

&lt;p&gt;结合虚拟机应用，可以制订一些简单的使用策略来提高安全性，比如某些软件永远运行在单独的虚拟机里面等等。另外，对于所有非官方商店下载的应用都要验证签名，这些都是很好的习惯，可以躲过大部分常见灾难。这里也需要注意，虚拟机并不是完全可靠，前面说的Intel和AMD历史上都出现过的bug之一就是虚拟机系统下的权限提升漏洞，何况有“虚拟机逃逸”攻击，即让虚拟机内的程序越过虚拟机，获得到主机上允许的权限。没有绝对安全的方案，但合理规划使用虚拟机，还是比不使用好很多的。&lt;/p&gt;

&lt;p&gt;最值得投入的是备份。有名言曰：“冗余不做，日子甭过； 备份不做，十恶不赦！” 可惜这句话主要在系统管理员和工程师人群中流传，普通用户理解不了备份的重要。&lt;/p&gt;

&lt;p&gt;大部分用户是没有备份习惯的，这次的病毒事件也说明了这一点，别说个人用户没有，很多企业用户也没有。就算不考虑病毒造成的伤害，平时人为的误操作或者硬件故障，一样会导致资料损失。一个可靠的备份方案可以解决所有问题，怎么强调其重要性也不过分。在这方面，无论OS X和Windows都提供了一些基本工具。&lt;/p&gt;

&lt;p&gt;OS X提供的Time Machine，它的优点缺点都很明显。优点是简单易用，这也是大部分苹果出的软件的优势。缺点，是不够可靠，也达不到工业级需求。无论是老旧的HFS+系统限制，还是苹果的封闭造成无线备份必须使用专有硬件（当然有其他解决方案，但是配置麻烦），以及无法进行多副本的异地备份等，这些缺点都让Time Machine只能成为勉强可用的备份方式。&lt;/p&gt;

&lt;p&gt;Windows提供了好几个方案，针对系统本身的系统还原，针对文件的shadow copy和File History，其中File History类似Time Machine。优点缺点也差不多。&lt;/p&gt;
&lt;p&gt;如果想要一个更好的解决方案，开源的bacula是一个好选择，它是跨平台的，无论OS X还是Windows都可以用，功能也足够完善。&lt;/p&gt;

&lt;p&gt;除了选择软件，更重要的是把自己的文件做好规划，划分重要程度。其实每个人真正来自自己创造，不可恢复的文件总量不会太大，这些文件才是最重要的，一旦失去就无法再获得，应该列为最高优先级。操作系统本身虽然恢复和配置起来比较麻烦，但并不是无法获得的，优先级反而低的多。Time Machine把系统和文件混在一起备份，浪费时间和空间，也限制了备份方式的多样性，算不得好方案。&lt;/p&gt;

&lt;p&gt;我自己使用的备份方案比较复杂，虽然可以满足我所有需求，但是它本身也是需要维护的，使用成本不低。具体方案我附在文末，供有兴趣爱折腾的同学参考。&lt;/p&gt;

&lt;p&gt;从软件更新到备份，无论是个人还是企业，这里面都隐含了一项必备的成本，即维护成本。在过去的几十年里面，计算机变得越来越易用，功能也越来越强大。但是表面上的界面友好，掩盖了它实质上的复杂性，计算机本身的灵活性导致它不可能成为电视那样打开即用的家电，而是需要维护的高复杂性产品。如何维护它，又成了一项必须投入时间学习的技能，这种技能往往被忽略，它成了一种隐含成本。而且随着智能家电越来越多，电视也不是打开就用这么简单，它也涉及到了升级，划分网络管理等问题…对于一个家庭，越来越多智能设备被连入家庭网络里面，所有设备和网络都需要维护，维护成本反而越来越高了。&lt;/p&gt;

&lt;p&gt;大多数家庭买一个新设备，或者大多数企业开发一个新软件的时候，通常只考虑到它的功能和方便性，很少考虑维护成本。运维这个隐形成本始终在积累，早晚有一天会爆发，并且造成巨大的伤害。这次病毒事件只是这种观念长期积累的必然结果，它一定不是最后一次。&lt;/p&gt;

&lt;p&gt;最后两个希望：&lt;/p&gt;

&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;2&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;希望所有人都学习使用git，并且基于git的思路来设计工作流。git不仅是版本控制系统，更是分布式协作思想的实践，基于分布式协作，可以设计各种复杂的工作流程，满足各种需求。这在技术领域已经进行了多年实践，效果非常好。这么好的工具绝不应该只限于技术领域，所有行业都值得使用它。分布式协作意味着参与协作的人都有一份完全副本，连同服务器，天生产生了多个备份。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;希望有综合提供维护和备份方案的服务商出现。对于个人和家庭来说，几乎不可能做到人人都弄清楚这些复杂问题。最终还是要依靠收费服务来解决问题，就像汽车一样，并不是人人都知道汽车工作原理，但至少知道定期送去专业机构做维护。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;p&gt;我的备份方案如下。&lt;/p&gt;

&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;9.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;备份主机是一台安装了FreeBSD系统的NAS ，用ZFS把硬盘组成raid-Z做为存储系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;在各计算机和NAS上安装syncthing（https://syncthing.net)，设置需要备份的文件目录和NAS同步，这样就把全家各台机器，包括虚拟机内部需要备份的文件都放到了NAS的存储上。syncthing本身支持比较简单的文件版本，但是我没使用这一特性，主要使用它的同步功能。文件版本通过ZFS的snapshot功能实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;开源版本的ZFS没有原生加密功能，而对于备份系统，加密是必须的。所以我在FreeBSD上使用PEFS做为加密方案，缺点是加密之后会使得ZFS压缩功能几乎失效，不过无所谓，硬盘空间并不值钱，何况前面说过，规划好需要备份的重要文件本身也不会太大。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;使用ZFS快照并且做远程同步，我所知道的最好工具是 zrep （http://www.bolthole.com/solaris/zrep/）。在我的系统上，使用zrep，每10分钟对已加密文件系统做一次快照，并把快照同步到异地节点。同步节点同样需要使用FreeBSD和ZFS。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;我设置了两个快照同步节点，一个较快的节点位于附近城市，一个较慢的节点位于另外一片大陆。 我实际使用案例中，这两个节点分别位于蒙特利尔和北京。 加上我自己家里的NAS，三个节点可以保证在人为灾难（硬件损坏，火灾）和自然灾害（地震，水灾）等影响下仍然至少存活一个备份，是比较可靠的方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;最后需要提醒的是，用作备份的ZFS系统，只应该使用BSD/Solaris，其他系统上ZFS的移植可靠性没那么高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;前面提到的 Git 的思路和工具使用方式，专门学前沿技术的硅谷学习平台 Udacity 上就有免费课程，链接我放在“阅读原文”里。凡是涉及多名内容贡献者的项目，或是需要有效版本控制的东西，用 Git 的思路去处理都是非常重要和有益的。这也是为什么 Github 几乎是所有程序员都会用到的平台。另外，Udacity上面还有很多有意思的课程，可以搜索一下找自己有兴趣的内容来学。&lt;/p&gt;

&lt;p&gt;顺便广告一下，Udacity这两天和Facebook、Tableau 合作推出的“数据分析师”认证课程也在限时报名中，想从零开始学习如何洞察数据，或者想继续提升成为Facebook认证数据分析师的小伙伴可以关注下。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/FGHkyMt13UUYGP2HJmXrH3qmy1ZZZya0zVllogRrHDsf1dIOly1WG0jwV3ibwxtuw4SmBict2QdtbA8vzaibkFh8Q/0?wx_fmt=jpeg&quot; data-ratio=&quot;0.5&quot; data-w=&quot;720&quot; /&gt;&lt;/p&gt;
&lt;p&gt;点击“阅读原文”访问 Udacity 《如何使用 Git 和 GitHub》免费课程 ↓&lt;/p&gt;


&lt;hr /&gt;
&lt;p&gt;参考备注：&lt;/p&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;本文来自霍炬的微信公共帐号“歪理邪说”，用微信添加 wxieshuo 公众号即可订阅。转载必须保留作者、公共帐号信息，内容必须与本文保持严格一致，不得修改/替换/增减本文包含的任何文字，不得擅自增加小标题、引语、摘要等。本公众号一切内容禁止摘编、衍生及演绎。&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 30 Sep 2017 23:10:35 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/vgN8vFZYw5</dc:identifier>
</item>
<item>
<title>是真的，我基本已经不再用苹果的产品了</title>
<link>http://www.jintiankansha.me/t/WofkSHYv86</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/WofkSHYv86</guid>
<description>&lt;p&gt;昨天，应苹果要求，微信停止了iOS平台用户对公众号作者的赞赏功能。我读很多公众号，经常给别人赞赏，我也写公众号，也收到别人赞赏，两方的体验都有。对于我来说，无论给出赞赏还是收到赞赏，它最大的价值始终是“好玩”，而不是“赚钱”。我相信大多数公众号作者并没指望靠赞赏发财，我始终认为这个功能是“发红包”的延伸，它代表的是情感交流，而不是钱本身的数量。我一直还希望微信能有一天提供“赞赏读者”的功能，这样我就可以通过这种方式给留了比较精彩评论的读者发个红包。&lt;/p&gt;

&lt;p&gt;很多人把这件事评论为“是否遵守游戏规则”，我反对这种说法。把这件事放在规则上讨论是不合适的，它实际的复杂程度远远超过条款本身，尤其是在中国复杂的金融和支付环境下。&lt;/p&gt;

&lt;p&gt;如果非要谈规则，首先不遵守规则的肯定是苹果，而不是微信。按照苹果的说法，公众号赞赏算购买虚拟物品，所以必须通过苹果的应用程序内购IAP进行。我先不讨论这个说法有没有道理，就算苹果厉害，他说了算，但让微信去接入苹果内购来给公众号作者赞赏，这个要求很可能违反了央行的监管要求。如果你还记得微信支付兴起那几年的新闻，应该还会记得微信被央行“勒令整改”过好几次，都是因为微信支付下端接了其他具有支付能力但没支付牌照的平台。现在的情况几乎一样，如果苹果没有悄悄收购一家牌照齐全的公司的话，那就和几年前情况一样，苹果自己没有第三方支付牌照，而是通过和其他支付方合作完成。所以苹果想把赞赏收入放到IAP，自己拿走30%分成，剩下的和微信结算，微信再把赞赏分给公众号作者，这就和当年微信被要求整改的情况一样了，央行不允许这么做。苹果要求使用内购完成赞赏这个思路从根上就行不通。同样不论央行这个监管需求是否合理，但既然以前发生过这种事，苹果提出这种要求本身就是不尊重规则。&lt;/p&gt;

&lt;p&gt;其次，苹果的应用程序内购根本不是金融级别的系统。它没法对账，没法处理坏账，极长的结算周期，这些都只是在网上支付非常不发达时代弄出来的权宜之计，那个时候它的目的很简单，让用户能掏钱从开发者手里买虚拟物品。在这种粗糙的目的下，很多要求可以放宽，比如出现坏账或者丢单，那开发者就补一个虚拟物品给用户就行了。虚拟物品本来也没有成本，不会造成什么真正的损失。但到了今天，微信支付提供的是金融服务。无论公众号赞赏还是发红包，它包装的实际上是“个人转账”这个功能，而不是“购买”。个人转账要求就高了，假如说A转账给B一笔钱，比如20元。那这20元钱必须从A帐号减去，加到B帐号，这里面一点错也不能出。这条交易不能重复，不能丢失，也不能出错。我们可以想象一下我们在银行完成一次转账服务是什么样的，银行给出转账回执，这笔转账就应该完成了。如果出错，那银行要负担损失。但是苹果从来不负责损失，做过内购相关开发的人都知道，一切损失都是开发者自己负责的。那好了，如果用内购来处理公众号赞赏，少了钱苹果不负责，微信要负责。这种不对等的事情怎么可能干？&lt;/p&gt;

&lt;p&gt;苹果回应微信关闭赞赏通知“所有开发者规则一致”，这更没道理了。要么苹果的人至今没弄明白公众号的赞赏是什么，要么就是故意捣乱。但据说双方为此已经磋商了将近一年，苹果搞不懂赞赏实际上是转账服务的可能性不大，毕竟苹果不应该和它的盲目拥护者那么糊涂。这种行为能叫尊重规则吗？苹果非要把赞赏理解成“购买虚拟物品，解锁功能”，这种胡乱解释政策的方式是侮辱他们自己制订的规则，而不是尊重规则。这样的问题还可以继续问下去，如果赞赏算购买虚拟物品，红包算不算？发红包是付钱之后在屏幕上能出现一个“红包”图案，别人可以从里面分钱，这比赞赏更符合“解锁功能”的定义，毕竟你不支付，就不会“解锁”让其他人抢红包的功能。继续说下去，任何支付工具都不能在Appstore上架了，全都可以这么胡扯到解锁功能上， 简直是天大的笑话。以“尊重规则”为苹果辩护的人，混淆了规则和规则解释权，这是两个完全不同的东西，现在的情况是苹果滥用解释权，而不是别人不尊重规则。 &lt;/p&gt;

&lt;p&gt;前面说了，苹果的应用程序内购是很多年前的功能，那时候它是创新的。但放在今天看，任何一家做支付的公司都比它做的好得多，无论是美国、中国或者是印度公司。至少这些做支付的公司都能保证比苹果低的多的错误率，以及更实时的对账功能。不允许这些公司使用更好的支付手段，这是在破坏创新，同时也是在降低自己的用户体验。很多年前，苹果是靠技术和模式上的领先来取得优势，它提供了更好的解决方案，别人不能提供，人们愿意使用，从而保证了它可以获得高额利润。而这些年，它变成了用优势地位获取优势，苹果和很多公司冲突过，比如和amazon的冲突，最终amazon也把iOS版本kindle的买书功能取消了。用户花更贵的价钱购买iPhone，最后得到的功能反而比别人少。我承认苹果的对app的严格监管有价值，但是具体到amazon和微信这个案例上，这两家公司提供的功能对用户没有任何伤害，顶多是对苹果的某些产品优势地位略有冲突，这是苹果的问题，不是用户的问题。但在两个案例中，苹果都提出了不可能实现的要求，并且决不妥协，宁可等对方砍掉功能，最终伤害用户的体验。&lt;/p&gt;

&lt;p&gt;这张截图来自豆瓣，但实际上你几乎可以在任何社区看到这样的问题。&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/FGHkyMt13UXj6t7eETRq9RtIiaJJegJNZnDyxwYlia0gIhI9Ber3zh1GQTnBe1b28w9kjibELSUkekiarGriaSXY6wA/0?wx_fmt=png&quot; data-ratio=&quot;0.122568093385214&quot; data-w=&quot;514&quot; /&gt;&lt;/p&gt;
&lt;p&gt;普通用户怎么也想不明白，为什么直觉上应该能完成的功能，实际上就是完成不了。苹果可以指责amazon不遵守它的规则，但amazon只是个卖书的，书也不是它自己写的，苹果要分走30%并且不承担坏账和错漏损失，和微信这次遇到的事情一样，这种条件对方无论如何也没法接受。从内购出现到今天，已经好几年时间了，苹果对这个功能没有任何提升，不去解决它存在的bug和30%这个分成对于某些行业的不合理之处，反而一次又一次滥用解释权去打压其他公司，这就像是拿着自己用户当人质，让其他公司付一个无论如何也付不起的赎金，对方满足不了这个条件，结果苹果就把自己的用户撕票了。&lt;/p&gt;

&lt;p&gt;很多年前，iPhone的质量比其他竞争者好的多，那个时代苹果无论怎么做用户都觉得可以接受，因为它的领先地位太强了，整体领先100分，就算某些地方降低10分，总体看来仍然可以接受。但到现在，事情早就不是这样了。就我自己而言，我已经用了一年多Android手机了，起初是Nexus 5，后来换了一部魅族。迁移到Android之后，我没遇到过任何问题，还时而发现一些更有意思，更有创意的Android特有功能，以及一些只有Android才有的app。这些都让我感觉没必要再去买iPhone了，就算不谈价格我也没觉得它还有什么优势。加上这次强迫微信取消赞赏功能，更加让我觉得换到Android是一个正确的选择。我已经烦透了苹果教给我如何用手机了。在强迫用户做什么这件事上，虽然腾讯也做了不少，但毕竟微信是个免费服务。而iPhone，它是市场上同类产品里面最贵的一个，这就更没法让人满意了。&lt;/p&gt;

&lt;p&gt;同样的事情还发生在苹果笔记本上。我是2006年从FreeBSD系统换到OS X的，那时候Macbook还是PowerPC的架构，软件也比今天少的多。但在那个时候，开发者群体里面对潮流比较敏感的人，已经开始从Windows迁移到了OS X。当年我买那台Macbook的时候，周围人都觉得我做了一个奇怪的选择，虽然几年之后他们也开始用苹果的设备。而从去年开始，Hacker news上经常会出现一些引起很多讨论的文章文章，讲的都是从OS X迁移到Windows 10之后的体验，正如10多年前人们在blog上写如何迁移到Mac。上个月我也终于加入了这个行列，买了一台Dell笔记本，到今天我也可以说，如果不开发iOS程序的话，Windows 10反而是现在最有创新精神的操作系统。它有点像我当年看到的OS X，干净，稳定，并且还处于激烈的变化中，而且已经有了不少吸引人的特性。&lt;/p&gt;

&lt;p&gt;我们这个行业的变化如此之快，人们往往来不及跳出刚刚建立的固有影响，变化就悄悄发生了。比如5年前人们很难相信，今天微软竟然会如此猛烈的拥抱Linux。现在的Windows 10不仅通过内置的虚拟化平台Hyper V给了Linux非常好的支持，它还自带了一个Linux兼容层，可以不通过虚拟机，直接运行了Ubuntu。这些解决了Windows平台上这些年一直欠缺的开发环境问题，相比OS X这几年不痛不痒的升级，Windows世界正在发生更有意思的变化。几年前，使用iPhone和Macbook Pro，是创新和在乎产品质量的人的象征，但到了今天，使用Windows反而重新变的酷了起来，它让人显得更有冒险精神，更勇于探索。&lt;/p&gt;

&lt;p&gt;微信发了取消iOS赞赏功能的通知之后，很多人说不相信会有人因此放弃iPhone。确实，仅仅因为这件事换手机是没什么意义，但长期看来，固有印象是最限制人的眼界的。如果有机会，还是应该尽量多尝试点不一样的东西。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;还有人说“可是微信也这样打压过别人啊？合理吗？”。当然不合理，但和现在这件事无关，微信做错的事情批评微信，但微信做过这样的事情并不能合理化苹果的行为。微信抖动uber的时候我也写过这篇： &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=208147743&amp;amp;idx=1&amp;amp;sn=bf68aeddc37f083ef9ae5192ba76ddd8&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data_ue_src=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=208147743&amp;amp;idx=1&amp;amp;sn=bf68aeddc37f083ef9ae5192ba76ddd8&amp;amp;scene=21#wechat_redirect&quot;&gt;谁抖动了微信的系统&lt;/a&gt; 。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;换掉苹果设备的不止我一个人。朱峰差不多在一年前就换了，他比我换的还彻底。我们最近录了一期podcast，一块聊了这个问题。如果你对这个话题有兴趣，可以点阅读原文去听听。也许有机会将来我还会写一篇文章说说做为一个开发者，我在windows 10上的使用体验、软件和配置。&lt;/p&gt;

&lt;p&gt;既然说到了这个podcast，这次就推荐它吧。我们录了几十期了，这是一个挺有意思的体验，但它的质量始终没到我觉得特别理想的状况，主题和节目内容也和最早的预期不太一样，我也从来没正式推荐过它。不过…对比最早录的，还是在逐渐进步的。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;津津乐道播客&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;（公众号ID: jjldbk）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/FGHkyMt13UXj6t7eETRq9RtIiaJJegJNZV2oLVb6wJFibianh12SqmS3kqWuPr23q4hURic4UvOSIF3XvRIRKjibfsA/0?wx_fmt=jpeg&quot; data-ratio=&quot;1&quot; data-w=&quot;430&quot; /&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;参考备注：&lt;br /&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;标题图：来自 SplitShireSource: www.splitshire.com CC0 License&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.815&quot;&gt;
&lt;p&gt;题外话，关于微信的规则是否合理，我还写过这篇 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=401145916&amp;amp;idx=1&amp;amp;sn=dcfa2a23a8fd12578365484fe78baf7b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data_ue_src=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA==&amp;amp;mid=401145916&amp;amp;idx=1&amp;amp;sn=dcfa2a23a8fd12578365484fe78baf7b&amp;amp;scene=21#wechat_redirect&quot;&gt;微信、Uber、阴谋论和口袋罪&lt;/a&gt; 指责别人不遵守规则实在太容易了，但讨论真正的原因，就困难多了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;本文来自霍炬的微信公共帐号“歪理邪说”，用微信添加 wxieshuo 公众号即可订阅。转载必须保留作者、公共帐号信息，内容必须与本文保持严格一致，不得修改/替换/增减本文包含的任何文字，不得擅自增加小标题、引语、摘要等。本公众号一切内容禁止摘编、衍生及演绎。&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 30 Sep 2017 23:10:33 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/WofkSHYv86</dc:identifier>
</item>
</channel>
</rss>