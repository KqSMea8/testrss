<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2F8581652766881372.xml&amp;max=10&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/8581652766881372.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252F8581652766881372.xml%26max%3D10%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252F8581652766881372.xml%26max%3D10%26links%3Dpreserve%26exc%3D1" />
<title>科学人 | 果壳网</title>
<link>http://www.guokr.com/scientific/all/archive/</link>
<description>全部文章归档 | 科学人 | 果壳网 科技有意思</description>
<ttl>360</ttl>
<item>
<title>这项关于初吻的研究，基本上就是个青春片的剧本</title>
<link>https://www.guokr.com/article/442820/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442820/</guid>
<description>&lt;div class=&quot;document&quot; readability=&quot;25.64979978158&quot;&gt;
&lt;p hidden=&quot;&quot;&gt;本文作者:Cari Romm&lt;/p&gt;
&lt;div readability=&quot;39&quot;&gt;
&lt;p&gt;（锦衣Reload/译，vicko238、Ent/校）在青春片里，有三类典型的角色：校花、运动员、孤独学霸。《摩登家庭》中的二女儿艾利克斯、《生活大爆炸》中的几位科学家、《蜘蛛侠》的主角彼得·帕克，甚至《哈利·波特》中的少年斯内普，都是孤独学霸的代表。他们智商超群、貌不惊人，沉浸在自己的世界里，不太擅长人际交往。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://2-im.guokr.com/XhDf2LoHAD-eLnww7Tp72uKcy0dgjMdNQkt8UYjYQnTaAQAAOwEAAEpQ.jpg&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;图片来源：chobirdokan.com&lt;/p&gt;
&lt;p&gt;而有的研究听起来就像青春爱情电影的剧本草稿：在一篇名为“从来没接过吻”的论文里，上大学前初吻还在的同学们成了被研究者选中的孩子。这项研究的结论是——怎么说，如果你看过一部非常典型的青少年电影，那么这些发现很可能就和你想得差不多。&lt;/p&gt;
&lt;p&gt;这项研究发表在了《性行为档案》（Archives of Sexual Behavior）上。作者们调查了超过700名大学新生（男女各半）的恋爱史、人格特质、健康习惯以及一些基本的背景问题，比如多久参加一次宗教活动以及和父母相处得如何。在700多人中，有14％的人表示他们从来没和人接过吻。&lt;/p&gt;
&lt;p&gt;据研究者统计，没接过吻的大学新生有一些共同点：&lt;br/&gt;（1）在人格特质的测试中，他们显示出较高的神经质倾向和较低外向性。&lt;br/&gt;（2）跟有过接吻经验的同学相比，他们喝酒的频率更低。&lt;br/&gt;（3）他们有过于专横的母亲，同时自尊较低。&lt;br/&gt;（4）他们也更有可能在学校的荣誉学院（大学里的荣誉学院招收表现超常的本科生，在课程和奖学金设置上区别于普通学生）中。&lt;/p&gt;
&lt;p&gt;这里有些补充说明。首先，研究的样本绝大多数是异性恋，占到了98％的比例。其次，研究者表示，他们没有区分“不想接吻的人”和“还没找到接吻对象的人”。同时，研究者也没有那35％拒绝参加调查的人的信息，这些人的数据可能完全不同。&lt;/p&gt;
&lt;p&gt;不过，总的来说，这14％的人的特质构成了一个内聚性极强的画像。“规范性行为的推迟参与，能够指示一种躲避规范社会行为的整体趋势，”研究者写道，“这也许是这种行为模式的预测指标。”换句话说：初吻来得晚一点的人会更害羞一点，也更加笨拙一点。不过，用乐观的态度来看，这个充满戏剧性的世界从来不缺少以好斗书呆子为主角，最后结局圆满的爱情片。（编辑：vicko238）&lt;/p&gt;
&lt;p&gt;题图来源：fanpop.com&lt;/p&gt;
&lt;/div&gt;

&lt;p class=&quot;copyright&quot;&gt;译文版权属于果壳网（&lt;a title=&quot;果壳网&quot; href=&quot;http://www.guokr.com/&quot;&gt;guokr.com&lt;/a&gt;），禁止转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442820%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 12 Mar 2018 08:01:54 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442820/</dc:identifier>
</item>
<item>
<title>AI也要抢律师的饭碗了吗？</title>
<link>https://www.guokr.com/article/442814/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442814/</guid>
<description>&lt;div readability=&quot;131&quot;&gt;
&lt;p&gt;冬天似乎还没过去，人工智能领域又爆出了大新闻。20名经验老道的美国律师被AI击败了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;好消息是，这不是律师在法庭辩论上输给了AI。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;坏消息是，输掉的这个领域是大量律师工作的核心。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创造出这个AI的公司叫LawGeex（Law、Geek和Logic的合成词），这家2014年才成立的公司其目标是制造出能审阅法律文书的AI。这次比赛涉及的文书，是&lt;strong&gt;保密合同&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;AI与人类的竞赛&lt;/h2&gt;
&lt;p&gt;所谓保密合同（NDA, Non-disclosure agreement）是在企业之间签署的合作协议，目的是确保互相之间共享的知识和资料不会被第三方知道，尤其是竞争对手。审阅和批准这类协议是企业法务人员日常工作的一部分。但是企业面临着人力资源短缺和工作量增加的双重困扰，一份合同的审批可能会要一周时间，这拖累了企业的效率。&lt;/p&gt;
&lt;p&gt;和目前大部分使用的AI一样，LawGeex的AI使用的也是深度学习技术。但是处理法律问题，会遇到独特的挑战。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img src=&quot;https://2-im.guokr.com/9w5g4Ifv1ERBxbt1bsPc2RdCias5kKOgXjxbJRpZm7ddBwAASgMAAFBO.png?imageView2/1/w/640/h/285&quot;/&gt;LawGeex公司主页。图片来源：LawGeex&lt;/p&gt;
&lt;p&gt;虽然法律文书也是用人类语言写成的，但是法律用词和我们日常用词的意思有很大差异。LawGeex的报告中提到，开发者无法使用现成的自然语言处理技术，只能另起炉灶。此外，处理法务的AI需要极高的准确度，任何错误都有可能给企业带来风险，造成经济损失。相比而言，判断一部佚名的戏剧是不是莎士比亚写的，风险要小很多。这些都是技术难点。&lt;/p&gt;
&lt;p&gt;LawGeex的AI有个非常重要的特点，它能够理解文字的意思，分析其中的概念。这个功能是靠内置的法律语言处理（Legal Language Processing, LLP）和法律语言理解（Legal Language Understanding, LLU）模块实现的。早先的算法是搜索和匹配关键词，如果关键词被省略了，算法就无能为力了。对于LawGeex的AI来说即便文字中个别词语不出现也没问题，因为它理解了含义。&lt;/p&gt;
&lt;p&gt;比赛的过程是让21名参赛选手各自分析5篇保密合同，定位30个法律问题出现在合同中的什么地方。为了确保比赛的公正性，一群顶尖律师组成的裁判团选出了这5份合同，并制定了这30道题目。这些题目涵盖了这类协议中可能出现的各类法律问题。这不是仅仅靠搜索文字就能轻松完成的任务，而是要正确理解合同的内容。每名选手有4个小时的时间。&lt;/p&gt;
&lt;p&gt;参赛的21名选手中人类组20人，这些法律行业的精英有些是自由职业者，有些在著名律师事务所工作，有些是大公司的法务，一些人有在高盛、思科等大公司工作的经验。&lt;/p&gt;
&lt;p&gt;虽然以前也有 AI和律师之战，但是之前的比赛不是在同等难度下进行的。而这次的比赛比的是律师工作的核心——&lt;strong&gt;理解合同的条款，判断合同的风险&lt;/strong&gt;，审阅保密合同是所有参赛的人类和机器都擅长的。&lt;/p&gt;
&lt;p&gt;结果呢？AI能达到平均94%的准确率，表现最好的律师的平均准确率是85%。而在时间使用上，AI&lt;strong&gt;26&lt;/strong&gt;&lt;strong&gt;秒&lt;/strong&gt;完成任务，人类最快需要&lt;strong&gt;51&lt;/strong&gt;&lt;strong&gt;分钟&lt;/strong&gt;，差异太明显了。&lt;/p&gt;
&lt;h2&gt;律师真的要被AI取代了吗？&lt;/h2&gt;
&lt;p&gt;在谈论&lt;strong&gt;AI&lt;/strong&gt;&lt;strong&gt;抢走人的饭碗&lt;/strong&gt;这个极富争议的话题时，我们总是一遍又一遍听到同样的声音——那些低技能重复性劳动会被AI替代。实际上据一些商业分析公司的研究，高回报的脑力密集型职业比如财务经理，物理学家，&lt;strong&gt;甚至是CEO&lt;/strong&gt;都极有可能被AI取代。&lt;/p&gt;
&lt;p&gt;拿律师来说，站在法庭上唇枪舌剑的律师们可能暂时没有这个风险。那些在律所中的顶级律师们似乎也不必担忧，他们最重要的工作是帮重要客户解答法律问题，有了LawGeex AI这样的工具反倒是解放他们的生产力。风险最高的是律师助理，他们才刚进入这个行业，做的都是低附加值的法律文书审阅工作。&lt;/p&gt;
&lt;p&gt;已经有公司在使用LawGeex的技术了，我们可以在LawGeex的网站首页上看到几家著名律所和会计公司的名字。当文书工作交由更加高效的机器来处理，行业的整个工作流程会发生巨大变化，律师助理的职责也会被重新定义。&lt;/p&gt;
&lt;p&gt;不过在用AI代替律师之前还有几个问题要问。人工智能犯错了怎么办？犯错了就会给企业带来风险，如果未来用于刑法问题的AI出现，就更不能犯错了。那么如何判断它犯错了呢？&lt;/p&gt;
&lt;p&gt;这并不仅仅是法律AI的问题，也是所有AI共同面对的问题。谷歌的AI就犯过一个错误，2015年谷歌图片App将一位黑人的照片识别成大猩猩，2018年初有好事的媒体又测试了一次，发现谷歌并没有修复这个问题，只是单方面屏蔽了几个敏感的关键词，似乎这个问题修复起来非常复杂。&lt;/p&gt;
&lt;p&gt;同样也是谷歌，有研究机构发现，不同性别的人用谷歌搜工作会得到有偏向性的结果。女性搜到的高收入工作比男性少。&lt;/p&gt;
&lt;p&gt;这类问题指向了AI算法的一个核心问题——偏见（Bias）。&lt;/p&gt;
&lt;p&gt;偏见的来源有两种，一个是设计程序的人，一个是用于训练AI的数据。以前只是知道AI带有偏见所以会得到错误的结果，但没有讨论偏见的来源，而一种新观点认为 &lt;strong&gt;偏见来源于设计者，AI&lt;/strong&gt;&lt;strong&gt;只是放大了设计者偏见&lt;/strong&gt;。AI被越多的人越多的场景使用，它的偏见就会扩散开来。&lt;/p&gt;
&lt;p&gt;想象一下带有偏见的法律AI被扩散开来就让人不寒而栗。所以需要有监管机构或者第三方公司来测试和监控 AI，至少要能识别出这些风险，能够去补救它。&lt;/p&gt;
&lt;p&gt;不过话说回来，LawGeex的AI既然这么好用，财富500强企业估计已经等不及了吧？&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img src=&quot;https://1-im.guokr.com/oPAd0MS98wwwLOIQ6usy9dml0uHTCz40uTtlynETMT4ABQAAVQMAAEpQ.jpg?imageView2/1/w/640/h/426&quot;/&gt;比无纸化办公更厉害的，可能是无人化办公了。图片来源：Pixabay&lt;/p&gt;
&lt;h2&gt;附录：&lt;/h2&gt;
&lt;p&gt;在一个企业的法律顾问律师业务或者大型企业总法律顾问（General Counsel）日常需要面对的工作中，可能有如下对应的人工智能应用场景。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;非诉讼部分&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;极大的提高合同解读的效率。&lt;/strong&gt;由于一个成熟市场和法制环境中的商业合同可会尽可能多的列举所有可能性，所以有越来越长的趋势。一个标准的增资协议（SPA）和股东协议（SHA）的套餐通常来说有10万个汉字左右，一次交易中的多方需要逐条讨论其中的权利义务约定，对于提供法律服务的专业机构而言保持注意力集中各方的商业意见、解读合同条款是需要消耗大量的工作小时和精力的。LawGeex这样的软件可以直观快速完成对于合同草案的要点整理工作，但之后的博弈还是离不开人类谈判参与者主导。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;极大的提高起草合同的效率。&lt;/strong&gt;以往起草一个“股权激励计划”标准的工作流程是：搜集客户决策机关的需求-进行问卷调查-整理合同提纲-分别起草7-10个不同的文件模板（总字数也直奔10万了）。现在已经上线运营的AI系统已经可以实现在SaaS环境下填写表单自动生成全套合同文本的初稿。与人类律师起草的文件相比，这种通过表格和算法生成的股权激励方案避免了人类会犯诸如前后数据不一致、换算期权时计算错误的可能性，也使我们以前需要一周完成的工作，现在一个上午就能解决。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;法律问题的研究。&lt;/strong&gt;目前的技术能实现的效果还在百度百科层面，即只能检索到具体问题其他答题者的回答（极可能是错误的），还无法做到理解自然语言中的含义和对一个具体法律问题得出符合“三段论”的逻辑解答。我们的工作路径往往是将一个具体而开放的法律问题（比如：离婚时婚前购买的房产将如何分割），分解成具体的检索关键词，然后在openlaw、无诉等专业数据库中检索“婚姻法、不动产”等关键词，命中的结论只是零碎的法条。然后我们在根据不同法条和司法解释之间的效力等级做出符合逻辑和法律效力的判断。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;诉讼部分&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;案件事实的拆解和争议焦点归纳。&lt;/strong&gt;短期内看不到算法能实现的可能性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;法条检索和案例检索。&lt;/strong&gt;同上面第三个流程，严格的讲算不上“智能”，只是搜索引擎而已。执行效率很大程度上取决于操作者的经验。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OCR和语音识别。&lt;/strong&gt;这是近年最大的变化，我们的诉讼工作中经常需要将拍摄的证据卷宗整理成可编辑的word文档，也需要将录音证据中的对话整理成字幕文件，这些都需要大量的低技术含量工时。现在的OCR和语音识别软件已经极大的解放了这一部分的生产力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;举证和质证。&lt;/strong&gt;短期内看不到算法能实现的可能性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;法庭辩论。&lt;/strong&gt;短期内看不到算法能实现的可能性（很好的科幻小说题材）。&lt;/p&gt;
&lt;p&gt;（编辑：Ent、锦衣Reload）&lt;/p&gt;
&lt;p&gt;题图来源：Pixabay&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;本文版权属于果壳网（&lt;a title=&quot;果壳网&quot; href=&quot;http://www.guokr.com/&quot;&gt;guokr.com&lt;/a&gt;），禁止转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442814%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Sun, 11 Mar 2018 08:01:58 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442814/</dc:identifier>
</item>
<item>
<title>为什么大城市的姑娘容易皮肤差？</title>
<link>https://www.guokr.com/article/442813/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442813/</guid>
<description>&lt;div readability=&quot;96.339767908949&quot;&gt;
&lt;p&gt;美颜对于众姐妹们来说也可谓是人生必修课了。为了对付那些讨厌的痘痘、黑头、皱纹和色斑们，养颜护肤类产品总要占到大笔开销。但有些时候，肤质的好坏似乎也不完全是护肤品说了算&lt;s&gt;，美颜相机好像更重要&lt;/s&gt;。&lt;/p&gt;
&lt;p&gt;或许不少人都有过这样的体验——在大城市居住久了，偶尔到一些山清水秀空气宜人的地方待上一段时间，令人烦恼的皮肤问题突然就得到明显改善，可一回到家里又迅速被“打回原形”。&lt;/p&gt;
&lt;p&gt;为什么居住在不同地区会给我们的皮肤带来这么大的影响呢？你也许首先会想到“气候”、“水土”和“饮食”等因素。最近，韩国中央大学系统生物技术领域的研究人员们有了新的发现——&lt;strong&gt;所在城市的发达程度及其环境会对这一地区人群皮肤上的微生物组成产生巨大影响，而这些影响正与我们的皮肤健康直接相关&lt;/strong&gt;&lt;sup&gt;[1]&lt;/sup&gt;！&lt;/p&gt;
&lt;p&gt;皮肤是人体抵御外界伤害的第一道防线。正常人皮肤表面都会分布大量微生物群体，包括多种真菌、细菌和病毒&lt;sup&gt;[2]&lt;/sup&gt;。这些微生物群体的组成与我们的健康联系紧密，加利福尼亚大学就有研究报道，&lt;strong&gt;良好的皮肤微生物体系可以促进和加强人体的固有免疫及适应性免疫，而失衡的皮肤菌群则会诱发一些类似细菌性皮炎等皮肤疾病&lt;/strong&gt;&lt;sup&gt;[3]&lt;/sup&gt;。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/6WHFV3mE0-WtngdvAf9-1m5fqgSm5dKm8Jl-pY0o6zNRAQAA7gEAAEpQ.jpg&quot;/&gt;栖息在人体皮肤表面的微生物群体。图片来源：参考文献[4]&lt;/p&gt;
&lt;p&gt;那么，为什么居住环境不同，皮肤微生物的组成会大相径庭？难不成菌群也有“城市病”？——别说，还真有。&lt;/p&gt;
&lt;p&gt;研究人员从5个地理位置不同的城市征集了231名女性志愿者，采集、鉴定、分析了她们面部皮肤上的微生物样本。这些志愿者来自2个一线大城市（北京市、广州市），3个非一线城市（昆明市、西安市、呼和浩特市），必须在相同城市居住超过5年，并没有使用过任何皮肤病处方药物。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/tWY0TAwADaX-BUGsOPGnDkgJa5l9sVVCbHGx7fvR454SAwAAGQIAAFBO.png?imageView2/1/w/640/h/437&quot;/&gt;志愿者所在中国城市的地理分布（各城市间至少间隔409千米）。图片来源：参考文献[1]&lt;/p&gt;
&lt;p&gt;研究结果对于一线城市的妹子来说可能不是什么好消息。一线城市女性面部皮肤微生物种群&lt;strong&gt;多样性&lt;/strong&gt;显著低于非一线城市。一线城市女性的皮肤微生物种群更加单一，而非一线城市不但具更丰富的微生物种群，微生物网络结构也比一线城市复杂（网络结构反映的是整个群体的稳定性，彼此联系越紧密稳定性就越强，好比散落在地的稻草容易被吹走被折断，而把它们编织在一起就会变得结实稳固）。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/1_c8LodIXM0UftFjGPjQylFotxDeUoIG-MaIKxYrZi1yAwAAdAEAAFBO.png?imageView2/1/w/640/h/269&quot;/&gt;对皮肤微生物网络关系的评估。左图：不稳定的网络关系，右图：稳定的网络关系。本次调查的两个一线城市都是左边的模式，而非一线城市都是右边模式。图片来源：参考文献[1]&lt;/p&gt;
&lt;p&gt;虽然地理位置相隔遥远，但2个一线城市女性皮肤的微生物组成成分彼此却很接近，差异性很小；而3个非一线城市女性的皮肤微生物组成不但与一线城市样本相比有明显的区别，而且彼此之间也都不相同，显示出更强的“个性”。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/BmnER6f-etZBAaenB8tdPvlmEBs0hF07XO1WrZdk_iv1AgAA1QEAAFBO.png?imageView2/1/w/640/h/396&quot;/&gt;不同城市女性皮肤微生物种集群分析。图中每个坐标点代表一个妹子面部的微生物种群样本，不同点间的距离代表微生物样本间的相似性，点离哪个坐标轴越近，意味着受到的相关影响越强。可以看出，一线城市妹子的皮肤微生物组成更加相似（红圈内），非一线城市妹子的微生物样本各具特色、彼此不同。图片来源：参考文献[1]&lt;/p&gt;
&lt;p&gt;为什说这一结果对于一线城市的妹子来说是坏消息呢？从生态学角度来讲，当一个系统中物种种类减少，这个系统抵抗外界不利因素的能力（抗逆性）就会降低——&lt;strong&gt;物种种类越单一，整个系统也越脆弱，被破坏后的恢复力也会越差&lt;/strong&gt;。这一规律对于微生物群体来说也同样适用。根据美国国立卫生研究院（NIH）的调查，&lt;strong&gt;当皮肤微生物群体结构发生变化、多样性和密度降低时，特应性皮炎的患病概率也会增加&lt;/strong&gt;&lt;sup&gt;[5]&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;常言道祸不单行，一线城市妹子的皮肤不仅菌群多样性差，优势菌种分析结果也不容乐观。研究人员在这次调查中发现，一线城市女性皮肤微生物组分里的&lt;strong&gt;潜在致病菌&lt;/strong&gt;（如葡萄球菌）的数量比例明显高于非一线城市——这些特定病原菌数量的增加正是引起头皮屑和脂溢性皮炎等皮肤疾病的潜在因素&lt;sup&gt;[6]&lt;/sup&gt;。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/Sp9amwj1ZLj4uVea2NF7CQbfkzPgncH9cKfleZT7IC1sAgAA4QEAAFBO.png&quot;/&gt;不同城市葡萄球菌菌株的数量。葡萄球菌是引起皮肤感染的主要病原菌，我们看到北京和广州妹子皮肤的葡萄球菌总数要比另外三个城市多。图片来源：参考文献[1]&lt;/p&gt;
&lt;p&gt;究竟是什么因素使不同地区女性皮肤有如此差异呢?为什么一线城市女性皮肤菌群的结构比非一线城市差呢？研究人员又通过建立若干生态模型评估了5个城市女性的皮肤微生物特性。结果显示，不同城市的环境因素对女性皮肤微生物的影响至关重要，一线城市尤为明显。通过考察若干相关因素，研究人员总结得出，&lt;strong&gt;空气质量的影响最大&lt;/strong&gt;，社会经济（如GDP、城市化指数）的影响其次，个体因素（角质、肤质等）的影响最小。换句话说，就算一线妹子护肤保养做得好，也可能因为窗外严重的污染失去皮肤表面健康的微生物屏障，增加皮肤病的风险……&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/ULBT1-EQ7xXoFT9YoVwGuwRVdan2IG81uN8CDHCNyKtgAwAAJgIAAFBO.png?imageView2/1/w/640/h/407&quot;/&gt;皮肤微生物特性影响因素分析。在所有影响皮肤微生物特性的因素中，空气质量（深蓝色）、气候环境（浅蓝色）和社会经济（条纹）占到主导，而个人肤质（黄色）的相关性最弱。这张图中我们看到烦人的PM2.5又出现在了榜首（皮肤菌群“城市病”的最大病因竟然是雾霾啊！）。图片来源：参考文献[1]&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/BpXYnxC5FPpCy_OwIl7xspBujwi7Fv9Oz2n1ujovK5OwBAAAwgIAAEpQ.jpg?imageView2/1/w/640/h/376&quot;/&gt;在雾霾面前众护肤品表示爱莫能助。绘图：Yuki小柒&lt;/p&gt;
&lt;p&gt;根据世界卫生组织统计，有超过80%的大城市空气污染指数超标，而中小城市仅有2%&lt;sup&gt;[7]&lt;/sup&gt;。越来越多的研究证实&lt;strong&gt;空气污染会影响皮肤健康、加剧皮肤疾病患病风险&lt;/strong&gt;&lt;sup&gt;[8-10]&lt;/sup&gt;。经济水平和环境水平都较好的居住条件，对皮肤健康的保持才更加有益。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/Zf8q1xn06iZtblPwCRbHy8drF_bbzgctBOn8ZGKIjDIUBQAAqAQAAEpQ.jpg?imageView2/1/w/640/h/586&quot;/&gt;雾霾可对皮肤造成直接伤害，引起氧化应激和皮肤炎症。图片来源：参考文献[10]&lt;/p&gt;
&lt;p&gt;总结陈词，这项研究讨论了同城市环境、经济水平与女性皮肤健康的潜在相关性。虽然目前还没有明确的证据表明这些相关会对皮肤带来不利的影响，但也具有一定的警示作用（住在一线的小伙伴们要留神了）。另外，基于现有的研究结果，研究人员提议，在皮肤护理和皮肤疾病治疗中，应该考虑不同地区的环境特征和皮肤微生物组成的差异，并以此为依据，优化和调整护理/治疗方案。或许，连护肤品也得针对特定地域，个性化定制了。（编辑：明天）&lt;/p&gt;
&lt;h2 class=&quot;references&quot;&gt;参考文献：&lt;/h2&gt;
&lt;ol class=&quot;reference-item&quot;&gt;&lt;li&gt;H.-J. Kim, H. Kim, J. J. Kim, N. R. Myeong, T. Kim, T. Park, E. Kim, J.-y. Choi, J. Lee, S. An, W. J. Sul, Fragile skin microbiomes in megacities are assembled by a predominantly niche-based process. Sci. Adv. 4, e1701581 (2018).&lt;/li&gt;
&lt;li&gt;E. A. Grice, J. A. Segre, The skin microbiome. Nat. Rev. Microbiol. 9, 244–253 (2011).&lt;/li&gt;
&lt;li&gt;J. A. Sanford, R. L. Gallo, Functions of the skin microbiota in health and disease. Semin. Immunol. 25, 370–377 (2013)&lt;/li&gt;
&lt;li&gt;Oh J, Byrd A L, Park M, et al. Temporal Stability of the Human Skin Microbiome[J]. Cell. 165(4):854 (2016)&lt;/li&gt;
&lt;li&gt;H. H. Kong, J. Oh, C. Deming, S. Conlan, E. A. Grice, M. A. Beatson, E. Nomicos, E. C. Polley, H. D. Komarow; NISC Comparative Sequence Program, P. R. Murray, M. L. Turner, J. A. Segre, Temporal shifts in the skin microbiome associated with disease flares and treatment in children with atopic dermatitis. Genome Res. 22, 850–859 (2012).&lt;/li&gt;
&lt;li&gt;T. Park, H.-J. Kim, N. R. Myeong, H. G. Lee, I. Kwack, J. Lee, B. J. Kim, W. J. Sul, S. An, Collapse of human scalp microbiome network in dandruff and seborrheic dermatitis. Exp. Dermatol. 26, 835–838 (2017).&lt;/li&gt;
&lt;li&gt;World Health Organization, WHO Global urban ambient air pollution database (World Health Organization, 2016); &lt;a href=&quot;http://www.who.int/phe/health_topics/outdoorair/databases/cities/en/&quot;&gt;www.who.int/phe/health_topics/outdoorair/databases/cities/en/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;K. E. Kim, D. Cho, H. J. Park, Air pollution and skin diseases: Adverse effects of airborne particulate matter on various skin diseases. Life Sci. 152, 126–134 (2016).&lt;/li&gt;
&lt;li&gt;P. Puri, S. K. Nandar, S. Kathuria, V. Ramesh, Effects of air pollution on the skin: A review. Indian J. Dermatol. Venereol. Leprol. 83, 415–423 (2017).&lt;/li&gt;
&lt;li&gt;J. Krutmann, W. Liu, L. Li, X. Pan, M. Crawford, G. Sore, S. Seite, Pollution and skin: From epidemiological and mechanistic studies to clinical implications. J. Dermatol. Sci. 76, 163–168 (2014).&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;editors-note&quot;&gt;注:参考文献[1]和[10]的部分研究基金由化妆品公司提供赞助。但作者已声明无相关利益冲突，不会因此影响试验结果。&lt;/p&gt;
&lt;p&gt;&lt;embed height=&quot;0&quot; type=&quot;application/thunder_download_plugin&quot; width=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;embed height=&quot;0&quot; type=&quot;application/thunder_download_plugin&quot; width=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;embed height=&quot;0&quot; type=&quot;application/thunder_download_plugin&quot; width=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;embed height=&quot;0&quot; type=&quot;application/thunder_download_plugin&quot; width=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;embed height=&quot;0&quot; type=&quot;application/thunder_download_plugin&quot; width=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;本文版权属于果壳网（&lt;a title=&quot;果壳网&quot; href=&quot;http://www.guokr.com/&quot;&gt;guokr.com&lt;/a&gt;），禁止转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442813%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Sun, 11 Mar 2018 08:01:57 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442813/</dc:identifier>
</item>
<item>
<title>当你与光子同速并飞，你看光子的速度是0还是光速？</title>
<link>https://www.guokr.com/article/442810/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442810/</guid>
<description>&lt;div readability=&quot;83&quot;&gt;
&lt;p&gt;1895年，16岁的爱因斯坦思考了一个问题：&lt;strong&gt;如果一个人与光子以相同的速度并肩而行，那么这个人看光子的速度是&lt;/strong&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;还是光速？&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/ljr_BqILQeffe6bBWHs7aLKS7FO8joXd97WFCdtNit6EAwAAWAIAAEpQ.jpg?imageView2/1/w/640/h/426&quot;/&gt;图片来源：Robin Pierre｜Unsplash&lt;/p&gt;
&lt;p&gt;10年之后，他终于有了答案，并在1905年发表了&lt;strong&gt;狭义相对论理论&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;爱因斯坦的解释是，如果你的速度（v）能赶上光的速度（c），根据当时物理学的速度叠加公式，那么你相对于光的速度（u）应该是：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/KfxyoQCK3wBD8fxtjCfVHMpm0n5SAivE7uRVdX-Kril9AQAAjQAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;此时就会看到这道光是冻结的，而不再是麦克斯韦方程所描述的电磁波。但是，麦克斯韦方程和观测者的速度无关，无论观测者的速度如何，麦克斯韦方程预言真空中的光速都是&lt;strong&gt;常数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;于是在这种情况下，&lt;strong&gt;速度叠加公式&lt;/strong&gt;和&lt;strong&gt;麦克斯韦方程&lt;/strong&gt;产生了矛盾。&lt;strong&gt;哪一个才是正确的呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;思考了差不多10年，爱因斯坦最终认为，麦克斯韦方程如此美，只能选择麦克斯韦方程。即&lt;strong&gt;与光子同速并飞时，看到的光子速度依然为光速&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;该怎么理解这个明显的“悖论”呢？&lt;/p&gt;
&lt;p&gt;其实，正是在假设光速不变的前提下，再加上相对性原理，爱因斯坦发现了狭义相对论理论。在这个理论里面，悖论自然得到了解决。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;牛顿力学vs&lt;/strong&gt;&lt;strong&gt;狭义相对论&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在牛顿力学中，在计算两个物体的相对速度时，我们用的是伽利略速度叠加公式：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/_MLNab9ij99zAhsVcuPePKxLEYIyKwjujMdyKATVZRmKAAAANQAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中v&lt;sub&gt;1&lt;/sub&gt;和v&lt;sub&gt;2&lt;/sub&gt;分别是这两个物体相对于某一个参照物的运动速度，u是物体2观测到的物体1的速度，也就是物体1相对于物体2的相对速度。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://2-im.guokr.com/FZxmUTpiJUxXKv0svLlJN-8eS58boEN8oN-u76i8PFOEAwAAowIAAEpQ.jpg?imageView2/1/w/640/h/480&quot;/&gt;经典力学的适用场景。图片来源：Goh Rhy Yan｜Unsplash&lt;/p&gt;
&lt;p&gt;而在狭义相对论中，两个向同一个方向运动的物体的相对论的速度叠加公式为：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://2-im.guokr.com/_17jfvxYdBXZcQ_uhGukPQteD_BD1S9B9iZzJxZFCOe5AAAAVgAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中v&lt;sub&gt;1&lt;/sub&gt;和v&lt;sub&gt;2&lt;/sub&gt;分别是这两个物体相对于某一个参照物的运动速度，c是光速，u是物体1相对于物体2的相对速度。&lt;/p&gt;
&lt;p&gt;和我们熟悉的牛顿力学里面速度叠加公式（也就是伽利略速度叠加公式）相比，相对论的速度叠加公式多了分母中的(v&lt;sub&gt;1&lt;/sub&gt;*v&lt;sub&gt;2&lt;/sub&gt;)/c^2这一项。当v&lt;sub&gt;1&lt;/sub&gt;或者v&lt;sub&gt;2&lt;/sub&gt;比光速c小很多的时候，这一项&lt;strong&gt;趋近于零&lt;/strong&gt;，那么相对论中的速度叠加公式就和伽利略速度叠加公式完全一样了，所以可以说伽利略速度叠加公式是非相对论（也就是速度远远小于光速）的情况下的近似。&lt;/p&gt;
&lt;p&gt;在人与光子同速并飞的情况下，物体1和物体2的速度都是光速，分母中(v&lt;sub&gt;1&lt;/sub&gt;*v&lt;sub&gt;2&lt;/sub&gt;)/c^2显然&lt;strong&gt;不趋近于零&lt;/strong&gt;。如果我们依旧使用牛顿力学中的速度叠加公式，就不合理了。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;那么，相对速度应该是多少？&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;利用狭义相对论的公式，我们可以计算如果物体1是光（v&lt;sub&gt;1&lt;/sub&gt;=c）会发生什么。我们可以得到：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/sP0GN-k1-CJUVbD-2aEl2s55-zhorfavJY2ewLyP03FMAQAAbQAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;也就是说，无论物体2是什么速度，对于物体2，光（即物体1）的速度永远是c！这个结论即使对于物体2的速度是光速也是成立的。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/6dyZvNO_138lrsSq78MB_bROzFSHUirgNuK_v7v3j8KEAwAAWAIAAEpQ.jpg?imageView2/1/w/640/h/426&quot;/&gt;图片来源：Christopher Burns｜Unsplash&lt;/p&gt;
&lt;p&gt;下面让我们看看是不是这样。&lt;/p&gt;
&lt;p&gt;爱因斯坦的追光假想实验是v&lt;sub&gt;2&lt;/sub&gt;=c的情况。如果直接利用上面的公式，我们得到：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://2-im.guokr.com/CKhrNENY-U6he_A-LL1DoLjYWIyNPuSeHt-w_ZuK1nS8AAAAaQAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这就尴尬了，学过数学的我们都知道，零除以零的结果是不确定的，岂不是说这个公式失败了？&lt;/p&gt;
&lt;p&gt;当然不是！我们用一点数学技巧（叫做“&lt;strong&gt;极限&lt;/strong&gt;”）就可以了。&lt;/p&gt;
&lt;p&gt;假设v&lt;sub&gt;2&lt;/sub&gt;=c-delta，其中delta是一个无穷小量，delta有多小呢？用我高中数学老师的话说，就是要多小有多小。同样使用上面的相对论速度叠加公式，我们得到：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://2-im.guokr.com/lV_eScqkISwQ1dQkm3HHEM97i5lGyKTT2msQflJlSdmgAAAASwAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;因此，无论delta多小，也就是无论物体2的速度多么接近光速，物体2所观测到的光的速度都是不变的。&lt;/p&gt;
&lt;p&gt;这个结果不仅在v&lt;sub&gt;2&lt;/sub&gt;=c的时候成立，在v&lt;sub&gt;2&lt;/sub&gt;=-c，也就是物体2逆着光并且以光速运动时也成立，因为：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/gc0AA8V4mQLzLV0_qDCa9B1UpdAvf4Yr4IUxosPMXewDAQAAUgAAAFBO.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;并不是直观想到的两倍的光速哦。（编辑：婉珺）&lt;embed height=&quot;0&quot; id=&quot;xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd&quot; type=&quot;application/thunder_download_plugin&quot; width=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;本文版权属于果壳网（&lt;a title=&quot;果壳网&quot; href=&quot;http://www.guokr.com/&quot;&gt;guokr.com&lt;/a&gt;），禁止转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442810%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Sun, 11 Mar 2018 08:01:55 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442810/</dc:identifier>
</item>
<item>
<title>假新闻疫苗：分辨假新闻，从学会造假技巧开始</title>
<link>https://www.guokr.com/article/442809/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442809/</guid>
<description>&lt;div readability=&quot;81&quot;&gt;
&lt;p&gt;（锦衣Reload/译，vicko238、Ent/校）最近这些日子，“假新闻”这个词简直无处不在。社交媒体上的反转大戏一茬接着一茬，假新闻的受害者不计其数。不过假故事可不是现代人的专利，它在人类刚出现的时候就有了。而且最重要的是，假故事不用100％纯假，就能起到误导他人的作用。许多人使用“公关”、“造谣”、“误报”和“后真相”这些不同的词，其实说的都是一回事儿。&lt;/p&gt;
&lt;p&gt;实际上，大部分人关心的是“造谣”，也就是有意制造的虚假消息。现在想要误导人们，比以往任何时刻都要容易。在网络世界，伪装成一个可信的新闻发布者需要付出一些金钱和努力，但是并不算难。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://1-im.guokr.com/fMTrFO9rB1Z2iXDfizTSxAKKheNFhHbRaROOY5VVL3XaAQAAYwEAAEpQ.jpg&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;图片来源：humebrophy.com&lt;/p&gt;
&lt;p&gt;同时，人们对媒体的信任度正在下降，大部分美国人表示假新闻让他们对一些基本事实都感到困惑。再加上买水军、买热搜这类的营销宣传手段越来越多，人们现在想要分辨真假、获取正确的信息变得更难了。&lt;/p&gt;
&lt;h2&gt;反击策略&lt;/h2&gt;
&lt;p&gt;企业和政府正试图用多种方法来抵御日益增长的假新闻威胁。谷歌和脸书正在调整它们的算法以停止推广“假新闻”。法国正在讨论通过一项反假新闻法案，来限制选举期间的媒体活动。英国政府宣布要建立一个反假新闻部门。但是，每一项措施都有其自身的缺陷。&lt;/p&gt;
&lt;p&gt;作为研究假新闻现象的研究者，我们认为对抗假新闻的最佳方式是从个人层面努力。所以我们结合了心理学与科技，在一个被学者称为“科技认知学”（technocognition）的新领域展开实验。&lt;/p&gt;
&lt;p&gt;目前，我们中的一个人发现有可能通过给人们“接种”来抵御假新闻：先警示并给人们看一个弱化版的真实误导案例，然后再告诉他们为什么这种手段能够起到误导作用。换句话说，就是小剂量的假新闻可以帮助你抵御真正的假新闻——就像疫苗能预防疾病一样。&lt;/p&gt;
&lt;h2&gt;造假技巧&lt;/h2&gt;
&lt;p&gt;人们制造假新闻的原因有很多：经济利益、政治目的、个人原因甚至仅仅是为了好玩。但是不管出于什么原因，用来误导人们的技巧都是差不多的。&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;&lt;strong&gt;扮演&lt;/strong&gt;：最简单的技巧之一，以误导大众为目的，故意假扮一个公众人物或者组织。同时，他们可能会产出“情绪内容”来获得公众反响。这种内容能够挑起人们的基本情绪，比如愤怒或恐惧。&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;&lt;strong&gt;分化&lt;/strong&gt;：进阶技巧，假新闻生产者通过煽动现有的紧张政治氛围，进一步分化人们的意见。&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;&lt;strong&gt;阴谋论&lt;/strong&gt;：常见的形式是说一个大型机构对某种隐秘行动负责，比如说NASA伪造了人类登月行动以赢得太空竞赛。&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;&lt;strong&gt;倒打一耙&lt;/strong&gt;：一方受到指责的时候，不去反驳指责，而是通过强调对方黑料或者人身攻击等形式降低指责方的可信度。&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;&lt;strong&gt;“Trolling”&lt;/strong&gt;：故意扰乱讨论，挑衅对方产生过激反应，同时结合了上述所有技巧。&lt;/p&gt;
&lt;h2&gt;好新闻，坏新闻&lt;/h2&gt;
&lt;p&gt;当人们使用这些造假技巧的时候，他们在其他语境中识别出这些技巧的几率真的增加了。所以我们和一家荷兰机构（DROG）共同开发了一款叫做“坏新闻”（Bad News）的在线游戏。玩家在游戏中可以利用造假技巧创建他们的假新闻帝国。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://2-im.guokr.com/xQjNKILyO4MSm7yc7zkvVgsA3zXQAqiTGtP7b5WHK1PWAwAAWwIAAFBO.png?imageView2/1/w/640/h/392&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;“坏新闻”游戏主页（https://www.getbadnews.com/#intro），进入网页后可点击页中按钮开始在线游戏。图片来源：getbadnews.com&lt;/p&gt;
&lt;p&gt;游戏可以在任意浏览器上和设备上免费运行，总计耗时15分钟。玩家最初会扮演一个匿名的推特用户，通过建立自己的新闻站点变得专业，再逐渐成为一个假新闻巨头。在玩游戏的过程中，玩家可以赢得徽章，并学习到如何用上面提到的造假技巧来实现你的目的。&lt;/p&gt;
&lt;p&gt;我们认为，一旦你知道了这些诡计的运用方式，你就不会再被它们愚弄。所以我们在一所荷兰高中里做了初步研究，测验了这个方法。我们挑出了一些学生作为实验组，来玩我们设计的游戏；另一些作为控制组的学生则没有玩游戏。&lt;/p&gt;
&lt;p&gt;虽然我们的研究还在起步阶段，但是学生实验的结果显示做法有效：在之后的假新闻检测中，比起没玩游戏的学生，那些玩了游戏的学生认为这些新闻的可信度更低。&lt;/p&gt;
&lt;p&gt;我们希望我们的游戏可以帮助抵制虚假信息的传播：假新闻可以不断复制，“疫苗”也可以扩散。越多的人玩这个游戏，“疫苗”就传播得越快——直到有一天，我们也许能让社会获得假新闻抗性。（编辑：vicko238）&lt;/p&gt;
&lt;p&gt;题图来源：devumi.com&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;
&lt;h3 class=&quot;inline&quot;&gt;编译来源&lt;/h3&gt;
&lt;span&gt;The Conversation, Now there’s a game you can play to ‘vaccinate’ yourself against fake news.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;译文版权属于果壳网（&lt;a title=&quot;果壳网&quot; href=&quot;http://www.guokr.com/&quot;&gt;guokr.com&lt;/a&gt;），禁止转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442809%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Sun, 11 Mar 2018 08:01:54 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442809/</dc:identifier>
</item>
<item>
<title>2018年刑侦推理试题解答</title>
<link>https://www.guokr.com/article/442808/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442808/</guid>
<description>&lt;div readability=&quot;494.06194863752&quot;&gt;
&lt;p&gt;2018年刑侦推理试题:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://2-im.guokr.com/lZZp9Rl-w2Tdx7h2GGdgrpoo9ShzkohVhdS8pfJjp3w4BAAAoAUAAEpQ.jpg?imageView2/1/w/640/h/853&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;解题思路&lt;/h2&gt;
&lt;p&gt;以此题为例，做一个简单的python小教程。&lt;/p&gt;
&lt;h2&gt;提取&quot;第x题的答案&quot;&lt;/h2&gt;
&lt;p&gt;首先，观察到题目中经常出现的说法是：“第x题的答案”怎样怎样，那么常用的一个过程就是要提取第x题的答案。&lt;/p&gt;
&lt;p&gt;在python中可以使用的一个数据结构叫作列表list。列表是使用[ ]括起来的一些元素，要提取其中的内容，用列表名[序号]就可以提取了。比如&lt;/p&gt;
&lt;p&gt;In [1]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;sample=[0.1, 1.2, 2.3, 3.4, 4.5] # “#”号后面的部分是注释，不会进入计算，我后面会在程序中使用注释说明&lt;br/&gt;sample[2] # 注意python的计数是从第0项开始的，所以第2项是2.3而不是1.2&lt;/p&gt;
&lt;p&gt;Out[1]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;2.3&lt;/p&gt;
&lt;p&gt;如果用数字0、1、2、3来表示ABCD的话，就可以把所有的答案放进一个列表里。提取某一题的答案，就是提取列表中的第几项。注意python的列表是从第0项开始计数的，为了读题中不引起混淆, 我将列表的第0项设定成空项.&lt;/p&gt;
&lt;p&gt;In [2]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;# 举例，假设第1题到第5题的答案分别是AABDC，用0、1、2、3来表示ABCD&lt;br/&gt;sample_answer=[_, 0, 0, 1, 3, 2]&lt;br/&gt;# 提取第3题的答案&lt;br/&gt;sample_answer[3]&lt;/p&gt;
&lt;p&gt;Out[2]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;1&lt;/p&gt;
&lt;h2&gt;第1题&lt;/h2&gt;
&lt;p&gt;这道题的答案是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A.A&lt;/li&gt;
&lt;li&gt;B.B&lt;/li&gt;
&lt;li&gt;C.C&lt;/li&gt;
&lt;li&gt;D.D&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;题目中没有给出限定，所以暂时先不管它。&lt;/p&gt;
&lt;h2&gt;第2题&lt;/h2&gt;
&lt;p&gt;第5题的答案是:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A.C&lt;/li&gt;
&lt;li&gt;B.D&lt;/li&gt;
&lt;li&gt;C.A&lt;/li&gt;
&lt;li&gt;D.B&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在第2题里，如何描述A-&amp;gt;C，B-&amp;gt;D，C-&amp;gt;A，D-&amp;gt;B的映射关系呢？可以用一个python数据结构，叫作字典。字典是用{ }括起来的一组元素，每一个元素里有一个key:value的数据对，表示从key到value的映射。&lt;/p&gt;
&lt;p&gt;要表示A-&amp;gt;C，B-&amp;gt;D，C-&amp;gt;A，D-&amp;gt;B的映射关系，可以建立一个字典：&lt;/p&gt;
&lt;p&gt;In [3]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a2_dict={0:2,# A.C&lt;br/&gt;             1:3,# B.D&lt;br/&gt;             2:0,# C.A&lt;br/&gt;             3:2}# D.B&lt;br/&gt;a2_dict[1] # 字典内容的提取，是使用字典名[key]，就可以提取出value&lt;/p&gt;
&lt;p&gt;Out[3]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;3&lt;/p&gt;
&lt;p&gt;用0，1，2，3代表ABCD&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果第二题选A，那么就是说第5题的答案是C，也就是a2_dict[0]的值2&lt;/li&gt;
&lt;li&gt;如果第二题选B，那么就是说第5题的答案是D，也就是a2_dict[1]的值3&lt;/li&gt;
&lt;li&gt;如果第二题选C，那么就是说第5题的答案是A，也就是a2_dict[2]的值0&lt;/li&gt;
&lt;li&gt;如果第二题选D，那么就是说第5题的答案是B，也就是a2_dict[3]的值2&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;假定我们已经知道了所有的答案，放在answer这个列表里，那么第2题的答案是answer[2]，第5题的答案是answer[5]，那么第2题的答案所对应的值就是a2_dict[ answer[2] ]，判断第2题是不是做对了, 就要看&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a2_dict[ answer[2] ]==answer[5]&lt;/p&gt;
&lt;p&gt;是真还是假。&lt;/p&gt;
&lt;p&gt;我将这个判断过程写成一个“函数”，这个函数负责看第2题是否做对了。Python的函数定义是用&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def 函数名(参数表):&lt;br/&gt;     空4格写函数内容&lt;br/&gt;     return 返回结果&lt;/p&gt;
&lt;p&gt;In [4]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test2(answer):&lt;br/&gt;     a2_dict={0:2,# A.C&lt;br/&gt;                  1:3,# B.D&lt;br/&gt;                  2:0,# C.A&lt;br/&gt;                  3:2}# D.B&lt;br/&gt;     return a2_dict[ answer[2] ]==answer[5]&lt;/p&gt;
&lt;p&gt;In [5]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;# 一般写好一个函数，应当测试一下是否写对了。&lt;br/&gt;print(test2([_,1,2,3,4,5])) # 应当为假&lt;br/&gt;print(test2([_,1,0,3,4,2])) # 应当为真，假定第2题的答案是0，对应第5题的答案是2&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;False True&lt;/p&gt;
&lt;h2&gt;第3题&lt;/h2&gt;
&lt;p&gt;以下选项中哪一题的答案与其他三项不同：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. 第3题&lt;/li&gt;
&lt;li&gt;B. 第6题&lt;/li&gt;
&lt;li&gt;C. 第2题&lt;/li&gt;
&lt;li&gt;D. 第4题&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;当然我们可以去一个一个比对，但python中对列表有一个简单的判断命令叫in，如果元素在这个列表中，那么in命令就返回真，否则为假。&lt;/p&gt;
&lt;p&gt;如果把第3题、第6题、第2题、第4题的答案放在一个列表中，那么有&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a3_list=[ answer[3], answer[6], answer[2], answer[4] ]&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果选A，那么就看answer[3] in [ answer[6], answer[2], answer[4] ]是否为假&lt;/li&gt;
&lt;li&gt;如果选B，那么就看answer[6] in [ answer[3], answer[2], answer[4] ]是否为假&lt;/li&gt;
&lt;li&gt;如果选C，那么就看answer[2] in [ answer[3], answer[6], answer[4] ]是否为假&lt;/li&gt;
&lt;li&gt;如果选D，那么就看answer[4] in [ answer[3], answer[6], answer[2] ]是否为假&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;为了产生一个没有某一项的列表，我们可以将列表中的某一项pop出去，剩下的a3_list。所以：&lt;/p&gt;
&lt;p&gt;In [6]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test3(answer):&lt;br/&gt;     a3_list=[answer[3], answer[6], answer[2], answer[4]]&lt;br/&gt;     # 先提取出来要检查的项&lt;br/&gt;     refer=a3_list[ answer[3] ]&lt;br/&gt;     # 在把这一项从列表里pop掉&lt;br/&gt;     a3_list.pop( answer[3] )&lt;/p&gt;&lt;p&gt;     # 看看要检查的项是否在剩下的列表中&lt;br/&gt;     return not(refer in a3_list )&lt;/p&gt;
&lt;p&gt;In [7]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test3([_,1,2,3,4,5,6])) # 应当是真&lt;br/&gt;print(test3([_,1,0,0,0,5,0])) # 应当是假&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;True False&lt;/p&gt;
&lt;h2&gt;第4题&lt;/h2&gt;
&lt;p&gt;以下选项中哪两题的答案相同：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. 第1，5题&lt;/li&gt;
&lt;li&gt;B. 第2，7题&lt;/li&gt;
&lt;li&gt;C. 第1，9题&lt;/li&gt;
&lt;li&gt;D. 第6，10题&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这道题其实和第2题的思路一样，建立一个映射关系的字典，&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a4_dict={0:[1,5],&lt;br/&gt;             1:[2,7],&lt;br/&gt;             2:[1,9],&lt;br/&gt;             3:[6,10]}&lt;/p&gt;
&lt;p&gt;然后验证题目中所说的东西即可。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果选A，那么看a4_dict[0]中的两项[1, 5]，
&lt;ul&gt;&lt;li&gt;其中1是a4_dict[0]这个列表的第0项，第1题的答案就是&lt;span&gt;answer[ a4_dict[0][0] ]&lt;/span&gt;，&lt;/li&gt;
&lt;li&gt;其中5是a4_dict[0]这个列表的第1项，第5题的答案就是&lt;span&gt;answer[ a4_dict[0][1] ]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;如果选B, 那么看a4_dict[1]中的两项[2, 7]，
&lt;ul&gt;&lt;li&gt;其中2是a4_dict[0]这个列表的第0项，第2题的答案就是&lt;span&gt;answer[ a4_dict[0][0] ]&lt;/span&gt;，&lt;/li&gt;
&lt;li&gt;其中7是a4_dict[0]这个列表的第1项，第7题的答案就是&lt;span&gt;answer[ a4_dict[0][1] ]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In [8]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test4(answer):&lt;br/&gt;     a4_dict={0:[1,5],&lt;br/&gt;                  1:[2,7],&lt;br/&gt;                  2:[1,9],&lt;br/&gt;                  3:[6,10]}&lt;br/&gt;     return answer[ a4_dict[ answer[4] ][0]] == answer[ a4_dict[ answer[4] ][1]]&lt;/p&gt;
&lt;p&gt;In [9]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print( test4([_,1,2,3,0,5,6,7]) ) # 应当为假&lt;br/&gt;print( test4([_,1,2,3,0,1,6,7]) ) # 应当为真&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;False True&lt;/p&gt;
&lt;h2&gt;第5题&lt;/h2&gt;
&lt;p&gt;以下选项中哪一题的答案与本题相同&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. 第8题&lt;/li&gt;
&lt;li&gt;B. 第4题&lt;/li&gt;
&lt;li&gt;C. 第9题&lt;/li&gt;
&lt;li&gt;D. 第7题&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;想必已经越来越熟练了，先建立一个映射关系字典：&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a5_dict={0:8,&lt;br/&gt;             1:4,&lt;br/&gt;             2:9,&lt;br/&gt;             3:7}&lt;/p&gt;
&lt;p&gt;本题的答案当然就是answer[5]，&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果选A，那么就是看第8题的答案，也就是answer[ a5_dict[0] ]&lt;/li&gt;
&lt;li&gt;如果选B，那么就是看第4题的答案，也就是answer[ a5_dict[1] ]&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In [10]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test5(answer):&lt;br/&gt;     a5_dict={0:8,&lt;br/&gt;                  1:4,&lt;br/&gt;                  2:9,&lt;br/&gt;                  3:7}&lt;br/&gt;     return answer[5] == answer[ a5_dict[ answer[5] ] ]&lt;/p&gt;
&lt;p&gt;In [11]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test5([_,1,2,3,4,0,6,7,0])) # 应当为真, 第5题的答案与第8题都是A print(test5([_,1,2,3,4,1,6,7,0])) # 应当为假, 第5题的答案选的是B, 但与第4题的答案不同&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;True False&lt;/p&gt;
&lt;h2&gt;第6题&lt;/h2&gt;
&lt;p&gt;以下选项中哪两题的答案与第8题相同&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. 第[2,4]题&lt;/li&gt;
&lt;li&gt;B. 第[1,6]题&lt;/li&gt;
&lt;li&gt;C. 第[3,10]题&lt;/li&gt;
&lt;li&gt;D. 第[5,9]题&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;出题人已经开始重复自己了，这道题和第4题区别不大。&lt;/p&gt;
&lt;p&gt;建立一个映射字典：&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a6_dict={0:[2,4],&lt;br/&gt;             1:[1,6],&lt;br/&gt;             2:[3,10],&lt;br/&gt;             3:[5,9]}&lt;/p&gt;
&lt;p&gt;第8题的答案当然是answer[8]，&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果选A，那么answer[8]应当等于a6_dict[0]中的第2、4题的答案，
&lt;ul&gt;&lt;li&gt;其中2是&lt;span&gt;a6_dict[0][0]&lt;/span&gt;，第2题的答案也就是&lt;span&gt;answer[a6_dict[0][0]]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;其中4是&lt;span&gt;a6_dict[0][1]&lt;/span&gt;，第4题的答案也就是&lt;span&gt;answer[a6_dict[0][1]]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In [12]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test6(answer):&lt;br/&gt;     a6_dict={0:[2,4],&lt;br/&gt;                  1:[1,6],&lt;br/&gt;                  2:[3,10],&lt;br/&gt;                  3:[5,9]}&lt;br/&gt;     return (answer[8] == answer[a6_dict[ answer[6] ][0]] == answer[a6_dict[ answer[6] ][1]] )&lt;/p&gt;
&lt;p&gt;In [13]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test6([_,1,0,3,0,5,0,7,0])) # 应当为真，第6题选了A，第8题的答案是A，第2、4题也选的是A print(test6([_,1,0,3,0,5,1,7,2])) # 应当为假，第6题选了B，第8题的答案是C，第1、6题选的不是C&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;True False&lt;/p&gt;
&lt;h2&gt;第7题&lt;/h2&gt;
&lt;p&gt;此十道题中，被选中次数最少的选项字母为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. C&lt;/li&gt;
&lt;li&gt;B. B&lt;/li&gt;
&lt;li&gt;C. A&lt;/li&gt;
&lt;li&gt;D. D&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;先建立个映射字典：&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a7_dict={0:2,&lt;br/&gt;             1:1,&lt;br/&gt;             2:0,&lt;br/&gt;             3:3}&lt;/p&gt;
&lt;p&gt;这道题开始有新花样了，“选中次数最少的字母”，那就要统计一下每个字母都被选中了多少次。&lt;/p&gt;
&lt;p&gt;列表里有个.count(value)方法，可以统计出value在列表中出现了多少次。所以：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;字母A在答案中出现的次数=answer.count(0)&lt;/li&gt;
&lt;li&gt;字母B在答案中出现的次数=answer.count(1)&lt;/li&gt;
&lt;li&gt;字母C在答案中出现的次数=answer.count(2)&lt;/li&gt;
&lt;li&gt;字母D在答案中出现的次数=answer.count(3)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;最少，可以用min(列表)来表示，那么各个字母出现次数中最少的数量就是：&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;min( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;
&lt;p&gt;In [14]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test7(answer):&lt;br/&gt;     a7_dict={0:2,&lt;br/&gt;                  1:1,&lt;br/&gt;                  2:0,&lt;br/&gt;                  3:3}&lt;br/&gt;     return answer.count(a7_dict[answer[7]]) == min( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;
&lt;p&gt;In [15]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test7([&quot;&quot;,1,2,3,4,5,6,0,8,9,10])) # 应当为真，这里面所有的字母都只出现了1次 print(test7([&quot;&quot;,1,2,3,4,5,6,1,8,9,10])) # 应当为假，1出现了两次，比其他都多&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;True False&lt;/p&gt;
&lt;h2&gt;第8题&lt;/h2&gt;
&lt;p&gt;以下选项中，哪一题的答案与第1题的答案在字母中不相邻：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. 第7题&lt;/li&gt;
&lt;li&gt;B. 第5题&lt;/li&gt;
&lt;li&gt;C. 第2题&lt;/li&gt;
&lt;li&gt;D. 第10题&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;先建个映射关系：&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a8_dict={0:7,&lt;br/&gt;             1:5,&lt;br/&gt;             2:2,&lt;br/&gt;             3:10}&lt;/p&gt;
&lt;p&gt;这道题说的是字母不相邻，我们已经用数字0123表示字母ABCD了，那么相邻，就是相差为±1，或者是减完以后平方=1。Python用&lt;span&gt;**&lt;/span&gt;表示平方, 用&lt;span&gt;!=&lt;/span&gt;来表示不等于&lt;/p&gt;
&lt;p&gt;第一题的答案是answer[1]，&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果选A，那么有&lt;span&gt;(answer[1]-answer[7])**2 !=1&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;如果选B，那么有&lt;span&gt;(answer[1]-answer[5])**2 !=1&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In [16]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test8(answer):&lt;br/&gt;     a8_dict={0:7,&lt;br/&gt;                  1:5,&lt;br/&gt;                  2:2,&lt;br/&gt;                  3:10}&lt;br/&gt;     return (answer[1]-answer[ a8_dict[answer[8]] ])**2 !=1&lt;/p&gt;
&lt;p&gt;In [17]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test8([_,1,2,3,4,5,6,7,0])) #应当为真，第8题选了A，第1题的答案是1，与第7题的答案7不相邻 print(test8([_,4,2,3,4,5,6,7,1])) #应当为假，第8题选了B，第1题的答案是4，与第5题的答案5相邻&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;True False&lt;/p&gt;
&lt;h2&gt;第9题&lt;/h2&gt;
&lt;p&gt;已知“第1题与第6题的答案相同”与“第x题与第5题的答案相同”的真假性相反，那么X为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A. 第6题&lt;/li&gt;
&lt;li&gt;B. 第10题&lt;/li&gt;
&lt;li&gt;C. 第2题&lt;/li&gt;
&lt;li&gt;D. 第9题&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;建立映射关系：&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a9_dict={0:6,&lt;br/&gt;             1:10,&lt;br/&gt;             2:2,&lt;br/&gt;             3:9}&lt;/p&gt;
&lt;p&gt;“第1题与第6题的答案相同”，这句话的逻辑值是answer[1]==answer[6]&lt;/p&gt;
&lt;p&gt;真假性相反用not表示&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果选A，那么X=6，第6题与第5题的答案相同的逻辑值是answer[6]==answer[5]，那么not(answer[6]==answer[5])==(answer[1]==answer[6])&lt;/li&gt;
&lt;li&gt;如果选B，那么X=10，第10题与第5题的答案相同的逻辑值是answer[10]==answer[5]，那么not(answer[10]==answer[5])==(answer[1]==answer[6])&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In [18]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test9(answer):&lt;br/&gt;     a9_dict={0:6,&lt;br/&gt;                  1:10,&lt;br/&gt;                  2:2,&lt;br/&gt;                  3:9}&lt;br/&gt;     return not(answer[a9_dict[answer[9]]]==answer[5])==(answer[1]==answer[6])&lt;/p&gt;
&lt;p&gt;In [19]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test9([_,1,2,3,4,5,6,7,8,0,10])) # 应当为假，第9题选了A，第1题与第6题不同，那么第6题应该和第5题相同才是真假性相反, 这里不满足&lt;br/&gt;print(test9([_,1,2,3,4,6,6,7,8,0,10])) # 应当为真，第9题选了A，第1题与第6题不同，那么第6题应该和第5题相同才是真假性相反&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;False True&lt;/p&gt;
&lt;h2&gt;第10题&lt;/h2&gt;
&lt;p&gt;在此10道题中，ABCD四个字母出现此处最多与最少者的差为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A.3&lt;/li&gt;
&lt;li&gt;B.2&lt;/li&gt;
&lt;li&gt;C.4&lt;/li&gt;
&lt;li&gt;D.1&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们已经胜利在望，发现出题人也没有太多花招了。这题和前面第7题很相似，只是第7题计算了最少，这里要计算最多了.&lt;/p&gt;
&lt;p&gt;既然最少可以用min(列表)来表示，那么各个字母出现次数中最少的数量为: min( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;
&lt;p&gt;最多当然用max(列表)来表示，于是各个字母出现次数中最多的数量为: max( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;
&lt;p&gt;建立映射关系:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;a10_dict={0:3,&lt;br/&gt;               1:2,&lt;br/&gt;               2:4,&lt;br/&gt;               3:1}&lt;/p&gt;
&lt;p&gt;In [20]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;def test10(answer):&lt;br/&gt;     a10_dict={0:3,&lt;br/&gt;                    1:2,&lt;br/&gt;                    2:4,&lt;br/&gt;                    3:1}&lt;br/&gt;     answer_count_list=[answer.count(0),answer.count(1),answer.count(2),answer.count(3) ]&lt;br/&gt;     diff= max( answer_count_list ) - min( answer_count_list )&lt;br/&gt;     return a10_dict[answer[10]]==diff&lt;/p&gt;
&lt;p&gt;In [21]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;print(test10([&quot;&quot;,1,2,3,4,5,6,7,8,9,0])) #应当为假，第10题选了A，最大最小要相差3，但每个字母只出现了一次, 最大最小相差是0&lt;br/&gt;print(test10([&quot;&quot;,1,1,1,4,5,6,7,8,9,0])) #应当为真，第10题选了A，最大最小要相差3，选1出现了3次，选2、3都没有，最大最小相差是3&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;False True&lt;/p&gt;
&lt;h2&gt;穷举&lt;/h2&gt;
&lt;p&gt;现在已经把上面10道题的判定函数都写好了。要求解的答案，就是要令上述10道题的判别函数都返回为真。&lt;/p&gt;
&lt;p&gt;10道单选题，每道题可能有4种答案，一共的可能性是&lt;/p&gt;
&lt;p&gt;4&lt;sup&gt;10&lt;/sup&gt;=1048576&lt;/p&gt;
&lt;p&gt;看起来也不大，所以就穷举好了。最简单的方式就是for循环。虽然也还有其他生成穷举序列的方法，但本着“想到解法就先实现出来看看”的敏捷开发思路，先用for循环吧。&lt;/p&gt;
&lt;p&gt;所谓for循环，就是让一个变量依次取得列表中的所有值&lt;/p&gt;
&lt;p&gt;In [22]:&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;choice=[0,1,2,3]&lt;br/&gt;test1=True&lt;br/&gt;answer=[]&lt;br/&gt;for a1 in choice:&lt;br/&gt;     for a2 in choice:&lt;br/&gt;          for a3 in choice:&lt;br/&gt;               for a4 in choice:&lt;br/&gt;                    for a5 in choice:&lt;br/&gt;                         for a6 in choice:&lt;br/&gt;                              for a7 in choice:&lt;br/&gt;                                   for a8 in choice:&lt;br/&gt;                                        for a9 in choice:&lt;br/&gt;                                             for a10 in choice:&lt;br/&gt;                                                  answer=[&quot;&quot;,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10]&lt;br/&gt;                                                  if (True==&lt;br/&gt;                                                      test1==&lt;br/&gt;                                                      test2(answer)==&lt;br/&gt;                                                      test3(answer)==&lt;br/&gt;                                                      test4(answer)==&lt;br/&gt;                                                      test5(answer)==&lt;br/&gt;                                                      test6(answer)==&lt;br/&gt;                                                      test7(answer)==&lt;br/&gt;                                                      test8(answer)==&lt;br/&gt;                                                      test9(answer)==&lt;br/&gt;                                                      test10(answer)):&lt;br/&gt;                                                      print(answer)&lt;br/&gt;print(&quot;That's all&quot;)&lt;/p&gt;
&lt;p class=&quot;editors-note&quot;&gt;['', 1, 2, 0, 2, 0, 2, 3, 0, 1, 0]&lt;br/&gt;That's all&lt;/p&gt;
&lt;h2&gt;答案&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/6kdvkAHiYVLKLwxi1NjIySCWNxzDIUkcXFLG0IPg6k44BAAAoAUAAEpQ.jpg?imageView2/1/w/640/h/853&quot;/&gt;&lt;/p&gt;
&lt;p&gt;转载自&lt;a href=&quot;https://goldengrape.github.io/&quot;&gt;金色葡萄个人主页&lt;/a&gt;，已获得授权。（编辑：&lt;a href=&quot;http://www.guokr.com/i/0356939795/&quot;&gt;Steed&lt;/a&gt;）&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;本文经授权转载，禁止再次转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442808%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Sun, 11 Mar 2018 08:01:53 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442808/</dc:identifier>
</item>
<item>
<title>奥斯卡小金人，韦布望远镜同款金灿灿！</title>
<link>https://www.guokr.com/article/442807/</link>
<guid isPermaLink="true" >https://www.guokr.com/article/442807/</guid>
<description>&lt;div readability=&quot;61&quot;&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/sn5GRWF12OT_kBHgSRe1yIQACvNjA9YAcdSXZ1T1GaUQDgAAYAkAAEpQ.jpg?imageView2/1/w/640/h/426&quot;/&gt;奥斯卡小金人，使用了韦布空间望远镜上的同款镀金技术。图片来源：NASA&lt;/p&gt;
&lt;p&gt;奥斯卡颁奖礼上，你留意到金光闪闪的小金人了吗？&lt;/p&gt;
&lt;p&gt;作为奥斯卡获奖者的殊荣，小金人已经颁发了几十年。不过，一直都有获奖者抱怨说，他们的小金人后来褪色了。毕竟，小金人不是由纯金打造，只是在合金材料外面镀了一层金。&lt;/p&gt;
&lt;p&gt;为了彻底解决小金人褪色问题，奥斯卡的主办方找到了与NASA有着密切合作的Epner技术公司。毕竟，对于镀金技术的要求，没有哪家机构会比NASA更加严格。&lt;/p&gt;
&lt;p&gt;为什么NASA会对镀金技术有要求呢？因为金子在太空里很有用，能够很好地反射红外线，帮助天文学家观测非常遥远的天体。而且，金子的化学性质也很稳定，完全不会被氧化，这意味着镀了金的镜面不会失去光泽。&lt;/p&gt;
&lt;p&gt;最常见的镀金方法称为蒸镀法——先在真空中加热金子，把它变成气体，再让它沉积在物体表面，形成一层薄膜。这种方法效果不错，但存在缺陷。金膜不仅反射率会损失，本身也极其脆弱，容易磨损剥落。在小金人上，磨损可能只是导致褪色，而在太空里，剥落的金箔碎片却有可能破坏航天器上的敏感设备。&lt;/p&gt;
&lt;p&gt;Epner使用的电镀工艺称为激光镀金，镀出来的金子本来就比蒸镀法硬一些，反射率也高一些。即使如此，NASA对于这项技术仍不满意，在上世纪90年代对此提出了更高的要求。&lt;/p&gt;
&lt;p&gt;当时，Epner负责给火星环球勘测者上的激光测高仪作镜面镀金。NASA要求他们在保留镀金层硬度的同时，把反射率再提高一些，以便提高激光测高仪的灵敏度，更精确地测量火星表面的地形高度。&lt;/p&gt;
&lt;p&gt;与此同时，Epner还承接了给凯克天文台望远镜上的副镜镀金的任务。这项任务要求他们，在保留高反射率的同时，把镀金层做得更硬一些。毕竟，望远镜的副镜时不时就需要清洁，必须确保清洁时不会在上面留下任何划痕。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3-im.guokr.com/-TmWMpkwEenePfKHAFycfg-Y6SVljt9LHxPU_7VbfIXiAgAAWAIAAFBO.png?imageView2/1/w/640/h/520&quot;/&gt;凯克望远镜上的副镜，要求在清洁时不能留下任何划痕。图片来源：Epner&lt;/p&gt;
&lt;p&gt;为了同时满足这两项苛刻要求，Epner公司调整了他们的专利工艺，在确保反射率尽可能高的情况下，把镀金层的硬度提高到了纯金的3倍。用这种工艺镀金的镜面，不仅金光闪闪，而且历久弥新。&lt;/p&gt;
&lt;p&gt;听起来，这刚好可以解决奥斯卡小金人的褪色问题。&lt;/p&gt;
&lt;p&gt;事实上，从2016年起，奥斯卡小金人就交由Epner公司使用这项专利技术进行镀金。为了照顾客户心理，Epner还给小金人提供只要褪色就免费镀金这项终身服务。不过公司总裁自信满满，认为这是一项永远不需要去兑现的承诺。&lt;/p&gt;
&lt;p&gt;毕竟，同样的镀金技术已经在太空中使用了30多年，在那里可没有人能够提供重新镀金的服务。&lt;/p&gt;
&lt;p class=&quot;img-caption&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://1-im.guokr.com/4y9rSrRa5g-aBHu5hxIc-rupXPfep2i4wS3zWkz9SuzkDAAAbwgAAEpQ.jpg?imageView2/1/w/640/h/418&quot;/&gt;韦布望远镜金光闪闪的主镜面，用的并不是奥斯卡小金人上的镀金技术。图片来源：NASA&lt;/p&gt;
&lt;p&gt;PS：韦布空间望远镜上也使用了同样的镀金技术，不过并没用在金光闪闪的主镜面上，而是用在了中红外设备的冷却管上。镀金冷却管能够很好地隔绝热辐射，让中红外设备保持在-266℃的工作温度，帮助天文学家更灵敏地探测来自遥远宇宙的红外辐射。&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;本文版权属于果壳网（&lt;a title=&quot;果壳网&quot; href=&quot;http://www.guokr.com/&quot;&gt;guokr.com&lt;/a&gt;），禁止转载。如有需要，请联系&lt;a title=&quot;联系果壳&quot; href=&quot;mailto:sns@guokr.com&quot;&gt;sns@guokr.com&lt;/a&gt;&lt;br/&gt;&lt;span class=&quot;rights-entrance&quot;&gt;如在其他平台看到此文章被盗用，&lt;a title=&quot;果壳网维权页面&quot; href=&quot;http://www.guokr.com/article/safeguard?url=https%3A%2F%2Fwww.guokr.com%2Farticle%2F442807%2F&quot;&gt;请告诉我们&lt;/a&gt;（文章版权保护服务由维权骑士提供）&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Sun, 11 Mar 2018 08:01:52 +0000</pubDate>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.guokr.com/article/442807/</dc:identifier>
</item>
</channel>
</rss>