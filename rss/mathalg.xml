<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>漫步在冯·诺依曼的花园——天才的花朵</title>
<link>http://www.jintiankansha.me/t/l62CdHUBSK</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/l62CdHUBSK</guid>
<description>&lt;section class=&quot;&quot; data-style-type=&quot;1&quot; data-tools=&quot;&amp;#x65B0;&amp;#x5A92;&amp;#x4F53;&amp;#x6392;&amp;#x7248;&quot; data-id=&quot;8363&quot; readability=&quot;1&quot;&gt;&lt;blockquote data-css=&quot;border-color: rgb(238, 238, 238) rgb(238, 238, 238) rgb(238, 238, 238) rgb(159, 136, 127);border-radius: 3px;border-style: solid;border-width: 1px 1px 1px 5px;margin: 10px 0px;padding: 10px&quot; readability=&quot;5&quot;&gt;
&lt;section data-style=&quot;color: inherit; box-sizing: border-box;line-height: 1.75em; text-align: justify;&quot; data-css=&quot;box-sizing: border-box;color: inherit;line-height: 1.75em;text-align: justify&quot;&gt;&lt;span data-css=&quot;box-sizing: border-box !important;color: rgb(168, 39, 59);font-size: 14px;max-width: 100%;overflow-wrap: break-word !important;word-wrap: break-word !important&quot;&gt;&lt;strong data-css=&quot;box-sizing: border-box !important;color: rgb(165, 28, 48);max-width: 100%;word-wrap: break-word !important&quot;&gt;作者简介：&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;弗里曼·戴森（Freeman Dyson）是英国物理学家与数学家，任普林斯顿高等研究院教授凡四十余年，是未取得博士学位却享有隆崇学术地位的特例。戴森兴趣极广，思想广阔，超前时代，是典型的文艺复兴人。科普著作极丰，文章散见于各杂志媒体。&lt;/span&gt;&lt;/section&gt;&lt;section data-style=&quot;color: inherit; box-sizing: border-box;line-height: 1.75em; text-align: justify;&quot; data-css=&quot;box-sizing: border-box;color: inherit;line-height: 1.75em;text-align: justify&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;译者简介：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;赵学信，网站工程师。兼事翻译、写作。&lt;/span&gt;&lt;/p&gt;
&lt;section data-style=&quot;color: inherit; box-sizing: border-box;line-height: 1.75em; text-align: justify;&quot; data-css=&quot;box-sizing: border-box;color: inherit;line-height: 1.75em;text-align: justify&quot;/&gt;
&lt;section data-style=&quot;color: inherit; box-sizing: border-box;line-height: 1.75em; text-align: justify;&quot; data-css=&quot;box-sizing: border-box;color: inherit;line-height: 1.75em;text-align: justify&quot;/&gt;&lt;blockquote data-css=&quot;background-color: rgb(255, 255, 255);box-sizing: border-box !important;color: rgb(62, 62, 62);font-size: 16px;max-width: 100%;white-space: normal;word-wrap: break-word !important&quot; readability=&quot;6&quot;&gt;
&lt;section data-style=&quot;color: inherit; box-sizing: border-box;line-height: 1.75em; text-align: justify;&quot; data-css=&quot;box-sizing: border-box;color: inherit;line-height: 1.75em;text-align: justify&quot; readability=&quot;6&quot;&gt;&lt;p&gt;&lt;span&gt;本文出自 2010 年 5 月布朗大学计算分子生物学会议中之「冯·诺依曼卓越演讲系列」。戴森因病未能出席，由儿子乔治·戴森代为宣读，讲稿刊登于 Notices of the AMS &lt;strong&gt;60&lt;/strong&gt; (2013), no. 2，以下译文刊登在《数理人文》第 3 期（2015 年）。媒体或机构如需转载，请联系《数理人文》（订阅号：math_hmat）。&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/section&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数学基础&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰·冯·诺依曼（John von Neumann）身后留下大量著作，这些作品由陶伯（Abraham Taub）编纂成六卷的文集 [1]。这套文集是他的花园，里面收藏着他种下的各式各样的繁茂植栽，每一株都是从一粒种子、亦即他脑海里的一个想法或问题所长成。他发展想法或是解决问题，然后写下并发表。他写作速度快，发表也快，所以园中繁花仍鲜丽。今天这场演讲，我决定要去他的花园走一趟，看看能发现什么。很幸运的是，文集里只有两篇论文是以匈牙利文写成。他在三十岁来到美国定居之前，大多是用德文写作，此后则是用英文。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/8SzzdkjOJnYBKUwAMSMp2oyb0v5mEs6hN7HX6XuOYCKwibZibMkXoIt8nWzicSgsxb0sibmsy5OnNs9xJfP6EkZW3A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-ratio=&quot;0.75&quot; data-w=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;法索利高中（Fasori Gimnázium）是冯·诺依曼的母校，曾是匈牙利的名校，校友名人辈出（维基百科，VinceB 摄）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰在 10 到 18 岁时，就读于布达佩斯著名的路德会高中，那儿的教师优秀，而同学更是杰出。日后成为卓越物理学家的威格纳（Eugene Wigner）即是他的同学，也是他终身的挚友。约翰的父亲深知路德会高中无法满足他的学识需求，约翰的数学热忱远超出学校的教学能力，所以他的父亲聘请布达佩斯大学的数学家费克特（Michael Fekete）担任他的家教。约翰花园中的第一朵花是题为《论某些最小多项式的零根位置》（&lt;span&gt;On the position of zeroes of certain minimum polynomials&lt;/span&gt;）[2] 的论文，它是约翰 18 岁时，和费克特合作撰写发表的。文章的风格干涩、专业，遵循两千年前由欧几里得所奠立的传统。约翰以数学家身分所写的东西几乎都是采用欧几里得风格，陈述并证明一条又一条定理，没有多余的赘言。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/8SzzdkjOJnYBKUwAMSMp2oyb0v5mEs6hRtwn70vN93J365dCTVZSyRwHuaPRZAvhxGdr9PC1dK1kFbC7VeOt1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.7699530516431925&quot; data-w=&quot;639&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;冯·诺依曼在家中（摄影者不明，普林斯顿高等研究院 Shelby White and Leon Levy Archives Collection 提供）&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; 
&lt;p&gt;&lt;span&gt;虽然这篇处女作的主题应该是由费克特提议的，但行文已看得出约翰的风格。约翰作为数学家的独特天赋，是把一切数学领域的问题都转化成逻辑问题。他总能凭直觉看出问题的逻辑本质，然后运用简单的逻辑规则来解决问题。他的处女作即是这种思考风格的典例。一个应该属于几何的定理，用来限制某些单复变函数零根的可能位置，被转换成一条纯粹逻辑的叙述。一切几何上的复杂细节都消失不见，定理证明变得又短又简单。整篇论文看不到计算，只有文字定义和逻辑推导。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;庭园里的下一朵花是约翰在 19 岁时发表的首篇个人论文，《论超限数的引入》（&lt;span&gt;On the introduction of transfinite numbers&lt;/span&gt;）[3]。这篇文章显示出约翰在学术生涯的起点，正要张开他的数学双翼离巢远飏时，他最强烈的兴趣在哪里。在当时及其后五年，他最大的热忱在于理解并重建数学的逻辑基础。他登场的时机再幸运不过，因为当时正是数学基础最为混乱的历史性时刻。19 世纪时，康托（Georg Cantor）发明了奇妙的超限数理论，能够为庞大阶系的各种无穷大赋予明确的定义，从而大幅拓展了数学的视野。然而到了 20 世纪初，罗素（Bertrand Russell）及其他批评者发现康托的理论会导致逻辑矛盾。罗素悖论不只让人对康托创造的无穷大新世界起疑，同时也让人怀疑起奠基已久的古典数学概念。当约翰开始和费克特讨论，并且阅读数学文献时，他立刻察觉到数学正处于危机状态。既然康托的数学推理会导致逻辑悖谬，人们便不知道如何能将可靠的数学以及虚幻的臆语区分开来。约翰在 19 岁时便下定决心：解决数学危机，让数学重新归位到稳固的逻辑基础，就是他的使命。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰这篇论文的第一段只有一句话：“本文的目的在于确切无疑地厘清康托的序数（ordinal number）概念。”论文接下来提出序数的新定义，并且证明新定义可以导出与康托的旧定义相同的结果。约翰并未宣称他已解决康托理论所衍生的危机，而是藉由赋予康托概念更明确的定义，使得危机的轮廓更清晰。轮廓更清晰即表示对问题的理解更好，而理解更好即是解决问题的第一步。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰的第二篇论文，《集合论的一种公设化》（&lt;span&gt;An axiomatization of set theory&lt;/span&gt;）[4] 是两年后，当他 21 岁、在柏林大学念书时发表的。集合论是关于东西以及东西集合的理论，它只考虑这些东西的逻辑关系，忽略其个体性质。从集合论的观点，你、我、恒星、行星、词语和数字都只是东西，也都被同等看待。公设化指的是用两千多年前欧几里得描述几何的方式来描述集合论，也就是从几个被称为公设的基本假定出发，藉由逻辑推导来建构整套理论。约翰为集合论找到一组新公设，他希望他的新公设可以为数学里所有有用的部分，建立相容一致的逻辑基础，同时还能避免出现悖论。不过他也很清楚，他赋予数学的这个一致性基础只是愿望，并不是已被证明的事实。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;冯·诺依曼公设的最主要创见是导入两种对象，称为「I 物」（one-thing）和「II 物」（two-thing）。他使用这种抽象的名称是为了避免使用熟悉的词汇可能会造成误导。为了让约翰的想法更容易理解，在此我以「集合」来称呼「I 物」，以「类」（class）来称呼「II 物」。所以约翰的集合论有两种对象：集合，大致上是比较小的，因此可以用一般规则来整个处理；类，则是大到无法整个处理。他所建构的公设可以让「所有集合所成的类」（class of all sets）是有明确定义的对象，这是一个类而不是集合。至于「所有集合所成的集合」（set of all sets）以及「所有类所成的类」（class of all classes）则都不允许存在。这个简单的技巧，亦即对小的集体（collective）和大的集体分别使用不同的名称与规则，使得约翰能避免掉逻辑悖论。旧版的集合论因为太过自由运用「所有集合的集合」的概念，以致产生悖论。约翰的新版本不允许这个概念，但是允许使用「所有集合的类」，于是提供了逻辑建构数学的架构。所有集合的类即是数学的宇宙，在其架构之内，所有数学使用的集体都可以定义。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰在撰写这篇论文之前，曾和哥廷根大学的希尔伯特（David Hilbert）讨论过。希尔伯特比约翰年长四十岁，是当时全世界最著名的数学家。希尔伯特当时正大力提倡一个藉由解决「判定性问题」（Entscheidungs problem） 以化解数学危机的计划。解决判定性问题，指的是找出一种形式方法，以判定任何一条数学陈述的真或假。若能解决判定性问题，则可证明数学公设既是一致的（consistent），也是范畴的（categorical）。一致指的是，任何一个命题和它的否定命题，不能都被证明为真。范畴指的是，对于任何一个命题，公设系统都能证明它的真假&lt;/span&gt;&lt;em&gt;&lt;span&gt;【译注：戴森的说明通常称为完备的（complete）而不是范畴的。「范畴的」指的是该系统只有唯一的模型（model），其中把同构的模型视为相同。这两个概念经常被互相比较，但并不相同】&lt;/span&gt;&lt;/em&gt;&lt;span&gt;。希尔伯特以他数学界精神导师的权威身分宣称，若要解决数学危机，就必须找出一组既是一致、也是完备的公设。只有在每个有意义的数学命题都能被证明出真假之时，数学才能奠立在稳固的基础上。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在这篇公设论论文的最后，约翰简短而谦虚地总结了他的贡献。他并未宣称他解决了数学危机，而只是宣称藉由找出一组已知不会发生自我矛盾的公设，因而开启了一条解决危机的道路。他并未证明他的公设是一致的，也未证明它们是完备的。他在论文结尾用两句话，不太委婉地表达他对希尔伯特纲领的疑虑：“即使是希尔伯特的理路在此也是无能为力，因为这项反对意见所关切的是集合论的完备性，而非一致性。我们现在所能做的，是承认又出现了一个反驳集合论的论点，而且目前看不出有何化解方法。”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;三年之后，约翰针对数学基础发表了两篇长很多的论文。其中之一是《论希尔伯特的证明论》（&lt;span&gt;On Hilbert's proof theory&lt;/span&gt;）[5]；另一篇《集合论的公设化》（&lt;span&gt;The axiomatization of set theory&lt;/span&gt;）[6] 是他的博士论文，这是他 1925 年论文的扩充版。从这两篇论文可以看出，约翰仍急切地想遵循希尔伯特来挽救数学。但他陷入困境。他创造了一组简洁优美的新公设──由哥德尔（Kurt Gödel）后来的研究可知，约翰的公设正是理解数学真正本质所需要的──但他不知道该拿它们干什么。自此之后，他放弃了拯救数学的任务，转而从事其他研究。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/8SzzdkjOJnYBKUwAMSMp2oyb0v5mEs6hgmfdFkCgNwGmfiaY2bxib9I27mvLVcPKxiaweafnJuSIAZfm8icDglooCg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-ratio=&quot;0.6867469879518072&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;哥德尔（A. Eisenstaedt 摄 ）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;又再过了三年，维也纳的哥德尔于 1931 年证出了两个彻底摧毁希尔伯特纲领的定理。哥德尔证明，任何的数学公设系统都不可能是完备的，而且任何公设系统也不可能证明其自身是一致的。自欧几里得至希尔伯特的历代数学家都以为数学是绝对真理的唯一典册，但自哥德尔之后，这一点再也不成立。自哥德尔之后，数学只是人类心智的创造物，其真假端视人的品味与偏好而定。对希尔伯特和许多同时代的人而言，哥德尔的发现是一场大灾难，他们试图为数学建立一个唯一且稳固基础的希望破灭了。但约翰立即看出，哥德尔所开辟出的新自由其实是得，而不是失。约翰在一场公开演讲中，赞誉哥德尔是继亚里士多德之后最伟大的逻辑学家。约翰很遗憾他自己不能在三年前做出哥德尔的发现，但他乐于见到哥德尔使用他 1925 年论文里区分集合和类的公设系统。对于能在新的数学基础上有重要贡献，约翰相当引以为荣。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;牌局和量子&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;下一朵花《宴会游戏的理论》（&lt;span&gt;Theory of party games&lt;/span&gt;）[7] 出自花园的另一区。约翰 24 岁时成为职业数学家，在柏林大学任讲师。他很享受柏林的夜生活，也对扑克和百家乐（baccarat）之类混合运气和技巧的纸牌赌局深感兴趣。在此之前，法国数学家伯瑞尔（Émile Borel）曾问过，是否存在有赢得这类牌局的最佳逻辑策略。他提出问题，却无法解答。约翰解决了这问题，其结果是一个深刻的数学定理。对于只有两个玩家的对局（game），存在有唯一一种策略，可让两人都得到最有利的结果。证明这种策略的存在，则是约翰思考风格的又一范例──他把一个计算的问题化约成逻辑问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;最佳策略通常需要相当大的随机性，才能让玩家的行为真正无法预测。玩家 A 必须丢股子来决定如何行动，这样玩家 B 就不能藉由猜对玩家 A 的下一步而获胜。在扑克牌局中，丢股子的结果有时会要 A 在拿到弱牌时下大赌注，这称为唬牌。如果 A 从不唬牌，B 就可以更正确猜对 A 手中牌张的好坏，从而赢得牌局。在论文的最后，约翰写道：“数学结果符合已知的赢牌经验法则，例如玩扑克时需要唬牌，这可视为是我们理论的实验确认。”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;关于三人以上的对局，约翰没找到优雅的解答。要在三人对局里取得获胜的最佳机会，A 必须贿赂或威胁 B 和他结盟来对抗 C。三人会争抢胜利者的位置，亦即 A 和 B，避免成为失败者 C。竞争的结果不是藉由数学，而是由个人意志或心计来决定。在三人对局的讨论终了时，约翰说：“这里出现了一个在相当温和且平衡良好的两人对局中完全没有的因素：争斗。”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在花园的另一角落，有一朵小花独自绽放，那是一篇题为《将区间分解成可数无穷多个全等子集》（&lt;span&gt;The division of an interval into a denumerable infinity of identical parts&lt;/span&gt;）[8] 的小文章。这篇论文解决了一个由波兰数学家史坦豪斯（Hugo Steinhaus）所提出的问题。我在二次世界大战之后，在美国和史坦豪斯见过面。两次大战之间的波兰出了一批杰出数学家，他是其中为数不多的幸存者之一。这些人里头，一半是犹太人，另一半不是。两个群体幸存的机会差不多，因为离开波兰的大多数是犹太人，而留在波兰还能活下来的全是非犹太人。约翰一下子就解决了史坦豪斯问题，此后再也没回到这个题目。他证明的定理是反直觉的，而其证明也出乎意料。这定理是关于区间上的点集。区间指的是直线上的有限段落。可数无穷指的是集合里的物件可以用自然数 1、2、3、⋯ 编号，直趋无穷大。这定理说的是，存在一组点集 S&lt;sub&gt;1&lt;/sub&gt;、S&lt;sub&gt;2&lt;/sub&gt;、S&lt;sub&gt;3&lt;/sub&gt;、⋯，具备以下性质：（1）区间上的每一点都恰属于某个 S&lt;sub&gt;j&lt;/sub&gt;；（2）每个 S&lt;sub&gt;j&lt;/sub&gt; 除了位置之外，其余一切都完全相同，每个 S&lt;sub&gt;j&lt;/sub&gt; 都可由另外任一 S&lt;sub&gt;j&lt;/sub&gt; 沿直线做平移而得。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;说这定理反直觉是因为我们无法将集合 S&lt;sub&gt;j&lt;/sub&gt; 形象化。如果你试着想像 S&lt;sub&gt;j&lt;/sub&gt; 的点在靠近端点的地方如何排列，你是想不出来的。之所以想不出来是因为这些集合是不可测的（nonmeasurable），无人能想像不可测的点集长什么样子。不可测集合无法由我们所熟悉的任何几何工具构造出来。约翰的证明之所以出人意料是因为它是全然抽象的。他甚至完全不提 S&lt;sub&gt;j&lt;/sub&gt; 的几何，没有任何关于它们的形状或构造的暗示。他证明它们存在的方法，是把问题化约成一个纯粹逻辑的命题，然后再以纯粹逻辑的论证来证明这个命题。这篇小文章是约翰学术风格最极致的展现。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰任教柏林的期间经常造访哥廷根，在那儿海森堡（Werner Heisenberg）刚发明量子力学，数学系由希尔伯特掌舵。希尔伯特对量子力学有强烈兴趣，他鼓励数学家和物理学家合作。就希尔伯特来看，量子力学的现况一团糟。海森堡用不着严格的数学，而且也不想学。狄拉克（Paul Dirac）随意运用他著名的 δ 函数，不管它的数学定义有多荒谬：在一个点上是无穷大，而在其他地方处处为零。当希尔伯特告诉狄拉克 δ 函数会造成数学矛盾，狄拉克答道：“你看我陷入数学矛盾了吗？“狄拉克只要知道他的 δ 函数是计算量子过程的利器就够了。二十年后，史瓦茨（Laurent Schwartz）为 δ 函数提供了严格的基础，证明狄拉克是对的。当时，约翰与希尔伯特合作发表论文来清理量子力学的糟糕状态。量子力学有数年时间是约翰的主要兴趣所在，他在 1932 年出版了《量子力学的数学基础》（&lt;span&gt;Mathematical Foundations of Quantum Mechanics&lt;/span&gt;）[9]，这本书在他的花园里占据了重要位置。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这是第一本以数学上合理的方式阐述量子力学的著作。在书中，量子力学的概念是严格定义的，结果也是严格推导的。书中许多内容是原创的，特别是关于量子统计和测量理论（theory of measurement）的章节。我读这本书是在 1946 年，当时我还是纯数学家，但已有转换到物理的打算。我发现这本书帮助极大，它提供的正是我需要的：数学上准确的理论表述，清楚解释物理学家太过粗枝大叶、以致不会提到的精微处。我所知道的量子力学大部分是从这本书学到的。然而，当我改行当物理学家，开始阅读最新的物理期刊后，我很惊讶地发现物理期刊中不曾有人提到约翰这本书。对物理学家而言，约翰形同不存在。当然，他们的忽视部分原因是语言隔阂，这本书是以德文撰写的，第一个英译本晚至 1955 年才出版。但我想，即使这本书早有英文版，1940 年代的物理学家仍不会对它感兴趣。那正是物理文化与数学文化分歧最大的时候。物理文化是由奥本海默（Robert Oppenheimer）那样的人主导，他们与诗人和艺术史家为友，但不跟纯数学家往来。数学文化则是由布巴基（Bourbaki）集团主导，他们试图从数学中产除掉任何不是纯粹抽象的东西。物理与数学之间的鸿沟毫不亚于史诺（C.P. Snow）在「两种文化」的著名演讲中所描述的科学与人文之间的鸿沟。约翰是极少数能够悠游于这四种文化的人──在物理与数学之中，也在科学与人文之中。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/8SzzdkjOJnYBKUwAMSMp2oyb0v5mEs6hmc0R5osZ2d8G6O3EVRibX6hWMSSlpg4uMTKCnSTB7Smmp0TGDLulepQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;1.22196261682243&quot; data-w=&quot;428&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;奥本海默，1946 年（Ed Westcott 摄）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰版量子力学的核心概念是抽象希尔伯特空间。希尔伯特空间是一种无穷维空间，量子态在其中是向量，可观测量则是线性算子。希尔伯特早在量子力学运用它之前，即已定义和探讨希尔伯特空间，它意外的有效性是缘于量子力学的方程恰巧是线性的。这些算子形成一种线性的代数，而量子态可以安排成由该代数的线性表现所定义的多重态（multiplets）。约翰喜欢用抽象和一般的语言来表述物理问题，所以他把量子力学表述成在希尔伯特空间上的线性算子环理论（theory of rings of linear operators）。环指的是一组算子，它们彼此可做加、减、乘法运算，但不能做除法。任何遵守量子力学规则的物理系统都可藉由一个算子环来描述。约翰开始研究算子环，试图找出存在多少不同类型的量子系统。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰在出版了他那本量子力学著作后，又继续花了数年时间发展算子环理论，收入到著作集第三卷的全是算子环的论文。他发表了七篇长篇论文，页数总计多达五百余页。我今天不拟讨论这些钜作。它们包含约翰身为纯数学家最深刻的工作，他证明了每个算子环都等于他称为因子（factor）的不可化约环的直乘积&lt;span&gt;【译注：严格的讲是直积分（direct integral）】&lt;/span&gt;。他发现因子共有五种类型，其中只有两种是先前已知的。每种因子都有独特且意料之外的性质。他在探索算子环这片海洋时，发现了他无暇去仔细丈量的新大陆。他没能完成这三种新因子的研究。他希望有一天能发表他的算子环研究的集大成之作。但这就像西贝柳斯（Jean Sibelius）的第八号交响曲一样，终归是未写下的杰作。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;《量子力学的数学基础》是我所拟的花卉清单中最后一项以德文写作的，那是在 1932 年，约翰仍把他的时间平均分配在柏林和普林斯顿时出版的。同样在这一年，他开始用英文写论文，其中一篇是《准遍历性假设的证明》（&lt;span&gt;Proof of the quasiergodic hypothesis&lt;/span&gt;） [10]，他把这篇论文发表在《国家科学院院刊》（Proceedings of the National Academy of Sciences）上，以确保美国数学家会读到。正如同先前使用希尔伯特空间解决量子力学问题一样，他在这篇论文里运用相同的概念来解决古典力学里的一个重要问题。我们说一个古典动力系统是遍历的，意思是若从一起始状态开始，并任系统向前无限演变，则系统任意靠近到某终态的机率和起始状态无关。约翰证明了在某些明确指定的条件下，一个系统是遍历的，若且唯若当其只存在一运动常数（constant of motion，即守恒量）。所谓运动常数是一个由系统状态决定的量，且此量不随系统随时间迁变而变化。约翰的定理为物理学家使用古典统计力学时所做的权宜假设，提供了坚实的数学基础。如果翻译成物理学家所用的马马虎虎的语言，这定理说的是，系统中任何单一路径经过漫长时间后的时间平均，等于所有路径的统计平均。如果再更马虎一点，物理学家会说，时间平均等于系综（ensemble）平均。系综一词在此是指系统所有状态的集合。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;  读到约翰这篇《院刊》论文的一位美国数学家是盖瑞特‧柏克霍夫（Garrett Birkhoff）。盖瑞特的父亲是乔治‧柏克霍夫（George Birkhoff），父子两人都是知名数学家。盖瑞特和约翰日后成为好友，盖瑞特也经常造访普林斯顿。约翰去世后，盖瑞特写了一篇文章追记约翰在 1930 年代时的研究工作，文章里有这么一句话：“任何想要对冯·诺依曼思考之锋利有个深刻印象的人，只需要亲身试着依循这一连串精确推理走一趟，然后试想，冯·诺依曼经常可以在早餐之前，穿着浴袍坐在起居室的书桌前就写下五页的内容。”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰思考希尔伯特空间算子的一个旁出成果是他发明了连续几何，这是一种子空间的维度为连续变数的新几何。在他的园中可以看到两篇短文，《连续几何》（&lt;span&gt;Continuous geometry&lt;/span&gt;） [11] 以及《连续几何实例》（&lt;span&gt;Examples of continuous geometries&lt;/span&gt;）[12]，两篇都发表在 1936 年，当时约翰已在普林斯顿定居。约翰在引言里写道：“我们将只给出公设、关于公设的一些注解，然后是主要的定义和结果。详细的叙述很快会在数学期刊上发表。”这是一个没有兑现的承诺。自此开始，约翰许下许多像这样未兑现的承诺。他总是研究一个问题，把问题解决到他满意的程度，然后没时间把结果详细写下来发表。他在普林斯顿讲授连续几何，讲义后来以《连续几何》（Continuous Geometry）的书名，在他去世后的 1960 年出版。这本书非常乏味，它可能是挂在约翰名下最乏味的作品。你可以从这本书看出，当约翰在讲连续几何时，他就已对这个题目失去兴趣。他在生前未出版这本讲义不是没有理由的。他在高等研究院是终身职教授，没有必须发表成果的压力。1936 年之后，他只发表他觉得重要而且不枯燥的东西。他逐渐对纯数学之外的各式各样题材感兴趣，毕竟当他在布达佩斯拿到数学的博士学位时，也从瑞士苏黎士联邦理工学院（ETH）的化工系毕业。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;炸弹和电脑&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;下一朵花是写于 1942 年的研究报告《起爆波的理论》（&lt;span&gt;Theory of Detonation Waves&lt;/span&gt;）[13]，这是一份关于化学强力炸药引爆过程的学术性透澈分析。约翰曾亲眼见到他的祖国匈牙利因 1918 年战败而解体的命运，他比其他欧洲犹太人更亟于加入反希特勒的战斗。他很乐于将他的数学技巧和工程知识用于军事问题，所以甚至在 1941 年美国参战之前，就受聘担任美国陆军的顾问。1942 年报告是他为改良军用炸药提供理论基础而撰写的系列报告之一。军用炸药必须在两个彼此冲突的需求之间取得微妙的平衡：当猛烈发射时，炸药必须以最大效率爆炸，但当暴露在枪火中或邻近有意外爆炸时，又能具备最大的安全性不被引爆。如果你想找出最佳平衡，有一位同时懂得化学和数学的人当顾问会是莫大帮助。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/8SzzdkjOJnYBKUwAMSMp2oyb0v5mEs6hxmEhl0OXJst7zH42HEib5EWCic2o01W75S2WicIgVbwXA8GrYjgpkykNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.7359375&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从左至右，毕格罗、高德斯坦、奥本海默、冯·诺依曼摄于电脑计划，1952 年（Alan Richards 摄，普林斯顿高等研究院 Shelby White and Leon Levy Archives Collection 提供）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰的报告并未讨论特定武器，而是提供能让武器设计者将设计最佳化的数学理论。当他开始为军方工作时，研究的用途是抱弹和反潜深水炸弹。1943 年时，他的好友奥本海默邀请他到洛沙拉摩斯（Los Alamos），把他的想法用于核子武器的设计。他对激波（shock wave）的了解对于洛沙拉摩斯计划的成功贡献极大。在洛沙拉摩斯，他看到巨量的数值计算是由大批计算员辛苦地手算完成的，于是他开始认真思考电子计算机的可能性，可以比人工更好更快地完成这类计算。1944 年时，他结识高德斯坦（ Herman Goldstine），后者当时是年轻的陆军军官，正参与一项计划，要在宾州大学建造一座真正的电子计算机，ENIAC。高德斯坦与约翰成为好友，他后来这么形容约翰：“他其实是天神下凡，但他仔细研究过人类，所以能够完美地模仿。他在社交场合中很出众，有着温暖、人味的性格，以及绝佳的幽默感。”战争一结束，他们立即拟定计划要用电脑做一番大事业。约翰的花园里有一篇《论大型计算机器的原理》（&lt;span&gt;On the principles of large scale computing machines&lt;/span&gt;）[14]，描述了他们的计划。关于约翰的电脑研究是其他演讲者的题目，所以这方面我不再多谈。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我认识约翰本人是在 1948 年，我来到高等研究院之后。他当时正积极地为研究院建造一部电脑，并且探索它的用途。他从一开始就了解，电脑最重要的用途里会有这两项：预测天气，以及建立气象模型。他聘请工程师来造电脑，聘请气象学家来使用它。专案的首席工程师是毕格罗（Julian Bigelow），首席气象学家是查尔尼（Jules Charney），他们手下各有一群年轻人来干重活儿，劝诱一部全新的机器吐出某些真正的科学。我很喜欢这群吵吵闹闹、没规没矩的年轻人。在这群小流氓以及研究院的长者之间，产生了一种颇堪玩味的文化冲突。正如爱因斯坦在 1933 年初抵研究院时，写信给友人比利时王后所云：普林斯顿是一个古雅而拘谨的小村落，住着的是踩在高跷上的神人。这些长老的文化是建立在正式的礼节和对学术层级的敬重之上。约翰和我则是站在小流氓这边。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰去世后，研究院迅速把电脑研究计划收拾掉，旧文化又重新归位。此后再也不招聘没规矩的年轻人，他们带进研究院的清新气息被吹散，然后随着他们的脚步流向加州大学洛杉矶分校和麻省理工学院。当研究院在 1980 年庆祝成立五十周年时，出版了一本《一个学者社群，1930-1980》（&lt;span&gt;A Community of Scholars, 1930-1980&lt;/span&gt;），记载历年来研究院成员的学经历和著作。这群制造电脑和预测天气的年轻人，没有任何一位在书中被提到，他们的学术程度还不足以得到研究院的正式承认。但在约翰的花园中有一朵小花，《正压涡度方程的数值积分》（&lt;span&gt;Numerical integration of the barotropic vorticity equation&lt;/span&gt;）[15] 是由查尔尼、弗约托夫特（Ragnar Fjørtoft）和冯·诺依曼合写的，该文描述他们预测天气的早期尝试。因为研究院的电脑尚未启用，他们得借用 ENIAC 来做计算。在 ENIAC 上做数值模拟，所花的时间比被模拟的天气变化还慢，所以实在称不上预测。论文最后，他们表示希望研究院的电脑能够超前天气。四年之后，当约翰的电脑及其他类似的机器开始运作，他们的愿望实现了。当时约翰宣布，预测二十四小时之后的天气只需要不到一小时的计算时间。就他想要理解气象的梦想而言，他也就只做到这里。一年后他被诊断出患了末期癌症，三年后去世。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;最后十年&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在他生命的最后十年，约翰抽不出时间来写正式的数学论文，取而代之的是非正式的杂文，对象有时是政府部门里与他合作的同事，有时是一般大众。我这一趟园中漫步的最后两朵花是他写给大众的文章，两篇都是思虑深刻、文笔优美的佳作，他很用心地厘清思绪，然后以简洁的文字写出。第一篇《数学家》（&lt;span&gt;The mathematician&lt;/span&gt;）[16] 是一本 1947 年出版、多人合著的文集《心智的功业》（&lt;span&gt;The Works of the Mind&lt;/span&gt;）里头的一章。这是一首天鹅之歌，它用简单的词句总结出约翰在纯数学家生涯的尾声时所得到的结论。他将他最好的岁月──也就是牛顿自况其年轻时光时所谓的「正值我创造期的颠峰」──全都奉献给纯数学。从 19 岁到 27 岁，他致力于为纯数学建立稳固的逻辑基础，结果是替哥德尔铺路，让他能够发现数学不可能有完备的基础。在哥德尔革命之后，他利用新得到的自由，尝试为量子力学以及日后被称为计算机科学的新学门建立逻辑基础。《数学家》把数学的发展描述成人类心灵的自由创造，其基础或者是借自经验科学，或者是自由发明的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰的主要讯息出现在文章的最后，它在数学家之中已是名言了：&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;  当一个数学学门开始远离其经验根源，或者更甚者，如果这个学门只是从「实在」源头间接启发的第二、第三代学门，其处境就会非常危险。⋯⋯ 换句话说，在远离经验根源后，或经过抽象化的近亲繁殖后，这个数学主题就有萎缩的危险。这就像建筑或绘画一样，起初通常是古典风格，但是当巴洛克的迹象显露时，危险的讯号就出现了。要给出实例，要历述某个特定主题如何演变成巴洛克、甚至是巴洛克全盛期的过程是很容易的，但这又会让讨论变得太技术。总之，一旦走到这一步，在我来看治疗之道只有一个，就是返回根源，重新注入或多或少直接来自经验的想法。我确信，如此才是这个学门长保清新和元气的必要条件，现在如此，将来也是如此。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;当约翰提到巴洛克全盛期的实例时，他心中想到的或许是他自己耽溺在连续几何的细节，而他一头栽进计算机科学的经验世界，或许是想回归本源重拾青春吧。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在向纯数学告别后，约翰人生的最后七年，一半是在普林斯顿执行电脑计划，一半是在华盛顿担任政府顾问。在这段期间，他变成大众眼中的军事强硬派。有数年期间，他公开倡导对苏联发动预防性战争。他深入参与数个研议军事战略问题的高阶委员会，其中之一现在被史家称为冯·诺依曼委员会。这个委员会所提倡的致命性政策，是建议美国结合多阶段火箭推进系统和氢弹科技来制造洲际弹道飞弹，以此做为对抗苏联的战略基础。此一战略让美国技术上能够在 40 分钟内摧毁苏联，但无可避免的结果是，苏联在几年之后也具备了以类似的弹道飞弹摧毁美国的能力。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;现在来看，预防性核子武器的想法会让人觉得是失控的好战主义。但对曾经经历过 1930 年代苦难的人而言，这想法有不同的意义。很多人，尤其是自由派的知识分子，认为 1936 年时法国和英国没有进军德国，以阻止希特勒重新武装莱茵区（Rhineland），是一种懦弱且不道德的行为。1936 年的德国实质上还是无武装、无法有效抵抗入侵武力的状态，此时如果发动预防性战争，或许只需数天即可推翻希特勒政权，也可挽救二次大战中死去的五千万生灵。我们无从知道 1936 年的预防性战争是否可行、是否能达成目的，我们只知道，约翰那个世代把 1936 年看成是悲剧般错失的机会，因此不少人认为预防性战争是合乎道德的。对他们而言，以果断的预防措施来遏止一场可怕的灾难，既不疯狂也不是罪恶的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰在 1940 年代辩称，美国所面对的是和 1936 年的英、法相同的抉择。苏联当时才刚开始建立大量生产核武的工业基础。就像 1936 年是推翻希特勒的最后机会，约翰判断 1940 年代是美国不使用毁灭性战争来推翻斯大林政权的最后机会。他认为，与其日后打一场毁灭性战争，不如在 1940 年代先发动预防性战争，这不只是对美国、而且对全人类都是比较有利的。我并不是说他的主张是对的──我个人认为，不管是 1936 年或是 1940 年代，预防性战争都不能达成目的。我只是要说，当评论约翰提倡预防性战争的主张时，如果忽略了主宰了他道德观感的 1936 年事件，那就完全错失了他最主要的论点。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我这趟园中漫步的最后一朵花，是以一般大众为对象、刊登在《财富》（&lt;span&gt;Fortune&lt;/span&gt;）杂志上的文章，刊登日期是 1955 年 6 月，也就是他被诊断出罹患绝症之前两个月。文章标题是《我们能否在科技下存活？》（&lt;span&gt;Can we survive technology?&lt;/span&gt;）[17]。约翰现在关切的不再是数学的知性问题，而是全人类的问题，诸如战争与和平、核武与核能、全球暖化与气候控制、以及因电脑而正在改变的政经规则。在人生的最后七年，当他进入华盛顿的权力中枢，开始与将领和政客往来，他了解到社会最迫切的问题是人性问题，而不是技术问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;他对人类天性的看法是悲观的。“抱怨人们自私狡诈，就和抱怨除非电场有旋度，不然磁场不会增强一样愚蠢。两者都是自然定律。”&lt;span&gt;【译注：冯·诺依曼的这句话出自威格纳为冯·诺依曼写的悼文，见 E. Wigner, &lt;span&gt;John von Neumann&lt;/span&gt;, Year Book of the American Philosophical Society: Biographical Memoirs（1957）, pp. 149--153】&lt;/span&gt;他对未来的看法同样悲观。“现在发生核子战争的恐怖可能性，将来可能会被更恐怖的其他可能性取代。当人们能够控制全球气候之时，或许我们现在所有的纷争相较之下都变成小事。我们不该自欺欺人。一旦这些可能性成真，它们就会被利用。⋯⋯ 很确定的事实是，这样的困难主要是因为演变即使有用且具建设性，但也是危险的。我们能否以必要的速度完成所需的调整？最乐观的答案是，人类这个物种先前曾面临过类似的考验，而且似乎具有度过难关的先天本领，尽管得经历不同程度的磨难。想要事先开出完整的对策良方是不可能的，我们仅能指出所需的人格特质：耐心、弹性与智慧。”约翰自己便具备了这些特质。当我们迈入他所创造的世界，这些仍是我们想要拥有最佳生存机会时，不可或缺的人格特质。&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;本文参考资料请见〈数理人文资料网页〉&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://yaucenter.nctu.edu.tw/periodical.php&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;section class=&quot;&quot; data-style-type=&quot;1&quot; data-tools=&quot;&amp;#x65B0;&amp;#x5A92;&amp;#x4F53;&amp;#x6392;&amp;#x7248;&quot; data-id=&quot;12448&quot;&gt;&lt;section class=&quot;&quot; data-css=&quot;border-color: initial;border-style: none;border-width: 0px;padding: 0px&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;KolEditor.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; data-css=&quot;background-color: rgb(95, 156, 239);box-sizing: border-box;height: 8px;width: 100%&quot;/&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;延伸阅读&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;KolEditor.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;12.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;25&quot;&gt;&lt;p&gt;&lt;span&gt;1. 2010 年，布朗大学计算分子生物学会议网页，其中包含六场各领域之「冯·诺依曼卓越演讲」，并附有演讲与问答讨论之录影连结。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;网址：&lt;/span&gt;&lt;span&gt;http://www.brown.edu/Research/Istrail_Lab/symp_2010.php&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2. &lt;span&gt;John von Neumann: A Documentary&lt;/span&gt; (1966) MAA. 美国数学协会在 1966 年摄制的黑白纪录片。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;网址：&lt;/span&gt;&lt;span&gt;https://www.youtube.com/watch?v=VTS9O0CoVng&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;3. S. Ulam, &lt;span&gt;John von Neumann 1903-1957&lt;/span&gt;, Bull. Amer. Math. Soc. &lt;strong&gt;64&lt;/strong&gt; (1958), no.3, Part 2. 冯·诺依曼好友乌朗著名的综述追忆文章。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;4. Marina von Neumann Whitman, &lt;span&gt;The Martian's Daughter: A Memoir&lt;/span&gt;（火星人的女儿：一段追忆）(2012), University of Michigan Press. 玛莉娜是冯·诺依曼第一次婚姻以及唯一的小孩，她在这本回忆录中谈到她卓越的父亲，以及她如何在父母巨大的阴影下成长。所谓火星人指的是五位翻转科学方向的匈牙利科学家，可见 &lt;span&gt;Martians of Science: Five Physicists Who Changed the Twentieth Century&lt;/span&gt; (2006), Oxford University Press. 另外，在 YouTube 中可找到玛莉娜出书时的访谈。&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;∑编辑 | Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来源 | 数理人文&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky7x6u1VxMVMia4MLibNzC2nrumY3zDflTsCeoM04M1BrkvPny8tsw6hYkIicUr42iarLmadL2x6JwV6A/640?wx_fmt=png&quot; width=&quot;auto&quot; data-type=&quot;png&quot; data-ratio=&quot;1.0437601296596435&quot; data-w=&quot;617&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 07 Sep 2018 20:55:06 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/l62CdHUBSK</dc:identifier>
</item>
<item>
<title>李开复：AI能在15年内取代40%~50％岗位</title>
<link>http://www.jintiankansha.me/t/p6FXLdFJEI</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/p6FXLdFJEI</guid>
<description>&lt;div id=&quot;&quot;&gt;
&lt;p&gt;&lt;span&gt;“概念火了会被玩儿坏。”这是9月2日，创新工场董事长兼CEO、人工智能科学家李开复博士在《AI·未来》新书发布会上的感叹。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;李开复表示，AI催生了一批公司进行AI概念包装，使得一些公司处于估值偏高的情况，但目前AI处于一个估值调整期，今年上半年已经有些项目估值下降了20%~30%，未来将会向合理趋势发展。待估值合理后，AI项目的投融资机会会更多。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;李开复还提到，在15年内，人工智能和自动化将具备取代40%~50％岗位的技术能力。不过，由于企业决策、工会影响和政府政策，实际过程中实现取代可能需要更长时间。&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;15年内人工智能有能力取代5类工作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;2017年5月，人类围棋冠军先后输给人工智能算法“AlphaGo”后，掀起的人工智能话题热潮一浪高过一浪，李开复称这一事件为中国的“斯普特尼克”时间。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2018年9月，李开复新书《AI·未来》在全球同步发售。《每日经济新闻》记者在现场获悉，在新书中，人工智能的发展被大致分为四波浪潮：互联网智能化（Internet AI）、商业智能化（Business AI）、实体世界智能化（Perception AI）、自主智能化（Autonomous AI）。每一波浪潮都运用了人工智能的不同能力，颠覆了不同的产业，让人工智能在日常生活中更加深入。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;李开复提到，中国人工智能技术快速发展，成为全球人工智能领域的重要拼图之一。过去3年，中国各地掀起了一波人工智能热潮，从科技界、商界、各级政府机关开始，一直蔓延到各行各业，甚至中小学和幼儿园的小朋友都在学习人工智能知识。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在李开复看来，基于当前技术的发展程度与合理推测，在15年内，人工智能和自动化将具备取代40%~50％岗位的技术能力。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这些岗位主要集中在以下工作和任务场景：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;重复性劳动——特别是在相同或非常相似的地方完成的工作，如洗碗、装配线检查、缝纫；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;有固定台本和对白内容的各种互动，如客户服务、电话营销；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;相对简单的数据分类，或思考不到1分钟就可以完成识别的工作，如文件归档、作业打分、名片筛选；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在某公司一个非常狭小的领域工作，如银行理财产品的电话推销员、某部门的会计；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;不需与人进行大量面对面交流的工作，如分拣、装配、数据输入。&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;机器人进展比AI软件慢：它们仍然非常笨拙&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;尽管AI大幅度提升生产效率，节省人力资本，但为了确保人类的职业生涯不会因人工智能替代而中断，需要了解“在可见的未来里，人工智能做不到什么”。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;李开复提到，虽然有媒体报道，称巨额投资将用于开发人工智能和机器人，但自动驾驶汽车、人工智能放射科医师等人工智能应用可能需要很长时间才能普及。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;“实际上在机器人和机械学方面取得进展比人工智能软件慢。机器人仍然非常笨拙，看看机器人拿铅笔的样子，你就会懂我的意思。”李开复表示，由于人工智能不擅长提出新概念、没有人类的情商，人类也不愿“信任”机器，让机器来处理人性化任务。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;因而有几类工作难以取代：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;创意性工作都，例如医学研究员、人工智能科学家、获奖剧本作家、公关专家、企业家；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;复杂性/战略性工作，例如首席执行官、谈判专家、并购专家；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;灵敏性工作，例如口腔外科医生、飞机机械师、脊椎按摩师。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;“我们应该具有战略性思维，并以人工智能无法取代的工作为目标。我们应该致力于终身学习，更新我们的技能，了解新趋势，并寻找新机遇。”李开复表示，应该积极使用人工智能工具，特别是专业人士，更多的数据和使用量能够使人工智能不断优化。同时应该使用上述工具来工作，保持开放态度，明确人工智能可以完成更多的日常任务，使人们能够关注更适合人类发展的领域。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;此外，李开复提到，应该鼓励批判性思维和各种创造力，不仅仅是科学和工程，还有艺术、建筑、音乐、诗歌、表演、讲故事等。应该接受传统工作岗位正在流失的现实。对于老年人，当需要提前退休时，请考虑接受，通过打零工和志愿服务赚取一些收入并过上喜欢的生活。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; caret-color:=&quot;&quot; text-align:=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Fri, 07 Sep 2018 20:55:05 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/p6FXLdFJEI</dc:identifier>
</item>
<item>
<title>数据从业者必读：抓取了一千亿个网页后我才明白，爬虫一点都不简单</title>
<link>http://www.jintiankansha.me/t/PL3lUE6OyC</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/PL3lUE6OyC</guid>
<description>&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxgAnRBqqmCRx0BO9lJwAp4j6kP2K7BIbRIOcgmCxiax43Ud1RKjFCCuJARq6guEJYbKpYp73hbDcw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在爬虫技术似乎是很容易的事情，但这种看法是很有迷惑性的。开源的库/框架、可视化的爬虫工具以及数据析取工具有很多，从网站抓取数据似乎易如反掌。然而，当你成规模地在网站上抓东西时，事情很快就会变得非常棘手。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;自2010年以来抓取超过1000亿个产品页面，我们将会通过系列文章来分享从中学到的经验教训，让你深入了解从电子商务商店中规模析取数据时所面临的挑战，并且跟你分享应对这些挑战的某些最佳实践。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;本文是该系列文章的第一篇，在这里我们将提供规模抓取产品数据所面临主要挑战的概览，以及Scrapinghub从抓取1000亿产品页面中学到的经验教训。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;成立于2010年的Scrapinghub是领先的数据析取公司之一，也是当今最健壮和流行的web爬虫框架Scrapy的作者。目前Scrapinghub每月抓取许多全球最大型电子商务公司的页面数超过80亿（其中30亿是产品页面）。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;对于那些对规模爬取网页技术感兴趣但对要不要建立专门的web爬取团队或者外包给专门的web爬取公司的人来说，最好看看这个免费指南，企业web爬虫：规模化web爬取技术指南&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;em&gt;规模爬取技术为什么重要？&lt;/em&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;跟标准的web爬取应用不一样的是，规模爬取电子商务产品数据有一项独特挑战使得web抓取要困难许多。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;本质上这些挑战可归结为两件事情：&lt;strong&gt;速度和数据质量。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;由于时间通常是限制因素，规模抓取要求你的爬虫要以很高的速度抓取网页但又不能拖累数据质量。对速度的这张要求使得爬取大规模产品数据变得极具挑战性。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxgAnRBqqmCRx0BO9lJwAp47tx7tibRQfQ8dguNhibAiciasD5Fv3jYp0icyRnzKKuaqP3lg3N19DVm6DA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 挑战#1——草率而且总是在变的网站格式 &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这一点很明显但也许不是最性感的挑战，但是草率而一直在变的网站格式是目前为止你在规模析取数据时将会面临的最大挑战。这未必是因为任务的复杂性，而是由于你要投入的时间和资源。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果你花过时间开发过电子商务商店的爬虫的话，你就会知道电子商务网站代码之草率是一种流行病。这可不仅仅是HTML完构性或者偶尔的字符编码问题。这些年来我们遇到过形形色色的问题——HTTP响应代码的误用，损坏的JavaScript代码，或者&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Ajax的误用：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;span&gt;    停掉产品时移除页面的商店在网站升级后突然间会在404错误处理程序返回200响应码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    不恰当的JSON转义破坏了部分页面的JavaScript代码（比如‘b0rk’d’），导致你需要用正则表达式来抓取那部分数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    滥用Ajax调用的商店以至于你只能靠渲染该页面（这会导致爬取慢很多）或者模仿API调用（导致要付出更多的开发努力）来获得数据。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;像这样草率的代码会导致编写爬虫非常痛苦，但也会使得可视化爬取工具或者自动析取不再可行。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在规模爬取的时候，你不仅要浏览成百上千个有着草率代码的网站，还将被迫应对不断演变的网站。一条好的经验法则是要预计你的目标网站每隔2到3个月就会发生让你的爬虫工作不了的变化。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这也许看起来不像是多大的事，但是当你规模抓取时，那些事件就会累积。比方说，Scrapinghub有一个规模比较大的电子商务项目大概有4000个爬虫抽取约1000个电子商务网站，意味着每天可能会经历20到30次爬虫失败。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而且网站在不同地区、语言的变化，A/B测试以及包装/定价的派生也会制造出各种问题导致爬虫失败。&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;em&gt;没有容易的解决方案&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; class=&quot;_135editor&quot;&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;不幸的是，不存在银弹可以彻底解决这些问题。很多时候这只是随着规模而扩大投入更多资源到你的项目上才能解决的事情。再拿上一个例子来说吧，那个项目有18名全职的爬虫工程师以及3名专职的QA工程师来确保客户总能得到可靠的数据流。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;不过，你的团队有经验以后就会学会如何开发出更加健壮的爬虫，从而检测并处置目标网站格式中的异常。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如何处理目标网站有各种布局可能的情况呢？用多个爬虫也许不是最好的做法，我们的最佳实践是只用一个产品爬虫来处理不同页面布局个各种可能规则和模式。你的爬虫可配置性越强越好。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;尽管这些实践会让你的爬虫更加复杂（我们有些爬虫有好几千行），但它会确保你的爬虫更容易维护。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;由于大多数公司日常都需要析取产品数据，等待几天让你的工程团队修复任何坏掉的爬虫不是可选项。当出现这些情况时，Scrapinghub会利用自己开发的基于机器学习的数据析取工具来作为后备，直到爬虫修复好。这个基于ML的析取工具会自动识别目标网站的目标字段（产品名称、价格、货币单位、图像、SKU等）并且返回想要的结果。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们会在未来几周之内发布这项工具以及相关的指导文章，告诉大家如何将机器学习用到你的数据析取过程当中。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt; 挑战 2：可伸缩的架构 &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你将面临的第二个挑战是建设一个可随每日请求数增长而扩充且性能不会下降的爬虫基础设施。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在规模析取产品数据时，一个串行爬取的简单web爬虫是不堪此任的。通常一个串行的web爬虫会循环发出请求，每一项请求都要2到3秒钟完成。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果你的爬虫每天发出的请求数不到40000的话这种做法是没有问题的。然而，超过这个点你就得过渡到一种让你每天可以完成数百万请求而不会性能下降的爬虫架构。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个话题得用一篇文章才能说得清楚，未来几周我们将发布一篇专门的文章来讨论如何设计和开发高吞吐量的爬取架构。然而，本节的剩余部分我们将讨论一些高级原则和最佳实践。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;正如我们讨论过那样，在规模爬取产品数据时速度是关键。你需要确保在时间阈值范围内（通常是1天）可以找到并且爬取所有要求的产品页面。为此你需要做以下一些事情：&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;em&gt;将产品发现与产品析取分开&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;为了规模爬取产品数据你需要将你的产品发现爬虫与产品析取爬虫分开。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;产品发现爬虫的目标应该是让它浏览目前产品目录（或者“货架”）然后存储该目录下的产品URL供产品析取爬虫使用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个可以靠Scrapinghub 开发的开源工具Frontera之类的爬虫前端辅助完成。尽管Frontera原先的目的是配合Scrapy使用的，但它其实完全是不可知论者，可用于任何爬虫框架或者独立项目。在这篇文章中，我们分享了如何利用Frontera来规模抓取HackerNews的东西。&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;em&gt;分配更多资源给产品析取&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; class=&quot;_135editor&quot;&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;由于每一个产品目录“货架”可包含10到100种产品，而且析取产品数据需要的资源要比析取产品URL更多，发现爬虫通常运行要比产品析取爬虫更快。这种情况下，你需要有多个析取爬虫来对应每一个发现爬虫。一条好的经验法则是每10万个页面分配一个析取爬虫。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 挑战 3：维护吞吐量性能 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一级方程式的目标是将车上一切不必要的载荷都剔除掉，并且以速度之名将引擎最后一丝马力都榨干，从这个意义上来说规模抓取可以跟一级方程式相比较。规模web抓取也是一样的道理。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在析取大量数据时，在现有硬件资源条件下，你总是会想方设法要寻找请求周期最小化爬虫性能最大化的手段。这一切都是希望你能给每个请求节省下来那么几微秒的时间。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;为此你的团队需要对web爬取框架、代理管理以及所使用的硬件具备深刻理解，这样才能对它们进行调整以优化性能。你还需要关注：&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;em&gt;  爬取效能  &lt;/em&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; class=&quot;_135editor&quot;&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;规模爬取时你应该始终把焦点放在以尽量少的请求析取所需数据上。任何额外请求或者数据析取都会放缓你爬取网站的节奏。在设计你的爬虫时请记住这些提示：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span&gt;    作为最后一招，仅使用无界面浏览器，比如Splash或者Puppeteer来渲染JavaScript。用无界面浏览器渲染JavaScript同时爬取是非常耗资源的，会严重影响爬取的速度。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    如果你可以从货架页面（比如产品名称、价格、评分等）获得所需的数据而不需要向独立的产品页面提出请求的话，那就不要向产品页面发出请求。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;    不要请求或者析取图像，除非迫不得已。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 挑战 4：反机器人的对策 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果你批量抓取电子商务网站的话一定会遇到采用反机器人对策的网站。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;规模小一点的网站其反机器人对策就是些基本手段（屏蔽发送请求过量的IP）。然而，较大的电子商务网站，比如Amazon等，会采用复杂的反机器人对策，比如Distil Networks、Incapsula或者Akamai等来使得析取数据困难许多。&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;em&gt;代理&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; class=&quot;_135editor&quot;&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;了解到这一点之后，任何项目想要规模抓取才数据，首要的基本需求就是得用代理。规模抓取数据时你需要可观的代理清单，而且需要实现必要的IP轮转、请求限制、会话管理以及黑名单逻辑来预防代理被屏蔽。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;或者除非你有或者愿意用一支规模可观的团队管理你的代理，否则的话你应该把抓取流程中的这一部分外包出去。提供各种水平服务的代理服务有很多。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;然而，我们的建议是找一家能够提供单个代理配置端点并且将所有的代理管理复杂性隐藏起来的代理提供商。在没有重新发明轮子、开发和维护自己的内部代理管理基础设施的情况下规模抓取就已经很耗资源了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;大多数大型电子商务公司都采用这种做法。一些全球最大型的电子商务网站采用Scrapinghub 开发的智能下载器Crawlera，这个东西的代理管理完全是外包的。当你的爬虫每天要发出2000万条请求时，把注意力放在分析数据而不是管理代理上会有意义得多。&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;em&gt;代理以外&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; class=&quot;_135editor&quot;&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;不幸的是，光靠使用代理服务并不足以确保你能规避大型电子商务网站的反机器人对策。越来越多的网站正在利用复杂的反机器人对策来监控你的爬虫行为，检测其是否真人访客。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这些范机器人对策不仅使得爬取电子商务网站越来越困难，而且克服这些手段如果做得不对的话也会严重拖累爬虫性能。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这些机器人对策有很大一部分使用到了JavaScript来确定请求是否来自于爬虫还是人（Javascript引擎检查、字体枚举、WebGL与Canvas等）。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;不过正如前面所述，规模爬取时你希望限制可编写脚本的无界面浏览器（Splash 或者Puppeteer等）的使用，因为渲染页面的任何JavaScript都非常耗资源并且放慢爬取网站的速度。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这意味着为了确保你能取得必要的吞吐量让爬虫提交每天的产品数据，你往往需要痛苦地对目标网站采用的反机器人对策进行逆向工程，并且在不使用无界面浏览器的情况下设计你的爬虫抵消那些对策。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt; 挑战 5：数据质量 &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从数据科学家的角度来说，任何网站爬取项目最重要的考虑是析取数据的质量。规模爬取只会令这一关注变得更加重要。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当每天都要析取数百万数据点时，想靠人工来验证数据是否干净和完整是不可能的。变脏或者不完整的数据很容易就会流入到你的数据流里面，进而破坏了数据分析的效果。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;尤其是在抓取同一个的不同版本（不同的语言、地区等）或者不同商店上的产品时更是如此。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在爬虫开发的设计阶段，需要进行仔细的QA流程，爬虫代码要经过同行评审和测试以确保用最可靠的方式析取到想要的数据。确保最高数据质量的最好的办法是部署一套自动化QA监控系统。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;作为任何数据析取项目的一部分，你需要计划和开发一套监控系统，这套系统将提醒你任何不一致的数据以及发生的爬虫错误。Scrapinghub开发了一个机器学习算法来检测：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数据验证错误&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;——每一个数据项都有定义好的遵循一致模式的数据类型和值。我们的数据验证算法会提醒项目的QA团队任何与预期数据类型不一致的数据项，然后再进行人工检查、提醒已验证或者标记为错误。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;产品差异化错误&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;——从同一网站的多个版本（不同语言、地区）爬取相同产品数据时，有可能变量或者像产品重量或者尺寸这样本该是固定值的数据项也会不一样。这可能是网站反机器人对策向你的一到多个爬虫提供篡改信息的结果。再次地，你需要算法来识别和标记类似这样的情况。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;基于数量的不一致性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;——另一个关键的监控脚本是检测返回记录的任何异常变化。这可能预示网站已经做出改变或者你的爬虫被提供了篡改的信息。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;网站变化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;——目标网站发生的结构性改变是爬虫失效的主要原因。我们的专用监控系统会监控到这一点。该工具会对目标网站进行频繁的检查，确保自从上次抓取之后没有发生任何变化。如果改变被发现，它也会发出通知。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们会在稍后的文章中专门讨论自动质量保证的细节。&lt;/span&gt;&lt;/p&gt;

&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90636&quot;&gt;&lt;section&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;section data-width=&quot;100%&quot;/&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;em&gt;总结&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; class=&quot;_135editor&quot;&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;正如你所看到那样，规模抓取产品数据会面临一系列的独特挑战。希望这篇文章能够让你更加意识到相关挑战，并且就如何解决这些问题获得启发。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;然而，这只是本系列文章的第一部分，所以如果你感兴趣的话可以注册我们的电子邮件列表，一旦下一篇文章发表了我们会第一时间通知你。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;∑编辑 | Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;来源 | 技能get&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; caret-color:=&quot;&quot; text-align:=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0437601296596435&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;617&quot; width=&quot;auto&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky7x6u1VxMVMia4MLibNzC2nrumY3zDflTsCeoM04M1BrkvPny8tsw6hYkIicUr42iarLmadL2x6JwV6A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; caret-color:=&quot;&quot; text-align:=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; caret-color:=&quot;&quot; text-align:=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; caret-color:=&quot;&quot; text-align:=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 07 Sep 2018 20:55:04 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/PL3lUE6OyC</dc:identifier>
</item>
</channel>
</rss>