<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>手把手教你用1行代码实现人脸识别 -- Python Face_recognition</title>
<link>http://www.jintiankansha.me/t/T2EiyhoVjc</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/T2EiyhoVjc</guid>
<description>&lt;section class=&quot;_135editor&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89074&quot;&gt;&lt;section readability=&quot;3&quot;&gt;&lt;section class=&quot;135brush&quot; readability=&quot;6&quot;&gt;&lt;p&gt;&lt;span&gt;环境要求：&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ubuntu17.10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Python 2.7.14&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;环境搭建：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1. 安装 Ubuntu17.10 &amp;gt; 安装步骤在这里&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2. 安装 Python2.7.14 (Ubuntu17.10 默认Python版本为2.7.14)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3. 安装 git 、cmake 、 python-pip&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;
&lt;/section&gt;&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;# 安装 git&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ sudo apt-get install -y git&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 安装 cmake&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ sudo apt-get install -y cmake&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 安装 python-pip&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ sudo apt-get install -y python-pip&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;4. 安装编译dlib&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;安装face_recognition这个之前需要先安装编译dlib&lt;/span&gt;&lt;/p&gt;


&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;span&gt;# 编译dlib前先安装 boost&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ sudo apt-get install libboost-all-dev&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 开始编译dlib&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 克隆dlib源代码&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ git clone https://github.com/davisking/dlib.git&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;  $ cd dlib&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ mkdir build&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cd build&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cmake .. -DDLIB_USE_CUDA=0 -DUSE_AVX_INSTRUCTIONS=1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cmake --build .（注意中间有个空格）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cd ..&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ python setup.py install --yes USE_AVX_INSTRUCTIONS --no DLIB_USE_CUDA&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;5. 安装 face_recognition&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;# 安装 face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ pip install face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 安装face_recognition过程中会自动安装 numpy、scipy 等&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3FOz3pQoIxaSia2z0J3bSiaHD7cnKrLabTI8HPKHQHrc1Vsrs4enBzWewl9g1e8UAWXYLXWgK3BvHA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;环境搭建完成后，在终端输入 face_recognition 命令查看是否成功&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实现人脸识别：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例一(1行代码实现人脸识别)：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1. 首先你需要提供一个文件夹，里面是所有你希望系统认识的人的图片。其中每个人一张图片，图片以人的名字命名：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3FOz3pQoIxaSia2z0J3bSiaHicguhGIsNCxD7dMlOF9bFB4LuGicY7QoiaXibFubAt2DibNFicP4LcyKPgiaw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;known_people文件夹下有babe、成龙、容祖儿的照片&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;span&gt;2. 接下来，你需要准备另一个文件夹，里面是你要识别的图片：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3FOz3pQoIxaSia2z0J3bSiaH2RlWZaib92C8wpOxX6g0rSqUIxwl1cHX4Q8BibxficN8XeC8k8QsDpia8A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;unknown_pic文件夹下是要识别的图片，其中韩红是机器不认识的&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;3. 然后你就可以运行face_recognition命令了，把刚刚准备的两个文件夹作为参数传入，命令就会返回需要识别的图片中都出现了谁：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3MEzPh8JXaLKv8wsCK23hwGy8TKPQIDBDmu5ywgOibA75xe4RMwM4FibFOlsL3wFFzNmwKyXXKLmuQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;识别成功！！！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例二(识别图片中的所有人脸并显示出来)：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;63&quot;&gt;
&lt;p&gt;&lt;span&gt;# filename : find_faces_in_picture.py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 导入pil模块 ，可用命令安装 apt-get install python-Imagingfrom PIL &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;import Image&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 导入face_recogntion模块，可用命令安装 pip install face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;import face_recognition&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 将jpg文件加载到numpy 数组中&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;image = face_recognition.load_image_file(&quot;/opt/face/unknown_pic/all_star.jpg&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 使用默认的给予HOG模型查找图像中所有人脸&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 这个方法已经相当准确了，但还是不如CNN模型那么准确，因为没有使用GPU加速&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;span&gt;# 另请参见: find_faces_in_picture_cnn.py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;face_locations = face_recognition.face_locations(image)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 使用CNN模型&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# face_locations = face_recognition.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;face_locations(image, number_of_times_to_upsample=0, model=&quot;cnn&quot;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 打印：我从图片中找到了 多少 张人脸&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;print(&quot;I found {} face(s) in this photograph.&quot;.format(len(face_locations)))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 循环找到的所有人脸&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;for face_location in face_locations:        &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 打印每张脸的位置信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        top, right, bottom, left = face_location&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        print(&quot;A face is located at pixel location Top: &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;            {}, Left: {}, Bottom: {}, Right: {}&quot;.format(top, left, bottom, right))        &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 指定人脸的位置信息，然后显示人脸图片&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        face_image = image[top:bottom, left:right]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        pil_image = Image.fromarray(face_image)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        pil_image.show()&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3MEzPh8JXaLKv8wsCK23hwHiaAwE3qLIjbfEm2PWo9BOd9EFqfVPw5BbuqYE2BJL5VMAsE0ibLWhRA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用于识别的图片&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;# 执行python文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ python find_faces_in_picture.py&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;img class=&quot;&quot; data-ratio=&quot;0.8&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3MEzPh8JXaLKv8wsCK23hw2RkJqPcz5jbOTFhFiaUN64wu3oYHHWyEibZcuCaUpaNRnhrcLJag5bCQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从图片中识别出7张人脸，并显示出来&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例三(自动识别人脸特征)：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;53&quot;&gt;
&lt;p&gt;&lt;span&gt;# filename : find_facial_features_in_picture.py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 导入pil模块 ，可用命令安装 apt-get install python-Imaging&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;from PIL import Image, ImageDraw&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 导入face_recogntion模块，可用命令安装 pip install face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;import face_recognition&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;# 将jpg文件加载到numpy 数组中&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;image = face_recognition.load_image_file(&quot;biden.jpg&quot;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;＃查找图像中所有面部的所有面部特征&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;face_landmarks_list = face_recognition.face_landmarks(image)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;print(&quot;I found {} face(s) in this photograph.&quot;.format(len(face_landmarks_list)))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;for face_landmarks in face_landmarks_list:&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;＃打印此图像中每个面部特征的位置&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;   facial_features = [&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'chin',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'left_eyebrow',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'right_eyebrow',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'nose_bridge',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;span&gt;        'nose_tip',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'left_eye',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'right_eye',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'top_lip',&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        'bottom_lip'&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;     ]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;for facial_feature in facial_features:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        print(&quot;The {} in this face has the following points: {}&quot;.format(facial_feature,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;face_landmarks[facial_feature]))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;＃让我们在图像中描绘出每个人脸特征！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    pil_image = Image.fromarray(image)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d = ImageDraw.Draw(pil_image)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;    for facial_feature in facial_features:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        d.line(face_landmarks[facial_feature], width=5)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    pil_image.show()&lt;/span&gt;&lt;/p&gt;

&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9383333333333334&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3MEzPh8JXaLKv8wsCK23hwyeCWWxT8REosGhzFee3AoW9qLfdRkHY5UXyMGgaoUBd6nnPTlfS0lQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;自动识别出人脸特征&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例四(识别人脸鉴定是哪个人)：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;44&quot;&gt;
&lt;p&gt;&lt;span&gt;# filename : recognize_faces_in_pictures.py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# -*- conding: utf-8 -*-&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 导入face_recogntion模块，可用命令安装 pip install face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;import face_recognition&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;span&gt;＃将jpg文件加载到numpy数组中&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;babe_image = face_recognition.load_image_file(&quot;/opt/face/known_people/babe.jpeg&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Rong_zhu_er_image = face_recognition.load_image_file(&quot;/opt/face/known_people/Rong zhu er.jpg&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;unknown_image = face_recognition.load_image_file(&quot;/opt/face/unknown_pic/babe2.jpg&quot;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;＃获取每个图像文件中每个面部的面部编码&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;＃由于每个图像中可能有多个面，所以返回一个编码列表。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;＃但是由于我知道每个图像只有一个脸，我只关心每个图像中的第一个编码，所以我取索引0。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;babe_face_encoding = face_recognition.face_encodings(babe_image)[0]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Rong_zhu_er_face_encoding = face_recognition.face_encodings(Rong_zhu_er_image)[0]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;unknown_face_encoding = face_recognition.face_encodings(unknown_image)[0]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;known_faces = [&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    babe_face_encoding,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    Rong_zhu_er_face_encoding&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;＃结果是True/false的数组，未知面孔known_faces阵列中的任何人相匹配的结果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;results = face_recognition.compare_faces(known_faces, unknown_face_encoding)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;print(&quot;这个未知面孔是 Babe 吗? {}&quot;.format(results[0]))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;print(&quot;这个未知面孔是 容祖儿 吗? {}&quot;.format(results[1]))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;print(&quot;这个未知面孔是 我们从未见过的新面孔吗? {}&quot;.format(not True in results))&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.935&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3MEzPh8JXaLKv8wsCK23hwvgclXY9TW0wPemTGZ69542cSTEaQwnQXYjllGWEEOytAPqCT6LeSxw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;显示结果如图&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;示例五(识别人脸特征并美颜)：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; 
&lt;blockquote readability=&quot;109&quot;&gt;
&lt;p&gt;&lt;span&gt;# filename : digital_makeup.py&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 导入pil模块 ，可用命令安装 apt-get install python-Imaging&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;from PIL import Image, ImageDraw&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# 导入face_recogntion模块，可用命令安装 pip install face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;import face_recognition&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;＃将jpg文件加载到numpy数组中&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;image = face_recognition.load_image_file(&quot;biden.jpg&quot;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;＃查找图像中所有面部的所有面部特征&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;face_landmarks_list = face_recognition.face_landmarks(image)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;for face_landmarks in face_landmarks_list:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    pil_image = Image.fromarray(image)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d = ImageDraw.Draw(pil_image, 'RGBA')&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;    ＃让眉毛变成了一场噩梦&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.polygon(face_landmarks['left_eyebrow'], fill=(68, 54, 39, 128))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.polygon(face_landmarks['right_eyebrow'], fill=(68, 54, 39, 128))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.line(face_landmarks['left_eyebrow'], fill=(68, 54, 39, 150), width=5)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.line(face_landmarks['right_eyebrow'], fill=(68, 54, 39, 150), width=5)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;    ＃光泽的嘴唇&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.polygon(face_landmarks['top_lip'], fill=(150, 0, 0, 128))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.polygon(face_landmarks['bottom_lip'], fill=(150, 0, 0, 128))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.line(face_landmarks['top_lip'], fill=(150, 0, 0, 64), width=8)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.line(face_landmarks['bottom_lip'], fill=(150, 0, 0, 64), width=8)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;    ＃闪耀眼睛&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.polygon(face_landmarks['left_eye'], fill=(255, 255, 255, 30))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.polygon(face_landmarks['right_eye'], fill=(255, 255, 255, 30))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;    ＃涂一些眼线&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.line(face_landmarks['left_eye'] + [face_landmarks['left_eye'][0]], fill=(0, 0, 0, 110), width=6)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    d.line(face_landmarks['right_eye'] + [face_landmarks['right_eye'][0]], fill=(0, 0, 0, 110), width=6)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;    pil_image.show()&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.935&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/L2QczVR5icb3MEzPh8JXaLKv8wsCK23hwibpvZrwnDecg46Cf37ETIWx745bpPpg9zbYdW4ucBYoaM4rspzkICBg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;美颜前后对比&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;来源：Kangvcar（&lt;span&gt;简书&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;----&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;------&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre accuse=&quot;aContent&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;span&gt;等的就是你，真的超有趣！高能金融抱团群发车啦~&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;加我拉你进群呦&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre accuse=&quot;aContent&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.0712166172106825&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkyUggTiciccxLbccHxK1LFiaDv8qzaXm2NdCibibHicaWRFTibvcWtXhZr3rXUf5Sj8q3afOrTyibHicKpBAOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;674&quot; width=&quot;auto&quot;/&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;br/&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;
            &lt;strong&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/strong&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;br/&gt;商务合作：联系微信号hengzi5809&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;</description>
<pubDate>Mon, 13 Nov 2017 05:25:27 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/T2EiyhoVjc</dc:identifier>
</item>
<item>
<title>爱因斯坦：量子物理与抽象数学（广义）</title>
<link>http://www.jintiankansha.me/t/sgn07VteZ2</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/sgn07VteZ2</guid>
<description>&lt;section class=&quot;&quot; data-brushtype=&quot;text&quot; data-width=&quot;100%&quot;&gt;&lt;strong&gt;&lt;span&gt;Are Numbers Real?&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section class=&quot;&quot; readability=&quot;9&quot;&gt;&lt;p&gt;&lt;span&gt;不熟悉广义相对论的人，无法从爱因斯坦的这番话中看出他当时到底想到了什么。爱因斯坦其实是在举例子。如果有人从非常高的建筑物上掉下来，他就会加速下落，而且加速度是一个标准值，由地球与他的身体之间的万有引力决定。但是，与此同时，他会有失重的感觉。就像国际空间站里的宇航员一样，他会感觉自己飘浮在空中。当然，你在从高处掉落时会使周围空气发生振动。因此，想象你在箱子里，与箱子一起做自由落体运动，效果可能会更好。实际上，国际空间站的宇航员之所以有失重感，唯一的原因是他们正在下落。值得注意的是，空间站高度上的地心引力强度与地面其实非常接近，大约是正常地心引力的9/10。造成宇航员失重感的原因是空间站正在垂直下落，就像从建筑物上掉下来的人一样，正在做自由落体运动。两者之间唯一的区别是空间站还在向侧方高速运动，因此，尽管它一直在下落，却怎么也到不了地面。这是进入运转轨道之后必然产生的结果：一直在下落，却怎么也到不了地面。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;选自《数学世界的探奇之旅》&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;布赖恩 • 克莱格 著  &lt;/span&gt;&lt;span&gt;胡小锐 译&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;p&gt;&lt;span&gt;因此，那些飘浮在空间站中的宇航员就是一个平常而真实的例子，他们向我们演示了爱因斯坦的想法：做自由落体运动的人感受不到自己的体重。在他们加速下落的时候，他们本来可以感受到的引力被抵消了。相比之下，如果我们下落的加速度超过了引力的作用，我们就会产生引力场正在将我们朝相反方向拉扯的感觉。大家想一想，飞机沿跑道开始加速时，你会有什么样的感觉？你会感到一种与引力非常相似的压力，将你推向椅背。如果加速度足够大，你就可以体验到宇航员或者战斗机飞行员经常感受到的“几倍重力”的感觉，你会觉得体重变得非常沉。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;接下来，我们看看爱因斯坦当时想到了什么。宇航员和从高楼上掉下来的人在自由落体的过程中都感觉不到自身的重量，这个事实说明加速度与万有引力的体验完全相同。他在脑海里想象出一个与伽利略的设想非常相似的情境。当初，伽利略在考虑相对性时，想象自己身处一个平稳前进、没有窗户的船舱中。他发现，无论在这个船舱中做什么实验，都无法确定自己是在运动还是静止状态。爱因斯坦在研究狭义相对论时，还考虑了光速不变这个条件。现在，他又把加速度加了进来，要考虑的东西更多了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;假设你在一艘没有窗户的宇宙飞船中，有一个大小不变的力正在将你推向飞船的后部，使你感受到自己的体重。爱因斯坦称，飞船有可能正降落在某个星球上，且该星球的引力正好与将你向后推的力大小相等；飞船也有可能正在太空中，在引擎的推动下以恒定的加速度提高飞行速度。但是，你无法在飞船中通过做实验来判断它到底处于哪种状态。引力的拉动与加速度是等效的，二者无法区分。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;爱卖弄的学究（喜欢卖弄的人往往与科学研究有密切关系）可能会辩解，严格地说，这两种情况是可以区分的，因为我们可以在飞船内部四处走动。既然如此，我们可以在飞船后部和前部各做一次实验。如果飞船在加速，两次实验结果应该没有什么不同，因为飞船各个位置的加速度是一样的。但是，如果是受引力作用，我们就可以从实验结果中看到细微的区别，因为飞船前部离星球更远，我们感受到的引力作用会弱一些。这个说法完全正确，但是它不符合等效原理，因为等效原理要求在太空中选择一个点，然后讨论该点的情况，而不允许我们在飞船中四处走动。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在这艘想象的飞船上，我们还可以做另外一个极其重要的实验。假设我们把狭义相对论实验中使用的光钟带上了飞船。我们知道，当飞船以稳定的速度飞行时，在飞船上的人看来，光钟没有移动，光束也不会受到任何影响，而是继续在两个镜面之间上下传播。现在，假设我们打开飞船的引擎，让飞船不再以恒定速度相对地球运动，而是开始加速。即使身处飞船内部，我们也能感受到飞船在加速。当光从顶部镜面反射到底部镜面时，飞船上的乘客可以看出光的传播路径发生了变化。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个现象非常有趣，表明伽利略的“无法通过实验区分”相对性的断言在加速度条件下是不成立的。但是，我们无须光学实验就可以知道他的说法不对。我们的身体能感受到加速度的效应，我们还可以在手机上安装一个加速度计。但是，等效原理可以告诉我们一些更有趣的事情。我们已经知道，如果飞船加速运动，光的传播路径就会改变。既然如此，如果飞船在引力场中，肯定也会出现同样的现象。爱因斯坦由此意识到万有引力的一个基本特性：物质具有弯曲时空的能力。具有质量的物质可以使时空弯曲，因此，我们看到本来应该直线传播的光束的路径发生了变化。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这些话听上去似乎有点儿耳熟。还记得绕地球运转的空间站吗？空间站沿着地球切线的方向飞行，飞行路线也是直线。本来，空间站应该会飞离地球，进入太空，但是地球质量使时空发生了弯曲，于是空间站的飞行路线也随之弯曲，并形成了轨道。因此，当飞行物遇到巨大物体时，飞行路线会发生弯曲。但是，静止的物体（例如苹果）为什么会突然加速落到地面上呢？这里，我们需要了解一个重要的事实：发生弯曲的不是空间，而是时间。尽管苹果在空间中保持静止，但在时空中却不是静止的，因为时间一直在滴滴答答地流逝。也就是说，苹果加速掉落是时间弯曲的结果。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这些解释可以帮助我们了解广义相对论，但是目前还没有涉及相关数学知识。知道这些内容可以让我们对广义相对论有一个粗浅的了解，但还不足以让我们将它应用到科学研究中。爱因斯坦擅长运用有限的数学工具，把思想实验的情况直观地表现出来，然后添加大量的数学内容，明确这个思想实验可能产生的结果。在研究广义相对论时，添加数学内容的工作持续了几年时间，其中大部分工作是在1911年（因为对量子理论的研究让爱因斯坦痛苦不堪，所以他决定暂时停止这项研究）至1915年完成的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;爱因斯坦面临的第一个问题是，他需要摆脱欧几里得2000年前深入讨论的几何学（参见第4章）。我们知道，古希腊人是在一个平整的表面上研究毕达哥拉斯定理与欧几里得几何定理的。他们认为这些都是理所当然的，以至于不愿意花费力气把它们表述成公理。但是，稍加考虑，我们就会发现这个假设条件有点儿奇怪。别的不说，单是真正平整的表面，古代就比现代少得多。柏拉图的完美原型自然可以做到真正平整，但是它们投射到现实世界的山洞中的阴影则不可避免有瑕疵。古希腊人规定了几何学研究的直线与现实世界不同，且没有粗细之分，但是没有任何人明确地表述过平整表面这个假设。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;让我们感到奇怪的另外一个原因是，古希腊人知道地球不是平的，但他们还是一如既往地做出了相反的假设，也就是说，他们假设地球是平的。在中世纪之前，人们普遍认为平坦的地球是标准模型，但与此同时，所有受过教育的人都认为地球只能是一个球体，而且早在古希腊时代，人们就已经证明了这一点。因此，尽管几何学令古希腊人深感自豪，尽管它的名字包含“测量地球”之意，但是在研究地球的曲面时，这门科学其实并不适用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;前文说过，垂直于赤道的平行线相交于地球两极。这已经反映出几何学的问题了，如果我们再考虑三角形这个最常见的几何图形，就可以更加清楚地看出这个问题。欧几里得的《几何原本》（卷一）的第32个命题告诉我们：“在任意三角形中，如果延长一边，则外角等于另两个内角之和，而且三角形的三个内角和等于两个直角的和。”换成我们熟悉的语言就是，欧几里得认为，三角形的三个内角和等于180度。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在欧几里得精心搭建的几何系统中（别忘了，在这个命题之前，还有31个其他命题），这个命题肯定是对的，不容置疑。可是，一旦离开了平整的表面，它就不成立了。在地球这个等球体上（地球至少是一个近似球体），与直线相对应的是大圆。显然，球面上的所有线不可能在所有三个维度上都是直线。事实上，所有线都是弯曲的，曲率与地球表面相同。大圆是指围绕地球表面且圆心与地球球心重合的所有曲线。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们可以做一个简单的实验，利用大圆构建一个三角形，就可以彻底推翻欧几里得几何学。我们从赤道这个大圆上取两个不重合的点，然后从这两个点开始，向北极方向各作一条与赤道成90度角的直线（分别与另一个大圆重合）。这两条直线将在北极相交，并构成一个夹角。赤道上两点之间的距离越大，两条直线在北极形成的夹角就越大。接下来，我们计算这个三角形的内角和。赤道上的两个角各为90度，第三个角的度数还不确定，但它们的和肯定超过180度。事实上，如果赤道上两点之间的距离为10000千米（约等于赤道至北极的距离。千米这个单位当时就是通过这个方法定义的），这个三角形就是一个等边三角形，三条边的长度都相等。此时，三个内角都是90度，因此这个三角形的内角和是270度。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;由此我们知道，爱因斯坦在计算广义相对论中的时空曲率时，是无法使用欧几里得几何定理的，因为他使用的数学工具必须可以处理曲面。更令人吃惊的是，他甚至还要处理四个维度（包括三个空间维和一个时间维）全部弯曲的情况。爱因斯坦的朋友马塞尔·格罗斯曼为他提供了一个解决方案：德国数学家伯恩哈德·黎曼创立的当时最先进的弯曲空间几何学。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;  此时，爱因斯坦的研究成果已经引起所有人，尤其是德国杰出的数学家戴维·希尔伯特的注意。希尔伯特曾邀请爱因斯坦到他任教的哥廷根大学做报告。之后，他对爱因斯坦的关注度进一步提高。当时，爱因斯坦的研究仍然有几个不完善的地方，希尔伯特似乎认为，他应该赶在爱因斯坦之前完成改进工作。事实上，尽管爱因斯坦先于希尔伯特发表了第一篇完整的广义相对论论文，但人们一度认为希尔伯特率先完成了那些方程，只不过他发表论文的时间晚于爱因斯坦。后来，人们发现希尔伯特的原始论文本身存在若干缺陷，他在看到爱因斯坦的论文之后才进行了修改，因此首发权仍然应该归属于爱因斯坦。无论第一个完成这项工作的人是谁，第一个着手研究广义相对论的人毫无疑问是爱因斯坦。与牛顿和莱布尼茨在微积分开创者问题上的纷争不同，爱因斯坦与希尔伯特并没有相互指责，希尔伯特还大度地承认这是爱因斯坦的杰作。整个研究成果可以用一个看起来十分简单的方程表示：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.29292929292929293&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/NIbZOyib6WePOzmqemmjgMVpnicribdfrpiccegFfZUGZ9Wd9JDgnE9DEq4icuEbvQ9zlPlgs55thmBY6kHAOPPbjqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;198&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;除了光速的四次幂以外，整个方程看起来似乎非常简单，但是那些带有μv下标的参数都不是简单的变量，而是爱因斯坦从黎曼研究成果中借鉴而来的张量——一种功能强大但是难以操作的数学工具。张量可以把不同数值、矢量以及其他张量之间的多维关系压缩成一个单项。这个单项看似非常简单，但是其背后隐藏着一个变量矩阵。把引力场方程中的张量展开，将会变成10个基本微分方程，而且其中涉及的值会根据在空间和时间中的位置不同而发生变化。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;牛顿的万有引力理论包含一个简单的基本方程（牛顿本人并没有使用这个方程）：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;F=Gm1m2/r­2&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;整个方程只涉及常数G、两个天体的质量与它们之间的距离（r）。爱因斯坦的方程也有G，但是其他需要考虑的因素远不只是质量的影响作用，尽管质量非常重要。其中一个关键因素是，物体质量不固定且随着运动发生变化（根据狭义相对论）。能量可以增加质量。后来，爱因斯坦还证明了能量也可以增加引力。质量的效应则主要是使时间发生弯曲。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;与此同时，空间也会发生弯曲。宇宙飞船加速时导致光束弯曲的根本原因就是空间弯曲。与时间不同，空间弯曲需要考虑所有三个维度，每个维度上有两个方向，因此爱因斯坦需要考虑的因素又多了六个。此外，他还要综合考虑一些稀奇古怪的东西，例如惯性系拖曳效应（由于相对性效应，运动物体会产生一个垂直于运动方向、强度不大的引力）。爱因斯坦需要考虑的最后一个问题是，引力会产生某种形式的能量（某些物体，如高山上的石头，因为位于引力场的高处而具有势能）。我们已经知道，能量可以产生引力。于是，它们就会形成一个小的反馈回路，引力又摇身一变成了一个引力源。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;与狭义相对论不同，广义相对论使用的是寻常人并不熟悉，甚至永远也不会熟悉的数学知识。事实证明，这些复杂方程的求解极富挑战性。尽管在特例中解这些方程并非难事，但是它们没有一般性解法。麦克斯韦通过求解复杂方程，预测到电磁波这个意想不到的物理实体的存在，这是人们利用数学工具进行类似预测的早期实例。现在，根据广义相对论方程，人们又预测到黑洞的存在。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;黑洞这个概念要追溯至18世纪。当时，英国天文学家约翰·米歇尔发现，如果天体的质量足够大，它的逃逸速度（摆脱该天体引力必须具备的速度）就会非常快，甚至能超过光速，因此光也有可能无法从这种暗星上逃逸。后来，德国物理学家卡尔·史瓦西受到爱因斯坦相对论的影响，重新提出这个概念，那时米歇尔的研究早已被人们遗忘了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;史瓦西提出这个概念的时间是1916年，当时他正在参加第一次世界大战，而相对论也只发表了几个月。此时，爱因斯坦本人仅仅求得了部分近似解，做出水星轨道是变化的这个可以检验的预测。但是，躲在战壕里的史瓦西却得到了黑洞这个特例的精确解，指出星体耗尽支撑其重量的燃料之后，就会因为无法抵抗自身引力而坍缩，最终变成黑洞。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但是，史瓦西并没有把他的预测结果称作“黑洞”，这个名词直到20世纪60年代才出现。人们通常认为黑洞这个名称是约翰·惠勒发明的。虽然惠勒肯定是最早使用这个名称的科学家之一，但是第一个想出这个名词的人似乎不是他。1964年1月，在美国科学促进会的一次会议上，有人开始传播这个术语，但这个人不是惠勒。随后，安·尤因在《科学简讯》上发表了一篇介绍这次会议的文章，把这个术语变成了铅字。也就是说，这个名称源自那次会议，但是无法确定发明者。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;无论黑洞这个名称源自何处，我们都知道黑洞从何而来，答案就是数学。在检验科学模型的有效性时，我们往往会考察它能否预测出当初没有被纳入模型的现实世界的情况。因此，爱因斯坦急匆匆地求得方程的部分近似解，并开始预测水星轨道的特点。不久之后，人们利用日食发生的时机，通过观察从太阳旁边经过的星光，证实了相对论关于引力可导致光束弯曲的预测是正确的。但是，在预测黑洞的存在之前，几乎没有人仅利用模型就预测出一个所有人见所未见，甚至想都没想过的物理实体。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;即使是现在，与其说黑洞是科学研究的对象，还不如说它是数学的产物。天文学家在太空深处观察到很多天体，有间接证据表明，从它们表现出来的特点看，这些天体似乎就是黑洞。尽管这些证据有很强的说服力，但所有证据都只是间接证据。我们从来没有直接观察到黑洞，只是借助数学工具推演出我们在银河系中心可能观察到的那些景象（据猜测，银河系中心有一个无比庞大的黑洞）。这里应用的数学绝对位于现实世界的边界线上，似乎与真实世界存在某种关系，但尚未得到证实。有人（例如马克斯·泰格马克）认为，数学与现实之间的联系永远达不到严丝合缝，如果我们可以近距离分析黑洞，就可以证明这些预测都是错误的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;尽管相对论的证明工作非常重要，但是在此期间，爱因斯坦还投身于物理学的一个新分支——量子物理领域，并在其中发挥了重要作用。量子物理是一个研究微观世界的物理分支，同样具有革命性意义。20世纪初，原子尚未被视为一种确定存在的实体，而只是一个有用的概念性工具，可用于预测物质有哪些特征。但随后，人们不仅证明了原子的确存在（主要是爱因斯坦的功劳），而且发现原子具有一些看似完全违背自然规律的特征。这实在是一个自相矛盾的悖论，因为自然界主要是由这种量子构成的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;量子物理非常复杂（它研究的是由原子、电子、光子等粒子构成的微观世界），本书不准备对其进行深入讨论，但是量子物理在其发展过程中得出了两个非常重要的观察结果，可以帮助我们了解数学对于宇宙探索的重要意义。爱因斯坦和丹麦物理学家尼尔斯·玻尔等人是最早进入量子物理领域的科学家。他们很快发现，如果从量子的层级来研究宇宙，就必须抛弃很多关于物质和光的特征的假设。例如，人们早就认为光是一种波，这个假设也已经得到了麦克斯韦的证实。但是，在新兴的量子物理研究领域脱颖而出的大咖们告诉人们，所谓的光波特性，不过就是一个模型。光的确具有类似于波的特性，但它也可以被描述成一堆粒子或者场扰动。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在解释原子中的电子与光的相互作用时，玻尔受行星绕太阳运行的启发，试图把这些电子放入类似的轨道。尽管这个模型早在20世纪20年代就已经过时了，但是我们仍然可以在几乎所有的原子平面结构图中看到它的身影。玻尔很快就发现自己的这个想法行不通，于是他为这些电子设计了多个轨道，让电子可以在不同的轨道之间跳跃，但是不允许它们停留在轨道中间。我们所熟悉的那些看得见、摸得着的“真实”事物不具有这种特征，但是这些量子却表现出这个特点。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;玻尔的原子研究没有多少实用价值，但激起了一些年轻科学家的兴趣，其中最有名的当属沃纳·海森堡和埃尔温·薛定谔。他们决定在简单的玻尔原子模型的基础上，用数学描绘出量子的相互作用。海森堡更加彻底，他提出的矩阵力学利用纯粹的数学方法，描述量子的特点。他根本不考虑借助模型这种直观表示，而是通过操作矩阵（即数组），摇动手柄，使黑箱模型像麦克斯韦电磁波方程组一样，做出一些重要的预测。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;薛定谔不喜欢这种抽象的方法，因此他利用波这种熟悉的形式，考虑如何建立量子行为的模型。时至今日，薛定谔方程对于我们理解量子物理仍然具有非常重要的意义。它同样属于形式十分简单、实质却十分复杂的方程：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5558333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/NIbZOyib6WePOzmqemmjgMVpnicribdfrpiclDNicBJspbtf1RRtUnAn5ibN5QZqhYIPicUibdibMSyAj8EjK9jUVaWB2ZQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot; width=&quot;154px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从数学的角度看，这个方程的某些特点足以让你胆战心惊。首先，该方程使用了–1的平方根i。其次，就像爱因斯坦方程中的张量一样，薛定谔方程中的希腊字母Ψ和戴帽子的Η这两个符号都暗藏玄机。Ψ是描述某个系统本质的波函数，表达式非常复杂，而戴帽子的Η指“哈密顿算符”，表示系统中的能量并将其应用到波函数之中。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;最初，人们以为薛定谔方程中的波函数，或者说该函数值的平方（谢天谢地，终于摆脱了那个让人讨厌的i），表示的是量子在系统中的位置。但是，真如此的话，似乎就可以预言所有量子无时无刻不在扩散，并且越变越大，但是没有实验可以证明这个预测。（谢天谢地，否则我们将身处一个无比奇怪的世界。）再次，人们发现该方程预测的是量子处于某个位置或者系统处于某种状态的概率。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;除了这个方程和令人晕头转向的数学应用，量子理论研究还产出了大量其他成果。例如，将相对论引入量子行为研究的狄拉克方程（它有一个副产品，即预测了反物质的存在），以及在量子理论的基础上发展而成的量子电动力学等。但是，只需要看看海森堡和薛定谔，我们就可以看出科学家在“采撷”数学运算结果而不单纯依靠直接观察的道路上取得了两次重要的突破。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;海森堡在他的矩阵力学中使用了完全数学化的描述方法，薛定谔紧随其后，他的方程把概率纳入其中。爱因斯坦辛辛苦苦地把量子理论带到我们这个世界上，但是在涉及概率之后，他发现在量子这个层级，如果不经过测量，所有的存在都只是一种可能性。例如，如果刚刚没有测量过，就无法确定量子的位置。人们常说，量子在同一时间里的可能位置有两个，但是真实情况似乎更加复杂，展现在人们眼前的是概率织成的一张网。这让爱因斯坦感觉很不舒服，因此他立刻停止了这项研究。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从本质上讲，量子物理似乎从根本上把现实变成了数学。根据量子理论，如果不是正在测量，关于现实世界的所有观察结果对概率的依赖程度都会很大。乍一看，这与抛硬币似乎没有本质上的不同。在公平的抛硬币游戏中，得到正面与反面的概率通常各占一半。但是，一旦硬币被抛出去，出现某种结果的可能性就是100%，而出现另一种结果的可能性则是0。只不过在硬币落地之前，我们不知道这个结果到底是什么。但是，如果抛出去的是一枚量子硬币，我们得到的就真的只有各占一半的概率，在进行测量并得出结果之前，前面说的那种潜在确定性是不存在的。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; 
&lt;p&gt;&lt;span&gt;尽管数学概念与真实的量子之间的这种关系似乎不可信，但是多年来已经有大量实验证明了它的真实性。事实证明，“现实世界建立在数学基础之上”的说法属于夸大其词。从某种意义上讲，这个说法已经不像以前那样令人吃惊了。数学仍然是现实的模型，而不是一种绝对的描述。概率与推动现代物理发展的抽象数学不同，它是作为应用数学工具被人们发明出来的。概率源于抛硬币等真实操作的观察结果，只不过在量子物理中，它表现出之前没有的独立性。这并不是说量子就是概率，而是说我们通常只能以概率的形式来描述它们。即使在伽利略和牛顿的时代，物理学领域也不时可以看到对称的身影，例如牛顿第三运动定律就描述了一种令人赏心悦目的对称，人们对相对论莫衷一是的态度也形成了一种对称。但是，随着历史的车轮进入20世纪并继续前行，对称展示出新的活力，对科学理论的发展起到显著的推动作用。从此，数学真正地占据了主导地位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;来源：哲学园&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;----&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;------&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre accuse=&quot;aContent&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;span&gt;等的就是你，真的超有趣！高能金融抱团群发车啦~&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;加我拉你进群呦&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre accuse=&quot;aContent&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.0712166172106825&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkyUggTiciccxLbccHxK1LFiaDv8qzaXm2NdCibibHicaWRFTibvcWtXhZr3rXUf5Sj8q3afOrTyibHicKpBAOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;674&quot; width=&quot;auto&quot;/&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/strong&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;br/&gt;商务合作：联系微信号hengzi5809&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;</description>
<pubDate>Mon, 13 Nov 2017 05:25:26 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/sgn07VteZ2</dc:identifier>
</item>
</channel>
</rss>