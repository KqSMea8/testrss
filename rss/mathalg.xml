<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>那些校招年薪30W+的IT企业，究竟看重你的哪些能力？</title>
<link>http://www.jintiankansha.me/t/wCeJf7SQF7</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/wCeJf7SQF7</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;02&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;算法学习的困境&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;事实上，算法的学习对于大部分人来讲，都不是一件容易的事情。在学习算法的过程中，很多人都会遇到各种各样的问题：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;算法和数据结构知识复杂且抽象，难以理解和掌握；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;明明感觉理解了算法原理，可遇到具体问题还是一筹莫展；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;独学无友，闭门造车，遇到问题无人交流；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;朋友圈没有大神，一师难求，遇到难题无力解决；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;怠于实践，畏惧难题，始终无法提升的解题量和思维能力；&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;……&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而所有的这些问题都会直接带来噩梦——&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;面试碰壁，和高薪IT岗绝缘；竞赛打铁，领奖台遥不可及；考试无力，分数全看当天运气……&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何学好算法&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;那么，我们该如何学习算法呢？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;☆卓越的指导教师&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;算法本身有一定的理解难度，很多问题极度抽象，因此我们需要一位优秀的指导教师，用正确的姿势，讲透算法原理，让你摆脱一知半解的困扰。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;☆优秀的解题教练&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在初步解决理解难关后，熟练掌握和使用算法也需要一个持续内化的过程，而解决具体的算法问题便是一条很好的途径，然而，独自学习往往很容易被某个问题卡住从而半途而废，因此我们需要一位优秀的解题教练，教会你如何解决问题，从而切实提升解题能力和思考能力。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;☆必要的导学督学机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同时，学习本身是一件相对枯燥的事情，放弃总是比坚持要更容易，因此我们需要很好的学习氛围、以及必要的导学督学机制来帮助你在算法学习的道路上坚持下去。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;如果有一款学习产品可以做到上述几点，无疑会很好地帮助我们解决“如何学好算法”的问题，而“算法训练营”恰恰就是这样的一款学习产品。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;什么是算法训练营？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;“算法训练营”是学堂在线联合清华大学计算机系邓俊辉教授及其教学团队共同研发的、针对算法学习而设计的系列课程。结合专业的课程设计和科学的学习管理，针对学员学习算法过程中遇到的各类典型问题而设计，无论是求职名企、专业深造、竞赛获奖还是培养兴趣，“算法训练营”都将为你保驾护航。&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 23 Apr 2018 18:16:35 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/wCeJf7SQF7</dc:identifier>
</item>
<item>
<title>编程语言简史</title>
<link>http://www.jintiankansha.me/t/drChXsowX4</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/drChXsowX4</guid>
<description>&lt;p&gt;&lt;img width=&quot;487&quot; data-ratio=&quot;0.5617283950617284&quot; data-type=&quot;jpeg&quot; data-w=&quot;486&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/WL0F5jTX3x5My4vsycXbWB6nfCzdhKw9rref1D0QvTdEQaOarXaiczlcp7xVDEr6cWlH9ng0xrO2lxxHEBK5pMg/640?wx_fmt=jpeg&quot; data-croporisrc=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/VcRPEU1K2ocUDPy4FibWibjLcSPOJJrhJOCIes0xo2PPlztys0FsEDJjgLwCGzZCqkia1ZbCqmcvr6uib9C1oWlSKg/640?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;487&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;273&quot; /&gt;&lt;br data-filtered=&quot;filtered&quot; /&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;编程语言有上千种，但是流行的不过10来种，那些我们经常使用的编程语言都是谁在什么时候创造出来的呢？一起来看看。&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1880年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约瑟夫·玛丽·雅卡尔设计出人类历史上首台可设计织布机--雅卡尔织布机，对将来发展出其他可编程机器(例如计算机)起了重要作用。当时，他的发明受到了Skynet丝织工的强烈反对。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1842年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;阿达·洛夫莱斯(Ada Lovelace）因为厌倦了在笔记本上运算，她建立了循环和子程序概念，为计算程序拟定&quot;算法&quot;，遗憾的是当时并没有计算机。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1936年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;阿兰·图灵（Alan Turing）被称为计算机科学之父、人工智能之父，是计算机逻辑的奠基者，但却因性倾向而遭到英国政府迫害化学阉割了他。女王伊丽莎白二世后来赦免了他，但不幸的是，当时他已经死了很久了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1936年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;阿隆佐·邱奇(Alonzo Church)是美国数学家，1936年发表第一份精可计算函数的定义，对算法理论的系统发展做出巨大贡献，和图灵是同一个年代的人，但比图灵幸运多了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1957年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;约翰·巴克斯（John Backus）创建全世界第一套高阶语言FORTRAN，这是程序员真正意义上使用的第一种语言。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1959年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;葛丽丝·穆雷·霍普（Grace Hopper）发明了第一个面向企业的面向业务的编程语言，为“面向商业的通用语言”简称 COBOL。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1964年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;John Kemeny和Thomas Kurtz认为编程太困难了，他们需要回到基础上来，于是，他们称自己发明的编程语言为BASIC。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1970年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;Niklaus Wirth很喜欢开发语言，于是开发了多种语言，最终，他发明的Pascal成为当时世界上最受欢迎的语言之一。他还提出了一句计算机领域人尽皆知的法则：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;算法+数据结构=程序&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，这个公式对计算机科学的影响程度不亚于爱因斯坦的摩尔定律。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1972年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;丹尼斯·里奇（Dennis Ritchie ）在贝尔实验室上班上到无聊的时候，他决定发明带有花括号的语言，于是C语言诞生了，最终还取得了巨大的成功。之后，他又添加了分段错误等友好的功能来提高工作效率。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;倒腾出这门C语言后，他和贝尔实验室的朋友心想要不做一个C的演示程序，于是，一个叫做Unix的操作系统又诞生了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1980年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Alan Kay发明了面向对象的编程，并将其称为Smalltalk，在Smalltalk中，所有的东西都是对象，甚至一个对象也是一个对象。所以压根没人真正搞得清楚 small talk 是什么意思。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1983年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Jean Ichbiah注意到Ada Lovelace程序从来没有真正运行，于是决定用她的名字开发一门语言，但语言最终还是没有运行成功。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1983年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Bjarne Stroustrup 注意到C语言在编译方面还不够完美，于是把自己能想到的功能都加进去了，并将其命名为C ++。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;程序员到处都采用它，这样，他们看各种视频和工作时读xkcd漫画的时候就有借口可找了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1986年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Brac Box和Tol Move决定开发一个基于Smalltalk的C语言不可读版本，他们称之为Objective-C，然而却没有人能够理解它的语法。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1991年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Guido van Rossum不喜欢花括号，于是决定发明一种没有花括号的语言，然后又因为太喜欢英国肥皂剧《Monty Python飞行马戏团》，于是，就把该语言命名为Python。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1993年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Roberto Ierusalimschy和朋友决定开发一个巴西本地的脚本语言，在本地化过程中，一个错误使得索引从1开始算起，而不是0，他们把这门语言命名为Lua。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1994年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Rasmus Lerdorf为了要维护个人网页，在1994年,用C语言开发了一些CGI工具程式集，来取代原先使用的 Perl 程式。最初这些工具程式用来显示 Rasmus Lerdorf 的个人履历，以及统计网页流量。后来又用C语言重新编写,并将这些程式和一些表单直译器整合起来，称为 PHP/FI。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1995年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;编程过程中存在很多不必要的琐碎时间，导致松本行弘不是很高兴，他注意到其他程序员也不是很高兴。于是，他创建了 Ruby 来让程序员高兴。最后，Ruby 社区高兴了，每个人也都高兴了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1995年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Brendan Eich 利用周末时间设计了一门语言，打算用这门语言来为全世界的每一个主流浏览器乃至于最终的 Skynet 都提供动力。他先是找到了 Netscape 然后说这门语言叫做 LiveScript，但在代码评审期间 Java 变得流行起来，所以他们决定最好还是用花括号，然后就把它更名为 JavaScript。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;结果表明，命名带有 Java 会让他们惹上商标的纠纷，于是，JavaScript 就更名为 ECMAScript，但大家仍然把它叫做 JavaScript。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1996年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;詹姆斯·高斯林（James Gosling）发明了Java，这是第一个过度冗长的面向对象编程语言，其中设计模式在实用主义方面几乎为0。于是乎，就诞生了超级有效的管理器提供商、容器提供商、服务提供商、单一管理器提供商模式。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2001年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Anders Hejlsberg重新发明了Java并将其称为C＃，因为感觉C编程比Java更酷。每个人都喜欢这个新版本的Java，因为它完全不像Java。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2005年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;David Hanselmeyer Hansen创建了一个名为Ruby on Rails的Web框架，从此大家都忘了Ruby和Rails原来是两个独立的语言了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2006年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;John Resig为JavaScript编写了一个辅助程序库，每个人都认为这是一种语言，并且从互联网上复制和粘贴jQuery代码。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2009年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;肯·汤普森（Ken Thompson）和罗伯·派克（Rob Pike）决定开发一种像C这样的语言，但是编译速度要更快，更安全，并且把 Gopher（囊鼠）作为吉祥物。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;最后，他们把这门语言命名为 Go，并把它做成开源，然后另外卖 Gopher 商标来作为收入来源。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2010年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;Graydon Hoare也想要像C这样的语言，于是开发出了Rust。Rust集齐了其他动态语言的重要特性。比如不需要管理内存，比如不会出现Null指针等，但Graydon想要更炫的东西，于是开始为苹果开发Swift。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2012年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Anders Hjelsberg希望在Web浏览器中编写C＃，于是他设计出了TypeScript，它可以理解为是JavaScript的超集，但其中却包含了更多的Java。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2013年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Jeremy Ashkenas希望像Ruby开发者一样快乐，所以他创建了CoffeeScript，编译成JavaScript，但看起来更像Ruby。不过，Jeremy从来没有像Matz和Ruby开发者那样真正开心过。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2014年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Chris Lattner开发Swift时的主要设计目标就是不要成为Objective-C，最终它看起来像Java。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;∑编辑 | Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;选自 | 智人世界&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;auto&quot; data-ratio=&quot;0.7509529860228716&quot; data-type=&quot;jpeg&quot; data-w=&quot;787&quot; data-s=&quot;300,640&quot; data-copyright=&quot;0&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkz1SRWmm2kJgtV2NTQtdSgtyl7nJbJm8xS78Td2LBbJQKKqyE54oaOO9upMribZagMKYJVBaEDyKtA/640?wx_fmt=jpeg&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 22 Apr 2018 17:25:59 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/drChXsowX4</dc:identifier>
</item>
</channel>
</rss>