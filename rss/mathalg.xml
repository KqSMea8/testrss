<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>先生，要点单吗? (HTTP协议概览)</title>
<link>http://www.jintiankansha.me/t/1udke2Elkr</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/1udke2Elkr</guid>
<description>&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;strong&gt;HTTP协议概览&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;3.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;7&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;我在TCP流通信中说明了，TCP协议实现了数据流的传输。然而，人们更加习惯以文件为单位传输资源，比如文本文件，图像文件，超文本文档(hypertext document)。&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;超文本文档中包含有超链接，指向其他的资源。超文本文档是万维网(World Wide Web，即www)的基础。&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;HTTP协议解决文件传输的问题。HTTP是应用层协议，主要建立在TCP协议之上(偶尔也可以UDP为底层)。它随着万维网的发展而流行。HTTP协议目的是，如何在万维网的网络环境下，更好的利用TCP协议，以实现文件，特别是超文本文件的传输。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;早期的HTTP协议主要传输静态文件，即真实存储在服务器上的文件。随着万维网的发展，HTTP协议被用于传输“动态文件”，服务器上的程序根据HTTP请求即时生成的动态文件。我们将HTTP的传输对象统称为资源(resource)。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;点单&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;HTTP实现了资源的订购和传送。其工作方式类似于快餐点单。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;-1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;请求&lt;/span&gt;(request): 顾客向服务员提出请求：“来个鸡腿汉堡”。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;回复&lt;/span&gt;(response):服务员根据情况，回应顾客的请求&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwcjTRol5xgpF7QXUWbpDib2uicGIw96XRmkPd1TliaoR9wlhyicvHrOBa4PDJg3RHyH9EYiaEtR2DvuYg/0?wx_fmt=jpeg&quot; width=&quot;410&quot; height=&quot;273&quot; class=&quot;&quot; data-ratio=&quot;0.6666666666666666&quot; data-w=&quot;630&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;根据情况的不同，服务员的回应可能有很多，比如:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;服务员准备鸡腿汉堡，将鸡腿汉堡交给顾客。（一切OK）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;  服务员发现自己只是个甜品站。他让顾客前往正式柜台点单。（重新定向）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;服务员告诉顾客鸡腿汉堡没有了。(无法找到)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;交易结束后，服务员就将刚才的交易抛到脑后，准备服务下一位顾客。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面来看一下HTTP是如何具体实现的。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;格式&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;HTTP协议的通信是一次&lt;/span&gt;&lt;span&gt;request-responce&lt;/span&gt;&lt;span&gt;交流。客户端(guest)向服务器发出&lt;/span&gt;&lt;span&gt;请求&lt;/span&gt;&lt;span&gt;(request)，服务器(server)&lt;/span&gt;&lt;span&gt;回复&lt;/span&gt;&lt;span&gt;(response)客户端。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwcjTRol5xgpF7QXUWbpDib26RJdWb1AIbZuHd1GKM8wHUcK09aMXxKYSTFXdmicicD8PYwHprYiciccOw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.3745019920318725&quot; data-w=&quot;502&quot; data-type=&quot;png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HTTP协议规定了请求和回复的格式:&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;起始行 (start line)
头信息 (headers)

主体(entity body)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;起始行&lt;/span&gt;只有一行。它包含了请求/回复最重要的信息。请求的起始行表示(顾客)“想要什么”。回复的起始行表示(后厨)“发生什么”。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;头信息&lt;/span&gt;可以有多行。每一行是一对&lt;span&gt;键值对&lt;/span&gt;(key-value pair)，比如:&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;Content-type: text/plain &lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;它表示，包含有一个名为&lt;span&gt;Content-type&lt;/span&gt;的参数，该参数的值为&lt;span&gt;text/plain&lt;/span&gt;。头信息是对起始行的补充。请求的头信息对服务器有指导意义 (好像在菜单上注明: 鸡腿不要辣)。回复的头信息则是提示客户端（比如，在盒子上注明: 小心烫）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;主体&lt;/span&gt;部分包含了具体的资源。上图的请求中并没有主体，因为我们只是在下单，而不用管后厨送什么东西 (请求是可以有主体内容的)。回复中包含的主体是一段文本文字(&lt;span&gt;Hello World!&lt;/span&gt;&lt;/span&gt;  &lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;  )。这段文本文字正是顾客所期待的，鸡腿汉堡。&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;请求&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;我们深入一些细节。先来看一下请求:&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;GET /index.html HTTP/1.1
Host: www.example.com&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在起始行中，有三段信息:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;GET 方法。用于说明想要服务器执行的操作。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;/index.html 资源的路径。这里指向服务器上的index.html文件。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;HTTP/1.1 协议的版本。HTTP第一个广泛使用的版本是1.0，当前版本为1.1。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;早期的HTTP协议只有&lt;span&gt;GET&lt;/span&gt;方法。遵从HTTP协议，服务器接收到GET请求后，会将特定资源传送给客户。这类似于客户点单，并获得汉堡的过程。使用GET方法时，是客户向服务器索取资源，所以请求往往没有主体部分。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;GET方法也可以用于传输一些不重要的数据。它是通过改写URL的方式实现的。GET的数据利用&lt;span&gt;URL?变量名＝变量值&lt;/span&gt;的方法传输。比如向http://127.0.0.1发送一个变量“q”，它的值为“a”。那么，实际的URL为http://127.0.0.1?q=a。服务器收到请求后，就可以知道&quot;q&quot;的值为&quot;a&quot;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;GET方法之外，最常用的是&lt;span&gt;POST&lt;/span&gt;方法。它用于从客户端向服务器提交数据。使用POST方法时，URL不再被改写。数据位于http请求的主体。POST方法最用于提交HTML的form数据。服务器往往会对POST方法提交的数据进行一定的处理，比如存入服务器数据库。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;样例请求中有一行&lt;span&gt;头信息&lt;/span&gt;。该头信息的名字是&lt;span&gt;Host&lt;/span&gt;。HTTP的请求必须有Host头信息，用于说明服务器的地址和端口。HTTP协议的默认端口是&lt;span&gt;80&lt;/span&gt;，如果在HOST中没有说明端口，那么将默认采取该端口。在该例子中，服务器的域名为www.example.com，端口为80。域名将通过DNS服务器转换为IP地址，从而确定服务器在互联网上的地址。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(参看IP地址与TCP端口)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;回复&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;服务器在接收到请求之后，会根据程序，生成对应于该请求的回复，比如:&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;HTTP/1.1 200 OK
Content-type: text/plain
Content-length: 12

Hello World!&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;回复的起始行同样包含三段信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OK是对状态码200的文字描述，它只是为了便于人类的阅读。电脑只关心三位的&lt;span&gt;状态码&lt;/span&gt;(status code)，即这里的&lt;span&gt;200&lt;/span&gt;。200表示一切OK，资源正常返回。状态码代表了服务器回应动作的类型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其它常见的状态码还有:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;302&lt;/span&gt;，&lt;span&gt;重新定向&lt;/span&gt;(redirect): 我这里没有你想要的资源，但我知道另一个地方xxx有，你可以去那里找。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;404，&lt;/span&gt;&lt;span&gt;无法找到&lt;/span&gt;(not found): 我找不到你想要的资源，无能为力。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;(重新定向时，客户端可以根据302的建议前往xxx寻找资源，也可以忽略该建议。)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;Content-type&lt;/span&gt;说明了主体所包含的资源的类型。根据类型的不同，客户端可以启动不同的处理程序(比如显示图像文件，播放声音文件等等)。下面是一些常见的资源&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;text/plain 普通文本&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span&gt;text/html HTML文本&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span&gt;image/jpeg jpeg图片&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span&gt;image/gif gif图片&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Content-length&lt;/span&gt;说明了主体部分的长度，以字节(byte)为单位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;回应的&lt;span&gt;主体&lt;/span&gt;部分为一段普通文本，即&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Hello World!&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;无状态&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;根据早期的HTTP协议，每次request-reponse时，都要重新建立TCP连接。TCP连接每次都重新建立，所以服务器无法知道上次请求和本次请求是否来自于同一个客户端。因此，HTTP通信是&lt;/span&gt;&lt;span&gt;无状态&lt;/span&gt;&lt;span&gt;(stateless)的。服务器认为每次请求都是一个全新的请求，无论该请求是否来自同一地址。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;想象高级餐厅和快餐店。高级餐厅会知道客人所在的位置，如果新增点单，那么服务员知道这和上一单同一桌。而在快餐店中，不好意思，服务员并不记录客人的特征。想再次点单？请重新排队……&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;随着HTTP协议的发展，HTTP协议允许TCP连接复用，以节省建立连接所耗费的时间。但HTTP协议依然保持无状态的特性。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;HTTP协议实现了万维网上的资源传输，采用request-response的工作方式。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;GET， POST&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;无状态&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;作者：Vamei&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;来源：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;http://www.cnblogs.com/vamei&lt;/span&gt;&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554187&amp;amp;idx=1&amp;amp;sn=35143b89b06fe4f5273f210b2d6a7c91&amp;amp;chksm=8b7e3290bc09bb86f7bb3f158d993df3f019a7e9ce3bc8897e164e35a2ebe5a4e0bdcc111089&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;哈尔莫斯：怎样做数学研究&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554187&amp;amp;idx=2&amp;amp;sn=c75293463823e4d6769638e54b64f3ec&amp;amp;chksm=8b7e3290bc09bb86dc1e3f8e78d0b6de8811d75f3dcb092766fcb8ba0bab1cd9ba1ddfcef3b9&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;扎克伯格2017年哈佛大学毕业演讲&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554141&amp;amp;idx=1&amp;amp;sn=74a74c4e4d08eba0dd734528aa0b08e7&amp;amp;chksm=8b7e32c6bc09bbd073b34c22004ac6e4d99c8a0caa64c7d3dbaa8fd55e6ef1fc87ed545b8b7e&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;线性代数在组合数学中的应用&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 29 Oct 2017 08:34:43 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/1udke2Elkr</dc:identifier>
</item>
<item>
<title>Matlab起名，从此再也不用担心取名啦</title>
<link>http://www.jintiankansha.me/t/ycaTuuqy1S</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/ycaTuuqy1S</guid>
<description>&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;strong&gt;Matlab起名字&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;4&quot;&gt;&lt;p&gt;&lt;strong&gt;三才五格、五行八字等理论是否真实本人是持中立态度的。就像是贴春联、放鞭炮、吃粽子等等一样，都是中国的传统文化。作为一个工科男只是被七大姑八大姨问烦了索性来个程序去解决，不用再烧脑，还显得有很高深。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;来&lt;/strong&gt;&lt;strong&gt;源：董辰辉&lt;/strong&gt;&lt;/p&gt;

&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot;/&gt;

&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;/&gt;&lt;section class=&quot;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;姓名学&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;无论研究派系之别，皆主要&lt;/span&gt;&lt;span&gt;以&lt;/span&gt;&lt;span&gt;求问者的生辰八字为改名造运之首要根据。尔后，研究者再以天格、人格、地格、外格、总格、天运五行、姓名总笔划为批注基础，以期经由姓名学为再造“后天运”之改名依据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxywDlVox1xHvZKHUgONBZEISs0ibFzL8RwKdruJfib09g0CgaibASag5nnB9dRlfpiaVmhgr3axibsXOA/0?wx_fmt=jpeg&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;1.009375&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;生辰八字&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;人出生的年月日时辰，根据古代干支计时方式，可以使用八个字来表示，如甲子年、丙申月、辛丑日、壬寅时，每个干支又有相对应的金木水火土五行，这样再根据五行分布、相生相克，得出取名该怎样来取，比如五行缺水那么就可以考虑名字中带“水”的字。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;三才五格&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;之后需要考虑姓名的笔画数。按照&lt;/span&gt;&lt;span&gt;&lt;strong&gt;繁体字&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;来数笔画，然后各字笔画相加，可以分别得到天格、人格、地格通称为“三才”；天格、人格、地格、外格、总格於姓名学通称为“五格”。具体计算方式示意图如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.66796875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1264&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/uJcKyGGBIvHxyRYAibAm7dJ7Ezia0kUytwxGfg04fMoHVJxWcDhaic3Sz9DGlia22kDZRibic9oudiaa21ILhp8QMq9Kw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;而五格不同的笔划数又有不同的吉凶解释。从&lt;/span&gt;1&lt;span&gt;划到&lt;/span&gt;81&lt;span&gt;划共九九八十一个，称之为九九八十一数。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后对于具体字来说，不同的字有不同的五行归属，字本身在姓名学里面又有或吉或凶或中立的解释。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么我们的取名原则应该是：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;、符合五行相生相克的要求；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;、五格笔划数要尽可能吉利；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;、字的选择要吉利。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;上面的理论是不是已经晕倒了，以上这些规则我都尽可能的考虑到了，你自己需要做的就是：&lt;strong&gt;&lt;span&gt;运行取名程序&lt;/span&gt;&lt;/strong&gt;，在指定五行中，选择最吉利的笔划数组合，用吉利的字，最终组合出来最吉利的备选名字组合和让家长挑选喜欢的名字。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这个小程序其实是本次课程的一个小例子，是董老师业余做的一个小程序，在第一节课后会公布源程序，就可以自己捣鼓啦。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxywDlVox1xHvZKHUgONBZEfNvt4CibP6H7zMw6TAtPr8I7wibicrgVd7XLcvxJd5oicwOzmomUjmPH1A/0?wx_fmt=jpeg&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;0.78125&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;极值学院，&lt;/span&gt;&lt;span&gt;&lt;span&gt;联合上市公司高级算法工程师、&lt;/span&gt;&lt;strong&gt;&lt;span&gt;《MATLAB从入门到精通》主编董辰辉老师&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，推出了&lt;/span&gt;&lt;span&gt;《&lt;strong&gt;Matlab从入门到算法实践升级版&lt;/strong&gt;》&lt;/span&gt;&lt;strong&gt;&lt;span&gt;第二期直播课程&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。连续五周共计10个课时、20学时，董老师将带领大家深入了解 MATLAB 功能，掌握主流算法使用方法，让学习者真正学以致用。课程还会专门介绍MATLAB 2017b 新版的功能，这可是其他课程少有的哦！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.66796875&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;480&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/uJcKyGGBIvHxyRYAibAm7dJ7Ezia0kUytw9lqMEPppeWc14naibicDauQQVyPicSyfjQwbth7gtN4tCU6AVibYbEP4gg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;一&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;p&gt;&lt;strong&gt;讲师介绍&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.66796875&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1179&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/uJcKyGGBIvFALGIl7ZMnnGia1Aj11KWiaU7braArjSKhQPVG55ibSuIMdfF1u5XNSy41EJCMGRibFRzlKaX97IGjpg/640?wx_fmt=jpeg&quot; width=&quot;120px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;董辰辉&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;硕士研究生，上市公司高级算法工程师。自2003年开始多次参加全国大学生、美国大学生、全国研究生数学建模竞赛，均获得优异成绩。使用MATLAB超过15年，精通各种算法及MATLAB算法工具箱，出版有《MATLAB从入门到精通》、《MATLAB2008全程指南》、《MATLAB/Simulink通信系统建模与仿真实例精讲》等教程。2009年研究生毕业从事算法工程师工作至今，主要工作内容为数学建模、优化算法、预测算法等。在数学建模竞赛以及算法工作方面都积累了非常丰富的经验。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;/&gt;&lt;/section&gt;&lt;/section&gt;</description>
<pubDate>Fri, 27 Oct 2017 22:55:22 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/ycaTuuqy1S</dc:identifier>
</item>
</channel>
</rss>