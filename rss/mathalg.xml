<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>我为什么鼓励你读博士？</title>
<link>http://www.jintiankansha.me/t/DqJDoB6XQW</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/DqJDoB6XQW</guid>
<description>&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89091&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;5&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;看过《水浒传》的朋友都知道，梁山的一百单八将因为各种理由加入了水寨，走上了劫富济贫、替天行道的路。我2006年从南京大学本科毕业以后，耳闻目睹了数百位计算机专业的博士（生），他们选择读博士的理由可以说比梁山好汉更为复杂。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看过《水浒传》的朋友都知道，梁山的一百单八将因为各种理由加入了水寨，走上了劫富济贫、替天行道的路。我2006年从南京大学本科毕业以后，耳闻目睹了数百位计算机专业的博士（生），他们选择读博士的理由可以说比梁山好汉更为复杂。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;就拿我自己来说，我从小就对编程不感兴趣，高中毕业时一心想报的志愿是数学或者物理专业，但被做数学教授的父亲逼着填报了计算机专业——他出于很多理由，不想让儿子走他的老路。后来我听说计算机专业居然也有一种不需要编程的职业——做教授！从此我对做教授无限向往，于是坚持读完了博士。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89453&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6666666666666666&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwibI9AuQMrcoib5JdHrnHwWLoVRZ8GOPhKxLX1jJwSeugVGGkGJsxibFLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;441&quot; title=&quot;&amp;#x8BFB;&amp;#x4E66;&amp;#x5206;&amp;#x5272;&amp;#x7EBF;&quot; width=&quot;60px&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;我的硕士生导师倪明选教授（现任澳门大学副校长）曾经有一位及门高弟，在倪教授问其为何读博士的时候回答：“我妈妈要求我拿到博士学位，我博士毕业以后就去赚钱。”这位传说中的师兄如今已是国内某著名IT公司的高层领导。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;与形形色色的读博理由相对应，这些博士（生）人生的道路也各不相同。有成为国内外大学教授者，有在公司做技术骨干者，有做一般的工程师者，也有读博期间遇到困难及时退学去工作者，也有苦苦支撑到毕业然后去工作者。当然，他们都比梁山好汉们的结局好得多了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;经常有朋友或者学弟学妹问我：“你觉得读博士好不好？”“你觉得我是否应该读博士？”这些都是相当难回答的问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而我们在选择是否读博的时候，往往是对这个专业还没有足够的了解，比如大三、大四时。在中国学生中有一种典型的“羊群效应”：如果周围同学（尤其是学习标兵们）都在准备出国或准备在国内读博，那大家都会效仿，觉得读博很有面子。如果大家都说读博没意义，即使对科研感兴趣的同学，也可能会因为面子问题而不去读博士。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;10年前，我也曾经与同学一起去面试微软的工程师职位，甚至宝洁的销售经理职位。现在想想，那些职位既不是我所长，也不是我的兴趣所在，可当年我又如何去判断呢？&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;span&gt;我想通过对一些博士人生道路的回溯分析，给计算机专业的学生一些建议，帮助他们选择是否要读博士，鼓励他们通过独立思考来选择自己的道路。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90940&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section readability=&quot;1&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.14347826086956522&quot; data-w=&quot;230&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwn3ykaTYL0IT6ePeQsqiaPo1CvicW5ib5FnYPGBmFr253kN7wMGibc3etJw/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; data-brushtype=&quot;text&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;对于读博士的一些误解&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.09737827715355805&quot; data-w=&quot;267&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwHB0y0RtUkaaAfnISvAGu0qqUmpPRVvz2qngM7eRic9OicDL0UicIicdiaIQ/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;年轻学生由于消息渠道不灵通，或者没有得到正确的指导，对读博士有一些误解。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.“读博和科研只适合绝顶聪明或成绩非常好的人。”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个看法是完全错误的，如同“演员只有非常有表演天赋的人才能当”一样是个伪命题。你如果认为大家心目中的学术大牛都是绝顶聪明的人，就好比说经常出现在新浪首页或者微博热搜的那几位明星的演技都非常好一样。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在我所认识的博士中，做出顶级科研的并不都是同辈中超级聪明的人，也不一定是平均成绩点数(Grade Point Average, GPA)最高的人，更不一定是参加ACM编程竞赛的高手们，而恰恰是那些有耐心有毅力坚持去钻研的人。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;很多博士生只要选好导师，选好研究方向，肯花费时间，都能做出顶尖的研究。有很多在海外学术圈颇有建树的学者和我私下交流的时候说他们当年的学习成绩并不好。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.“科研穷三代，读博毁一生。”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这句话在其他领域或许是对的，但在计算机领域就是错的。在计算机领域，通过读博挣钱的大有人在！计算机学科的特性就是科研与产业结合得非常紧密。尤其是最前沿的科研，对产业有很大的推动作用，并产生经济利益。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;一个典型的例子就是谷歌的创始人佩奇和布林都是博士生，也出自博士家庭。虽然他们没读完博士就去创业了（布林自称现在在职读博士），但是如果他们没有读博，那将很难开创出谷歌的核心技术。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; 
&lt;p&gt;&lt;span&gt;目前业界大数据系统的宠儿Spark，就是由加州大学伯克利分校的教授和博士们开发的。首席开发者马泰扎·哈里亚(MateiZaharia)即使有挣大钱的机会，也没有完全放弃麻省理工学院的教职。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在网络技术领域，目前业界关注的核心“软件定义网络”也是教授和博士们在大学里开发出来的。谷歌、威睿(VMware)、 Databricks (Spark)、Nicira (OpenFlow)以及无数顶尖技术公司雇佣了数以千计的计算机专业毕业的博士，因为博士通常比其他雇员更接近核心技术。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果你想实现自己的技术梦想并挣大钱，读博士是一个很好的选择。“读博就得走清贫的人生道路”是没有任何道理的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.“科研做的东西大部分都是废纸，对实际一点帮助都没有。”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这种观点在计算机领域也是不正确的。计算机科学并不是屠龙之技。今天几十亿人都离不开的计算机网络的原型就是从加州大学洛杉矶分校发展起来的，我的师爷（我导师的导师）莱昂纳多·克莱洛克(LeonardKleinrock)教授在阿帕网(ARPANET)项目中开发了互联网的雏形，并在1969年发送了互联网的第一个数据包。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;20世纪70年代，我的导师、美国工程院院士林善成(Simon Lam)教授在他的博士论文中分析了解决链路层冲突的方法，最后被以太网采用，融入到我们的生活中。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;林教授在90年代开发了安全套接层(SSL)的第一个实现系统，如今安全套接层被运用到每台电脑和手机的浏览器中。不仅是计算机网络，几乎每个计算机领域的技术都被科研引领着。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;按照加州大学伯克利分校博士后研究员钱学海博士发表在《中国计算机学会通讯》(CCCF)上的文章1所说，计算机体系结构这些年的发展，都与该领域四大学术会议上的论文密不可分。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;另一方面，虽然很多论文在现实世界不一定能体现直接价值，但是在写文章的过程中，你能学到很多东西，比如提出问题、解决问题、语言表达的能力，这些都让人受益无穷。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.“博士毕业还不如本科生和硕士生好找工作。”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;其他专业可能会出现这样的情况，因为很多事情并不需要博士学历的人去完成，本科学历便绰绰有余，但在计算机领域这种观点是错误的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;美国的先进科技公司往往对计算机专业的博士求贤若渴，因为博士掌握着先进的科技，能为公司带来经济利益。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; 
&lt;p&gt;&lt;span&gt;我最近访问英特尔总部时，英特尔的研究人员便提到，在20年前英特尔还招聘硕士进行研究，然而最近英特尔基本只招聘博士。在美国，如果一位博士的科研领域正好是公司所需要的，那么很多公司会开出15万美元的年薪和公司股份来求贤。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这种情形目前在国内还并不常见，原因可能是国内的一些公司目前还处在模仿阶段而不是创新阶段。随着国内技术水平的不断提高，越来越多的公司也会渴求掌握科研本领和核心技术的计算机专业博士，估计在五年以内情况就会好转。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90940&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.14347826086956522&quot; data-w=&quot;230&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwn3ykaTYL0IT6ePeQsqiaPo1CvicW5ib5FnYPGBmFr253kN7wMGibc3etJw/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;读博士能学到什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.09737827715355805&quot; data-w=&quot;267&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwHB0y0RtUkaaAfnISvAGu0qqUmpPRVvz2qngM7eRic9OicDL0UicIicdiaIQ/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;读博士不仅是学习知识和技术，也能培养其他职业技能。读博所收获的并不仅是那几页论文，还有写论文过程中学到的东西。对于中国学生来说，工作中并不缺乏解决问题和编程的能力，而是欠缺表达和沟通能力。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;比方说你有一个想法能让公司某软件的性能提升一倍，那么你需要说服公司高层领导，让他认为你的想法是有意义的、值得投入资源去开发。实现这个目标所需要的能力是中国学生一直欠缺的，但是可以通过读博得到锻炼。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.把握公司高层领导和用户的需求的能力&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果公司高层领导对某软件的性能完全不感兴趣，你当然就不能提出提升软件性能的想法。你要知道公司目前最需要什么技术和产品。这个能力并不是天生就有的，而是慢慢揣摩、锻炼出来的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在读博过程中，你必须知道你的导师喜欢和擅长的课题，摸透审稿人喜欢的表述方法和结果。这都是你极好的锻炼机会，因为在读博的时候，允许失败；但是在职场上，失败的代价非常高。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.语言表达能力&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;span&gt;我在香港学习期间，与我相熟的刘云浩教授（现任清华大学软件学院院长）反复强调表达能力的重要性。作为一个科研工作者，你要写出能说服别人的论文；作为一个软件工程师，你要写出能体现你贡献的技术文档；作为一个项目负责人，你要写出好的项目申请书和总结报告，让公司知道你的价值。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;很多中国学生的语言表达能力很弱，这与外语水平并不是非常相关，而是由于没有经过写作的准确性和逻辑性训练。而读博写论文的过程就能培养逻辑表达能力。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.克服困难的能力&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;被别人拒绝很伤自尊。作为天之骄子的大学生，除了追求异性，恐怕很少遭受被人拒绝的经历。而残酷的职场里到处充满拒绝的情形。如何能够以正确的心态来面对这些事情，也是可以通过读博来训练的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当第一次投稿的论文被无情拒绝后，很多学生都非常愤怒和羞愧。甚至有不少聪明的学生在论文被拒几次之后，一气之下放弃了搞学术。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;其实，论文被拒稿原因并不一定是你的工作做得不好，很可能只是差了一点运气和工作的完整性。在职场里，求职和升职也可能会被拒绝，原因也并不一定是自身的不足。读博能帮助你认识和理解这些事情，并以平常心来面对挫折。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90940&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.14347826086956522&quot; data-w=&quot;230&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwn3ykaTYL0IT6ePeQsqiaPo1CvicW5ib5FnYPGBmFr253kN7wMGibc3etJw/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;什么人适合读博士&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.09737827715355805&quot; data-w=&quot;267&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwHB0y0RtUkaaAfnISvAGu0qqUmpPRVvz2qngM7eRic9OicDL0UicIicdiaIQ/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我认为读博士并不需要天生的特殊能力或者后天的条件。我们平常所说的能力，诸如编程、数学和英语，都只能叫做读博士的催化剂，而不是发生化学反应的“反应物”。所以，问题并不是“什么人适合读博士”，而是“什么人不适合读博士”。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.没有耐心的人不适合读博士&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;一个计算机专业的博士，需要在自己的研究方向上成为世界级的专家。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; 
&lt;p&gt;&lt;span&gt;没有人能在短时间内成为专家，即使我们看到有些博士生在第一年或第二年就发表了顶级论文，但他们其实并没有从总体上完全理解该方向，选题有可能是靠导师帮忙，甚至就是导师指定的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;大部分重要的工作，尤其是涉及系统的领域（比如操作系统、网络、分布式系统、体系结构、编程语言），并不是在短时间内就能做出成果的。一篇重要的系统方面的论文，通常需要花费近一年的时间去做实验与写作，而之前知识的积累则需要更久。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;文章发表之前的一段时间是最难熬的，大部分失败的博士生都是跌倒在了这个阶段。而能够熬过这个阶段的，不论之前的背景如何，大部分都能继续发表更多的论文。“耐心”是读博最重要的条件。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.不欣赏科学和技术的人不适合读博士&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;一个成功的计算机博士要懂得欣赏（或者至少愿意欣赏）他人发表的优秀成果，欣赏教科书上的经典设计，欣赏自己或者导师提出的重要问题和解决办法。如果你对科技完全不欣赏，那么是不可能做出好的科研成果的。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90940&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section readability=&quot;1&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.14347826086956522&quot; data-w=&quot;230&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwn3ykaTYL0IT6ePeQsqiaPo1CvicW5ib5FnYPGBmFr253kN7wMGibc3etJw/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; data-brushtype=&quot;text&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;读博士需要注意什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.09737827715355805&quot; data-w=&quot;267&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwHB0y0RtUkaaAfnISvAGu0qqUmpPRVvz2qngM7eRic9OicDL0UicIicdiaIQ/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.选择合适的导师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;导师与一个博士生的命运休戚相关。相同条件的两位博士生如果遇上不同的导师，可能会产生截然不同的命运。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;每个导师的背景不同，手上的资源也不同，而他愿意给学生的资源数量也不同。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;  假如某资深教授A的资源为10，某年轻教授B的资源为5。但是A教授有一个10个学生的庞大实验室，能给你的资源只有1；而B教授仅有你一个学生，给你的资源可以是5。显然B教授是更理想的选择。当然实际情况并不是如此简单。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;比如在美国，通常资深和年轻教授的资源差距不大。在中国，资源差别可能很大——当然目前这种差距在逐渐缩小。也有可能你在同门中表现突出，资深教授特别中意你，能给你8个资源。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;还有可能年轻教授长袖善舞，与许多同行和工业界的关系非常紧密，这时他的资源反而超过资深教授。因此如何选择导师，绝对不是看资深与否或者脾气好不好这么简单。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.选择合适的课题&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;同领域里可以选择的课题有天壤之别。有些课题没有研究价值。有些课题很难，即使认真做了，也不一定能做出好的成果。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我的建议是，博士生应该经常阅读顶级会议的论文。即使课题组历史上从没在顶级会议上发表过论文，即使导师不做要求，即使你不在顶级会议上发表论文也能毕业，你还是要去了解。否则研究容易和现实脱节，自然不会得到认可。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90940&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section readability=&quot;1&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.14347826086956522&quot; data-w=&quot;230&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwn3ykaTYL0IT6ePeQsqiaPo1CvicW5ib5FnYPGBmFr253kN7wMGibc3etJw/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; data-brushtype=&quot;text&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;博士之后的职业选择&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-width=&quot;100%&quot; class=&quot;&quot; data-ratio=&quot;0.09737827715355805&quot; data-w=&quot;267&quot; data-type=&quot;png&quot; width=&quot;100%&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrRiaCqiacb6FdRK3ib1ODnkNTwHB0y0RtUkaaAfnISvAGu0qqUmpPRVvz2qngM7eRic9OicDL0UicIicdiaIQ/0?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我认为读计算机专业的博士是一个“进可攻退可守”的选择。因为在计算机领域，学术界和产业界联系紧密，任何一行都离不开计算，读博士的职业选择相当多样化。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我在德州大学的博士师兄师姐们有的成为常青藤大学的终身教授，有的成为贝尔实验室的主任，有的成为谷歌公司的项目负责人，也有的成为初创公司的创始人。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我在香港科技大学的博士师兄师姐们有的成为摩根大通银行(JPMorgan Chase)的副总裁，有的成为国内名校的新贵，有的在公安部研究所担任重要职务。计算机专业的博士即便职业选择再不如意，也很少有为生计烦恼的，在其他专业的人看来这些人都是各行菁英。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;span&gt;如果你没有虚度光阴，在读博士过程中学到的知识在未来的职业生涯中都会发挥作用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果你的优势是写论文，你可以选择成为大学教授；如果你的优势是解决技术难题，你可以选择成为公司的研究员；如果你的优势是编程，你可以成为软件工程师；如果你的优势是建模，你可以加入金融公司等。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;计算机专业的知识都是实用性的，这是计算机专业一个得天独厚的优势。即使读博的过程非常不如意，也可以及时跳出“止损”，社会不会把你当成一个失败者，公司依旧非常欢迎博士退学者——因为他们也学到了技术。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果说一百零八位好汉在踏上梁山的那一刻就注定了此生命运坎坷，那么与之相反，读计算机专业的博士却可以保证你未来的生活，并且在此基础上会有多样性的选择来发挥你的优势。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;来源：科研大叔&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 07:57:56 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/DqJDoB6XQW</dc:identifier>
</item>
<item>
<title>从0到1 | 0基础\/转行如何用3个月搞定机器学习</title>
<link>http://www.jintiankansha.me/t/AW9sRRuKHM</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/AW9sRRuKHM</guid>
<description>&lt;p&gt;&lt;span&gt;写这篇文章的初衷是现在&lt;/span&gt;&lt;strong&gt;好多朋友都想了解如何入门/转行机器学习&lt;/strong&gt;&lt;span&gt;，搭上人工智能这列二十一世纪的快车。再加上这个问题每隔一阵子就会有人提及，因此想写篇文章来个一劳永逸。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文章的宗旨：&lt;/strong&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;指出学习中的一些误区&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;提供客观可行的学习表&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;给出进阶学习的建议&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;目标读者是：&lt;/strong&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;零基础，对人工智能感兴趣的读者&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;有基础，想将机器学习/数据分析和自己的本职工作相结合的朋友&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;在读的学生朋友&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;已工作，有其他编程基础想转人工智能的朋友&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;hr /&gt;&lt;h3&gt;学习中的一些误区&lt;/h3&gt;
&lt;h4&gt;1. 不要试图掌握所有相关的数学知识后再开始学习机器学习&lt;/h4&gt;
&lt;p&gt;一般人如果想要把这些知识都补全再开始机器学习往往需要很长时间，容易半途而废。&lt;strong&gt;而且这些知识是工具不是目的&lt;/strong&gt;，我们的目标又不是成为数学家。&lt;strong&gt;建议在机器学习的过程中哪里不会补哪里，这样更有目的性且耗时更低。&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;2. 不过多收集资料 &amp;amp; 分辨资料的时效性&lt;/h4&gt;
&lt;p&gt;机器学习的资料很多，动辄就有几百G的材料可以下载观看，很多朋友都有“收集癖”，其实也就是放那而已。 在入门期间，&lt;strong&gt;建议“小而精”的选择资料，找准适合你的，看得懂的开始行动&lt;/strong&gt;。&lt;/p&gt;
&lt;h4&gt;3. 多实践，多认识一些行业大咖 多交流&lt;/h4&gt;
&lt;p&gt;机器学习一些算法选择毫不夸张的讲就是在实践中摸索经验和技巧，不行动肯定是不行的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另外多跟一些行业大咖交流学习，有机会认识就一定要取得联系。&lt;/strong&gt;这波人身上或身边有很多的资源和人脉，尽可能挖掘一些，不管是学习途中的问题请教还是以后的工作机会，这些能用得上的尽量不要放过。&lt;/p&gt;
&lt;h3&gt;机器学习课程表&lt;/h3&gt;
&lt;table width=&quot;736&quot;&gt;&lt;tbody readability=&quot;9.5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Python基础&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt; &lt;strong&gt;数学基础&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;函数-类-面向对象&lt;br /&gt;容器、文件处理&lt;br /&gt;模块、标准库&lt;br /&gt;数据结构&lt;/td&gt;
&lt;td&gt;概率论&lt;br /&gt;统计学&lt;br /&gt;线性代数&lt;br /&gt;微积分&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Python数据科学&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;监督学习&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;NumPy&lt;br /&gt;SciPy&lt;br /&gt;Pandas&lt;br /&gt;Matplotlib&lt;br /&gt;Scikit-Learn&lt;/td&gt;
&lt;td&gt;决策树&lt;br /&gt;线性回归&lt;br /&gt;逻辑回归&lt;br /&gt;朴素贝叶斯&lt;br /&gt;支持向量机&lt;br /&gt;集成学习&lt;br /&gt;EM算法&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;非监督学习&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;半监督学习&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;K均值算法&lt;br /&gt;DBSCAN聚类&lt;br /&gt;主成分分析&lt;/td&gt;
&lt;td&gt;协同过滤&lt;br /&gt;标签传播&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;深度学习&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;深度学习框架&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;BP神经网络&lt;br /&gt;卷积神经网络&lt;br /&gt;循环神经网络&lt;br /&gt;递归神经网络&lt;br /&gt;深度神经网络&lt;/td&gt;
&lt;td&gt;TensorFlow&lt;br /&gt;MXNet&lt;br /&gt;Caffe2&lt;br /&gt;PaddlePaddle&lt;br /&gt;Keras&lt;br /&gt;PyTorch&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;自然语言处理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;项目实战&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;Tf-idf&lt;br /&gt;Word2Vec&lt;br /&gt;FastText&lt;/td&gt;
&lt;td&gt;垃圾邮件过滤&lt;br /&gt;车牌号码识别&lt;br /&gt;人脸识别&lt;br /&gt;金融智能决策系统&lt;br /&gt;自然语言情感分析&lt;br /&gt;招聘网反诈骗系统&lt;br /&gt;......&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;这个是一个比较系统的学习大纲，涉及到的知识面很多很广，&lt;strong&gt;期间的学习方法和技巧在这就凭这点文字肯定是讲不完&lt;/strong&gt;，也讲不明白。&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt; &lt;p&gt;所以鉴于此，我准备了几节公开课，&lt;strong&gt;&lt;span&gt;通过视频讲解、动画演示、应用场景、实习推荐等多方面&lt;/span&gt;&lt;/strong&gt;来跟大家补充完善。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;公开课的内容 (11月20号20:00开讲) ：&lt;/strong&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;完全0基础如何用3个月学会机器学习&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;朴素贝叶斯的垃圾邮件过滤实战&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;人脸识别(神经网络\OpenCV)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;金融智能决策系统(时间序列)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;自然语言情感分析机制&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;暂定这5个主题，后面持续更新，&lt;strong&gt;&lt;span&gt;全部免费、全部免费、全部免费&lt;/span&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大家可以加&lt;strong&gt;&lt;span&gt;微信：midu25&lt;/span&gt;&lt;/strong&gt; 或&lt;strong&gt;长按识别下面二维码&lt;/strong&gt;来咨询听课细节, 注明: &lt;strong&gt;&lt;span&gt;公开课&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1&quot; data-w=&quot;180&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/nKhpX5CHu2LN56iaHHW3KQs1d6r6d358ynzKZ3xBY6YW0lUZYb3KdFdticGhZ0FDwMic2DBAUeQIia1NgvNOiaWsxhA/0?wx_fmt=jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;我姓何，大家可以叫我 Pierre(皮尔)，2013年&lt;strong&gt;&lt;span&gt;中科院博士毕业&lt;/span&gt;&lt;/strong&gt;后去&lt;strong&gt;&lt;span&gt;法国国家科学院&lt;/span&gt;&lt;/strong&gt;工作了2年多，考虑到想为祖国的AI发展贡献自己的一份力量(虽然微不足道)，于16年回到国内，目前就职于北京某顶尖AI公司。&lt;/p&gt;
&lt;p&gt;在北京的朋友可以线下认识一下，&lt;strong&gt;&lt;span&gt;我这也有一些资源和渠道推荐给大家学习或实习或就业&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;深入研究，实践实战&lt;/h3&gt;
&lt;p&gt;恭喜你！如果你已经完成了上面的计划表，代表你已经有了相当的机器学习能力。&lt;/p&gt;
&lt;p&gt;接下来就要尽早接触实战，可以是多种形式，如实习、工作、科研、进实验室等等都可以。&lt;/p&gt;
&lt;p&gt;对于大部分已经工作的朋友来说，重新回到学校攻读学位并不现实，这个时候，你就可以试着把机器学习应用到你自己的工作当中。&lt;/p&gt;
&lt;p&gt;最后，&lt;strong&gt;不管选择什么方向最重要的就是独立思考的能力，和踏出第一步的勇气。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/nKhpX5CHu2LN56iaHHW3KQs1d6r6d358ynzKZ3xBY6YW0lUZYb3KdFdticGhZ0FDwMic2DBAUeQIia1NgvNOiaWsxhA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;180&quot; /&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 21 Nov 2017 07:57:57 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/AW9sRRuKHM</dc:identifier>
</item>
<item>
<title>位换记号、排列测试与状态图： 杂耍中的数学</title>
<link>http://www.jintiankansha.me/t/hsPhg4Z7Eq</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/hsPhg4Z7Eq</guid>
<description>&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;88744&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;&quot; readability=&quot;1&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;换记号、排列测试与状态图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 杂耍中的数学&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;
&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;88744&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section readability=&quot;1&quot;&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;来源&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;：Matrix67: The Aha Moments&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;编辑&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span&gt;：&lt;em&gt;&lt;span&gt;Gemini&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;校对：算数君&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在杂耍斗的圈子里，有两个响当当的大名你必须要知道：德国选手 Jochen Pfeiffer 目前世界排名第二，之前拿过 6 次搏击之夜的冠军；英国选手 Luke Burrage 目前世界排名第一，之前拿过 8 次搏击之夜的冠军。这一年的比赛中，两位老将均以完胜的成绩轻松进入 32 强，并在淘汰赛阶段过关斩将，最终成功在决赛场上相遇。最终，世界排名第二的 Jochen 以 5 比 4 的成绩击败了世界排名第一的 Luke ，夺得了又一个搏击之夜的冠军。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;杂耍斗是一种两人对战类的体育运动。比赛规则非常简单。每局比赛开始时，两名选手各自抛耍 3 个杂耍棒。任何一方都可以故意上前干扰另一方（但只能针对对方手中的或者空中的杂耍棒，不能针对对方的手臂和身体）。谁站到最后，谁就赢得该局。先赢 5 局者获得比赛的胜利。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;典型的一局比赛大致就像下面这样。这是 Jochen 和 Luke 的第 6 局比赛。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这场决赛确实打得精彩，出现了很多漂亮的瞬间。比如，在第 5 局比赛中， Jochen 做出了一个非常漂亮的防守动作。注意他在最后是如何改变自己的抛耍模式，在不违规的情况下（控制至少 3 个杂耍棒且任意时刻至少有一个杂耍棒在空中）抵挡住对手进攻的。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;第 7 局比赛出现了更有意思的局面： Luke 从对方手中抢来了一个杂耍棒，于是在对方满地捡棒子时，自己居然抛耍起了 4 个杂耍棒！&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;span&gt;不知道有没有人仔细看过视频后，发现了一个有趣的细节： Luke 虽然抛耍起了 4 个杂耍棒，但是他的动作好赖皮呀！用哪只手抛出的杂耍棒，就用哪只手接住，任何一个杂耍棒都没有在两手之间交替。这恐怕不能叫做杂耍吧！这是不是要算违规呀？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;还真不是。两只手各自独立地抛耍 2 个物体，确实是一种基本的杂耍模式。让我们来看三个演示动画，它们分别对应抛耍 3 个物体、抛耍 4 个物体和抛耍 5 个物体时最基本的杂耍模式：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.8789473684210526&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YhNu2DSviaT4DlklVsnCMXTc1b8f6j8FDhHNTibl9gp3DdAEEryJRyHpQ/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.9315789473684211&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Yuvz00K4An2BWNSCdsshtddq0UOneTOibFYh0rMsWPTOvibDU7OS9TrLw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.1026315789473684&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Yj1WulU7XBlpzyP4rPJiaSIo3bS9WJRN349q42tzBPBUJJLI8L4prXgg/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;按照大多数人的理解，在任何一种杂耍模式中，左右两只手一定是交替地、有节拍地不断抛耍小球。也就是说，右手接住某个小球并立即把它重新抛出，片刻后就该轮到左手接住某个小球并把它抛出，再过相同的时间后就又该轮到右手接住某个小球并把它抛出……今后，我们把某只手接住并抛出某个小球叫做一次“接抛”。接抛动作将会以右手、左手、右手、左手的顺序轮流完成。我们假设每次接抛动作都是瞬间完成的，小球停留在手中的时间忽略不计。接下来，我们还会把相邻两次接抛之间的时间叫做“一拍”。我们假设杂耍过程中，每一拍的时长都是相同的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上面这些杂耍模式之所以是“最基本的杂耍模式”，其实就是因为，每次接抛动作都是完全相同的。这意味着，每个小球每次都被抛到了相同的高度，都会在空中停留相同的拍数。如果每个小球都在空中停留 3 拍，结果会怎样呢？让我们画个图来分析一下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.17459016393442622&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YRiaRc5VJurTqLgJjXxlqLA0CNhgemm6J8Fjh3txmMMJiblHl8QbHJlibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1220&quot; width=&quot;610&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;图中，横坐标表示时间，纵坐标表示高度，弧线则表示随着时间的流逝，小球们的高度是如何变化的。每个小球都在空中停留了 3 拍，表现在图上就是，每条弧线都横跨了 3 个区间。由图可知，这里面实际上一共有 3 个小球（我们用 3 种不同的线条分别表示出了它们的轨迹）。此时，每个小球都会交替地来到左手和右手上。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;类似地，如果每个小球都在空中停留 5 拍，我们就需要 5 个小球，才能让双手不会闲下来。可以看到，在这种情况下，每个小球也都会交替地来到左手和右手上。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.23934426229508196&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YsSfiama91Dzq4V1nOb3Hp9f0dLUojf04nicX7fURbSUkaF04asmbQBWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1220&quot; width=&quot;610&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然而，如果每个小球都在空中停留 4 拍，情况就不一样了：对于任意一个固定的小球来说，不管它被哪只手扔了出去， 4 拍之后它将回到同一只手中。可以看到，此时对应着小球数为 4 的情况，也就是上面三个动画中的中间那个动画。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.20491803278688525&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YG3jibBorMDKYvWnNppSKwfXAQJ0BV6ia0v3wE7B3FibUHbKVpJJVMjiaYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1220&quot; width=&quot;610&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不妨用 n 来表示杂耍模式中的小球数。正因为在这种最基本的杂耍模式中， n 的奇偶性会导致如此大的区别，所以当 n 为奇数和 n 为偶数时，这种杂耍模式的俗名都是不一样的。当 n 为奇数时，所得的杂耍模式叫做“瀑泻”（cascade）；当 n 为偶数时，所得的杂耍模式叫做“喷泉”（fountain）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;难道当 n = 4 时，就没有什么左右手能互相传递小球的杂耍模式吗？倒也有，比方说用一种叫做“倾盆”（shower）的杂耍模式就行了。事实上，倾盆可以适用于一切的 n ，并且不管 n 是奇数还是偶数，每个小球的位置都会在左右手之间切换。不过，这种模式的问题是——它太水了，还是不像杂耍。让我们还是先来看看 n = 3, 4, 5 时倾盆的演示动画吧：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.6921052631578948&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YDbribKKA5WD2mEibuDiaSKuEsCRXsDwfg7siaea0hxL0mqlrGsnVQyjtQQ/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.9710526315789474&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YBpWmR3tLblBIfWY47icz84FWyqQ3oJbBUBcWW1x0RSULzR66aBdtchg/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.318421052631579&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Y9x6V50AicBicH9nBkX3AJGgU4beQzwlTvhtADtib7ia9IP82RhvDVn8FEA/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;也就是说，左手接住并水平抛出某个小球，右手立即接到该球并把它抛到更高的地方；然后左手接住并水平抛出下一个小球，右手立即接到该球并把它抛到更高的地方……倾盆也算是非常基本的一种杂耍模式了，或许你自己没事儿时也偷偷尝试过。搜索与“杂耍”有关的插图插画，画面内容基本上都是一个人把一堆小球从一只手扔到另一只手，所有小球在空中大致排成一个半圆。这表现的其实就是倾盆这种杂耍模式。不过，和瀑泻比起来，倾盆的效果确实差了一些，少了点“左右开弓”的感觉。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;说了半天，当 n = 4 时，究竟有没有什么看起来非常爽，观赏性非常强的玩法呢？有。来看看下面三种 n = 4 时的杂耍模式：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.3236842105263158&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YXkS8YIfEFMJcyEJO6qVnicG8B3FCCX8ZoVvMy4S1e0Qn2BhGOicuMSkw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.3605263157894736&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YDOWUyzYWFtrX4IAicZ1icGNNcbk2Yibu87ic6v8rjKxjGCVichsb0NyHmPA/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.1526315789473685&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YZItak99fwZias7mEIFXFqmV0QibQm2cdVLDWa8k5QTYI85Fjr9oVjHlQ/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;看了上面这三个动画，你有何感想？我估计，你的第一反应会是：“真牛逼，没想到这背后的水这么深！看着就觉得里面有好多数学原理！”接下来，你就该观察各种细节，或者该冒出各种怪异的想法了：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;7&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;“我操，这些动画你丫都是拿什么软件做的呀？”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;“你这网站上写的东西今后肯定是要出书的吧？哼哼，我看到时候这篇文章的动画你怎么处理！”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;“你说这些新的杂耍模式都是谁想出来的，都是怎么想出来的呀？”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;“这三种杂耍模式真的是三种不同的杂耍模式吗？让我看看啊……哦，是，好像确实是不同的。”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;“这三种杂耍模式的循环长度似乎是不一样的，最左边那个的循环长度明显要短得多。”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;“其实中间那个杂耍模式中，右手还是出现了自己扔给自己的情况。哦，左手也出现了这种情况。咦，等等，好像这个杂耍模式中，左右手的动作是完全对称的！”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;“最右边那个图我好像看出些名堂来了。它就是一个抛得更高的 3 球瀑泻，插进去一个简单的水平抛掷。”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span&gt;……&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;好吧，我先专门说一下这些动画是怎么变出来的吧，不然大家肯定又会问。以前每篇文章的图片和动画都是我用 Mathematica 做的，但这篇文章还真不是。这篇文章中所有杂耍模式的演示动画都是用一个叫做 &lt;/span&gt;&lt;span&gt;Juggling Lab&lt;/span&gt;&lt;span&gt; 的开源软件生成的（然后用 ImageMagick 调了一下颜色和线条的粗细）。这个软件在杂耍界里非常有名，它可以生成各种杂耍模式的 GIF 演示动画，极大地方便了人们的交流。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这篇文章里有这么多动画，以后真的出书时该怎么办呢？那还有啥办法，到时候出书时只能不用这篇文章了呗！所以，大家一定要体会到科技的进步。现在，向其他人展示某种杂耍模式，只需要发个 GIF 动画就行了；但在只有纸媒的时代，这将会变得非常非常困难。《杂耍者世界》（Juggler’s World）是杂耍界里颇有影响力的杂志。杂志读者曾经问道：为什么不在杂志上教大家一些新的杂耍技巧呢？于是，在 1985 年第 2 期的杂志中，编辑们用一组照片辅以数字和箭头，详细讲解了一个抛耍 4 球的新玩法。自然，效果非常糟糕，至少我看了半天都没看懂。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;610&quot; class=&quot;&quot; data-type=&quot;png&quot; data-ratio=&quot;0.3061023622047244&quot; data-w=&quot;1016&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YqWGXysEAxkSeXoXt0w9Y2F9bhDTicPiaUQTdnmvMrOOictGvNcX1ia9EBA/0?wx_fmt=png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;就好像跳水中“5253B”表示“向后翻腾两周半转体一周半屈体”一样，要是我们有一套记号，或者说一种“语法”，可以简单有效地表示出各种杂耍模式就好了。人们不但可以借助它进行交流，或许还能通过摆弄这些符号，寻找新的杂耍模式。杂耍模式的很多特征，或许也会反映在这些符号当中。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt;  刚才对瀑泻和喷泉的分析，让我们自然地想到了这样一种方案：依次记下每次扔出的球会在空中停留几拍，直到完整地记下一个循环节为止。刚才我们展示了三种非常高级的 4 球玩法，让我们仔细分析一下中间那种玩法。不妨从右手扔出最高的那一次球开始算起：这次扔出的球（由右手扔出）要过 5 下才会被接住，我们就用数字 5 来标记；下次扔出的球（由左手扔出）要过 3 下才会被接住，我们就用数字 3 来标记；第三次扔出的球（由右手扔出）要过 4 下才会被接住，我们就用数字 4 来标记……如果把小球的轨迹连同这些数字标记一并画出，大概就是这样：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;610&quot; class=&quot;&quot; data-type=&quot;png&quot; data-ratio=&quot;0.2819672131147541&quot; data-w=&quot;1220&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YCOjRmmSANQicgMWWVCKn6hFbSIic73b7Qtxm38adJHFFibsV3BY1UDTPw/0?wx_fmt=png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;杂耍模式能永远持续下去，肯定是因为它在不停地循环。在这个例子中，我们记下的数字形成了 534 循环。我们就用 534 来表示这种杂耍模式。这就是杂耍界最通用的杂耍模式记号——“位换记号”（siteswap）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;位换记号最早是由谁想出来的，现在已经很难考证了。目前一般认为，位换记号起源于 1985 年左右，它的发明和传播，至少与以下三组人马有着密切的关系：来自加利福尼亚州圣克鲁斯的 Paul Klimek ，来自加利福尼亚理工学院的 Bruce Tiemann 和 Bengt Magnusson ，以及来自英国剑桥的 Michael Day 、Colin Wright 和 Adam Chalcraft 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对于杂耍表演者来说，位换记号是非常直观的，因为它记录的本质上就是杂耍时的一个个接抛动作：数字 1 就表示，我应该把刚接到的球近乎水平地扔向另一只手，让另一只手在下一拍立即接到它；数字 2 就表示，我应该把刚接到的球竖直向上扔一点，使得在另一只手完成动作后，正好轮到这只手重新把它接住（实际表演时，人们通常会选择直接把这个小球握在手中停留 2 拍，因为在此期间反正这只手也不需要干别的）；数字 3 就表示，我应该把刚接到的球扔得更高一些，扔出一个抛物线，使得 3 拍之后另一只手正好能接住它……总之，数字越大，就意味着我应该把小球越得越高，并且偶数意味着应该竖直向上扔，奇数意味着应该往另一只手的方向扔。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;事实上，位换记号只告诉了你扔出的球需要多久之后回到手中，而并没有告诉你这个球具体应该怎么扔出去。你可以从胯下扔上来，从身体背后扔过来，扔头上顶一会儿，扔地上反弹回来……只要它能在正确的时候被接住就行了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意，一个杂耍模式的位换记号往往不是唯一的。我们可以对位换记号中的数字进行“循环移位”（cyclic shift），例如把 534 变为 345 和 453 ，它们刻画的显然是同一个杂耍模式。此时，人们通常会选择使用字典序最大的那个记法（也就是说，使用第一位数字最大的记法，如果有多个第一位数字最大的，则使用它们之中第二位数字最大的记法，等等）。另外，人们通常假设，位换记号中不会有大于 9 的数字出现，因为把小球扔这么高是不太现实的。这样的话，每个杂耍模式的位换记号都是一串唯一确定并且没有歧义的数字了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们刚才介绍的那些杂耍模式，用位换记号都该怎么记呢？ 3 球瀑泻、 4 球喷泉、 5 球瀑泻的位换记号分别是 3 、 4 、 5 。果然，它们是最基本的杂耍模式。 3 球倾盆、 4 球倾盆、 5 球倾盆的位换记号分别是 51 、 71 、 91 。这也很容易看出来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后我们展示了三种 4 球玩法，其位换记号从左至右依次为 53 、 534 、 5551 。之前观察到的现象和规律，都可以从这几个位换记号中读出来。左边那个的循环长度确实是最短的，因为它的位换记号的长度就是最短的。整个杂耍模式其实就是两个动作不断重复，右手做个 5 ，左手做个 3 ，右手再做个 5 ，左手再做个 3 。中间那个的位换记号里有偶数，因此它里面就会出现“自己扔给自己”的情况。同时，它的动作是左右对称的，因为它的位换记号的长度为奇数。第一轮的 534 分别对应右、左、右，第二轮的 534 就分别对应左、右、左了。右边那个本质上就是“一个抛得更高的 3 球瀑泻，插进去一个简单的水平抛掷”，它的动作要领显然就是三个相同的大动作加上一个小动作，这不正是 5551 的意思吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不知道大家有没有发现， 53 、 534 、 5551 这几串数字有一个共同特征：数字串里所有数字的平均数都是 4 。事实上，这个规律对于其他几个杂耍模式的位换记号也都成立：位换记号中所有数字的平均数，等于这个杂耍模式中小球的个数。这就是位换记号理论中最著名的一个定理——平均数定理（the average theorem）。这个定理为什么是对的呢？我们介绍一种非常直观的证明方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每个小球每次在空中停留的时间，完全是我的手在抛出它时给予它的。这就好比每次抛出小球都是在给小球加油一样。如果位换记号里有一个数字 4，就表示此时抛出小球的动作相当于给小球加了 4 个单位的油，小球也就会在空中停留 4 个单位的时间，直到最后没油了落回手中，继续接受下一次加油。每个循环刚开始的时候，有些空中的小球消耗的还是上一个循环里加的油；每个循环快结束时，给小球加的油也有一部分会放到下个循环去用。但是，既然这些循环能够一个接一个地无限持续下去，既不会出现剩余的油越积越多的情况，也不会出现油慢慢就不够了的情况，这就说明每个循环里给小球加的油，一定都恰好等于这个循环里所有小球在空中停留的时间之和。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;假设某个杂耍模式有 n 个小球，其位换记号的长度为 l 。在每个循环里，我的手一共给小球加了多少油呢？显然，这等于位换记号里的所有数字之和。在每个循环里，所有小球在空中总共停留了多少时间呢？由于我们有 n 个小球，每个小球都在空中停留了 l 个单位的时间，所以答案就是 n · l 。于是我们得到，位换记号里的所有数字之和等于 n · l ，即 n 等于位换记号里的所有数字之和除以 l 。这正是平均数定理的内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;平均数定理有一个重要的推论：瞎写一串数字，不见得是一个合法的位换记号。比方说，如果所有数字的平均数根本就不是整数，那么这串数字就必然不是一个合法的位换记号了。然而，麻烦的是，即使所有数字的平均数是个整数，这串数字也不见得是一个合法的位换记号。比方说， 6114 这串数字满足平均数条件，但它就不是一个合法的位换记号。在 61146114… 中，第一次抛出的小球和第六次抛出的小球会“撞车”，使得杂耍模式无法持续下去。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YyARCF7w1lDiajYCtaTGF5oMFcibsnM4ibv6GYb91wxQk5Sqfe9Um2kr4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot; width=&quot;340&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以，位换记号可以很好地描述杂耍模式，但要想利用位换记号创造新的杂耍模式，还得想想办法才行。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不妨让我们换个思路：能否对已有的位换记号进行改造，从而得出新的杂耍模式呢？考虑之前提过的 534 模式。现在，如果把 534 改成 633 ，会出现什么有意思的结果？你会发现，整个杂耍模式的循环节长度仍然是 3 ，并且在每一个循环节中，第一次抛出的小球和第三次抛出的小球都会交换落点。所以，原来的位换记号不会出现撞车的情况，新的位换记号也不会出现撞车的情况。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.26296296296296295&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Y6hNETOQiba4D7pdNzZbZQluWEVagScu4NMm5y82icZewxgunzOWqpypQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; width=&quot;540&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们预言： 633 是一种新的合法的位换记号，对应于一种全新的杂耍模式！事实上确实如此：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;2.5166666666666666&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YOfWxdcZdgcXWNKj0ohQYJXvopS31tCsQZrgibzQGoCdoDEU4JWp0oBg/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;240&quot; width=&quot;120&quot;/&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3145833333333333&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YCMiazaePxz0s0DMicR9UEmwQ6qk29hTJe8kMRc2MsuiamP1W61rn9IgOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot; width=&quot;480&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一般地，如果位换记号中有 a 、 b 两个数字，它们相隔 d 拍的距离，那么把 a 和 b 分别换成什么数字，就能交换它们的落点呢？看看下图，你就知道了：我们应该把 a 换成 b + d ，把 b 换成 a – d 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.36944444444444446&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YgicKMxVpQnPr5sia9drHB3fdp7vDh7GfYybSJ1qspJu9xP52n128qcXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; width=&quot;540&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在数字串中，按此规律修改某两个数字的操作就叫做一次“位换”（site swap）。对合法的位换记号进行位换操作，得到的仍然是合法的位换记号。其实，“位换记号”这个词就是这么来的——它是一种支持位换操作的记号。注意，每次位换既不会改变位换记号的长度，也不会改变位换记号中的所有数字之和。因此，位换操作不会改变所有数字的平均数。这说明，用位换操作得到的新杂耍模式，与原杂耍模式的小球数是相同的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;位换操作很强大。让我们再给大家展示几个例子。如果你愿意，你甚至可以对 3 球瀑泻进行位换操作。 3 球瀑泻的位换记号是 3 ，里面就只有一个数字，这可怎么做位换呢？没关系，多补几个循环节就行了。比方说，把 3 先扩写成 333 ，然后对第一个数字和第三个数字进行位换，于是得到 531 。那么， 531 就是一个新的杂耍模式。如果我们刚才选择把 3 扩写成 3333 ，但还是对第一个和第三个数字进行位换，得到的当然就是 5313 。类似地，把 3 扩写成 33333 ，位换后还能变出 53133 来……于是，我们知道了， 531, 5313, 53133, 531333, … 都是合法的位换记号。下面三个动画展示的分别是 531 、 5313 和 53133 的玩法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.4078947368421053&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YycMvo8pZz7uiaFgpmsjXcibyibn8oruFPuTaU1IS5sESCbCicPicqzaiakqQ/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.4&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YV8q2mJuByq6EGSJySuibTHPFbf3lfntdbK8qykQN64yLcBWJiaQ3zJOw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.4289473684210525&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Y2Mm10ncjpT76ruXhKZj8xsPtQUkGTj4VOajh5AAutvQyxeJCjmLiaZA/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们还可以对位换之后的结果再做位换。比方说，对 531 的第一个和第二个数字进行位换，于是得到 441 。这就又是一种新的杂耍模式！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.2708333333333333&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Yuds1Wc1zXprG0Ecp4MYltPc1bMickmCWTOpJicLa3Ne9saPUpDwgrsicA/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;240&quot; width=&quot;120&quot;/&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.24479166666666666&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Y3kwibVhn28sjJaT2WYdd64boDzdFjUicsxialRXbyYxVic2ic7VO2pQ84Rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot; width=&quot;480&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;441 模式可以说是人们利用位换记号得到的最大的成果之一。以前，人们凭借想象，发明创造了各种各样的杂耍模式，并给它们起了各种各样的名字。但在位换记号提出之前，由于缺乏系统的研究工具，很多简单的玩法都没被发现。在位换记号理论的帮助下，人们找到了很多新的杂耍模式， 441 模式就是最经典的例子之一。也正因为这样， 441 模式就不再有什么别的名字了。杂耍界的人们直接管它叫 441 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们刚才是用 3 → 333 → 531 → 441 的办法生成的 441 。其实，生成 441 还有很多别的路子。比方说，还是先把 3 扩写成 333 ；接下来，对 333 的第一位和第二位进行位换，于是得到 423 ；循环移位，可以把 423 变成 342 ；再对 342 的第一位和第三位进行位换，就可以得到 441 了。当然，变出 441 并不需要那么复杂，其实 423 能直接变成 441 。这里我们只是想告诉大家，位换操作还可以和循环移位配合着使用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1993 年， Allen Knutson 证明了一个非常漂亮的结论：先对某个单数字的位换记号进行扩写，再通过适当的循环移位和位换操作，就能变出一切合法的位换记号！由于循环移位和位换操作都不会改变位换记号的长度和平均数，因此为了得到位换记号长度为 l 的 n 球玩法，我们必须先把单个数字 n 扩写成 l 个数字 n 。所以，接下来我们只需要说明，任何一个位换记号长度为 l 的 n 球玩法，都能从 l 个数字 n 出发，通过循环移位和位换操作得出。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;span&gt;考虑这样一个位换记号处理算法：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;如果数字串里的所有数字都相同，则输出该数字串，算法结束&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;使用循环移位操作，将最大数字挪至第一位，同时使得第二位数字和第一位数字不同&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;对第一位数字和第二位数字进行位换操作，然后跳转到第 1 步&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;把任意一个合法的、长度为 l 的、平均数为 n 的位换记号输入该算法，都会经过一系列的循环移位和位换操作，最终变成 l 个数字 n 。注意到，如果数字串 A 循环移位后能变成数字串 B ，数字串 B 显然也能通过循环移位变成数字串 A 。另外，容易验证，如果对数字串 A 做一次位换后得到数字串 B ，则在同样的位置上对数字串 B 做一次位换，又会变回成数字串 A 。既然每个合法的位换记号都能变成 l 个数字 n ，那么从 l 个数字 n 出发，也就能反过来变出每个合法的位换记号了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;等等，这也太简单了吧，好像我们漏掉了什么吧？嗯，是的。我们还得证明：把任意一个合法的位换记号输入该算法，该算法在有限步之后一定会终止。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先注意到，由于合法的位换记号经过循环移位和位换操作后仍然是合法的，因此把任意一个合法的位换记号输入进去，算法生成的自始至终都是合法的位换记号。现在，假设在做第 3 步时，数字串的头两个数字是 a 和 b 。根据之前的算法步骤可知， a 是整个数字串中最大的数，并且 a 与 b 不相等。换句话说， a 比 b 至少大 1 。事实上， a 不可能比 b 刚好大 1 ，否则这两个地方扔出的小球会撞车，这就不是一个合法的位换记号了。因此， a 比 b 至少大 2 。第 3 步之后， a 将会变成 b + 1 ， b 将会变成 a – 1 。这说明，每过一遍第 3 步，数字串中都会有某个最大数减小了 1 ，并且不会因此而引入新的最大数。如果输入的位换记号中所有数字的平均数是 n ，那么所有数字的平均数就一直是 n 。等最大数不断减小，一直减小到 n 了，那么所有的数字都是 n 了，算法也就终止了。到此为止，我们就完整地证明了 Allen Knutson 的结论。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这个结论有一个非常强大的推论：对于任意一个合法的、长度为 l 的位换记号，将它的各个数字分别与 1, 2, 3, …, l 对应相加，所得的 l 个结果除以 l 的余数一定是各不相同的。由于除以 l 的余数正好也就只有 0, 1, 2, …, l – 1 这 l 种可能，因此上述推论还可以重新叙述为：按上述步骤做加法并取余，所得的 l 个结果正好构成 0, 1, 2, …, l – 1 的一个排列。举个例子，在 441 模式中， 4, 4, 1 依次与 1, 2, 3 相加，得到的结果为 5, 6, 4 ，它们除以 3 的余数分别是 2, 0, 1 ，正好是 0, 1, 2 的一个排列。再举个例子，之前我们曾经提到过 53133 模式，其中 5, 3, 1, 3, 3 依次与 1, 2, 3, 4, 5 相加，得到 6, 5, 4, 7, 8 ，它们除以 5 的余数分别为 1, 0, 4, 2, 3 ，正好是 0, 1, 2, 3, 4 的一个排列。我们就说， 441 和 53133 都能通过“排列测试”（permutation test）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为什么一切合法的位换记号都能通过排列测试呢？首先，如果位换记号中所有数字都相同，那它显然能通过排列测试。既然由此出发，通过循环移位和位换操作能得出其他一切合法的位换记号，因此我们只需要说明：能通过排列测试的数字串，经过循环移位和位换操作后，也照样能通过排列测试。事实正是如此。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先说循环移位。将循环移位过的数字串与 1, 2, 3, …, l 对应相加，本质上就相当于是将数字串与循环移位过的 1, 2, 3, …, l 对应相加；而后者会使得所有的余数都循环移动一下，所以如果原来可以形成排列，那么现在依然可以形成排列。比方说，假设某个数字串原本是 a, b, c, d, e ；循环移位后，数字串变成了 c, d, e, a, b 。原来， a, b, c, d, e 应该与 1, 2, 3, 4, 5 对应相加；现在， a, b, c, d, e 就应该与 4, 5, 1, 2, 3 对应相加。把 a + 1 变成 a + 4 之后，除以 5 的余数会怎么变呢？不难看出，如果原来余数是 0 ，现在就会变成 3 ；如果原来余数是 1 ，现在就会变成 4 ； 2 则会变成 0 ， 3 则会变成 1 ， 4 则会变成 2 。换句话说，余数会按照 (0, 1, 2, 3, 4) → (3, 4, 0, 1, 2) 的规律发生变化。然而，把 b + 2 变成 b + 5 ，把 c + 3 变成 c + 1 ，把 d + 4 变成 d + 2 ，把 e + 5 变成 e + 3 ，除以 5 的余数都会按照这样的规律发生变化。所以，如果原来的 5 个余数既无重复又无遗漏地包含了 0, 1, 2, 3, 4 ，按照 (0, 1, 2, 3, 4) → (3, 4, 0, 1, 2) 的规律整体一变后，新的 5 个余数仍然既无重复又无遗漏地包含了 0, 1, 2, 3, 4 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后说位换。假设我们对相隔 d 拍的两个数字 a 、 b 进行位换。如果数字 a 本来应该与 i 相加，那么数字 b 本来就应该与 i + d 相加。相加之后的结果是 a + i 和 b + i + d 。位换后，数字 a 变成了 b + d ，数字 b 变成了 a – d 。前者还是要与 i 相加，后者还是要与 i + d 的相加。相加之后的结果就是 b + d + i 和 a – d + i + d = a + i 。看出来了吧！在位换前和位换后，相加之后的结果没变，只不过颠倒了而已。自然，除以 l 的余数也不会变，只是颠倒了而已。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以，我们就证明了：一切合法的位换记号都能通过排列测试。反过来，无法通过排列测试的，必然就不是合法的位换记号了。排列测试比我们之前说过的平均数定理检验法更为强大。之前我们说过， 6114 不是一个合法的位换记号，但用平均数定理却无法检验出来。不过，如果换用排列测试来检验，就能立即见效了。 6, 1, 1, 4 分别加 1, 2, 3, 4 可得 7, 3, 4, 8 ，它们除以 4 的余数是 3, 3, 0, 0 。这说明， 6114 不能通过排列测试，它也就不是合法的位换记号了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有没有什么数字串，它连排列测试都通得过，但仍然不是合法的位换记号呢？答案是否定的。我们可以证明，能通过排列测试的，也一定都是合法的位换记号。这背后的道理其实很简单。不妨让我们以 l = 4 为例。假设这个长度为 4 的数字串是 a, b, c, d 。如果把数字 a 所在的位置看作第 1 次接抛，那么 a + 1, b + 2, c + 3, d + 4 分别就是这 4 次接抛的落点位置。如果这个数字串能通过排列测试，就说明这 4 个落点正好是某个循环节中的第 1 个点，某个循环节中的第 2 个点，某个循环节中的第 3 个点，以及某个循环节中的第 4 个点（不管是什么顺序）。也就是说，这 4 个落点正好涵盖了循环节中的 4 个不同的地方。把这部分示意图平铺开来，你会发现，每个点都将会恰好有一接和一抛。这就是一个正确的杂耍模式了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.331&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YxniaomiaIxrDOLicG9fjFGQCvO7V2QFpFyXRWCxic3IQlSgoX0JYGdz7qg/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1000&quot; width=&quot;500&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是，我们证明了这样一个非常终极的结论：某个数字串是一个合法的位换记号，当且仅当它能通过排列测试！这又会产生很多有趣的推论。比方说，如果一个数字串能通过排列测试，那么让每个数字都增加或者减小一个相同的常数，得到的数字串显然仍能通过排列测试。因此，给一个位换记号中的每个数字都增加或者减小相同的量，就会得出新的杂耍模式。有的地方把这种改造位换记号的操作叫做“垂直移位”（vertical shift）。例如，对 441 进行垂直移位，可以依次得到 552 、 663 、 774 等，它们都是新的杂耍模式。下面三个动画分别是 552 、 663 和 774 的杂耍模式演示动画。左边那个动画是这篇文章中第一次出现的位换记号里含有数字 2 的情况。之前我们说过，在遇到数字 2 时，表演者通常会选择直接把这个小球握在手中停留 2 拍。另外，可以看到，和之前那些位换记号变换法不同的是，垂直移位可以改变杂耍模式中的小球数。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.9710526315789474&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YwQvR0mCgrVVPdibFtMMKaretFmcKykNONs59bcSM2bvWdZYXMqic19ww/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.3657894736842104&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YbQoIQjJU36vmicqNydko0pSzRQG8Tc4Sony7fMjnbX4IibNzK6NudjeA/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.4526315789473685&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YZQ3gmbxPbNxbB9zlg78ByFJ1BFXd00YXTICw7lzic2G0acD0iceH0GYw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;380&quot; width=&quot;190&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1995 年， Martin Probert 发明了一种生成新杂耍模式的傻瓜方法，其原理也可以用排列测试来解释。如果你想要一个循环节长度为 l 、小球数为 n 的新杂耍模式，你就可以先画一个 l × l 的方阵，然后在第 i 行第 j 列填入 n + i – j 的值。这相当于是在 l × l 的方阵的最左上角填一个 n ，然后按照向右走就减 1 ，向下走就加 1 的规律填充整个方阵。例如，我想要生成一个循环节长度为 5 、小球数为 4 的新杂耍模式，我画出的方阵就应该如左图所示：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4340425531914894&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YHicNl9fVbQlDribQUQbibVj5hJEeUmw09c8KbvVthFwDm4icpicwzlORW0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot; width=&quot;470&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现在，从中任意选出 5 个方格，但要保证任意两个方格既不同行也不同列，如右图所示。接下来，从左至右读出各列的数字，于是得到 45641 。那么， 45641 就是一个合法的位换记号，并且它的长度为 l ，平均数为 n 。习惯上，我们会把 45641 写作 64145 ，以符合字典序最大的原则。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;2.0875&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YF8AiaepwpXL0wjIlAdm9JUoXpc3elm5pdNf6WwFP0BxHOWG3lRiagFicA/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;240&quot; width=&quot;120&quot;/&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.32083333333333336&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YibelIWl1brgibvTOpNgD5icWYhY3AB7wbMYpyvs49au0vtUlXnBlepy2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot; width=&quot;480&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了证明如此得到的数字串一定是合法的位换记号，我们只需要说明，如此得到的数字串一定能通过排列测试。也就是说，我们只需要说明，各列所圈的数字分别 +1, +2, …, +l ，除以 l 的余数正好取遍 0, 1, 2, …, l – 1 。为了给第 j 列所圈的数字 +j ，我们可以保持圆圈的位置不变，把这一列数整体循环上移 j 个单位，圆圈里的数就自动地 +j 了。当然，有时也不是真的 +j 了，比如把上图中的第 4 列循环上移 4 个单位，圆圈里的数会从 4 变成 3 ，而不是 8 。不过，这没关系，因为最后我们只关心它除以 l 的余数，只要它除以 l 的余数是对的就行了。然而，如果各列分别循环上移 1, 2, …, l 个单位后，方阵里的数除以 l 的余数就会形成这样的情况：一行全是 0 ，一行全是 1 ，一行全是 2 ，等等，一直到一行全是 l – 1 。所以，这些互不同行的圆圈，圈出的数除以 l 的余数正好取遍 0, 1, 2, …, l – 1 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;另外，我们选的这 l 个数的总和，相当于是 l 个 n 之和，再以某种顺序加上 1, 2, 3, …, l ，再以某种顺序减去 1, 2, 3, …, l 。因此，我们选的这 l 个数的平均数正好就是 n 。所以，利用 Martin Probert 的傻瓜方法，确实能够得到一个循环节长度为 l 、小球数为 n 的杂耍模式。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实，如果知道了排列测试理论，我们还有更直接的办法来生成新的杂耍模式。对于任意正整数 l ，将 0, 1, 2, …, l – 1 随意地排成一排，各项依次减去 1, 2, 3, …, l ，然后每个地方都可以选择再加上任意一个 l 的整倍数（其中小于等于 0 的地方必须加到变正才行），如此得到的一定是合法的位换记号。枚举所有的可能性，我们就能得到所有合法的位换记号（可能会有重复）！可以说，我们终于有了一套描述、分析、生成杂耍模式的全套解决方案。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当然，位换记号并不能解决杂耍表演者会遇到的全部问题。试想，如果你玩了一段时间的 3 球瀑泻，想换一种 3 球玩法，但却不想停下重来。这就引出了一个问题：从 3 球瀑泻出发，能无缝切换到哪些其他的 3 球玩法，又该如何去切换呢？为了解决这类问题，人们发明了另一种强大的杂耍模式分析工具——状态图（state graph）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;让我们假设手上的小球永远是 3 个，并且位换记号涉及的数字最高到 5 （即一个小球最多在空中停留 5 拍）。我们可以认为，任何一个接抛动作完成的瞬间，所有 3 个小球就都在空中了；其中 1 个小球刚被抛起，其余小球则早已抛出，正处于上升或者下降的过程中。不管怎样，从此刻算起， 3 个小球落回手中所需要的拍数一定各不相同，并且都不会超过 5 。我们可以用一个 5 位 01 串来表示接下来这 5 拍的“占用”情况，数字 1 表示有小球会落回来，数字 0 表示没有小球会落回来。例如，如果完成某个接抛动作后， 3 个小球分别将在第 1 、 2 、 5 拍之后落回手中，我们就用 11001 来表示此时的状态。可以看出，在 3 球瀑泻中，完成任何一个接抛动作后，状态都是 11100 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;假设有 x 和 y 两个 01 串。把 x 的第一位去掉，再在最后面添一个数字 0 。如果此时 x 的第 h 位正好是数字 0 ，并且把它改为 1 之后，整个 01 串正好就变成 y 了，我们就说 x 可以通过动作 h 转换为 y 。它的直观意义就是，如果当前状态为 x ，那么下一个接抛动作可以是 h ，该动作完成后状态就会变成 y 。例如， 11100 可以通过动作 4 转换为 11010 ，也可以通过动作 5 转换为 11001 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5 位 01 串中有 3 个数字 1 ，这一共有 C(5, 3) = 10 种可能性。让我们在纸上把这 10 种可能性全部写下来。如果某种状态能通过某个动作转换为另一种状态，我们就从前一种状态出发，画一根箭头指向后一种状态，并在路上标出动作的数值。注意，一个状态有可能转换为它本身，例如 11100 能通过动作 3 转换为它本身。我们就画一个箭头，从它出发，绕个小圈，指向它自己。另外，你会发现，以数字 0 开头的状态无法转移到任何其他状态，否则数字 1 的个数就不对了；更直观的说法则是，到了这种状态显然必死，因为下一拍就没有小球接了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7376146788990826&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YCGOWcuYg4rcZh1SQ4bWHfTxZ49doR86uWb4mmvVCE3F21kZOsT31OQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1090&quot; width=&quot;545&quot;/&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;p&gt;&lt;span&gt;所以，只要沿着箭头走，路上经过的数字就自动地组成了合法的动作序列！而一个合法的位换记号，比如说 3 、 51 、 441 、 531 、 5313 等等，其实就是这个图上的回路！杂耍模式之间的衔接问题，也就解决了：我们只需要看看，能否从前一个回路的某个节点出发，沿着箭头走到另一个回路里去。比方说，你本来玩着 3 球瀑泻，突然想玩 3 球倾盆了。于是，你可以用动作 4 进行衔接，按照 33…345151…51 的规律抛球。什么时候你又想回到 3 球瀑泻的玩法，你就可以用动作 2 进行衔接，按照 5151…51233…3 的规律抛球。当然，你也可以用动作 41 进行衔接，按照 5151…514133…3 的规律抛球。下图所示的就是位换记号 333451515141 （这次我们有意没按字典序最大原则对其进行重写）及其演示动画，它就是由 3 球瀑泻和 3 球倾盆组成的大循环，中间分别以 4 和 41 衔接。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.6541666666666666&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6Y385P7YhCX2mTVy1jpRwiaK8M6GgNUx6kkGDCLevibe0iaEL7aDUSnVeYw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;240&quot; width=&quot;120&quot;/&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.2833333333333333&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YD4UGbpW9dHFCFknCWtK4Ban2icVsUIQicDEiadbkPWqaK6Ty2rUmPkyNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot; width=&quot;480&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用这种方法，我们可以搞出像 333451515141 这样很长很长，很复杂很复杂，却没啥实质意义的位换记号——它仅仅是由一些更基本的位换记号拼成的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在状态图中，如果一条回路经过了某个重复的节点，我们就可以把它视作两个以该节点为公共节点的小回路。如果某个小回路仍然经过了重复的节点，我们还可以继续把它分解成两个更小的回路，直到每个回路都被分到不可再分（即都分到不再经过重复的节点）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果一个位换记号在状态图中不会经过重复的状态，我们就说这是一个“素位换记号”（prime siteswap）。根据上述推理，如果一个位换记号不是素位换记号，那么它一定能看作是由若干个素位换记号组合而成的。例如， 333451515141 就是由三个 3 、三个 51 和一个 441 组成的。我们前面提到过 531333…33 的模式，其实也就是由一个 531 和任意多个 3 组成的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;正如化学元素按一定规律适当组合后，可以得出千千万万的物质一样，素位换记号按一定规律适当组合后，也会得出千千万万的杂耍模式。也就是说，素位换记号对应着杂耍模式的基本组成单元。从这个意义上说，寻找所有的素位换记号，比生成所有合法的位换记号更为重要。为了找出所有的素位换记号，我们只需要在状态图中找出所有不经过重复节点的回路。当小球数为 3 时，所用数字不超过 5 的素位换记号一共有 8 个，它们是：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span&gt;3, 42, 51, 441, 522, 531, 5241, 5511&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;把它们掌握了之后，就能变幻出形形色色更复杂的杂耍模式了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们从几个最基本的杂耍模式，说到了位换记号与平均数定理，说到了排列测试与位换记号的生成方法，说到了状态图与素位换记号。但是，刚才的一切仅仅是假设，左右两只手是在交替地接抛一个又一个的小球。如果两只手是同步运作的呢？或者，如果每次可以接抛不止一个小球呢？或者，如果我们有两个杂耍者，他们互相之间还能把小球扔给对方呢？我们又应该用什么记号来表示它们呢？刚才提到的结论能否继续扩展到这些情况呢？感兴趣的朋友不妨看看 Burkard Polster 的 The Mathematics of Juggling 一书。这篇文章中的内容主要也都是从这本书里来的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.7833333333333334&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YAgyuWmib2Yrj7HfIA4GuVicicctiaF2TynLfqclzL0sOibIK2VsiaqZ6AUcg/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot; width=&quot;150&quot;/&gt;&lt;span&gt;    &lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.5233333333333334&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YsDYgMMh3VP9lSKoPovsTo1qj0CUic1ogscdBFJBUpOhdYu2Yb33VlFw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot; width=&quot;150&quot;/&gt;&lt;span&gt;    &lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.8955555555555555&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkxia9OTOdkfRx2UaBSQ5Cc6YwTDMMjwebgmFJONUgF2Xmdslb3YBNvlVaPKpwbgicGDqA3nAMVHCGuw/0?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;450&quot; width=&quot;225&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;整篇文章以视频开头，不妨让我们以视频结尾吧。最后这个视频来自 &lt;/span&gt;&lt;span&gt;https://www.youtube.com/watch?v=e5E84ePfEOw&lt;/span&gt;&lt;span&gt; 。看了这个视频后你就会了解到，这篇文章探讨的，真的只是最基本最基本的杂耍而已。&lt;/span&gt;&lt;span&gt;Your browser does not support the video tag.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;---&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;span&gt;------&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre accuse=&quot;aContent&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;span&gt;等的就是你，真的超有趣！高能金融抱团群发车啦~&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;加我拉你进群呦&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre accuse=&quot;aContent&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkyJCDnjGtGFUOmOAE2SZY1zvIueyhic76aNgYN38xwV6XE9y6tSzCTFYianCf1YgCrfeNqconWV5RhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;512&quot; width=&quot;auto&quot;/&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;br/&gt;&lt;strong&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/strong&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;br/&gt;商务合作：联系微信号hengzi5809&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;</description>
<pubDate>Mon, 20 Nov 2017 07:27:59 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/hsPhg4Z7Eq</dc:identifier>
</item>
</channel>
</rss>