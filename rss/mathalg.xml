<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>新时代的技术，什么更重要？</title>
<link>http://www.jintiankansha.me/t/P4B0ej59AB</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/P4B0ej59AB</guid>
<description>&lt;section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;span&gt;“&lt;/span&gt;
&lt;section/&gt;&lt;/section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;5&quot;&gt;&lt;p&gt;谷歌 CEO Sundar Pichai在发表在 NBCNews 上的一篇文章中提到，尽管编程在如今的学校教育和职业培训中很受欢迎，不过在自动化普及的未来，不是所有的科技行业岗位都要求很硬的编程能力。我们需要聚焦于普及轻量的、持续不断的教育。这很重要，能确保每一个人都能在未来的工作环境中找到机会。&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;span&gt;”&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;持续不断的学习，对每个人都无比重要，一个刚毕业的学生，如果在学校就能把Spring的实现原理搞明白，那他在找工作时的优势就很明显，我比较惭愧，在学校只会用Spring MVC，也没去管底层到底怎么玩。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;比如前几年，Hadoop刚出来的时候，火的一B，是个人都想去学一把，掌握了这门技术，确实好找工作。但是现在，简历上的Hadoop一栏已不再是亮点，取而代之的是Spark这门新生技术，也许几年之后，Spark也会被替代，同样，我们也只有不断的持续学习，才不会被别人所替代。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;好了，既然要持续学习，那我就推荐几个公众号吧，各位同学根据自己的兴趣选择关注，也不会强买强卖。&lt;/span&gt;&lt;/p&gt;
&lt;section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;4&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;java一日一条&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要是讲解编程语言java，期望每天都能推送一篇关于java编程语言的文章。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNSZze8fjfa1cARaDNNaiaTiclpxxAiaDcGLuprsxodibYOBC7Aw0ffIia9eA/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot; width=&quot;191px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;4&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;8&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;互联网学术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;国内最大的技术人员学术热点的交流学习平台，覆盖互联网所有就技术领域。&lt;/p&gt;
&lt;p&gt;送干货资料：10T技术图书，面试真题干货免费赠送，干货获取方式：关注本公众号，后台回复：干货&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9157754010695187&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNQAGdNOnYlMbOgptwNZU53P5kpTZIgPdp80CiapzYIaickE8QQ8szhVrg/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;748&quot; width=&quot;197px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;4.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;9&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;养码场&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;养码场，一个技术人职场社交平台。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;现有“养码人”20000+，覆盖JAVA/PHP/IOS/测试等领域。80%级别在P6及以上，含P9技术大咖50人，技术总监和CTO 300余人。&lt;/p&gt;
&lt;p&gt;专注技术大咖专访，与CTO零距离对话，欢迎加入~！&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3iamTf9I0WUyicjTrT69a6fYTVia9ic3qcA2vSpd4aSUhWBsbU6Biaoo69VBpw3D9mLcYufO79ncopQXOQ/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; width=&quot;175px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;5&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;泥瓦匠BYSocket&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;专注 并发、Spring Boot、Spring Cloud 和 MSA 微服务架构相关。路漫漫其修远兮，吾将上下而求索。关注即可得系列教程文章。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNEFLqjhiaIemXhMZE7wg7pkDwURia03TIIdUK2HPBTQkAADg58BWaia4sw/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot; width=&quot;192px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;3&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;6&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;K8S中文社区&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;K8S中文社区，专注于Docker、Kubernetes、容器技术等知识干货分享，不定期精选视频教程、招聘、行业活动，为用户提供有价值信息，QQ、微信群万余人，是一个纯技术交流学习社区。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNZwCAlGib0ibl3rNPLmTMUicFKS32oMkcy85ic0BQNfCSHDaXrlRTdZ6TvQ/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; width=&quot;176px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;3.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;7&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;AI前线&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面向15W+ AI爱好者、开发者和科学家。追踪技术新趋势，跟踪头部科技企业发展和传统产业技术升级落地案例。囊括AI前线网站和20个大数据、算法、机器学习、自动驾驶、区块链等技术交流社群。每周一节技术分享公开课，助力你全面拥抱人工智能技术。关注后回复“加群”可加入技术社群学习，回复“大数据”、“AI”、“2017报告”等关键词，可获我们整理的系列干货PDF及高清技能图谱。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNT4HaYbmkn3fZAgzjibgkxpWLdmibKZfDfRhxdS5Yic5rymaqQbZ6BaaQw/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; width=&quot;201px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;5&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;占小狼的博客&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Java进阶技术干货、实践分享，跟着狼哥一起学习JVM、性能调优，欢迎关注。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNJrX2TXGbkB0PibKAUF7bpYMGwv2okDtKPiaON7aRdaXnx4wB3SMTTV7A/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot; width=&quot;188px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;3.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;7&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;2.5&quot;&gt;&lt;section class=&quot;&quot; readability=&quot;5&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;算法与数学之美&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最有趣的科学干货，最勤劳的知识搬运工，最纠结学习的公众号，行万里路，读万卷书，读“书“请在算法与数学之美！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/f7S9WVpDh3jmMJXINEsdZA7ngdcbblUNYFbIfN7EzABHJWpdYkC887EcaqHlwy91icdYLP0j51d5LLVtFXiaVtAA/640?&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; width=&quot;178px&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;▲长按二维码，识别后关注&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;section class=&quot;&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot;&gt;&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;img class=&quot;__bg_gif&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9366666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkwJ4BpvBcQhGAbtWZZvV69s7GickZGibsKgYkTQkiaZfLYOmGS9iaaoibadibGJhT18OVZkfeJmCSUSD0zw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;br/&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
<pubDate>Tue, 06 Feb 2018 15:26:18 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/P4B0ej59AB</dc:identifier>
</item>
<item>
<title>傅里叶变换和拉普拉斯变换的物理解释及区别</title>
<link>http://www.jintiankansha.me/t/lYomMDJpty</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/lYomMDJpty</guid>
<description>&lt;section&gt;&lt;span mpa-none-contnet=&quot;t&quot;&gt;“&lt;/span&gt;
&lt;section/&gt;&lt;/section&gt;
&lt;section readability=&quot;4&quot;&gt;&lt;p mpa-is-content=&quot;t&quot;&gt;&lt;span&gt;傅里叶变换在物理学、数论、组合数学、信号处理、概率论、统计学、密码学、声学、光学、海洋学、结构动力学等领域都有着广泛的应用（例如在信号处理中，傅里叶变换的典型用途是将信号分解成幅值分量和频率分量）。&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;span mpa-none-contnet=&quot;t&quot;&gt;”&lt;/span&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;傅里叶变换能将满足一定条件的某个函数表示成三角函数（正弦和/或余弦函数）或者它们的积分的线性组合。在不同的研究领域，傅里叶变换具有多种不同的变体形式，如连续傅里叶变换和离散傅里叶变换。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;傅里叶变换是一种解决问题的方法，一种工具，一种看待问题的角度。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;理解的关键是：一个连续的信号可以看作是一个个小信号的叠加，从时域叠加与从频域叠加都可以组成原来的信号，将信号这么分解后有助于处理。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们原来对一个信号其实是从时间的角度去理解的，不知不觉中，其实是按照时间把信号进行分割，每一部分只是一个时间点对应一个信号值，一个信号是一组这样的分量的叠加。傅里叶变换后，其实还是个叠加问题，只不过是从频率的角度去叠加，只不过每个小信号是一个时间域上覆盖整个区间的信号，但他确有固定的周期，或者说，给了一个周期，我们就能画出一个整个区间上的分信号，那么给定一组周期值（或频率值），我们就可以画出其对应的曲线，就像给出时域上每一点的信号值一样，不过如果信号是周期的话 ，频域的更简单，只需要几个甚至一个就可以了，时域则需要整个时间轴上每一点都映射出一个函数值。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;傅里叶变换就是将一个信号的时域表示形式映射到一个频域表示形式；逆傅里叶变换恰好相反。这都是一个信号的不同表示形式。它的公式会用就可以，当然把证明看懂了更好。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;对一个信号做傅里叶变换，可以得到其频域特性，包括幅度和相位两个方面。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;幅度是表示这个频率分量的大小，那么相位呢，它有什么物理意义？频域的相位与时域的相位有关系吗？信号前一段的相位（频域）与后一段的相位的变化是否与信号的频率成正比关系。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;傅里叶变换就是把一个信号，分解成无数的正弦波（或者余弦波）信号。也就是说，用无数的正弦波，可以合成任何你所需要的信号。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;想一想这个问题：给你很多正弦信号，你怎样才能合成你需要的信号呢？答案是要两个条件，一个是每个正弦波的幅度，另一个就是每个正弦波之间的相位差。所以现在应该明白了吧，频域上的相位，就是每个正弦波之间的相位。　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;傅里叶变换用于信号的频率域分析，一般我们把电信号描述成时间域的数学模型，而数字信号处理对信号的频率特性更感兴趣，而通过傅立叶变换很容易得到信号的频率域特性。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;傅里叶变换简单通俗理解就是把看似杂乱无章的信号考虑成由一定振幅、相位、频率的基本正弦（余弦）信号组合而成，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;傅里叶变换的目的就是找出这些基本正弦（余弦）信号中振幅较大（能量较高）信号对应的频率，从而找出杂乱无章的信号中的主要振动频率特点。如减速机故障时，通过傅里叶变换做频谱分析，根据各级齿轮转速、齿数与杂音频谱中振幅大的对比，可以快速判断哪级齿轮损伤。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;拉普拉斯变换，是工程数学中常用的一种积分变换。它是为简化计算而建立的实变量函数和复变量函数间的一种函数变换。对一个实变量函数作拉普拉斯变换，并在复数域中作各种运算，再将运算结果作拉普拉斯反变换来求得实数域中的相应结果，往往比直接在实数域中求出同样的结果在计算上容易得多。拉普拉斯变换的这种运算步骤对于求解线性微分方程尤为有效，它可把微分方程化为容易求解的代数方程来处理，从而使计算简化。在经典控制理论中，对控制系统的分析和综合，都是建立在拉普拉斯变换的基础上的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;引入拉普拉斯变换的一个主要优点，是可采用传递函数代替微分方程来描述系统的特性。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这就为采用直观和简便的图解方法来确定控制系统的整个特性（见信号流程图、动态结构图）、分析控制系统的运动过程（见奈奎斯特稳定判据、根轨迹法），以及综合控制系统的校正装置（见控制系统校正方法）提供了可能性。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;拉普拉斯变换在工程学上的应用：应用拉普拉斯变换解常变量齐次微分方程，可以将微分方程化为代数方程，使问题得以解决。在工程学上，拉普拉斯变换的重大意义在于：将一个信号从时域上，转换为复频域（s域）上来表示；在线性系统，控制自动化上都有广泛的应用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在数字信号处理中，Z变换是一种非常重要的分析工具。但在通常的应用中，我们往往只需要分析信号或系统的频率响应，也即是说通常只需要进行傅里叶变换即可。那么，为什么还要引进Z变换呢？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Z变换和傅里叶变换之间有存在什么样的关系呢？&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;傅里叶变换的物理意义非常清晰：将通常在时域表示的信号，分解为多个正弦信号的叠加。每个正弦信号用幅度、频率、相位就可以完全表征。傅里叶变换之后的信号通常称为频谱，频谱包括幅度谱和相位谱，分别表示幅度随频率的分布及相位随频率的分布。在自然界，频率是有明确的物理意义的，比如说声音信号，男同胞声音低沉雄浑，这主要是因为男声中低频分量更多；女同胞多高亢清脆，这主要是因为女声中高频分量更多。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;对一个信号来说，就包含的信息量来讲，时域信号及其相应的傅里叶变换之后的信号是完全一样的。那傅里叶变换有什么作用呢？因为有的信号主要在时域表现其特性，如电容充放电的过程；而有的信号则主要在频域表现其特性，如机械的振动，人类的语音等。若信号的特征主要在频域表示的话，则相应的时域信号看起来可能杂乱无章，但在频域则解读非常方便。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在实际中，当我们采集到一段信号之后，在没有任何先验信息的情况下，直觉是试图在时域能发现一些特征，如果在时域无所发现的话，很自然地将信号转换到频域再看看能有什么特征。信号的时域描述与频域描述，就像一枚硬币的两面，看起来虽然有所不同，但实际上都是同一个东西。正因为如此，在通常的信号与系统的分析过程中，我们非常关心傅里叶变换。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;既然人们只关心信号的频域表示，那么Z变换又是怎么回事呢？&lt;strong&gt;&lt;span&gt;&lt;span&gt;要说到Z变换，可能还要先追溯到拉普拉斯变换&lt;/span&gt;。&lt;/span&gt;&lt;/strong&gt;拉普拉斯变换是以法国数学家拉普拉斯命名的一种变换方法，主要是针对连续信号的分析。拉普拉斯和傅里叶都是同时代的人，他们所处的时代在法国是处于拿破仑时代，国力鼎盛。在科学上也取代英国成为当时世界的中心，在当时众多的科学大师中，拉普拉斯、拉格朗日、傅里叶就是他们中间最为璀璨的三颗星。傅里叶关于信号可以分解为正弦信号叠加的论文，其评审人即包括拉普拉斯和拉格朗日。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;回到正题，傅里叶变换虽然好用，而且物理意义明确，但有一个最大的问题是其存在的条件比较苛刻，比如时域内绝对可积的信号才可能存在傅里叶变换。拉普拉斯变换可以说是推广了这以概念。在自然界，指数信号exp(-x)是衰减最快的信号之一，对信号乘上指数信号之后，很容易满足绝对可积的条件。因此将原始信号乘上指数信号之后一般都能满足傅里叶变换的条件，这种变换就是拉普拉斯变换。这种变换能将微分方程转化为代数方程，在18世纪计算机还远未发明的时候，意义非常重大。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从上面的分析可以看出，傅里叶变换可以看做是拉普拉斯的一种特殊形式，即所乘的指数信号为exp(0)。也即是说拉普拉斯变换是傅里叶变换的推广，是一种更普遍的表达形式。在进行信号与系统的分析过程中，可以先得到拉普拉斯变换这种更普遍的结果，然后再得到傅里叶变换这种特殊的结果。这种由普遍到特殊的解决办法，已经证明在连续信号与系统的分析中能够带来很大的方便。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Z变换可以说是针对离散信号和系统的拉普拉斯变换，由此我们就很容易理解Z变换的重要性，也很容易理解Z变换和傅里叶变换之间的关系。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;Z变换中的Z平面与拉普拉斯中的S平面存在映射的关系，z=exp(Ts)。在Z变换中，单位圆上的结果即对应离散时间傅里叶变换的结果。&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-source=&quot;bj.96weixin.com&quot;&gt;&lt;section&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz/wyice8kFQhf5geQK3gu2FUugjB8iaSGpjO38zXqdgwMx0oC9BCs08koDu1N0thHuib7TjD5SdkYZalvkm0cAClI9Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; width=&quot;22px&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;span&gt;∑编辑&lt;span&gt; | &lt;/span&gt;Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来源 | &lt;span&gt;&lt;span&gt;CSDN网kevinhg的博客&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9366666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkwJ4BpvBcQhGAbtWZZvV69s7GickZGibsKgYkTQkiaZfLYOmGS9iaaoibadibGJhT18OVZkfeJmCSUSD0zw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;br/&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 05 Feb 2018 14:18:54 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/lYomMDJpty</dc:identifier>
</item>
<item>
<title>图像风格迁移(Neural Style)简史</title>
<link>http://www.jintiankansha.me/t/0FSDKj3uVS</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/0FSDKj3uVS</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6583333333333333&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NPgZbq8EGVpMutQIrNbsMtwGbE5dbibfHo6j7ibR9V3x1ic4WGSoOPrlR2XicdpX1jXfMyfPQ44XL3c5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt; 图像风格迁移科技树&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;


&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot; readability=&quot;1&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot; readability=&quot;2&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;什么是图像风格迁移？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;先上一组图。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以下每一张图都是一种不同的艺术风格。作为非艺术专业的人，我就不扯艺术风格是什么了，每个人都有每个人的见解，有些东西大概艺术界也没明确的定义。如何要把一个图像的风格变成另一种风格更是难以定义的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对于程序员，特别是对于机器学习方面的程序员来说，这种模糊的定义简直就是噩梦。到底怎么把一个说都说不清的东西变成一个可执行的程序，是困扰了很多图像风格迁移方面的研究者的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7833333333333333&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMUQKibXqPvhH0brXibDc00tw0z52nNniaMB7QOT5CtL6cNfAuGQ22zmlzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在神经网络之前，图像风格迁移的程序有一个共同的思路：分析某一种风格的图像，给那一种风格建立一个数学或者统计模型，再改变要做迁移的图像让它能更好的符合建立的模型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这样做出来效果还是不错的，比如下面的三张图中所示，但一个很大的缺点：一个程序基本只能做某一种风格或者某一个场景。因此基于传统风格迁移研究的实际应用非常有限。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.285&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMt2mIEYLImTaU5nJKHKK0V6J19lIYicnHibsibv6cnyFibgfC7ysrmIiaP3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;h6&gt;&lt;span&gt;景色照片时间迁移&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;span&gt;改变了这种现状的是两篇Gatys的论文，在这之前让程序模仿任意一张图片画画是没法想象的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.1383333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMsH3ibyAVJDicdhico8PJiaG3VWKPC9znYV5ZsP1YtEibHT49pc7ysCqTe2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;第一个基于神经网络的图像风格迁移算法，生成时间：5-20分钟&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我想试着从头开始讲起，从Gatys et al., 2015a和Gatys et al., 2015b中用到的一些技术的历史开始讲起，用最简单的方法说清楚基于神经网络的图像风格迁移的思路是什么，以及Gatys为什么能够想到使用神经网络来实现图像风格迁移。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果大家对这个感兴趣的话，我将来可以继续写一些关于Neural Style最新的一些研究的进展，或者其他相关的一些图像生成类的研究，对抗网络之类的。写的有错误的不到位的地方请随意指正。&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot; readability=&quot;1&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot; readability=&quot;2&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Neural Style元年前20年-前3年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;要理解对于计算机来说图片的风格是什么，只能追根溯源到2000年以及之前的图片纹理生成的研究上。明明是图像风格迁移的文章，为什么要说到图片纹理？在这儿我先卖个关子吧。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;据我所知，在2015年前所有的关于图像纹理的论文都是手动建模的，其中用到的最重要的一个思想是：纹理可以用图像局部特征的统计模型来描述。没有这个前提一切模型无从谈起。什么是统计特征呢，简单的举个例子——&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.3666666666666667&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMOfvuSWEsTT3TetGc1epoIu21o1kqNCSWevibr9lCJ65GBxWibUILNuPg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;早期纹理生成结果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;与此同时，图像风格迁移也并无建树，甚至比纹理生成还惨。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为纹理生成至少不管生成什么样子的纹理都叫纹理生成，然而图像风格迁移这个领域当时连个合适的名字都没有，因为每个风格的算法都是各管各的，互相之间并没有太多的共同之处。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如油画风格迁移，里面用到了7种不同的步骤来描述和迁移油画的特征。又比如头像风格迁移里用到了三个步骤来把一种头像摄影风格迁移到另一种上。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以上十个步骤里没一个重样的，可以看出图像风格处理的研究在2015年之前基本都是各自为战，捣鼓出来的算法也没引起什么注意。相比之下Photoshop虽然要手动修图，但比大部分算法好用多了。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.44666666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbM8yw9SNGb6t6icgV1bbMluhpkSBicULwKdJLGxiatvmYyVJdibXgh46BvKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt; 头像风格迁移&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.32&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMdlNCxLeQ2koN0BWRksibAI9JosOE6e5ysUnEOBCYf4Qpge9qkichMAHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;油画风格迁移&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同一个时期，计算机领域进展最大的研究之一可以说是计算机图形学了。简单的来说计算机图形学就是现在几乎所有游戏的基础，不论是男友1(战地1)里穿越回一战的战斗场景，还是FGO之类的手游，背后都少不了一代又一代的图形学研究者的工作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在他们整日整夜忙着研究如何能让程序里的妹纸变成有血有肉的样子的时候，点科技树点出了一个重要的分支：显卡（GPU）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;游戏机从刚诞生开始就伴随着显卡。显卡最大的功能当然是处理和显示图像。不同于CPU的是，CPU早期是单线程的，也就是一次只能处理一个任务，GPU可以一次同时处理很多任务，虽然单个任务的处理能力和速度比CPU差很多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如一个128x128的超级马里奥游戏， 用CPU处理的话，每一帧都需要运行128x128=16384歩，而GPU因为可以同时计算所有像素点，时间上只需要1步，速度比CPU快很多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了让游戏越来越逼近现实，显卡在过去20年内也变得越来越好。巧合的是，显卡计算能力的爆炸性增长直接导致了被放置play十几年的神经网络的复活和深度学习的崛起，因为神经网络和游戏图形计算的相似处是两者都需要对大量数据进行重复单一的计算。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可以说如果没有游戏界就没有深度学习，也就没有Neural Style。所以想学机器学习先得去steam买东西，支持显卡研究。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5733333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMncUtg9Jnvj6yLAdmQmIz2nqsIECibEaMUoVKKgFZTnTU4uuj9g8y2mQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt; ImageNet物体识别比赛中使用GPU的队伍数量逐年上升，错误率逐年下降&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;提到神经网络我想稍微讲一下神经网络（特别是卷积神经网络）和传统做法的区别，已经有了解的可以跳过本段。卷积神经网络分为很多层，每一层都是由很多单个的人工神经元组成的。可以把每个神经元看作一个识别器，用刚刚的栗子来说的话，每一个或者几个神经元的组合都可以被用来识别某个特征，比如栗子的开口。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在训练前它们都是随机的，所以啥都不能做，训练的过程中它们会自动的被变成一个个不同的识别器并且相互组合起来，大量的识别器组合起来之后就可以识别物体了。整个过程除了一开始的神经网络的设计和参数的调整之外其他全是自动的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4517857142857143&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbM2pNXBZ4ibVK3C78WmaA0CmHHYK3UxJrKyK0UwozJqS9lt5aeQcpyZbg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;560&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h6&gt;&lt;span&gt;卷积神经网络图例&lt;/span&gt;&lt;/h6&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot; readability=&quot;1&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot; readability=&quot;2&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Neural Style元年前3年-前1年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;2012-2014年的时候深度学习刚开始火，火的一个主要原因是因为人们发现深度学习可以用来训练物体识别的模型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之前的物体识别模型有些是用几何形状和物体的不同部分比较来识别，有些按颜色，有些按3d建模，还有一些按照局部特征。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;传统物体识别算法中值得一提的是按照比较局部特征来识别物体，其原理如下。比如我们的目标是在图片之中找到这个人：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.2380952380952381&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMmDpXYLeN4DJDTGY0wdYdfmFBc6UibyWDcibnZlrqVpMwuZEIicM65ATJg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;147&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;目标物体&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对于程序而言这个人就是一堆像素嘛，让它直接找的话它只能一个个像素的去比较然后返回最接近的了（近邻算法）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但是现实中物体的形状颜色会发生变化，如果手头又只有这一张照片，直接去找的速度和正确率实在太低。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有研究者想到，可以把这个人的照片拆成许多小块，然后一块一块的比较(方法叫Bag of Features)。最后哪一块区域相似的块数最多就把那片区域标出来。这种做法的好处在于即使识别一个小块出了问题，还有其他的小块能作为识别的依据，发生错误的风险比之前大大降低了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.2965116279069768&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMsbxQyfVjqdKqXLyJ2pKeNMl3ibUWx7mibfabrmZvGbHqgiaDsibt33caTg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot; width=&quot;298.672px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; Bag of Features&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这种做法最大的缺点就是它还是把一个小块看成一坨像素然后按照像素的数值去比较，之前提到的改变光照改变形状导致物体无法被识别的问题根本上并没有得到解决。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用卷积神经网络做的物体识别器其实原理和bag of features差不了太多，只是把有用的特征(feature)都装到了神经网络里了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;  刚提到了神经网络经过训练会自动提取最有用的特征，所以特征也不再只是单纯的把原来的物体一小块一小块的切开产生的，而是由神经网络选择最优的方式提取。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9964285714285714&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMTYTD1uCBgIcfe3nlDO3MiapUplS92ic0gIPFa6yGYSm5Y0QG8nFnAzwg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;560&quot;/&gt;&lt;/p&gt;
&lt;h6&gt;&lt;span&gt;卷积神经网络提取的特征示意图，每一格代表一个神经元最会被哪种图片激活&lt;/span&gt;&lt;/h6&gt;
&lt;h6&gt;&lt;span&gt;卷积神经网络当时最出名的一个物体识别网络之一叫做VGG19，结构如下：&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.75&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMDroxj5k4495d94UowNOVyvHU07x98pb0AAWowG3zkjenTSZRzhKmUQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;VGG19网络结构&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每一层神经网络都会利用上一层的输出来进一步提取更加复杂的特征，直到复杂到能被用来识别物体为止，所以每一层都可以被看做很多个局部特征的提取器。VGG19在物体识别方面的精度甩了之前的算法一大截，之后的物体识别系统也基本都改用深度学习了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为VGG19的优秀表现，引起了很多兴趣和讨论，但是VGG19具体内部在做什么其实很难理解，因为每一个神经元内部参数只是一堆数字而已。每个神经元有几百个输入和几百个输出，一个一个去梳理清楚神经元和神经元之间的关系太难。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是有人想出来一种办法：虽然我们不知道神经元是怎么工作的，但是如果我们知道了它的激活条件，会不会能对理解神经网络更有帮助呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是他们编了一个程序，（用的方法叫back propagation，和训练神经网络的方法一样，只是倒过来生成图片。）把每个神经元所对应的能激活它的图片找了出来，之前的那幅特征提取示意图就是这么生成的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有人在这之上又进一步，觉得既然我们能找到一个神经元的激活条件，那能不能把所有关于“狗’的神经元找出来，让他们全部被激活，然后看看对于神经网络来说”狗“长什么样子的？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;长得其实是这样的：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.625&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMuuh9yMLDfhtHQjUo4MqTtxmdVKG4rKEAJTbUia1hxE1K1k7h7JdyCBw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;神经网络想象中的狗&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是神经网络想象中最完美的狗的样子，非常迷幻，都可以自成一派搞个艺术风格出来了。而能把任何图片稍作修改让神经网络产生那就是狗的幻觉的程序被称作deep dream。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5633333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMvU22E3XozoBC09nIxQt0ZoOg7p9pxdh15Xd7RvUHB7UHfia8NuHuysg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;Deep Dream&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Neural Style元年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;有了这么多铺垫，一切的要素已经凑齐，前置科技树也都已经被点亮了，现在进入正题了。基于神经网络的图像风格迁移在2015年由Gatys et al. 在两篇论文中提出：Gatys et al., 2015a和Gatys et al., 2015b。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Gatys et al., 2015a论文地址：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://t.cn/R9cnTeQ&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Gatys et al., 2015b论文地址：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://arxiv.org/abs/1508.06576&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们先说第一篇。第一篇比起之前的纹理生成算法，创新点只有一个：它给了一种用深度学习来给纹理建模的方法。之前说到纹理生成的一个重要的假设是纹理能够通过局部统计模型来描述，而手动建模方法太麻烦。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是Gatys看了一眼隔壁的物体识别论文，发现VGG19说白了不就是一堆局部特征识别器嘛。他把事先训练好的网络拿过来一看，发现这些识别器还挺好用的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是Gatys套了个Gramian matrix上去算了一下那些不同局部特征的相关性，把它变成了一个统计模型，于是就有了一个不用手工建模就能生成纹理的方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.75&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMAGicNwTvFicRFdEkEv2W7s9vw4Dt4QvrHPgdBWRw2G8b3PK7ib8vVTAHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;基于神经网络的纹理生成算法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从纹理到图片风格其实只差两步。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一步也是比较神奇的，是Gatys发现纹理能够描述一个图像的风格。严格来说文理只是图片风格的一部分，但是不仔细研究纹理和风格之间的区别的话，乍一看给人感觉还真差不多。第二步是如何只提取图片内容而不包括图片风格。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;这两点就是他的第二篇论文做的事情：Gatys又偷了个懒，把物体识别模型再拿出来用了一遍，这次不拿Gramian算统计模型了，直接把局部特征看做近似的图片内容，这样就得到了一个把图片内容和图片风格（说白了就是纹理）分开的系统，剩下的就是把一个图片的内容和另一个图片的风格合起来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;合起来的方法用的正是之前提到的让神经网络“梦到”狗的方法，也就是研究员们玩出来的Deep Dream，找到能让合适的特征提取神经元被激活的图片即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.805&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMoT2eqlFyqqKn3sJ91vvYWoLHJlvoqibdQDBq7F2WLJQ5rETU34yAOHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;基于神经网络的图像风格迁移&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;至此，我们就把关于基于神经网络的图像风格迁移(Neural Style)的重点解释清楚了。背后的每一步都是前人研究的结果，不用因为名字里带深度啊神经网络啊而感觉加了什么特技，特别的高级。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Gatys所做的改进是把两个不同领域的研究成果有机的结合了起来，做出了令人惊艳的结果。其实最让我惊讶的是纹理竟然能够和人们心目中认识到的图片的风格在很大程度上相吻合。（和真正的艺术风格有很大区别，但是看上去挺好看的。）从那之后对neural style的改进也层出不穷，在这里就先放一些图，技术细节暂且不表。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9114391143911439&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMw4DZxxOgOXV8sKRMe3Jibr74DllNG3e7YRPxibkW7NBfpuaDyzG1BLGw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;542&quot;/&gt;改进后的图像风格迁移算法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;左：输入图像，中：改进前，右：改进后。生成时间：5-20分钟&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.715&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMgOdjZNOXpXCb36R21T51VXFees9FBs5jpPpEt9o3KvTvTHueaFiaEzQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;多个预设风格的融合，生成时间：少于1秒，训练时间：每个风格1-10小时&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.2933333333333332&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMaIo5Q09icfliaWa3ibwN9pKX1DgZHb3rV6VBfEIL6YVnrmZicANGs7JAXw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;最新的实时任意风格迁移算法之一，生成时间：少于10秒（少于一秒的算法也有，但个人认为看上去没这个好看），训练时间：10小时&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8483333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMJXmO25uhlKsxyhh22BQSiacqRfbBiajMBvJjjW5l0GnibxOIHANT9zxLA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;图片类比，生成时间：5-20分钟&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后安利一篇与本文无关的文章，Research Debt 是我写本文的动机，希望对相关阅读有所帮助。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Research Debt 地址（英文）：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://distill.pub/2017/research-debt/&lt;/span&gt;&lt;/p&gt;

&lt;h5&gt;&lt;span&gt;作者：李嘉铭&lt;/span&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;span&gt;Northwestern University | CS&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;知乎专栏：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://zhuanlan.zhihu.com/p/26746283&lt;/span&gt;&lt;/p&gt;

&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot;&gt;&lt;p&gt;&lt;span&gt;∑编辑&lt;span&gt; | &lt;/span&gt;Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来源 | 乌镇智库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9366666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkwJ4BpvBcQhGAbtWZZvV69s7GickZGibsKgYkTQkiaZfLYOmGS9iaaoibadibGJhT18OVZkfeJmCSUSD0zw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;br/&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 04 Feb 2018 19:28:15 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/0FSDKj3uVS</dc:identifier>
</item>
</channel>
</rss>