<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>从头到尾彻底理解傅里叶变换算法（下）</title>
<link>http://www.jintiankansha.me/t/yKpaHpo0Aq</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/yKpaHpo0Aq</guid>
<description>&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;作者：July、dznlong  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;推荐阅读：&lt;span&gt;The Scientist and Engineer's Guide to Digital Signal Processing，By Steven W. Smith, Ph.D&lt;/span&gt;。此书地址：&lt;span&gt;http://www.dspguide.com/pdfbook.htm&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;------------&lt;br /&gt;前言&lt;br /&gt;第一部分、  DFT&lt;br /&gt;第一章、傅立叶变换的由来&lt;br /&gt;第二章、实数形式离散傅立叶变换（Real DFT）&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从头到尾彻底理解傅里叶变换算法、下&lt;br /&gt;第三章、复数&lt;br /&gt;第四章、复数形式离散傅立叶变换&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;前期回顾，在上一篇：&lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652556071&amp;amp;idx=1&amp;amp;sn=46ee5814741810a35ede8f24021dcd9a&amp;amp;chksm=8b7e3a7cbc09b36a8b893c121f78093099992eb23de2eb745e12c9f9a03b475772da91bf60f9&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;从头到尾彻底理解傅里叶变换算法（上）&lt;/span&gt;&lt;/a&gt;&lt;span&gt;里，我们讲了傅立叶变换的由来、和实数形式离散傅立叶变换（Real DFT）俩个问题，&lt;br /&gt;本文接上文，着重讲下复数、和复数形式离散傅立叶变换等俩个问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;第三章、复数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复数扩展了我们一般所能理解的数的概念，复数包含了实数和虚数两部分，利用复数的形式可以把由两个变量表示的表达式变成由一个变量(复变量)来表达，使得处理起来更加自然和方便。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;我们知道傅立叶变换的结果是由两部分组成的，使用复数形式可以缩短变换表达式，使得我们可以单独处理一个变量（这个在后面的描述中我们就可以更加确切地知道），而且快速傅立叶变换正是基于复数形式的，所以几乎所有描述的傅立叶变换形式都是复数的形式。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;但是复数的概念超过了我们日常生活中所能理解的概念，要理解复数是较难的，所以我们在理解复数傅立叶变换之前，先来专门复习一下有关复数的知识，这对后面的理解非常重要。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;一、 复数的提出&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; &lt;br /&gt;在此，先让我们看一个物理实验：把一个球从某点向上抛出，然后根据初速度和时间来计算球所在高度，这个方法可以根据下面的式子计算得出：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLKicT5y0Grvl3TJ7Xge7N0uBkWnzIIBLmCqez0vyG9wfolckhD5IphcQ/0?wx_fmt=jpeg&quot; width=&quot;251&quot; height=&quot;96&quot; class=&quot;&quot; data-ratio=&quot;0.38247011952191234&quot; data-w=&quot;251&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中h表示高度，g表示重力加速度(9.8m/s2)，v表示初速度，t表示时间。现在反过来，假如知道了高度，要求计算到这个高度所需要的时间，这时我们又可以通过下式来计算：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaL3pgNRnlmZ1ztBpic6HbibX9QYL2kUTH95hJxPVVuUywAuibvgyFaSNhZg/0?wx_fmt=jpeg&quot; width=&quot;245&quot; height=&quot;46&quot; class=&quot;&quot; data-ratio=&quot;0.18775510204081633&quot; data-w=&quot;245&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt;              &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;经过计算我们可以知道，当高度是3米时，有两个时间点到达该高度：球向上运动时的时间是0.38秒，球向下运动时的时间是1.62秒。但是如果高度等于10时，结果又是什么呢？根据上面的式子可以发现存在对负数进行开平方运算，我们知道这肯定是不现实的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一次使用这个不一般的式子的人是意大利数学家Girolamo Cardano（1501-1576），两个世纪后，德国伟大数学家Carl Friedrich Gause（1777-1855）提出了复数的概念，为后来的应用铺平了道路，他对复数进行这样表示：复数由实数（real）和虚数(imaginary)两部分组成，虚数中的根号负1用i来表示（在这里我们用j来表示，因为i在电力学中表示电流的意思）。&lt;br /&gt; &lt;br /&gt;我们可以把横坐标表示成实数，纵坐标表示成虚数，则坐标中的每个点的向量就可以用复数来表示，如下图：&lt;br /&gt;       &lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLzBuicC9nicad5bgDXbC4YtTFChU0cd46fV5C3J6PpRVe5e047bWe4Q3A/0?wx_fmt=jpeg&quot; width=&quot;551&quot; height=&quot;516&quot; class=&quot;&quot; data-ratio=&quot;0.9364791288566243&quot; data-w=&quot;551&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt;        &lt;br /&gt; 上图中的ABC三个向量可以表示成如下的式子：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;br /&gt;            A = 2 + 6j&lt;br /&gt;            B = -4 – 1.5j&lt;br /&gt;            C = 3 – 7j&lt;br /&gt; &lt;br /&gt;这样子来表达方便之处在于运用一个符号就能把两个原来难以联系起来的数组合起来了，不方便的是我们要分辨哪个是实数和哪个是虚数，我们一般是用Re( )和Im( )来表示实数和虚数两部分，如：&lt;br /&gt; &lt;br /&gt;            Re A = 2      Im A = 6&lt;br /&gt;            Re B = -4     Im B = -1.5&lt;br /&gt;            Re C = 3      Im C = -7 &lt;br /&gt; &lt;br /&gt;       复数之间也可以进行加减乘除运算：&lt;br /&gt;&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLdALhaQzHOAkqpibDg3fMZ3RA5byZmo2rIa8kdXGQ7DwODQ6ljs1k5pA/0?wx_fmt=jpeg&quot; width=&quot;542&quot; height=&quot;319&quot; class=&quot;&quot; data-ratio=&quot;0.5885608856088561&quot; data-w=&quot;542&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt;            &lt;br /&gt;  &lt;br /&gt;这里有个特殊的地方是j2等于-1，上面第四个式子的计算方法是把分子和分母同时乘以c – dj，这样就可消去分母中的j了。&lt;br /&gt; &lt;br /&gt;复数也符合代数运算中的交换律、结合律、分配律：&lt;br /&gt; &lt;br /&gt;              A B = B A&lt;br /&gt;              (A + B) + C = A + (B + C)&lt;br /&gt;              A(B + C) = AB + AC&lt;br /&gt; &lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;二、 复数的极坐标表示形式&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; &lt;br /&gt;前面提到的是运用直角坐标来表示复数，其实更为普遍应用的是极坐标的表示方法，如下图：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaL663PgQ6GHrHTOCuO32FDEU8x1qOl9EbOuP8vef5tMB1Wf9jWGHx2ZQ/0?wx_fmt=jpeg&quot; width=&quot;549&quot; height=&quot;515&quot; class=&quot;&quot; data-ratio=&quot;0.9380692167577414&quot; data-w=&quot;549&quot; data-type=&quot;jpeg&quot; /&gt;&lt;br /&gt;&lt;span&gt;              &lt;br /&gt;上图中的M即是数量积(magnitude)，表示从原点到坐标点的距离，θ是相位角(phase angle)，表示从X轴正方向到某个向量的夹角，下面四个式子是计算方法：&lt;br /&gt;&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLXMicKRBcQGOEEeBxakWDe7YIWWQ4ZQUZEObSOuP1nHnW5mymmuyNPWg/0?wx_fmt=jpeg&quot; width=&quot;363&quot; height=&quot;319&quot; class=&quot;&quot; data-ratio=&quot;0.8787878787878788&quot; data-w=&quot;363&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt;                     &lt;br /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  我们还可以通过下面的式子进行极坐标到直角坐标的转换：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;a + jb = M (cosθ + j sinθ)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;上面这个等式中左边是直角坐标表达式，右边是极坐标表达式。&lt;br /&gt; &lt;br /&gt;还有一个更为重要的等式——欧拉等式（欧拉，瑞士的著名数学家，Leonhard Euler，1707-1783）：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;ejx = cos x + j sin x &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个等式可以从下面的级数变换中得到证明：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLs2F3EtzdF8f9pxORpOwRNNjlxt59EfWQrz1ZT60ptHZIUDHnMndInA/0?wx_fmt=jpeg&quot; width=&quot;692&quot; height=&quot;104&quot; class=&quot;&quot; data-ratio=&quot;0.15028901734104047&quot; data-w=&quot;692&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上面中右边的两个式子分别是cos(x)和sin(x)的泰勒(Taylor)级数。&lt;br /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这样子我们又可以把复数的表达式表示成指数的形式了：&lt;br /&gt; &lt;br /&gt;             a + jb = M ejθ （这便是复数的两个表达式）&lt;br /&gt; &lt;br /&gt;指数形式是数字信号处理中数学方法的支柱，也许是因为用指数形式进行复数的乘除运算极为简单的缘故吧：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaL1r7wLAzxkJKicKdGLnbSgcKXT2Dib20uh6wUuecFsk2dyhQtsx7GDmiaw/0?wx_fmt=jpeg&quot; width=&quot;474&quot; height=&quot;275&quot; class=&quot;&quot; data-ratio=&quot;0.580168776371308&quot; data-w=&quot;474&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;              &lt;br /&gt;&lt;span&gt;&lt;strong&gt;三、复数是数学分析中的一个工具&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; &lt;br /&gt;为什么要使用复数呢？其实它只是个工具而已，就如钉子和锤子的关系，复数就象那锤子，作为一种使用的工具。我们把要解决的问题表达成复数的形式（因为有些问题用复数的形式进行运算更加方便），然后对复数进行运算，最后再转换回来得到我们所需要的结果。&lt;br /&gt; &lt;br /&gt;有两种方法使用复数，一种是用复数进行简单的替换，如前面所说的向量表达式方法和前一节中我们所讨论的实域DFT，另一种是更高级的方法：数学等价(mathematical equivalence)，复数形式的傅立叶变换用的便是数学等价的方法，但在这里我们先不讨论这种方法，这里我们先来看一下用复数进行替换中的问题。&lt;br /&gt; &lt;br /&gt;用复数进行替换的基本思想是：把所要分析的物理问题转换成复数的形式，其中只是简单地添加一个复数的符号j，当返回到原来的物理问题时，则只是把符号j去掉就可以了。&lt;br /&gt; &lt;br /&gt;有一点要明白的是并不是所有问题都可以用复数来表示，必须看用复数进行分析是否适用，有个例子可以看出用复数来替换原来问题的表达方式明显是谬误的：假设一箱的苹果是5美元，一箱的桔子是10美元，于是我们把它表示成 5 + 10j，有一个星期你买了6箱苹果和2箱桔子，我们又把它表示成6 + 2j，最后计算总共花的钱是(5 + 10j)(6 + 2j) = 10 + 70j，结果是买苹果花了10美元的，买桔子花了70美元，这样的结果明显是错了，所以复数的形式不适合运用于对这种问题的解决。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;四、用复数来表示正余弦函数表达式&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; &lt;br /&gt;对于象M cos (ωt + φ)和A cos(ωt ) + B sin(ωt )表达式，用复数来表示，可以变得非常简洁，对于直角坐标形式可以按如下形式进行转换：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLKXqRTSqmHoVBHE55S13tAzmt0SdzuC1SDLAk1icVpoQcZu2b3tUuPIw/0?wx_fmt=jpeg&quot; width=&quot;529&quot; height=&quot;121&quot; class=&quot;&quot; data-ratio=&quot;0.22873345935727787&quot; data-w=&quot;529&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt;       &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上式中余弦幅值A经变换生成a，正弦幅值B的相反数经变换生成b：A &amp;lt;=&amp;gt; a，B&amp;lt;=&amp;gt; -b，但要注意的是，这不是个等式，只是个替换形式而已。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;br /&gt;对于极坐标形式可以按如下形式进行转换：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLjbaaibJic3pECqxc42DgaUuZ98icUYkhqWbPkP1ugNbo2HPtV5lVTI5ZQ/0?wx_fmt=jpeg&quot; width=&quot;550&quot; height=&quot;98&quot; class=&quot;&quot; data-ratio=&quot;0.1781818181818182&quot; data-w=&quot;550&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt;       &lt;br /&gt;      &lt;br /&gt;&lt;/span&gt;&lt;span&gt;上式中，M &amp;lt;=&amp;gt; M，θ&amp;lt;=&amp;gt;φ。&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里虚数部分采用负数的形式主要是为了跟复数傅立叶变换表达式保持一致，对于这种替换的方法来表示正余弦，符号的变换没有什么好处，但替换时总会被改变掉符号以跟更高级的等价变换保持形式上的一致。&lt;br /&gt; &lt;br /&gt;在离散信号处理中，运用复数形式来表示正余弦波是个常用的技术，这是因为利用复数进行各种运算得到的结果跟原来的正余弦运算结果是一致的，但是，我们要小心使用复数操作，如加、减、乘、除，有些操作是不能用的，如两个正弦信号相加，采用复数形式进行相加，得到的结果跟替换前的直接相加的结果是一样的，但是如果两个正弦信号相乘，则采用复数形式来相乘结果是不一样的。幸运的是，我们已严格定义了正余弦复数形式的运算操作条件：&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;1、参加运算的所有正余弦的频率必须是一样的；&lt;br /&gt;2、运算操作必须是线性的，如两个正弦信号可以进行相加减，但不能进行乘除，象信号的放大、衰减、高低通滤波等系统都是线性的，象平方、缩短、取限等则不是线性的。要记住的是卷积和傅立叶分析也只有线性操作才可以进行。&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;下图是一个相量变换(我们把正弦或余弦波变成复数的形式称为相量变换，Phasor transform)的例子，一个连续信号波经过一个线性处理系统生成另一个信号波，从计算过程我们可以看出采用复数的形式使得计算变化十分的简洁：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLMfzHLrcTicEiboZZ2PKaeFwZZzIupGp1ibLuhbkKMYx5kMLJzBRSjiao7w/0?wx_fmt=jpeg&quot; width=&quot;750&quot; height=&quot;446&quot; class=&quot;&quot; data-ratio=&quot;0.5946666666666667&quot; data-w=&quot;750&quot; data-type=&quot;jpeg&quot; /&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在第二章中我们描述的实数形式傅立叶变换也是一种替换形式的复数变换，但要注意的是那还不是复数傅立叶变换，只是一种代替方式而已。下一章、即，第四章，我们就会知道复数傅立叶变换是一种更高级的变换，而不是这种简单的替换形式。 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;第四章、复数形式离散傅立叶变换&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复数形式的离散傅立叶变换非常巧妙地运用了复数的方法，使得傅立叶变换变换更加自然和简洁，它并不是只是简单地运用替换的方法来运用复数，而是完全从复数的角度来分析问题，这一点跟实数DFT是完全不一样的。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;一、  把正余弦函数表示成复数的形式&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;通过欧拉等式可以把正余弦函数表示成复数的形式：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;cos( x ) = 1/2 e j(-x) + 1/2 ejx &lt;br /&gt;sin( x ) = j (1/2 e j(-x) - 1/2 ejx) &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  从这个等式可以看出，如果把正余弦函数表示成复数后，它们变成了由正负频率组成的正余弦波，相反地，一个由正负频率组成的正余弦波，可以通过复数的形式来表示。&lt;br /&gt; &lt;br /&gt;我们知道，在实数傅立叶变换中，它的频谱是0 ~ π(0 ~ N/2),但无法表示-π~ 0的频谱，可以预见，如果把正余弦表示成复数形式，则能够把负频率包含进来。&lt;br /&gt; &lt;br /&gt;&lt;strong&gt;&lt;span&gt;二、  把变换前后的变量都看成复数的形式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复数形式傅立叶变换把原始信号x[n]当成是一个用复数来表示的信号，其中实数部分表示原始信号值，虚数部分为0，变换结果X[k]也是个复数的形式，但这里的虚数部分是有值的。&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在这里要用复数的观点来看原始信号，是理解复数形式傅立叶变换的关键（如果有学过复变函数则可能更好理解，即把x[n]看成是一个复数变量，然后象对待实数那样对这个复数变量进行相同的变换）。&lt;br /&gt; &lt;br /&gt;&lt;strong&gt;&lt;span&gt;三、  对复数进行相关性算法（正向傅立叶变换）&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt; &lt;br /&gt;从实数傅立叶变换中可以知道，我们可以通过原始信号乘以一个正交函数形式的信号，然后进行求总和，最后就能得到这个原始信号所包含的正交函数信号的分量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现在我们的原始信号变成了复数，我们要得到的当然是复数的信号分量，我们是不是可以把它乘以一个复数形式的正交函数呢？答案是肯定的，正余弦函数都是正交函数，变成如下形式的复数后，仍旧还是正交函数（这个从正交函数的定义可以很容易得到证明）：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                   cos x + j sin x, cos x – j sin x，……&lt;br /&gt; &lt;br /&gt;这里我们采用上面的第二个式子进行相关性求和，为什么用第二个式子呢?，我们在后面会知道，正弦函数在虚数中变换后得到的是负的正弦函数，这里我们再加上一个负号，使得最后的得到的是正的正弦波，根据这个于是我们很容易就可以得到了复数形式的DFT正向变换等式：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLZqM6VgQFtBmVvaL7SlRQF1Fal8w3TsibDEah3uHDfd6mZoEw0VibDzBg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.15129151291512916&quot; data-w=&quot;542&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;       &lt;br /&gt;     这个式子很容易可以得到欧拉变换式子：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt; &lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLmtyoia4qpJRKNy5nhsJxBcsP4wtlibvsIkXWAO6ib9zdVPyia41ExwicCzA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.33807829181494664&quot; data-w=&quot;281&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;      &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实我们是为了表达上的方便才用到欧拉变换式，在解决问题时我们还是较多地用到正余弦表达式。&lt;br /&gt; &lt;br /&gt;对于上面的等式，我们要清楚如下几个方面（也是区别于实数DFT的地方）：&lt;br /&gt;1、X[k]、x[n]都是复数，但x[n]的虚数部分都是由0组成的，实数部分表示原始信号；&lt;br /&gt;2、k的取值范围是0 ~ N-1 (也可以表达成0 ~ 2π)，其中0 ~ N/2（或0 ~ π）是正频部分，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;N/2 ~ N-1（π~ 2π）是负频部分，由于正余弦函数的对称性，所以我们把 –π~ 0表示成π~ 2π，这是出于计算上方便的考虑。&lt;br /&gt;3、其中的j是一个不可分离的组成部分，就象一个等式中的变量一样，不能随便去掉，去掉之后意义就完全不一样了，但我们知道在实数DFT中，j只是个符号而已，把j去掉，整个等式的意义不变；&lt;br /&gt;4、下图是个连续信号的频谱，但离散频谱也是与此类似的，所以不影响我们对问题的分析：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLn3QgxfcxRUwu9NK6LGOtPZPQLBYeuyLSEKIojvJicmvsN33HuUegNGw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.8167330677290837&quot; data-w=&quot;502&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;              &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;br /&gt;上面的频谱图把负频率放到了左边，是为了迎合我们的思维习惯，但在实际实&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现中我们一般是把它移到正的频谱后面的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从上图可以看出，时域中的正余弦波（用来组成原始信号的正余弦波）在复数DFT的频谱中被分成了正、负频率的两个组成部分，基于此等式中前面的比例系数是1/N（或1/2π），而不是2/N，这是因为现在把频谱延伸到了2π,但把正负两个频率相加即又得到了2/N,又还原到了实数DFT的形式，这个在后面的描述中可以更清楚地看到。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;由于复数DFT生成的是一个完整的频谱，原始信号中的每一个点都是由正、负两个频率组合而成的，所以频谱中每一个点的带宽是一样的，都是1/N，相对实数DFT，两端带宽比其它点的带宽少了一半；复数DFT的频谱特征具有周期性：-N/2 ~ 0与N/2 ~ N-1是一样的，实域频谱呈偶对称性（表示余弦波频谱），虚域频谱呈奇对称性（表示正弦波频谱）。&lt;br /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、  逆向傅立叶变换&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br /&gt; &lt;br /&gt;假设我们已经得到了复数形式的频谱X[k]，现在要把它还原到复数形式的原始信号x[n]，当然应该是把X[k]乘以一个复数，然后再进行求和，最后得到原始信号x[n]，这个跟X[k]相乘的复数首先让我们想到的应该是上面进行相关性计算的复数：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;cos(2πkn/N) – j si(2πkn/N)，&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但其中的负号其实是为了使得进行逆向傅立叶变换时把正弦函数变为正的符号，因为虚数j的运算特殊性，使得原来应该是正的正弦函数变为了负的正弦函数（我们从后面的推导会看到这一点），所以这里的负号只是为了纠正符号的作用，在进行逆向DFT时，我们可以把负号去掉，于是我们便得到了这样的逆向DFT变换等式：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;x[n] = X[k] (cos(2πkn/N) + j sin(2πkn/N))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们现在来分析这个式子，会发现这个式其实跟实数傅立叶变换是可以得到一样结果的。我们先把X[k]变换一下：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;X[k] = Re X[k] + j Im X[k]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;这样我们就可以对x[n]再次进行变换，如：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;           x[n] = (Re X[k] + j Im X[k]) (cos(2πkn/N) + j sin(2πkn/N))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                  = ( Re X[k] cos(2πkn/N) + j Im X[k] cos(2πkn/N) +j Re X[k] sin(2πkn/N) -  Im X[k] sin(2πkn/N) )&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                  = ( Re X[k] （cos(2πkn/N) + j sin(2πkn/N)） +    ---------------------(1)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                            Im X[k] （ - sin(2πkn/N) + j cos(2πkn/N))）  ---------------(2)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这时我们就把原来的等式分成了两个部分，第一个部分是跟实域中的频谱相乘，第二个部分是跟虚域中的频谱相乘，根据频谱图我们可以知道，Re X[k]是个偶对称的变量，Im X[k]是个奇对称的变量，即&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Re X[k] = Re X[- k]&lt;br /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  Im X[k] = - Im X[-k]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但k的范围是0 ~ N-1，0~N/2表示正频率，N/2~N-1表示负频率，为了表达方便我们把N/2~N-1用-k来表示，这样在从0到N-1的求和过程中对于(1)和(2)式分别有N/2对的k和-k的和，对于（1）式有：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Re X[k] (cos(2πkn/N) + j sin(2πkn/N)) + Re X[- k] (cos( - 2πkn/N) + j sin( -2πkn/N))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;根据偶对称性和三角函数的性质，把上式化简得到：&lt;br /&gt;                &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Re X[k] (cos(2πkn/N) + j sin(2πkn/N)) + Re X[ k] (cos( 2πkn/N) - j sin( 2πkn/N))&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个式子最后的结果是：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2 Re X[ k] cos(2πkn/N)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;再考虑到求Re X[ k]等式中有个比例系数1/N，把1/N乘以2，这样的结果不就是跟实数DFT中的式子一样了吗？&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;br /&gt;对于(2)式，用同样的方法，我们也可以得到这样的结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;   -2 Im X[k] sin(2πkn/N)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;注意上式前面多了个负符号，这是由于虚数变换的特殊性造成的，当然我们肯定不能把负符号的正弦函数跟余弦来相加，还好，我们前面是用cos(2πkn/N) – j sin(2πkn/N)进行相关性计算，得到的Im X[k]中有个负的符号，这样最后的结果中正弦函数就没有负的符号了，这就是为什么在进行相关性计算时虚数部分要用到负符号的原因（我觉得这也许是复数形式DFT美中不足的地方，让人有一种拼凑的感觉）。&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从上面的分析中可以看出，实数傅立叶变换跟复数傅立叶变换，在进行逆变换时得到的结果是一样的，只不过是殊途同归吧。本文完。&lt;/span&gt;&lt;/p&gt;

&lt;pre accuse=&quot;aContent&quot; class=&quot;&quot; readability=&quot;11&quot;&gt;
&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;-------------&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;----&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;明明共同关注公众号，彼此却互不认识；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;明明具有相同的爱好，却无缘相识；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;有没有觉得这就是上帝给我们的一个bug！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;想不想认识更多写程序的小伙伴？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;C++，Java，VB……应有尽有。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;还等什么？赶快上车加入我们吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(･ิϖ･ิ)っ算法与数学之美-计算机粉丝群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我们在这里等你哟&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;
        &lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxUQ5d0U9iaj39zR1xvmIghuQqNYBAabQNdiazRVHuqB8AaPqKl6wUhFqf3r7jdwkibyONELQdY6G8Vw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; width=&quot;auto&quot; /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域。&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;</description>
<pubDate>Mon, 23 Oct 2017 21:37:03 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/yKpaHpo0Aq</dc:identifier>
</item>
<item>
<title>小美的桌号：DHCP协议</title>
<link>http://www.jintiankansha.me/t/8IHgNvYbZH</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/8IHgNvYbZH</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;小美的桌号：DHCP协议&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;作者：Vamie &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;DHCP协议用于动态的配置电脑的网络相关参数，如主机的IP地址，路由器出口地址、DNS域名服务器地址等。一台电脑只要接上网，就可以通过DHCP协议获得相关配置，从而顺利的畅游网络。&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;网络配置&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;电脑刚刚接上网络时，像一个走入一家新餐厅的食客，不免会有很多疑惑：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;“我该坐在哪里？”&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;“我怎么点菜？”&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;“我该如何结账？”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLuices1Wmc7oSn03gYIJhj1SK088ticapJhwg6c3oaicMia64gVgt88iaVyw/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-ratio=&quot;0.6675&quot; data-w=&quot;400&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span class=&quot;s1&quot;&gt;初入大饭店&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;如果顾客的问题长时间得不到解答，那么餐厅很可能失去这位客人。于是，餐厅往往会雇一些服务员。他们可以把客人引导到空闲的座位，并告诉顾客如何点餐、如何结账等。同样，在网络通信中，一台电脑需要设置自己的IP地址等网络参数。可对于电脑用户来说，这些设置太过复杂。幸好，DHCP协议可以解决这一让人头痛的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;DHCP协议全称为“动态主机设置协议”（Dynamic Host Configuration Protocol）。通常来说，普通电脑中都内置有DHCP客户端模块。电脑接上网络后，DHCP客户端发现新连通的网络，会在该网络上找DHCP服务器。DHCP服务器将给电脑提供合理的网络配置，并把设置信息传回本机。所谓的DHCP服务器，其实就是一些运行有DHCP服务器端软件的特殊电脑。他们像等候在网络上的服务员，为新来的顾客排忧解难。本机和DHCP服务器之间的通信，都是通过DHCP协议进行的。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;其实在网络诞生初期，就有了用一台服务器为网络上的电脑配置参数的做法。最早的一个协议叫BOOTP（Bootstrap Protocol），主要用于开机配置。计算机开机时需要很多配置参数。对于没有磁盘的计算机来说，它无法获得这些参数，但可以通过BOOTP从网络上的其他设备上获得。DHCP大体上继承了BOOTP的工作方式，但在细节上进行了改进。我们将在以后看到。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt; &lt;/p&gt;
&lt;h3 class=&quot;p2&quot;&gt;地址分配&lt;/h3&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;服务员最重要的任务是为客人找座位。类似的，DHCP服务器的首要任务是分配IP地址。分配的IP地址要符合以下原则：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;ol1 list-paddingleft-2&quot; readability=&quot;-1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;地址合法，即对应该局域网的IP地址和子网掩码。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;地址空闲，同一网络下没有其他设备使用该地址。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;DHCP服务器上存有一个地址池，里面是可用的IP地址，相当于服务员手中的空闲桌号列表。当新客人出现时，DHCP服务器就会从地址池中取出一个IP地址分配给客人。此外，服务器还会说明IP地址的占用时间，也就是租期：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;“先生，请注意您的用餐时间为1个小时”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p2&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  当然，主机使用网络的时间可能超过租期。如果主机在租期到时都没有联系DHCP服务器，那么DHCP服务器会收回IP地址，再分配给其他主机。可如果主机想继续使用IP地址，就要在中途申请延长租期。收到申请的DHCP服务器通常会答应主机的请求，允许它继续使用现有IP地址。但少数情况下，服务器会要求主机更换IP地址。如果主机联系不上DHCP服务器，那么它必须立即停止使用IP地址，重启寻找DHCP服务器的过程。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;有了动态分配，DHCP服务器不但简化了网络配置过程，还可以有效利用IP地址资源。例如一个咖啡馆的Wifi路由允许200台设备接入。咖啡馆每天进出的客人很多。如果每个客人都要求一个不一样的IP地址的话，所需地址会远远超过200台。而通过动态的方式，200个IP地址不断回收使用，完全可以满足客人的需要。有时，DHCP服务器会预留一些地址给特定MAC地址的设备使用。这就好像餐厅给贵宾预留座位，不允许其他客人坐。这样的地址通常会分配给打印机、传真机等特殊设备。由于IP地址固定，用户可以方便的通过IP地址找到它们。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;p2&quot;&gt;&lt;span class=&quot;s1&quot;&gt;通信过程&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;DHCP协议的底层是UDP协议。我们知道，网络上的点对点沟通需要有IP地址。但新接入网络的客户机正是想通过DHCP通信来获得IP地址。这简直成了“鸡生蛋、蛋生鸡”的死胡同。幸好，除了点对点通信，UDP协议还允许广播通信。把UDP数据包发送到网络的广播地址，网络上的每个设备都能收到。因此，DHCP通信主要靠这种广播的形式进行。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;DHCP通信分为四步：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;ol1 list-paddingleft-2&quot; readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Discovery：客户机发广播，搜寻DHCP服务器。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Offer：DHCP服务器发出邀请，提供一个可用的IP地址。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Request：客户机正式请求使用该IP地址。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Acknowledge：DHCP服务器确认，并提供其他配置参数。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLLRvT6gyhSxibwqkohibKmmvEyqEg8CqfILTfmhnIVW7dA4SxxsobwLCQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;1.4150943396226414&quot; data-w=&quot;318&quot; data-type=&quot;png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;每一步的通信内容都放在一个符合DHCP格式的数据包中。数据包中可以包括客户机IP地址、服务器IP地址、客户的硬件MAC编号等字段，还能附加多条网络设置参数。当某些信息未知时，如客户机的IP地址，相应的字段可以填成0。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;我们可以再次用餐厅来类比通信过程：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;客人老张大喊：“服务员，我是老张，给我找张桌子呗？”&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;服务员小美回喊：“我是服务员小美。老张你坐3号桌行吗？”&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;老张觉得3号桌不错，又喊了一嗓子，“这桌子行，老张我就坐在这里了啊。”&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;小美回复，“成啊。记得用餐时间是一个小时哟。”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLRh6DDVGvEZibI012KyqukOQUgiacKtE7CLuQ5gpX16ib2BHd1KgTM1NoQ/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-ratio=&quot;1.3638968481375358&quot; data-w=&quot;349&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;服务员小美&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;经过这一系列的DHCP通信，客户机获得了自己的IP地址，也记下了租期时间。为了防止DHCP服务器不靠谱，客户机通常还会探测一下网络，以免该IP已经被其他设备占用。除了租期，DHCP服务器最终确认中，还可能加上其他网络配置信息，如DNS服务器地址、网络出口地址等。客户机可以选择接受，也可以拒绝DHCP服务器的“好意”，自行设置这些参数。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;p2&quot;&gt;&lt;span class=&quot;s1&quot;&gt;DHCP攻击&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;一定程度上说，DHCP服务器是个活雷锋，为网络上的其他设备提供公共服务，免得设备之间私自打架。人们也越来越信赖这个活雷锋，只管接上网线、连上Wifi，让DHCP服务器处理配置之类的杂事。无形中，DHCP服务器掌握了很大的公共权力。一些黑客攻击手法开始瞄准DHCP服务器。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt; &lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;针对DHCP的一种攻击办法是从服务器那里骗IP地址。攻击者的电脑可以不断发出DHCP请求，冒充成新入网的客户机。于是，DHCP服务器的地址池被耗干，无法分配地址给后来的用户。后来的用户再也没法使用网络服务。攻击者很可能会继续下连环套。攻击者占有了大量IP地址，可以装扮成新的DHCP服务器，把自己骗来的IP地址分配给网络上的新用户。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;等等，好像有什么不对攻击者搞瘫一台DHCP服务器，就为了过一下cosplay的瘾？&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwtSOny4SBunNDhTQXO7UiaLZxstInhZ6hbyOfOwerZ45vArQ09xLKMbNshD74O6MoxKo38VsjiaexA/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-ratio=&quot;1.4875&quot; data-w=&quot;400&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;假扮小美，很容易被外表迷惑&lt;br /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;span&gt;当然不是。DHCP服务器还能提供其他网络设置参数。攻击者可以让自己成为DNS服务器或者网络出口。于是，客户机的域名解析和外网通信，必须经过攻击者的电脑。这个时候，攻击者的权限就很大了。他可以偷听通信、伪装成客户机、假扮成某个域名的网站。比如说，攻击者就可以篡改域名解析，让你在访问www.cnblogs.com/vamei时，实际上访问的是攻击者提供的一个网页。当你在这个网页上输入用户名和密码时，你的信息就完全泄露给了攻击者。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;DHCP攻击让人防不胜防。DHCP协议在设计中并没有考虑到安全性的问题，所以很难从软件上杜绝DHCP攻击。某些品牌的交换机上，可以指定特定端口给合法的DHCP服务器，以免其他人伪装。当然，最重要的保护方式，还是防止攻击者连入局域网。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;总结&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;DHCP服务器可以动态的分配IP地址，还可以提供其他网络设置参数。客户机和服务器经过四步来完成DHCP通信。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span&gt;&lt;strong&gt;来源：http://www.cnblogs.com/vamei&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre accuse=&quot;aContent&quot; readability=&quot;11&quot;&gt;
&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;-------------&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;----&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;明明共同关注公众号，彼此却互不认识；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;明明具有相同的爱好，却无缘相识；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;有没有觉得这就是上帝给我们的一个bug！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;想不想认识更多写程序的小伙伴？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;
        &lt;span&gt;C++，Java，VB……应有尽有。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;还等什么？赶快上车加入我们吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(･ิϖ･ิ)っ算法与数学之美-计算机粉丝群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我们在这里等你哟&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxUQ5d0U9iaj39zR1xvmIghuQqNYBAabQNdiazRVHuqB8AaPqKl6wUhFqf3r7jdwkibyONELQdY6G8Vw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; width=&quot;auto&quot; /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域。&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;</description>
<pubDate>Mon, 23 Oct 2017 21:37:02 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/8IHgNvYbZH</dc:identifier>
</item>
<item>
<title>从头到尾彻底理解傅里叶变换算法（上）</title>
<link>http://www.jintiankansha.me/t/wCOjSNMxgp</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/wCOjSNMxgp</guid>
<description>&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;作者：July、dznlong  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;推荐阅读：&lt;span&gt;The Scientist and Engineer's Guide to Digital Signal Processing，By Steven W. Smith, Ph.D&lt;/span&gt;。此书地址：&lt;span&gt;http://www.dspguide.com/pdfbook.htm&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;------------------------------------&lt;br /&gt;从头到尾彻底理解傅里叶变换算法（上）&lt;br /&gt;前言&lt;br /&gt;第一部分、  DFT&lt;br /&gt;第一章、傅立叶变换的由来&lt;br /&gt;第二章、实数形式离散傅立叶变换（Real DFT）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从头到尾彻底理解傅里叶变换算法、下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第三章、复数&lt;br /&gt;第四章、复数形式离散傅立叶变换&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;前言：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br /&gt;“关于傅立叶变换，无论是书本还是在网上可以很容易找到关于傅立叶变换的描述，但是大都是些故弄玄虚的文章，太过抽象，尽是一些让人看了就望而生畏的公式的罗列，让人很难能够从感性上得到理解”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;那么，到底什么是傅里叶变换算法列?傅里叶变换所涉及到的公式具体有多复杂?&lt;br /&gt;傅里叶变换（Fourier transform）是一种线性的积分变换。因其基本思想首先由法国学者傅里叶系统地提出，所以以其名字来命名以示纪念。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;哦，傅里叶变换原来就是一种变换而已，只是这种变换是从时间转换为频率的变化。这下，你就知道了，傅里叶就是一种变换，一种什么变换列?就是一种从时间到频率的变化或其相互转化。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;ok，咱们再来总体了解下傅里叶变换，让各位对其有个总体大概的印象，也顺便看看傅里叶变换所涉及到的公式，究竟有多复杂：&lt;br /&gt;以下就是傅里叶变换的4种变体（摘自，维基百科）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;连续傅里叶变换&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br /&gt; 一般情况下，若“傅里叶变换”一词不加任何限定语，则指的是“连续傅里叶变换”。连续傅里叶变换将平方可积的函数f（t）表示成复指数函数的积分或级数形式。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibEd06NyXEcr1SSK6z5KLNoMQia1PcC8xvhvVG8nibBlQarrC01LZ8zlJQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.3037974683544304&quot; data-w=&quot;316&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这是将频率域的函数F(ω)表示为时间域的函数f（t）的积分形式。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;连续傅里叶变换的逆变换 (inverse Fourier transform)为：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibt5bsqof4klgqKWhA4s2SsdYicwlU9F8dX8kZOCL6my4EIZOQMx6KMNw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.24581005586592178&quot; data-w=&quot;358&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;即将时间域的函数f（t）表示为频率域的函数F(ω)的积分。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一般可称函数f（t）为原函数，而称函数F(ω)为傅里叶变换的像函数，原函数和像函数构成一个傅里叶变换对（transform pair）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除此之外，还有其它型式的变换对，以下两种型式亦常被使用。在通信或是信号处理方面，常以&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibVOy0h5OEpGicZMujUnXeF7OgZNLvw5bToe47LHKOPiaPywKOm5cgOBkQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.71875&quot; data-w=&quot;64&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;来代换，而形成新的变换对:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibCbKb9GlDARsOWvfa121oKfB6Mciar6ENdPwhnLTiaKhIen7icH47DyVaw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.4301994301994302&quot; data-w=&quot;351&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; 或者是因系数重分配而得到新的变换对：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAib1soB3NvuyVrheRGsaaZL3sUu2MaiaecbjRbwsHAEwBtBBTb6TiaxCVJA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.4144385026737968&quot; data-w=&quot;374&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;一种对连续傅里叶变换的推广称为分数傅里叶变换（Fractional Fourier Transform）。分数傅里叶变换(fractional Fourier transform,FRFT)指的就是傅里叶变换(Fourier transform,FT)的广义化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;分数傅里叶变换的物理意义即做傅里叶变换 a 次，其中 a 不一定要为整数；而做了分数傅里叶变换之后，信号或输入函数便会出现在介于时域(time domain)与频域(frequency domain)之间的分数域(fractional domain)。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当f（t）为偶函数（或奇函数）时，其正弦（或余弦）分量将消亡，而可以称这时的变换为余弦变换（cosine transform）或正弦变换（sine transform）.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;另一个值得注意的性质是，当f（t）为纯实函数时，F(−ω) = F*(ω)成立.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;傅里叶级数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;连续形式的傅里叶变换其实是傅里叶级数 (Fourier series)的推广，因为积分其实是一种极限形式的求和算子而已。对于周期函数，其傅里叶级数是存在的：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibkNl2fPlbDZUSqzj5Van69mKok4xxgZ1MrquxQ59VeF6g0WDejsflLQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.3623853211009174&quot; data-w=&quot;218&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;其中Fn为复幅度。对于实值函数，函数的傅里叶级数可以写成：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibsOL6k1IcibOibw4Dr0uVpHjhm3VtqVSt1x5007EGZZqa6IDSSVum385Q/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.19718309859154928&quot; data-w=&quot;355&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;其中an和bn是实频率分量的幅度。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;离散时域傅里叶变换&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;离散傅里叶变换是离散时间傅里叶变换（DTFT）的特例（有时作为后者的近似）。DTFT在时域上离散，在频域上则是周期的。DTFT可以被看作是傅里叶级数的逆变换。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;离散傅里叶变换&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;离散傅里叶变换（DFT），是连续傅里叶变换在时域和频域上都离散的形式，将时域信号的采样变换为在离散时间傅里叶变换（DTFT）频域的采样。在形式上，变换两端（时域和频域上）的序列是有限长的，而实际上这两组序列都应当被认为是离散周期信号的主值序列。即使对有限长的离散信号作DFT，也应当将其看作经过周期延拓成为周期信号再作变换。在实际应用中通常采用快速傅里叶变换以高效计算DFT。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;   为了在科学计算和数字信号处理等领域使用计算机进行傅里叶变换，必须将函数xn定义在离散点而非连续域内，且须满足有限性或周期性条件。这种情况下，使用离散傅里叶变换（DFT），将函数xn表示为下面的求和形式：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibMHf84QgdcobbibdLCFtXDvbb5NmGbtosjaIXfkSib88vRrJ7PT2ISQjg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.17114914425427874&quot; data-w=&quot;409&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  其中Xk是傅里叶幅度。直接使用这个公式计算的计算复杂度为O（n*n），而快速傅里叶变换（FFT）可以将复杂度改进为O（n*lgn）。（后面会具体阐述FFT是如何将复杂度降为O（n*lgn）的。）计算复杂度的降低以及数字电路计算能力的发展使得DFT成为在信号处理领域十分实用且重要的方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面，比较下上述傅立叶变换的4种变体，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAiboXEUpd63eicRIJgwKvhtfrwKJTQuxicprC2e1E1hPP9wRwAS4iaooJQAA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.3932038834951456&quot; data-w=&quot;412&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如上，容易发现：函数在时（频）域的离散对应于其像函数在频（时）域的周期性。反之连续则意味着在对应域的信号的非周期性。也就是说，时间上的离散性对应着频率上的周期性。同时，注意，离散时间傅里叶变换，时间离散，频率不离散，它在频域依然是连续的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果，读到此，你不甚明白，大没关系，不必纠结于以上4种变体，继续往下看，你自会豁然开朗。（有什么问题，也恳请提出，或者批评指正）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;ok， 本文，接下来，由傅里叶变换入手，后重点阐述离散傅里叶变换、快速傅里叶算法，到最后彻底实现FFT算法，全篇力求通俗易懂、阅读顺畅，教你从头到尾彻底理解傅里叶变换算法。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;由于傅里叶变换，也称傅立叶变换，下文所称为傅立叶变换，同一个变换，不同叫法，读者不必感到奇怪。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第一部分、DFT&lt;/span&gt;&lt;span&gt;&lt;br /&gt;第一章、傅立叶变换的由来&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;要理解傅立叶变换，先得知道傅立叶变换是怎么变换的，当然，也需要一定的高等数学基础，最基本的是级数变换，其中傅立叶级数变换是傅立叶变换的基础公式。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;一、傅立叶变换的提出&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;傅立叶是一位法国数学家和物理学家，原名是Jean Baptiste Joseph Fourier(1768-1830), Fourier于1807年在法国科学学会上发表了一篇论文，论文里描述运用正弦曲线来描述温度分布，论文里有个在当时具有争议性的决断：任何连续周期信号都可以由一组适当的正弦曲线组合而成。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当时审查这个论文拉格朗日坚决反对此论文的发表，而后在近50年的时间里，拉格朗日坚持认为傅立叶的方法无法表示带有棱角的信号，如在方波中出现非连续变化斜率。直到拉格朗日死后15年这个论文才被发表出来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;谁是对的呢？拉格朗日是对的：正弦曲线无法组合成一个带有棱角的信号。但是，我们可以用正弦曲线来非常逼近地表示它，逼近到两种表示方法不存在能量差别，基于此，傅立叶是对的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;为什么我们要用正弦曲线来代替原来的曲线呢？如我们也还可以用方波或三角波来代替呀，分解信号的方法是无穷多的，但分解信号的目的是为了更加简单地处理原来的信号。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用正余弦来表示原信号会更加简单，因为正余弦拥有原信号所不具有的性质：正弦曲线保真度。一个正余弦曲线信号输入后，输出的仍是正余弦曲线，只有幅度和相位可能发生变化，但是频率和波的形状仍是一样的。且只有正余弦曲线才拥有这样的性质，正因如此我们才不用方波或三角波来表示。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、傅立叶变换分类&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;    根据原信号的不同类型，我们可以把傅立叶变换分为四种类别：&lt;br /&gt;1、非周期性连续信号        傅立叶变换（Fourier Transform） &lt;br /&gt;2、周期性连续信号           傅立叶级数(Fourier Series) &lt;br /&gt;3、非周期性离散信号        离散时域傅立叶变换（Discrete Time Fourier Transform） &lt;br /&gt;4、周期性离散信号           离散傅立叶变换(Discrete Fourier Transform) &lt;br /&gt;       下图是四种原信号图例（从上到下，依次是FT，FS，DTFT，DFT）： &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibYhPI3nQQRV7EOtba62ib4bACFHibyLaLRedEic3y2a9sicWTC5pMNMs2xQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.7007194244604317&quot; data-w=&quot;695&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这四种傅立叶变换都是针对正无穷大和负无穷大的信号，即信号的的长度是无穷大的，我们知道这对于计算机处理来说是不可能的，那么有没有针对长度有限的傅立叶变换呢？没有。因为正余弦波被定义成从负无穷小到正无穷大，我们无法把一个长度无限的信号组合成长度有限的信号。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;面对这种困难，方法是：把长度有限的信号表示成长度无限的信号。如，可以把信号无限地从左右进行延伸，延伸的部分用零来表示，这样，这个信号就可以被看成是&lt;strong&gt;&lt;span&gt;非周期性&lt;/span&gt;&lt;/strong&gt;离散信号，我们可以用到&lt;strong&gt;&lt;span&gt;离散时域傅立叶变换（DTF&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;T）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;的方法。也可以把信号用复制的方法进行延伸，这样信号就变成了&lt;span&gt;&lt;strong&gt;周期性&lt;/strong&gt;&lt;/span&gt;离散信号，这时我们就可以用&lt;strong&gt;&lt;span&gt;离散傅立叶变换方法（DFT）&lt;/span&gt;&lt;/strong&gt;进行变换。本章我们要讲的是离散信号，对于连续信号我们不作讨论，因为计算机只能处理离散的数值信号，我们的最终目的是运用计算机来处理信号的。&lt;br /&gt; &lt;br /&gt;但是对于非周期性的信号，我们需要用无穷多不同频率的正弦曲线来表示，这对于计算机来说是不可能实现的。所以对于离散信号的变换只有离散傅立叶变换（DFT）才能被适用，对于计算机来说只有离散的和有限长度的数据才能被处理，对于其它的变换类型只有在数学演算中才能用到，在计算机面前我们只能用DFT方法，后面我们要理解的也正是DFT方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;这里要理解的是我们使用周期性的信号目的是为了能够用数学方法来解决问题，至于考虑周期性信号是从哪里得到或怎样得到是无意义的。&lt;br /&gt; &lt;br /&gt;每种傅立叶变换都分成实数和复数两种方法，对于实数方法是最好理解的，但是复数方法就相对复杂许多了，需要懂得有关复数的理论知识，不过，如果理解了实数离散傅立叶变换(real DFT)，再去理解复数傅立叶变换就更容易了，所以我们先把复数的傅立叶变换放到一边去，先来理解实数傅立叶变换，在后面我们会先讲讲关于复数的基本理论，然后在理解了实数傅立叶变换的基础上再来理解复数傅立叶变换。&lt;br /&gt; &lt;br /&gt;还有，这里我们所要说的变换(transform)虽然是数学意义上的变换，但跟函数变换是不同的，函数变换是符合一一映射准则的，对于离散数字信号处理（DSP），有许多的变换：傅立叶变换、拉普拉斯变换、Z变换、希尔伯特变换、离散余弦变换等，这些都扩展了函数变换的定义，允许输入和输出有多种的值，简单地说变换就是把一堆的数据变成另一堆的数据的方法。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;三、一个关于实数离散傅立叶变换(Real DFT)的例子&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  先来看一个变换实例，下图是一个原始信号图像：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibT5hCEzWEgsdpickJFnIxnQBblrVx7Pblq9HSd9XCtutC7pLzq1TYThQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.751269035532995&quot; data-w=&quot;394&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;       &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个信号的长度是16，于是可以把这个信号分解9个余弦波和9个正弦波（一个长度为N的信号可以分解成N/2+1个正余弦信号，这是为什么呢？结合下面的18个正余弦图,我想从计算机处理精度上就不难理解，一个长度为N的信号，最多只能有N/2+1个不同频率，再多的频率就超过了计算机所能所处理的精度范围），如下图：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;9个余弦信号：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAib0DibXX5lOARbgTQp8RhR2K8TqMiaia6V8JEz60nwP27EFRSOnAzdUXIJw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.6831683168316832&quot; data-w=&quot;707&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 9个正弦信号：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibm470wetXktiad81Njls446xP8CnXtQwMqjLxSmJKCXTXOKEYwDnbD5w/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.6860795454545454&quot; data-w=&quot;704&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;把以上所有信号相加即可得到原始信号，至于是怎么分别变换出9种不同频率信号的，我们先不急，先看看对于以上的变换结果，在程序中又是该怎么表示的，我们可以看看下面这个示例图：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibYGYqfibMevfHx82cWpyRsMuw9oEA3ibiauLAI1Vxgiaofq7opHnuPuEuuA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.46480938416422285&quot; data-w=&quot;682&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt; &lt;br /&gt;上图中左边表示时域中的信号，右边是频域信号表示方法，&lt;br /&gt;从左向右，--&amp;gt;，表示正向转换(Forward DFT)，从右向左，&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用小写x[]表示信号在每个时间点上的幅度值数组, 用大写X[]表示每种频率的副度值数组（即时间x--&amp;gt;频率X）, &lt;br /&gt;因为有N/2+1种频率，所以该数组长度为N/2+1，&lt;br /&gt;X[]数组又分两种，一种是表示余弦波的不同频率幅度值：Re X[]，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;另一种是表示正弦波的不同频率幅度值：Im X[]，&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Re是实数(Real)的意思，Im是虚数(Imagine)的意思，采用复数的表示方法把正余弦波组合起来进行表示，但这里我们不考虑复数的其它作用，只记住是一种组合方法而已，目的是为了便于表达（在后面我们会知道，复数形式的傅立叶变换长度是N，而不是N/2+1）。如此，再回过头去，看上面的正余弦各9种频率的变化，相信，问题不大了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;第二章、实数形式离散傅立叶变换（Real DFT）&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br /&gt;上一章，我们看到了一个实数形式离散傅立叶变换的例子，通过这个例子能够让我们先对傅立叶变换有一个较为形象的感性认识，现在就让我们来看看实数形式离散傅立叶变换的正向和逆向是怎么进行变换的。在此，我们先来看一下频率的多种表示方法。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;一、   频域中关于频率的四种表示方法&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; 1、序号表示方法，根据时域中信号的样本数取0 ~ N/2，用这种方法在程序中使用起来可以更直接地取得每种频率的幅度值，因为频率值跟数组的序号是一一对应的: X[k]，取值范围是0 ~ N/2；&lt;br /&gt;2、分数表示方法，根据时域中信号的样本数的比例值取0 ~ 0.5: X[ƒ]，ƒ = k/N，取值范围是0 ~ 1/2；&lt;br /&gt;3、用弧度值来表示，把ƒ乘以一个2π得到一个弧度值，这种表示方法叫做自然频率(natural frequency)：X[ω]，ω = 2πƒ = 2πk/N，取值范围是0 ~ π；&lt;br /&gt;4、以赫兹(Hz)为单位来表示，这个一般是应用于一些特殊应用，如取样率为10 kHz表示每秒有10,000个样本数：取值范围是0到取样率的一半。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;二、   DFT基本函数&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; ck[i] = cos(2πki/N)&lt;br /&gt;sk[i] = sin(2πki/N)&lt;br /&gt;其中k表示每个正余弦波的频率，如为2表示在0到N长度中存在两个完整的周期，10即有10个周期，如下图：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibDhGROsHTpqTib8HWhVLKxQ84EyhcbK6GJFCZwk6hqxXISCicBVcDDuibQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.6312684365781711&quot; data-w=&quot;678&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;上图中至于每个波的振幅(amplitude)值(Re X[k],Im X[k])是怎么算出来的,这个是DFT的核心，也是最难理解的部分，我们先来看看如何把分解出来的正余弦波合成原始信号(Inverse DFT)。&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;strong&gt;三、   合成运算方法(Real Inverse DFT)&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt; DFT合成等式（合成原始&lt;strong&gt;&lt;span&gt;时间&lt;/span&gt;&lt;/strong&gt;信号，频率--&amp;gt;时间，逆向变换）：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibqV81Y8FbQKFyibpU9wfX9SqFAZMQn3Da3QkwJWyuYfiaezpmm69sjzfg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.12461538461538461&quot; data-w=&quot;650&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果有学过傅立叶级数，对这个等式就会有似曾相识的感觉，不错！这个等式跟傅立叶级数是非常相似的：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibqDgtxbLVRqo124wWnILxOnEves72XLhuDUfkMR64V89ibb7qWFL7AdA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.13356164383561644&quot; data-w=&quot;584&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当然，差别是肯定是存在的，因为这两个等式是在两个不同条件下运用的，至于怎么证明DFT合成公式，这个我想需要非常强的高等数学理论知识了，这是研究数学的人的工作，对于普通应用者就不需要如此的追根究底了，但是傅立叶级数是好理解的，我们起码可以从傅立叶级数公式中看出DFT合成公式的合理性。&lt;br /&gt;                                  _            _&lt;br /&gt;DFT合成等式中的Im X[k]和Re X[k]&lt;span&gt;跟之前提到的&lt;/span&gt;Im X[k]和Re X[k]是不一样的，下面是转换方法（&lt;span&gt;关于此公式的解释，见下文&lt;/span&gt;）:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAib6VUiayZDUlw4rYcvNCwwoDWib5gu1sfIPEjhicABDrP4icnWp7ctQYSEYw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.49640287769784175&quot; data-w=&quot;278&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       &lt;br /&gt;但k等于0和N/2时,实数部分的计算要用下面的等式:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAib0hPKjXJ8LUysDQxM63LV8lusd4zBvdW0eXE81aYIg4eCqDnvEicicAQw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.47183098591549294&quot; data-w=&quot;284&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;              &lt;br /&gt;上面四个式中的N是时域中点的总数，k是从0到N/2的序号。&lt;br /&gt;为什么要这样进行转换呢？这个可以从频谱密度(spectral density)得到理解，如下图就是个频谱图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAiba8ia3XXOKXdqibPFCZXFFoVCQvlcA1fcOswD74DlkTNpRwUM7RaGbD6w/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.7566909975669099&quot; data-w=&quot;411&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       &lt;br /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  这是一个频谱图，横坐标表示频率大小，纵坐标表示振幅大小，原始信号长度为N（这里是32），经DFT转换后得到的17个频率的频谱，频谱密度表示每单位带宽中为多大的振幅，那么带宽是怎么计算出来的呢？看上图，除了头尾两个，其余点的所占的宽度是2/N，这个宽度便是每个点的带宽，头尾两个点的带宽是1/N,而Im X[k]和Re X[k]表示的是频谱密度，即每一个单位带宽的振幅大小，但&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibemqf8Kquib38mDGlYGf4SLqlv8EmxsIOoKZTMhAZGxG6fSsFHmDJ9hQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.1487603305785124&quot; data-w=&quot;121&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;表示2/N（或1/N）带宽的振幅大小，所以&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibkwkKeFITND8FcloUSxrGrgBbHXcDHZzSrLffaH7NNR8x6ryjwzHicbA/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.1487603305785124&quot; data-w=&quot;121&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;分别应当是Im X[k]和Re X[k]的2/N（或1/N）。&lt;br /&gt; &lt;br /&gt;频谱密度就象物理中物质密度，原始信号中的每一个点就象是一个混合物，这个混合物是由不同密度的物质组成的，混合物中含有的每种物质的质量是一样的，除了最大和最小两个密度的物质外，这样我们只要把每种物质的密度加起来就可以得到该混合物的密度了，又该混合物的质量是单位质量，所以得到的密度值跟该混合物的质量值是一样的。&lt;br /&gt; &lt;br /&gt;至于为什么虚数部分是负数，这是为了跟复数DFT保持一致，这个我们将在后面会知道这是数学计算上的需要（Im X[k]在计算时就已经加上了一个负号（&lt;/span&gt;&lt;span&gt;稍&lt;/span&gt;&lt;span&gt;&lt;span&gt;后，由下文，便可知&lt;/span&gt;），&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibwiagqmHAKrhhB21uWliaHRCsg41YNfXbGDXFCWgdBJ5NVsdg1uSiaDnyQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.4166666666666667&quot; data-w=&quot;48&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;再加上负号，结果便是正的，等于没有变化）。&lt;br /&gt; &lt;br /&gt;如果已经得到了DFT结果，这时要进行逆转换，即合成原始信号，则可按如下步骤进行转换：&lt;br /&gt;1、先根据上面四个式子计算得出&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibIAQtylQe5gay31fg7crnD6CwJNjBZ9xNmicluRpHSCBDtQ3qwjgbARg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.1791044776119403&quot; data-w=&quot;134&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;的值；&lt;br /&gt;2、再根据DFT合成等式得到原始信号数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面是用BASIC语言来实现的转换源代码：&lt;br /&gt;100 ‘DFT逆转换方法&lt;br /&gt;110 ‘/XX[]数组存储计算结果（时域中的原始信号）&lt;br /&gt;120 ‘/REX[]数组存储频域中的实数分量，IMX[]为虚分量&lt;br /&gt;130 ‘&lt;br /&gt;140 DIM XX[511]&lt;br /&gt;150 DIM REX[256]&lt;br /&gt;160 DIM IMX[256]&lt;br /&gt;170 ‘&lt;br /&gt;180 PI = 3.14159265&lt;br /&gt;190 N% = 512&lt;br /&gt;200 ‘&lt;br /&gt;210 GOSUB XXXX ‘转到子函数去获取REX[]和IMX[]数据&lt;br /&gt;220 ‘&lt;br /&gt;230 ‘&lt;br /&gt;240 ‘&lt;br /&gt;250 FOR K% = 0 TO 256&lt;br /&gt;260   REX[K%] = REX[K%] / (N%/2)&lt;br /&gt;270   IMX[K%] = -IMX[K%] / (N%/2)&lt;br /&gt;280 NEXT k%&lt;br /&gt;290 ‘&lt;br /&gt;300 REX[0] = REX[0] / N&lt;br /&gt;310 REX[256] = REX[256] / N&lt;br /&gt;320 ‘&lt;br /&gt;330 ‘ 初始化XX[]数组&lt;br /&gt;340 FOR I% = 0 TO 511&lt;br /&gt;350   XX[I%] = 0&lt;br /&gt;360 NEXT I%&lt;br /&gt;370 ‘&lt;br /&gt;380 ‘&lt;br /&gt;390 ‘&lt;br /&gt;400 ‘&lt;br /&gt;410 ‘&lt;br /&gt;420 FOR K% =0 TO 256&lt;br /&gt;430   FOR I%=0 TO 511&lt;br /&gt;440 ‘&lt;br /&gt;450      XX[I%] = XX[I%] + REX[K%] * COS(2 * PI * K% * I% / N%) &lt;br /&gt;460      XX[I%] = XX[I%] + IMX[K%] * SIN(2 * PI * K% * I% / N%)&lt;br /&gt;470 ‘&lt;br /&gt;480   NEXT I%&lt;br /&gt;490 NEXT K%&lt;br /&gt;500 ‘&lt;br /&gt;510 END&lt;br /&gt; &lt;br /&gt;上面代码中420至490换成如下形式也许更好理解，但结果都是一样的：&lt;br /&gt;420 FOR I% =0 TO 511&lt;br /&gt;430   FOR K%=0 TO 256&lt;br /&gt;440 ‘&lt;br /&gt;450      XX[I%] = XX[I%] + REX[K%] * COS(2 * PI * K% * I% / N%) &lt;br /&gt;460      XX[I%] = XX[I%] + IMX[K%] * SIN(2 * PI * K% * I% / N%)&lt;br /&gt;470 ‘&lt;br /&gt;480   NEXT I%&lt;br /&gt;490 NEXT K%&lt;br /&gt; &lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;四、   分解运算方法（DFT）&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt; 有三种完全不同的方法进行DFT：&lt;span&gt;一种方法是通过联立方程进行求解,&lt;/span&gt; 从代数的角度看，要从N个已知值求N个未知值，需要N个联立方程，且N个联立方程必须是线性独立的，但这是这种方法计算量非常的大且极其复杂，所以很少被采用；&lt;span&gt;第二种方法是利用信号的相关性（correlation）进行计算&lt;/span&gt;，这个是我们后面将要介绍的方法；&lt;span&gt;第三种方法是快速傅立叶变换（FFT）&lt;/span&gt;，这是一个非常具有创造性和革命性的的方法，因为它大大提高了运算速度，使得傅立叶变换能够在计算机中被广泛应用，但这种算法是根据复数形式的傅立叶变换来实现的，它把N个点的信号分解成长度为N的频域，这个跟我们现在所进行的实域DFT变换不一样，而且这种方法也较难理解，这里我们先不去理解，等先理解了复数DFT后，再来看一下FFT。有一点很重要，那就是这三种方法所得的变换结果是一样的，经过实践证明，当频域长度为32时，利用相关性方法进行计算效率最好，否则FFT算法效率较高。现在就让我们来看一下相关性算法。&lt;br /&gt; &lt;br /&gt;利用第一种方法、信号的相关性(correlation)可以从噪声背景中检测出已知的信号，我们也可以利用这个方法检测信号波中是否含有某个频率的信号波：把一个待检测信号波乘以另一个信号波，得到一个新的信号波，再把这个新的信号波所有的点进行相加，从相加的结果就可以判断出这两个信号的相似程度。如下图：&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkzgmfzVtZpjH9MNkI269jAib35Ih0Vp4IqLwsN9QKPrhwI5oJOA3WcncO8lShIlw6Clb5GRlxZPAmA/0?wx_fmt=jpeg&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;1.1671732522796352&quot; data-w=&quot;658&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;上面a和 b两个图是待检测信号波，图a很明显可以看出是个3个周期的正弦信号波，图b的信号波则看不出是否含有正弦或余弦信号，图c和d都是个3个周期的正弦信号波，图e和f分别是a、b两图跟c、d两图相乘后的结果，图e所有点的平均值是0.5，说明信号a含有振幅为1的正弦信号c，但图f所有点的平均值是0，则说明信号b不含有信号d。这个就是通过信号相关性来检测是否含有某个信号的方法。&lt;br /&gt; &lt;br /&gt;第二种方法：相应地，我也可以通过把输入信号和每一种频率的正余弦信号进行相乘（关联操作），从而得到原始信号与每种频率的关联程度（即总和大小），这个结果便是我们所要的傅立叶变换结果，下面两个等式便是我们所要的计算方法：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibyopD0UdfWlNX14ZVMk9cqYUUHpJ2L2mNSWpzvjfBnCvgyny1cNyQ7w/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.4148936170212766&quot; data-w=&quot;376&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第二个式子中加了个负号，是为了保持复数形式的一致，&lt;span&gt;前面我们知道在计算&lt;/span&gt;&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibvJ0rGAeRYHIXksT5UvptibKPslyUNicicOgZGug3ibEGYp9IJcCatqB4YQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.425531914893617&quot; data-w=&quot;47&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;时又加了个负号，&lt;/span&gt;&lt;span&gt;所以这只是个形式的问题，并没有实际意义，你也可以把负号去掉，并在计算&lt;/span&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibvJ0rGAeRYHIXksT5UvptibKPslyUNicicOgZGug3ibEGYp9IJcCatqB4YQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.425531914893617&quot; data-w=&quot;47&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt;时也不加负号。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  这里有一点必须明白一个正交的概念：两个函数相乘，如果结果中的每个点的总和为0，则可认为这两个函数为正交函数。要确保关联性算法是正确的，则必须使得跟原始信号相乘的信号的函数形式是正交的，我们知道所有的正弦或余弦函数是正交的，这一点我们可以通过简单的高数知识就可以证明它，所以我们可以通过关联的方法把原始信号分离出正余弦信号。当然，其它的正交函数也是存在的，如：方波、三角波等形式的脉冲信号，所以原始信号也可被分解成这些信号，但这只是说可以这样做，却是没有用的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;span&gt;下面是实域傅立叶变换的BASIC语言代码：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkzgmfzVtZpjH9MNkI269jAibRyFkBtfDXnePxpjiaaUrsicIholbmfLQI7g8BUia69kAK3CFOWwroVAFg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.8029197080291971&quot; data-w=&quot;685&quot; data-type=&quot;png&quot; /&gt;&lt;span&gt; &lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到此为止，我们对傅立叶变换便有了感性的认识了吧。但要记住，这只是在实域上的离散傅立叶变换，其中虽然也用到了复数的形式，但那只是个替代的形式，并无实际意义，现实中一般使用的是复数形式的离散傅立叶变换，且快速傅立叶变换是根据复数离散傅立叶变换来设计算法的，在后面我们先来复习一下有关复数的内容，然后再在理解实域离散傅立叶变换的基础上来理解复数形式的离散傅立叶变换。&lt;/span&gt;&lt;/p&gt;
&lt;pre accuse=&quot;aContent&quot; class=&quot;&quot; readability=&quot;11&quot;&gt;
&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;-------------&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;----&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;明明共同关注公众号，彼此却互不认识；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;明明具有相同的爱好，却无缘相识；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;有没有觉得这就是上帝给我们的一个bug！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;想不想认识更多写程序的小伙伴？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;C++，Java，VB……应有尽有。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;还等什么？赶快上车加入我们吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(･ิϖ･ิ)っ算法与数学之美-计算机粉丝群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我们在这里等你哟&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkxUQ5d0U9iaj39zR1xvmIghuQqNYBAabQNdiazRVHuqB8AaPqKl6wUhFqf3r7jdwkibyONELQdY6G8Vw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; width=&quot;auto&quot; /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;
        &lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域。&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;</description>
<pubDate>Mon, 23 Oct 2017 03:22:15 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/wCOjSNMxgp</dc:identifier>
</item>
</channel>
</rss>