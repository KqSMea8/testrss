<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>“40岁前没摸过电脑”的少数民族院士，让千万少数民族群众迈入数字时代</title>
<link>http://www.jintiankansha.me/t/M1MpS9cRmm</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/M1MpS9cRmm</guid>
<description>&lt;p&gt;吾守尔清楚地记得，1984年在上海交通大学进修时，当时计算机才刚刚实现操作系统从英文到中文的转化。他就想，能不能用少数民族语言实现计算机信息处理、控制和应用？&lt;/p&gt;&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;   &lt;/p&gt;
&lt;p&gt;新疆自古就是一个多民族聚居的地方，多元文化的背景下，少数民族语言不仅是日常生活重要的交流工具，更作为民族文化的载体承托着各民族绵长的历史和过往的繁荣。新疆有超过1000万的少数民族用维哈柯文等本民族的语言文字进行交流和沟通，能实现少数民族语言的信息化意义重大。&lt;/p&gt;

&lt;p&gt;然而，&lt;span&gt;&lt;strong&gt;操作系统从英文到中文的转换，凝聚着许许多多国内顶尖专家学者的心血。&lt;/strong&gt;&lt;/span&gt;在那个条件下，要用维吾尔、哈萨克、柯尔克孜等少数民族语言操控电脑、进而让上千万少数民族同胞进入信息化时代，简直是天方夜谭。&lt;/p&gt;

&lt;p&gt;回到新疆大学后，吾守尔第一时间向校领导汇报了自己的想法，很快便得到了校领导的大力支持。不久后，由学校出资3万多元购买的全校第一台微型计算机投入使用。&lt;/p&gt;

&lt;p&gt;靠着这台计算机，吾守尔和同事们开始了艰辛的研究。先学习汉语，再学习英语。从无线电技术入门到计算机应用基础知识再到更深层次的理论学习、实践锻炼。&lt;/p&gt;

&lt;p&gt;在吾守尔之前，维语别说没有输入法，甚至连字母在键盘上的键位布局，都缺乏标准。甚至连技术团队本身，都是吾守尔一手培养搭建的。&lt;span&gt;&lt;strong&gt;吾守尔边学边干，艰苦摸索，每一步都走得着实辛苦。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;上世纪80年代，电脑系统还是以DOS系统为主。吾守尔同事一起剖析了DOS系统的数百个功能模块，并从内核开始加以修改。用了两个月的时间，完成了维哈柯文字的录入、显示、编辑和排版。这是计算机屏幕上第一次出现少数民族语言文字，引起了社会上的高度重视。&lt;/p&gt;

&lt;p&gt;对于吾守尔来说，研究文字处理系统，不仅需要技术过硬，更难的是如何过好语言关。在上大学之前，吾守尔很少接触汉语，直到重回新疆大学，他的汉语水平仍很有限，甚至还不及英语。但当时，许多资料都是汉语和英语的，他不得不一边研究技术，一边学习语言。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;strong&gt;986年新疆维吾尔自治区人大会议上，吾守尔的多语种的会议管理系统正式亮相。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这在这个系统里输入与会人员的姓名，电脑就能搜索出他的证件编号、入住的房间等信息，还能将代表资料打印出来。现在，这样的系统早已普及，功能也完善得多，但在当时，这是很了不起的一件事，以至于有代表惊呼：这是神话吗？&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 23 Sep 2018 11:16:05 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/M1MpS9cRmm</dc:identifier>
</item>
<item>
<title>Python 3 入门，看这篇就够了！</title>
<link>http://www.jintiankansha.me/t/p8DaEKSf1h</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/p8DaEKSf1h</guid>
<description>&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 简介 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Python 是一种高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Python 由 Guido van Rossum 于 1989 年底在荷兰国家数学和计算机科学研究所发明，第一个公开发行版发行于 1991 年。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 特点 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;











&lt;h2&gt;&lt;strong&gt;&lt;span&gt; 基础语法 &lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;运行 Python&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;交互式解释器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;在命令行窗口执行python后，进入 Python 的交互式解释器。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;exit() 或 Ctrl + D 组合键退出交互式解释器。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;命令行脚本&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;在命令行窗口执行python script-file.py，以执行 Python 脚本文件。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;指定解释器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;如果在 Python 脚本文件首行输入#!/usr/bin/env python，那么可以在命令行窗口中执行/path/to/script-file.py以执行该脚本文件。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;注：该方法不支持 Windows 环境。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span&gt;编码&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;默认情况下，3.x 源码文件都是 UTF-8 编码，字符串都是 Unicode 字符。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;也可以手动指定文件编码：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;或者&lt;/span&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;# encoding: utf-8&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;注意&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: 该行标注必须位于文件第一行。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;标识符&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;



&lt;p&gt;&lt;span&gt;注：从 3.x 开始，非 ASCII 标识符也是允许的，但不建议。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;保留字&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;保留字即关键字，我们不能把它们用作任何标识符名称。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;&quot;&gt;import&lt;/span&gt; keyword&lt;br /&gt;&lt;span class=&quot;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;keyword.kwlist&lt;br /&gt;[&lt;span class=&quot;&quot;&gt;'False'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'None'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'True'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'and'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'as'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'assert'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'break'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'class'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'continue'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'def'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'del'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'elif'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'else'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'except'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'finally'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'for'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'from'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'global'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'if'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'import'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'in'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'is'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'lambda'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'nonlocal'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'not'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'or'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'pass'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'raise'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'return'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'try'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'while'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'with'&lt;/span&gt;&lt;/code&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
, &lt;span class=&quot;&quot;&gt;'yield'&lt;/span&gt;]
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;注释&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;单行注释采用&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;，多行注释采用&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;或&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;# 这是单行注释&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;'''&lt;br /&gt;这是多行注释&lt;p&gt;这是多行注释&lt;br /&gt;'''&lt;br /&gt;&lt;/p&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;&quot;&quot;&quot;&lt;br /&gt;这也是多行注释&lt;p&gt;这也是多行注释&lt;br /&gt;&quot;&quot;&quot;&lt;/p&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;行与缩进&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;Python 最具特色的就是使用缩进来表示代码块，不需要使用大括号 &lt;/span&gt;&lt;span&gt;{}&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数，缩进不一致，会导致运行错误。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;多行语句&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;Python 通常是一行写完一条语句。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但如果语句很长，我们可以使用反斜杠\来实现多行语句。&lt;/span&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;total = item_one + \&lt;br /&gt;item_two + \&lt;br /&gt;item_three&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt; []&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; {}&lt;/span&gt;&lt;span&gt;, 或&lt;/span&gt;&lt;span&gt; ()&lt;/span&gt;&lt;span&gt; 中的多行语句，不需要使用反斜杠&lt;/span&gt;&lt;span&gt;\&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span&gt;空行&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;类和函数入口之间也用一行空行分隔，以突出函数入口的开始。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;空行与代码缩进不同，空行并不是 Python 语法的一部分。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;书写时不插入空行，Python 解释器运行也不会出错。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;记住&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：空行也是程序代码的一部分。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;等待用户输入&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;input函数&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;可以实现等待并接收命令行中的用户输入。&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;content = input(&lt;span class=&quot;&quot;&gt;&quot;\n\n请输入点东西并按 Enter 键\n&quot;&lt;/span&gt;)&lt;br /&gt;print(content)&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;同一行写多条语句&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;Python 可以在同一行中使用多条语句，语句之间使用分号&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;分割。&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;import&lt;/span&gt; sys; x = &lt;span class=&quot;&quot;&gt;'hello world'&lt;/span&gt;; sys.stdout.write(x + &lt;span class=&quot;&quot;&gt;'\n'&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;多个语句构成代码组&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;缩进相同的一组语句构成一个代码块，我们称之代码组。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;像&lt;strong&gt;if、while、def&lt;/strong&gt;和&lt;strong&gt;class&lt;/strong&gt;这样的复合语句，首行以关键字开始，以冒号&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;结束，该行之后的一行或多行代码构成代码组。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们将首行及后面的代码组称为一个子句&lt;/span&gt;&lt;span&gt;(clause)&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;print 输出&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;print 默认输出是换行的，如果要实现不换行需要在变量末尾加上&lt;strong&gt;end=&quot;&quot;&lt;/strong&gt;或别的非换行符字符串：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;print(&lt;span class=&quot;&quot;&gt;'123'&lt;/span&gt;) &lt;span class=&quot;&quot;&gt;# 默认换行&lt;/span&gt;&lt;br /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
print(&lt;span class=&quot;&quot;&gt;'123'&lt;/span&gt;, end = &lt;span class=&quot;&quot;&gt;&quot;&quot;&lt;/span&gt;) &lt;span class=&quot;&quot;&gt;# 不换行&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;import 与 from…import&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;在 Python 用&lt;strong&gt; import &lt;/strong&gt;或者&lt;strong&gt; from...import &lt;/strong&gt;来导入相应的模块。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;将整个模块导入，格式为：&lt;strong&gt;import module_name&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从某个模块中导入某个函数,格式为：&lt;strong&gt;from module_name import func1&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从某个模块中导入多个函数,格式为：&lt;strong&gt;from module_name import func1, func2, func3&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;将某个模块中的全部函数导入，格式为：&lt;strong&gt;from module_name import *&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;运算符&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span&gt;算术运算符&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;table width=&quot;677&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;+&lt;/td&gt;
&lt;td&gt;加&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;-&lt;/td&gt;
&lt;td&gt;减&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;*&lt;/td&gt;
&lt;td&gt;乘&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;/&lt;/td&gt;
&lt;td&gt;除&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;%&lt;/td&gt;
&lt;td&gt;取模&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;**&lt;/td&gt;
&lt;td&gt;幂&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;//&lt;/td&gt;
&lt;td&gt;取整除&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;strong&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;比较运算符&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;=&amp;lt;&amp;gt;&lt;/p&gt;
&lt;table width=&quot;677&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;==&lt;/td&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;!=&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;&amp;lt;&amp;lt;/td&amp;gt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;&amp;lt;=&amp;lt; td=&quot;&quot;&amp;gt;&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;赋值运算符&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;&lt;table width=&quot;677&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;=&lt;/td&gt;
&lt;td&gt;简单的赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;+=&lt;/td&gt;
&lt;td&gt;加法赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;-=&lt;/td&gt;
&lt;td&gt;减法赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;*=&lt;/td&gt;
&lt;td&gt;乘法赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;/=&lt;/td&gt;
&lt;td&gt;除法赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;%=&lt;/td&gt;
&lt;td&gt;取模赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;**=&lt;/td&gt;
&lt;td&gt;幂赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;//=&lt;/td&gt;
&lt;td&gt;取整除赋值运算符&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;位运算符&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.43861892583120204&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJ5dS7gxiccqcC97db2ja87B4fUYvutb1drTAogWiclr0rR3I08wlUcbayo5S1eRsqJK2HbwTPTblIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span&gt;逻辑运算符&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.21944809461235218&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJ5dS7gxiccqcC97db2ja87BLjdGLeWx5iayNQK0fqmFJKR6Jsh9LDNa8RGMUsG8rIykoqmeDs8x1ibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;761&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span&gt;成员运算符&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-croporisrc=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQR5kLRDq6rJCVmgUVLCI0GZutPVGlUmRNrEAYf6GxqZIrrash6hKfx6w/640?wx_fmt=png&quot; data-cropx1=&quot;8&quot; data-cropx2=&quot;579&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;127&quot; data-ratio=&quot;0.22202797202797203&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/hSic13gnCvrul7e6S88LSiccKic1ZicrPaFwqFnh98wVCqbst3gI1wcD71m5NjC3BzMcsvdaH1c0QSzKF4nanRpDfA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;572&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;身份运算符&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.28974358974358977&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRric3O2zSpB4YojrdaLJGk65o1D5GrOa7vyibplNwAhBnUvrxVoX9SeVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;780&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;运算符优先级&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;hr /&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.87751677852349&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRicZtoReHiarOnyaSAvWgQbia4MCv9OCMxwHozicQI4dIl58Wib3Ofx4FvUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;596&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;具有相同优先级的运算符将从左至右的方式依次进行，用小括号()可以改变运算顺序。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;变量&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;变量在使用前必须先”定义”（即赋予变量一个值），否则会报错：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;name&lt;br /&gt;Traceback (most recent call last):&lt;br /&gt;File &lt;span class=&quot;&quot;&gt;&quot;&quot;&lt;/span&gt;, line &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; &lt;br /&gt;NameError: name &lt;span class=&quot;&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;&quot;&gt;not&lt;/span&gt; defined&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数据类型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;布尔(bool)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;只有 &lt;strong&gt;True&lt;/strong&gt; 和 &lt;strong&gt;False&lt;/strong&gt; 两个值，表示真或假。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数字(number)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;整型(int)&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;整数值，可正数亦可复数，无小数。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;3.x 整型是没有限制大小的，可以当作 Long 类型使用，所以 3.x 没有 2.x 的 Long 类型。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;浮点型(float)&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;浮点型由整数部分与小数部分组成。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 10^2 = 250）&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;复数(complex)&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;复数由实数部分和虚数部分构成，可以用a + bj，或者complex(a,b)表示。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;复数的实部 a 和虚部 b 都是浮点型。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;数字运算&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;



&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;p&gt;&lt;span&gt;      如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符 //。&lt;/span&gt;&lt;/p&gt;



&lt;h4&gt;&lt;strong&gt;&lt;span&gt;数学函数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;注&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：以下函数的使用，需先导入 math 包。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7873239436619718&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRDzD2gvzeBX2pjddoHZqgib6EFQVAcvRZvSqgINlMG3OBu4zVws7sMmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;710&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;随机数函数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;注&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：以下函数的使用，需先导入 random 包。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.41151685393258425&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRia9cX96HaFCAyKCEMwicZdG0AgyaqNmmMjEmRibka7I8SVMtAF149pS7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;712&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;三角函数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;注&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：以下函数的使用，需先导入 math&lt;span class=&quot;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;包。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.718052738336714&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRK4QUBTu1UBVlibDZDCdwicHEX1BiaqpXicVd4XRH7ib0iaspEtujPYicfuEaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;493&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;数学常量&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3123425692695214&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRB4c5TOQsnqj8qrIE1McOaDWBfQ9aEArBePWzzn10Bn3lQpb3n8rAaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;397&quot; /&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;字符串(string)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;



&lt;p&gt;&lt;span&gt;      如r&quot;this is a line with \n&quot;，则\n会显示，并不是换行。&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;      如&quot;this &quot; &quot;is &quot; &quot;string&quot;会被自动转换为this is string。&lt;/span&gt;&lt;/p&gt;



&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;字符串不能改变。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;转义字符&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-croporisrc=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRQps1xXurcapLiacJPhXbJiajJT3FdZXiaVvlynaJLqNKpiaxicvboHm7tsw/640?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;448&quot; data-cropy1=&quot;15&quot; data-cropy2=&quot;536&quot; data-ratio=&quot;1.1629464285714286&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/hSic13gnCvrul7e6S88LSiccKic1ZicrPaFwylWcjubGwyfhTpnUgJcR6ibYn8r3Nwvfj66arlvLwwibBP7VuEYL04zw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;448&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;strong&gt;字符串运算符&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8028169014084507&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQR5RvgTpJKB0QKO904htXdT0xfI0icetXP72CAektAcujCbZYZBv9hjSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;710&quot; /&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;字符串格式化&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;在 Python 中，字符串格式化不是 sprintf 函数，而是用 &lt;code&gt;%&lt;/code&gt; 符号。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;2&quot;&gt;print(&lt;span class=&quot;&quot;&gt;&quot;我叫%s， 今年 %d 岁！&quot;&lt;/span&gt; % (&lt;span class=&quot;&quot;&gt;'小明'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;10&lt;/span&gt;))&lt;p&gt;// 输出:&lt;br /&gt;我叫小明， 今年 &lt;span class=&quot;&quot;&gt;10&lt;/span&gt; 岁！&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;格式化符号:&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.1514360313315928&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRXXcU0YLSPz5Rd9icowK9JehCibw0ib38weaFhcUVEibtQdVXZX8nucSS4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;383&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;&lt;strong&gt;&lt;span&gt;辅助指令:&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.49079754601226994&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRmQYfEjPXibOMQH40ax1BwUiaAA1ZTaD8nia8su5gatQiar6tGng28NW42g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;652&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Python 2.6 开始，新增了一种格式化字符串的函数 str.format()，它增强了字符串格式化的功能。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;strong&gt;多行字符串&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;




&lt;p&gt;&lt;span&gt;实例：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot; readability=&quot;1&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
string = &lt;span class=&quot;&quot; readability=&quot;2&quot;&gt;'''&lt;br /&gt;print(\tmath.fabs(-10))&lt;p&gt;print(\nrandom.choice(li))&lt;br /&gt;'''&lt;/p&gt;&lt;/span&gt;&lt;br /&gt;print(string)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;输出：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;print(  math.fabs(-&lt;span class=&quot;&quot;&gt;10&lt;/span&gt;))&lt;p&gt;print(&lt;br /&gt;random.choice(li))&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;Unicode&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;在 2.x 中，普通字符串是以 8 位 ASCII 码进行存储的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而 Unicode 字符串则存储为 16 位 Unicode 字符串，这样能够表示更多的字符集。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;使用的语法是在字符串前面加上前缀 u。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在 3.x 中，所有的字符串都是 Unicode 字符串。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;字符串函数&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6801675977653632&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQR0dbmB4qKjAQG7cTpOrXicnoI27LAHziacYEGefV4ChBwiazia6mgEYD7Zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;716&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7768479776847977&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRTCaRDoVLNMqNBsRlBpYcSPrtZsRWNJaNdibxKFblmgNoanm2vmR7Hgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;717&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5453257790368272&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/MQ4FoG1HmnJbicSb8Y5yANyyiaWVmXMjQRic5CF9KVbD2CQPaxo8UiaSOvS3XZ80TrG78tvxWWDuuAX4hRQZXib0EmQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;706&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;字节(bytes)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;在 3.x 中，字符串和二进制数据完全区分开。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;文本总是 Unicode，由 str 类型表示，二进制数据则由 bytes 类型表示。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Python 3 不会以任意隐式的方式混用 str 和 bytes，你不能拼接字符串和字节流，也无法在字节流里搜索字符串（反之亦然），也不能将字符串传入参数为字节流的函数（反之亦然）。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 



&lt;p&gt;&lt;span&gt;     比如：通过网络传输数据；或者需要将 bytes 解码(decode)成 str 的时候，      我们才会关注 str 和 bytes 的区别。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;bytes 转 str：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;b'abc'&lt;/span&gt;.decode()&lt;br /&gt;str(&lt;span class=&quot;&quot;&gt;b'abc'&lt;/span&gt;)&lt;br /&gt;str(&lt;span class=&quot;&quot;&gt;b'abc'&lt;/span&gt;, encoding=&lt;span class=&quot;&quot;&gt;'utf-8'&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;str 转 bytes：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;'中国'&lt;/span&gt;.encode()&lt;br /&gt;bytes(&lt;span class=&quot;&quot;&gt;'中国'&lt;/span&gt;&lt;/code&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
, encoding=&lt;span class=&quot;&quot;&gt;'utf-8'&lt;/span&gt;)
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;列表(list)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;






&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;创建列表&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;hello = (&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;)&lt;br /&gt;li = [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;&quot;2&quot;&lt;/span&gt;, [&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;], (&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;), hello]&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;访问元素&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;li = [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;&quot;2&quot;&lt;/span&gt;, [&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;], (&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;)]&lt;br /&gt;print(li[&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;])        &lt;span class=&quot;&quot;&gt;# (1, 3)&lt;/span&gt;&lt;br /&gt;print(li[-&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;])       &lt;span class=&quot;&quot;&gt;# [3, 'a']&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;切片访问&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;  格式: list_name[begin:end:step] begin 表示起始位置(默认为0)，end 表示结束位置(默认为最后一个元素)，step 表示步长(默认为1)。&lt;/span&gt;&lt;/p&gt;

&lt;pre readability=&quot;17.5&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;29&quot;&gt;hello = (&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;)&lt;br /&gt;li = [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;&quot;2&quot;&lt;/span&gt;, [&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;], (&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;), hello]&lt;p&gt;print(li)           &lt;span class=&quot;&quot;&gt;# [1, '2', [3, 'a'], (1, 3), (1, 2, 3)]&lt;/span&gt;&lt;br /&gt;print(li[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;])      &lt;span class=&quot;&quot;&gt;# ['2']&lt;/span&gt;&lt;br /&gt;print(li[:&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;])       &lt;span class=&quot;&quot;&gt;# [1, '2']&lt;/span&gt;&lt;br /&gt;print(li[:])        &lt;span class=&quot;&quot;&gt;# [1, '2', [3, 'a'], (1, 3), (1, 2, 3)]&lt;/span&gt;&lt;br /&gt;print(li[&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;:])       &lt;span class=&quot;&quot;&gt;# [[3, 'a'], (1, 3), (1, 2, 3)]&lt;/span&gt;&lt;br /&gt;print(li[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;])   &lt;span class=&quot;&quot;&gt;# ['2', (1, 3)]&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;访问内嵌 list 的元素：&lt;/span&gt;&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;4&quot;&gt;li = [&lt;span class=&quot;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;, [&lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'c'&lt;/span&gt;]]&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
print(li[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;])      &lt;span class=&quot;&quot;&gt;# (3, 5)&lt;/span&gt;&lt;br /&gt;print(li[-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;])          &lt;span class=&quot;&quot;&gt;# ['b', 'c']&lt;/span&gt;&lt;br /&gt;print(li[-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;])            &lt;span class=&quot;&quot;&gt;# b&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;修改列表&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;通过使用方括号，可以非常灵活的对列表的元素进行修改、替换、删除等操作。&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;li = [&lt;span class=&quot;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;]&lt;br /&gt;li[len(li) - &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;] = &lt;span class=&quot;&quot;&gt;22&lt;/span&gt;    &lt;span class=&quot;&quot;&gt;# 修改 [0, 1, 2, 22, 4, 5]&lt;/span&gt;&lt;br /&gt;li[&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;] = &lt;span class=&quot;&quot;&gt;33&lt;/span&gt;              &lt;span class=&quot;&quot;&gt;# 修改 [0, 1, 2, 33, 4, 5]&lt;/span&gt;&lt;br /&gt;li[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;] = [&lt;span class=&quot;&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;]       &lt;span class=&quot;&quot;&gt;# 替换 [0, 9, 9, 5]&lt;/span&gt;&lt;br /&gt;li[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;] = []           &lt;span class=&quot;&quot;&gt;# 删除 [0, 5]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;h4&gt;&lt;strong&gt;&lt;span&gt;删除元素&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;可以用 del 语句来删除列表的指定范围的元素。&lt;/span&gt;&lt;/p&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;8&quot;&gt;li = [&lt;span class=&quot;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;]&lt;p&gt;&lt;span class=&quot;&quot;&gt;del&lt;/span&gt; li[&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]       &lt;span class=&quot;&quot;&gt;# [0, 1, 2, 4, 5]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;del&lt;/span&gt; li[&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;:-&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;]    &lt;span class=&quot;&quot;&gt;# [0, 1, 5]&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;列表操作符&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;+ 用于合并列表。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;] + [&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;]           &lt;span class=&quot;&quot;&gt;# [1, 2, 3, 3, 4, 5]&lt;/span&gt;&lt;br /&gt;[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;] * &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;                   &lt;span class=&quot;&quot;&gt;# [1, 2, 3, 1, 2, 3]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]                  &lt;span class=&quot;&quot;&gt;# True&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]: print(x)    &lt;span class=&quot;&quot;&gt;# 1 2 3&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;列表函数&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;





&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;li = [&lt;span class=&quot;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;]&lt;p&gt;max(li)     &lt;span class=&quot;&quot;&gt;# 5&lt;/span&gt;&lt;br /&gt;len(li)     &lt;span class=&quot;&quot;&gt;# 3&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;注:&lt;span class=&quot;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;对列表使用 max/min 函数，2.x 中对元素值类型无要求，3.x 则要求元素值类型必须一致。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;列表方法&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.append(obj)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;在列表末尾添加新的对象&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.count(obj)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;返回元素在列表中出现的次数&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.extend(seq)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;在列表末尾一次性追加另一个序列中的多个值&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.index(obj)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;返回查找对象的索引位置，如果没有找到对象则抛出异常&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.insert(index, obj)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;将指定对象插入列表的指定位置&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.pop([index=-1]])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;移除列表中的一个元素（默认最后一个元素），并且返回该元素的值&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;list.remove(obj)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;移除列表中某个值的第一个匹配项&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.reverse()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;反向排序列表的元素&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.clear()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;清空列表 还可以使用 del list[:]、li = [] 等方式实现&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;list.copy()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;复制列表 默认使用等号赋值给另一个变量，实际上是引用列表变量。如果要实现&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;列表推导式&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;列表推导式提供了从序列创建列表的简单途径。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;通常应用程序将一些操作应用于某个序列的每个元素，用其获得的结果作为生成新列表的元素，或者根据确定的判定条件创建子序列。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;每个列表推导式都在 for 之后跟一个表达式，然后有零到多个 for 或 if 子句。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;返回结果是一个根据表达从其后的 for 和 if 上下文环境中生成出来的列表。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果希望表达式推导出一个元组，就必须使用括号。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;将列表中每个数值乘三，获得一个新的列表：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;vec = [&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;]&lt;br /&gt;[(x, x**&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; vec]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# [(2, 4), (4, 16), (6, 36)]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;对序列里每一个元素逐个调用某方法：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;freshfruit = [&lt;span class=&quot;&quot;&gt;'  banana'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'  loganberry '&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'passion fruit  '&lt;/span&gt;]&lt;br /&gt;[weapon.strip() &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; weapon &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; freshfruit]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# ['banana', 'loganberry', 'passion fruit']&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;用 if 子句作为过滤器：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;vec = [&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;]&lt;br /&gt;[&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;*x &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; vec &lt;span class=&quot;&quot;&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# [12, 18]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;vec1 = [&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;]&lt;br /&gt;vec2 = [&lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;&quot;&gt;9&lt;/span&gt;]&lt;br /&gt;[x*y &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; vec1 &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; vec2]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# [8, 6, -18, 16, 12, -36, 24, 18, -54]&lt;/span&gt;&lt;br /&gt;[vec1[i]*vec2[i] &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; range(len(vec1))]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# [8, 12, -54]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;p&gt;&lt;span&gt;列表嵌套解析：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;matrix = [&lt;br /&gt;[&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;],&lt;br /&gt;[&lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;],&lt;br /&gt;[&lt;span class=&quot;&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;],&lt;br /&gt;]&lt;br /&gt;new_matrix = [[row[i] &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; row &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; matrix] &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; range(len(matrix[&lt;span class=&quot;&quot;&gt;0&lt;/span&gt;]))]&lt;br /&gt;print(new_matrix)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# [[1, 4, 7], [2, 5, 8], [3, 6, 9]]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;


&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;元组(tuple)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;






&lt;h4&gt;&lt;span&gt;&lt;strong&gt;访问元组&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;访问元组的方式与列表是一致的。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;元组的元素可以直接赋值给多个变量，但变量数必须与元素数量一致。&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span&gt;a, b, c = (&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;print(a, b, c)&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;组合元组&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;元组中的元素值是不允许修改的，但我们可以对元组进行连接组合。&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;tup1 = (&lt;span class=&quot;&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;34.56&lt;/span&gt;);&lt;br /&gt;tup2 = (&lt;span class=&quot;&quot;&gt;'abc'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'xyz'&lt;/span&gt;)&lt;br /&gt;tup3 = tup1 + tup2;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;print&lt;/span&gt; (tup3)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# (12, 34.56, 'abc', 'xyz')&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;删除元组&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;元组中的元素值是不允许删除的，但我们可以使用 del 语句来删除整个元组&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;元组函数&lt;/span&gt;&lt;/h4&gt;





&lt;h4&gt;&lt;strong&gt;&lt;span&gt;元组推导式&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;t = &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;&lt;br /&gt;print(t)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# (1, 2, 3)&lt;/span&gt;&lt;br /&gt;u = t, (&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;5&lt;/span&gt;)&lt;br /&gt;print(u)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# ((1, 2, 3), (3, 4, 5))&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;字典(dict)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 






&lt;p&gt;&lt;span&gt;格式如下:&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;d = {key1 : value1, key2 : value2 }&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;访问字典&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;pre&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;
&lt;code class=&quot;&quot;&gt;dis = {&lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;: [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]}&lt;p&gt;print(dis[&lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;][&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;])&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;修改字典&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;8&quot;&gt;dis = {&lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;: [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;: {&lt;span class=&quot;&quot;&gt;'name'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;'hello'&lt;/span&gt;}}&lt;p&gt;dis[&lt;span class=&quot;&quot;&gt;9&lt;/span&gt;][&lt;span class=&quot;&quot;&gt;'name'&lt;/span&gt;] = &lt;span class=&quot;&quot;&gt;999&lt;/span&gt;&lt;br /&gt;print(dis)&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;&quot;&gt;# {'a': 1, 9: {'name': 999}, 'b': [1, 2, 3]}&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;删除字典&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;用 del 语句删除字典或字典的元素。&lt;/span&gt;&lt;/p&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;8&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
dis = {&lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;: [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;: {&lt;span class=&quot;&quot;&gt;'name'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;'hello'&lt;/span&gt;}}&lt;p&gt;&lt;span class=&quot;&quot;&gt;del&lt;/span&gt; dis[&lt;span class=&quot;&quot;&gt;9&lt;/span&gt;][&lt;span class=&quot;&quot;&gt;'name'&lt;/span&gt;]&lt;br /&gt;print(dis)&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;&quot;&gt;del&lt;/span&gt; dis         &lt;span class=&quot;&quot;&gt;# 删除字典&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'a': 1, 9: {}, 'b': [1, 2, 3]}&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;字典函数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;





&lt;h4&gt;&lt;strong&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;字典方法&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.clear()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;删除字典内所有元素&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.copy()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;返回一个字典的浅复制&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;创建一个新字典，以序列 seq 中元素做字典的键，value 为字典所有键对应的初始值&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;返回指定键的值，如果值不在字典中返回默认值&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.items()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;以列表形式返回可遍历的(键, 值)元组数组&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.keys()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;以列表返回一个字典所有的键&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.values()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;以列表返回字典中的所有值&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果 key 在字典中，返回对应的值。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果不在字典中，则插入 key 及设置的默认值 default，并返回 default ，default 默认值为 None。&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.update(dict2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;把字典参数 dict2 的键/值对更新到字典 dict 里&lt;/span&gt;&lt;/p&gt;


&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;br /&gt;dic1 = {&lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;}&lt;br /&gt;dic2 = {&lt;span class=&quot;&quot;&gt;9&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;&lt;/code&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
: &lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;}&lt;br /&gt;dic1.update(dic2)&lt;br /&gt;print(dic1)&lt;p&gt;&lt;span class=&quot;&quot;&gt;# {'a': 'b', 9: 9}&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/pre&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.pop(key[,default])&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;删除字典给定键 key 所对应的值，返回值为被删除的值。key 值必须给出，否则返回 default 值。&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;dict.popitem()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;随机返回并删除字典中的一对键和值(一般删除末尾对)&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;字典推导式&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;构造函数 dict() 直接从键值对元组列表中构建字典。如果有固定的模式，列表推导式指定特定的键值对：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dict([(&lt;span class=&quot;&quot;&gt;'sape'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4139&lt;/span&gt;), (&lt;span class=&quot;&quot;&gt;'guido'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4127&lt;/span&gt;), (&lt;span class=&quot;&quot;&gt;'jack'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4098&lt;/span&gt;)])&lt;br /&gt;{&lt;span class=&quot;&quot;&gt;'sape'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4139&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'jack'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4098&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'guido'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4127&lt;/span&gt;}&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;此外，字典推导可以用来创建任意键和值的表达式词典：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;{x: x**&lt;span class=&quot;&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;)}&lt;br /&gt;{&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;4&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;6&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;36&lt;/span&gt;}&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;如果关键字只是简单的字符串，使用关键字参数指定键值对有时候更方便：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dict(sape=&lt;span class=&quot;&quot;&gt;4139&lt;/span&gt;, guido=&lt;span class=&quot;&quot;&gt;4127&lt;/span&gt;, jack=&lt;span class=&quot;&quot;&gt;4098&lt;/span&gt;)&lt;br /&gt;{&lt;span class=&quot;&quot;&gt;'sape'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4139&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'jack'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4098&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'guido'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;4127&lt;/span&gt;}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;集合(set)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;集合是一个无序不重复元素的序列&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;创建集合&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;


&lt;p&gt;&lt;span&gt;set(value) 方式创建集合，value 可以是字符串、列表、元组、字典等序列类型&lt;/span&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;{&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;}            &lt;span class=&quot;&quot;&gt;# {} {1, 2, 3}&lt;/span&gt;&lt;br /&gt;set(&lt;span class=&quot;&quot;&gt;'12345'&lt;/span&gt;)            &lt;span class=&quot;&quot;&gt;# 字符串 {'3', '5', '4', '2', '1'}&lt;/span&gt;&lt;br /&gt;set([&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;23.4&lt;/span&gt;])     &lt;span class=&quot;&quot;&gt;# 列表 {1, 'a', 23.4}&lt;/span&gt;&lt;br /&gt;set((&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'a'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;23.4&lt;/span&gt;))     &lt;span class=&quot;&quot;&gt;# 元组 {1, 'a', 23.4}&lt;/span&gt;&lt;br /&gt;set({&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'b'&lt;/span&gt;&lt;/code&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
: &lt;span class=&quot;&quot;&gt;9&lt;/span&gt;})      &lt;span class=&quot;&quot;&gt;# 字典 {1, 'b'}&lt;/span&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;添加元素&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;将元素 val 添加到集合 set 中，如果元素已存在，则不进行任何操作：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;set.add(val)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;也可以用 update 方法批量添加元素，参数可以是列表，元组，字典等：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;set.update(list1, list2,...)&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;移除元素&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;如果存在元素 val 则移除，不存在就报错：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;set.remove(val)&lt;/code&gt;
&lt;/pre&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;p&gt;&lt;span&gt;如果存在元素 val 则移除，不存在也不会报错：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;set.discard(val)&lt;/code&gt;
&lt;/pre&gt;



&lt;p&gt;&lt;span&gt;随机移除一个元素：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;set.pop()&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;元素个数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;与其他序列一样，可以用 len(set) 获取集合的元素个数。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;清空集合&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;set.clear()&lt;p&gt;set = set()&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;判断元素是否存在&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;val &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; set&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;其他方法&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.copy()&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;复制集合&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.difference(set2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;求差集，在 set 中却不在 set2 中&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.intersection(set2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;求交集，同时存在于 set 和 set2 中&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.union(set2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;求并集，所有 set 和 set2 的元素&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;求对称差集，不同时出现在两个集合中的元素&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.isdisjoint(set2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;如果两个集合没有相同的元素，返回 True&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.issubset(set2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;如果 set 是 set2 的一个子集，返回 True&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;set.issuperset(set2)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;如果 set 是 set2 的一个超集，返回 True&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;集合计算&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;pre readability=&quot;16.5&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;27&quot;&gt;a = set(&lt;span class=&quot;&quot;&gt;'abracadabra'&lt;/span&gt;)&lt;br /&gt;b = set(&lt;span class=&quot;&quot;&gt;'alacazam'&lt;/span&gt;)&lt;p&gt;print(a)                                  &lt;span class=&quot;&quot;&gt;# a 中唯一的字母&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'a', 'r', 'b', 'c', 'd'}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;print(a - b)                              &lt;span class=&quot;&quot;&gt;# 在 a 中的字母，但不在 b 中&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'r', 'd', 'b'}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;print(a | b)                              &lt;span class=&quot;&quot;&gt;# 在 a 或 b 中的字母&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'a', 'c', 'r', 'd', 'b', 'm', 'z', 'l'}&lt;/span&gt;&lt;br /&gt;print(a &amp;amp; b)                              &lt;span class=&quot;&quot;&gt;# 在 a 和 b 中都有的字母&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'a', 'c'}&lt;/span&gt;&lt;br /&gt;print(a ^ b)                              &lt;span class=&quot;&quot;&gt;# 在 a 或 b 中的字母，但不同时在 a 和 b 中&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'r', 'd', 'b', 'm', 'z', 'l'}&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;集合推导式&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;a = {x &lt;span class=&quot;&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;&quot;&gt;'abracadabra'&lt;/span&gt; &lt;span class=&quot;&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;&quot;&gt;'abc'&lt;/span&gt;}&lt;br /&gt;print(a)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;# {'d', 'r'}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;流程控制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;if 控制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;if&lt;/span&gt; 表达式&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;:&lt;br /&gt;语句&lt;br /&gt;&lt;span class=&quot;&quot;&gt;if&lt;/span&gt; 表达式&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;:&lt;br /&gt;语句&lt;br /&gt;&lt;span class=&quot;&quot;&gt;elif&lt;/span&gt; 表达式&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;:&lt;br /&gt;语句&lt;br /&gt;&lt;span class=&quot;&quot;&gt;else&lt;/span&gt;:&lt;br /&gt;语句&lt;br /&gt;&lt;span class=&quot;&quot;&gt;elif&lt;/span&gt; 表达式&lt;span class=&quot;&quot;&gt;4&lt;/span&gt;:&lt;br /&gt;语句&lt;br /&gt;&lt;span class=&quot;&quot;&gt;else&lt;/span&gt;:&lt;br /&gt;语句&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;1、每个条件后面要使用冒号 :，表示接下来是满足条件后要执行的语句块。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; 2、使用缩进来划分语句块，相同缩进数的语句在一起组成一个语句块。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;3、在 Python 中没有 switch - case 语句。&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;strong&gt;&lt;span&gt;三元运算符：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;1&amp;gt; &lt;span class=&quot;&quot;&gt;if&lt;/span&gt;  &lt;span class=&quot;&quot;&gt;else&lt;/span&gt; 2&amp;gt;表达式表达式&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;编写条件语句时，应该尽量避免使用嵌套语句。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;嵌套语句不便于阅读，而且可能会忽略一些可能性。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;for 遍历&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt;  &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; ：&lt;br /&gt;1&amp;gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;else&lt;/span&gt;:&lt;br /&gt;2&amp;gt;语句语句&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;else 语句中的语句2只有循环正常退出（遍历完所有遍历对象中的值）时执行。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在字典中遍历时，关键字和对应的值可以使用 items() 方法同时解读出来：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;knights = {&lt;span class=&quot;&quot;&gt;'gallahad'&lt;/span&gt;&lt;/code&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;

    
: &lt;span class=&quot;&quot;&gt;'the pure'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'robin'&lt;/span&gt;: &lt;span class=&quot;&quot;&gt;'the brave'&lt;/span&gt;}&lt;br /&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; k, v &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; knights.items():&lt;br /&gt;print(k, v)
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;在序列中遍历时，索引位置和对应值可以使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;enumerate()&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 函数同时得到：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; i, v &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; enumerate([&lt;span class=&quot;&quot;&gt;'tic'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'tac'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'toe'&lt;/span&gt;]):&lt;br /&gt;print(i, v)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;同时遍历两个或更多的序列，可以使用 zip() 组合：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;questions = [&lt;span class=&quot;&quot;&gt;'name'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'quest'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'favorite color'&lt;/span&gt;]&lt;br /&gt;answers = [&lt;span class=&quot;&quot;&gt;'lancelot'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'the holy grail'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'blue'&lt;/span&gt;]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; q, a &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; zip(questions, answers):&lt;br /&gt;print(&lt;span class=&quot;&quot;&gt;'What is your {0}?  It is {1}.'&lt;/span&gt;.format(q, a))&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;要反向遍历一个序列，首先指定这个序列，然后调用 reversed() 函数：&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; reversed(range(&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;)):&lt;br /&gt;print(i)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;要按顺序遍历一个序列，使用 sorted() 函数返回一个已排序的序列，并不修改原值：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;basket = [&lt;span class=&quot;&quot;&gt;'apple'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'orange'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'apple'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'pear'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'orange'&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;'banana'&lt;/span&gt;]&lt;br /&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; f &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; sorted(set(basket)):&lt;br /&gt;print(f)&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;while 循环&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;while&lt;/span&gt;：&lt;br /&gt;1&amp;gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;else&lt;/span&gt;：&lt;br /&gt;2&amp;gt;语句语句&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;break、continue、pass&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 
&lt;p&gt;&lt;span&gt;break 语句用在 while 和 for 循环中，break 语句用来终止循环语句。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;即循环条件没有 False 条件或者序列还没被完全递归完，也会停止执行循环语句。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;continue 语句用在 while 和 for 循环中，continue 语句用来告诉 Python 跳过当前循环的剩余语句，然后继续进行下一轮循环。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;continue 语句跳出本次循环，而 break 跳出整个循环。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;pass 是空语句，是为了保持程序结构的完整性。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;pass 不做任何事情，一般用做占位语句。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;迭代器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;



&lt;p&gt;&lt;span&gt;迭代器只能往前不会后退。&lt;/span&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;迭代器可以被 for 循环进行遍历：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;li = [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]&lt;br /&gt;it = iter(li)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;for&lt;/span&gt; val &lt;span class=&quot;&quot;&gt;in&lt;/span&gt; it:&lt;br /&gt;print(val)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;span&gt;迭代器也可以用 next() 函数访问下一个元素值：&lt;/span&gt;&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;
&lt;code class=&quot;&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;&quot;&gt;import&lt;/span&gt; sys&lt;p&gt;li = [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;&quot;&gt;4&lt;/span&gt;]&lt;br /&gt;it = iter(li)&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;&quot;&gt;True&lt;/span&gt;:&lt;br /&gt;&lt;span class=&quot;&quot;&gt;try&lt;/span&gt;:&lt;br /&gt;&lt;span class=&quot;&quot;&gt;print&lt;/span&gt; (next(it))&lt;br /&gt;&lt;span class=&quot;&quot;&gt;except&lt;/span&gt; StopIteration:&lt;br /&gt;sys.exit()&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;生成器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;



&lt;p&gt;&lt;span&gt;更简单点理解生成器就是一个迭代器。&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span&gt;在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值,并在下一次执行 next() 方法时从当前位置继续运行。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;pre readability=&quot;9.5&quot;&gt;
&lt;code class=&quot;&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;&quot;&gt;import&lt;/span&gt; sys&lt;p&gt;&lt;span class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;&quot;&gt;fibonacci&lt;/span&gt;&lt;span class=&quot;&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;&quot;&gt;# 生成器函数 - 斐波那契&lt;/span&gt;&lt;br /&gt;a, b, counter = &lt;span class=&quot;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;&quot;&gt;0&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;&quot;&gt;True&lt;/span&gt;:&lt;br /&gt;&lt;span class=&quot;&quot;&gt;if&lt;/span&gt; (counter &amp;gt; n): &lt;br /&gt;&lt;span class=&quot;&quot;&gt;return&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;yield&lt;/span&gt; a&lt;br /&gt;a, b = b, a + b&lt;br /&gt;counter += &lt;span class=&quot;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;f = fibonacci(&lt;span class=&quot;&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;&quot;&gt;# f 是一个迭代器，由生成器返回生成&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;&quot;&gt;True&lt;/span&gt;:&lt;br /&gt;&lt;span class=&quot;&quot;&gt;try&lt;/span&gt;:&lt;br /&gt;print(next(f))&lt;br /&gt;&lt;span class=&quot;&quot;&gt;except&lt;/span&gt; StopIteration:&lt;br /&gt;sys.exit()&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;函数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;自定义函数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;函数（Functions）是指可重复使用的程序片段。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;它们允许你为某个代码块赋予名字，允许你通过这一特殊的名字在你的程序任何地方来运行代码块，并可重复任何次数。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这就是所谓的调用（Calling）函数。&lt;/span&gt;&lt;/p&gt;






&lt;p&gt;&lt;span&gt;不带表达式的 return 相当于返回 None。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; 


&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;def&lt;/span&gt; 函数名（参数列表）:&lt;/span&gt;&lt;br /&gt;函数体&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;参数传递&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;在 Python 中，类型属于对象，变量是没有类型的：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;a = [&lt;span class=&quot;&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;&quot;&gt;3&lt;/span&gt;]&lt;p&gt;a = &lt;span class=&quot;&quot;&gt;&quot;Runoob&quot;&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;以上代码中，[1,2,3] 是 List 类型，”Runoob” 是 String 类型。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而变量 a 是没有类型，她仅仅是一个对象的引用（一个指针），可以是指向 List 类型对象，也可以是指向 String 类型对象。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;可更改与不可更改对象&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;在 Python 中，字符串，数字和元组是不可更改的对象。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而列表、字典等则是可以修改的对象。&lt;/span&gt;&lt;/p&gt;


&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;可变类型&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：变量赋值 la=[1,2,3,4] 后再赋值 la[2]=5 ，则是将 list la 的第三个元素值更改，本身la没有动，只是其内部的一部分值被修改了。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Python 函数的参数传递：&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;比如在 fun（a）内部修改 a 的值，只是修改另一个复制的对象，不会影响 a 本身。&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;如 fun（la），则是将 la 真正的传过去，修改后fun外部的la也会受影响&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Python 中一切都是对象，严格意义我们不能说值传递还是引用传递，&lt;/span&gt;&lt;span&gt;我们应该说传不可变对象和传可变对象。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;参数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;必需参数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;必需参数须以正确的顺序传入函数。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;调用时的数量必须和声明时的一样。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;span&gt;关键字参数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span&gt;关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。&lt;/span&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;&lt;span class=&quot;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;&quot;&gt;print_info&lt;/span&gt;&lt;span class=&quot;&quot;&gt;(name, age)&lt;/span&gt;:&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;&quot;&gt;&quot;打印任何传入的字符串&quot;&lt;/span&gt;&lt;br /&gt;print(&lt;span class=&quot;&quot;&gt;&quot;名字: &quot;&lt;/span&gt;, name)&lt;br /&gt;print(&lt;span class=&quot;&quot;&gt;&quot;年龄: &quot;&lt;/span&gt;, age)&lt;br /&gt;&lt;span class=&quot;&quot;&gt;return&lt;/span&gt;&lt;br /&gt;print_info(age=&lt;span class=&quot;&quot;&gt;50&lt;/span&gt;, name=&lt;span class=&quot;&quot;&gt;&quot;john&quot;&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;&lt;/h4&gt;
</description>
<pubDate>Sun, 23 Sep 2018 11:16:04 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/p8DaEKSf1h</dc:identifier>
</item>
<item>
<title>被证明的黎曼猜想跟区块链加密算法有什么关系？</title>
<link>http://www.jintiankansha.me/t/VxNpJVPHqs</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/VxNpJVPHqs</guid>
<description>&lt;p&gt;&lt;span&gt;近日，一则发于外媒，随后被国内媒体大为传播的消息在数学界炸开了锅：黎曼猜想被证明了。而区块链届跟着躁动，加密算法要被破解了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.676829268292683&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxmm8GArcicOJgE1ickwa5PpdovS5KfVkF7icYmIhtCsVW0icRWWiaGmcbcdvXLcN7eu36Qiafb6qrDTT4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;492&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;菲尔兹奖和阿贝尔奖双料得主、英国皇家学会前主席迈克尔· 阿提亚（Michael Atiyah，1929.4.22-）爵士宣称自己证明了黎曼猜想，并将在9月24日海德堡获奖者论坛上宣讲。据了解，迈克尔· 阿提亚的主要研究领域是几何，被誉为当代最伟大的数学家之一。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9636363636363636&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxmm8GArcicOJgE1ickwa5Ppd8WGkeWcPpPTRVDUFQaTP9a905GEPKEO9kqonfhribKTY6rpGcgnltpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;220&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Michael Atiyah（1924-）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;黎曼猜想在数学界的地位不容置喙。1859年，其由数学家黎曼提出，是当今数学界最重要、最期待解决的数学难题，至今已困扰人类一个半世纪。&lt;/span&gt;&lt;/p&gt;
&lt;section&gt;&lt;section class=&quot;V5&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;黎曼猜想是什么？&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;质数是大于1的自然数中，除了1和自身之外，不能被其他自然数整除的数，例如2、3、5等。数学家早已证明质数有无穷多个，但这些质数在数轴上的分布遵循什么规律，或者是否真的存在一个精确的规律？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;黎曼把欧拉提出的一个跟质数分布相关的函数zeta 函数，拓展到了适用于整个复平面。他猜测，这个拓展后的黎曼zeta函数，所有非平凡零点都位于实部等于1/2 的直线上。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;大牛卢昌海这么说的(精简版本)：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;粗略地说， 它是针对一个被称为黎曼 zeta（ζ）函数的复变量函数 (即变量与函数值都可以在复数域中取值的函数) 的猜想。 黎曼 ζ 函数跟许多其它函数一样，在某些点上的取值为零， 那些点被称为黎曼 ζ 函数的零点。 在那些零点中， 有一部分特别重要的被称为黎曼 ζ 函数的非平凡零点。 黎曼猜想所猜测的是那些非平凡零点全都分布在一条被称为“临界线” 的特殊直线上。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;详细版本:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;早在1737年，大数学家欧拉就发现了质数分布问题与Zeta函数的联系，给出并证明了欧拉乘积公式，使得Zeta函数成为研究质数问题的经典方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.2991913746630728&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxmm8GArcicOJgE1ickwa5PpdXFsrgVHudPYN60vZn6giafP5V4eaz1xonorIkw5E1SbiadKFtz5amOfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;371&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;欧拉乘积公式，其中p为质数，n为自然数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;黎曼猜想（RiemannHypothesis）由大数学家黎曼在1859年首次提出，讨论黎曼Zeta函数的非平凡解问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;黎曼猜想是关于黎曼Zeta函数的零点分布的猜想。黎曼Zeta函数长这个样子：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.18298969072164947&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxmm8GArcicOJgE1ickwa5Ppdg75WkJJjkeB3eLe9vaEiaYD82kBpcXIKvVqziapKu5f0ic53bibdO6r9PA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;388&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;黎曼Zeta函数有两种零点，一种是位于实数轴线上的零点，被称为平凡零点，另一种是位于其他复平面区域上的零点，被称为非平凡零点，目前数学家已经证明这些非平凡零点全部位于实部区间为0到1的复平面内，而黎曼则大胆猜想，这些非平凡零点全部位于实部为1/2的一条直线上。这就是黎曼猜想！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;有关黎曼猜想的更多内容，请转阅：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553207&amp;amp;idx=1&amp;amp;sn=c87b894a97241af52adff1f550f7f292&amp;amp;chksm=8b7e4eacbc09c7ba34d11b1a776e309d890970afe9b3d38e4cf67def4d5655ec5387d13c57e7&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;&lt;span&gt;黎曼猜想证明新进展&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;



&lt;section&gt;&lt;section class=&quot;V5&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section&gt;&lt;section&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;截至目前，数学论文中的研究，其中很多数学命题都是以黎曼猜想及推广形式的成立作为前提。如果黎曼猜想被证实或证明，这些数学命题将荣升为数学定理；而如果一旦被证伪，则代表将有千余个数学命题不被成立。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;所以，基于这一研究意义，数学界对于迈克尔· 阿提亚9月24日的宣讲自然格外在意。而除了研究意义外，黎曼猜想因为能揭示素数分布的统计规律，跟需要用到素数的加密算法有一定联系，也触发了一些区块链自媒体和币圈人士的“G”点。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;查阅资料了解到，一直以来，素数的分布很难捕捉到规律，黎曼在其论文中指出素数的分布完全蕴藏在一个特殊的函数中（黎曼函数），这也构成了黎曼猜想关于素数的分布。而目前区块链领域用到的加密算法，和素数的分布轨迹有一定联系。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在一些人看来，如果黎曼猜想被证明，其或有可能影响加密算法的逻辑性，比如加密算法和哈希函数如何产生互动等，甚而破解加密算法，从而上升至对加密货币圈产生影响。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;针对这一议题，随即采访了几位关注加密算法和密码学的专家老师。依据他们的观点，大致可总结为：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;就算黎曼猜想被证明，也没区块链加密算法什么事。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;一位某知名科技媒体从业者告诉，从理论角度看，“需要用到素数的加密算法”基本就是RSA了。RSA虽然在普通工业加密中有一些应用，如比特币使用的是专门经过修改的椭圆曲线加密。而其他虚拟货币使用的加密算法，几乎很少会使用RSA，所以和黎曼猜想没多大关系。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.27&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkxmm8GArcicOJgE1ickwa5PpdtibpEa5ZnfWJUGTqZQPP95WKnXY1knwSRPLRAoz5bxygOGCeqWiaKicXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而从应用角度来看，“黎曼猜想的命题是完整的，只要认为它为真就可以拿来用，而不需要一定等到‘证明了为真’才可以用。而且，从来没听说过针对任何领域的任何攻击方法里，黎曼定理起到了重要作用。”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;另一位公链开发共识算法工程师则表示，对于大多数区块链技术而言，使用的哈希算法和素数没有关系，使用的非对称算法是ECC，ECC是基于椭圆曲线上的离散对数问题，和素数也没有关系。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;“退一步讲，如果非要说有关系，我想可能也就一个做‘质数币’的项目。该项目的工作是把比特币的挖矿算法修改为寻找质数，没有其他的特别之处。所以也就币圈有人在炒，”该名人士向表示，“黎曼猜想可能会对质数的预测有影响，但在黎曼猜想被证明之前，大家就对这个猜想的内容是认同的，所以依然可以用它来寻找质数。”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;综合来看，这两位人士所持意见一致。即黎曼猜想被证明，更多的是对数学学科的贡献。若是在工程领域，除非黎曼猜想被证伪，不然影响都不会很大！&lt;/span&gt;&lt;/p&gt;
&lt;section&gt;&lt;section class=&quot;V5&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;那么，黎曼猜想的影响到底何在？&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当然， 黎曼猜想确实是非常艰深的， 它自问世以来， 已经有一个半世纪以上的历史。 在这期间， 许多知名数学家付出了艰辛的努力，试图解决它， 却迄今没有人能够如愿。 但是， 如果仅仅用艰深来衡量的话， 那么其它一些著名数学猜想也并不逊色。 比如费尔玛猜想是经过三个半世纪以上的努力才被证明的；哥德巴赫猜想则比黎曼猜想早了一个多世纪就问世了， 却跟黎曼猜想一样迄今屹立不倒。 这些纪录无疑也都代表着艰深!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么， 黎曼猜想被称为最重要的数学猜想， 究竟是什么原因呢？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;首要的原因是它跟其它数学命题之间有着千丝万缕的联系。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;据统计， 在今天的数学文献中已经有一千条以上的数学命题是以黎曼猜想 (或其推广形式) 的成立为前提的。 这表明黎曼猜想及其推广形式一旦被证明， 对数学的影响将是十分巨大的， 所有那一千多条数学命题就全都可以荣升为定理；反之， 如果黎曼猜想被推翻， 则那一千多条数学命题中也几乎无可避免地会有一部分成为陪葬。 一个数学猜想与为数如此众多的数学命题有着密切关联， 这在数学中可以说是绝无仅有的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;其次， 黎曼猜想与数论中的素数分布问题有着密切关系。&lt;/span&gt;&lt;/strong&gt; &lt;span&gt;而数论是数学中一个极重要的传统分支，被德国数学家高斯称为是 “数学的皇后”。 素数分布问题则又是数论中极重要的传统课题， 一向吸引着众多数学家的兴趣。 这种深植于传统的 “高贵血统” 也在一定程度上增加了黎曼猜想在数学家们心中的地位和重要性。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;再者， 一个数学猜想的重要性还有一个衡量标准， 那就是在研究该猜想的过程中能否产生出一些对数学的其它方面有贡献的结果。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;用这个标准来衡量， 黎曼猜想也是极其重要的。 事实上， 数学家们在研究黎曼猜想的过程中所取得的早期成果之一，就直接导致了有关素数分布的一个重要命题——素数定理——的证明。 而素数定理在被证明之前， 本身也是一个有着一百多年历史的重要猜想。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后， 并且最出人意料的， 是&lt;/span&gt;&lt;span&gt;&lt;strong&gt;黎曼猜想的重要性甚至越出了纯数学的范围，而 “侵入” 到了物理学的领地上。&lt;/strong&gt;&lt;/span&gt; &lt;span&gt;20 世纪 70 年代初， 人们发现与黎曼猜想有关的某些研究， 居然跟某些非常复杂的物理现象有着显著关联。 这种关联的原因直到今天也还是一个谜。但它的存在本身， 无疑就进一步增加了黎曼猜想的重要性。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;有这许多原因， 黎曼猜想被称为最重要的数学猜想是当之无愧的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;section&gt;&lt;section class=&quot;V5&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; right=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;∑编辑 | Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; right=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;来源 | 整理自网络&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot; justify=&quot;&quot; rgb=&quot;&quot; caret-color:=&quot;&quot; box-sizing:=&quot;&quot; text-align:=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0437601296596435&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky7x6u1VxMVMia4MLibNzC2nrumY3zDflTsCeoM04M1BrkvPny8tsw6hYkIicUr42iarLmadL2x6JwV6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;617&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; caret-color:=&quot;&quot;&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; caret-color:=&quot;&quot;&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; caret-color:=&quot;&quot;&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 23 Sep 2018 11:16:03 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/VxNpJVPHqs</dc:identifier>
</item>
<item>
<title>黎曼猜想都被证明了，你还不知道它是啥？</title>
<link>http://www.jintiankansha.me/t/4yw3FmmAQA</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/4yw3FmmAQA</guid>
<description>&lt;p&gt;黎曼猜想在数学界如此重要，是因为它很艰深吗？黎曼猜想的确非常艰深，但如果仅用艰深来衡量其重要性的话，那么与之相比，其他的一些数学猜想丝毫都不逊色。例如，科学家们前赴后继，经过350年以上的努力，才证明了费马猜想；哥德巴赫猜想的问世比黎曼猜想要早100多年，至今依然像黎曼猜想一样屹立不倒。&lt;/p&gt;&lt;p&gt;那么，究竟是什么原因让黎曼猜想称为最重要的数学猜想呢？&lt;/p&gt;

&lt;p&gt;首先，黎曼猜想与其他数学命题之间存在着千丝万缕的联系&lt;/p&gt;

&lt;p&gt;在目前的数学文献中，有1000多个数学命题是一黎曼猜想及其推广形式的成立为前提的，这就意味着，一旦黎曼猜想及其推广形式被证明，这些数学命题将会全部荣升为定理；与此相反，如果黎曼猜想被推翻，那么这1000多个数学命题中至少有一部分将会不可避免地成为“陪葬”品。牵一发而动全身，一个数学猜想竟然与这么多的数学命题紧密关联，可以在数学中是绝对是独一无二的。&lt;/p&gt;

&lt;p&gt;其次，黎曼猜想与数论中的素数分布问题关系极为密切&lt;/p&gt;

&lt;p&gt;数论作为一个极其重要的传统数学分支，曾被德国数学家高斯称作是“数学的皇后”，而素数分布问题则是数论中一个极为重要的传统课题，一直以来，素数分布问题就是众多科学家极为感兴趣的问题，这就使得黎曼猜想在科学家们心目中的地位和重要性大大提升。&lt;/p&gt;

&lt;p&gt;还有，在研究黎曼猜想的过程中能产生一些对数学其他方面有贡献和影响的方法和结果。&lt;/p&gt;

&lt;p&gt;这也是衡量一个数学猜想重要性的标准。其实在研究黎曼猜想的过程中，数学家们所取得的早期成果之一，就直接导致了素数定理得的证明，这是一个关于素数分布的重要命题。&lt;/p&gt;

&lt;p&gt;最后，黎曼猜想超越了纯数学的范围而“侵入”到物理学的领地&lt;/p&gt;

&lt;p&gt;20世纪70年代早期，人们就发现某些有关黎曼猜想的研究，与某些极为复杂的物理现象之间竟然有着显著的关联，这是最出人意料的事情。尽管这种关联的原因至今仍然是一个谜，但这种存在本身，无疑是更加增强了黎曼猜想的重要性。&lt;/p&gt;

&lt;p&gt;我们一起期待著名数学家 &lt;span&gt;Michael Atiyah&lt;/span&gt; 在9月24日将会进行的“证明&lt;span&gt;黎曼猜想&lt;/span&gt;”的报告吧！&lt;/p&gt;
</description>
<pubDate>Sat, 22 Sep 2018 07:37:22 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/4yw3FmmAQA</dc:identifier>
</item>
</channel>
</rss>