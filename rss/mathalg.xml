<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>人人都能读懂的编译器原理</title>
<link>http://www.jintiankansha.me/t/TVuOzGm02p</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/TVuOzGm02p</guid>
<description>&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;理解编译器内部原理，可以让你更高效利用它。按照编译的工作顺序，逐步深入编程语言和编译器是怎样工作的。本文有大量的链接、样例代码和图表帮助你理解编译器。&lt;/span&gt;&lt;/p&gt;
&lt;h2 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;作者注：&lt;/span&gt;&lt;/h2&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;这是我在 Medium 上的第二篇文章的再版，上一版有超过 21000 的阅读量。很高兴我能够帮助到各位的学习，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;因此我根据上一版的评论，完完全全重写了。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;我选择 Rust 作为这篇文章的主要语言。它是一种详尽的、高效的、现代的而且看起来特意使得设计编译器变得简单。我很喜欢使用它。 https://www.rust-lang.org/&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;写这篇文章的目的主要是吸引读者的注意力，而不是提供 20 多页的令人头皮发麻的阅读材料。对于那些你感兴趣的更深层次的话题，文章中有许多链接会引导你找到相关的资料。大多数链接到维基百科 。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;感谢你的关注，我希望你能够喜欢这些我花费了超过 20 个小时的写出的文章。欢迎在文章底部评论处留下任何问题或者建议。&lt;/span&gt;&lt;/p&gt;
&lt;h2 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt; 简单介绍 &lt;/span&gt;&lt;/h2&gt;
&lt;h3 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;编译器是什么？&lt;/span&gt;&lt;/h3&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;&lt;strong&gt;你口中所说的编程语言本质上只是一个软件，这个软件叫做编译器，编译器读入一个文本文件，经过大量的处理，最终产生一个二进制文件。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 编译器的语言部分就是它处理的文本样式。因为电脑只能读取 1 和 0 ，而人们编写 Rust 程序要比直接编写二进制程序简单地多，因此编译器就被用来把人类可读的文本转换成计算机可识别的机器码。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;编译器可以是任何可以把文本文件转换成其他文件的程序。例如，下面有一个用 Rust 语言写的编译器把 0 转换成 1，把 1 转换成 0 ：&lt;/span&gt;&lt;/p&gt;

&lt;table class=&quot;crayon-table&quot; width=&quot;NaN&quot;&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;19.5&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; width=&quot;581&quot; readability=&quot;22&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;// An example compiler that turns 0s into 1s, and 1s into 0s.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-e&quot;&gt;fn main&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;1 0 1 A 1 0 1 3&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-c&quot;&gt;// iterate over every character `c` in input&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;crayon-st&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;==&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-s&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;crayon-st&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;// if not 0 or 1, leave it alone&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;();&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;// 0 1 0 A 0 1 0 3&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;编译器是做什么的？&lt;/span&gt;&lt;/h3&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;简言之，编译器获取源代码，产生一个二进制文件。因为从复杂的、人类可读的代码直接转化成0/1二进制会很复杂，所以编译器在产生可运行程序之前有多个步骤：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;从你给定的源代码中读取单个词。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;把这些词按照单词、数字、符号、运算符进行分类。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;通过模式匹配从分好类的单词中找出运算符，明确这些运算符想进行的运算，然后产生一个运算符的树（表达式树）。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;最后一步遍历表达式树中的所有运算符，产生相应的二进制数据。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;尽管我说编译器直接从表达式树转换到二进制，但实际上它会产生汇编代码，之后汇编代码会被汇编/编译到二进制数据。汇编程序就好比是一种高级的、人类可读的二进制。更多关于汇编语言的阅读资料在这里。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot;&gt;&lt;img class=&quot;alignnone&quot; data-ratio=&quot;0.6275362318840579&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwHndN2uoqRPb9Yb1VnB5wwP2ic8iaE6RDlROHdfk5g5Wpllvs6UktCuLCpib8V7OImutvXldKtfOkLw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;690&quot; height=&quot;433&quot; width=&quot;690&quot;/&gt;&lt;/p&gt;
&lt;h3 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;解释器是什么？&lt;/span&gt;&lt;/h3&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;解释器 非常像编译器，它也是读入编程语言的代码，然后处理这些代码。尽管如此，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;解释器会跳过了代码生成，然后即时编译并执行 AST。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;解释器最大的优点就在于在你debug期间运行程序所消耗的时间。编译器编译一个程序可能在一秒到几分钟不等，然而解释器可以立即开始执行程序，而不必编译。解释器最大的缺点在于它必须安装在用户电脑上，程序才可以执行。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.20279146141215107&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwHndN2uoqRPb9Yb1VnB5wweicKziau6ayH1M5xXFGLphmGicW5LJdP93DVoDVicX5kjxBYYP169OsH1w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1218&quot;/&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;虽然这篇文章主要是关于编译器的，但是对于编译器和解释器之间的区别和编译器相关的内容一定要弄清楚。&lt;/span&gt;&lt;/p&gt;
&lt;h2 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;1. 词法分析&lt;/span&gt;&lt;/h2&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;第一步是把输入一个词一个词的拆分开。这一步被叫做 词法分析,或者说是分词。这一步的关键就在于 &lt;strong&gt;我们把字符组合成我们需要的单词、标识符、符号等等。&lt;/strong&gt; 词法分析大多都不需要处理逻辑运算像是算出 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;2+2&lt;/code&gt; – 其实这个表达式只有三种 标记：一个数字：&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;2&lt;/code&gt;,一个加号，另外一个数字：&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;2&lt;/code&gt;。&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;让我们假设你正在解析一个像是 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;12+3&lt;/code&gt; 这样的字符串：它会读入字符 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;1&lt;/code&gt;，&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;2&lt;/code&gt;，&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;+&lt;/code&gt;，和 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;3&lt;/code&gt;。我们已经把这些字符拆分开了，但是现在我们必须把他们组合起来；这是分词器的主要任务之一。举个例子，我们得到了两个单独的字符 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;1&lt;/code&gt; 和 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;2&lt;/code&gt;，但是我们需要把它们放到一起，然后把它们解析成为一个整数。至于 &lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;+&lt;/code&gt;也需要被识别为加号，而不是它的字符值 – 字符值是43 。&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;如果你可以阅读过上面的代码，并且弄懂了这样做的含义，接下来的 Rust 分词器会组合数字为32位整数，加号就最后了标记值 Plus（加）。&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;rust playground&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;&lt;em&gt;你可以点击 Rust playgroud 左上角的 “Run” 按钮来编译和执行你浏览器中的代码。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;在一种编程语言的编译器中，词法解析器可能需要许多不同类型的标记。例如：符号，数字，标识符，字符串，操作符等。想知道要从源文件中提取怎样的标记完全取决于编程语言本身。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;&lt;table class=&quot;crayon-table&quot; width=&quot;NaN&quot;&gt;&lt;tbody readability=&quot;13.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;41.5&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; width=&quot;1555&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-t&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-h&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;crayon-st&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-e&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-e&quot;&gt;Keyword&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;LParen&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;RParen&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;LBrace&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Keyword&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-v&quot;&gt;Semicolon&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Keyword&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Semicolon&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Operator&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Assignment&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-e&quot;&gt;Operator&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Assignment&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-t&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Semicolon&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Keyword&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-st&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Operator&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Minus&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Semicolon&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;RBrace&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-sy&quot;&gt;)]&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot; center=&quot;&quot;&gt;&lt;strong&gt;&lt;span&gt;C 语言的样例代码已经进行过词法分析，并且输出了它的标记&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;2. 解析&lt;/span&gt;&lt;/h2&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;解析器确实是语法解析的核心。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;解析器提取由词法分析器产生的标记，并尝试判断它们是否符合特定的模式，然后把这些模式与函数调用，变量调用，数学运算之类的表达式关联起来。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;解析器逐词地定义编程语言的语法。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;int a = 3&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;a: int = 3&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的区别在于解析器的处理上面。解析器决定了语法的外在形式是怎样的。它确保括号和花括号的左右括号是数量平衡的，每个语句结尾都有一个分号，每个函数都有一个名称。当标记不符合预期的模式时，解析器就会知道标记的顺序不正确。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;你可以写好几种不同类型的解析器。最常见的解析器之一是从上到下的，递归降解的解析器。递归降解的解析器是用起来最简单也是最容易理解的解析器。我写的所有解析器样例都是基于递归降解的。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;解析器解析的语法可以使用一种 语法 表示出来。像 EBNF 这样的语法就可以描述一个解析器用于解析简单的数学运算，像是这样 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;12+3&lt;/span&gt;&lt;/code&gt;&lt;span&gt; :&lt;/span&gt;&lt;/p&gt;

&lt;table class=&quot;crayon-table&quot; width=&quot;NaN&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;6&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; width=&quot;581&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;additive&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;expr &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;additive_expr&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;'+'&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-i&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot; center=&quot;&quot;&gt;&lt;strong&gt;&lt;span&gt;简单加法和减法表达式的 EBNF 语法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot;&gt;请记住语法文件&lt;/span&gt;&lt;strong microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot;&gt;并不是&lt;/strong&gt;&lt;span microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot;&gt;解析器，但是它确实是解析器的一种表达形式。你可以围绕上面的语法创建一个解析器。语法文件可以被人使用并且比起直接阅读和理解解析器的代码要简单许多。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;那种语法的解析器应该是 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;expr&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 解析器，因为它直接与所有内容都相关的顶层。唯一有效的输入必须是任意数字，加号或减号，任意数字。&lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;expr&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 需要一个 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;additive_expr&lt;/span&gt;&lt;/code&gt;&lt;span&gt;,这主要出现在加法和减法表达式中。&lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;additive_expr&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 首先需要一个 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;term&lt;/span&gt;&lt;/code&gt;&lt;span&gt; （一个数字），然后是加号或者减号，最后是另一个 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;term&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6007957559681698&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwHndN2uoqRPb9Yb1VnB5wwsP7FWCI7xhzibRicW9cd0HJI4ia5LLic7ILgTQlbuzO7AQd9v6NNuhiadnQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;754&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot; center=&quot;&quot;&gt;&lt;strong&gt;&lt;span&gt;解析 12+3 产生的样例 AST&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot;&gt;解析器在解析时产生的树状结构被称为 抽象的语法树，或者称之为 AST。&lt;/strong&gt;&lt;span microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot;&gt; ast 中包含了所有要进行操作。解析器不会计算这些操作，它只是以正确的顺序来收集其中的标记。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;我之前补充了我们的词法分析器代码，以便它与我们的语法想匹配，并且可以产生像图表一样的 AST。我用 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;// BEGIN PARSER //&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;// END PARSER //&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的注释标记出了新的解析器代码的开头和结尾。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;rust playground&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;我们可以再深入一点。假设我们想要支持只有数字没有运算符的输入，或者添加除法和乘法，甚至添加优先级。只要简单地修改一下语法文件，这些都是完全有可能的，任何调整都会直接反映在我们的解析器代码中。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;&lt;table class=&quot;crayon-table&quot; width=&quot;NaN&quot;&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;11&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; width=&quot;595&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;additive&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;expr &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;additive_expr&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;multiplicative_expr&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;'+'&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;multiplicative&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;expr &lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;multiplicative_expr&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;crayon-h&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot; center=&quot;&quot;&gt;&lt;strong&gt;&lt;span&gt;新的语法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; rgb=&quot;&quot; color:=&quot;&quot; text-decoration:=&quot;&quot; underline=&quot;&quot;&gt;https://play.rust-lang.org/?gist=1587a5dd6109f70cafe68818a8c1a883&amp;amp;version=nightly&amp;amp;mode=debug&amp;amp;edition=2018&lt;/span&gt;&lt;/p&gt;

&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot;&gt;&lt;img class=&quot;M_cur_zoom_out&quot; data-ratio=&quot;0.6921587608906099&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwHndN2uoqRPb9Yb1VnB5wwEarAlIGAGWJr1cDehxJYSxY7zTlWUXNmKGk272ZGxAH9VECf3rV0icA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1033&quot;/&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt; &lt;/p&gt;
&lt;blockquote microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;针对 C 语言语法编写的解析器（又叫做词法分析器）和解析器样例。从字符序列的开始 “if(net&amp;gt;0.0)total+=net(1.0+tax/100.0);”,扫描器组成了一系列标记，并且对它们进行分类，例如，标识符，保留字，数字，或者运算符。后者的序列由解析器转换成语法树，然后由其他的编译器分阶段进行处理。扫描器和解析器分别处理 C 语法中的规则和与上下文无关的部分。引自：Jochen Burghardt.来源.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;3. 生成代码&lt;/span&gt;&lt;/h2&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;代码生成器 接收一个 AST ,然后生成相应的代码或者汇编代码。代码生成器必须以递归下降的顺序遍历AST中的所有内容-就像是解析器的工作方式一样-之后生成相应的内容，只不过这里生成的不再是语法树，而是代码了。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;https://godbolt.org/z/K8416_&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;如果复制并打开上面的链接，你就可以看到左侧样例代码产生的汇编代码。汇编代码的第三行和第四行展示了编译器在AST中遇到常量的时候是怎样为这些常量生成相应的代码的。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;Godbolt Compiler Explorer 是一个很棒的工具，允许你用高级语言编写代码，并查看它产生的汇编代码。你可以有点晕头转向了，想知道产生的是哪种代码，但不要忘记给你的编程语言编译器添加优化选项来看看它到底有多智能。（对于 Rust 是 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;-O&lt;/span&gt;&lt;/code&gt;&lt;span&gt; ）&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;如果你对于编译器是在汇编语言中怎样把一个本地变量保存到内存中感兴趣的话，这篇文章（“代码生成”部分）非常详细地解释了堆栈的相关知识。大多数情况下，当变量不是本地变量的时候，高级编译器会在堆区为变量分配空间，并把它们保存到堆区，而不是栈区。你可以从这个 StackOverflow 的回答上阅读更多关于变量存储的内容。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;  因为汇编是一个完全不同的，而且复杂的主题，因此这里我不会过多地讨论它。我只是想强调代码生成器的重要性和它的作用。此外，代码生成器不仅可以产生汇编代码。Haxe 编译器有一个可以产生 6 种以上不同的编程语言的后端：包括 C++,Java,和 Python。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;后端指的是编译器的代码生成器或者表达式解析器；因此前端是词法分析器和解析器。同样也有一个中间端，它通常与优化和 IR 有关，这部分会在稍后解释。后端通常与前端无关，后端只关心它接收到的 AST。这意味着可以为几种不同的前端或者语言重用相同的后端。大名鼎鼎的 GNU Compiler Collection 就属于这种情况。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;我找不到比我的 C 编译器后端更好的代码生成器示例了；你可以在这里查看。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;在生成汇编代码之后，这些汇编代码会被写入到一个新的汇编文件中 (&lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;.s&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 或 &lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;.asm&lt;/span&gt;&lt;/code&gt;&lt;span&gt;)。然后该文件会被传递给汇编器，汇编器是汇编语言的编译器，它会生成相应的二进制代码。之后这些二进制代码会被写入到一个新的目标文件中 (&lt;/span&gt;&lt;code andale=&quot;&quot; mono=&quot;&quot; dejavu=&quot;&quot; sans=&quot;&quot; monospace=&quot;&quot;&gt;&lt;span&gt;.o&lt;/span&gt;&lt;/code&gt;&lt;span&gt;) 。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;&lt;strong&gt;目标文件是机器码，但是它们并不可以被执行。&lt;/strong&gt; &lt;/span&gt;&lt;span&gt;为了让它们变成可执行文件，目标文件需要被链接到一起。链接器读取通用的机器码，然后使它变为一个可执行文件、共享库或是 静态库。更多关于链接器的知识在这里。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;链接器是因操作系统而不同的应用程序。随便一个第三方的链接器都应该可以编译你后端产生的目标代码。因此在写编译器的时候不需要创建你自己的链接器。&lt;/span&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot;&gt;&lt;img class=&quot;aligncenter&quot; data-ratio=&quot;1.1179624664879357&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwHndN2uoqRPb9Yb1VnB5wwtZJRUMgAkjlHaXk1QHFQWvYCWftBGl0pkRKIJdf1ZDhTxMnO4VynLA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;373&quot;/&gt;&lt;/p&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; line-height:=&quot;&quot; em=&quot;&quot; justify=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;编译器可能有 中间表示,或者简称 IR 。&lt;strong&gt;IR 主要是为了在优化或者翻译成另一门语言的时候，无损地表示原来的指令。&lt;/strong&gt; IR 不再是原来的代码；IR 是为了寻找代码中潜在的优化而进行的无损简化。循环展开 和 向量化 都是利用 IR 完成的。更多关于 IR 相关的优化可以在这个 PDF 中找到。&lt;/span&gt;&lt;/p&gt;
&lt;h2 microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; rgb=&quot;&quot; white-space:=&quot;&quot; normal=&quot;&quot; margin-left:=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt; 总结 &lt;/span&gt;&lt;/h2&gt;
&lt;p microsoft=&quot;&quot; yahei=&quot;&quot; myriad=&quot;&quot; pro=&quot;&quot; lato=&quot;&quot; helvetica=&quot;&quot; neue=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; rgb=&quot;&quot; text-align:=&quot;&quot; justify=&quot;&quot; em=&quot;&quot; px=&quot;&quot;&gt;&lt;span&gt;当你理解了编译器的时候，你就可以更有效地使用你的编程语言。或许有一天你会对创建你自己的编程语言感兴趣？我希望这能够帮到你。&lt;/span&gt;&lt;/p&gt;
&lt;section&gt;&lt;section class=&quot;V5&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;section/&gt;&lt;/section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;∑编辑 | Gemini&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;来源 | 伯乐在线&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;更多精彩：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554187&amp;amp;idx=1&amp;amp;sn=35143b89b06fe4f5273f210b2d6a7c91&amp;amp;chksm=8b7e3290bc09bb86f7bb3f158d993df3f019a7e9ce3bc8897e164e35a2ebe5a4e0bdcc111089&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;哈尔莫斯：怎样做数学研究&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554187&amp;amp;idx=2&amp;amp;sn=c75293463823e4d6769638e54b64f3ec&amp;amp;chksm=8b7e3290bc09bb86dc1e3f8e78d0b6de8811d75f3dcb092766fcb8ba0bab1cd9ba1ddfcef3b9&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;扎克伯格2017年哈佛大学毕业演讲&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554141&amp;amp;idx=1&amp;amp;sn=74a74c4e4d08eba0dd734528aa0b08e7&amp;amp;chksm=8b7e32c6bc09bbd073b34c22004ac6e4d99c8a0caa64c7d3dbaa8fd55e6ef1fc87ed545b8b7e&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;线性代数在组合数学中的应用&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554105&amp;amp;idx=1&amp;amp;sn=224ab0d38fb57facea70081385360d58&amp;amp;chksm=8b7e3222bc09bb34d3b6df665087e64b233778ed427598d08e809f96261e898c1c0de6188bbc&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;你见过真的菲利普曲线吗？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554096&amp;amp;idx=1&amp;amp;sn=46783e6ace661a3ccbd8a6e00fb17bf9&amp;amp;chksm=8b7e322bbc09bb3d73dc240f2280bddf2ef8b7824a459a24bd7f6eeadd60edb96e690d467f6e&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;支持向量机(SVM)的故事是这样子的&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554077&amp;amp;idx=2&amp;amp;sn=3ecd63f2205fd59df8c360c97c943ef6&amp;amp;chksm=8b7e3206bc09bb10a36b09547efe0c54f41423b180622c1fdc7f14747ccc8f8fecee3a12e2cd&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;深度神经网络中的数学，对你来说会不会太难？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652554062&amp;amp;idx=1&amp;amp;sn=17f0a88d5e15d1adfc29c690a0b1b89b&amp;amp;chksm=8b7e3215bc09bb038c6caa59d0f49cedd929f9be1104beea3411186cf4c81de69efc71a17883&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;编程需要知道多少数学知识？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553994&amp;amp;idx=2&amp;amp;sn=74f67a1a3ac5c705f51f2ba619b717f6&amp;amp;chksm=8b7e3251bc09bb47dce73319948780081efe0333ffae99ea04a9eeabbcfcb38a29b4b73fb7c1&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;陈省身——什么是几何学&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553949&amp;amp;idx=2&amp;amp;sn=d171680964df774397efd9db81c00347&amp;amp;chksm=8b7e3386bc09ba90bf0f6e1cabf82ba86ff94630cb5ee2e0f14ff9455db52be32ddbc289d237&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;模式识别研究的回顾与展望&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553747&amp;amp;idx=1&amp;amp;sn=e25f866d510cf2338b6d9e1b32bafb62&amp;amp;chksm=8b7e3348bc09ba5ea1caaf2a7bfcd80a7e7559b1983e473eda2206e56df7f38ef3cecf2f77c7&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;曲面论&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553811&amp;amp;idx=1&amp;amp;sn=000305074471c3d4c681c9cfd4e4bc93&amp;amp;chksm=8b7e3308bc09ba1e3043f5568a3a75a045285a1de97e4da36918bac68e7c6d579ad5d8cc25ab&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;自然底数e的意义是什么？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553670&amp;amp;idx=1&amp;amp;sn=ea75a448c016f7229e4cb298f6017614&amp;amp;chksm=8b7e309dbc09b98bc622acdf1223c7c2f743609d0a577dd43c9e9d98ab4da4314be7c1002bd5&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;如何向5岁小孩解释什么是支持向量机（SVM）？&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553646&amp;amp;idx=2&amp;amp;sn=bbf8f1be1ca1c66ad3f3270babea6885&amp;amp;chksm=8b7e30f5bc09b9e3e1a4fa735412e2fcb20df9e78f2f346bf578018ceab77de6326095d1bf71&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;华裔天才数学家陶哲轩自述&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞  &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;amp;mid=2652553596&amp;amp;idx=1&amp;amp;sn=bc5064e871831f862db6d19c3de6327e&amp;amp;chksm=8b7e3027bc09b93194fa09b25e2df400421c062927bb9120912875f8aaf0bb25553fc8f51e3b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;代数，分析，几何与拓扑，现代数学的三大方法论&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkyYz3lMMNbPl0dUclk5ZD73d9SyEIPGw7urGfEVawbqf1ZpULxMVHicWIoargEAibbEYIl6ibob6CLeg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 18 Nov 2018 15:52:57 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/TVuOzGm02p</dc:identifier>
</item>
</channel>
</rss>