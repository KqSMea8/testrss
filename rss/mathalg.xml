<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>傅里叶变换和拉普拉斯变换的物理解释及区别</title>
<link>http://www.jintiankansha.me/t/lYomMDJpty</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/lYomMDJpty</guid>
<description>&lt;section&gt;&lt;span mpa-none-contnet=&quot;t&quot;&gt;“&lt;/span&gt;
&lt;section/&gt;&lt;/section&gt;
&lt;section readability=&quot;4&quot;&gt;&lt;p mpa-is-content=&quot;t&quot;&gt;&lt;span&gt;傅里叶变换在物理学、数论、组合数学、信号处理、概率论、统计学、密码学、声学、光学、海洋学、结构动力学等领域都有着广泛的应用（例如在信号处理中，傅里叶变换的典型用途是将信号分解成幅值分量和频率分量）。&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;section/&gt;&lt;span mpa-none-contnet=&quot;t&quot;&gt;”&lt;/span&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;傅里叶变换能将满足一定条件的某个函数表示成三角函数（正弦和/或余弦函数）或者它们的积分的线性组合。在不同的研究领域，傅里叶变换具有多种不同的变体形式，如连续傅里叶变换和离散傅里叶变换。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;傅里叶变换是一种解决问题的方法，一种工具，一种看待问题的角度。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;理解的关键是：一个连续的信号可以看作是一个个小信号的叠加，从时域叠加与从频域叠加都可以组成原来的信号，将信号这么分解后有助于处理。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我们原来对一个信号其实是从时间的角度去理解的，不知不觉中，其实是按照时间把信号进行分割，每一部分只是一个时间点对应一个信号值，一个信号是一组这样的分量的叠加。傅里叶变换后，其实还是个叠加问题，只不过是从频率的角度去叠加，只不过每个小信号是一个时间域上覆盖整个区间的信号，但他确有固定的周期，或者说，给了一个周期，我们就能画出一个整个区间上的分信号，那么给定一组周期值（或频率值），我们就可以画出其对应的曲线，就像给出时域上每一点的信号值一样，不过如果信号是周期的话 ，频域的更简单，只需要几个甚至一个就可以了，时域则需要整个时间轴上每一点都映射出一个函数值。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;傅里叶变换就是将一个信号的时域表示形式映射到一个频域表示形式；逆傅里叶变换恰好相反。这都是一个信号的不同表示形式。它的公式会用就可以，当然把证明看懂了更好。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;对一个信号做傅里叶变换，可以得到其频域特性，包括幅度和相位两个方面。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;幅度是表示这个频率分量的大小，那么相位呢，它有什么物理意义？频域的相位与时域的相位有关系吗？信号前一段的相位（频域）与后一段的相位的变化是否与信号的频率成正比关系。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;傅里叶变换就是把一个信号，分解成无数的正弦波（或者余弦波）信号。也就是说，用无数的正弦波，可以合成任何你所需要的信号。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;想一想这个问题：给你很多正弦信号，你怎样才能合成你需要的信号呢？答案是要两个条件，一个是每个正弦波的幅度，另一个就是每个正弦波之间的相位差。所以现在应该明白了吧，频域上的相位，就是每个正弦波之间的相位。　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;傅里叶变换用于信号的频率域分析，一般我们把电信号描述成时间域的数学模型，而数字信号处理对信号的频率特性更感兴趣，而通过傅立叶变换很容易得到信号的频率域特性。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;傅里叶变换简单通俗理解就是把看似杂乱无章的信号考虑成由一定振幅、相位、频率的基本正弦（余弦）信号组合而成，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;傅里叶变换的目的就是找出这些基本正弦（余弦）信号中振幅较大（能量较高）信号对应的频率，从而找出杂乱无章的信号中的主要振动频率特点。如减速机故障时，通过傅里叶变换做频谱分析，根据各级齿轮转速、齿数与杂音频谱中振幅大的对比，可以快速判断哪级齿轮损伤。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;拉普拉斯变换，是工程数学中常用的一种积分变换。它是为简化计算而建立的实变量函数和复变量函数间的一种函数变换。对一个实变量函数作拉普拉斯变换，并在复数域中作各种运算，再将运算结果作拉普拉斯反变换来求得实数域中的相应结果，往往比直接在实数域中求出同样的结果在计算上容易得多。拉普拉斯变换的这种运算步骤对于求解线性微分方程尤为有效，它可把微分方程化为容易求解的代数方程来处理，从而使计算简化。在经典控制理论中，对控制系统的分析和综合，都是建立在拉普拉斯变换的基础上的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;引入拉普拉斯变换的一个主要优点，是可采用传递函数代替微分方程来描述系统的特性。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这就为采用直观和简便的图解方法来确定控制系统的整个特性（见信号流程图、动态结构图）、分析控制系统的运动过程（见奈奎斯特稳定判据、根轨迹法），以及综合控制系统的校正装置（见控制系统校正方法）提供了可能性。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;拉普拉斯变换在工程学上的应用：应用拉普拉斯变换解常变量齐次微分方程，可以将微分方程化为代数方程，使问题得以解决。在工程学上，拉普拉斯变换的重大意义在于：将一个信号从时域上，转换为复频域（s域）上来表示；在线性系统，控制自动化上都有广泛的应用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在数字信号处理中，Z变换是一种非常重要的分析工具。但在通常的应用中，我们往往只需要分析信号或系统的频率响应，也即是说通常只需要进行傅里叶变换即可。那么，为什么还要引进Z变换呢？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Z变换和傅里叶变换之间有存在什么样的关系呢？&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;傅里叶变换的物理意义非常清晰：将通常在时域表示的信号，分解为多个正弦信号的叠加。每个正弦信号用幅度、频率、相位就可以完全表征。傅里叶变换之后的信号通常称为频谱，频谱包括幅度谱和相位谱，分别表示幅度随频率的分布及相位随频率的分布。在自然界，频率是有明确的物理意义的，比如说声音信号，男同胞声音低沉雄浑，这主要是因为男声中低频分量更多；女同胞多高亢清脆，这主要是因为女声中高频分量更多。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;对一个信号来说，就包含的信息量来讲，时域信号及其相应的傅里叶变换之后的信号是完全一样的。那傅里叶变换有什么作用呢？因为有的信号主要在时域表现其特性，如电容充放电的过程；而有的信号则主要在频域表现其特性，如机械的振动，人类的语音等。若信号的特征主要在频域表示的话，则相应的时域信号看起来可能杂乱无章，但在频域则解读非常方便。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在实际中，当我们采集到一段信号之后，在没有任何先验信息的情况下，直觉是试图在时域能发现一些特征，如果在时域无所发现的话，很自然地将信号转换到频域再看看能有什么特征。信号的时域描述与频域描述，就像一枚硬币的两面，看起来虽然有所不同，但实际上都是同一个东西。正因为如此，在通常的信号与系统的分析过程中，我们非常关心傅里叶变换。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;既然人们只关心信号的频域表示，那么Z变换又是怎么回事呢？&lt;strong&gt;&lt;span&gt;&lt;span&gt;要说到Z变换，可能还要先追溯到拉普拉斯变换&lt;/span&gt;。&lt;/span&gt;&lt;/strong&gt;拉普拉斯变换是以法国数学家拉普拉斯命名的一种变换方法，主要是针对连续信号的分析。拉普拉斯和傅里叶都是同时代的人，他们所处的时代在法国是处于拿破仑时代，国力鼎盛。在科学上也取代英国成为当时世界的中心，在当时众多的科学大师中，拉普拉斯、拉格朗日、傅里叶就是他们中间最为璀璨的三颗星。傅里叶关于信号可以分解为正弦信号叠加的论文，其评审人即包括拉普拉斯和拉格朗日。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;回到正题，傅里叶变换虽然好用，而且物理意义明确，但有一个最大的问题是其存在的条件比较苛刻，比如时域内绝对可积的信号才可能存在傅里叶变换。拉普拉斯变换可以说是推广了这以概念。在自然界，指数信号exp(-x)是衰减最快的信号之一，对信号乘上指数信号之后，很容易满足绝对可积的条件。因此将原始信号乘上指数信号之后一般都能满足傅里叶变换的条件，这种变换就是拉普拉斯变换。这种变换能将微分方程转化为代数方程，在18世纪计算机还远未发明的时候，意义非常重大。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从上面的分析可以看出，傅里叶变换可以看做是拉普拉斯的一种特殊形式，即所乘的指数信号为exp(0)。也即是说拉普拉斯变换是傅里叶变换的推广，是一种更普遍的表达形式。在进行信号与系统的分析过程中，可以先得到拉普拉斯变换这种更普遍的结果，然后再得到傅里叶变换这种特殊的结果。这种由普遍到特殊的解决办法，已经证明在连续信号与系统的分析中能够带来很大的方便。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Z变换可以说是针对离散信号和系统的拉普拉斯变换，由此我们就很容易理解Z变换的重要性，也很容易理解Z变换和傅里叶变换之间的关系。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;Z变换中的Z平面与拉普拉斯中的S平面存在映射的关系，z=exp(Ts)。在Z变换中，单位圆上的结果即对应离散时间傅里叶变换的结果。&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-source=&quot;bj.96weixin.com&quot;&gt;&lt;section&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz/wyice8kFQhf5geQK3gu2FUugjB8iaSGpjO38zXqdgwMx0oC9BCs08koDu1N0thHuib7TjD5SdkYZalvkm0cAClI9Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; width=&quot;22px&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;span&gt;∑编辑&lt;span&gt; | &lt;/span&gt;Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来源 | &lt;span&gt;&lt;span&gt;CSDN网kevinhg的博客&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9366666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkwJ4BpvBcQhGAbtWZZvV69s7GickZGibsKgYkTQkiaZfLYOmGS9iaaoibadibGJhT18OVZkfeJmCSUSD0zw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;br/&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 05 Feb 2018 14:18:54 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/lYomMDJpty</dc:identifier>
</item>
<item>
<title>图像风格迁移(Neural Style)简史</title>
<link>http://www.jintiankansha.me/t/0FSDKj3uVS</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/0FSDKj3uVS</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6583333333333333&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NPgZbq8EGVpMutQIrNbsMtwGbE5dbibfHo6j7ibR9V3x1ic4WGSoOPrlR2XicdpX1jXfMyfPQ44XL3c5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt; 图像风格迁移科技树&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;


&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot; readability=&quot;1&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot; readability=&quot;2&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;什么是图像风格迁移？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;先上一组图。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以下每一张图都是一种不同的艺术风格。作为非艺术专业的人，我就不扯艺术风格是什么了，每个人都有每个人的见解，有些东西大概艺术界也没明确的定义。如何要把一个图像的风格变成另一种风格更是难以定义的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对于程序员，特别是对于机器学习方面的程序员来说，这种模糊的定义简直就是噩梦。到底怎么把一个说都说不清的东西变成一个可执行的程序，是困扰了很多图像风格迁移方面的研究者的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7833333333333333&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMUQKibXqPvhH0brXibDc00tw0z52nNniaMB7QOT5CtL6cNfAuGQ22zmlzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在神经网络之前，图像风格迁移的程序有一个共同的思路：分析某一种风格的图像，给那一种风格建立一个数学或者统计模型，再改变要做迁移的图像让它能更好的符合建立的模型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这样做出来效果还是不错的，比如下面的三张图中所示，但一个很大的缺点：一个程序基本只能做某一种风格或者某一个场景。因此基于传统风格迁移研究的实际应用非常有限。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.285&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMt2mIEYLImTaU5nJKHKK0V6J19lIYicnHibsibv6cnyFibgfC7ysrmIiaP3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;h6&gt;&lt;span&gt;景色照片时间迁移&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;span&gt;改变了这种现状的是两篇Gatys的论文，在这之前让程序模仿任意一张图片画画是没法想象的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.1383333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMsH3ibyAVJDicdhico8PJiaG3VWKPC9znYV5ZsP1YtEibHT49pc7ysCqTe2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;第一个基于神经网络的图像风格迁移算法，生成时间：5-20分钟&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我想试着从头开始讲起，从Gatys et al., 2015a和Gatys et al., 2015b中用到的一些技术的历史开始讲起，用最简单的方法说清楚基于神经网络的图像风格迁移的思路是什么，以及Gatys为什么能够想到使用神经网络来实现图像风格迁移。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果大家对这个感兴趣的话，我将来可以继续写一些关于Neural Style最新的一些研究的进展，或者其他相关的一些图像生成类的研究，对抗网络之类的。写的有错误的不到位的地方请随意指正。&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot; readability=&quot;1&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot; readability=&quot;2&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Neural Style元年前20年-前3年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;要理解对于计算机来说图片的风格是什么，只能追根溯源到2000年以及之前的图片纹理生成的研究上。明明是图像风格迁移的文章，为什么要说到图片纹理？在这儿我先卖个关子吧。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;据我所知，在2015年前所有的关于图像纹理的论文都是手动建模的，其中用到的最重要的一个思想是：纹理可以用图像局部特征的统计模型来描述。没有这个前提一切模型无从谈起。什么是统计特征呢，简单的举个例子——&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.3666666666666667&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMOfvuSWEsTT3TetGc1epoIu21o1kqNCSWevibr9lCJ65GBxWibUILNuPg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;早期纹理生成结果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;与此同时，图像风格迁移也并无建树，甚至比纹理生成还惨。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为纹理生成至少不管生成什么样子的纹理都叫纹理生成，然而图像风格迁移这个领域当时连个合适的名字都没有，因为每个风格的算法都是各管各的，互相之间并没有太多的共同之处。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如油画风格迁移，里面用到了7种不同的步骤来描述和迁移油画的特征。又比如头像风格迁移里用到了三个步骤来把一种头像摄影风格迁移到另一种上。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以上十个步骤里没一个重样的，可以看出图像风格处理的研究在2015年之前基本都是各自为战，捣鼓出来的算法也没引起什么注意。相比之下Photoshop虽然要手动修图，但比大部分算法好用多了。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.44666666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbM8yw9SNGb6t6icgV1bbMluhpkSBicULwKdJLGxiatvmYyVJdibXgh46BvKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt; 头像风格迁移&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.32&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMdlNCxLeQ2koN0BWRksibAI9JosOE6e5ysUnEOBCYf4Qpge9qkichMAHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;油画风格迁移&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同一个时期，计算机领域进展最大的研究之一可以说是计算机图形学了。简单的来说计算机图形学就是现在几乎所有游戏的基础，不论是男友1(战地1)里穿越回一战的战斗场景，还是FGO之类的手游，背后都少不了一代又一代的图形学研究者的工作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在他们整日整夜忙着研究如何能让程序里的妹纸变成有血有肉的样子的时候，点科技树点出了一个重要的分支：显卡（GPU）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;游戏机从刚诞生开始就伴随着显卡。显卡最大的功能当然是处理和显示图像。不同于CPU的是，CPU早期是单线程的，也就是一次只能处理一个任务，GPU可以一次同时处理很多任务，虽然单个任务的处理能力和速度比CPU差很多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如一个128x128的超级马里奥游戏， 用CPU处理的话，每一帧都需要运行128x128=16384歩，而GPU因为可以同时计算所有像素点，时间上只需要1步，速度比CPU快很多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了让游戏越来越逼近现实，显卡在过去20年内也变得越来越好。巧合的是，显卡计算能力的爆炸性增长直接导致了被放置play十几年的神经网络的复活和深度学习的崛起，因为神经网络和游戏图形计算的相似处是两者都需要对大量数据进行重复单一的计算。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可以说如果没有游戏界就没有深度学习，也就没有Neural Style。所以想学机器学习先得去steam买东西，支持显卡研究。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5733333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMncUtg9Jnvj6yLAdmQmIz2nqsIECibEaMUoVKKgFZTnTU4uuj9g8y2mQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt; ImageNet物体识别比赛中使用GPU的队伍数量逐年上升，错误率逐年下降&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;提到神经网络我想稍微讲一下神经网络（特别是卷积神经网络）和传统做法的区别，已经有了解的可以跳过本段。卷积神经网络分为很多层，每一层都是由很多单个的人工神经元组成的。可以把每个神经元看作一个识别器，用刚刚的栗子来说的话，每一个或者几个神经元的组合都可以被用来识别某个特征，比如栗子的开口。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在训练前它们都是随机的，所以啥都不能做，训练的过程中它们会自动的被变成一个个不同的识别器并且相互组合起来，大量的识别器组合起来之后就可以识别物体了。整个过程除了一开始的神经网络的设计和参数的调整之外其他全是自动的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4517857142857143&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbM2pNXBZ4ibVK3C78WmaA0CmHHYK3UxJrKyK0UwozJqS9lt5aeQcpyZbg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;560&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h6&gt;&lt;span&gt;卷积神经网络图例&lt;/span&gt;&lt;/h6&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot; readability=&quot;1&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot; readability=&quot;2&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Neural Style元年前3年-前1年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;2012-2014年的时候深度学习刚开始火，火的一个主要原因是因为人们发现深度学习可以用来训练物体识别的模型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之前的物体识别模型有些是用几何形状和物体的不同部分比较来识别，有些按颜色，有些按3d建模，还有一些按照局部特征。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;传统物体识别算法中值得一提的是按照比较局部特征来识别物体，其原理如下。比如我们的目标是在图片之中找到这个人：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.2380952380952381&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMmDpXYLeN4DJDTGY0wdYdfmFBc6UibyWDcibnZlrqVpMwuZEIicM65ATJg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;147&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;目标物体&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对于程序而言这个人就是一堆像素嘛，让它直接找的话它只能一个个像素的去比较然后返回最接近的了（近邻算法）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但是现实中物体的形状颜色会发生变化，如果手头又只有这一张照片，直接去找的速度和正确率实在太低。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有研究者想到，可以把这个人的照片拆成许多小块，然后一块一块的比较(方法叫Bag of Features)。最后哪一块区域相似的块数最多就把那片区域标出来。这种做法的好处在于即使识别一个小块出了问题，还有其他的小块能作为识别的依据，发生错误的风险比之前大大降低了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.2965116279069768&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMsbxQyfVjqdKqXLyJ2pKeNMl3ibUWx7mibfabrmZvGbHqgiaDsibt33caTg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot; width=&quot;298.672px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; Bag of Features&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这种做法最大的缺点就是它还是把一个小块看成一坨像素然后按照像素的数值去比较，之前提到的改变光照改变形状导致物体无法被识别的问题根本上并没有得到解决。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用卷积神经网络做的物体识别器其实原理和bag of features差不了太多，只是把有用的特征(feature)都装到了神经网络里了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;  刚提到了神经网络经过训练会自动提取最有用的特征，所以特征也不再只是单纯的把原来的物体一小块一小块的切开产生的，而是由神经网络选择最优的方式提取。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9964285714285714&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMTYTD1uCBgIcfe3nlDO3MiapUplS92ic0gIPFa6yGYSm5Y0QG8nFnAzwg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;560&quot;/&gt;&lt;/p&gt;
&lt;h6&gt;&lt;span&gt;卷积神经网络提取的特征示意图，每一格代表一个神经元最会被哪种图片激活&lt;/span&gt;&lt;/h6&gt;
&lt;h6&gt;&lt;span&gt;卷积神经网络当时最出名的一个物体识别网络之一叫做VGG19，结构如下：&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.75&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMDroxj5k4495d94UowNOVyvHU07x98pb0AAWowG3zkjenTSZRzhKmUQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;VGG19网络结构&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每一层神经网络都会利用上一层的输出来进一步提取更加复杂的特征，直到复杂到能被用来识别物体为止，所以每一层都可以被看做很多个局部特征的提取器。VGG19在物体识别方面的精度甩了之前的算法一大截，之后的物体识别系统也基本都改用深度学习了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为VGG19的优秀表现，引起了很多兴趣和讨论，但是VGG19具体内部在做什么其实很难理解，因为每一个神经元内部参数只是一堆数字而已。每个神经元有几百个输入和几百个输出，一个一个去梳理清楚神经元和神经元之间的关系太难。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是有人想出来一种办法：虽然我们不知道神经元是怎么工作的，但是如果我们知道了它的激活条件，会不会能对理解神经网络更有帮助呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是他们编了一个程序，（用的方法叫back propagation，和训练神经网络的方法一样，只是倒过来生成图片。）把每个神经元所对应的能激活它的图片找了出来，之前的那幅特征提取示意图就是这么生成的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有人在这之上又进一步，觉得既然我们能找到一个神经元的激活条件，那能不能把所有关于“狗’的神经元找出来，让他们全部被激活，然后看看对于神经网络来说”狗“长什么样子的？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;长得其实是这样的：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.625&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMuuh9yMLDfhtHQjUo4MqTtxmdVKG4rKEAJTbUia1hxE1K1k7h7JdyCBw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;神经网络想象中的狗&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是神经网络想象中最完美的狗的样子，非常迷幻，都可以自成一派搞个艺术风格出来了。而能把任何图片稍作修改让神经网络产生那就是狗的幻觉的程序被称作deep dream。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5633333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMvU22E3XozoBC09nIxQt0ZoOg7p9pxdh15Xd7RvUHB7UHfia8NuHuysg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;Deep Dream&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2/&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Neural Style元年&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;有了这么多铺垫，一切的要素已经凑齐，前置科技树也都已经被点亮了，现在进入正题了。基于神经网络的图像风格迁移在2015年由Gatys et al. 在两篇论文中提出：Gatys et al., 2015a和Gatys et al., 2015b。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Gatys et al., 2015a论文地址：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://t.cn/R9cnTeQ&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Gatys et al., 2015b论文地址：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://arxiv.org/abs/1508.06576&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们先说第一篇。第一篇比起之前的纹理生成算法，创新点只有一个：它给了一种用深度学习来给纹理建模的方法。之前说到纹理生成的一个重要的假设是纹理能够通过局部统计模型来描述，而手动建模方法太麻烦。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是Gatys看了一眼隔壁的物体识别论文，发现VGG19说白了不就是一堆局部特征识别器嘛。他把事先训练好的网络拿过来一看，发现这些识别器还挺好用的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是Gatys套了个Gramian matrix上去算了一下那些不同局部特征的相关性，把它变成了一个统计模型，于是就有了一个不用手工建模就能生成纹理的方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.75&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMAGicNwTvFicRFdEkEv2W7s9vw4Dt4QvrHPgdBWRw2G8b3PK7ib8vVTAHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;基于神经网络的纹理生成算法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从纹理到图片风格其实只差两步。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一步也是比较神奇的，是Gatys发现纹理能够描述一个图像的风格。严格来说文理只是图片风格的一部分，但是不仔细研究纹理和风格之间的区别的话，乍一看给人感觉还真差不多。第二步是如何只提取图片内容而不包括图片风格。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;这两点就是他的第二篇论文做的事情：Gatys又偷了个懒，把物体识别模型再拿出来用了一遍，这次不拿Gramian算统计模型了，直接把局部特征看做近似的图片内容，这样就得到了一个把图片内容和图片风格（说白了就是纹理）分开的系统，剩下的就是把一个图片的内容和另一个图片的风格合起来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;合起来的方法用的正是之前提到的让神经网络“梦到”狗的方法，也就是研究员们玩出来的Deep Dream，找到能让合适的特征提取神经元被激活的图片即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.805&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMoT2eqlFyqqKn3sJ91vvYWoLHJlvoqibdQDBq7F2WLJQ5rETU34yAOHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;基于神经网络的图像风格迁移&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;至此，我们就把关于基于神经网络的图像风格迁移(Neural Style)的重点解释清楚了。背后的每一步都是前人研究的结果，不用因为名字里带深度啊神经网络啊而感觉加了什么特技，特别的高级。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Gatys所做的改进是把两个不同领域的研究成果有机的结合了起来，做出了令人惊艳的结果。其实最让我惊讶的是纹理竟然能够和人们心目中认识到的图片的风格在很大程度上相吻合。（和真正的艺术风格有很大区别，但是看上去挺好看的。）从那之后对neural style的改进也层出不穷，在这里就先放一些图，技术细节暂且不表。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9114391143911439&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMw4DZxxOgOXV8sKRMe3Jibr74DllNG3e7YRPxibkW7NBfpuaDyzG1BLGw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;542&quot;/&gt;改进后的图像风格迁移算法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;左：输入图像，中：改进前，右：改进后。生成时间：5-20分钟&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.715&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMgOdjZNOXpXCb36R21T51VXFees9FBs5jpPpEt9o3KvTvTHueaFiaEzQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;多个预设风格的融合，生成时间：少于1秒，训练时间：每个风格1-10小时&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.2933333333333332&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMaIo5Q09icfliaWa3ibwN9pKX1DgZHb3rV6VBfEIL6YVnrmZicANGs7JAXw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/span&gt;&lt;span&gt;最新的实时任意风格迁移算法之一，生成时间：少于10秒（少于一秒的算法也有，但个人认为看上去没这个好看），训练时间：10小时&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8483333333333334&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/BkqApBic36NOcsWfbjV5VHQ6hBNsylcbMJXmO25uhlKsxyhh22BQSiacqRfbBiajMBvJjjW5l0GnibxOIHANT9zxLA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;span&gt;图片类比，生成时间：5-20分钟&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后安利一篇与本文无关的文章，Research Debt 是我写本文的动机，希望对相关阅读有所帮助。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Research Debt 地址（英文）：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://distill.pub/2017/research-debt/&lt;/span&gt;&lt;/p&gt;

&lt;h5&gt;&lt;span&gt;作者：李嘉铭&lt;/span&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;span&gt;Northwestern University | CS&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;知乎专栏：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://zhuanlan.zhihu.com/p/26746283&lt;/span&gt;&lt;/p&gt;

&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot;&gt;&lt;p&gt;&lt;span&gt;∑编辑&lt;span&gt; | &lt;/span&gt;Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来源 | 乌镇智库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9366666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkwJ4BpvBcQhGAbtWZZvV69s7GickZGibsKgYkTQkiaZfLYOmGS9iaaoibadibGJhT18OVZkfeJmCSUSD0zw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;br/&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 04 Feb 2018 19:28:15 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/0FSDKj3uVS</dc:identifier>
</item>
<item>
<title>36小时，造一个亚马逊无人商店</title>
<link>http://www.jintiankansha.me/t/kU50zcHkx3</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/kU50zcHkx3</guid>
<description>&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;无人超市，未来趋势。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上面这段视频，展示了逛亚马逊的Amazon Go无人超市是种怎样的体验。毫无疑问，一个完善的无人超市需要复杂的技术支撑。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现在，挑战来了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你能不能在一天半的时间里，从零着手搭建出一个基本的Amazon Go无人超市系统？让客户可以体验无缝衔接的购物体验？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当然可以。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有个四人小组就在最新的一次黑客马拉松中，完成了这样一次挑战。他们只用了不到36个小时，就搞定了一切，而且还把整个教程公布了出来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先，得有一套文档，列出全部需要做/可以做的事情；然后就是根据文档，去分模块实现。他们给自己的“山寨”Amazon Go起名叫EZShop，由这六大模块构成：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7399660825325043&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/YicUhk5aAGtBWo96VpyBL8DtFhGdzA1HSibbfQYRCyN9DgFAEItP0VXrC0YbdZlOzQywgT41LgjRz39QjnQ0Llww/640?&quot; data-type=&quot;png&quot; data-w=&quot;1769&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;EZShop的六大组件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面分别介绍一下他们用到的些模块：&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;Kairos人脸识别API&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这是EZShop的一个基本组件，能够识别、存储特定的人脸信息。EZShop用了它两个API：/enroll和/verify。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;/enroll的意思是“拍张照，找到里边的脸，然后把这张脸存到你创建的相册里。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这个小组就为顾客们创建了一个相册，也叫EZShop。顾客注册时，脸就会存到这个相册里，系统的实时数据库也会向这个顾客的注册信息返回并存储一个face_id。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当要验证顾客的照片时，就需要把它送到/verify终端那里，终端返回一个匹配可能性最高的face_id。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在实际应用中，自己用TensorFlow搭一个人脸识别应用可能比用这种API更好，但是36小时hackathon嘛，API挺好用的。&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2&gt;&lt;span&gt;实时Firebase数据库&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这也是一个非常基本的组件，整套EZShop里，所有其他的组件都得和它实时交互。Firebase支持在数据库里的任何数据上创建定制化的变化监听器，这样一个特性再加上简单的设置流程，用起来简直毫不费力。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;整个计划很简单，数据库存储一组商品、一组顾客，如下面的JSON文件架构所示：&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;br/&gt;&lt;span&gt;{
  &quot;items&quot;: [
    {
      &quot;item_id&quot;: 1,
      &quot;item_name&quot;: &quot;Soylent&quot;,
      &quot;item_stock&quot;: 1,
      &quot;price&quot;: 10
    }
  ],
  &quot;users&quot;: [
    {
      &quot;face_id&quot;: 1,
      &quot;name&quot;: &quot;Subhan Nadeem&quot;,
      &quot;in_store&quot;: false,
      &quot;cart&quot;: [
        1
      ]
    }
  ]
}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;新顾客通过Kairos API注册之后，就会被添加到users那一组。当顾客出入时，他的in_store布尔值会更新，在商店经理和个人App界面上都有所体现。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;顾客拿起商品时，items那组数据会有更新。系统能够识别出哪个顾客拿了哪件商品，商品的ID会被添加到顾客的cart栏。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;经理App和顾客App&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;团队里的iOS开发者John只用了12小时，就写完了这两个App。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/YicUhk5aAGtBWo96VpyBL8DtFhGdzA1HS0iaxDHK3uxV2pbxXSo4XTJRs8I45vtibDIYdRrVr1TNNwc1VpNhWicAQw/640?&quot; data-type=&quot;png&quot; data-w=&quot;1600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;经理App&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;经理App是iPad版的，能将新用户添加到Kairos API和Firebase数据库中，也能显示店里顾客的列表和货物的库存清单。商店经理能用这个App操作Firebase数据库、查看数据库发生的变化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这个App还能追踪店内当前的所有用户，并获取他们的姓名和照片。当用户离开时，这个系统也能实时更新店内当前用户列表。&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; 
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.7786666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/YicUhk5aAGtBWo96VpyBL8DtFhGdzA1HSbDQocOxB1N7ibibWohtXNjeGxZS5mc9Bg5yiaYBXWaytNDriaKjI2piaeicQ/640?&quot; data-type=&quot;png&quot; data-w=&quot;1125&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;顾客App&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;另一个App是供商店顾客用的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;顾客要进店，需要先上传自己的照片，注册成为可以在无人店内购物的用户。图片通过API上传到Imgur（一家国外图片分享网站），并与用户名相关联。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;EZShop会根据这个照片来识别顾客。顾客进入商店之后，它们购物车的更新会立刻显示在这个App上。顾客离开商店时，手机上还会收到一条推送通知，显示着他们花了多少钱。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;货架、传感器和摄像头&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这些东西由Soheil和Ruslan负责，他们设计了货架，写了相关的Pi Python脚本。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;货架大致长这样：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.1603585657370519&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/YicUhk5aAGtBWo96VpyBL8DtFhGdzA1HS9DNgzR1ibqMzZY6cR96g0dK0DVQhOACrtibCpTE4icbMCBiaTRWdGk3DlA/640?&quot; data-type=&quot;png&quot; data-w=&quot;1004&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;货架&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在货架上，三件商品并排放着，中间的塔上安装监控摄像头（就是图上那个手机），两排商品后边还装有超声波传感器。超声波传感器和树莓派相连接，树莓派运行的Python脚本处理传感器与货架上物体之间的距离读数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;商品被拿起来的时候，传感器的读数就会变化，触发数据库中商品库存的更新。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;塔顶上绑着的手机（摄像头）也会探测到场景的变化，还会识别拿商品的顾客。然后，这件商品会被放到顾客的虚拟购物车里。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;出入口的摄像头&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在商店的出口和入口，这个小组使用了Android手机作为面部识别摄像头。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;两部手机被安装在一个三脚架上，分别冲着相反的方向，一个方向用来识别入店的顾客，另一个方向用来识别出店的顾客。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;至于人脸检测技术，Google有一套非常棒的API，能够很好地检测出人脸。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;API地址：https://developers.google.com/vision/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;特别的是，这个API还能提供从相机到人脸之间的大致距离，一旦顾客的距离足够近，摄像头就会拍照并使用Kairos API进行验证，然后与Firebase数据库同步，更新顾客在店内的状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在客户识别之外，系统还增加了个性化的语音问候，这进一步提升了用户体验。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;效果是这样的：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;一旦顾客离开商店，Android应用程序将会检测顾客购买了什么商品，并计算消费总额，并通过Firebase云消息向顾客的个人App推送账单明细。&lt;/span&gt;&lt;/p&gt;

&lt;section class=&quot;&quot; data-mpa-template-id=&quot;410350&quot; data-mpa-color=&quot;null&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section data-mpa-template-id=&quot;234998&quot; class=&quot;&quot; data-mpa-color=&quot;null&quot;&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;
&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在36个小时的黑客马拉松中，这个项目的团队大概只睡了6个小时，期间克服了许许多多的障碍，也有一些还未解决的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;他们的努力也没有白费，这个项目最后夺得了第一名。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有上百人进入了这个快速搭建的无人超市，拿起商品，然后离店，随即完成结算并获得账单。整个过程中不需要收银员、不需要排队……&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;span&gt;这个项目是开源的，想自己动手玩一下的话……GitHub地址在此：&lt;br/&gt;https://github.com/subhan-nadeem/EZShop&lt;/span&gt;&lt;/p&gt;
&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; readability=&quot;2&quot;&gt;&lt;p&gt;&lt;span&gt;∑编辑&lt;span&gt; | &lt;/span&gt;Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;本文转载自「量子位」&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9366666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkwJ4BpvBcQhGAbtWZZvV69s7GickZGibsKgYkTQkiaZfLYOmGS9iaaoibadibGJhT18OVZkfeJmCSUSD0zw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; width=&quot;auto&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域&lt;br/&gt;稿件一经采用，我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 04 Feb 2018 19:28:14 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/kU50zcHkx3</dc:identifier>
</item>
<item>
<title>卡尔纳普的数学哲学</title>
<link>http://www.jintiankansha.me/t/1AnhS1KJEQ</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/1AnhS1KJEQ</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;科学哲学&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;R.卡尔纳普(1891～1970)作为维也纳学派的一个重要成员，已为哲学界所知晓；但他作为一个数学哲学家，曾经代表逻辑主义，与形式主义、直觉主义进行过论战，并以其数学哲学观点影响逻辑经验主义学派的形成，却鲜为人知。本文将探讨卡尔纳普的数学哲学观点，从一个侧面反映这种观点对逻辑经验主义的影响。&lt;/span&gt;&lt;/p&gt;


&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89077&quot;&gt;&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90150&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;p class=&quot;&quot; data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一、思想渊源&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;卡尔纳普在中学时代就喜欢数学。他在大学学习期间，先攻读哲学和数学，后来物理学和数学成为主要的专业。他非常喜欢数学是因为，“哲学的诸多流派都处在无休止的争论中。而与此相反，在数学的领域中，每一个结论都可以得到精确的证明，因此不会产生什么分歧。”([1],p.3)对数学的兴趣，使他有了接受数学哲学的基础。他在耶拿大学读书时，正好弗雷格在那里任特邀数学教授，使他有机会听到弗雷格关于符号逻辑和数学基础的讲座，接受数学哲学的启蒙教育。1919年前后，他研读了怀特海和罗素合著的《数学原理》，其中关于关系理论发展的描述给他以深刻印象，并且从中看到他们是如何实施他们的逻辑主义纲领的。所以，数学的逻辑基础成为他的主要研究领域之一。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;弗雷格是逻辑主义的始祖，他的思想经过罗素的发展成为数学基础三大学派之一。卡尔纳普通过直接听取弗雷格的讲座和阅读弗雷格和罗素的著作，而接受他们的逻辑主义观点。他回忆说：“我曾从弗雷格那里得知，我们可以在逻辑概念的基础上给一切数学概念下定义，并且还可以从逻辑的原理中推演出数学定理。因此，从真理只是依据于逻辑这种一般意义上说，数学真理是分析的。”([1],p.72)此外，他还学到了分析概念和语言词句以及区分语句及其表达的意思的思想方法。他回忆说：“从弗雷格那里，我学会了细致而清楚地分析概念和语言词句，区分语句本身和由它所表达的意思。弗雷格的分析使我坚信，数学的知识从一般的意义上说是分析的，它与逻辑的知识基本上具有相同的性质。……此外，以下这些基本上是来自弗雷格的观点，在我看来也是无比重要的：在整个知识的体系中，逻辑与数学的任务就在于提供概念、陈述和推理的形式。这些形式可以适用于任何一个领域和学科，因而也适用于非逻辑的知识。”([1],p.17)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果说弗雷格在具体的数学、逻辑与语义学方面影响了卡尔纳普，那么罗素则在一般的哲学思维方法方面影响着他。他通过学习怀特海与罗素合著的《数学原理》，更加强了他的逻辑主义观点，同时也看到他们是如何在该书中实施其逻辑主义纲领的。他从弗雷格和罗素那里不仅继承了逻辑主义观点，而且学会运用逻辑分析法。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;此外，卡尔纳普还从直觉主义和形式主义，以及维特根斯坦等人那里学到一些加强逻辑主义观点的思想。例如，他接受形式主义的假设—演绎方法，吸收直觉主义的构造思想。特别是，他接受维特根斯坦的逻辑真理思想。他说：“对我个人来说，维特根斯坦可能是除罗素和弗雷格以外对我的哲学思考影响最大的哲学家。我从他的著作中所获得的最重要的观点是：逻辑陈述的真理性仅仅依据其逻辑的结构和词语本身的意义。逻辑陈述在所有可以想象的情况下都是真实的，因此，它的真理性与世界上的偶然事实无关。而在另一方面，由此可以得出这样的结论：这些逻辑的陈述没有论及世界上任何事情，因而没有什么实际的内容。”([1],p.38)正是由于卡尔纳普接受其他学派的一些“合理”思想，加强了他的逻辑主义观点，使他成为一个逻辑主义的捍卫者。&lt;/span&gt;&lt;/p&gt;


&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89077&quot;&gt;&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90150&quot;&gt;&lt;section readability=&quot;1&quot;&gt;&lt;section data-width=&quot;100%&quot; readability=&quot;2&quot;&gt;&lt;p class=&quot;&quot; data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、数学知识是分析的，而不是先天综合判断&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;卡尔纳普认为数学与逻辑具有相同的性质——分析性，而且全部数学可以从逻辑推导出来。当逻辑主义观点为后来的数学基础研究所否定时他仍然为之辨护，表明他继续站在逻辑主义的立场上。这有其更深刻的思想根源——对康德先天综合判断的批判。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(1)逻辑主义的数学观&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在数学基础诸学派中，以罗素为代表的逻辑主义的基本命题是：数学可以还原为逻辑学，因此，数学只不过是逻辑学的一部分。卡尔纳普接受了这一逻辑主义纲领。他认为：数学知识从一般的意义上说是分析的，它与逻辑的知识基本上具有相同的性质。“一切有效的数学陈述，仅就它们在一切可能的场合下都能成立这种特殊意义而言，它们都是分析的，因而也不具有任何事实内容。”([1],p.73)不过，卡尔纳普在这里所说的数学不包括几何学。因为在他看来，几何学可以分为两部分：数学的几何学和物理的几何学。“前者被看作是数学的一部分或关系逻辑的一部分，而物理的几何学则属于物理学的一部分。……物理的几何学具有经验的性质。”([1],p.77-78)正是由于卡尔纳普接受了从弗雷格到罗素的逻辑主义观点，使他有资格代表逻辑主义出席数学基础专题讨论会，与形式主义、直觉主义进行论战。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1930年9月，在哥尼斯堡召开物理学家和数学家大会期间，卡尔纳普与莱欣巴赫共同组织一次《数学基础专题讨论会》。这是数学基础学派第一次相聚并公开宣传各自的纲领的会议。会上，冯·诺伊曼代表形式主义作题为《形式主义的数学基础》、A.海丁代表直觉主义作题为《直觉主义的数学基础》、R.卡尔纳普代表逻辑主义作题为《逻辑主义的数学基础》的报告。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普的报告分四部分，前两部分阐述逻辑主义的论题：“数学可以还原为逻辑学”。他把这个论题分解为两个命题：“1.数学概念可以通过显定义而从逻辑概念推导出来；2.数学定理可以通过纯粹的逻辑演绎法而从逻辑公理推导出来”。然后就如何进行推导问题作了具体论述。后两部分主要说明逻辑主义从逻辑推导出数学存在的一些困难。这些困难主要是罗素引入的可化归性公理和两个非逻辑公理（无穷公理和选择公理）。关于可化归性公理问题，卡尔纳普认为，由F.P.拉姆齐的研究结果得知，罗素的分支类型论是没有必要的，只需要简单类型论就够了，因此可化归性公理可以省略。([7],p.31-42)至于其他两公理，卡尔纳普也承认这确实是逻辑主义所面临的困难。这种困难说明逻辑主义并没有真正从逻辑推导出数学，只是把数学归结为集合论。这是数学界和逻辑学界公认的。例如，1960年，A.海丁在斯坦福大学举行的《逻辑学、方法论和科学哲学》国际学术会议上作题为《三十年以后》的报告，对1930-1960数学基础研究三十年所作的总结性发言中说：三十年前数学基础学派中哪一派都认为自己的“观点是唯一正确的，……并且深信他的观点在不远的将来的胜利是无疑的。”和三十年前的情况相比，现在“没有一个研究方向再自命代表唯一真正的数学。”[8]著名逻辑学家A.莫斯托夫斯基在1964年对数学基础研究三十年所作的总结报告中更直接地说：“弗雷格和罗素的逻辑主义试图把数学归纳为逻辑。看起来这倒是个卓越的方案，但一付诸实行，却发现根本就没有强得足以囊括全部数学的逻辑。”([9],p.2)但是，后来卡尔纳普在1963年出版的《思想自述》一书中又说明如何把这两个非逻辑公理解释成分析公理。他说：“后来，我逐渐认识到，如果我们接受了与较窄的构造主义概念相对应的古典数学中所使用的类概念，那么，选择公理就成为分析的公理。不仅如此，我还给无穷公理找到了几种可能的解释，它们与罗素的解释不同，并且使这一公理也成为分析的公理。”([1],p.74)这表明卡尔纳普直至晚年仍然坚持逻辑主义观点。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(2)批判康德的先天综合判断论&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普其所以直到晚年还坚持逻辑主义数学观，有其深刻的思想根源。这就是他对康德的“数学是先天综合判断”的观点的批判。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;康德在批判唯理论与经验论在认识论上的片面性时，力图把两派的合理方面结合起来。一方面把命题区分为：分析命题与综合命题。另一方面又根据知识的来源划分为：先天的与后天的。提出数学和自然科学是先天综合判断的观点：它们的谓项不是从主项分析出来的，但又是必然地与主项联结着的判断；它们既增加新的内容又具有普遍必然性。卡尔纳普根据非欧几何的出现和希尔伯特《几何基础》一书的出版，说明康德关于数学性质的观点已经过时了。他认为：非欧几何的产生使几何学分为数学几何学与物理几何学。所以“今天，容易看出康德错误的根源，就是没有认识到，有两种本质上不同的几何——一种是数学几何，另一种是物理几何。”([3],p.177)因为“数学几何是纯数学。用康德的话说，它真的既是分析的而又是先天的。但不可能说它是综合的，它不过是建立在一定的公理基础上的演绎系统，而这些公理是无须借助于任何现存世界来加以解释的。”([3],p.177)“另一方面，物理几何与纯几何在这个世界中的运用有关。”欧几里得的术语具有普通的含义。比如纯几何的点，它是不能观察到的抽象的点，但它又可以表现物理空间中的一个现实的位置。所以点、线、面、体“这些词涉及我们居住的物理空间的现实结构，并且也是纯几何学或数学几何的语言的一部分；这就是19世纪关于几何学的混乱的根源所在。因为同样的词被科学家运用，也被数学家运用，假定二者在同一种几何中被运用，那就是错误的。”([3],p.178)希尔伯特关于几何基础的出色工作，使这两种几何的区别变得更清楚了。在他的几何系统中，点、线、面可以用来表示满足公理中的关系的任何三种实体，所以它们的解释是自由的、无限的，这与具体应用中的特定意义不同。因此，“当我们说，‘几何学是必定先天的，关于它的定理的真理性是无疑的’的时候，我们讲的是数学几何。但假定我们补充道：‘它也告诉我们有关这个世界的某些情况。借助于它的帮助，我们能预见现实几何结构的测量结果。’现在我们已经漫不经心地滑到几何学的另一种意思。这时我们讲的是物理几何，讲的是现实空间的结构。数学几何是先天的，物理几何是综合的，没有什么几何既是先天的又是综合的。”([3],p.179)&lt;/span&gt;&lt;/p&gt;


&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89077&quot;&gt;&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90150&quot;&gt;&lt;section readability=&quot;1&quot;&gt;&lt;section data-width=&quot;100%&quot; readability=&quot;2&quot;&gt;&lt;p class=&quot;&quot; data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三、数学对象的实在性只具有相对的意义&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;数学基础学派在讨论数学的本体论时，主要集中讨论实无穷的存在性（或实在性）问题。卡尔纳普则应用语义学观点在更一般的意义上阐述了抽象数学对象的存在性问题。他认为，数学对象的存在性只是相对于所谈论的数学系统而言，才有意义；那种先于数学系统的存在性问题，因为不具有认识内容，所以是没有意义的，是假的问题。其实，数学对象的存在性问题可以归结为对所谈论的数系统的接受和选择问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普早在1935年出版的《哲学和逻辑句法》一书中就应用可证实性原理区别实在性的两个概念：具有经验内容的实在性与不具有经验内容的实在性。他肯定具有经验内容论题的实在性，而否定不具有经验内容论题的实在性。例如，心灵的实在性、所予的实在性、共相的实在性、性质的实在性、关系的实在性、数的实在性等等。……所有这些哲学论题都是没有经验内容，无法证实的，没有理论意义的，因而是假的论题。([2],p.8)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1950年他在“经验论、语意学和本体论”一文（此文作为附录收入1956年出版的《意义和必然性》一书）中，应用语义学的观点对存在性或实在性这个本体论问题作了更详尽的阐述。他说：“经验论者对于象属性、类、关系、数、命题等等任何一种抽象对象，一般总是表示怀疑的。”([6],p.82)所以，他们尽可能地试图避免提及抽象对象。但是，在一定的科学语境中，要避免提到它们好象简直是不可能的。因此卡尔纳普区分了两种存在或实在性。他说，当有人谈到一种新的对象时，他就必须引入一种新的说话方式的系统，这些说话方式是受新规则支配的。这个过程叫做给正在谈论的新对象构造一个语言构架。有了语言构架这个概念后，就可以区分两种存在：“第一，这个新种类的某些对象在语言构架内部的存在问题，我们称之为内部问题。第二，关于这些对象的系统当作一个整体的存在或实在性问题，叫做外部问题。”([6],p.83)“内部问题和它的可能的答案是借助于新的表示式来明确表述的。答案可以或用纯逻辑的方法或用经验的方法找到，随这个构架是一个逻辑的还是一个事实的构架而定。”([6],p.84)例如，“有一张白纸在我的书桌上吗？”这个问题将由经验的研究来解答。所以，“内部问题中出现的实在性概念是一个经验的、科学的、非形而上学的概念。”([6],p.84)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但是，关于事物世界本身的实在性这个外部问题，则是一个相反的问题。它是由哲学家提出来的，争论了几个世纪未曾解决过。它也是不可能解决的，因为提法不对。比如，“提出事物世界本身的实在性的那些人也许心里想的不是象他们的表达式似乎提示的那样是一个理论问题，而宁可说是一个实际的问题，一个关于我们的语言结构的实际问题。”([6],p.84-85)他们把是否接受正在谈论的语言结构的实际问题变成理论问题。就象“如果有人决定接受事物语言，说他已经接受了事物世界，这是无可非议的。但不可以把这句话解释为好象表示他接受了关于事物世界的实在性的信念；并没有这样的信念或断言或假设，因为这不是一个理论问题。接受事物世界的意思不过是接受一定的语言形式，换句话说，接受形成陈述的规则和检验、接受或不接受这些陈述的规则。”([6],p.85)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普把上述关于实在性问题的一些思想应用于数学中。他说：在数的系统中也有“内部问题”。“例如，‘有一个大于一百的素数吗？’但是，在这里不是用以观察为基础的经验研究，而是用以新的表示式的规则为基础的逻辑分析来寻求答案。所以这里答案是分析的，即逻辑地真的。([6],p.86)可是，为什么有些哲学家会提出关于数的存在或实在性的哲学性问题呢？因为他们把存在的相对性绝对化了。例如，在数的系统中，“数是存在的”，或者说，“有一个n，使得n是一个数”。这个陈述可以由数的系统中“五是一个数”这一分析陈述得出。所以“数是存在的”这句话，只表示这个系统是非空的。它是内部问题。可是，有些哲学家却说，它不是内部问题，而是外部问题，即“先于这个新构架（即新的数系统——引注）的接受的问题”，以此来说明，数具有某种实在性，或“独立对象”地位的形而上学特性的问题。不幸的是，这些哲学家迄今“未曾做到给予这个外部问题及其可能的答案以任何的认识内容。……我们有理由怀疑他们的问题是一个伪问题，就是说，一个以理论问题的形式伪装起来而事实上却是非理论性的问题；在目前这个例子，它是一个是否要把那构成数的构架的新语言形式吸收到语言中来的实际问题。”([6],p.87)卡尔纳普就这样把数学对象的本体论问题变成一个是否接受所谈论的语言构架问题，从而否定一般所谈论的数学对象的存在性问题。&lt;/span&gt;&lt;/p&gt;


&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;89077&quot;&gt;&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;90150&quot;&gt;&lt;section readability=&quot;1&quot;&gt;&lt;section data-width=&quot;100%&quot; readability=&quot;2&quot;&gt;&lt;p class=&quot;&quot; data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;四、对逻辑经验主义学派的影响&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;p&gt;&lt;span&gt;卡尔纳普的数学哲学对维也纳学派的影响主要表现在两个方面：关于数学性质的观点本身和应用数学-逻辑分析法于非逻辑的知识领域。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;(1)数学观的影响&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普早在参加维也纳小组（1926年）以前就形成了关于数学的逻辑主义观点。由于他的数学观的系统，因而在维也纳学派关于数学性质观点的形成过程中起起到该学派其他成员（逻辑学家魏斯曼和数学家H.汉森(Hahn)、K.盂格尔(Menger)、K.哥德尔(Godel)等人）所起不到的作用，而这种观点的确立对该学派来说具有重要意义。这正如他所说的：“这种观点的重要之处就在于这样一个事实，即我们第一次有可能把经验主义的基本原则与一种对逻辑和数学的性质令人满意的结合到一起。……这是经验主义发展中的重要进步。”因为在此之前，哲学家们或者认为数学的知识基于纯直观或纯理性（即非经验主义的观点）；或者象J.S.密尔(Mill)等人认为逻辑和数学的定理与观察事件的知识一样，具有经验的性质。([1],p.73)正是他们有了关于数学性质的基本看法，才使他们有可能通过逻辑的分析法发展出既区别于休谟和密尔的经验论，又不同于孔德和马赫的实证主义的逻辑实证主义。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;(2)应用逻辑分析法于非逻辑的知识领域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普为了把逻辑分析法应用于非逻辑的知识领域，首先应用数学中的形式化方法，把语言系统变成形式系统，然后分析系统中的句子类型，说明哲学研究的任务就是逻辑分析，进一步为逻辑实证主义奠定基础。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;他说：“和希尔伯特在他的元数学中应用于数学系统的相同的形式方法，也由我们在我们的逻辑句法应用于科学之整个语言系统，或它的任何特殊部分，或任何其他语言系统。”([2],p.21)怎样应用希尔伯特的形式化方法呢？他首先舍弃语词的涵义，然后仿效数学形式化方法，引入形成规则（规定系统的句子如何能由各种不同符号构造出来）、变形规则（规定如何将给定的句子变形为其他的句子）、两个原始名词（句子和直接后承）和由原始名词定义的若干句法名词，这样就构成一个语言的形式系统（卡尔纳普有时叫做语言的“逻辑句法理论”）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;有了语言的形式系统以后，逻辑句法的任务就是借助句法名词来陈述一些定义，并分析给定的句子、证明和理论等等。这样一种逻辑分析的结果就可以表述为如下的句法句子：“包含在某一理论中的一个这种这样的句子是综合的，而另一个句子仅仅是分析的”。([2],p.33)可是，还有另外一些句子。它们似乎属于完全不同种类。比如说，似乎不仅涉及语言表达的形式，而且也涉及完全另外一种样子的对象（诸如空间和时间的结构、事物与其性质的关系、数和数值函项的特性等等）。因此，通过这种句法分析使我们发现三类不同的句子。第一类叫做句法句子，它“涉及语言表达的形式”；第二类叫做真对象句子，它“涉及的不是语言的表达，而是语言以外的对象”；第三类叫做假对象句子，它是“介乎二者之间的一种句子，这种句子可以说是两栖的，在它们的形式方面象对象句子，但在它们的内容方面又象句法句子”。([2],p.34)也就是说，它表面上象对象句子，但实际上却是句法句子。例如，“玫瑰花是红的”，这个句子是真对象句子。“玫瑰花这个词是一个事物的词”，这个句子是句法句子。“玫瑰花是一个事物”，这个句子是假对象句子。因为在假的对象句子里的说话方式中出现指称对象或物质的词，而在句法句子中所用的词只涉及形式。所以，假对象句子也叫做说话的实质方式的句子，句法句子也叫做说话的形式方式的句子。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普认为，“这种实质说话方式的使用经常导致混乱和无谓的哲学争论”。第一种情况是，由于说话的实质方式的诱惑而提出一些假的问题。例如，在数学中使用实质方式时，由于它谈到的是数而不是数的表达式，这就诱导人们提出数的实在性的哲学问题（如，数是实在的对象还是观念的对象？等）。第二种情况是，由于使用了说话的实质方式，同时又忽视语言系统的相对性而引起的哲学争论。例如，在怀特海和罗素的系统中，数是作为类的类来处理的，而在皮业诺和希尔伯特的系统中，数是作为原始对象来处理的。他们双方对数究竟是什么进行无休止的争论。一方说：“数是类的类”。另一方说：“数是原始的对象，独立的元素”。怎么解决由于使用说话的实质方式所引起的混乱和无谓的哲学争论呢？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;他说：“这种混乱和争论是能够通过把这些争论的论题翻译成为形式的方式来解决的。”([2],p.38-39)怎样翻译呢？他说：“一般地说，每一个具有‘……是一个事物’这种形式的句子都属于实质方式”。其中与“事物”这个词起着相同作用的还有其他一些词。比如，性质、关系、数、事件等等。所以为了避免危险的实质方式，就必须回避“事物”这个词，而用“平行的句法名词‘事物指称’来代替”。与此相类似，可以用“数字指称”代替“数”，用“性质指称”代替“性质”，用“关系指称”代替“关系”等等。通过这种替代就可以把实质方式翻译成形式方式，从而避免出现哲学上的假问题。因此，他提醒人们，“在哲学讨论中，如果一方不能或不愿意提出他的论题的形式方式的译文，或者如果他不陈述他的论题引据哪种语言系统，那么另一方最好是拒绝和他辨论，因为他的对手的论题是不完备的，而且这种讨论除了导致空洞的争吵之外，别无其他。”([2],p.46)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;卡尔纳普的上述分析向我们表明，既然真对象句子涉及语言以外的对象，是综合的，属于自然科学研究的对象；句法句子只涉及语言的表达形式；而假的对象句子可以翻译成句法句子，因此，表达逻辑分析结果的句子都是句法句子，也就是说，哲学就是句法方法的应用，或者说，哲学的任务就是逻辑分析。这样，他就把经验与逻辑更紧密地结合起来，为逻辑经验主义的建立作出了特有的贡献。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;参考文献：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[1] R.卡尔纳普：《卡尔纳普思想自述》(1963)，上海译文出版社，1985。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[2] R.卡尔纳普：《哲学和逻辑句法》(1935)，上海人民出版社，1962。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[3] R.卡尔纳普：《科学哲学导论》(1966)，中山大学出版社，1987。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[4] R.卡尔纳普等原著：《科学哲学和科学方法论》，华夏出版社，1990。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[5] 洪谦主编：《现代西方哲学论著选辑》（上册），商务印书馆，1993。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[6] 洪谦主编：《逻辑经验主义》（上卷），商务印书馆，1982。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[7] P.Benacerraf andH.Putnam ed.Philosophyof Mathemalics:Selected Reading,Cambridge University Prce,1964,first edition.&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 03 Feb 2018 15:30:52 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/1AnhS1KJEQ</dc:identifier>
</item>
</channel>
</rss>