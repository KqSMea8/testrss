<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>图像主题色提取算法</title>
<link>http://www.jintiankansha.me/t/29qu5IHNxu</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/29qu5IHNxu</guid>
<description>&lt;p&gt;&lt;span&gt;许多从自然场景中拍摄的图像，其色彩分布上会给人一种和谐、一致的感觉；反过来，在许多界面设计应用中，我们也希望选择的颜色可以达到这样的效果，但对一般人来说却并不那么容易，这属于色彩心理学的范畴（当然不是指某些伪神棍所谓的那种）。从彩色图像中提取其中的主题颜色，不仅可以用于色彩设计（参考网站：Design Seeds），也可用于图像分类、搜索、识别等，本文分别总结并实现图像主题颜色提取的几种算法，包括颜色量化法（Color Quantization）、聚类(Clustering)和颜色建模的方法（颜色建模法仅作总结），源码可见：GitHub: ImageColorTheme。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;彩色图像一般采用RGB色彩模式，每个像素由RGB三个颜色分量组成。随着硬件的不断升级，彩色图像的存储由最初的8位、16位变成现在的24位、32真彩色。所谓全彩是指每个像素由8位（28=0~255）表示，红绿蓝三原色组合共有1677万（256∗256∗256）万种颜色，如果将RGB看作是三维空间中的三个坐标，可以得到下面这样一张色彩空间图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9296235679214403&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky1oSJzibhBaIkrwHib9YRxicay3GamwNrjHCxWMx1tx7xicmYoHho1dfBo2KafMkOiaZCCHpkFda0UxgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;611&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当然，一张图像不可能包含所有颜色，我们将一张彩色图像所包含的像素投射到色彩空间中，可以更直观地感受图像中颜色的分布：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5961227786752827&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky1oSJzibhBaIkrwHib9YRxicaFDHrLrCkBvibgwvlxiaTQ4R2ZBmB6JB7DCbIjnFl3ZGXWNBOHhFnR7icA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此颜色量化问题可以用所有矢量量化（vector quantization, VQ）算法解决。这里采用开源图像处理库 Leptonica 中用到的两种算法：中位切分法、八叉树算法。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;1.1. 中位切分法（Median cut）&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;GitHub: color-theif 项目采用了 Leptonica 中的用到的（调整）中位切分法，Js 代码比 C 要易读得多。中位切分算法的原理很简单直接，将图像颜色看作是色彩空间中的长方体（VBox），从初始整个图像作为一个长方体开始，将RGB中最长的一边从颜色统计的中位数一切为二，使得到的两个长方体所包含的像素数量相同，重复上述步骤，直到最终切分得到长方体的数量等于主题颜色数量为止。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Leptonica 作者在报告 Median-Cut Color Quantization 中总结了这一算法存在的一些问题，其中主要问题是有可能存在某些条件下 VBox 体积很大但只包含少量像素。解决的方法是，每次进行切分时，并不是对上一次切分得到的所有VBox进行切分，而是通过一个优先级队列进行排序，刚开始时这一队列以VBox仅以VBox所包含的像素数作为优先级考量，当切分次数变多之后，将体积*包含像素数作为优先级。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Python 3 中内置了PriorityQueue：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span&gt;queue&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span&gt;PriorityQueue&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span&gt;PQueue&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;VBox&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;   &lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(self, r1, r2, g1, g2, b1, b2, histo)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;   self.vol = calV()    self.npixs = calN()    self.priority = self.npixs * -&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span&gt;boxQueue.put((vbox0.priority, vbox0)) vbox.priority *= vbox.vol   boxQueue.put((vbox0.priority, vbox0))&lt;/span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;除此之外，算法中最重要的部分是统计色彩分布直方图。我们需要将三维空间中的任意一点对应到一维坐标中的整数，这样才能以最快地速度定位这一颜色。如果采用全部的24位信息，那么我们用于保存直方图的数组长度至少要是224=16777216，既然是要提取颜色主题（或是颜色量化），我们可以将颜色由RGB各8位压缩至5位，这样数组长度只有215=32768：&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getColorIndex&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(self, r, g, b)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;     &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span&gt;(r &amp;lt;&amp;lt; (&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span&gt;* self.SIGBITS)) + (g &amp;lt;&amp;lt; self.SIGBITS) + b&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getPixHisto&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;     pixHisto = np.zeros(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&amp;lt; (&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span&gt;* self.SIGBITS))    &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span&gt;y&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span&gt;range(self.h):        &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span&gt;x&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span&gt;range(self.w):            r = self.pixData[y, x,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;span&gt;] &amp;gt;&amp;gt; self.rshift            g = self.pixData[y, x,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;] &amp;gt;&amp;gt; self.rshift            b = self.pixData[y, x,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span&gt;] &amp;gt;&amp;gt; self.rshift            pixHisto[self.getColorIndex(r, g, b)] +=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span&gt;   &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span&gt;pixHisto&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;分别对4张图片进行切分、提取：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testMMCQ&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(pixDatas, maxColor)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;     start  = time.process_time()    themes = list(map(&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; &lt;span&gt;d: MMCQ(d, maxColor).quantize(), pixDatas))    print(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;MMCQ Time cost: {0}&quot;&lt;/span&gt;&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;.format(time.process_time() - start))    &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span&gt;themes imgs = map(&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; &lt;span&gt;i:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'imgs/photo%s.jpg'&lt;/span&gt; &lt;span&gt;% i, range(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span&gt;))   pixDatas = list(map(getPixData, imgs))   maxColor =&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;&lt;span&gt;themes = [testMMCQ(pixDatas, maxColor)]   imgPalette(pixDatas, themes, [&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;MMCQ Palette&quot;&lt;/span&gt;&lt;span&gt;])  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9544715447154472&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky1oSJzibhBaIkrwHib9YRxicaLnicUbgWtCcvU88haehwXBcn72Ytnv2mmLXOiaFuKDvj1lggGzlzM60w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;615&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;1.2. 八叉树算法（Octree）&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;八叉树算法的原理可以参考这篇文章：圖片主題色提取算法小結。作者也提供了 Js 实现的代码，虽然与 Leptonica 中 C 实现的方法差别很大，但原理上是一致的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;建立八叉树的原理实际上跟上面提到的统计直方图有些相似，将颜色成分转换成二进制之后，较低位（八叉树中位置较深层）数值将被压缩进较高位（八叉树中较浅层）。八叉树算法应用到主题色提取可能存在的问题是，每次削减掉的叶子数不确定，但是新增加的只有一个，这就导致我们需要的主题色数量并不一定刚好得到满足，例如设定的主题色数量为7，可能上一次叶子时总数还有10个，到了下一次只剩5个了。类似的问题在后面手动实现的KMeans算法中也有出现，为了保证可以得到足够的主题色，不得不强行提高算法中的颜色数量，然后取图像中包含数量较多的作为主题色：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getColors&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(self, node)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;       &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span&gt;node.isLeaf:          [r, g, b] = list(map(&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; &lt;span&gt;n: int(n[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;span&gt;] / n[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;]), zip([node.r, node.g, node.b], [node.n]*&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span&gt;)))          self.theme.append([r,g,b, node.n])      &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;&lt;span&gt;:          &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span&gt;range(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span&gt;):              &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span&gt;node.children[i]&lt;/span&gt;&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;None&lt;/span&gt;&lt;span&gt;:                  self.getColors(node.children[i]) self.theme = sorted(self.theme, key=&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; &lt;span&gt;c: -&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;*c[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;])  &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span&gt;list(map(&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; &lt;span&gt;l: l[:-&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;],self.theme[:self.maxColor]))  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对比上面两种算法的结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testOQ&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(pixDatas, maxColor)&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;     start  = time.process_time()    themes = list(map(&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; &lt;span&gt;d: OQ(d, maxColor).quantize(), pixDatas))    print(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;OQ Time cost: {0}&quot;&lt;/span&gt;&lt;span&gt;.format(time.process_time() - start))    &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span&gt;themes themes = [testMMCQ(pixDatas, maxColor), testOQ(pixDatas, maxColor)]   imgPalette(pixDatas, themes, [&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;MMCQ Palette&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;OQ Palette&quot;&lt;/span&gt;&lt;span&gt;])  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5581395348837209&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky1oSJzibhBaIkrwHib9YRxicaDeoqgaPYh5aKkdIoukqqO43eFcOo77ebowA6xXOCVgV4oSrR04Egtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;645&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可见八叉树算法可能更适合用于提取调色板，而且两种算法运行时间差异也很明显：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot; name=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hljs-preprocessor&quot;&gt;#MMCQ Time cost: 8.238793&lt;/span&gt;&lt;span class=&quot;hljs-preprocessor&quot;&gt;#OQ Time cost: 55.173573&lt;/span&gt;
&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;除了OQ中采用较多递归以外，未对原图进行抽样处理也是其中原因之一。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;span&gt;聚类是一种无监督式机器学习算法，我们这里采用K均值算法。虽然说是“机器学习”听起来时髦些，但算法本质上比上面两种更加简单粗暴。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;KMeans算法&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;KMeans算法的原理更加简洁：“物以类聚”。我们目的是将一堆零散的数据（如上面图2）归为k个类别，使得每个类别中的每个数据样本，距离该类别的中心（质心，centroid）距离最小，数学公式为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.2033195020746888&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky1oSJzibhBaIkrwHib9YRxicasLI1vsCNC8uLNVM9H0gwKiaHHLibY4mj4nKVqZ11tvXOuC5ZK9XECwHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;241&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;上文提到八叉树算法可能出现结果与主题色数量不一致的情况，在KMeans算法中，初始的k个类别的质心的选择也可能导致类似的问题。当采用随机选择的方法时，有可能出现在迭代过程中，选择的中心点距离所有其它数据太远而最终导致被孤立。这里分别采用手动实现和scikit-learn的方法实现，根据scikit-learn 提供的API，完成主题色的提取大概只需要几行代码：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-title&quot;&gt;from&lt;/span&gt; &lt;span&gt;sklearn.cluster&lt;/span&gt; &lt;span class=&quot;hljs-import&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; KMeans &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; KM  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-import&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-preprocessor&quot;&gt;#@pixData      image pixels stored in numpy.ndarray&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-preprocessor&quot;&gt;#@maxColor     theme color number&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-title&quot;&gt;h&lt;/span&gt;&lt;span&gt;, w, d = pixData.shape  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-typedef&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt; = np.reshape&lt;span class=&quot;hljs-container&quot;&gt;((&lt;span class=&quot;hljs-title&quot;&gt;h&lt;/span&gt;*&lt;span class=&quot;hljs-title&quot;&gt;w&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;d&lt;/span&gt;)&lt;/span&gt;)  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span class=&quot;hljs-title&quot;&gt;km&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;KM&lt;/span&gt;&lt;span&gt;(n_clusters=maxColor)  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;hljs-title&quot;&gt;km&lt;/span&gt;&lt;span&gt;.fit(&lt;/span&gt;&lt;span class=&quot;hljs-typedef&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt;)  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-title&quot;&gt;theme&lt;/span&gt; &lt;span&gt;= np.array(km.cluster_centers_, dtype=np.uint8)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;imgs&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;&lt;span&gt;(lambda i:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'imgs/photo%s.jpg'&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;%&lt;/span&gt; &lt;span&gt;i, range(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span&gt;))   pixDatas&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;&lt;span&gt;(getPixData, imgs))  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;maxColor&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; &lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;themes&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-preprocessor&quot;&gt;[&lt;/span&gt;&lt;/span&gt; &lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;testKmeans(pixDatas, maxColor), testKmeans(pixDatas, maxColor, useSklearn&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-preprocessor&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-markup&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-markup&quot;&gt;imgPalette(pixDatas, themes,&lt;/span&gt; &lt;span class=&quot;hljs-preprocessor&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;KMeans Palette&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;KMeans DIY&quot;&lt;/span&gt;&lt;span class=&quot;hljs-preprocessor&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-markup&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;测试比较手动实现和scikit-learn的结果如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好吧我承认很惨，耗时方面也是惨不忍睹。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从上面几种算法结果来看，MMCQ和 KMeans在时间和结果上都还算不错，但仍有改进的空间。如果从人类的角度出发，两种算法的策略或者说在解决主题色提取这一问题时采纳的特征（feature）都接近于颜色密度，即相近的颜色凑在一起数量越多，越容易被提取为主题颜色。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后要提到的算法来自斯坦福可视化组13年的一篇研究：Modeling how people extract color themes from images，实际上比较像一篇心理学研究的套路：建模-找人类被试进行行为实验-调参拟合。文章提取了图像中的79个特征变量并进行多元回归，同时找到普通人类被试和艺术系学生对图像的主题颜色进行选择，结果证明特征+回归能够更好地拟合人类选择的结果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;79个特征的多元回归模型，不知道会不会出现过度拟合？另外虽然比前面算法多了很多特征，但仍旧多物理特征。对人类观察者来说，我们看到的并非一堆无意义的色块，虽然有研究表明颜色信息并非场景识别的必要线索，但反过来场景图像中的语义信息却很有可能影响颜色对观察者的意义，这大概就是心理学研究与计算机科学方向上的差异。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;以上算法若要应用还需更多优化，例如先抽样再处理，计算密集的地方用C/C++或并行等。另外需要一个对Python每个函数执行时间进行记录的工具，分析运行时间长的部分。&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;参考 &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;[1] Color Quantization &lt;br/&gt;[2] Color quantization using modified median cut &lt;br/&gt;[3] Median-Cut Color Quantization &lt;br/&gt;[4] Wicked Code &lt;br/&gt;[5] Clustering - scikit-learn &lt;br/&gt;[6] Color Quantization using K-Means &lt;br/&gt;[7] Extract Color Themes from Images &lt;br/&gt;[8] Lin, S., &amp;amp; Hanrahan, P. (2013). Modeling how people extract color themes from images. Proc of Chi Acm, 3101-3110.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;∑编辑 | Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;来源 | CSDN博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0437601296596435&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;617&quot; width=&quot;auto&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky7x6u1VxMVMia4MLibNzC2nrumY3zDflTsCeoM04M1BrkvPny8tsw6hYkIicUr42iarLmadL2x6JwV6A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 01 Sep 2018 20:10:00 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/29qu5IHNxu</dc:identifier>
</item>
<item>
<title>想上清华，要先吃得了清华的苦！</title>
<link>http://www.jintiankansha.me/t/Wbsiv9EUmO</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/Wbsiv9EUmO</guid>
<description>&lt;section class=&quot;&quot; data-tools=&quot;135&amp;#x7F16;&amp;#x8F91;&amp;#x5668;&quot; data-id=&quot;7&quot; readability=&quot;1.5&quot;&gt;&lt;section readability=&quot;3&quot;&gt;&lt;section class=&quot;&quot;&gt;&lt;strong&gt;&lt;span&gt;8月22日，3800余名来自世界各地的2018级新生来到清华园报到，开启自己的大学生活。&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;在全国近千万考生中脱颖而出，考上顶尖学府，对学生和家长来说都是一件十分开心的事情，不少新生在全家的陪同下一起入学报到&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6681159420289855&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafxLTgvgNnCFvdzLMjF4gE6sl89cpwFFAhU7z3CEo39CMObJq1aL3BEg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;690&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6666666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafOjGtOzhiantFib9mZcXhUSXDekHiasu7UhjG75iaPHMQUDPXgic8SEq11GQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;690&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6666666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiaf7ic6dgpEDEbo5P5KqicbOQibRRKlCicg0RlsJ9yVQryR3ZJibTHiah1ZZg2Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;690&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; center=&quot;&quot;&gt;&lt;span&gt;图片来自清华大学官方微博&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt;清华大学2018大类招生情况如何？录取考生有什么爱好？有多少国际面孔？……让我们一起来看看清华八字班的新生大数据，或许会对2019高考的你有所启发。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; center=&quot;&quot;&gt;&lt;span&gt; 2018清华新生大数据 &lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt;1.千禧一代&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9314814814814815&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafsVEEyeRV01StNQZUlG8icjx3yKgPnZJ4VrMQjAnjz4qJWNcKavohnjg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;2000年后出生的&quot;八字班&quot;最多，占3/4，正式宣告00后已是新生主力！&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;其中，年龄最小的新生出生于2002年12月，还未满16周岁。此外，八字班还有2对双胞胎。似乎2000年8月8日是个“大吉”日，八字班有19人的生日都在这一天。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;在春风送暖，山色返青的3月，过生日的同学最多。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt;2.百花齐放&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6555555555555556&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafllic23G9dBheQ4ibKHd9G3TicEfLbNG7cbRRG2WFYQabcK5wHhVPelzug/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;数理类吸引到了469名八字班新生，规模居十六个大类之首！&lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;文理通识类（新雅书院）仍然坚持“小而精”的原则，是名副其实的“熊猫”大类。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;实行大类招生和培养后，更多学子能够根据自己的人生规划、从自身的兴趣特长出发选择专业，计算机类，经济、金融与管理类，文理通识类，电子信息类，法学类，环境、化工与新材料类等学生的志愿分布更加均匀合理，呈现出更加多元化的分布态势。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt;3.全面成长&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7175925925925926&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafCcdsa8Appklv4oGkv4SI4YEBWV6vBNUsWevp4cGhDvmBjrxqsNpk8g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;大多数八字班新生曾是高中的班长、团支书、课代表，不少曾获“三好学生”、优秀学生等荣誉。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;据不完全统计，除了爱学习，约200名小伙伴爱好钢琴，此外还有羽毛球、篮球、乒乓球、足球、游泳、书法、绘画…&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt;4.同仁一视，泱泱大风&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6953703703703704&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafdqOvPos7icnDZGOXy4Jb8LPK9mMeFicXIS5W8tyLCOEYI3IiaGNKjdR3Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;来自西部地区的小伙伴近23%，比例进一步提高。还有57名来自香港、澳门和台湾地区的小伙伴们。（以上数据来自新浪教育）&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;想上清华，要先吃得了清华的苦&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;每年8月底9月初的一个午夜，清华大学新生军训都要上演重头戏：20公里拉练。这拉练的距离之长在各大高校的军训中也属少见。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;刚刚度过一个happy的暑假的各地学霸们汇聚清华园，物理化语数外先不说，先走个20公里再说。你问为什么？清华校风没听说过吗：&lt;span&gt;“行胜于言”——意思就是：走路比说话重要。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;清华的学霸军训是什么样的？让我们一起通过镜头，感受2017级清华学霸军训的威武风采！&lt;/span&gt;&lt;/p&gt;

&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;如果是你，你能坚持下来吗？同学们都想考入清华大学，可是清华大学到底有多苦？你知道吗？那些考入清华的学子们每天的快节奏，你能适应的了吗？你能吃得了清华大学的苦吗？&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6609375&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafoeBOIAgjtr5amkCricgNjOH5QiaibNShjJEcrqOArsicDgkG6dFvIe8nYQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt; 一、趟过题海，才能走进清华大门 &lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;考入清华的双胞胎姐妹介绍经验时说：上了高中，一天差不多学到了13个小时。我们的注意力逐渐转移到成绩上，高分对我们有极大的吸引力，与分相比，电视、电脑、手机、iPad对我们全都没有诱惑力。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;日复一日，我们进入了麻木的状态，觉得这样紧张的生活是再正常不过的事情，身处其中，也不觉得无聊或乏味。这根弦，一绷就是六年。六年里，凭着一股不服输的劲，我们成就了自己。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;甚至连假期也是如此，假期中他们不仅是做题，还会给自己安排单元测试，每一个测试成绩不过85的单元都需要重新来过。这看似很恐怖，但对大部分清华学子，却是那么真实。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;他们刷题之疯狂到什么程度，正如一位高考状元所说：高中的时候只要市场上能买到的习题集我都做过。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;将要进入高三的你呢？是不是仅有的暑假作业也还在等着开学第一天去抄同桌的答案？&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt; 二、他们非智商超群，只是够勤奋 &lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;很多人认为，能考入清华的孩子肯定都是智力超群、非常人可比，他们有自己独特的方法，学习起来既轻松又高效。事实并非如此。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;现代人的智商差别极小，完全可以忽略不计。比谁聪明，基本上是无法分别的。如果有人想拿谁比谁智商高这类东西来唬人，那是不应该的，也是应该受到谴责的。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;伟大的思想家马克思说过一句话：“天才就是勤奋。”大家如果在上课期间去清华参观，或许可以看到这样的场景：所有的学生骑车都是飞车，走路几乎都是小跑。你很快从校门走进教室就可以比别人多看一会书，多做一道题。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;上清华的他们延续了高中时期超拼的学习态度，他们可以为了自己的目标放弃任何诱惑。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;在清华等顶尖名校，流传着这样一句名言：“&lt;span&gt;努力不一定不挂科，不努力一定挂科&lt;/span&gt;。”&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;最好的苗子，最好的老师，每个人都最努力的学习，却有着最高的挂科率。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;而据说，只要四年之内有一次不及格就会取消保研资格，如果有三科不及格，就会被退学。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;压力就是动力，在清华校园里，人们总是行色匆匆，总想把每一刻宝贵的时间都用到自己想用的、认为重要的事情上。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;清华的自习室人气总是很旺，一到自习时间每间教室都被挤得密密麻麻，晚去一点都很难找到座位。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;从表面上看，清华的管理确实挺松，但如果不努力，真的可能毕不了业。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;用一位美国教授的话说：“Students of Tsinghua，no Saturday，no Sunday，no holiday！”就是这种精神铸造了清华的神话。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;已经成为大学的你呢？是不是还在一局一局的打王者荣耀与吃鸡？&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;span&gt; 三、清华的人才，要经得出逼和压 &lt;/span&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;清华大学教授许纪敏先生说：“清华的人才怎么培养出来的！是压出来的！”&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;清华的老师在上完一节两小时的课程后，便给学生留下了一次课程设计，说做不出来的就是挂科。而挂科到一定数量就要被退学处理。于是乎，又多了一群发疯的学生，要知道在别的大学这门课是要学一个学期的！两周时间，这群学生从入门菜鸟成为了可以自主设计的大神！&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;一位清华学子回忆大学生活时说：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;span&gt;有一次上微机原理课，老师说，今天回去用Protel把课上的电路模拟一下。同学们都说，我们是这辈子第一次听说这个软件。老师说：“这是电子工程人员必备的软件。”转身就走了。没办法，我们回去在图书馆熬了3天终于把这个软件学会了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一次数学课，老师让我们回去用MATLAB画一个三维wuli.in的图形。同学们都说没学过———这好像是数学系的一门必修课，老师只说了一句：“没学过？回去学呀！”我们又是在图书馆耗了好几天，基本弄明白了。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;不是被逼，谁都没想到这么短的时间可以做这么多的事。相比之下，高中的学生实在太幸福了，老师会在考试前帮我们整理题目、常考考点；会早早起床，督促我们上早自习；某一科出现下滑，老师会不遗余力地帮助寻因、补习。但有些同学依然寻找借口，不愿意给自己太大压力。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; justify=&quot;&quot; em=&quot;&quot;&gt;&lt;span&gt;殊不知，巨大的压力带来的是挑战，更是成长。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6666666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiaf2h1fmvhibib4QHGZwt9NeNibYsC3UjZdtGnzOzrvyV5smXibMN0yyGcOtw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; center=&quot;&quot;&gt;&lt;span&gt; 清华大学2018级本科生新生开学典礼 &lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;清华大学2018级本科生新生开学典礼在综合体育馆举行。典礼上，校长邱勇作了主题为“用一生去追寻科学精神”的演讲。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;邱勇表示，追寻科学精神，要有求真求实的作风。希望同学们能够始终说真话、做真人，在追求真理的过程中成就有意义的人生；追寻科学精神，要有质疑批判的态度。希望同学们敢于质疑，勇于批判，在不断提升独立思考能力的过程中成为思想深刻的人；追寻科学精神，要有高尚的人文情怀。希望同学们在追寻科学精神的过程中，涵养关爱他人、关爱社会的人文情怀。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;“21世纪是一个充满梦想的时代，也是一个创新无处不在的时代。科学精神是科学的精髓，是创新的不竭源泉。希望你们勇敢地捍卫真理，始终保持理性的批判态度，以谋求人类福祉为最崇高的目标，用一生去追寻科学精神。”邱勇说。&lt;/span&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; center=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5626598465473146&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkznibU55JCsrhTmWFC0YOIiafXoeMaV9GmXgOTAtPvf0Iic7Z9Hgj9U4K1tGBqwbSd2zm9TFR64tMJQw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;391&quot;/&gt;&lt;/p&gt;
&lt;p pingfang=&quot;&quot; sc=&quot;&quot; arial=&quot;&quot; simsun=&quot;&quot; sans-serif=&quot;&quot; em=&quot;&quot; justify=&quot;&quot;&gt;&lt;span&gt;将来的你，无论考没考上清华，都请谨记清华的校训：&lt;span&gt;自强不息，厚德载物。&lt;/span&gt;也许不能得偿所愿，也许处境不如心意，但只要有清华这股子自强不息的劲头，一定可以实现更强大的自己。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;∑编辑 | Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;作者 | 清华大学&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0437601296596435&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;617&quot; width=&quot;auto&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabky7x6u1VxMVMia4MLibNzC2nrumY3zDflTsCeoM04M1BrkvPny8tsw6hYkIicUr42iarLmadL2x6JwV6A/640?wx_fmt=png&quot;/&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;br/&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; pingfang=&quot;&quot; sc=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; px=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; important=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 01 Sep 2018 07:41:29 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/Wbsiv9EUmO</dc:identifier>
</item>
</channel>
</rss>