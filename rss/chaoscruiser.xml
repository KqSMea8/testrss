<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fchaoscruiser-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/chaoscruiser-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fchaoscruiser-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fchaoscruiser-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>混沌巡洋舰</title>
<link>http://www.jintiankansha.me/column/ultiWL8Axg</link>
<description>混沌巡洋舰 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>怎么样用深度学习取悦你的女朋友（有代码）</title>
<link>http://www.jintiankansha.me/t/PfqJe3yAlh</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/PfqJe3yAlh</guid>
<description>&lt;p&gt;&lt;span&gt;本文为巡洋舰的深度学习实战课程 预科准备。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;深度学习目前为止最有用的东西是图像处理，我们可以用它在极早期判断癌症， 也可以用它在茫茫人海里寻找犯人，但是要我说你能写一个小程序取悦女朋友， 你就不一定能信， 这一招叫艺术风格变换，就是你点击一下，就可以把你女朋友的大头照换成一个毕加索的后现代艺术作品（当然是取代还是找打要看你的艺术品位）。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.23965141612200436&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYic4o3ws1KeJDFhvTm58UIPuMhxlGQ2UiciaAyZWHk9R0Hh8dkh5Fh9jyg/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;459&quot; width=&quot;459&quot; /&gt;入行需谨慎
&lt;p&gt;艺术风格迁移是一个古老而现代的主题 ， 多少艺术家为了描摹他人作品而竞折腰。 在出现了IT之后， 它也成为adobe之类的公司竞相追求的宠儿，却始终进展缓慢。&lt;/p&gt;
&lt;p&gt;而深度学习， 却可以轻轻点击自动完成这个任务， 铁哥在此给大家拆拆招 ， 看如何玩转神经风格迁移。&lt;/p&gt;
&lt;p&gt;我们说，神经风格迁移就是把一张图片的内容和另一个图片的风格合成的一个方法，比如说你给出一个猫的图片和一个梵高的自画像，就可以生成一只梵高的猫。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.43333333333333335&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYr42IhDQYJ9YHANqFzwPcFkX4vB66wcpZKVNgYD2JCYBHCP5uWD1CNw/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot; width=&quot;600&quot; /&gt;&lt;p&gt;在深度学习之前，机器视觉的工程师就尝试用各类神奇的滤镜提取图像的纹理信息，抽取取来的纹理图在经过某个变换放回到原图片里，就得到了一个新的风格的图片。　&lt;/p&gt;
&lt;p&gt;深度学习所作的事情，是把这个东西给自动化。我们利用卷积网络的深层结构提取的信息，来替代之前的各种滤镜。　&lt;/p&gt;
&lt;p&gt;首先，卷积网络不仅能够做猫狗识别这一类分类任务，在其中间层里，其实包含了丰富的有用信息，而这些信息，正是我们做风格迁移的基础。如果你可视化CNN的各层级结构，你会发现里面的每一层神经元的激活态都对应了一种特定的信息，越是底层的，就越接近画面的纹理信息，如同物品的材质。 越是上层的，就越接近实际内容（能说出来是个什么东西的那些信息），如同物品的种类。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.8819444444444444&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYtHhWia3sSnXwsXtRXPP3Sgq9ibDZRIF0guMlvE30JnFmJwxjTVxBBibYw/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1164&quot; /&gt;研究人员提出的一套可视化CNN的方法，把深层的内容通过反卷积映射回图象，好比你关心什么，就给你投影出来(Visualizing CNN 2014 )。&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.41944444444444445&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYuMdgmuZUu2Z4uSK6gGbIib0Sic19HEibKIVjYXDb6mkHAEVicKlj1RthSg/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;2068&quot; /&gt;底层神经元关心画面的材质&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.3472222222222222&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY1KVNsUIqsIzTRcbzoqaySD0h1Eia9co1BVjGTgrCuSbVYBJqZg3icMAg/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;2178&quot; /&gt;深层神经元关心物品的种类
&lt;p&gt;那么好了，风格迁移不就是这么简单吗，把一张图片的底层信息和另一张图片的上层信息合成一起不久可以了吗？ 用适当的数学方法，我们可以在卷积网络的中间层里左手提取图象内容有关的信息，右手提取图象风格有关的信息。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.6888888888888889&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYQx9EibUZNRW5l5nEdDzhYfScqPmKRUCDEkvt7BV7T5c91IficozfQTFg/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1764&quot; /&gt;用中间层的信息恢复的内容，可以看到不同层里里都可以找到风格和内容有关的信息， 但是层次越深， 具体的信息就越少， 而“实体” 的概念轮廓犹在

&lt;p&gt;看起来是的，我们可以通过一个已经训练好的CNN， 把一张风格图片和内容图片的信息都抽取出来， 然后拼在一起！&lt;/p&gt;
&lt;p&gt;为什么这里要用一个已经训练好的CNN呢？ 一个用分类任务训练好的CNN，通常已经具有了对世界大多数图像提取信息的能力， 因为图像传递信息的底层机制是想通的。 我们把这个网络连接的权衡直接共享过来， 图片一导进来， 网络就可以生成直接可用的特征！ 这正是迁移学习的原理。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.7507836990595611&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYs7AoRBGTAIVlBicbHGFwuNQ4OIr1WY8Kg0HWLR8ROxlp6S0iabDJMnuQ/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;638&quot; width=&quot;638&quot; /&gt;这里我们导入一个已经训练好的VGG19网络，一种非常流行的CNN图像分类框架
&lt;p&gt;所有深度学习和机器学习，都是预先设定好一个损失函数，然后在进行梯度回传，这里也不例外，我们可以通过设定合理的损失函数，来解决问题。这个损失函数，正是一种能够测量生成图片与风格图片，内容图片距离的函数。　&lt;/p&gt;
&lt;p&gt;来，兄弟们，看我们如何设定这样一个函数。既然我们的深度卷积网络可以做到测量与内容有关的特征，　那么我们只需要在这个层次上找一下特征向量的距离就好了。　&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt; &lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.6597222222222222&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY4yZ09u9kBCIGxP4T5lWcaqkWVsRAjO4btfsIw7cwGA0tBCMY7XEiazQ/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1514&quot; /&gt;图像无非是高维空间的一个点，通过神经网络变换再经过特定降维方法处理后我们可以给它转化成二维曲面上的一个点， 我们会发现，在这个世界里， 狗在狗的国度 ， 猫在猫的国度。 而我们只需要度量不同图像的空间距离，就测量了内容的相似度。&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.26136363636363635&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY2paPnepwZeWvZm9Yoz78JxwR5YsrbLFCEzgbNUNcS8bszXbic95NJyA/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;528&quot; width=&quot;528&quot; /&gt;哇， 这不就是定义距离的公式吗！
&lt;p&gt;然后呢，如何搞定风格，风格通常是一个艺术家眼中主关的有点虚无缥缈的概念，也就是我们通常说的感觉， 比如梵高或者莫奈的画，你没有经过艺术熏陶也可以得来。&lt;/p&gt;
&lt;p&gt;而在深度学习的角度下， 这种感觉却发现与不同神经元活动的相关性有关！ 也就是说，风格是深度网络神经元活动的某种统计特性！ 悄悄的，我们把艺术和数学对接上了。 统计果然是上帝的语言啊有木有！&lt;/p&gt;
&lt;p&gt;这里我们借助一个叫gram矩阵的数学工具，它通过测量同一层卷积输出不同通道之间的相关性（计算不同通道间的相关性，组成一个矩阵）给出一个对风格的度量。然后，我们在测量一下风格之间的距离不就行了吗？&lt;/p&gt;

&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.48333333333333334&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY5sepmib4hJQbzL66Fnq348wTSibMmU5Z1flGNZR1yEcW18WoYEPBqpFA/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1570&quot; /&gt;把CNN某一层对应不同特征的神经元像摊煎饼一样摊开， 然后计算之间的相关性&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.325&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYTyKWmy40p9TRlDgJGicrScDAtmWE3GficSxQw01aG6iaFC4x9033wE2kw/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1790&quot; /&gt;得到一个矩阵，矩阵的每个元素对应不同特征间的相关性

&lt;img class=&quot;content_image lazy&quot; data-ratio=&quot;0.3803680981595092&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY6ItuRzYmgHJZWPJR1kCFraIpFEnBEOXgQVSxCQ4QKkicF083zdkia6ug/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;326&quot; width=&quot;326&quot; /&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.49295774647887325&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYKrhVYKh7reuEI53qNHlrPxqHqV8bea2RxrX9Wj0msxcjXhpWoNzQZg/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;568&quot; width=&quot;568&quot; /&gt;这个损失函数就是gram 矩阵之间的距离！
&lt;p&gt;注意，衡量风格之间的距离， 我们是把不同网络层级间的gram矩阵的距离都计算一下加在一起，这样可以把不同层次度量的东西综合起来 。&lt;/p&gt;
&lt;p&gt;好了，到这一步， 大功告成， 把两个损失函数叠加在一起就好了。&lt;/p&gt;

&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.18055555555555555&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY6NHs2k9libLbZmsD6fDURhyg7xwYTnMpz6YiaOdjIr1TkG2ccLCicjt1w/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1072&quot; /&gt;&lt;p&gt;目标函数的设计学问可大了，改变a和b的比例就能造成很多区别，大家注意风格图片的比例越高，图像就越纹理化。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.8736111111111111&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbY6H4zp6eorl2Soq5sL7ibMbGo6WIW2t6ltj6un6rroAHK7cicicpxInybw/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1422&quot; /&gt;风格的权重变大的时候， 那图像就变成了意大利瓷砖！


&lt;p&gt;然后我们可以做什么呢？ 梯度下降！但注意，这里我们优化的目标不是网络权重而是图像本身，这样我们就大功告成了！&lt;/p&gt;

&lt;p&gt;当然这里说的只是风格迁移的一种， 这种方法的优点是通俗易懂， 而缺点是速度很慢。 还有一个方法，是借用生成网络，直接给搞出来， 这个方法更快速， 更加适合工业封装。 我来给大家展示一下这个方法的实质。&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.2611111111111111&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYOZfamhMQlq3vu12hkUlXvcb3nqWQFZQmiaVCjicSicd7OLvJaEWX4IISA/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1852&quot; /&gt;像不像GAN的结构！
&lt;p&gt;哈哈，这样我们就可以完成一幅艺术作品交给家里领导了，但是不要忘记哦， 这件事给我们的启示绝不止这一个呀。 它给我们启示的是，我们深层神经编码的机制里，深度学习的踪影， 你对风格的认知，其实是和内容的认知一样， 是可以量化的，而不像某些艺术家所言， 完全主观，与数学无关。 不仅可以量化，而且这个信息是可以独立被提取的， 这种信息不是存在于某个神经元之上， 而是分布式的存在于多级神经网络的不同尺度之间， 通过每一层神经元的统计规律表达。&lt;/p&gt;
&lt;p&gt;虽然我们尚不知道这些猜想是否正确， 他们我们人类深奥的视觉处理机制提供了一种聪明的理解方法。&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;6787195013&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;  附： 代码, 看看用pytorch做出来是多么简洁：&lt;/p&gt;
&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.20416666666666666&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYkW3KqZibWm1Qnj2bLXnO94rj0clSaTHCbfElOBPu2YaAW30ZlNHJ2zg/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1618&quot; /&gt;计算内容损失函数&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.8236111111111111&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYTTcNv6BZMQvH4Z3trGs1sXuNnGVxOUKZWgcN49vn8VraKK5NQL7pTQ/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1614&quot; /&gt;计算风格损失函数&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.7583333333333333&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYOGnSUIGv8TG89XLcNbmCknZgTZ6gks7LnyvMm9iahTno5U1VTmpW6lw/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1616&quot; /&gt;设定模型主体！&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-ratio=&quot;0.4152777777777778&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibce26jm4VbZHNZy8LN13ejbYno7cPsax1X1Cbsw1oEiaibQVd8B3jnTpdYSrVBwicgVHb408AaXpKiaU1g/0?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; width=&quot;1620&quot; /&gt;训练过程！
&lt;p&gt;&lt;span&gt;如果你对上面的脑洞感兴趣，欢迎关注巡洋舰的深度学习实战课程， 手把手带你进行深度学习实战， 课程涵盖机器学习，深度学习， 深度视觉， 深度自然语言处理， 以及极具特色的深度强化学习，看你能不能学完在你的领域跨学科的应用深度学习惊艳你的小伙伴，成为身边人眼中的大牛。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;许铁关于风格迁移的讲解视频查看，请点击链:http://pan.baidu.com/s/1c6Siaa  密码:2g61。&lt;/p&gt;


</description>
<pubDate>Tue, 28 Nov 2017 19:41:31 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/PfqJe3yAlh</dc:identifier>
</item>
<item>
<title>小学生都看得懂之 白话数据降维</title>
<link>http://www.jintiankansha.me/t/tfYe8PS62H</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/tfYe8PS62H</guid>
<description>&lt;p&gt;数据降维是数据分析中最常用到的一种技术了，这篇小文将试图用大白话讲一讲数据降维到底是什么，有什么用，常用的方法分别是什么？希望写的让小学生也能听懂，下面先为各位奉上这篇小文的思维导图。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSlGHsrvSxVJgAQM6CwLX3q7uj4icwWAzv0fZQmNT0mv6dUaL5jmzRq5lg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.40923076923076923&quot; data-w=&quot;975&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这篇文章贯穿始终的一个故事场景是如何在一个小镇上将横纵的街道编号，例如科技三路和凤城五路的接口这样一个用俩个数字标注的位置信息，转化更一个只用一个数字标识的位置描述。在上述的例子中，原来的位置信息有俩个维度，我们就用笛卡尔坐标系中的X轴和Y轴来表示吧，而数据降维的目地就是要让数据的维度降低到一维。而在上述的小镇上，如果有一条铁路通过了小镇，而小镇上所有重要的建筑都在铁路边，那么就可以根据距离铁路的起点多远来定义每一个点的位置。当然，这样的定位不如用俩个维度来的准，有的地点离铁路远，但是远多少，在新的表示中就没有得到展示了。这说明数据降维不是无损的，会造成信息的部分丢失。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSlDyqI9ibbzhUUlGZoCY02o6RGibj9I4dHlGsBuicQSNjb6sicpFhqxogVjg/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.24566473988439305&quot; data-w=&quot;692&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那数据降维在什么时候应该应用了？回到小镇的例子，数据降维的第一个用途是数据压缩，如果你只能在一张小便签向一位你新认识的朋友写下你家的地址，便签上写不下是××路××号，那你可写铁路第五。而数据降维还可以去做数据可视化或特征提取，比如你要在小镇上开一家点，你先看看那里人群更加密集，你可以通过数据降维，做出那些地方周围的点多，从而人流更密。数据降维的第三个用途是异常值检测和聚类，例如你通过数据降维，发现小镇上的大部分人家都住在两个火车站附近，但是有一俩个家却不在这里，这样你就发现了小镇里那些特立独行的人，接着你发现俩个火车站附件的人家，一家都姓张，一家都姓李，这样，你就将小镇的人家通过数据降维，分成了俩类。&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSlB1aqBDEF7Fic0r5cV16EaxNPoXr114ukwKsePabVriaX2W5meAGQtXVQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.47074468085106386&quot; data-w=&quot;376&quot; data-backw=&quot;376&quot; data-backh=&quot;177&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来说说各种做数据降维的方法，最熟悉的方法是主成分分析法，即PCA，在上面的例子中，主成分就是我们找到的铁路线，我们将小镇上所有的人家按照铁路开来的顺序，依次排序，从而得到了只用一个数字表示的距离。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;然而PCA有一个问题，就是他画出的这条线，一定要是一条直线，如果这个小镇上的人家不是根据铁路线，而是根据一条弯弯区区的河流，在河两岸安家的，那么PCA就无法找出这条弯曲的线了。而我们遇到的大部分小镇，都是逐水而居的，正如我们通常遇到的需要降维数据，而这就需要所谓的非线性数据降维方法了。&lt;/p&gt;

&lt;p&gt;第一种非线性的降维方法叫做核PCA，即Kernel PCA。理解核PCA，可以想象我们在标识一家人的住址的时候，先通过一个核函数的方式估算出这家人住的地方海拔有多高，由于水是向低流的，通过先将数据的维度提升，再降低的方式，从而在非线性的约束下实现数据降维。&lt;/p&gt;

&lt;p&gt;而第二种非线性的降维方式叫做tsne，tsne是一种很强大，也很费计算时间的非线性降维方法。tsne的逻辑可以这样理解，你要将小镇上每户人家的住址降低成用一个数字表达的数，由于在之前小镇上人们之所以张家和李家住的近，是因为他们自己是亲家，而刘家和王家住的远，是因为他们之间打过架。在之前的住址中，包含了这样拓扑信息，而在降维之后，你在地图上画出一条弯弯曲曲的线，不管这条线你是怎么画的，你都希望在这条线上张家和李家还是很近，刘家和王家还是很远。这就是tsne要保留的高维数据中的拓扑结构。可以想象，小镇里要是住户越多，这条线也越难画，tsne是一种迭代的算法，也就是说人民最开始画的线不一定是最好的，一次次向着优化目标的修改，直到达到相对较好的点。&lt;/p&gt;

&lt;p&gt;而这里要介绍的最后一种降维方法，来自于机器学习的门派，叫做自编码器。还是拿小镇上的例子来说，现在你假设要对镇上每户人家的住址用一个数字来编码，但你不知道该怎么办。于是你叫来你的双胞胎儿子，叫弟弟想办法用一个数字来标记每户人家，而叫哥哥在不知情的情况下，根据他弟弟给出的数字去猜测每户人家在那里，最初哥哥猜出的地方和这户人家本来的地方差距很远的，而等到几个月之后，兄弟俩有了默契，他们猜到的地方就差不多了。这时你将弟弟称为编码器，将哥哥称为解码器。而你叫来兄弟俩，问清楚他们各自是怎么做的。通过这种方法，你完成了任务。为了保证兄弟俩没有相互串通，你还故意在告诉弟弟每户人的住址时，故意说错一点，也就是给数据增加了一些误差，通过这样的方式，你可以确保兄弟俩是学到了数据中真实的规律，而不只是鹦鹉学舌。&lt;/p&gt;

&lt;p&gt;总结一下，数据降维是拿到高纬度数据后，不可不做的一件事，其既可以用来探索数据的结构，比如做聚类，又可以用来去找出数据中质量不好的离群点，数据降维的方式很多，最常用的是PCA及其衍生改进方法，以及相比PCA慢的多但也强大的多的tsne，另外还有来自神经网络的自编码器。这些方法可以结合起来使用，比如将一个10维的数据先用PCA降成5维，再用tsne降低成2维，这样兼顾的计算耗时和准确度。&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSl5ApQPrl6wTwJCAwmZiaOEibBpuwibc2V7xFm2VgpKdLvhk0w7Iu9UicZGg/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-backw=&quot;239&quot; data-backh=&quot;136&quot; data-croporisrc=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSlxdZg5QsD5SbWSMyveUovrXJdyJa83UFiaoy7zKQ4tEr5quMvojMrckw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;239&quot; data-cropy1=&quot;38.687050359712224&quot; data-cropy2=&quot;135.8345323741007&quot; data-ratio=&quot;0.4100418410041841&quot; data-w=&quot;239&quot; /&gt;&lt;/p&gt;

&lt;p&gt;扩展阅读&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383161&amp;amp;idx=1&amp;amp;sn=b27c2a0686d57b13daadcfd16cb35dac&amp;amp;chksm=84f3cb38b384422ecfca55da7b54978a8f3742605549566920507d5e032e16da1be50c1f5f97&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;你需要的深度学习数学基础： 从入门到进阶&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;


&lt;p&gt;以下的内容不适合小学生哦，一个是R语言中对应的包，而是一些测试题，测试你对这篇小文的理解。&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSlicMrpaVDKNMrYPHn8vxKubz4pO5ZhsS9k0cxxCiaIWkjgF6wLzEHfaog/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.5093240093240093&quot; data-w=&quot;858&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面是想深入了解的读者可以回答的一些问题，前四提单选，后两题多选。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdELMqvjP6J8kM6RDh7vCSllqCnCcA6uAjibdRho0DQQJibxdvicBib4fT3tUm3iahWichdUNOzxGyHj0iaw/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;1.0521042084168337&quot; data-w=&quot;499&quot; data-backw=&quot;499&quot; data-backh=&quot;525&quot; /&gt;&lt;/p&gt;

&lt;p&gt;原创不易，随喜赞赏&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9397590361445783&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.100weidu.com/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd4icdSNQnx98Zicw7nnP3icPycqI1uRMvRxCezhYm4xQKdbiamvHVmC19a0o7YS03eqTrIL9QJS4wS4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;249&quot; width=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;欢迎关注&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651382937&amp;amp;idx=1&amp;amp;sn=d4510592a837c44fe75393c2578698d8&amp;amp;chksm=84f3cad8b38443ce6adcd155a2c45ee7707b4a9d8e48c05728aa7e93862475832bf89617025f&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;巡洋舰的深度学习实战课程&lt;/a&gt;， 手把手带你进行深度学习实战， 课程涵盖机器学习，深度学习， 深度视觉， 深度自然语言处理， 以及极具特色的深度强化学习，看你能不能学完在你的领域跨学科的应用深度学习惊艳你的小伙伴，成为身边人眼中的大牛， 感兴趣的小伙伴可以点击阅读原文。&lt;/strong&gt;&lt;/p&gt;


</description>
<pubDate>Mon, 27 Nov 2017 19:06:34 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/tfYe8PS62H</dc:identifier>
</item>
</channel>
</rss>