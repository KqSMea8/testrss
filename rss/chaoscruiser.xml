<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fchaoscruiser-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/chaoscruiser-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fchaoscruiser-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fchaoscruiser-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>混沌巡洋舰</title>
<link>http://www.jintiankansha.me/column/ultiWL8Axg</link>
<description>混沌巡洋舰 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>胶囊网络结构Capsule初探</title>
<link>http://www.jintiankansha.me/t/DFL1G8ddhQ</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/DFL1G8ddhQ</guid>
<description>&lt;p&gt;作为神经网络的大牛Geoffrey Hinton在17年十月提出了一种新的网络结构，他称之为Capsule，这个词的中文意思是胶囊。在本周，Capsule的代码在github上开源，瞬间成为爆款。 Capsule式的网络结构，和卷积神经网络一样，最初是用来处理视觉问题的，但是也可以应用到其他领域。这篇小文不涉及Capsule神经网络的数学细节，而是关注Capsule网络是如何克服CNN存在的问题的。阅读之前，对于卷积神经网络不熟悉的可以先看看&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383212&amp;amp;idx=1&amp;amp;sn=e6dbbda2acc5984c8d06e24ec9c84d09&amp;amp;chksm=84f3cbedb38442fb58f0aea635821fcf4ba3edaacef4685716c7eadb6191197ebfa70a6bf14b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;你所不能不知道的CNN&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.3333333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cVakZ7GRGnXvdSYNcLe0nYcfIwkZJKEXuCPIuGv0RTYWDFf6vWuwDIw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;225&quot; /&gt;&lt;/p&gt;
&lt;p&gt;谷歌公司的Geoffrey Hinton大神&lt;/p&gt;

&lt;p&gt;用Hinton大神的话来说，计算机图形学做的是渲染，而计算视觉想做的就是渲染的逆过程。渲染是将三维的图像投影到二维，在数学上意味着给原图乘以一个固定的矩阵。而计算机视觉做的，则是Inverse Graphics，也就是从二维的图像推测出本身的三维结构。为了比较胶囊网络和CNN之间的区别，让我们先看看CNN想做什么，有什么不足。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) CNN那里做的不够好&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有一些事情，对小孩子来说很容易，但若是卷积神经网络，则很难，例如认清楚下面两章图上的猫是同一只。然而若是神经网络无法做到这一点，机器视觉的模型，不管处理怎样的任务，都注定会不够稳键（robust）。解决图像迁移后的一致识别，是Capsule神经网络出现的第一个目的。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.46530612244897956&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcesX0Jso3CcjQl3jZyyVQ2RmWaSadwAKZ6rUhjnbDFCIiazxkyzoVLbzHEm7oqyC8EPrubRkp45Izg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;735&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不止是左右的平移，CNN对于旋转，加上边框也会难以觉察出其一致性，CNN会认为下图的三个R是两个不同的字母，而这是由网络结构所带来的，这也造成了CNN所需的训练集要很大，而数据增强技术虽然有用，但提升有限。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.47793190416141235&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcesX0Jso3CcjQl3jZyyVQ2Ry60uqy6EUl4QsIbf9W9Xhttb9YibT6kGD1MJYbe6pCt96WlHoUotiaDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;793&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9135338345864662&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcesX0Jso3CcjQl3jZyyVQ2RT5uCI0gYIibENKuQQUIKQgdd8yNvCQs1QibibJoCReIAygTQQicIHBQdhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;532&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一张脸上不应该只是由两只眼睛一张嘴巴一对鼻子构成的，组成整体的部分之间的相互关系对于识别图形，也很重要。下面的这张图会被CNN看成是一张脸，这是因为CNN识别脸的时候，是识别脸的几个组成部分，下图中的确有两个眼睛，有鼻子，有嘴，虽然其位置不对，这对于CNN来说就够了，CNN是不会注意子结构之间关系的。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8577777777777778&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cH8rtUb5xpYGmmic09jCMQbGaLPFcZ1ppZ073Z2GgT7d447vj1icVNI1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;225&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-backh=&quot;160&quot; data-backw=&quot;558&quot; data-croporisrc=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cK4vlUic0z2MJ5ZWc2vBDwia5ficTKbX1gzpQPuVa21NTKelhgPsQ2zWqw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;590&quot; data-cropy1=&quot;5.286738351254481&quot; data-cropy2=&quot;174.46236559139786&quot; data-ratio=&quot;0.2864406779661017&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2c6A6Z5P1Urzr7uVamKwqeL2tq0icpB48zgN2cFRicdSkkMf1IomvKUIXQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;590&quot; /&gt;&lt;/p&gt;



&lt;p&gt;同样的道理，CNN的网络难以区分左图和右图，他们是由相同的形状（椭圆形）组成的，其信息都储存在子结构之间的关系中。卷积核之间的独立即使的训练简单，又丢失了全局的关联信息。&lt;/p&gt;
&lt;p&gt;              &lt;img class=&quot;&quot; data-ratio=&quot;0.9884393063583815&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cBO7cFcRicet6sru6oTRkPlwYHfpXkn54YQeYBHkoCs3Q1eWngnVFONg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;173&quot; /&gt;      &lt;img class=&quot;&quot; data-ratio=&quot;0.7896995708154506&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2copuVfdwH3NlenyoYOQfSEj5seGibQAEtKn8XGwLrs2JDgSCQWMVwMfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;233&quot; /&gt;&lt;/p&gt;
&lt;p&gt;人类在识别图像的时候，是遵照树形的方式，由上而下展开式的，而CNN则是通过一层层的过滤，将信息一步步由下而上的进行抽象。这是Hinton认为的人与CNN神经网络的最大区别。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.46210526315789474&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcesX0Jso3CcjQl3jZyyVQ2RMTVDGSnxcduFItCqrU0PDvAXgnQxUFGKKMRqibogsglohWA7BfZsACQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;950&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总结下这一小节，卷积神经网络的问题是其神经员之间都是平等的，没有内部的组织结构，这导致无法保证在不同位置，不同角度下对同一个物品做出相同的识别，也无法提取不同卷积核得出的子结构之间的相互关系。CNN中采用的分块和共享权重，其目标都是希望能够使神经网络学到的特征提取之术能够在图形出现微小变化时能够应对，而不是针对图形的变化，对应神经网络进行相应的改变，而这正是capsule神经网络所要做的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2）脆弱与反脆弱&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用英文来说，为了提升模型的可扩展性，CNN追求的是Invariance，而胶囊网络追求的是Equivariance。熟悉塔勒布的童鞋会想起他的命运，脆弱的反义词不是稳健，而是反脆弱。这正是胶囊神经网络强大的地方，追求的是在不同视角下对同一个物品的相同感知（标签），而通过对各个视角下都有标记的数据死记硬背做到对相似物品图像的识别。&lt;/p&gt;

&lt;p&gt;回到上文提到的字母R的例子，下图的两个字母左边的那个不是R，但人类大脑在做出这一判断的时候，不需要一个老师指出这一事实，人会在自己的大脑中对左边的图像进行翻转，使得半圆处于图形的上方，之后再识别出图形，如果能够让神经网络也能做类似的事，那就不需要太多的标注数据了。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4941329856584094&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2c4lkW5qicZ1fCV0gjDYynFJ8Ypicwdq7CMwsaWkdP07YRCyWSIzeecbqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;767&quot; /&gt;&lt;/p&gt;

&lt;p&gt;正是由于胶囊网络可以对图形进行翻转，这使得其不需要那么多的标注数据，下图对比了CNN和胶囊神经网络在识别人脸上的区别。CNN中需要有一层去应对不同翻转角度的脸，而胶囊网络则可以用一个胶囊去完成这个任务&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.2700106723585913&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2c6HGafvh4Pibuvfw7rXUSINcIpDfPPQhhE63ANnZDBiaRNtUHBAkp6TnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;937&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.24180327868852458&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cNXWPvUhQuyib17UMM473hUL4DWScDcommbp5ibGwM1gTv7cIuicPXKw8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;732&quot; /&gt;&lt;/p&gt;

&lt;p&gt;具体看看胶囊神经网络想做什么，假设我们训练一个识别数字2的网络，我们首先做的是在每一层训练一些胶囊（即一组相对独立的神经元），每一个胶囊只负责图形中的一个子结构，例如图中的三个胶囊，分别识别横线，竖线和锐角，每个胶囊给出图形中每个位置出现自己负责识别的特征的概率（intensity），之后再通过一个编码器，综合每一个胶囊给出的在各个位置的强度信息，最终得到经过重构后的图像。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7443820224719101&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2c1hJamiaArMdZFxib7rERlIyUL7AQlVK5x4ya5q9QLeT1ve59SlUaAaGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;712&quot; /&gt;&lt;/p&gt;

&lt;p&gt;例如我们关注的是识别数字7，那么下图中的第一行是传统的神经元，会给出对应图形是不是7的概率，但这个神经网络却无法识别第三行的数字。一个包含两个神经元的胶囊可以一个识别图形的翻转情况，一个识别具体的形状。不管图形是第二行那样竖直站立的，还是像第三行那样歪倒的，胶囊网络都可以正确的识别。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.614853195164076&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cr3icgBmyqib6qnVkaAkA18K5aLy9uDVTFjEsYslHR2RicBS0sGTUHM6SA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;579&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于每个胶囊给出的是输出是一组向量，不是如同传统的人工神经元是一个单独的数值（权重），为了解决这组向量向那一个更高层的神经元传输的问题，就需要Dynamic Routing的机制，而这是胶囊神经网络的一大创新点，也是理解中的难点。Dynamic routing使得胶囊神经网络可以识别图形中的多个图形，这一点也是CNN所不能的。由于讲解Dynamic routing需要很多数学细节，这里就不再细说。可以理解成一种实时的投票，决定不同胶囊网络之间提取的特征哪一个更显著，更有益于上一层网络的重构。&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;3）冗余对抗复杂&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面的图展示了胶囊神经网络在MINST数据集下的表现，这里可以看出胶囊神经网络的另一个好处，即可解释性强，你可以看出每个胶囊想做什么。不过即使你知道了每个胶囊识别的是那些子结构，你也很难想象出是怎样通过这些结构的组合识别出数字的。我猜那是你理解的数字识别的规则，根本不需要这么多的子结构，但这只不过是你对当前情况的解释，真实的大脑，如同胶囊神经网络，所做的都是利用冗余来对抗复杂，让模型模仿人类大脑用冗余带动生产的能力， 来对抗复杂的问题。引申来说，说深度学习缺少解释性，部分的原因是我们对解释性的理解太浅了，人们天生不习惯复杂的解释，但要应对复杂，就必须有冗余。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8304552590266876&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cBMt0lUd0SQm3981NhGLMhcCIz0uyzrxN5rRoNDGrmQMEyOPECqn50Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;637&quot; /&gt;&lt;/p&gt;
&lt;p&gt;此图来自Hinton关于Capsule的论文，图中的第一列是网络的输入数据，第二列是网络根据原图重构的图形，网络的目标是让这两幅图的差距尽可能小，第三列给出了这两幅图之间的差别，之后的列是网络中每一个胶囊所识别的子结构，可以看到，这些子结构之间很多是相似的，也就是网络有冗余。&lt;/p&gt;

&lt;p&gt;冗余带来的好处，从下图可以看出，这里展示了如果对于每一个胶囊给出的intensity值加上或减去两个标准差后，网络重构出来的图像会是怎样，可以看出，图形基本还是能识别成原始的2的，这说明网络具有鲁棒性，不会像CNN一样，仅仅因为一两个像素点的改变，就将图形识别错误。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.43537414965986393&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cOG9eKJc2bkNLsT9BtbcXoR1lFDxWibvbLxylsIGibroDCta517sDzhOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;441&quot; /&gt;&lt;/p&gt;
&lt;p&gt;类似CNN的深层网络，胶囊网络也可以有层次结构，如下图所示，红色的是底层的胶囊结构，绿色的是高层的胶囊结构，绿色的胶囊无法知道图形中具体的形状是什么在哪里，这使得绿色的胶囊结构通过训练所学到的只是图形中子结构之间的相互关系，这就实现了CNN所不能的，也就是将图像在其头脑中进行翻转伸张平移等视角变换，但同时保持其特征的一致性。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7510373443983402&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cPib3JFuWBAcgOxp32O9NibqSDfHjGub4n0bnY72ApEv1uAoAcJwzyibKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;723&quot; /&gt;&lt;/p&gt;
&lt;p&gt;下面展示了胶囊神经网络在3D图像中的表现，这里的目标是看看胶囊神经网络能否正确的的从下图中左边的一列，将图形做选择，得出右图的图形。我们看到，胶囊网络翻转生成的图像效果不错。这说明神经网络学到了每个图形中子结构之间应该怎样连接。而在第二幅图中，展示了说学到的连接也可以应用在没有出现在训练集的测试数据上，哪怕训练数据是汽车，测试数据是飞机，这展示了胶囊网络优良的可扩展性。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.798219584569733&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cibRjSbibSUhwcMMuvjakTqhFV3tiaA63bOAA90r58rHhkdAftHJibvO7Jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;674&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7635829662261381&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cKrqPJSs3ommkvXAsm9zicYLOexffTkwap3sUKibAk3ZgwnricsWsnBOUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;681&quot; /&gt;&lt;/p&gt;

&lt;p&gt;任何结构的神经网络需要提高其模型的可扩展性，都需要做正则化。CNN的标准做法是随机的扔掉一些神经元，即dropout，而胶囊神经网络则是通过重构的方式，在识别某一个图形的标签时，将网络中与这个图形无关的部分都关闭，而使剩下的网络试图尽可能准确的重构这个图形，从而提高模型的泛化能力，这里借鉴了自编码器的思路，结合胶囊网络子结构之间的独立性，这使得模型的泛化能力很强。而这也可以看成是通过冗余来应对复杂，明明识别6和9的网络可以很类似，但因为有了分工，弄混的概率也少了。&lt;/p&gt;

&lt;p&gt;4）小结&lt;/p&gt;
&lt;p&gt;胶囊网络可以算是一种革命性的网络架构，神经元的输出从一个标量变成了一组向量，这如同让网络流动起来了。每一个识别子结构的胶囊，使原始图形中隐藏的信息在bits数变小的情况下实现了高度的保真，而这个保真，又是从复杂结构里直接进化得到的。通过重构原图，模型做到了在视角变换后，通过网络结构的改变，给出相同的认知（重构），这使的胶囊网络具有了反脆弱的性质。另外需要指出的是，CNN和胶囊神经网络并不是互斥的，网络的底层也可以是卷积式的，毕竟胶囊网络善于的是在已抽象信息中用更少的比特做到高保真的重述。&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;img class=&quot;&quot; data-ratio=&quot;0.7255216693418941&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdRef6B9WjltyUVqWvhQX2cAJ3EysYYBwhTaGqIO9n7q4VOg3KwH847JNbaXd9AOjz5PfUOuP69Jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;623&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这里给出了用来识别MInst数字集的CapsNet网络结构图，底层是卷积层，而用来最终做预测的也是熟悉的Sigmoid全连接层，改变是只是中间那些层，由卷积网络变成了胶囊网络。&lt;/p&gt;

&lt;p&gt;更多阅读&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383309&amp;amp;idx=1&amp;amp;sn=f0ee86dc43994673f2b818cb2c2efe4b&amp;amp;chksm=84f3c84cb384415a67b8469578df8268a490f12355d4213c126d767227a0da52a77297b47be4&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;白话迁移学习&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383280&amp;amp;idx=1&amp;amp;sn=a6fd903f2c47339c52dcea9eedf65851&amp;amp;chksm=84f3cbb1b38442a7f4aac491852e06c34794154946a3656bc4ac4805b1ef1b41cb4469ae8419&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;对抗神经网络初探&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://www.cs.toronto.edu/~fritz/absps/transauto6.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://cseweb.ucsd.edu/~gary/cs200/s12/Hinton.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://www.arxiv-vanity.com/papers/1712.03480/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;https://jhui.github.io/2017/11/03/Dynamic-Routing-Between-Capsules/&lt;/span&gt;&lt;/p&gt;


</description>
<pubDate>Sat, 03 Feb 2018 06:25:33 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/DFL1G8ddhQ</dc:identifier>
</item>
<item>
<title>白话迁移学习</title>
<link>http://www.jintiankansha.me/t/KQI4gcI1tj</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/KQI4gcI1tj</guid>
<description>&lt;p&gt;深度神经网络，相比于之前的传统机器学习方法，可以看成是一个全新的物种，这背后的原因，最明显的还是深度学习对机器算力的巨大需求，在&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383250&amp;amp;idx=1&amp;amp;sn=59c8b29f52dcc4db8ddf286840bca434&amp;amp;chksm=84f3cb93b3844285742e9034aef6f23a1a88dfb17ea85b81cd364032fed123200a7cc80f3b14&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;深度学习入门最少需要知道什么？&lt;/a&gt;中介绍了深度学习所需的显卡资源，而当前大内存的机器不贵，而高性能，大显存的显卡就没那么便宜了。这使得使用深度学习去处理实际生活中遇到的问题，例如图像和语音的识别时，需要消耗大量的资源。而迁移可以改变这一切，显著的降低深度学习所需的硬件资源。&lt;/p&gt;

&lt;p&gt;本文会先介绍迁移学习的定义，接着说说预先训练好的网络是什么，为什么有用？使用预训练的网络又有那两种方法？之后会通过MINST数字识别的例子，来展示该如何应用迁移学习。&lt;/p&gt;

&lt;p&gt;让我们通过一个直观的例子来说明什么是迁移学习。假设你穿越到了古代，成为了太子，为了治理好国家，你需要知道的实在太多了。若是从头学起，肯定是来不及的。你要做的是找你的皇帝老爸，问问他正在做了什么，而他也希望能将他脑子的知识一股脑的转移到你脑中。这正是迁移学习。即将一个领域的已经成熟的知识应用到其他的场景中。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1MBlkszgaZsnbgj2kgIzTh1pUyZSPO5Tvedk6pcVNrWTpcGOSukfIeA/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-ratio=&quot;0.749034749034749&quot; data-w=&quot;259&quot; data-type=&quot;jpeg&quot; data-backw=&quot;259&quot; data-backh=&quot;194&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;p&quot;&gt;用神经网络的词语来表述，就是一层层网络中每个节点的权重从一个训练好的网络迁移到一个全新的网络里，而不是从头开始，为每特定的个任务训练一个神经网络。这样做的好处，可以从下面的例子中体现，假设你已经有了一个可以高精确度分辨猫和狗的深度神经网络，你之后想训练一个能够分别不同品种的狗的图片模型，你需要做的不是从头训练那些用来分辨直线，锐角的神经网络的前几层，而是利用训练好的网络，提取初级特征，之后只训练最后几层神经元，让其可以分辨狗的品种。&lt;/p&gt;

&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1iaJF6OAYQCmftEmC2lx1GuteKib50Iw5Pr1Ol3pRYL3dEXB51BcaXaRw/0?wx_fmt=png&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;0.6013888888888889&quot; data-w=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;p&quot;&gt;从上述的例子引申出来，迁移学习的理念，其实有广泛的应用。人类的语言使得代际之间的迁移学习变得可能，在语言出现之前，每一代能够教给下一代的东西极其有限，而有了语言，人类的知识得以爆炸性的增长。而随着现代科学的进步，每门学科都产生了很多术语，这些术语相当于抽象层次更高的表述，所需的学习时间也会变长，这使得童年这个文化概念得以产生。迁移学习的道理应用到现实生活中，还意味着教育和娱乐的区别。教育要有阐释，有背景，有对情境复杂性的分析，追求的是宽度，而当前娱乐式的知识传授，则只追求深度，从一个有趣的案例，一路衍生出看似深刻的道理，或者停留在事实本身，将知识变成一个个孤岛而不是网络。&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1pvRr1fkPx7A1jmghaDHHRjb4M1G65k3LEJPmqO9zSfR4mQ67szLG8w/0?wx_fmt=png&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;0.44344262295081965&quot; data-w=&quot;1220&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1nHIxqzgLHx3oiaknGVvjpr7AqwQ8xEKW7YZ2ibUt3H3bT1bsXiaAe2J7g/0?wx_fmt=png&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;1.1176024279210925&quot; data-w=&quot;1318&quot; /&gt;&lt;/p&gt;


&lt;p&gt;回到技术问题。迁移学习相当于让神经网络有了语言，新一代的神经网络可以站在前人的基础上更进一步，而不必重新发明轮子。使用一个由他人预先训练好，应用在其他领域的网络，可以作为我们训练模型的起点。不论是有监督学习，无监督学习还是强化学习，迁移学习的概念都有广泛的应用。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK11EERsE2DL3ZCSrj8SUicAHyEzDlYicE08ZCF5nEVWhhh4RvaxkkicZmDQ/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-ratio=&quot;0.7263888888888889&quot; data-w=&quot;720&quot; data-type=&quot;jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;举图像识别中最常见的例子，训练一个神经网络。来识别不同的品种的猫，你若是从头开始训练，你需要百万级的带标注数据，海量的显卡资源。而若是使用迁移学习，你可以使用Google发布的Inception或VGG16这样成熟的物品分类的网络，只训练最后的softmax层，你只需要几千张图片，使用普通的CPU就能完成，而且模型的准确性不差。&lt;/p&gt;
&lt;p&gt;&lt;img data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1GhQvoG75aCXBY66nF31SWgAj99iaJcpIOC7Sbu3OtpdGOiaicP7cx3Dog/0?wx_fmt=png&quot; data-copyright=&quot;0&quot; class=&quot;&quot; data-ratio=&quot;0.6866485013623979&quot; data-w=&quot;734&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用迁徙学习时要注意，本来预训练的神经网络，要和当前的任务差距不大，不然迁徙学习的效果会很差。例如如果你要训练一个神经网络来识别肺部X光片中是否包含肿瘤，那么使用VGG16的网络就不如使用一个已训练好的判断脑部是否包含肿瘤的神经网络。后者与当前的任务有相似的场景，很多底层的神经员可以做相同的事，而用来识别日常生活中照片的网络，则难以从X光片中提取有效的特征。&lt;/p&gt;

&lt;p&gt;另一种迁移学习的方法是对整个网络进行微调，假设你已训练好了识别猫品种的神经网络，你的网络能对50种猫按品种进行分类。接下来你想对网络进行升级，让其能够识别100种猫，这时你不应该只训练网络的最后一层，而应该逐层对网络中每个节点的权重进行微调。显然，只训练最后几层，是迁移学习最简单的1.0版，而对节点权重进行微调（fine turing），就是更难的2.0版，通过将其他层的权重固定，只训练一层这样的逐层训练，可以更好的完成上述任务。&lt;/p&gt;


&lt;p&gt;另一种迁移学习的方式是借用网络的结构，即不是使用已训练好的网络的权重，而是使用相同的网络结构，例如多少层，每层多少节点这样的信息，然后使用随机生成的权重作为训练的起点。例如你要训练世界上第一个识别fMRI图像的神经网络，你就可以借鉴识别X光图片的神经网络。&lt;/p&gt;

&lt;p&gt;&lt;img data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1UMtuDP614TlUwZibNUPKRyP0kmPa2f3PYxZ7SRQSrQLk0lnaOa2DDbQ/0?wx_fmt=png&quot; class=&quot;&quot; data-ratio=&quot;0.5534883720930233&quot; data-w=&quot;645&quot; data-type=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;和传统的方法相比，迁移学习的另一个好处其可以做多任务目标的学习，传统的模型面对不同类型的任务，需要训练多个不同的模型。而有了迁移学习，可以先去实现简单的任务，将简单任务中的得到的知识应用到更难的问题上，从而解决标注数据缺少，标注不准确等问题。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcdhpRT4FMbr2F3M76szlnK1bicRk7k5WlNxflPB4iaMOWdEKYT1EYbszD9OKMMAMzr6XbXYxE9KMKgA/0?wx_fmt=jpeg&quot; class=&quot;&quot; data-ratio=&quot;0.9&quot; data-w=&quot;300&quot; data-type=&quot;jpeg&quot; data-backw=&quot;300&quot; data-backh=&quot;270&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这幅图说明了该用哪种迁移学习，让我们逐个来看。&lt;/p&gt;

&lt;p&gt;1）右下角场景，待训练的数据集较小，已训练的模型和当前任务相似。此时可以只是重新训练已有模型的靠近输出的几层，例如将ImageNet中输出层原来可以判别一万种输出的网络改的只能判别猫的品种，从而利用已有网络来做低层次的特征提取。&lt;/p&gt;

&lt;p&gt;2）左下角场景，待训练的数据集较小，已训练的模型和当前任务场景差距较大。例如你有的已训练网络能识别出白天高速路上的违章车辆，你需要训练一个能识别出夜间违章车辆的模型，由于不管白天夜晚，交通规则是没有变化的，所以你需要将网络靠近输入的那几层重新训练，等到新的网络能够提取出夜间车辆的基本信息后，就可以借用已有的，在大数据集下训练好的神经网络来识别违章车辆，而不用等夜间违章的车辆的照片积累的足够多之后再重新训练。&lt;/p&gt;

&lt;p&gt;3）左上角场景，待训练的数据集较大，已有的模型和新模型的数据差异度很高。此时应该做的是从头开始，重新训练。&lt;/p&gt;

&lt;p&gt;4）右上角场景，待训练的数据集较大，已有模型的训练数据和现有的训练数据类似。此时应该使用原网络的结构，并保留每一层的节点权重，再逐层微调。&lt;/p&gt;

&lt;p&gt;接下来看一个实际的例子，大家都熟悉的MINST手写数字识别，也可以用迁移学习来做，已有的训练数据是六万张图片，已有的模型是通用的图像识别模型VGG16，看起来，我们即可以将网络的最高层重新训练，也可以训练网络的最初几层，毕竟手写数字的图片，和我们日常见到的图片即相似也有明显不同。点击阅读原文，可以查看具体的python代码。&lt;/p&gt;

&lt;p&gt;总结一下，迁移学习应用广泛，尤其是在工程界，不管是语音识别中应对不同地区的口音，还是通过电子游戏的模拟画面前期训练自动驾驶汽车，迁移学习已深度学习在工业界之所以成功的最坚实支柱，而学术界对迁移学习的研究则关注以下几点，一是通过半监督学习减少对标注数据的依赖，应对标注数据的不对称性，二是用迁移学习来提高模型的稳定性和可泛化性，不至于因为一个像素的变化而改变分类结果，三是使用迁移学习来做到持续学习，让神经网络得以保留在旧任务中所学到的技能。&lt;/p&gt;

&lt;p&gt;最后引申来看，集成学习，例如AdaBoost其背后的机制，也可以看成是另一种形式的迁移学习，通过多次使用训练样本，并给不同的样本赋予不同的权重，集成学习也可以做到站在巨人的肩上。而Dropout机制，也是让网络训练中随机的丢失节点，从而使得网络不得不依据之前的模型进行迁移学习，从而提高泛化能力。迁移学习本质上利用的是不同任务间的相关性，用冗余对抗复杂。&lt;/p&gt;

&lt;p&gt;参考资料&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;http://sebastianruder.com/transfer-learning/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;https://www.analyticsvidhya.com/blog/2017/06/transfer-learning-the-art-of-fine-tuning-a-pre-trained-model/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;扩展文章&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383280&amp;amp;idx=1&amp;amp;sn=a6fd903f2c47339c52dcea9eedf65851&amp;amp;chksm=84f3cbb1b38442a7f4aac491852e06c34794154946a3656bc4ac4805b1ef1b41cb4469ae8419&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;对抗神经网络初探&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383212&amp;amp;idx=1&amp;amp;sn=e6dbbda2acc5984c8d06e24ec9c84d09&amp;amp;chksm=84f3cbedb38442fb58f0aea635821fcf4ba3edaacef4685716c7eadb6191197ebfa70a6bf14b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;你所不能不知道的CNN&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 21 Jan 2018 08:28:40 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/KQI4gcI1tj</dc:identifier>
</item>
<item>
<title>从英语翻译到人工智能：我如何用两年时间跨界转行</title>
<link>http://www.jintiankansha.me/t/9NzvujlNB7</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/9NzvujlNB7</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;本文来自铁哥好友 唐思楠 的个人公众号 影子练习SinanTalk&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;版权说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;无特别说明情况下，图文均原创（题图: 美剧《硅谷》） &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;欢迎转发 转载请微信联系 @LynnTang_&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;span&gt;刚刚发了一条微博，纪念自己从决定转行到现在刚刚好两周年：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/ETsNbcnZdRzicic4bIy3ktuByhwZJCfibIugUiccyCZUezkSKR2E375cIq7Kl232mn1lF5zY6aeXOVmNG5850hbHBw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在这两年里，我经历了以下大大小小的里程碑：&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;27&quot;&gt;
&lt;p&gt;&lt;span&gt;2016 年初：&lt;/span&gt;&lt;span&gt;在德国刚开始读英语语言学硕士没多久，萌生了转方向到计算机语言学（Computational Linguistics，后来我才知道那与自然语言处理 Natual Language Processing 领域基本重合）的想法。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2016 年春夏：&lt;/span&gt;&lt;span&gt;开始在 Coursera 上从零自学编程，主要是 Python。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2016 年夏末：&lt;/span&gt;&lt;span&gt;找到第一份计算机语言学领域的实习，在德国一研究院做 Research Assistant。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2016 年冬：&lt;/span&gt;&lt;span&gt;利用第一份实习找到第二份德国 IBM 人工智能小组（Watson Analytics）的实习机会。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2017 年春夏：&lt;/span&gt;&lt;span&gt;IBM 全职实习 5 个月，那时才知道计算机语言学与人工智能息息相关。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;2017 年秋：&lt;/span&gt;&lt;span&gt;密集地在家自学了几个月计算机科学的科目，包括算法入门、数据分析、概率论、程序设计，同时继续提高编程能力；开始投简历练面试找工作。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2017 年冬：&lt;/span&gt;&lt;span&gt;找到人生第一份正式工作，全球 500 强科技企业，人工智能行业，薪资超过德国 CS 硕士平均起薪。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2018 年初：&lt;/span&gt;&lt;span&gt;开始工作，来到硅谷参加入职培训。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;span&gt;这样列出来看起来似乎既光鲜又井井有条，但大概只有我才知道自己经历过多少不安、焦虑、抓狂和混乱。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这也是我从去年起就一直积极写文科生转行学编程找实习系列文章的初心：我懂得这条路的艰辛不易，也摸索出了一点微薄的经验与方法，更知道达成每个小目标的欣喜，因此希望能以自己的真实经历启发、帮助到更多处境类似的读者。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;让我尤有成就感的是，我已经收到过几位读者的私下赞赏和留言，说 TA 在我经历的鼓舞下也勇敢地踏出了转专业 / 转行的第一步。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果你也怀有转行到 IT 行业技术工程岗的想法，或想多了解在德国（欧洲）找工作的技巧，或只单纯想参考我的转行与自学编程经历，都能从这篇文章中找到你需要的内容！你也可以关注我的公众号，我会常常分享原创的工作与技术文章。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;预告：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;本文会写到以下话题：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;为什么转行？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转到哪儿去？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何转行？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怎么跨行找工作？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span&gt;为什么转行？转到哪儿去？&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我认为在做任何重要决定之前，比起搞清楚该怎么做（HOW），追问自己&lt;strong&gt;&lt;span&gt;为什么&lt;/span&gt;&lt;/strong&gt;要做出这个选择要重要得多（WHY）。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;方向大于努力。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;大多数人终究也不懂这个道理，于是终日一边忙碌一边迷茫。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当面对职业规划的重要决策时，你做决定的依据是什么？&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;钱&lt;/span&gt;&lt;/strong&gt;更多？更&lt;strong&gt;&lt;span&gt;喜欢&lt;/span&gt;&lt;/strong&gt;？更&lt;strong&gt;&lt;span&gt;擅长&lt;/span&gt;&lt;/strong&gt;？&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;任何一条理由都没问题，但为了增加你转行的成功率和优化新工作的发展前景，应该尽量寻找这三条职场优势的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;公共交集&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;一开始，谁也不能一击命中&lt;strong&gt;&lt;span&gt;既钱多又喜欢还擅长&lt;/span&gt;&lt;/strong&gt;的工作，但这并不妨碍你先从已经&lt;/span&gt;&lt;strong&gt;&lt;span&gt;同时具备了两个职场优势的选项&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;出发，并&lt;/span&gt;&lt;strong&gt;&lt;span&gt;把三大优势的交集作为自己职业规划的终极目标&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;除此之外，每个人或许还有些个人限制条件，比如地理位置和语言水平。再比如，对于留学生或有移民需求的人来说，如果想留在国外工作，那就应该把&lt;strong&gt;解决签证&lt;/strong&gt;作为最重要的职业先决目标。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如何利用以上理论来分析自己适不适合转行、该转到哪儿去呢？我就拿自己来举例分析分析——&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;27&quot;&gt;
&lt;p&gt;&lt;span&gt;首先，我决定暂时留在德国或其他欧洲国家工作，这就存在语言问题。两年前刚到德国时我完全不会德语，一两年时间业余学德语也达不到可以用来流利工作的程度，因此我最好能找到可以英语工作的公司。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;另一方面，钱对于我也很重要。由于过去两三年都是自己负担生活费，常常连买学期火车票都要心疼一下，所以很迫切地需要 financial stability。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;能赚一点钱、可以讲英语还机会多的职业选择，在德国基本仅限于 IT 技术行业了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;作为文科生，对于 IT 肯定不具备“擅长”这个职业优势。但我有别的长处，我不讨厌理科和代码，有点喜欢和数据打交道；后来自学编程渐入佳境后，也喜欢上了用程序解决问题的思维方式。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;综上，对我来说，转行到 IT 行业就是我目前的职业规划最优解，接下来只要方向明确地补齐技能树就应该能够转轨到理想行业了。我找到 CS 与语言学的交叉学科“&lt;strong&gt;计算机语言学&lt;/strong&gt;（Computational Linguistics）”，在翻了很多维基百科、Quora 和知乎帖子后，决定先从自学 Python 开始。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当然，这过程绝非顺风顺水。后来在对自然语言处理（NLP）有了更实际的认知后，我才意识到在这个领域，计算机科学素养比语言学知识储备更重要。但从本质上来说，这只是&lt;strong&gt;难度与积累时长&lt;/strong&gt;的问题，&lt;strong&gt;而&lt;/strong&gt;&lt;strong&gt;非选错了努力方向&lt;/strong&gt;。因此现在回望，我两年前的决策依然是有效、明智的。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 class=&quot;&quot;&gt;&lt;br /&gt;&lt;/h4&gt;

&lt;h4 class=&quot;&quot;&gt;&lt;span&gt;如何转行？&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;培训学校铺天盖地的“三个月从零到精通 Python，成为大数据工程师”速成广告，朋友圈和知乎最流行刷的也是“三个月转行数据分析”、“五个月成为前端工程师”。此时我写下这样一行“我用两年时间跨界转行”确显得非常不合群不鸡汤了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但我真心认为，&lt;strong&gt;&lt;span&gt;用两年时间跨度真正从零掌握一门能够赚钱养家的专业技能，绝不算漫长&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;注意这里的重要定语：&lt;strong&gt;&lt;span&gt;能够赚钱养家&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;技能分很多种，并非所有都能在两年学习积累后成功变现。那些非常依赖天赋，跟年龄关系很大，特别需要运气或社会资源的行业，外行人进入的困难更大。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;这里的两年指的是保留原本工作或学生身份的两年，比如我在自学编程做实习找工作的两年间也同时在正常地上课考试写论文。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我并不鼓励脱产全职学习某项技能长达两年，因为大部分人并不能承受那种心理压力。而大跨度转行（比如纯文科转纯理工）积累阶段的最大障碍其实来自&lt;strong&gt;心魔&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;“我会不会一开始就选错了？”、“别人看起来比我更有天赋，有更多资源优势，我真的能行吗？”……长期被恐惧和焦虑驱动的滋味可不好受；这不仅让人难过，还会&lt;span&gt;&lt;strong&gt;让大脑处于“资源稀缺”的思维状态&lt;/strong&gt;&lt;/span&gt;（参考《稀缺》&amp;amp;《贫穷的本质》），容易做出只顾及眼前好处却牺牲长远利益的短视决定。比如年轻时为了赚小钱省小钱而花费宝贵时间与注意力，这类短视决定大多数人都做过，包括我。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;所以对于一开始还没在新行业建立起自信的人来说，保留主业所带来的安全感（safety net）是保证我们大脑尽可能作出符合人生长远利益决策的前提。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;span&gt;但是，长达两年的下班后转行积累方案始终存在一个致命问题：大多数人都走不到能看见光明的节点，在中途的某个困难上就跌倒在舒适区（comfort zone）的蜜糖罐儿里起不来了——任何需要长期执行的方案都存在这个问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;那该如何解决呢？唯有&lt;strong&gt;&lt;span&gt;有效计划&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;先入门再积极寻找实践机会。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;想进入一个新领域，在互联网资源极度丰富的今天，&lt;/span&gt;&lt;span&gt;入门其实不难&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;很多人想要转行当程序员工程师，而现在网上自学编程的课程非常多，找个权威口碑好的课程（比如 MIT600）配一本权威经典的入门书（比如我推荐多次的《Think Python 2》），认认真真在半年之内学完读完做完习题这就算入门了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;理论知识上入门之后，就需要寻找可以练手实践的机会，比如实习和个人项目，这些实践机会最好&lt;strong&gt;&lt;span&gt;既能让你获得成长又可以留下方便展示的作品&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;初学者对新领域的理解不论是广度还是深度上都必然存在误区与盲区，这些误区盲区很可能不能仅靠小白独自一人摸索来破除。与我以前在《文科女进德国 IBM 实习做程序媛，我是怎么办到的》写到的道理一致，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;你必须在与现实世界的交流反馈中才能快速成长通关&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，想太多做太少的要么成了哲学家要么得了焦虑症。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在实践过程中反思并调整计划，有意为自己寻找职业发展路上的 mentor（同行业的前辈、校友、教授等），在学习和实践中一点点增长技能点。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;按这样的路径，两年时间足以让一个普通年轻人转换职场赛道。并且，在产业发展还未完全成熟的国家地区，比如国内，这个转行过程肯定会更快。&lt;/span&gt;&lt;/p&gt;



&lt;h4 class=&quot;&quot;&gt;&lt;span&gt;怎么跨行找工作？&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;不论是否跨行，找实习找工作的过程中，最重要的决胜点在于&lt;strong&gt;&lt;span&gt;心态&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt; &lt;p&gt;&lt;span&gt;尤其对于正在找人生第一份正式工作的学生来说，校园到职场的转变对于任何人来说都是不小的挑战。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我也经历过很久这个“知道该怎么做却毫无动力去执行 - 不行动带来的焦虑越积越多 - 焦虑状态下要么动弹不得要么做啥错啥 - 最终崩溃大哭”的消极循环，所以我很理解排斥走出象牙塔，拖延开始找工作的学生心态。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我收到工作 offer 后的第一反应是“终于不用找工作了”，因为那实在是不令人愉快的体验。我到现在也不喜欢找工作这类需要等待别人审判贴再标签的事，你也没必要喜欢啊，但这不影响我们参与 Job Hunting 游戏。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;可以把这看作培养职业素养的第一步：&lt;strong&gt;把个人感情与工作任务分开&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;没多少人喜欢找工作这件事，你又怎知面对你的 HR 和面试官不讨厌他们自己的工作，但这不妨碍每个人扮演好自己的职场角色，做好成人世界的游戏。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;毕竟，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;对立心态在职场对自己毫无好处&lt;/strong&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;解决了心态问题，接下来为找到工作行动起来就是自然而然的事了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;这里限于篇幅就不赘述找工作细节了，具体求职攻略我会以后单独更新。但有一点关键&lt;/span&gt;&lt;strong&gt;&lt;span&gt;「元」方法&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我一定要写一写。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;找工作是一件比找对象还讲究&lt;strong&gt;&lt;span&gt;「合适」&lt;/span&gt;&lt;/strong&gt;的事。每当看到一份招聘启事（JD）时，脑子里应该立刻放大并高频闪烁&lt;strong&gt;&lt;span&gt;「match（匹配）」&lt;/span&gt;&lt;/strong&gt;一词。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;HR 并不关心你的人生经历或你的履历是否高大上，TA 只关心你是不是这个职位的「match」，&lt;/span&gt;&lt;span&gt;你是否在简历和面试中清楚有力地表达了自己具备这个职位所需的技能或拥有学习这项技能的潜能，并给出了具体经历来证明你说的论点&lt;/span&gt;&lt;span&gt;。这一点无比重要，不论什么水准的求职者都可能犯这个错误，即把求职的焦点从「match」上移开。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;对于跨界转行的求职者来说，这一点只会更重要。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;  关于简历和面试，我想说的还有很多很多，&lt;strong&gt;接下来会专门针对这个话题写篇求职攻略文&lt;/strong&gt;，欢迎关注 :)&lt;/span&gt;&lt;/p&gt;



&lt;h4 class=&quot;&quot;&gt;&lt;span&gt;尾声&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;通过自己的力量转行成功这件事对我来说有什么意义呢？我认真想过这个问题。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;除了更好的职业出路外，最大的意义或许是看到这个世界对我的认可进而更加了解自己了吧。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从两年前决定转行的那一刻起，我便患上了&lt;strong&gt;「冒充者综合症 (Imposter Syndrome)」&lt;/strong&gt;。不论参加实习还是在网上写技术文，我总觉得自己在假装一个更有天赋、更有能力、更优游自如的人，而别人随时都会戳穿这层面具。实际上，直到长途飞机落地美国我走过了美国海关那一刻的前一秒，我都在怀疑这一切的真实性，还认真担心过自己签证出意外最终被海关检查员以奇怪的理由遣送的场景。所以当我终于在硅谷住下，在入职的第一天拿到属于自己的 badge 时，我突然如梦方醒，“哇，这一切竟然都是真的！！”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;用两年时间自我积累转行成功，让我觉察到我真的拥有改变自己人生轨迹的力量，也让我有依据地相信一个人拥有只要愿意学习就能获得成长的巨大潜能。而这一切都让我进一步笃信继续写文章的意义，&lt;strong&gt;也许其中有一篇就改变了宇宙中另外一个人的人生轨迹了呢。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


</description>
<pubDate>Fri, 19 Jan 2018 13:08:28 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/9NzvujlNB7</dc:identifier>
</item>
</channel>
</rss>