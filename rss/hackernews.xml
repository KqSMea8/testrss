<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Facebook monthly visits down 5% in April</title>
<link>http://nwn.blogs.com/nwn/2018/05/facebook-similarweb-cambridge-analytica.html</link>
<guid isPermaLink="true" >http://nwn.blogs.com/nwn/2018/05/facebook-similarweb-cambridge-analytica.html</guid>
<description>&lt;div readability=&quot;43.012761020882&quot;&gt;
&lt;p&gt;&lt;img alt=&quot;Facebook Similar Web Cambridge Analytica&quot; class=&quot;asset asset-image at-xid-6a00d8341bf74053ef0224e03888c7200d img-responsive&quot; src=&quot;http://nwn.blogs.com/.a/6a00d8341bf74053ef0224e03888c7200d-500wi&quot; title=&quot;Facebook Similar Web Cambridge Analytica&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I was curious how much Facebook usage would suffer &lt;a href=&quot;http://nwn.blogs.com/nwn/2018/03/linden-lab-ginsu-yoon-second-life-facebook-zuckerberg.html&quot;&gt;since the Cambridge Analytica scandal broke in March&lt;/a&gt;, and here's a pretty good answer: &lt;a href=&quot;https://www.similarweb.com/website/facebook.com#overview&quot;&gt;According to SimilarWeb&lt;/a&gt;, in April, total Facebook visits (both to Facebook.com and through its mobile apps) fell from 24 billion in March, down to 22.77 billion in April -- &lt;em&gt;a drop of 1.3 billion visits,&lt;/em&gt; and down 5.15% of the total.&lt;/p&gt;
&lt;p&gt;Obviously this drop isn't completely attributable to the CA scandal. Facebook also saw a significant drop in February, compared to the last three months (see chart below). But that February dip is likely due in great part to &lt;a href=&quot;https://www.usatoday.com/story/tech/news/2018/03/20/timeline-facebook-2018/441449002/&quot;&gt;the changes the company made to its timeline feed in January&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;How much does a drop of 1.3 billion monthly visits mean in terms of lost revenue, or users? We probably won't know until Facebook's next quarterly corporate report, but here's a very rough casual estimate:&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;47.054794520548&quot;&gt;
&lt;p&gt;Assuming the average Facebook user visits the social network once a day, that would suggest an average of about &lt;strong&gt;43 million less users&lt;/strong&gt; during that month. In recent months, &lt;a href=&quot;https://www.cnbc.com/2017/11/02/facebooks-revenue-topped-5-per-user-for-the-first-time.html&quot;&gt;Facebook makes about $5 per user, per month&lt;/a&gt; -- i.e. some $215 million in potential lost revenue. (Again, very primitive estimates here -- or what a VC friend likes to call &quot;monkey math&quot;.)&lt;/p&gt;
&lt;p&gt;My main curiosity moving forward is if this loss continues, or usage recovers. From past experience, social media scandals always involve millions vowing to Quit Facebook Forever (through announcements made on, well, Facebook) -- and then in successive months, most of those millions begrudgingly return. But this time, we seem to be in uniquely uncharted territory.  &lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 09 May 2018 21:03:03 +0000</pubDate>
<dc:creator>Kroeler</dc:creator>
<og:title>Facebook Loses 1.3 Billion Monthly Visits in Wake of Cambridge Analytica Scandal, According to SimilarWeb - Down 5% of Average</og:title>
<og:type>blog</og:type>
<og:url>http://nwn.blogs.com/nwn/2018/05/facebook-similarweb-cambridge-analytica.html</og:url>
<og:description>I was curious how much Facebook usage would suffer since the Cambridge Analytica scandal broke in March, and here's a pretty good answer: According to SimilarWeb, in April, total Facebook visits (both to Facebook.com and through its mobile apps) fell...</og:description>
<og:image>http://nwn.blogs.com/.a/6a00d8341bf74053ef0224e03888c7200d-600wi</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://nwn.blogs.com/nwn/2018/05/facebook-similarweb-cambridge-analytica.html</dc:identifier>
</item>
<item>
<title>Beautiful Racket</title>
<link>https://www.beautifulracket.com/</link>
<guid isPermaLink="true" >https://www.beautifulracket.com/</guid>
<description>&lt;p&gt;&lt;/p&gt;
&lt;p id=&quot;a_jftiS&quot;&gt;This sum­mer, the Racket core devel­op­ers and I are team­ing up for &lt;a href=&quot;https://summer-school.racket-lang.org/2018/&quot;&gt;Racket School 2018&lt;/a&gt;: a fan­tas­tic five-day inten­sive class about cre­at­ing lan­guages with Racket. It’s like &lt;em&gt;Beau­ti­ful Racket&lt;/em&gt;, but with food, beer, and dozens of like-minded nerds. July 9–13 at the Uni­ver­sity of Utah in Salt Lake City. Cost is $500. &lt;a href=&quot;https://summer-school.racket-lang.org/2018/#application&quot;&gt;Apply here.&lt;/a&gt; [Update: I’m told there are only a hand­ful of spaces left.] I hope you can join us!  — MB&lt;/p&gt;
</description>
<pubDate>Wed, 09 May 2018 20:09:45 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://beautifulracket.com/</dc:identifier>
</item>
<item>
<title>California Votes to Require Rooftop Solar Power on New Homes</title>
<link>https://www.bloomberg.com/news/articles/2018-05-09/california-votes-to-require-rooftop-solar-power-on-new-homes</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-05-09/california-votes-to-require-rooftop-solar-power-on-new-homes</guid>
<description>&lt;p&gt;California just sent the clearest signal yet that rooftop power is moving beyond a niche market and becoming the norm.&lt;/p&gt;


&lt;p&gt;On Wednesday, the Golden State became the first in the U.S. to require solar panels on almost all new homes. Most new units built after Jan. 1, 2020, will be required to include solar systems as part of the standards adopted by the &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/9885933Z:US&quot; title=&quot;Company Overview&quot;&gt;California Energy Commission&lt;/a&gt;. While that’s a boost for the solar industry, critics warned that it will also drive up the cost of buying a house by almost $10,000. Solar shares surged on the decision. Homebuilders fell.&lt;/p&gt;


&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;The move underscores how rooftop solar, once a luxury reserved for wealthy, green-leaning homeowners, is becoming a mainstream energy source, with California -- the nation’s largest solar market -- paving the way. The state has long been at the vanguard of progressive energy policies, from setting energy-efficiency standards for appliances to instituting an economy-wide program to curb greenhouse gases. The housing mandate is part of Governor Jerry Brown’s effort to slash carbon emissions by 40 percent by 2030, and offers up a playbook for other states to follow.&lt;/p&gt;



&lt;p&gt;“This is massive,” said Morten Lund, chair of an energy storage initiative at law firm Stoel Rives LLP. “Essentially, this could turn residential solar into an appliance, like a water heater. There has always been a certain inevitability about that outcome, but this is moving faster than most of us thought likely.”&lt;/p&gt;


&lt;p&gt;&lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/RUN:US&quot; title=&quot;Price Chart&quot; target=&quot;_blank&quot;&gt;Sunrun Inc.&lt;/a&gt;, the largest U.S. residential-solar installer, gained as much as 6.4 percent before closing at $9.83 in New York on Wednesday. &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/TSLA:US&quot; title=&quot;Price Chart&quot; target=&quot;_blank&quot;&gt;Tesla Inc.&lt;/a&gt; rose as much as 1.7 percent and SunPower Corp. climbed almost 7 percent. KB Home, which has significant exposure to the California market, fell as much as 5.3 percent.&lt;/p&gt;
&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-327617798&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iEdtKpJvGul0/v2/60x-1.png&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iEdtKpJvGul0/v2/-1x-1.png&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;chart&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The U.S. had 10.4 gigawatts of residential solar power at the end of last year, up more than sixfold from five years earlier. The industry &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-06-01/u-s-residential-solar-declining-as-industry-faces-retooling&quot; title=&quot;U.S. Residential Solar Slides for the First Time in 16 Years (1)&quot; target=&quot;_blank&quot;&gt;started slowing&lt;/a&gt; in 2017 amid policy changes and efforts by some companies to shift their strategies.&lt;/p&gt;
&lt;p&gt;“Adoption of these standards represents a quantum leap in statewide building standards,” Bob Raymer, senior engineer of the California Building Industry Association, said during the meeting before the vote. &quot;You can bet the other 49 states will be watching closely what happens.”&lt;/p&gt;
&lt;p&gt;Tesla’s Francesca Wahl, senior associate of business development and policy, was among the company representatives to back the mandate at the meeting Wednesday, and expressed support for provisions that will also promote wider use of energy storage systems.&lt;/p&gt;

&lt;p&gt;California’s solar policy will exacerbate another critical issue in the most populous state, where high housing costs are seen as a drag on the economy that also contributes to rising social tensions.&lt;/p&gt;
&lt;p&gt;“With home prices having risen as much as they have, I think home buyers would find it a little distasteful to be forced to pay more for solar systems that they may not want or feel like they can’t afford,” said Brent Anderson, a spokesman for homebuilder Meritage Homes Corp. “Even though, in the long term, it’s the right answer.”&lt;/p&gt;
&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-327628077&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iuGEbDEkRpJg/v2/60x-1.png&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iuGEbDEkRpJg/v2/-1x-1.png&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;chart&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;California’s economy added &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2018-04-12/the-american-dream-is-now-a-backyard-rental&quot; title=&quot;Housing Crunch Downsizes the American Dream to a Backyard Rental&quot; target=&quot;_blank&quot;&gt;2.3 million jobs&lt;/a&gt; over the past five years. Over the same period, the state issued permits for fewer than 480,000 new residential units, or about one home for every five additional workers.&lt;/p&gt;
&lt;p&gt;The new policy applies to single-family houses and multifamily units that are three stories or less, and there are some exceptions for homes that are too shady. Homebuilders will probably try to pass on the costs to customers, Carl Reichardt, a San Francisco-based analyst for BTIG LLC, said in a phone interview before the vote.&lt;/p&gt;
&lt;p&gt;Big homebuilders like KB Home and Meritage have an advantage because they’ve been offering solar homes for years. Smaller builders will have a harder time managing the new requirements, he said.&lt;/p&gt;
&lt;p&gt;Installing a solar system and complying with other energy-efficiency measures required will add about $9,500 to the cost of a new home, according the the California Energy Commission. That would be offset by about $19,000 in expected energy and maintenance savings over 30 years, the commission estimates.&lt;/p&gt;
&lt;h3&gt;‘Admirable But Misguided’&lt;/h3&gt;
&lt;p&gt;Bloomberg New Energy Finance analyst Colleen Regan described California’s decision as “admirable but misguided.” The standard isn’t the best way to curb the state’s greenhouse-gas emissions and could &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2018-05-09/think-solar-is-upending-california-s-power-grid-now-just-wait&quot; title=&quot;Think Solar Is Upending California’s Power Grid Now? Just Wait&quot; target=&quot;_blank&quot;&gt;exacerbate&lt;/a&gt; the steep ramp-up in solar power production that California’s grid operator is already grappling with at mid-day.&lt;/p&gt;
&lt;p&gt;“It’s also a policy that very clearly is picking winners, and California would be better off focusing its efforts on the real source of the problem -- greenhouse gases -- rather than favoring one zero-emissions technology over others,” Regan said.&lt;/p&gt;
&lt;p&gt;The energy commission meanwhile said the standards would cut greenhouse-gas emissions tied to home energy use while saving residents money over time. The California Building Standards Commission will need to adopt the rules as a formality.&lt;/p&gt;
&lt;p&gt;Lynn Jurich, Sunrun’s chief executive officer, praised the decision, describing it as “a vote of confidence that these assets create value for the whole energy system.”&lt;/p&gt;
&lt;p&gt;Jurich said in an interview that the standard is an opportunity for Sunrun, which offers solar leasing. With no-money-down solar service agreements, there aren’t additional costs to a builder, she said. “‘We are well-positioned to serve that market.”&lt;/p&gt;
&lt;h3&gt;Solar Demand&lt;/h3&gt;
&lt;p&gt;The state adds about &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;http://www.hcd.ca.gov/policy-research/plans-reports/docs/California%E2%80%99s-Housing-Future-Full-Public-Draft.pdf&quot; title=&quot;California Housing Data&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;80,000 new homes&lt;/a&gt; a year, and the California Solar &amp;amp; Storage Association estimates that about 15,000 include solar power. The Energy Commission says that the average home system uses 2.5 kilowatts to 4 kilowatts of panels, so the additional 65,000 new systems would add as much as 260 megawatts of annual demand in the state -- about the size of one large solar farm.&lt;/p&gt;
&lt;p&gt;SunPower expects the rule will &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/terminal/P8FHXJ6JTSEB&quot; title=&quot;California Seen Bolstering Rooftop Solar Demand by 50 Percent&quot; class=&quot;terminal-news-story&quot; target=&quot;_blank&quot;&gt;increase&lt;/a&gt; demand for residential solar in the state by about 50 percent. The San Jose, California-based company makes panels and develops solar systems ranging from rooftops to large, utility-scale power plants.&lt;/p&gt;
&lt;p&gt;It’s unclear how much major solar installers like Sunrun and &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/VSLR:US&quot; title=&quot;Price Chart&quot; target=&quot;_blank&quot;&gt;Vivint Solar Inc.&lt;/a&gt; will benefit, said Joe Osha, a San Francisco-based analyst at JMP Securities. They typically target existing homeowners rather than companies building new homes.&lt;/p&gt;
&lt;p&gt;“Your initial reaction is: ‘Oh, that’s great for the solar company,’” he said. “But their business is about acquiring individual customers. If you’re working with homebuilders, it’s a completely different thing.”&lt;/p&gt;
&lt;p&gt;Some of the world’s largest solar-equipment manufacturers in Asia stand to gain in the long-run. President Donald Trump slapped tariffs on solar equipment imported into the U.S. in January, and that could mute some short-term gains.&lt;/p&gt;
&lt;p&gt;But those tariffs phase out after four years, and “if you’re being forced to install something that you may not want, you’re going to go the cheapest route,” said Hugh Bromley, a Bloomberg New Energy Finance analyst. “And that’s likely to be equipment imported from Asia.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;— With assistance by Chris Martin, Noah Buhayar, and Patrick Clark&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 09 May 2018 19:01:49 +0000</pubDate>
<dc:creator>JumpCrisscross</dc:creator>
<og:description>California just sent the clearest signal yet that rooftop power is moving beyond a niche market and becoming the norm.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/izRkRQkJNOdY/v1/1200x810.jpg</og:image>
<og:title>California Just Became First State to Order Solar on New Homes</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-05-09/california-votes-to-require-rooftop-solar-power-on-new-homes</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-05-09/california-votes-to-require-rooftop-solar-power-on-new-homes</dc:identifier>
</item>
<item>
<title>Glom – Restructured Data for Python</title>
<link>https://sedimental.org/glom_restructured_data.html</link>
<guid isPermaLink="true" >https://sedimental.org/glom_restructured_data.html</guid>
<description>&lt;header id=&quot;entry-header&quot;&gt;

&lt;/header&gt;&lt;p&gt;&lt;em&gt;This post introduces &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://github.com/mahmoud/glom&quot;&gt;&lt;strong&gt;glom&lt;/strong&gt;&lt;/a&gt;, Python's missing operator for nested objects and data.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you're an easy sell, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://glom.readthedocs.io/en/latest/api.html&quot;&gt;full API docs&lt;/a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://glom.readthedocs.io/en/latest/tutorial.html&quot;&gt;tutorial&lt;/a&gt; are already available at &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://glom.readthedocs.io/&quot;&gt;glom.readthedocs.io&lt;/a&gt;.&lt;br/&gt;Harder sells, this 5-minute post is for you.&lt;br/&gt;Really hard sells, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/mhashemi/status/994111054702522369&quot;&gt;meet me at PyCon&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;30%&quot; align=&quot;right&quot; src=&quot;https://sedimental.org/uploads/illo/comet.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;In the Python world, there's a saying: &lt;em&gt;&quot;Flat is better than nested.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Maybe times have changed or maybe that adage just applies more to code than data. In spite of the warning, nested data continues to grow, from document stores to RPC systems to structured logs to plain ol' JSON web services.&lt;/p&gt;
&lt;p&gt;After all, if &quot;flat&quot; was the be-all-end-all, why would namespaces be &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Zen_of_Python&quot;&gt;one honking great idea&lt;/a&gt;? Nobody likes artificial flatness, nobody wants to call a function with 40 arguments.&lt;/p&gt;
&lt;p&gt;Nested data is tricky though. Reaching into deeply structured data can get you some ugly errors. Consider this simple line:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That single line can result in at least four different exceptions, each less helpful than the last:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;ne&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TargetType'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'b'&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NoneType'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getitem__'&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Clearly, we need our tools to catch up to our nested data.&lt;/p&gt;
&lt;p&gt;Enter &lt;strong&gt;glom&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://github.com/mahmoud/glom&quot;&gt;glom&lt;/a&gt; is a new approach to working with data in Python, featuring:&lt;/p&gt;
&lt;p&gt;A tool as simple and powerful as glom &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://glom.readthedocs.io/en/latest/by_analogy.html&quot;&gt;attracts many comparisons&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While similarities exist, and are often intentional, glom differs from other offerings in a few ways:&lt;/p&gt;
&lt;h3 id=&quot;going-beyond-access&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;https://sedimental.org/glom_restructured_data.html#going-beyond-access&quot;&gt;Going Beyond Access&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Many nested data tools simply perform deep gets and searches, stopping short after solving the problem posed above. Realizing that access almost always precedes assignment, glom takes the paradigm further, enabling total declarative transformation of the data.&lt;/p&gt;
&lt;p&gt;By way of introduction, let's start off with space-age access, the classic &quot;deep-get&quot;:&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;30%&quot; align=&quot;right&quot; src=&quot;https://sedimental.org/uploads/illo/mjc/jupiter_med.png&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glom&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'galaxy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'planet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jupiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'galaxy.system.planet'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# output = 'jupiter'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some quick terminology:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;target&lt;/em&gt; is our data, be it dict, list, or any other object&lt;/li&gt;
&lt;li&gt;&lt;em&gt;spec&lt;/em&gt; is what we want &lt;em&gt;output&lt;/em&gt; to be&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;With &lt;code&gt;output = glom(target, spec)&lt;/code&gt; committed to memory, we're ready for some new requirements.&lt;/p&gt;
&lt;p&gt;Our astronomers want to focus in on the Solar system, and represent planets as a list. Let's restructure the data to make a list of names:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'earth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jupiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]}}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system.planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ['earth', 'jupiter']&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And let's say we want to capture a parallel list of moon counts with the names as well:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;19&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'earth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                                 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jupiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;69&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]}}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'names'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system.planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system.planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# {'names': ['earth', 'jupiter'], 'moons': [1, 69]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can react to changing data requirements as fast as the data itself can change, naturally restructuring our results, despite the input's nested nature. Like a list comprehension, but for nested data, our code mirrors our output.&lt;/p&gt;
&lt;p&gt;And we're just getting started.&lt;/p&gt;
&lt;h3 id=&quot;true-python-native&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;https://sedimental.org/glom_restructured_data.html#true-python-native&quot;&gt;True Python-Native&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Most other implementations are limited to a particular data format or pure model, be it &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://jmespath.org/&quot;&gt;jmespath&lt;/a&gt; or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/XPath&quot;&gt;XPath&lt;/a&gt;/&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/XSLT&quot;&gt;XSLT&lt;/a&gt;. glom makes no such sacrifices of practicality, harnessing the full power of Python itself.&lt;/p&gt;
&lt;p&gt;Going back to our example, let's say we wanted to get an aggregate moon count:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'earth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                                 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jupiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;69&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]}}&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'moon_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system.planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'moons'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# {'moon_count': 70}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With glom, you have full access to Python at any given moment. Pass values to functions, whether built-in, imported, or defined inline with &lt;code&gt;lambda&lt;/code&gt;. But &lt;code&gt;glom&lt;/code&gt; doesn't stop there.&lt;/p&gt;
&lt;p&gt;Now we get to one of my favorite features by far. Leaning into Python's power, we unlock the following syntax:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glom&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'planets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ['jupiter', 69]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What just happened?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;T&lt;/code&gt; stands for &lt;em&gt;target&lt;/em&gt;, and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://glom.readthedocs.io/en/latest/api.html#object-oriented-access-and-method-calls-with-t&quot;&gt;it acts as your data's stunt double&lt;/a&gt;. &lt;code&gt;T&lt;/code&gt; records every key you get, every attribute you access, every index you index, and every method you call. And out comes a spec that's usable like any other.&lt;/p&gt;
&lt;p&gt;No more worrying if an attribute is &lt;code&gt;None&lt;/code&gt; or a key isn't set. Take that leap with &lt;code&gt;T&lt;/code&gt;. &lt;code&gt;T&lt;/code&gt; never raises an exception, so worst case you get a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://glom.readthedocs.io/en/latest/api.html#exceptions&quot;&gt;meaningful error message&lt;/a&gt; when you run &lt;code&gt;glom()&lt;/code&gt; on it.&lt;/p&gt;
&lt;p&gt;And if you're ok with the data not being there, just set a default:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;glom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'comets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Null_coalescing_operator&quot;&gt;null-coalescing operators&lt;/a&gt; for Python!&lt;/p&gt;
&lt;p&gt;But so much more. This kind of dynamism is what made me fall in love with Python. No other language could do it quite like this.&lt;/p&gt;
&lt;p&gt;That's why glom will always be a Python library first and a CLI second. Oh, didn't I mention there was a CLI?&lt;/p&gt;
&lt;h3 id=&quot;library-first-then-cli&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;https://sedimental.org/glom_restructured_data.html#library-first-then-cli&quot;&gt;Library first, then CLI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tools like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; provide a lot of value on the console, but leave a dubious path forward for further integration. glom's full-featured command-line interface is only a stepping stone to using it more extensively inside application logic.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install glom
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl -s https://api.github.com/repos/mahmoud/glom/events &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  | glom &lt;span class=&quot;s1&quot;&gt;'[{&quot;type&quot;: &quot;type&quot;, &quot;date&quot;: &quot;created_at&quot;, &quot;user&quot;: &quot;actor.login&quot;}]'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which gets us:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;21&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2018-05-09T03:39:44Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;WatchEvent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;asapzacy&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2018-05-08T22:51:46Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;WatchEvent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CameronCairns&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2018-05-08T03:27:27Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PushEvent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mahmoud&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2018-05-08T03:27:27Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PullRequestEvent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mahmoud&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Piping hot JSON into &lt;code&gt;glom&lt;/code&gt; with a cool Python literal spec, with pretty-printed JSON out. A great way to process and filter API calls, and explore some data. Something genuinely enjoyable, because you know you won't be stuck in this pipe dream.&lt;/p&gt;
&lt;p&gt;Everything on the command line ports directly into production-grade Python, complete with better error handling and limitless integration possibilities.&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;40%&quot; align=&quot;right&quot; src=&quot;https://sedimental.org/uploads/illo/comet_multi.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Never before glom have I put a piece of code into production so quickly.&lt;/p&gt;
&lt;p&gt;Within two weeks of the first commit, glom has paid its weight in gold, with glom specs replacing &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http://www.django-rest-framework.org/&quot;&gt;Django Rest Framework&lt;/a&gt; code 2x to 5x their size, making the codebase faster and more readable. Meanwhile, glom's core is so tight that we're on pace to have more docs and tests than code very soon.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;glom()&lt;/code&gt; function is stable, along with the rest of the API, unless otherwise specified.&lt;/p&gt;
&lt;p&gt;A lot of other features are baking or in the works. For now, we'll be focusing on the following growth areas:&lt;/p&gt;
&lt;p&gt;We'll be talking about all of this and more &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/mhashemi/status/994111054702522369&quot;&gt;at PyCon&lt;/a&gt;, so swing by if you can. In either case, I hope you'll try glom out and let us know how it goes!&lt;/p&gt;
&lt;hr/&gt;</description>
<pubDate>Wed, 09 May 2018 18:08:09 +0000</pubDate>
<dc:creator>mhashemi</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://sedimental.org/glom_restructured_data.html</dc:identifier>
</item>
<item>
<title>Cloud Memorystore: A fully managed in-memory data store service for Redis</title>
<link>https://cloudplatform.googleblog.com/2018/05/Introducing-Cloud-Memorystore-A-fully-managed-in-memory-data-store-service-for-Redis.html</link>
<guid isPermaLink="true" >https://cloudplatform.googleblog.com/2018/05/Introducing-Cloud-Memorystore-A-fully-managed-in-memory-data-store-service-for-Redis.html</guid>
<description></description>
<pubDate>Wed, 09 May 2018 16:44:16 +0000</pubDate>
<dc:creator>manigandham</dc:creator>
<og:title>Introducing Cloud Memorystore: A fully managed in-memory data store service for Redis</og:title>
<og:url>https://cloudplatform.googleblog.com/2018/05/Introducing-Cloud-Memorystore-A-fully-managed-in-memory-data-store-service-for-Redis.html</og:url>
<og:type>article</og:type>
<og:image>https://4.bp.blogspot.com/-nOeDIpEj-r0/WvIx-IKGByI/AAAAAAAAFl8/rU9Sf9M7DOMjUYOBvpchwDass0dl7BtcgCLcBGAs/s640/google-cloud-platform-memorystore.jpg</og:image>
<og:description>By Gopal Ashok, Product Manager, Google Cloud Platform At Redisconf 2018 in San Francisco last month, we announced the public beta of Clou...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cloudplatform.googleblog.com/2018/05/Introducing-Cloud-Memorystore-A-fully-managed-in-memory-data-store-service-for-Redis.html</dc:identifier>
</item>
<item>
<title>A Year Using Matrix and Riot</title>
<link>https://itscode.red/posts/1-year-using-matrix/</link>
<guid isPermaLink="true" >https://itscode.red/posts/1-year-using-matrix/</guid>
<description>&lt;span class=&quot;post-date&quot;&gt;Luke Picciau - 2018-05-09&lt;/span&gt;
&lt;p&gt;After using Matrix + Riot for a little over a year I wanted to share my opinions on the current progress and state.&lt;/p&gt;
&lt;p&gt;If you haven’t used Matrix before, It’s a newish instant messaging protocol which supports many features you would expect from an IM platform today and it is also federated allowing anyone to set up their own Matrix “homeserver” and message anyone else using Matrix.&lt;/p&gt;
&lt;p&gt;I’ll just explain some of the common terms relating to Matrix:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://matrix.org/blog/home/&quot;&gt;Matrix&lt;/a&gt; itself is the protocol and specification which defines how server to server and server to client communication works.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/matrix-org/synapse&quot;&gt;Synapse&lt;/a&gt; is the current implementation of the Matrix server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/matrix-org/dendrite&quot;&gt;Dendrite&lt;/a&gt; is a work in progress rewrite of Synapse aiming for higher performance.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://about.riot.im/&quot;&gt;Riot&lt;/a&gt; is the main client for connecting to Matrix servers although there are other clients, this is the most feature complete one.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When I started using Matrix back when Riot was called Vector, I found it really uncomfortable to use. It was lacking the level of polish that every other IM app had. And it was also lacking most of the features other apps had. Over the years Matrix has gained almost all the features I want and technically in it’s current state it does everything I need.&lt;/p&gt;
&lt;p&gt;I want to preface this part by saying that the developers on Matrix have done a really good job so far. I have pointed out a lot of negatives of Matrix and Riot in it’s current form but it’s by no means bad software. It just has a way to go to improve the UI and speed.&lt;/p&gt;
&lt;p&gt;Riot supports so many things from text messages to video calls to encrypted groups chats but the problem is while it has all of these features, most don’t work really nicely. When I say that I don’t mean that riot works terrible, it’s actually quite functional and pretty bug free. The problem is mainly the UI is so far behind the competition like telegram, discord and slack that while Riot has all the same features, they just aren’t comfortable to use.&lt;/p&gt;
&lt;p&gt;This has improved a lot since a year ago but there still needs to be a massive change in the UI design to make it comparable to the competition.&lt;/p&gt;
&lt;p&gt;Another huge issue is how painfully slow the client is. Simple tasks like switching between groups takes up to a second where as on telegram this action finished before my mouse button has finished lifting back up and slack isn’t too far behind. Starting up Riot on web and mobile also takes a painfully long time which can be up to a minute just to get from the splash screen to the app. No other app on my phone even has a loading screen because they all load just about instantly.&lt;/p&gt;
&lt;p&gt;Now with those issues out of the way I’ll touch on what it’s like to interact with Matrix as a developer.&lt;/p&gt;
&lt;p&gt;Interacting with the Matrix client-server protocol is a joy. The protocol is based on top of JSON and HTTP making it trivial to use from just about any language. Sending a message to a room on Matrix can be done with a single line of bash using curl.&lt;/p&gt;
&lt;p&gt;The Matrix protocol is also very extensible and can be used for much more than just IM. Each message starts with some basic fields like the sender, event ID and destination room but then there is a block for content and a content type. Many content types are defined in the spec including messages, join/quits, images and other kinds of events you would see in an IM client. But this content block can contain any valid JSON so you are free to build your own protocols on top of Matrix. An example being IoT device control by sending events over Matrix. This ensures the transmission of commands is secure and encrypted without having to implement anything yourself.&lt;/p&gt;
&lt;p&gt;Over all I am very excited for the future of Matrix and Riot and I will continue to use it and follow it’s development. The design and specification for Matrix currently are great. The client needs a LOT of work on the UI and speed but once that comes through I feel Riot/Matrix will be perfect platform to recommend to those looking to switch away from proprietary and privacy invasive messaging services.&lt;/p&gt;
&lt;p&gt;This work is licensed under a &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nd/4.0/&quot;&gt;Creative Commons Attribution-NoDerivatives 4.0 International License&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 09 May 2018 16:40:34 +0000</pubDate>
<dc:creator>kasbah</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://itscode.red/posts/1-year-using-matrix/</dc:identifier>
</item>
<item>
<title>Tech’s Two Philosophies</title>
<link>https://stratechery.com/2018/techs-two-philosophies/</link>
<guid isPermaLink="true" >https://stratechery.com/2018/techs-two-philosophies/</guid>
<description>&lt;p&gt;Even though Apple’s developer conference is still a few weeks away, I think it’s safe to say that the demo of Google Duplex at &lt;a href=&quot;https://www.youtube.com/watch?v=ogfYd705cRs&quot;&gt;yesterday’s Google I/O keynote&lt;/a&gt; will go down as the most impressive of the tech conference season. If you haven’t seen it, it is a must-watch:&lt;/p&gt;

&lt;p&gt;Once I picked my jaw up off the floor, though, what struck me about Google CEO Sundar Pichai’s presentation was how he opened the segment:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Our vision for our assistant is to help you get things done.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And how he closed it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A common theme across all this is we are working hard to give users back time. We’ve always been obsessed about that at Google. Search is obsessed about getting users to answers quickly and giving them what they want.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In Google’s view, computers help you get things done — and save you time — by doing things for you. Duplex was the most impressive example — a computer talking on the phone for you — but the general concept applied to many of Google’s other demonstrations, particularly those predicated on AI: Google Photos will not only sort and tag your photos, but now propose specific edits; Google News will find your news for you, and Maps will find you new restaurants and shops in your neighborhood. And, appropriately enough, the keynote closed with a presentation from Waymo, which will drive you.&lt;/p&gt;
&lt;h4&gt;The Google and Facebook Philosophy&lt;/h4&gt;
&lt;p&gt;Rewind a week, and there was a specific section in &lt;a href=&quot;https://developers.facebook.com/videos/f8-2018/f8-2018-day-1-keynote/&quot;&gt;Mark Zuckerberg’s keynote at the Facebook F8 conference&lt;/a&gt; that stuck out to me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I believe that we need to design technology to help bring people closer together. And I believe that that’s not going to happen on it’s own. So to do that, part of the solution, just part of it, is that one day more of our technology is going to need to focus on people and our relationships. Now there’s no guarantee that we get this right. This is hard stuff. We will make mistakes and they will have consequences and we will need to fix them. But what I can guarantee is that if we don’t work on this the world isn’t moving in this direction by itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zuckerberg, as so often seems to be the case with Facebook, comes across as a somewhat more fervent and definitely more creepy version of Google: not only does Facebook want to do things for you, it wants to do things its chief executive explicitly says would not be done otherwise. The Messianic fervor that seems to have &lt;a href=&quot;https://stratechery.com/2017/manifestos-and-monopolies/&quot;&gt;overtaken Zuckerberg in the last year&lt;/a&gt;, though, simply means that Facebook has adopted a more extreme version of the same philosophy that guides Google: computers doing things for people.&lt;/p&gt;
&lt;h4&gt;The Microsoft and Apple Philosophy&lt;/h4&gt;
&lt;p&gt;Earlier this week, while delivering &lt;a href=&quot;https://stratechery.com/2018/microsofts-build-keynote-microsoft-and-ibm-microsofts-realism/&quot;&gt;Microsoft’s Build conference keynote&lt;/a&gt;, CEO Satya Nadella struck a very different tone; after describing how computing was becoming invisible, because it is everywhere, Nadella said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That’s the opportunity that we have. It’s in some sense endless, but we also have responsibility. We have the responsibility to ensure that these technologies are empowering everyone, these technologies are creating equitable growth by ensuring that every industry is able to grow and create employment. But we also have a responsibility as a tech industry to build trust in technology.&lt;/p&gt;
&lt;p&gt;In fact Hans Jonas was a philosopher who worked in the 50s, 60s, and he wrote a paper on technology and responsibility…he talks about act so that the effects of your action are compatible with permanence or genuine life. That’s something that we need to reflect on, because he was talking about the power of technology being such that it far outstrips our ability to completely control it, especially its impact even on future generations. And so we need to develop a set of principles that guide the choices we make because the choices we make is what’s going to define the future…&lt;/p&gt;
&lt;p&gt;This opportunity and responsibility is what grounds us in our mission to empower every person and every organization on the planet to achieve more. We’re focused on building technology so that we can empower others to build more technology. We’ve aligned our mission, the products we build, our business model, so that your success is what leads to our success. There’s got to be complete alignment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is technology’s second philosophy, and it is very much in opposition to the other: the expectation is not that the computer does your work for you, but rather that the computer enables you to do your work better and more efficiently. And, with this philosophy, comes a different take on responsibility. Pichai, in the opening of Google’s keynote, acknowledged that “we feel a deep sense of responsibility to get this right”, but inherent in that statement is the centrality of Google generally and the direct culpability of its managers. Nadella, on the other hand, insists that responsibility lies with the tech industry collectively, and all of us who seek to leverage it individually.&lt;/p&gt;
&lt;h4&gt;The Bicycle of the Mind&lt;/h4&gt;
&lt;p&gt;This second philosophy, that computers are an aid to humans, not their replacement, is the older of the two; its greatest proponent — prophet, if you will — was Microsoft’s greatest rival, and his analogy of choice was, coincidentally enough, about transportation as well. Not a car, but a bicycle:&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/KFP1nCCJe40?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;Steve Jobs was exceptionally fond of this analogy: there are multiple clips of him making the point in mostly the same way; I usually link to this one because by the time this video was recorded&lt;sup&gt;&lt;a href=&quot;https://stratechery.com/2018/techs-two-philosophies/#footnote_0_3466&quot; id=&quot;identifier_0_3466&quot; class=&quot;footnote-link footnote-identifier-link&quot; title=&quot;1990 I believe, but I’m not certain&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Jobs had his delivery perfectly honed.&lt;/p&gt;
&lt;p&gt;Interestingly, though, the earliest known clip of Jobs telling this story, from 1980, doesn’t include the famous phrase “Bicycle of the Mind”; it’s worth watching, though, all the same:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best analogy I’ve ever heard is Scientific American, I think it was, did a study in the early 70s on the efficiency of locomotion, and what they did was for all different species of things in the planet, birds and cats and dogs and fish and goats and stuff, they measured how much energy does it take for a goat to get from here to there. Kilocalories per kilometer or something, I don’t know what they measured. And they ranked them, they published the list, and the Condor won. The Condor took the least amount of energy to get from here to there. Man was didn’t do so well, came in with a rather unimpressive showing about a third of the way down the list.&lt;/p&gt;
&lt;p&gt;But fortunately someone at Scientific American was insightful enough to test a man with a bicycle, and man with a bicycle won. Twice as good as the Condor, all the way off the list. And what it showed was that man is a toolmaker, has the ability to make a tool to amplify an inherent ability that he has. And that’s exactly what we’re doing here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is precisely what Nadella was driving at: “to empower every person and every organization on the planet to achieve more” is to “amplify an inherent ability” those people and organizations have; the goal is not to do things for them, but to enable them to do things never before possible. And, I would hasten to add, Apple remains very much on the same side of this philosophical divide.&lt;/p&gt;
&lt;h4&gt;The Chicken and Egg Question&lt;/h4&gt;
&lt;p&gt;There is certainly an argument to be made that these two philosophies arise out of their historical context; it is no accident that Apple and Microsoft, the two “bicycle of the mind” companies, were founded only a year apart, and for decades had broadly similar business models: sure, Microsoft licensed software, while Apple sold software-differentiated hardware, but both were and are at their core personal computer companies and, by extension, platforms.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.349-1024x552.png&quot; alt=&quot;In a platform business model 3rd parties attract customers&quot; width=&quot;640&quot; height=&quot;345&quot; class=&quot;aligncenter size-large wp-image-3468&quot; srcset=&quot;https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.349-1024x552.png 1024w, https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.349-300x162.png 300w, https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.349-768x414.png 768w, https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.349-1168x630.png 1168w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Google and Facebook, on the other hand, are products of the Internet, and the Internet leads not to platforms but to aggregators. While platforms need 3rd parties to make them useful and build their moat through the creation of ecosystems, aggregators attract end users by virtue of their inherent usefulness and, over time, leave suppliers no choice but to follow the aggregators’ dictates if they wish to reach end users.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.251-1024x768.png&quot; alt=&quot;In the aggregator business model the aggregator owns customers and suppliers follow&quot; width=&quot;640&quot; height=&quot;480&quot; class=&quot;aligncenter size-large wp-image-3467&quot; srcset=&quot;https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.251-1024x768.png 1024w, https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.251-300x225.png 300w, https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.251-768x576.png 768w, https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.251-840x630.png 840w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The business model follows from these fundamental differences: a platform provider has no room for ads, because the primary function of a platform is provide a stage for the applications that users actually need to shine. Aggregators, on the other hand, particularly Google and Facebook, deal in information, and ads are simply another type of information.&lt;sup&gt;&lt;a href=&quot;https://stratechery.com/2018/techs-two-philosophies/#footnote_1_3466&quot; id=&quot;identifier_1_3466&quot; class=&quot;footnote-link footnote-identifier-link&quot; title=&quot;As I’ve written in the past, this is why mobile saved Facebook: the company desperately wanted to be a platform but being “just an app” left Facebook no choice but to be self-contained and thus a better ad company&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; Moreover, because the critical point of differentiation for aggregators is the number of users on their platform, advertising is the only possible business model; there is no more important feature when it comes to widespread adoption than being “free.”&lt;/p&gt;
&lt;p&gt;Still, that doesn’t make the two philosophies any less real: Google and Facebook have always been predicated on doing things for the user, just as Microsoft and Apple have been built on enabling users and developers to make things completely unforeseen.&lt;/p&gt;
&lt;h4&gt;Tech’s Yin and Yang&lt;/h4&gt;
&lt;p&gt;That there are two philosophies does not necessarily mean that one is right and one is wrong: the reality is we need both. Some problems are best solved by human ingenuity, enabled by the likes of Microsoft and Apple; others by collective action. That, though, gets at why Google and Facebook are fundamentally more dangerous: collective action is traditionally the domain of governments, the best form of which is bounded by the popular will. Google and Facebook, on the other hand, are accountable to no one. Both deserve all of the recent scrutiny they have attracted, and arguably deserve more.&lt;/p&gt;
&lt;p&gt;That scrutiny, though, and whatever regulations that result, must keep in mind this philosophical divide: platforms that create new possibilities — and not just Apple and Microsoft! — are the single most important economic force when it comes to countering the oncoming wave of computers doing people’s jobs, and lazily written regulation that targets aggregators but constricts platforms will inevitably do more harm than good.&lt;/p&gt;
&lt;p&gt;The truth is that the &lt;a href=&quot;https://stratechery.com/2018/divine-discontent-disruptions-antidote/&quot;&gt;Divine Discontent&lt;/a&gt; that I wrote about last week is not only an antidote to low-end disruption, but also a reason for optimism: companies like Apple and Amazon can, as I noted, win in the long run by offering a superior user experience, but more importantly, the dividend of discontent is a greenfield of opportunities to build new businesses and new jobs alleviating that discontent. For that we need platforms on which to build those businesses, and yes, we will need artificial intelligence to do things for us so we have the time.&lt;/p&gt;
&lt;ol class=&quot;footnotes&quot;&gt;&lt;li id=&quot;footnote_0_3466&quot; class=&quot;footnote&quot;&gt;1990 I believe, but I’m not certain [&lt;a href=&quot;https://stratechery.com/2018/techs-two-philosophies/#identifier_0_3466&quot; class=&quot;footnote-link footnote-back-link&quot;&gt;↩︎&lt;/a&gt;]&lt;/li&gt;
&lt;li id=&quot;footnote_1_3466&quot; class=&quot;footnote&quot;&gt;As &lt;a href=&quot;https://stratechery.com/2013/mobile-makes-facebook-just-an-app-thats-great-news/&quot;&gt;I’ve written in the past&lt;/a&gt;, this is why mobile saved Facebook: the company desperately wanted to be a platform but being “just an app” left Facebook no choice but to be self-contained and thus a better ad company [&lt;a href=&quot;https://stratechery.com/2018/techs-two-philosophies/#identifier_1_3466&quot; class=&quot;footnote-link footnote-back-link&quot;&gt;↩︎&lt;/a&gt;]&lt;/li&gt;
&lt;/ol&gt;

</description>
<pubDate>Wed, 09 May 2018 15:02:18 +0000</pubDate>
<dc:creator>techrede</dc:creator>
<og:type>article</og:type>
<og:title>Tech’s Two Philosophies</og:title>
<og:url>https://stratechery.com/2018/techs-two-philosophies/</og:url>
<og:description>Google and Facebook represent one philosophy, and Microsoft and Apple represent another; tech needs both, but ultimately platforms are more important than aggregators.</og:description>
<og:image>https://stratechery.com/wp-content/uploads/2018/05/Paper.stratechery-Year-One.349.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stratechery.com/2018/techs-two-philosophies/</dc:identifier>
</item>
<item>
<title>Facebook now denying access unless EU users opt-in to tracking</title>
<link>https://twitter.com/johnnyryan/status/993827965594202112</link>
<guid isPermaLink="true" >https://twitter.com/johnnyryan/status/993827965594202112</guid>
<description>&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--welcome&quot; readability=&quot;9&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Welcome home!&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;This timeline is where you’ll spend most of your time, getting instant updates about what matters to you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--unfollow&quot; readability=&quot;7&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Tweets not working for you?&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;Hover over the profile pic and click the Following button to unfollow any account.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--like&quot; readability=&quot;9&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Say a lot with a little&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;When you see a Tweet you love, tap the heart — it lets the person who wrote it know you shared the love.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--retweet&quot; readability=&quot;8&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Spread the word&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;The fastest way to share someone else’s Tweet with your followers is with a Retweet. Tap the icon to send it instantly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--reply&quot; readability=&quot;9&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Join the conversation&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;Add your thoughts about any Tweet with a Reply. Find a topic you’re passionate about, and jump right in.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--trends&quot; readability=&quot;7&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Learn the latest&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;Get instant insight into what people are talking about now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--wtf&quot; readability=&quot;7&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Get more of what you love&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;Follow more accounts to get instant updates about topics you care about.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--search&quot; readability=&quot;7&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Find what's happening&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;See the latest conversations about any topic instantly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;UIWalkthrough-step UIWalkthrough-step--moments&quot; readability=&quot;7&quot;&gt;
&lt;h3 class=&quot;UIWalkthrough-title&quot;&gt;Never miss a Moment&lt;/h3&gt;
&lt;p class=&quot;UIWalkthrough-message&quot;&gt;Catch up instantly on the best stories happening as they unfold.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 09 May 2018 14:58:58 +0000</pubDate>
<dc:creator>fredley</dc:creator>
<og:type>article</og:type>
<og:url>https://twitter.com/johnnyryan/status/993827965594202112</og:url>
<og:title>Johnny Ryan on Twitter</og:title>
<og:image>https://pbs.twimg.com/media/DcrJMbSW0AAxJXC.jpg:large</og:image>
<og:description>“Facebook is confronting EU users a new “terms of service” dialogue that denies access until a user opt-ins to tracking for ad targeting, and various other data processing purposes...”</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://twitter.com/johnnyryan/status/993827965594202112</dc:identifier>
</item>
<item>
<title>Mara: A lightweight ETL framework, halfway between plain scripts and Airflow</title>
<link>https://github.com/mara/data-integration</link>
<guid isPermaLink="true" >https://github.com/mara/data-integration</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;This package contains a lightweight ETL framework with a focus on transparency and complexity reduction. It has a number of baked-in assumptions/ principles:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Data integration pipelines as code: pipelines, tasks and commands are created using declarative Python code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL as a data processing engine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extensive web ui. The web browser as the main tool for inspecting, running and debugging pipelines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GNU make semantics. Nodes depend on the completion of upstream nodes. No data dependencies or data flows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No in-app data processing: command line tools as the main tool for interacting with databases and data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Single machine pipeline execution based on Python's &lt;a href=&quot;https://docs.python.org/3.6/library/multiprocessing.html&quot; rel=&quot;nofollow&quot;&gt;multiprocessing&lt;/a&gt;. No need for distributed task queues. Easy debugging and and output logging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cost based priority queues: nodes with higher cost (based on recorded run times) are run first.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;To use the library directly, use pip:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;pip install --process-dependency-links git+https://github.com/mara/data-integration.git
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For an example of an integration into a flask application, have a look at the &lt;a href=&quot;https://github.com/mara/mara-example-project&quot;&gt;mara example project&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;Here is a pipeline &quot;demo&quot; consisting of three nodes that depend on each other: the task &lt;code&gt;ping_localhost&lt;/code&gt;, the pipeline &lt;code&gt;sub_pipeline&lt;/code&gt; and the task &lt;code&gt;sleep&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; data_integration.commands.bash &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; RunBash
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; data_integration.pipelines &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Pipeline, Task
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; data_integration.ui.cli &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; run_pipeline, run_interactively

pipeline &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Pipeline(
    &lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;demo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-v&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;A small pipeline that demonstrates the interplay between pipelines, tasks and commands&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)

pipeline.add(Task(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_localhost&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Pings localhost&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
                  &lt;span class=&quot;pl-v&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[RunBash(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping -c 3 localhost&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)]))

sub_pipeline &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Pipeline(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sub_pipeline&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Pings a number of hosts&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; host &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;google&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;amazon&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;facebook&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]:
    sub_pipeline.add(Task(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;ping_&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;host&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;Pings &lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;host&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;,
                          &lt;span class=&quot;pl-v&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[RunBash(&lt;span class=&quot;pl-s&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;ping -c 3 &lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;host&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;.com&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;)]))

sub_pipeline.add_dependency(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_amazon&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_facebook&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
sub_pipeline.add(Task(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_foo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Pings foo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
                      &lt;span class=&quot;pl-v&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[RunBash(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping foo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)]), [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_amazon&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;])

pipeline.add(sub_pipeline, [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_localhost&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;])

pipeline.add(Task(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sleep&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Sleeps for 2 seconds&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
                  &lt;span class=&quot;pl-v&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[RunBash(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sleep 2&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)]), [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sub_pipeline&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tasks contain lists of commands, which do the actual work (in this case running bash commands that ping various hosts).&lt;/p&gt;

&lt;p&gt;In order to run the pipeline, a PostgreSQL database needs to be configured for storing run-time information, run output and status of incremental processing:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; mara_db.auto_migration
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; mara_db.config
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; mara_db.dbs

mara_db.config.databases \
    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;lambda&lt;/span&gt;: {&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;mara&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: mara_db.dbs.PostgreSQLDB(&lt;span class=&quot;pl-v&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;localhost&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;root&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;example_etl_mara&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)}

mara_db.auto_migration.auto_discover_models_and_migrate()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Given that PostgresSQL is running and the credentials work, the output looks like this (a database with a number of tables is created):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Created database &quot;postgresql+psycopg2://root@localhost/example_etl_mara&quot;

CREATE TABLE data_integration_file_dependency (
    node_path TEXT[] NOT NULL, 
    dependency_type VARCHAR NOT NULL, 
    hash VARCHAR, 
    timestamp TIMESTAMP WITHOUT TIME ZONE, 
    PRIMARY KEY (node_path, dependency_type)
);

.. more tables
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;CLI UI&lt;/h3&gt;
&lt;p&gt;This runs a pipeline with output to stdout:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; data_integration.ui.cli &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; run_pipeline

run_pipeline(pipeline)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/mara/data-integration/blob/master/docs/example-run-cli-1.gif&quot;&gt;&lt;img src=&quot;https://github.com/mara/data-integration/raw/master/docs/example-run-cli-1.gif&quot; alt=&quot;Example run cli 1&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this runs a single node of pipeline &lt;code&gt;sub_pipeline&lt;/code&gt; together with all the nodes that it depends on:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
run_pipeline(sub_pipeline, &lt;span class=&quot;pl-v&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[sub_pipeline.nodes[&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;ping_amazon&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]], &lt;span class=&quot;pl-v&quot;&gt;with_upstreams&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;True&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/mara/data-integration/blob/master/docs/example-run-cli-2.gif&quot;&gt;&lt;img src=&quot;https://github.com/mara/data-integration/raw/master/docs/example-run-cli-2.gif&quot; alt=&quot;Example run cli 2&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And finally, there is some sort of menu based on &lt;a href=&quot;http://pythondialog.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;pythondialog&lt;/a&gt; that allows to navigate and run pipelines like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; data_integration.ui.cli &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; run_interactively

run_interactively()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/mara/data-integration/blob/master/docs/example-run-cli-3.gif&quot;&gt;&lt;img src=&quot;https://github.com/mara/data-integration/raw/master/docs/example-run-cli-3.gif&quot; alt=&quot;Example run cli 3&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Web UI&lt;/h3&gt;
&lt;p&gt;More importantly, this package provides an extensive web interface. It can be easily integrated into any &lt;a href=&quot;http://flask.pocoo.org/&quot; rel=&quot;nofollow&quot;&gt;Flask&lt;/a&gt; based app and the &lt;a href=&quot;https://github.com/mara/mara-example-project&quot;&gt;mara example project&lt;/a&gt; demonstrates how to do this using &lt;a href=&quot;https://github.com/mara/mara-app&quot;&gt;mara-app&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For each pipeline, there is a page that shows&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a graph of all child nodes and the dependencies between them&lt;/li&gt;
&lt;li&gt;a chart of the overal run time of the pipeline and it's most expensive nodes over the last 30 days (configurable)&lt;/li&gt;
&lt;li&gt;a table of all the pipeline's nodes with their average run times and the resulting queuing priority&lt;/li&gt;
&lt;li&gt;output and timeline for the last runs of the pipeline&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/mara/data-integration/blob/master/docs/mara-data-integration-web-ui-1.png&quot;&gt;&lt;img src=&quot;https://github.com/mara/data-integration/raw/master/docs/mara-data-integration-web-ui-1.png&quot; alt=&quot;Mara data integration web ui 1&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For each task, there is a page showing&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the upstreams and downstreams of the task in the pipeline&lt;/li&gt;
&lt;li&gt;the run times of the task in the last 30 days&lt;/li&gt;
&lt;li&gt;all commands of the task&lt;/li&gt;
&lt;li&gt;output of the last runs of the task&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/mara/data-integration/blob/master/docs/mara-data-integration-web-ui-2.png&quot;&gt;&lt;img src=&quot;https://github.com/mara/data-integration/raw/master/docs/mara-data-integration-web-ui-2.png&quot; alt=&quot;Mara data integration web ui 2&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pipelines and tasks can be run from the web ui directly, which is probably one of the main features of this package:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/mara/data-integration/blob/master/docs/example-run-web-ui.gif&quot;&gt;&lt;img src=&quot;https://github.com/mara/data-integration/raw/master/docs/example-run-web-ui.gif&quot; alt=&quot;Example run web ui&quot;/&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Documentation is currently work in progress. Please use the &lt;a href=&quot;https://github.com/mara/mara-example-project&quot;&gt;mara example project&lt;/a&gt; as a reference for getting started.&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Wed, 09 May 2018 14:31:08 +0000</pubDate>
<dc:creator>stadeschuldt</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/24233585?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>mara/data-integration</og:title>
<og:url>https://github.com/mara/data-integration</og:url>
<og:description>data-integration - A lightweight opinionated ETL framework, halfway between plain scripts and Apache Airflow</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/mara/data-integration</dc:identifier>
</item>
<item>
<title>Taskwarrior, where have you been all my life?</title>
<link>https://blog.djy.io/taskwarrior-where-have-you-been-all-my-life/</link>
<guid isPermaLink="true" >https://blog.djy.io/taskwarrior-where-have-you-been-all-my-life/</guid>
<description>&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/7fc7d29badcf4919151960c755cb7574db99a85b/d4acb/assets/2018-04-27-taskwarrior-screenshot.png&quot; alt=&quot;Screenshot of Taskwarrior in action&quot; title=&quot;Screenshot of Taskwarrior in action&quot; width=&quot;800&quot; height=&quot;146&quot;/&gt;&lt;/p&gt;&lt;p&gt;I’ve been thinking a lot about task management lately. I’ve actually been thinking about it for years. I’ve always been searching for the optimal way to sort through the bajillion things I have to do and remain productive.&lt;/p&gt;
&lt;p&gt;This all started when, as a programmer, I realized that I had the power to automate the tasks that I found repetitive in my digital life. I would write scripts, for example, to do things like organize my photos, clean up my music library, and back up my data. Over the years, I’ve developed my own homegrown approach to task management, which has included a couple of attempts at writing a command-line tool to manage my tasks in a way that’s in line with my approach. Then, recently, I discovered that there is already a robust command-line tool that does exactly what I need.&lt;/p&gt;
&lt;p&gt;That tool is &lt;a href=&quot;https://taskwarrior.org&quot;&gt;Taskwarrior&lt;/a&gt;. But before I get into it, here’s a brief dive into the journey that led me to using it.&lt;/p&gt;

&lt;p&gt;Around the same time that I was starting to write scripts to automate the monotonous parts of my day-to-day life, I was also discovering the joy of &lt;a href=&quot;https://www.google.com/search?q=inbox+zero&quot;&gt;Inbox Zero&lt;/a&gt;. If you’re unfamiliar with Inbox Zero, the basic idea is that you endeavor to keep your email inbox empty as much as possible, instead of letting emails pile up that you’ll get to “later” (which could be days, months, or even years from now, or perhaps never). You can achieve Inbox Zero by being disciplined about reviewing your inbox regularly (at least once a day) and taking action on every email. Taking action on an email can mean deleting or archiving it, replying (even if a quick reply is all you have time for), or perhaps making a note for yourself on your calendar to do something later.&lt;/p&gt;
&lt;p&gt;(You might be wondering what Inbox Zero has to do with task management. That will become clear very shortly. Read on!)&lt;/p&gt;

&lt;p&gt;Sometime around 2013, I discovered an excellent, free service called &lt;a href=&quot;https://followupthen.com&quot;&gt;FollowUpThen&lt;/a&gt;. The elevator pitch for FollowUpThen is that you can send or forward an email to an address like &lt;code class=&quot;highlighter-rouge&quot;&gt;tomorrow@followupthen.com&lt;/code&gt; (or &lt;code class=&quot;highlighter-rouge&quot;&gt;tomorrow@fut.io&lt;/code&gt;, for short) and tomorrow at 6 AM, the email that you sent or forwarded will arrive in your inbox, like clockwork. FollowUpThen supports a &lt;a href=&quot;https://www.followupthen.com/how#timeformats&quot;&gt;wide variety&lt;/a&gt; of time and date formats, many of which are highly useful. I often found myself forwarding an email to &lt;code class=&quot;highlighter-rouge&quot;&gt;2weeks@fut.io&lt;/code&gt; or sending an email to &lt;code class=&quot;highlighter-rouge&quot;&gt;september@fut.io&lt;/code&gt;, for example.&lt;/p&gt;
&lt;p&gt;FollowUpThen quickly became the primary tool in my Inbox Zero toolbox. If I had a lot of work to do and a handful of emails that I just didn’t have time for at the moment, I could use FollowUpThen to “snooze” the emails until a particular time later in the day when I knew I would be more available.&lt;/p&gt;
&lt;p&gt;I also started to use FollowUpThen as a task manager. For example, if I was planning to mow the lawn on Saturday, I would send an email with the subject &lt;code class=&quot;highlighter-rouge&quot;&gt;mow the lawn&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;saturday@fut.io&lt;/code&gt;. Then when Saturday rolled around, I would get an email with the subject &lt;code class=&quot;highlighter-rouge&quot;&gt;mow the lawn&lt;/code&gt;, and I would have to mow the lawn in order to reach Inbox Zero, which motivated me to mow the lawn.&lt;/p&gt;
&lt;p&gt;After a while, I started wishing that I could see my upcoming tasks ahead of time. I wanted to see into the future just slightly, so that I could mentally prepare myself to work on a task that wasn’t due yet. This would be better than forgetting that I had a task scheduled, and then &lt;em&gt;BAM&lt;/em&gt; – I get an email, signaling that I needed to do it right now!&lt;/p&gt;
&lt;p&gt;Now, to be fair, you &lt;em&gt;can&lt;/em&gt; see all of your scheduled follow-ups by logging in at followupthen.com – and I did that from time to time – but that’s a little cumbersome for something that I’d ideally like to do on a regular basis. Over time, I’ve become more and more accustomed to doing things at the command line. I’m already in a terminal most of the time, so it is typically a lot faster for me to do something at the command-line as opposed to, say, logging into a website, navigating to the right page, and clicking a button. I started pining for a way to manage all of my projects and tasks at the command-line.&lt;/p&gt;

&lt;p&gt;As I imagined an ideal command-line task management workflow, I found myself thinking about the ancient AS400 system that I used in my previous life as a claims adjudicator.&lt;/p&gt;
&lt;p&gt;I was managing a caseload of anywhere from 50 to 200 claims, each of which had a log of past actions (called &lt;em&gt;log items&lt;/em&gt;) and a schedule of upcoming actions needed (called &lt;em&gt;action items&lt;/em&gt;). Some of the action items were designated &lt;code class=&quot;highlighter-rouge&quot;&gt;IA&lt;/code&gt;, which meant that Immediate Action was needed. This was really just a way of designating some action items as being higher priority than others.&lt;/p&gt;
&lt;p&gt;The best part of the system was the case summary screen. This was a top-level summary of all of my cases, with statistics about how many cases fell into certain categories. For example, there was a “Cases needing immediate action” category, which displayed the number of cases with Immediate Action follow-up actions either due or overdue. There were also useful categories like “Cases without action in 30 days.” When I was working at that job, I developed a highly productive workflow in which I was able to effectively manage large caseloads and ensure that the most urgent tasks were done first. My daily process was to go through the categories on the case summary screen in priority order, and endeavor to get the number to the right of each category down to zero, over time. I was following the Inbox Zero philosophy with my workload, and it worked very well for me.&lt;/p&gt;
&lt;p&gt;I wanted to replicate this sort of workflow for day-to-day task management in my personal life. So, I started writing a program that I called &lt;a href=&quot;https://github.com/daveyarwood/ews&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ews&lt;/code&gt;&lt;/a&gt; (named after the Electronic Worksheet System that I had used in my past job). I was envisioning &lt;code class=&quot;highlighter-rouge&quot;&gt;ews&lt;/code&gt; as essentially a port of the AS400 system I had used, where “cases” (i.e. projects, groups of related tasks) could be managed and summarized in priority order.&lt;/p&gt;
&lt;p&gt;I started writing this tool in &lt;a href=&quot;https://clojurescript.org&quot;&gt;ClojureScript&lt;/a&gt; targeting &lt;a href=&quot;https://nodejs.org&quot;&gt;node.js&lt;/a&gt;, but I got frustrated with the need to use callbacks when interfacing with the node.js ecosystem, which was a show-stopper for me. I was playing with &lt;a href=&quot;https://rust-lang.org&quot;&gt;Rust&lt;/a&gt; at the time, so I did a basic rewrite in Rust, which I was fairly happy with, although I realized that the strictness of the Rust compiler caused me to work more slowly than I do in less strict languages.&lt;/p&gt;
&lt;p&gt;I was on the verge of yet another rewrite in &lt;a href=&quot;https://crystal-lang.org&quot;&gt;Crystal&lt;/a&gt; when I finally took a step back and thought about what I really wanted to create. This led me to my next iteration, which was different enough that I decided to give it a different name.&lt;/p&gt;

&lt;p&gt;I had a shower-thought that Google Calendar provides a database for events and an API for interacting with them, so I could leverage this platform to build my tool. So, I started writing &lt;a href=&quot;https://github.com/daveyarwood/tdz&quot;&gt;tdz&lt;/a&gt; as an experiment in that direction. (NB: I didn’t get very far, so don’t expect to find much in that repo!)&lt;/p&gt;
&lt;p&gt;While I was thinking about how my mental model of projects and tasks could map onto the Google Calendar API, I also realized that the model could be simplified. I didn’t really need to manage projects; I only needed to manage individual tasks that have scheduled dates and due dates. (If I could organize them into projects, that would be icing on the cake, but it wasn’t a requirement.)&lt;/p&gt;
&lt;p&gt;With the conceptual model simplified to just tasks, I (finally) started to wonder if maybe somebody else had already created something like this. After some googling, I stumbled upon &lt;a href=&quot;https://stackify.com/top-command-line-tools/&quot;&gt;this list of useful command-line tools&lt;/a&gt;, which included Taskwarrior, a feature-rich task management application. So, I decided to give it a try.&lt;/p&gt;

&lt;p&gt;I’d briefly encountered Taskwarrior before in the past and thought, “This is cool, but how is it different from the other command-line TODO apps I’ve seen?” I’d dismissed it as “just another TODO list app.”&lt;/p&gt;
&lt;p&gt;At that point, I’d already come across a number of command-line TODO list managers in the open source space; it’s a fun, easy project that any beginning programmer can build and get working in a short amount of time. So, by association, I had come to expect any command-line TODO manager to be simplistic and fall short of my task management needs.&lt;/p&gt;
&lt;p&gt;I didn’t want a tool that would simply keep track of a list of tasks and let me check them off when I did them. This is akin to a traditional pen-and-paper TODO list; I’ve always hated those because there’s no way to assign dates to things and filter out the noise of backlog tasks that aren’t yet ready for action. It didn’t occur to me that there might be a more sophisticated task management CLI tool that had all of the features I needed in order to follow an “Inbox Zero” style of task management. Taskwarrior turned out to be exactly what I needed and more!&lt;/p&gt;
&lt;h2 id=&quot;tasks-projects-and-urgency&quot;&gt;Tasks, Projects, and Urgency&lt;/h2&gt;
&lt;p&gt;Adding and listing tasks is, of course, a breeze:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task add mow the lawn
Created task 1.

$ task
[task next]

ID Age Description  Urg
 1 5s  mow the lawn    0

1 task&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The default behavior when you run &lt;code class=&quot;highlighter-rouge&quot;&gt;task&lt;/code&gt; is to run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;task next&lt;/code&gt;, which lists your most urgent tasks, sorted by urgency.&lt;/p&gt;
&lt;p&gt;Tasks can be modified in a number of ways, including, but not limited to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adding tags.&lt;/li&gt;
&lt;li&gt;Categorizing the task as being part of a project.&lt;/li&gt;
&lt;li&gt;Setting the dates/times when the task will be visible, scheduled, and due.&lt;/li&gt;
&lt;li&gt;Assigning a priority (the default priorities are L, M, and H, and you can customize or replace them or add more priorities).&lt;/li&gt;
&lt;li&gt;Marking the task as “active” (i.e. you’ve started working on it).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Watch what happens to my task when I designate it as part of the “home” project:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task 1 modify project:home
Modifying task 1 'mow the lawn'.
Modified 1 task.
The project 'home' has changed.  Project 'home' is 0% complete (1 task remaining).

$ task
[task next]

ID Age  Project Description  Urg
 1 2min home    mow the lawn    1

1 task&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that the urgency level changed from 0 to 1! We can see why if we view information about the task:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task 1
No command specified - assuming 'information'.

Name          Value
ID            1
Description   mow the lawn
Status        Pending
Project       home
Entered       2018-05-04 19:56:15 (2min)
Last modified 2018-05-04 19:58:56 (8s)
Virtual tags  PENDING READY UNBLOCKED LATEST PROJECT
UUID          906c34ce-b065-4736-ab8e-6cecb5099c29
Urgency          1

    project      1 *    1 =      1
                            ------
                                 1

Date                Modification
2018-05-04 19:58:56 Project set to 'home'.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It turns out that Taskwarrior considers a task to be higher priority if it is part of a project, which I think makes sense. I also like this because it encourages me to assign a project to tasks whenever possible.&lt;/p&gt;
&lt;p&gt;For the sake of example, I’ll add another task that has a different project. I can concisely add the task and assign the project in a single command:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task add write blog post about taskwarrior project:blog
Created task 2.
The project 'blog' has changed.  Project 'blog' is 0% complete (1 task remaining).

$ task
[task next]

ID Age   Project Description                       Urg
 1 16min home    mow the lawn                         1
 2 31s   blog    write blog post about taskwarrior    1

2 tasks&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that both tasks are the same urgency level (1) because they’re both tasks that have a project, and out-of-the-box, Taskwarrior doesn’t know which tasks and projects I consider to be the most urgent. But it turns out that I can customize that by setting up “coefficients” that are applied whenever a task meets certain criteria. For example, I can specify that a task is more important if it belongs to the “home” project:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task config urgency.user.project.home.coefficient 2.0
Are you sure you want to add 'urgency.user.project.home.coefficient' with a value of '2.0'? (yes/no) y
Config file /home/dave/.taskrc modified.

$ task
[task next]

ID Age   Project Description                       Urg
 1 24min home    mow the lawn                         3
 2 8min  blog    write blog post about taskwarrior    1

2 tasks

$ task 1
No command specified - assuming 'information'.

Name          Value
ID            1
Description   mow the lawn
Status        Pending
Project       home
Entered       2018-05-04 19:56:15 (24min)
Last modified 2018-05-04 19:58:56 (22min)
Virtual tags  PENDING READY UNBLOCKED PROJECT
UUID          906c34ce-b065-4736-ab8e-6cecb5099c29
Urgency          3

    project           1 *    1 =      1
    PROJECT home      1 *    2 =      2
                                 ------
                                      3

Date                Modification
2018-05-04 19:58:56 Project set to 'home'.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, mowing the lawn is at the top of my list because I’ve configured the “home” project to be more important than others. I chose a coefficient of 2.0 here, which is rather arbitrary, but the important thing is how that coefficient compares to other coefficients that I’ve defined. For example, if I had another project that I considered even more important, I might give it a coefficient of 2.5 or 3.0.&lt;/p&gt;
&lt;p&gt;Taskwarrior considers a number of other factors when determining how urgent a given task is. Here’s a real example from my tasks:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Urgency               18.08

    project        1 *    1 =      1
    active         1 *    4 =      4
    scheduled      1 *    5 =      5
    blocking       1 *    8 =      8
    age        0.041 *    2 =  0.082
                              ------
                               18.08&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This task is particularly urgent because I’ve designated it as blocking another task by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;depends:25&lt;/code&gt; (25 being the ID of this task) on the other task. The other task won’t show up in my list until I’ve completed this task, which makes this task more urgent. Makes sense.&lt;/p&gt;
&lt;p&gt;I’ve also marked this task as “active” by running &lt;code class=&quot;highlighter-rouge&quot;&gt;task 25 start&lt;/code&gt;, so that makes it more urgent because, I guess, it’s easier to finish a task you’ve already started, and when you finish a task, that motivates you to keep working on other tasks.&lt;/p&gt;
&lt;p&gt;Taskwarrior also prioritizes “scheduled” tasks over a task that you’ve added without thinking about when you want to do it, which really means you don’t care about finishing that task as much, when it comes down to it.&lt;/p&gt;
&lt;p&gt;Older tasks are also given priority, which I think is good because nothing demotivates me more than having really old items on my TODO list, looming on the backburner, taunting me with my inability to complete them. So I appreciate that Taskwarrior gives these tasks priority, encouraging me to finish them and move onto newer things.&lt;/p&gt;
&lt;p&gt;These are all good decisions, in my book. With minimal effort, I can enter all of my tasks into Taskwarrior and describe them as belonging to projects, blocking other tasks, having scheduled dates and due dates, etc., and I can trust Taskwarrior to put them into the priority order that makes the most sense.&lt;/p&gt;
&lt;h2 id=&quot;task-management-inbox-zero-style&quot;&gt;Task Management, Inbox Zero style&lt;/h2&gt;
&lt;p&gt;The most crucial aspect of Taskwarrior, in my opinion, is the way that it allows you to assign dates and times to tasks, both controlling when a task is due (which affects how urgent it is) and when it is scheduled (which affects when you start to see it in your list of tasks that are ready to be done).&lt;/p&gt;
&lt;p&gt;Let’s look at my example tasks again:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task
[task next]

ID Age   Project Description                       Urg
 1 57min home    mow the lawn                         3
 2 41min blog    write blog post about taskwarrior    1

2 tasks&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Right now, it’s almost 9 PM, so mowing the lawn is not really an option. And I know that I’ll be busy tomorrow (Saturday). So, I figure that Sunday is going to be the next time that I can mow the lawn. So, I’ll schedule mowing the lawn for Sunday:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task 1 modify scheduled:sunday
Modifying task 1 'mow the lawn'.
Modified 1 task.
Project 'home' is 0% complete (1 task remaining).&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, I can list all tasks that are ready for work, sorted by urgency, with the &lt;code class=&quot;highlighter-rouge&quot;&gt;task ready&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ task ready

ID Age   Project Description                       Urg
 2 44min blog    write blog post about taskwarrior    1

1 task&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that “mow the lawn” is not part of this list. That’s because it’s scheduled for Sunday, which means I can’t work on it until then. So Taskwarrior helpfully hides it from me, eliminating a source of noise in my TODO list. This is absolutely vital to the way that I approach task management! It’s what allows me to achieve Inbox Zero with my tasks.&lt;/p&gt;
&lt;p&gt;I like this workflow so much, I’ve even added a count of tasks that are ready for work (by parsing the output of &lt;code class=&quot;highlighter-rouge&quot;&gt;task ready&lt;/code&gt;) to my command-line prompt. This motivates me to take care of my TODO list as soon as possible, the same way that my email inbox’s unread message count motivates me to tend to my email.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;blog.djy.io (1 task ready) → task 2 done
Completed task 2 'write blog post about taskwarrior'.
Completed 1 task.
You have more urgent tasks.
The project 'blog' has changed.  Project 'blog' is 100% complete (0 of 1 tasks remaining).

blog.djy.io → task ready
No matches.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Ahh, so satisfying!&lt;/p&gt;
</description>
<pubDate>Wed, 09 May 2018 13:23:11 +0000</pubDate>
<dc:creator>daveyarwood</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.djy.io/taskwarrior-where-have-you-been-all-my-life/</dc:identifier>
</item>
</channel>
</rss>