<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Nvidia announces RTX 2000 GPU series with ‘6x more performance’ and ray-tracing</title>
<link>https://www.theverge.com/2018/8/20/17758724/nvidia-geforce-rtx-2080-specs-pricing-release-date-features</link>
<guid isPermaLink="true" >https://www.theverge.com/2018/8/20/17758724/nvidia-geforce-rtx-2080-specs-pricing-release-date-features</guid>
<description>&lt;p id=&quot;rJJZ01&quot;&gt;fNvidia is unveiling its new GeForce RTX 2000 series of graphics cards at Gamescom in Germany today. While we’ve seen a number of &lt;a href=&quot;https://www.theverge.com/2018/7/31/17633750/nvidia-geforce-gtx-1180-event-teaser-august-20th&quot;&gt;teasers&lt;/a&gt; and &lt;a href=&quot;https://www.theverge.com/circuitbreaker/2018/8/17/17723182/nvidia-geforce-rtx-2080-ti-specs-leak-rumors&quot;&gt;plenty of card leaks&lt;/a&gt; recently, the GeForce RTX 2080 is finally official. Based on Nvidia’s new Turing architecture, the RTX 2080 is designed to succeed the popular GTX 1080 and push new real-time ray-tracing effects in upcoming games.&lt;/p&gt;
&lt;p id=&quot;PL6I8t&quot;&gt;At Nvidia’s event, the company is unveiling the RTX 2070, RTX 2080, and RTX 2080 Ti. Nvidia is promising “&lt;a href=&quot;https://go.redirectingat.com?id=66960X1514734&amp;amp;xs=1&amp;amp;url=https%3A%2F%2Fwww.nvidia.com%2Fen-us%2Fgeforce%2F20-series%2F&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;up to 6X the performance of previous-generation graphics cards&lt;/a&gt;,” and real-time ray tracing for these cards. Asus, EVGA, Gigabyte, MSI, PNY, and Zotac will all have RTX 2080 and RTX 2080 Ti cards available for preorder today, with cards available on September 20th. RTX 2070 cards will start at $499, with RTX 2080 at $699, and the RTX 2080 Ti starting at $999. Nvidia is also offering Founders Editions for all three graphics cards. The GeForce RTX 2070 Founders Edition will be priced at $599, with the RTX 2080 Founders Edition at $799, and the RTX 2080 Ti Founders Edition at $1,199. The Founders Edition cards will ship on September 20th.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/lvfptSnJuJz99gbipzVJCJCSh7Q=/0x0:908x580/320x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 320w, https://cdn.vox-cdn.com/thumbor/KidqG6X4W8ASEmmMaxx6qld9hkM=/0x0:908x580/520x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 520w, https://cdn.vox-cdn.com/thumbor/mS05vepbp-3Q-QJcCh6CSyq0pv4=/0x0:908x580/720x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 720w, https://cdn.vox-cdn.com/thumbor/DoWuZPVltL4zy5sMLN4HF-oYxi4=/0x0:908x580/920x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 920w, https://cdn.vox-cdn.com/thumbor/PPIhMDELDz_4D2qljFpyorzCiDk=/0x0:908x580/1120x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 1120w, https://cdn.vox-cdn.com/thumbor/ZMFs7KfZ2mTD6btK8V2YyCl3aHI=/0x0:908x580/1320x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 1320w, https://cdn.vox-cdn.com/thumbor/rD9EtSE-TT9yMfW70yPJpj81Fic=/0x0:908x580/1520x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 1520w, https://cdn.vox-cdn.com/thumbor/KemHCy8fkIHnLEoDyiAAP8v8-VE=/0x0:908x580/1720x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 1720w, https://cdn.vox-cdn.com/thumbor/tbhN7M6umZzwMW8VBrlDH-0QvfE=/0x0:908x580/1920x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/tZSZWfoaKRSCAvMyXADvnaDqKb0=/0x0:908x580/1200x0/filters:focal(0x0:908x580)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321753/hero_banner_2560x580_u.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p id=&quot;82Vk4J&quot;&gt;Nvidia says the RTX 2080 is designed for overclocking, and the RTX 2070 will offer more performance (for ray-tracing) than Nvidia’s Titan XP card. The RTX 2080 Ti is the flagship, clocked at 1350MHz with 4352 CUDA cores and 11GB of GDDR6 RAM (&lt;a href=&quot;https://go.redirectingat.com?id=66960X1514734&amp;amp;xs=1&amp;amp;url=https%3A%2F%2Fwww.nvidia.com%2Fen-us%2Fgeforce%2Fgraphics-cards%2Frtx-2080-ti%2F&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;full specs here&lt;/a&gt;), while the regular RTX 2080 will be clocked at 1515MHz with 2944 CUDA cores and 8GB of GDDR6 RAM (&lt;a href=&quot;https://go.redirectingat.com?id=66960X1514734&amp;amp;xs=1&amp;amp;url=https%3A%2F%2Fwww.nvidia.com%2Fen-us%2Fgeforce%2Fgraphics-cards%2Frtx-2080%2F&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;full specs here&lt;/a&gt;). The RTX 2070, meanwhile, is clocked at 1410MHz, with 2304 CUDA cores and 8GB of GDDR6 RAM. Nvidia is recommending PC gamers have a 650W power supply, as the base RTX 2080 draws up to 215 watts of power.&lt;/p&gt;
&lt;p id=&quot;x09FvT&quot;&gt;The main promise of these new cards is ray tracing, which is a rendering technique that results in real-time light reflections and cinematic effects that can make games look a lot more like movies. Ray tracing is something PC gamers have been promised for years, and it has long been considered the “holy grail” of video games. Nvidia is now aiming to bring it in real time to the masses.&lt;/p&gt;
&lt;div id=&quot;iMx76P&quot;&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/KJRZTkttgLw?rel=0&quot; allowfullscreen=&quot;&quot; scrolling=&quot;no&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p id=&quot;MQ6Fm7&quot;&gt;The performance and ray-tracing support on the new RTX 2000 series is all thanks to it being based on &lt;a href=&quot;https://www.theverge.com/circuitbreaker/2018/8/13/17686938/nvidia-turing-architecture-quadro-rtx-gpus-ray-tracing&quot;&gt;Nvidia’s latest Turing architecture&lt;/a&gt;. “This is a new computing model, so there’s a new way to think about performance,” says Nvidia CEO Jensen Huang. “This new Turing processor is just a monster, it’s incredible.” Nvidia is now measuring its ray-tracing performance as a key target for these new cards. Huang showed off a number of demonstrations of existing cards and new rendering techniques with the RTX series.&lt;/p&gt;
&lt;p id=&quot;hRqnzW&quot;&gt;The ray-tracing demonstrations were impressive, but most were limited to physically modeled materials, and reflections and lighting indoors. It’s the real-world game support that matters, and Nvidia is promising real-time ray tracing in &lt;em&gt;Shadow Of The Tomb Raider&lt;/em&gt;, and performance gains in lighting and other effects in &lt;em&gt;Battlefield V&lt;/em&gt; and &lt;em&gt;Metro Exodus.&lt;/em&gt; The demonstration of T&lt;em&gt;omb Raider&lt;/em&gt; was particularly impressive, with realistic shadows and lighting shown in nighttime scenarios.&lt;/p&gt;
&lt;p id=&quot;yuKzLw&quot;&gt;The &lt;em&gt;Metro Exodus&lt;/em&gt; demo involved sunlight from a window entering a room through a window in real time, with Nvidia’s RTX rendering the light inside a room far more accurately so that game developers can hide enemies and other objects out of a view without having to light up the entire room in a non-realistic fashion.&lt;/p&gt;
&lt;p id=&quot;cDKpuI&quot;&gt;&lt;em&gt;Battlefield V&lt;/em&gt; was easily the most impressive example of Nvidia’s RTX system. Reflections from explosions were accurately rendered onto nearby objects like cars, tanks, and even the ground and soldiers in the WW2 first-person shooter game. Flames and explosions will even reflect off of the metal on guns or even diffuse into the wooden parts of older guns in &lt;em&gt;Battlefield V.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;c-float-left&quot;&gt;&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/Cnr7R4Rq9sSmF-HODhYdc7rjLl0=/0x0:2040x1351/320x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 320w, https://cdn.vox-cdn.com/thumbor/pF-rcDcMrOAdpMKT-QvAfFb-Pe4=/0x0:2040x1351/520x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 520w, https://cdn.vox-cdn.com/thumbor/s45rUfHI5Xa7h1e8DQS4x4IQTS4=/0x0:2040x1351/720x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 720w, https://cdn.vox-cdn.com/thumbor/68mZgSavPQu7FAFRZOdwupKuqS4=/0x0:2040x1351/920x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 920w, https://cdn.vox-cdn.com/thumbor/USF8BvEYOcV31GFsoWtwDP5xRUY=/0x0:2040x1351/1120x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 1120w, https://cdn.vox-cdn.com/thumbor/MvhJ1MNNFf74I7uzGhqxldNuLv4=/0x0:2040x1351/1320x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 1320w, https://cdn.vox-cdn.com/thumbor/k2A9o0ahHwth-Ux0YBVDFC6VBlo=/0x0:2040x1351/1520x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 1520w, https://cdn.vox-cdn.com/thumbor/QZxoR2-xgFf4lL10VAge7ylAYAM=/0x0:2040x1351/1720x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 1720w, https://cdn.vox-cdn.com/thumbor/XnPXSg-TtHalz57hhsYiAHbDiiE=/0x0:2040x1351/1920x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/g5BYtuU5DjmNryV8nyUUleLBye8=/0x0:2040x1351/1200x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321457/twarren_nvidia_223.JPG&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;&lt;em&gt;Nvidia’s RTX rendering off.&lt;/em&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;c-float-right&quot;&gt;&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/HW0ZzrOpHu6BnsJp4u9UQoHAaIk=/0x0:2040x1351/320x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 320w, https://cdn.vox-cdn.com/thumbor/iN9r7uZIVDyKuyZ_cHeZm_tkkMQ=/0x0:2040x1351/520x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 520w, https://cdn.vox-cdn.com/thumbor/0q_Rl0Vnmh1EEib6OYr53p1GLXA=/0x0:2040x1351/720x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 720w, https://cdn.vox-cdn.com/thumbor/C8Y4Qg0iVIxyqGeX8MdxAHBTZ8I=/0x0:2040x1351/920x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 920w, https://cdn.vox-cdn.com/thumbor/snGRFDd0SaElthI6V2ize-JbWPU=/0x0:2040x1351/1120x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 1120w, https://cdn.vox-cdn.com/thumbor/1fVMkMB62VRyMtsheL86-Ij0tD4=/0x0:2040x1351/1320x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 1320w, https://cdn.vox-cdn.com/thumbor/STmB3geGtN6KYDBqXP5o9aCsz7w=/0x0:2040x1351/1520x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 1520w, https://cdn.vox-cdn.com/thumbor/5CVGvj12wSHvKoDq9sXMojlwX-0=/0x0:2040x1351/1720x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 1720w, https://cdn.vox-cdn.com/thumbor/HHh_4w3VEmDrZJETVPiqndxqgUs=/0x0:2040x1351/1920x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/l4U7-A0vbm5ZrI2CXcffRvVzEyo=/0x0:2040x1351/1200x0/filters:focal(0x0:2040x1351)/cdn.vox-cdn.com/uploads/chorus_asset/file/12321467/twarren_nvidia_22.JPG&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;&lt;em&gt;Nvidia’s RTX rendering on.&lt;/em&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p id=&quot;fE1pDB&quot;&gt;Nvidia is promising that even more games will get ray-tracing support than just the three titles it demonstrated today. The company briefly revealed 21 games will get RTX support soon, including &lt;em&gt;Hitman 2&lt;/em&gt;, &lt;em&gt;We Happy Few&lt;/em&gt;, &lt;em&gt;PUBG&lt;/em&gt;, and &lt;em&gt;Final Fantasy XV.&lt;/em&gt; 21 games is moderate for launch, but Nvidia will need to keep pushing game developers to adopt this new technology. Nvidia is also working with Microsoft to push ray-tracing, thanks to the company’s new DirectX Raytracing (DXR) API in Windows 10 to complement Nvidia’s RTX work. Epic Games will also make &lt;a href=&quot;https://www.theverge.com/2018/3/22/17150858/unreal-engine-star-wars-ray-tracing-epic-games-gdc-2018&quot;&gt;real-time ray-tracing available to Unreal Engine developers&lt;/a&gt; later this year.&lt;/p&gt;
&lt;p id=&quot;eIV3hQ&quot;&gt;While Nvidia is claiming “6 times more performance” with its Turing RTX cards over its Pascal-based GTX GPUs, the company is attempting to redefine performance comparisons that are limited to how well the new cards perform. Nvidia doesn’t even list the traditional floating point operations per second (known as teraflops), and has opted to hype two new performance capabilities. These are RTX-OPS, an average of the card’s performance across operations like shading, ray-tracing, etc, and giga rays per second which measures how well the new cards can ray-trace. Nvidia didn’t spend 10 years building its GTX Pascal-based GPUs to perform ray-tracing, so the performance comparison here feels less relevant.&lt;/p&gt;
&lt;p id=&quot;FQQoJu&quot;&gt;We should get to spend more time with Nvidia’s latest RTX 2000 series at Gamescom this week, and we’re particularly interested to hear how the company will adapt these GPUs for laptops. Stay tuned for more information on Nvidia’s new RTX 2080.&lt;/p&gt;
</description>
<pubDate>Mon, 20 Aug 2018 18:03:24 +0000</pubDate>
<dc:creator>albertzeyer</dc:creator>
<og:description>$1,199 for Nvidia’s fastest GeForce card</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/YVyGZ-uleGyW4OzOz-llsvRoHAE=/0x48:679x403/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/12321273/nvidia-geforce-rtx-2.0.png</og:image>
<og:title>Nvidia announces RTX 2000 GPU series with ‘6 times more performance’ and ray tracing</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2018/8/20/17758724/nvidia-geforce-rtx-2080-specs-pricing-release-date-features</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2018/8/20/17758724/nvidia-geforce-rtx-2080-specs-pricing-release-date-features</dc:identifier>
</item>
<item>
<title>Bing.com now runs on .NET Core</title>
<link>https://blogs.msdn.microsoft.com/dotnet/2018/08/20/bing-com-runs-on-net-core-2-1/</link>
<guid isPermaLink="true" >https://blogs.msdn.microsoft.com/dotnet/2018/08/20/bing-com-runs-on-net-core-2-1/</guid>
<description>&lt;p&gt;Bing.com is a cloud service that runs on thousands of servers spanning many datacenters across the globe. Bing servers handle thousands of users’ queries every second from consumers around the world doing searches through their browsers, from our partners using the &lt;a href=&quot;https://azure.microsoft.com/en-us/services/cognitive-services&quot;&gt;Microsoft Cognitive Services APIs&lt;/a&gt;, and from the personal digital assistant, Cortana. Our users demand both relevancy and speed in those results, thus performance and reliability are key components in running a successful cloud service such as Bing.&lt;/p&gt;
&lt;p&gt;Bing’s front-end stack is written predominantly in managed code layered in an MVC pattern. Most of the business logic code is written as data models in C#, and the view logic is written in &lt;a href=&quot;https://github.com/aspnet/Razor&quot;&gt;Razor&lt;/a&gt;. This layer is responsible for transforming the search result data (encoded as &lt;a href=&quot;https://github.com/Microsoft/Bond&quot;&gt;Microsoft Bond&lt;/a&gt;) to HTML that is then compressed and sent to the browser. As gatekeepers of that front-end platform at Bing, we consider developer productivity and feature agility as additional key components in our definition of success. Hundreds of developers rely on this platform to get their features to production, and they expect it to run like clockwork.&lt;/p&gt;
&lt;p&gt;Since its beginning, Bing.com has run on the .NET Framework, but it recently transitioned to running on .NET Core. The main reasons driving Bing.com’s adoption of .NET Core are performance (a.k.a serving latency), support for side-by-side and app-local installation independent of the machine-wide installation (or lack thereof) and &lt;a href=&quot;https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md&quot;&gt;ReadyToRun images&lt;/a&gt;. In anticipation of those improvements, we started an effort to make the code portable across .NET implementations, rather than relying on libraries only available on Windows and only with the .NET Framework. The team started the effort with .NET Standard 1.x, but the reduced API surface caused non-trivial complications for our code migrations. With the 20,000+ APIs that returned with &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/whats-new/whats-new-in-dotnet-standard?tabs=csharp#whats-new-in-the-net-standard-20&quot;&gt;.NET Standard 2.0&lt;/a&gt;, all that changed, and we were able to quickly shift gears from code modifications to testing. After squashing a few bugs, we were ready to deploy .NET Core to production.&lt;/p&gt;
&lt;h2&gt;ReadyToRun Images&lt;/h2&gt;
&lt;p&gt;Managed applications often can have poor startup performance as methods first have to be JIT compiled to machine code. .NET Framework has a precompilation technology, &lt;code&gt;NGEN&lt;/code&gt;. However, &lt;code&gt;NGEN&lt;/code&gt; requires the precompilation step to occur on the machine on which the code will execute. For Bing, that would mean &lt;code&gt;NGENing&lt;/code&gt; on thousands of machines. This coupled with an aggressive deployment cycle would result in significant serving capacity reduction as the application gets precompiled on the web-serving machines. Furthermore, running &lt;code&gt;NGEN&lt;/code&gt; requires administrative privileges, which are often unavailable or heavily scrutinized in a datacenter setting. On .NET Core, the &lt;code&gt;crossgen&lt;/code&gt; tool allows the code to be precompiled as a pre-deployment step, such as in the build lab, and the images deployed to production are Ready To Run!&lt;/p&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;p&gt;.NET Core 2.1 has made major performance improvements in virtually all areas of the runtime and libraries; a great treatise is available on a &lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1&quot;&gt;previous post in the blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our production data resonates with the significant performance improvements in .NET Core 2.1 (as compared to both .NET Core 2.0 and .NET Framework 4.7.2). The graph below tracks our internal server latency over the last few months. The Y axis is the latency (actual values omitted), and the final precipitous drop (on June 2) is the deployment of .NET Core 2.1! That is a &lt;strong&gt;34% improvement&lt;/strong&gt;, all thanks to the hard work of the .NET community!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/bingnetcoreimprovement2.png&quot;&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/bingnetcoreimprovement2.png&quot; alt=&quot;&quot; width=&quot;2057&quot; height=&quot;498&quot; class=&quot;alignnone size-full wp-image-18895&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following changes in .NET Core 2.1 are the highlights of this phenomenal improvement for our workload. They’re presented in decreasing order of impact.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/16994&quot;&gt;Vectorization of &lt;code&gt;string.Equals&lt;/code&gt;&lt;/a&gt; (@jkotas) &amp;amp; &lt;a href=&quot;https://github.com/dotnet/coreclr/pull/16392&quot;&gt;&lt;code&gt;string.IndexOf&lt;/code&gt;/&lt;code&gt;LastIndexOf&lt;/code&gt;&lt;/a&gt; (@eerhardt)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Whichever way you slice it, HTML rendering and manipulation are string-heavy workloads. String comparisons and indexing operations are major components of that. Vectorization of these operations is the single biggest contributor to the performance improvement we’ve measured.&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/14125&quot;&gt;Devirtualization Support for &lt;code&gt;EqualityComparer&amp;lt;T&amp;gt;.Default&lt;/code&gt;&lt;/a&gt; (@AndyAyersMS)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;One of our major software components is a heavy user of &lt;code&gt;Dictionary&amp;lt;int/long, V&amp;gt;&lt;/code&gt;, which indirectly benefits from the intrinsic recognition work that was done in the JIT to make &lt;a href=&quot;https://github.com/dotnet/coreclr/pull/15419&quot;&gt;&lt;code&gt;Dictionary&amp;lt;K, V&amp;gt;&lt;/code&gt; amenable to that optimization&lt;/a&gt; (@benaadams)&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/16516&quot;&gt;Software Write Watch for Concurrent GC&lt;/a&gt; (@Maoni0 and @kouvel)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This led to reduction in CPU usage in our application. Prior to .NET Core 2.1, the write-watch on Windows x64 (and on the .NET Framework) was implemented using Windows APIs that had a different performance trade-off. This new implementation relies on a JIT Write Barrier, which intuitively increases the cost of a reference store, but that cost is amortized and not noticed in our workload. This improvement is now also available on the .NET Framework via &lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup&quot; rel=&quot;nofollow&quot;&gt;May 2018 Security and Quality Rollup&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/13756&quot;&gt;Methods with calli are now inline-able&lt;/a&gt; (@AndyAyersMS and @mjsabby)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;We use &lt;code&gt;ldftn&lt;/code&gt; + &lt;code&gt;calli&lt;/code&gt; in lieu of delegates (which incur an object allocation) in performance-critical pieces of our code where there is a need to call a managed method indirectly. This change allowed method bodies with a &lt;code&gt;calli&lt;/code&gt; instruction to be eligible for inlining. Our dependency injection framework generates such methods.&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/13219&quot;&gt;Improve performance of string.IndexOfAny for 2 &amp;amp; 3 char searches&lt;/a&gt; (@bbowyersmyth)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;A common operation in a front-end stack is search for ‘:’, ‘/’, ‘/’ in a string to delimit portions of a URL. This special-casing improvement was beneficial throughout the codebase.&lt;/p&gt;
&lt;p&gt;In addition to the runtime changes, .NET Core 2.1 also brought &lt;a href=&quot;https://github.com/google/brotli&quot;&gt;Brotli&lt;/a&gt; support to the .NET Library ecosystem. Bing.com uses this capability to dynamically compress the content and deliver it to supporting browsers.&lt;/p&gt;
&lt;h2&gt;Runtime Agility&lt;/h2&gt;
&lt;p&gt;Finally, the ability to have an xcopy version of the runtime inside our application means we’re able to adopt newer versions of the runtime at a much faster pace. In fact, if you peek at the graph above we took the .NET Core 2.1 update worldwide in a regular application deployment on June 2, which is &lt;strong&gt;two days&lt;/strong&gt; after it was released!&lt;/p&gt;
&lt;p&gt;This was possible because we were running our continuous integration (CI) pipeline with .NET Core’s daily CI builds testing functionality and performance all the way through the release.&lt;/p&gt;
&lt;p&gt;We’re excited about the future and are collaborating closely with the .NET team to help them qualify their future updates! The .NET Core team is excited because of our large catalog of functional tests and an additional large codebase to measure real-world performance improvements on, as well as our commitment to providing both Bing.com users fast results and our own developers working with the latest software and tools.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This blog post was authored by Mukul Sabharwal (&lt;a href=&quot;https://twitter.com/mjsabby&quot;&gt;@mjsabby&lt;/a&gt;) from the Bing.com Engineering team.&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 20 Aug 2018 17:01:34 +0000</pubDate>
<dc:creator>sebazzz</dc:creator>
<og:type>article</og:type>
<og:title>Bing.com runs on .NET Core 2.1!</og:title>
<og:url>https://blogs.msdn.microsoft.com/dotnet/2018/08/20/bing-com-runs-on-net-core-2-1/</og:url>
<og:description></og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blogs.msdn.microsoft.com/dotnet/2018/08/20/bing-com-runs-on-net-core-2-1/</dc:identifier>
</item>
<item>
<title>Amazon&amp;#039;s electricity rate discounts have pushed up utility costs</title>
<link>https://www.bloomberg.com/news/articles/2018-08-20/amazon-isn-t-paying-its-electric-bills-you-might-be</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-08-20/amazon-isn-t-paying-its-electric-bills-you-might-be</guid>
<description>&lt;head&gt;&lt;title&gt;Terms of Service Violation&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;24&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;9.4285714285714&quot;&gt;&lt;img src=&quot;https://www.bloomberg.com/graphics/assets/img/BB-Logo-2line.svg&quot; width=&quot;310&quot;/&gt;
&lt;p&gt;Your usage has been flagged as a violation of our &lt;a href=&quot;http://www.bloomberg.com/tos&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;terms of service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For inquiries related to this message please &lt;a href=&quot;http://www.bloomberg.com/feedback&quot;&gt;contact support&lt;/a&gt;. For sales inquiries, please visit &lt;a href=&quot;http://www.bloomberg.com/professional/request-demo&quot;&gt;http://www.bloomberg.com/professional/request-demo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;If you believe this to be in error, please confirm below that you are not a robot by clicking &quot;I'm not a robot&quot; below.&lt;/h3&gt;
&lt;br/&gt;&lt;h3&gt;Please make sure your browser supports JavaScript and cookies and that you are not blocking them from loading. For more information you can review the Terms of Service and Cookie Policy.&lt;/h3&gt;
&lt;br/&gt;&lt;h3 id=&quot;block_uuid&quot;&gt;Block reference ID:&lt;/h3&gt;
&lt;/div&gt;
&lt;/body&gt;</description>
<pubDate>Mon, 20 Aug 2018 16:23:06 +0000</pubDate>
<dc:creator>petethomas</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=5a8a9120-a4d5-11e8-8ff5-25dc653127dc&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOC0wOC0yMC9hbWF6b24taXNuLXQtcGF5aW5nLWl0cy1lbGVjdHJpYy1iaWxscy15b3UtbWlnaHQtYmU=</dc:identifier>
</item>
<item>
<title>More Americans report near-constant cannabis use</title>
<link>https://www.theatlantic.com/health/archive/2018/08/americas-invisible-pot-addicts/567886/?single_page=true</link>
<guid isPermaLink="true" >https://www.theatlantic.com/health/archive/2018/08/americas-invisible-pot-addicts/567886/?single_page=true</guid>
<description>&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-0&quot;&gt;&lt;p class=&quot;dropcap&quot; dir=&quot;ltr&quot;&gt;The proliferation of retail boutiques in California did not really bother him, Evan told me, but the billboards did. Advertisements for delivery, advertisements promoting the substance for relaxation, for fun, for health. “Shop. It’s legal.” “Hello marijuana, goodbye hangover.” “It’s not a trigger,” he told me. “But it is in your face.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;When we spoke, he had been sober for a hard-fought seven weeks: seven weeks of sleepless nights, intermittent nausea, irritability, trouble focusing, and psychological turmoil. There were upsides, he said, in terms of reduced mental fog, a fatter wallet, and a growing sense of confidence that he could quit. “I don’t think it’s a ‘can’ as much as a ‘must,’” he said.&lt;/p&gt;


&lt;p dir=&quot;ltr&quot;&gt;Evan, who asked that his full name not be used for fear of professional repercussions, has a self-described cannabis-use disorder. If not necessarily because of legalization, but alongside legalization, such problems are becoming more common: The share of adults with one &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/26502112&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'0',r'None'&quot;&gt;has doubled&lt;/a&gt; since the early aughts, as the share of cannabis users who consume it daily or near-daily has jumped nearly &lt;a href=&quot;https://www.samhsa.gov/data/sites/default/files/NSDUH-FFR1-2016/NSDUH-FFR1-2016.htm#summary&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'1',r'None'&quot;&gt;50 percent&lt;/a&gt;—all “in the context of increasingly permissive cannabis legislation, attitudes, and lower risk perception,” as the National Institutes of Health &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/29885150&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'2',r'None'&quot;&gt;put it&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-1&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Public-health experts worry about the increasingly potent options available, and the striking number of constant users. “Cannabis is potentially a real public-health problem,” said Mark A. R. Kleiman, a professor of public policy at New York University. “It wasn’t obvious to me 25 years ago, when 9 percent of self-reported cannabis users over the last month reported daily or near-daily use. I always was prepared to say, ‘No, it’s not a very abusable drug. Nine percent of anybody will do something stupid.’ But that number is now [something like] 40 percent.” They argue that state and local governments are setting up legal regimes without sufficient public-health protection, with some even warning that the country is replacing one form of reefer madness with another, careening from treating cannabis as if it were as dangerous as heroin to treating it as if it were as benign as kombucha.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;But cannabis is not benign, even if it is relatively benign, compared with alcohol, opiates, and cigarettes, among other substances. Thousands of Americans are finding their own use problematic in a climate where pot products are getting more potent, more socially acceptable to use, and yet easier to come by, not that it was particularly hard before.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;For Keith Humphreys, a professor of psychiatry and behavioral sciences at Stanford University, the most compelling evidence of the deleterious effects comes from users themselves. “In large national surveys, about one in 10 people who smoke it say they have a lot of problems. They say things like, ‘I have trouble quitting. I think a lot about quitting and I can’t do it. I smoked more than I intended to. I neglect responsibilities.’ There are plenty of people who have problems with it, in terms of things like concentration, short-term memory, and motivation,” he said. “People will say, ‘Oh, that’s just you fuddy-duddy doctors.’ Actually, no. It’s millions of people who use the drug who say that it causes problems.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Users or former users I spoke with described lost jobs, lost marriages, lost houses, lost money, lost time. Foreclosures and divorces. Weight gain and mental-health problems. And one other thing: the problem of convincing other people that what they were experiencing was real. A few mentioned jokes about Doritos, and comments implying that the real issue was that they were lazy stoners. Others mentioned the common belief that you can be “psychologically” addicted to pot, but not “physically” or “really” addicted. The condition remains misunderstood, discounted, and strangely invisible, even as legalization and white-marketization pitches ahead.&lt;/p&gt;
&lt;p class=&quot;dropcap&quot; dir=&quot;ltr&quot;&gt;The country is in the midst of a volte-face on marijuana. The federal government still classifies cannabis as a Schedule I drug, with no accepted medical use. (Meth and PCP, among other drugs, are Schedule II.) Politicians still argue it is a gateway to the use of things like heroin and cocaine. The country still spends billions of dollars fighting it in a bloody and futile drug war, and still arrests more people for offenses related to cannabis than it does for all violent &lt;a href=&quot;https://www.washingtonpost.com/news/wonk/wp/2017/09/26/more-people-were-arrested-last-year-over-pot-than-for-murder-rape-aggravated-assault-and-robbery-combined/?utm_term=.1682fc802444&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'3',r'None'&quot;&gt;crimes combined&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-2&quot;&gt;
&lt;p dir=&quot;ltr&quot;&gt;Yet dozens of states have pushed ahead with legalization for medical or recreational purposes, given that for decades physicians have argued that marijuana’s health risks have been overstated and its medical uses overlooked; activists have stressed prohibition’s tremendous fiscal cost and far worse human cost; and researchers have convincingly argued that cannabis is far less dangerous than alcohol. A solid majority of Americans &lt;a href=&quot;http://www.pewresearch.org/fact-tank/2018/01/05/americans-support-marijuana-legalization/&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'4',r'None'&quot;&gt;support legalization&lt;/a&gt; nowadays.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Academics and public-health officials, though, have raised the concern that cannabis’s real risks have been overlooked or underplayed—perhaps as part of a counter-reaction to federal prohibition, and perhaps because millions and millions of cannabis users have no problems controlling their use. “Part of how legalization was sold was with this assumption that there was no harm, in reaction to the message that everyone has smoked marijuana was going to ruin their whole life,” Humphreys told me. It was a point Kleiman agreed with. “I do think that not legalization, but the legalization movement, does have a lot on its conscience now,” he said. “The mantra about how this is a harmless, natural, and non-addictive substance—it’s now known by everybody. And it’s a lie.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Thousands of businesses, as well as local governments earning tax money off of sales, are now literally invested in that lie. “The liquor companies are salivating,” Matt Karnes of GreenWave Advisors told me. “They can’t wait to come in full force.” He added that Big Pharma was targeting the medical market, with Wall Street, Silicon Valley, food businesses, and tobacco companies aiming at the recreational market.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Sellers are targeting broad swaths of the consumer market—soccer moms, recent retirees, folks looking to replace their nightly glass of chardonnay with a precisely dosed, low-calorie, and hangover-free mint. Many have consciously played up cannabis as a lifestyle product, a gift to give yourself, like a nice crystal or an antioxidant face cream. “This is not about marijuana,” one executive at the California retailer MedMen &lt;a href=&quot;https://www.cnbc.com/2018/01/04/medmens-largest-marijuana-marketing-campaign-hits-los-angeles.html&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'5',r'None'&quot;&gt;recently argued&lt;/a&gt;. “This is about the people who use cannabis for all the reasons people have used cannabis for hundreds of years. Yes, for recreation, just like alcohol, but also for wellness.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Evan started off smoking with his friends when they were playing sports or video games, lighting up to chill out after his nine-to-five as a paralegal at a law office. But that soon became couch-lock, and he lost interest in working out, going out, doing anything with his roommates. Then came a lack of motivation and the slow erosion of ambition, and law school moving further out of reach. He started smoking before work and after work. Eventually, he realized it was impossible to get through the day without it. “I was smoking anytime I had to do anything boring, and it took a long time before I realized that I wasn’t doing anything without getting stoned,” he said.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-3&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;His first attempts to reduce his use went miserably, as the consequences on his health and his life piled up. He gained nearly 40 pounds, he said, when he stopped working out and cooking his own food at home. He recognized that he was just barely getting by at work, and was continually worried about getting fired. Worse, his friends were unsympathetic to the idea that he was struggling and needed help. “[You have to] try to convince someone that something that is hurting you is hurting you,” he said.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Other people who found their use problematic or had managed to quit, none of whom wanted to use their names, described similar struggles and consequences. “I was running two companies at the time, and fitting smoking in between running those companies. Then, we sold those companies and I had a whole lot of time on my hands,” one other former cannabis user told me. “I just started sitting around smoking &lt;em&gt;all the time&lt;/em&gt;. And things just came to a halt. I was in terrible shape. I was depressed.”&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Lax regulatory standards and aggressive commercialization in some states have compounded some existing public-health risks, raised new ones, and failed to tamp down on others, experts argue. In terms of compounding risks, many cite the availability of hyper-potent marijuana products. “We’re seeing these increases in the strength of cannabis, as we are also seeing an emergence of new types of products,” such as edibles, tinctures, vape pens, sublingual sprays, and concentrates, Ziva Cooper, an associate professor of clinical neurobiology in the Department of Psychiatry at Columbia University Medical Center, told me. “A lot of these concentrates can have up to 90 percent THC,” she said, whereas the kind of flower you could get 30 years ago was far, far weaker. Scientists are not sure how such high-octane products affect people’s bodies, she said, but worry that they might have more potential for raising tolerance, introducing brain damage, and inculcating dependence.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;As for new risks: In many stores, budtenders are providing medical advice with no licensing or training whatsoever. “I’m most scared of the advice to smoke marijuana during pregnancy for cramps,” said Humphreys, arguing that sellers were providing recommendations with no scientific backing, good or bad, at all.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;In terms of long-standing risks, the lack of federal involvement in legalization has meant that marijuana products are not being safety-tested like pharmaceuticals; measured and dosed like food products; subjected to agricultural-safety and pesticide standards like crops; and held to labeling standards like alcohol. (Different states have different rules and testing regimes, complicating things further.)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Health experts also cited an uncomfortable truth about allowing a vice product to be widely available, loosely regulated, and fully commercialized: Heavy users will make up a huge share of sales, with businesses wanting them to buy more and spend more and use more, despite any health consequences.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-4&quot;&gt;
&lt;p dir=&quot;ltr&quot;&gt;“The reckless way that we are legalizing marijuana so far is mind-boggling from a public-health perspective,” Kevin Sabet, an Obama administration official and a founder of the nonprofit Smart Approaches to Marijuana, told me. “The issue now is that we have lobbyists, special interests, and people whose motivation is to make money that are writing all of these laws and taking control of the conversation.”&lt;/p&gt;
&lt;p class=&quot;dropcap&quot; dir=&quot;ltr&quot;&gt;This is not to say that prohibition is a more attractive policy, or that legalization has proven to be a public-health disaster. “The big-picture view is that the vast majority of people who use cannabis are not going to be problematic users,” said Jolene Forman, an attorney at the Drug Policy Alliance. “They’re not going to have a cannabis-use disorder. They’re going to have a healthy relationship with it. And criminalization actually increases the harms related to cannabis, and so having a strictly regulated market where there can be limits on advertising, where only adults can purchase cannabis, and where you’re going to get a wide variety of products makes sense.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Still, strictly regulated might mean more strictly regulated than today, at least in some places, drug-policy experts argue. “Here, what we’ve done is we’ve copied the alcohol industry fully formed, and then on steroids with very minimal regulation,” Humphreys said. “The oversight boards of a number of states are the industry themselves. We’ve learned enough about capitalism to know that’s very dangerous.”&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;A number of policy reforms might tamp down on problem use and protect consumers, without quashing the legal market or pivoting back to prohibition and all its harms. One extreme option would be to require markets to be noncommercial: The District of Columbia, for instance, does not allow recreational sales, but does allow home cultivation and the gifting of marijuana products among adults. “If I got to pick a policy, that would probably be it,” Kleiman told me. “That would be a fine place to be if we were starting from prohibition, but we are starting from patchwork legalization. As the &lt;a href=&quot;http://gregorydcurtis.com/gcurtis-6/&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'6',r'None'&quot;&gt;Vermont farmer says&lt;/a&gt;, I don’t think you can get there from here. I fear its time has passed. It’s generally true that the drug warriors have never missed an opportunity to miss an opportunity.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;There’s no shortage of other reasonable proposals, many already in place or under consideration in some states. The government could run &lt;a href=&quot;http://www.chicagotribune.com/business/ct-biz-canada-legal-cannabis-20180621-story.html&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'7',r'None'&quot;&gt;marijuana stores&lt;/a&gt;, as in Canada. States could require budtenders to have some training or to refrain from making medical claims. They could ask users to set a monthly THC purchase cap and remain under it. They could cap the amount of THC in &lt;a href=&quot;https://www.sacbee.com/news/state/california/california-weed/article148681179.html&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'8',r'None'&quot;&gt;products&lt;/a&gt;, and bar producers from making edibles that are attractive to kids, like candies. A ban or limits on marijuana advertising are also options, as is requiring cannabis dispensaries to post public-health information.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-5&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Then, there are THC taxes, designed to hit heavy users the hardest. Some drug-policy experts argue that such levies would just push people from marijuana to alcohol, with dangerous health consequences. “It would be like saying, ‘Let’s let the beef and pork industries market and do whatever they wish, but let’s have much tougher restrictions on tofu and seitan,’” said Mason Tvert of the Marijuana Policy Project. “In light of the current system, where alcohol is so prevalent and is a more harmful substance, it is bad policy to steer people toward that.” Yet reducing the commercial appeal of all vice products—cigarettes, alcohol, marijuana—is an option, if not necessarily a popular one.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Perhaps most important might be reintroducing some reasonable skepticism about cannabis, especially until scientists have a better sense of the health effects of high-potency products, used frequently. Until then, listening to and believing the hundreds of thousands of users who argue marijuana is not always benign might be a good start.&lt;/p&gt;
&lt;section class=&quot;c-letters-cta&quot;&gt;&lt;p class=&quot;c-letters-cta__text&quot;&gt;We want to hear what you think about this article. &lt;a href=&quot;https://www.theatlantic.com/contact/letters/&quot; class=&quot;c-letters-cta__link&quot;&gt;Submit a letter&lt;/a&gt; to the editor or write to letters@theatlantic.com.&lt;/p&gt;
&lt;/section&gt;

&lt;address id=&quot;article-writer-0&quot; class=&quot;c-article-writer lazyload&quot; data-author-id=&quot;16022&quot; data-omni-click=&quot;r'article',r'',d,r'annie-lowrey',@href&quot; data-include=&quot;css:https://cdn.theatlantic.com/assets/static/a/frontend/dist/theatlantic/css/components/article-writer.38f8b806e515.css&quot; itemprop=&quot;author&quot; itemtype=&quot;https://schema.org/Person&quot; itemscope=&quot;&quot;/&gt;
&lt;div class=&quot;c-article-writer__image&quot; itemprop=&quot;image&quot; itemtype=&quot;http://schema.org/ImageObject&quot; itemscope=&quot;&quot;&gt;


&lt;a class=&quot;o-media__object&quot; href=&quot;https://www.theatlantic.com/author/annie-lowrey/&quot; title=&quot;Annie Lowrey's writer page&quot; data-omni-click=&quot;inherit&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;c-article-writer__img o-media__img&quot; src=&quot;https://cdn.theatlantic.com/assets/media/None/headshot_copy-1/200.jpg?mod=1522336366&quot; alt=&quot;&quot; itemprop=&quot;contentUrl&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;c-article-writer__img o-media__img lazyload&quot; data-src=&quot;https://cdn.theatlantic.com/assets/media/None/headshot_copy-1/200.jpg?mod=1522336366&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;c-article-writer__content&quot;&gt;
&lt;div class=&quot;c-article-writer__bio&quot; itemprop=&quot;description&quot;&gt;&lt;a href=&quot;https://www.theatlantic.com/author/annie-lowrey/&quot; class=&quot;author-link&quot; data-omni-click=&quot;inherit&quot;&gt;Annie Lowrey&lt;/a&gt; is a contributing editor at &lt;em&gt;The Atlantic&lt;/em&gt;, covering economic policy.&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;</description>
<pubDate>Mon, 20 Aug 2018 14:41:37 +0000</pubDate>
<dc:creator>TheBeardKing</dc:creator>
<og:title>America’s Invisible Pot Addicts</og:title>
<og:type>article</og:type>
<og:url>https://www.theatlantic.com/health/archive/2018/08/americas-invisible-pot-addicts/567886/</og:url>
<og:image>https://cdn.theatlantic.com/assets/media/img/mt/2018/08/RTX5UD1F/facebook.jpg?1534728781</og:image>
<og:description>More and more Americans are reporting near-constant cannabis use, as legalization forges ahead.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theatlantic.com/health/archive/2018/08/americas-invisible-pot-addicts/567886/?single_page=true</dc:identifier>
</item>
<item>
<title>Introduction to Augur, an open-source, decentralized betting marketplace</title>
<link>https://litepaper.com/resources/intro-to-augur</link>
<guid isPermaLink="true" >https://litepaper.com/resources/intro-to-augur</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://litepaper.com/resources/intro-to-augur&quot;&gt;https://litepaper.com/resources/intro-to-augur&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17799346&quot;&gt;https://news.ycombinator.com/item?id=17799346&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 318&lt;/p&gt;&lt;p&gt;# Comments: 147&lt;/p&gt;</description>
<pubDate>Mon, 20 Aug 2018 12:25:21 +0000</pubDate>
<dc:creator>ilanhz</dc:creator>
<og:image>https://s3.eu-west-2.amazonaws.com/litepaper-public-images/litepaper-icon-square-small.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://litepaper.com/resources/intro-to-augur?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Flatpak 1.0 Released, Ready for Prime Time</title>
<link>https://flatpak.org/press/2018-08-20-flatpak-1.0/</link>
<guid isPermaLink="true" >https://flatpak.org/press/2018-08-20-flatpak-1.0/</guid>
<description>&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://flatpak.org/img/delivery_truck.png&quot; class=&quot;fright&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stockholm, Sweden, 20 August 2018&lt;/strong&gt;: Flatpak, the Linux desktop app distribution framework, reached an important milestone today, with the release of its 1.0 version.&lt;/p&gt;
&lt;p&gt;For those who don't know, once an app has been built as a Flatpak, it can be installed on virtually any Linux distribution. This model is designed to make Linux a more attractive option for desktop app developers, and provides developers with a more stable platform on which to build and develop.&lt;/p&gt;
&lt;p&gt;Discussing the release, Flatpak’s lead developer, Alexander Larsson, has said: “A lot of work has gone into Flatpak 1.0 and we're confident that it's ready for wider use. Flatpak's goal has always been to revolutionize the Linux ecosystem and this is an important step towards that.” A 1.0 release generally marks the point at which software has become “feature complete”, so the fact that the developers are calling this a 1.0 is significant. But what does it mean in practice?&lt;/p&gt;
&lt;p&gt;Flatpak 1.0 comes with a collection of new features that application developers can take advantage of. Developers can mark versions of their apps as end of life, to indicate when they are no longer supported. There’s a new mechanism for apps to restart themselves. The command line interface has had a raft of improvements, including new commands and options.&lt;/p&gt;
&lt;p&gt;Furthermore, Flatpak has matured since its last major stable release in October 2017. The new version promises to be faster and more reliable. There's also been some internal tidying up and reorganization. (This isn't so interesting to users and app developers, but it makes Flatpak that bit easier to integrate with your favorite Linux distro.)&lt;/p&gt;
&lt;p&gt;However, some of the biggest changes have been in the Flatpak ecosystem. To coincide with the release of Flatpak 1.0, the Flatpak developers are also taking the beta label off their Flathub service. Flathub is the central store for Flatpak apps. It is both a repository that can be used by Linux desktops, and a &lt;a href=&quot;https://flathub.org/&quot;&gt;website that users can use to browse and install apps&lt;/a&gt;. It had a quiet, soft launch back in May 2017 and has seen rapid growth in the number of apps and users since then.&lt;/p&gt;
&lt;p&gt;Flathub has become a major feature for developers, as LibreOffice’s Stephan Bergmann made clear: “Flatpak has come a long way since we first started using it; nowadays we can type a trivial command to get the latest LibreOffice 6.1 built and published on Flathub automatically. What keeps impressing me is the breadth and depth of the bug reports we receive for the LibreOffice Flatpak version. It shows that people are using it in all kinds of scenarios.”&lt;/p&gt;
&lt;p&gt;Another significant development in the Flatpak ecosystem relates to their “runtimes” - the platforms that applications are built and run against. The main “Freedesktop” runtime that is used by most Flatpak apps is having a major release to coincide with the Flatpak 1.0. This 18.08 release has a new lifecycle policy, which includes a regular release schedule and guarantees for support periods and security updates. This gives Flatpak’s app platforms a similar level of support to commercial operating system offerings.&lt;/p&gt;
&lt;p&gt;Flatpak's developers also point to other areas where the framework has matured. Their &lt;a href=&quot;http://docs.flatpak.org/en/latest/&quot;&gt;developer documentation&lt;/a&gt; has been rewritten and is much more complete. Flatpak’s website also includes &lt;a href=&quot;https://flatpak.org/setup/&quot;&gt;tutorials for setting up Flatpak on a lot more Linux distributions&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;The big question is what this means for the Linux landscape. Last November, Linux Mint, one of the larger Linux distributions, started using Flatpak by default, and Fedora is planning to start building its own Flatpaks very soon. It might just be that a tipping point has been reached.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This press release, including all content and media, can be freely used and modified without the need for attribution.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 20 Aug 2018 12:25:15 +0000</pubDate>
<dc:creator>alexlarsson</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://flatpak.org/press/2018-08-20-flatpak-1.0/</dc:identifier>
</item>
<item>
<title>Telling the Truth About Defects in Technology Should Never Be Illegal</title>
<link>https://www.eff.org/deeplinks/2018/08/telling-truth-about-defects-technology-should-never-ever-ever-be-illegal-ever</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2018/08/telling-truth-about-defects-technology-should-never-ever-ever-be-illegal-ever</guid>
<description>&lt;p&gt;Congress has never made a law saying, &quot;Corporations should get to decide who gets to publish truthful information about defects in their products,&quot;— and the First Amendment wouldn't allow such a law — but that hasn't stopped corporations from conjuring one out of thin air, and then defending it as though it was a natural right they'd had all along.&lt;/p&gt;
&lt;p&gt;Some background: in 1986, Ronald Reagan, spooked by the Matthew Broderick movie &lt;em&gt;Wargames&lt;/em&gt; (true story!) worked with Congress to pass a sweeping cybercrime bill called the &lt;a href=&quot;https://www.eff.org/issues/cfaa&quot;&gt;Computer Fraud and Abuse Act&lt;/a&gt; (CFAA) that was exceedingly sloppily drafted. CFAA makes it a felony to &quot;exceed[] authorized access&quot; on someone else's computer in many instances.&lt;/p&gt;
&lt;p&gt;Fast forward to 1998, when Bill Clinton and his Congress enacted the Digital Millennium Copyright Act (DMCA), a giant, gnarly hairball of digital copyright law that included &lt;a href=&quot;https://www.eff.org/issues/drm&quot;&gt;section 1201&lt;/a&gt;, which bans bypassing any &quot;technological measure&quot; that &quot;effectively controls access&quot; to copyrighted works, or &quot;traffic[ing]&quot; in devices or services that bypass digital locks.&lt;/p&gt;
&lt;p&gt;Notice that neither of these laws bans disclosure of defects, including security disclosures! But decades later, corporate lawyers and federal prosecutors have constructed a body of legal precedents that twist these overbroad laws into a rule that effectively gives corporations the power to decide who gets to tell the truth about flaws and bugs in their products.&lt;/p&gt;
&lt;p&gt;Businesses and prosecutors have brought civil and criminal actions against researchers and whistleblowers who violated a company's terms of service in the process of discovering a defect. The argument goes like this: &quot;Our terms of service ban probing our system for security defects. When you login to our server for that purpose, you 'exceed your authorization,' and that violates the Computer Fraud and Abuse Act.&quot;&lt;/p&gt;
&lt;p&gt;Likewise, businesses and prosecutors have used Section 1201 of the DMCA to attack researchers who exposed defects in software and hardware. Here's how that argument goes: &quot;We designed our products with a lock that you have to get around to discover the defects in our software. Since our software is copyrighted, that lock is an 'access control for a copyrighted work' and that means that your research is prohibited, and any publication you make explaining how to replicate your findings is illegal speech, because helping other people get around our locks is 'trafficking.'&quot;&lt;/p&gt;
&lt;p&gt;The First Amendment would certainly not allow Congress to enact a law that banned making true, technical disclosures. Even (especially!) if those disclosures revealed security defects that the public needed to be aware of before deciding whether to trust a product or service.&lt;/p&gt;
&lt;p&gt;But the presence of these laws has convinced the tech industry — and corporations that have added 'smart' tech to their otherwise 'dumb' products — that it's only natural that they should be the sole custodians of the authority to embarrass or inconvenience them. The worst of these actors use threats of invoking CFAA and DMCA 1201 to silence researchers altogether, so the first time you discover that you've been trusting a defective product is when it is so widely exploited by criminals and grifters that it's impossible to keep the problem from becoming widely known.&lt;/p&gt;
&lt;p&gt;Even the best, most responsible corporate actors get this wrong. Tech companies like &lt;a href=&quot;https://www.mozilla.org/en-US/about/governance/policies/security-group/bugs/&quot;&gt;Mozilla&lt;/a&gt;, &lt;a href=&quot;https://boingboing.net/2018/03/22/manufacturers-veto.html&quot;&gt;Dropbox&lt;/a&gt; and, most recently, &lt;a href=&quot;https://bugcrowd.com/tesla&quot;&gt;Tesla&lt;/a&gt;, have crafted &quot;coordinated disclosure&quot; policies in which they make sincere and legally enforceable promises to take security disclosures seriously and act on them within a defined period, and they even promise not to use laws like DMCA 1201 to retaliate against security researchers who follow their guidelines.&lt;/p&gt;
&lt;p&gt;This is a great start, but it's a late and limited solution to a much bigger problem.&lt;/p&gt;
&lt;p&gt;The point is that almost every company is a &quot;tech company&quot; — from &lt;a href=&quot;https://www.wired.com/story/pacemaker-hack-malware-black-hat/&quot;&gt;medical implant vendors&lt;/a&gt; to &lt;a href=&quot;https://www.pbs.org/newshour/nation/an-11-year-old-changed-election-results-on-a-replica-florida-state-website-in-under-10-minutes&quot;&gt;voting machine companies&lt;/a&gt; — and not all of them are as upstanding and public-spirited as Mozilla.&lt;/p&gt;
&lt;p&gt;Many of these companies do have &quot;coordinated disclosure&quot; policies by which they hope to tempt security researchers into coming to them first when they discover problems with their products and services. But these companies don't make these policies out of the goodness of their hearts: those policies exist &lt;em&gt;because they're the companies' best hope of keeping security researchers from embarrassing them and leaving them scrambling by just publishing the bug without warning&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If corporations can simply silence researchers who don't play ball, we should expect them to do so. There is no shortage of CEOs who are lulling themselves to sleep tonight with fantasies about getting to shut their critics up.&lt;/p&gt;
&lt;p&gt;EFF is currently &lt;a href=&quot;https://www.eff.org/press/releases/eff-lawsuit-takes-dmca-section-1201-research-and-technology-restrictions-violate&quot;&gt;suing the US government to invalidate DMCA 1201&lt;/a&gt; and the ACLU is &lt;a href=&quot;https://www.aclu.org/cases/sandvig-v-sessions-challenge-cfaa-prohibition-uncovering-racial-discrimination-online&quot;&gt;trying to chip away at CFAA&lt;/a&gt;, and there will come a day when we succeed, because the idea of suppressing bug reports (even ones made in disrespectful or rude ways) is totally incompatible with the First Amendment.&lt;/p&gt;
&lt;p&gt;Rather than crafting a disclosure policy that says &quot;We'll stay away from these unjust and absurd interpretations of these badly written laws, provided you only tell the truth in ways we approve of,&quot; companies that want to lead by example could do so by putting something like this in their disclosure policies:&lt;/p&gt;
&lt;blockquote readability=&quot;25&quot;&gt;
&lt;p&gt;We believe that conveying truthful warnings about defects in systems is always legal. Of course, we have a strong preference for you to use our disclosure system [LINK] where we promise to investigate your bugs and fix them in a timely manner. But we don't believe we have the right to force you to use our system.&lt;/p&gt;&lt;p&gt;Accordingly, we promise to NEVER invoke any statutory right — for example, rights we are granted under trade secret law, anti-hacking law, or anti-circumvention law — against ANYONE who makes a truthful disclosure about a defect in one of our products or services, regardless of the manner of that disclosure.&lt;/p&gt;&lt;p&gt;We really do think that the best way to keep our customers safe and our products bug-free is to enter into a cooperative relationship with security researchers and that's why our disclosure system exists and we really hope you'll use it, but we &lt;em&gt;don't&lt;/em&gt; think we should have the right to force you to use it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Companies should not rely on these laws to silence security researchers who displease them with the time and manner of their truthful disclosures — if their threats ever materialize into full-blown lawsuits, there's a reasonable chance that they'll find themselves facing down public-spirited litigators (ahem) who will use those suits as a fast-track to overturning these laws in the courts.&lt;/p&gt;
&lt;p&gt;But while we wait for the slow wheels of justice to turn, the specter of legal retaliation haunts the best and most public-spirited security researchers (the researchers who work for cyber-criminals and state surveillance contractors don't have to worry about these laws, because they never make their findings public). That is bad for all of us, because for every Tesla, Dropbox and Mozilla, there are a thousand puny tyrants who are using these good-citizen companies' backhanded insistence that disclosure should be subject to  their corporate approval to intimidate their own critics into silence.&lt;/p&gt;
&lt;p&gt;Those intimidated researchers? They've discovered true facts about why we shouldn't trust systems with our data, our finances, our personal communications, the security of our homes and businesses, and even our lives.&lt;/p&gt;
&lt;p&gt;EFF has &lt;a href=&quot;https://www.eff.org/press/releases/eff-lawsuit-takes-dmca-section-1201-research-and-technology-restrictions-violate&quot;&gt;sued the US government to overturn DMCA 1201&lt;/a&gt; and we &lt;a href=&quot;https://www.eff.org/deeplinks/2018/02/eff-vs-iot-drm-omg&quot;&gt;just asked the US Copyright Office&lt;/a&gt; to reassure security researchers that DMCA 1201 does not prevent them from telling the truth.&lt;/p&gt;
&lt;p&gt;We're discussing all this in a &lt;a href=&quot;https://www.reddit.com/r/IAmA/&quot;&gt;Reddit AMA&lt;/a&gt; next Tuesday, August 21, from 12-3PM Pacific (3-6PM Eastern). We hope you'll come and join us.&lt;/p&gt;
</description>
<pubDate>Mon, 20 Aug 2018 11:23:05 +0000</pubDate>
<dc:creator>severine</dc:creator>
<og:type>article</og:type>
<og:title>Telling the Truth About Defects in Technology Should Never, Ever, Ever Be Illegal. EVER.</og:title>
<og:url>https://www.eff.org/deeplinks/2018/08/telling-truth-about-defects-technology-should-never-ever-ever-be-illegal-ever</og:url>
<og:description>Congress has never made a law saying, &quot;Corporations should get to decide who gets to publish truthful information about defects in their products,&quot;— and the First Amendment wouldn't allow such a law — but that hasn't stopped corporations from conjuring one out of thin air, and then defending it as...</og:description>
<og:image>https://www.eff.org/files/banner_library/icon-security-2_0.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2018/08/telling-truth-about-defects-technology-should-never-ever-ever-be-illegal-ever</dc:identifier>
</item>
<item>
<title>Backyourstack: discover and sponsor your open-source dependencies</title>
<link>https://backyourstack.com/</link>
<guid isPermaLink="true" >https://backyourstack.com/</guid>
<description>&lt;p class=&quot;jsx-1912683209 description&quot;&gt;Discover the open source projects your organization is using that need financial support.&lt;/p&gt;

&lt;p class=&quot;jsx-1912683209 uploadDescription desktop&quot;&gt;If you want to analyze non-public repositories, &lt;a class=&quot;jsx-1912683209&quot; href=&quot;https://backyourstack.com/login?next=%2F&quot;&gt;sign in with your GitHub account&lt;/a&gt; or simply upload &lt;em class=&quot;jsx-1912683209&quot;&gt;package.json&lt;/em&gt; and &lt;em class=&quot;jsx-1912683209&quot;&gt;composer.json&lt;/em&gt; files. The uploaded files will not be shared with anyone and will be deleted when your session expire.&lt;/p&gt;
&lt;p class=&quot;jsx-1912683209 uploadDescription mobile&quot;&gt;If you want to analyze non-public repositories, &lt;a class=&quot;jsx-1912683209&quot; href=&quot;https://backyourstack.com/login?next=%2F&quot;&gt;sign in with your GitHub account&lt;/a&gt; You can also simply upload &lt;em class=&quot;jsx-1912683209&quot;&gt;package.json&lt;/em&gt; and &lt;em class=&quot;jsx-1912683209&quot;&gt;composer.json&lt;/em&gt; files, use a desktop browser for that.&lt;/p&gt;
&lt;div class=&quot;jsx-1912683209 uploadContainer&quot;&gt;
&lt;div class=&quot;dropZoneComponent&quot; aria-disabled=&quot;false&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;jsx-3388661957 text&quot; readability=&quot;32&quot;&gt;
&lt;p class=&quot;jsx-3388661957&quot;&gt;Simply drag'n'drop files&lt;br class=&quot;jsx-3388661957&quot;/&gt;
or click to select files to upload.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3388661957 uploadFeedback float&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;jsx-3388661957&quot;&gt;There was an error while uploading your files. Only &lt;em class=&quot;jsx-3388661957&quot;&gt;package.json&lt;/em&gt; and &lt;em class=&quot;jsx-3388661957&quot;&gt;composer.json&lt;/em&gt; are accepted right now.&lt;/p&gt;
&lt;p class=&quot;jsx-3388661957&quot;&gt;Please try again. If the problem persists, please contact us.&lt;/p&gt;
&lt;/div&gt;
&lt;input type=&quot;file&quot; accept=&quot;application/json&quot; multiple=&quot;multiple&quot; autocomplete=&quot;off&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 20 Aug 2018 07:12:18 +0000</pubDate>
<dc:creator>vvoyer</dc:creator>
<og:image>https://backyourstack.com/static/img/logo-og-1.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://backyourstack.com/</dc:identifier>
</item>
<item>
<title>Parallel Programming with Python</title>
<link>https://chryswoods.com/parallel_python/index.html</link>
<guid isPermaLink="true" >https://chryswoods.com/parallel_python/index.html</guid>
<description>&lt;p&gt;Welcome to a short course that will teach you how to write Python scripts that can take advantage of the processing power of multicore processors and large compute clusters. While this course is based on Python, the core ideas of functional programming and parallel functional programming are applicable to a wide range of languages.&lt;/p&gt;
&lt;p&gt;To follow this course you should already have a good basic understanding of Python, e.g. loops, functions, containers and classes. This course will rely on you understanding the material presented in my &lt;a href=&quot;https://chryswoods.com/beginning_python/README.html&quot;&gt;Beginning Python&lt;/a&gt; and &lt;a href=&quot;https://chryswoods.com/intermediate_python/README.html&quot;&gt;Intermediate Python&lt;/a&gt; courses.&lt;/p&gt;
&lt;p&gt;This is a short course that will give you a taste of functional programming and how it can be used to write efficient parallel code. Please work through the course at your own pace. Python is best learned by using it, so please copy out and play with the examples provided, and also have a go at the exercises.&lt;/p&gt;
&lt;p&gt;NOTE - this course will present parallel python as implemented in Python 2. There are some small differences between Python 2 and 3 for parallel Python that are &lt;a href=&quot;https://chryswoods.com/parallel_python/python2to3.html&quot;&gt;described here&lt;/a&gt;. Presenting these differences during the course itself would be distracting. Please use a Python 2 interpreter to complete this course, and then, if you are interested, take a look at the &lt;a href=&quot;https://chryswoods.com/parallel_python/python2to3.html&quot;&gt;list of small changes in Python 3&lt;/a&gt; to see how things have changed (and got a little more complex).&lt;/p&gt;
&lt;hr/&gt;&lt;hr/&gt;
</description>
<pubDate>Mon, 20 Aug 2018 05:06:05 +0000</pubDate>
<dc:creator>uaaa</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://chryswoods.com/parallel_python/index.html</dc:identifier>
</item>
<item>
<title>Um – Create your own man pages so you can remember how to do stuff</title>
<link>https://github.com/sinclairtarget/um</link>
<guid isPermaLink="true" >https://github.com/sinclairtarget/um</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;code&gt;um&lt;/code&gt; is a command-line utility for creating and maintaining your own set of &lt;code&gt;man&lt;/code&gt;-like help pages.&lt;/p&gt;
&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;Have you seen how long &lt;code&gt;curl&lt;/code&gt;'s man page is? How many times have you gone through it trying to figure out how to make a POST request?&lt;/p&gt;
&lt;p&gt;Man pages are written to be comprehensive, but what humans really need are the bullet points. Use &lt;code&gt;um&lt;/code&gt; to write your own &lt;code&gt;man&lt;/code&gt;-like help pages that reflect what you've learned about a command so far. That way you have an easy reference for the things you already know are useful.&lt;/p&gt;
&lt;h3&gt;An Example&lt;/h3&gt;
&lt;p&gt;Say you've just reminded yourself how &lt;code&gt;grep&lt;/code&gt; works for the third time this month. You'd like to hold on to that precious knowledge so you don't have to go digging through the &lt;code&gt;grep&lt;/code&gt; man page again. You can do that with &lt;code&gt;um&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ um edit grep
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will open your text editor, allowing you to record everything you want to remember about &lt;code&gt;grep&lt;/code&gt;. Once you've saved what you've written, you can pull it up again as easily as you would any man page:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ um grep
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will open your pager with whatever you might have for &lt;code&gt;grep&lt;/code&gt;, say:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
GREP(shell)                        Um Pages                        GREP(shell)


NAME
       grep -- Print lines matching a pattern

SYNOPSIS
       grep [options ...] [file ...]

REGEX SYNTAX
       .      Matches any character.

       ^      Anchors pattern to beginning of line.

       $      Anchors pattern to end of line.

       []     Character set.  ^ for negation, - for range.

OPTIONS
       -r     Recursively search listed directories.

       -E     Force grep to behave as egrep, accepting extended REGEXes.



Um Pages                      September 26, 2017                   GREP(shell)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;um&lt;/code&gt; supports several additional sub-commands. Among them are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;um list&lt;/code&gt;, which lists all the um pages you already have.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;um rm&lt;/code&gt;, which removes an existing um page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;um topic&lt;/code&gt;, which switches between topic namespaces for your pages, allowing you to keep a separate set of um pages for css properties, for example.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Um Page Format&lt;/h3&gt;
&lt;p&gt;Man pages were &lt;a href=&quot;http://twobithistory.org/2017/09/28/the-lineage-of-man.html&quot; rel=&quot;nofollow&quot;&gt;historically typeset using the &lt;code&gt;roff&lt;/code&gt; typesetting system&lt;/a&gt;. &lt;code&gt;roff&lt;/code&gt; was basically an early LaTeX. Writing man pages using &lt;code&gt;roff&lt;/code&gt; today is not very fun or intuitive.&lt;/p&gt;
&lt;p&gt;Happily, &lt;code&gt;pandoc&lt;/code&gt; can be used to convert Markdown documents to &lt;code&gt;roff&lt;/code&gt;-like man pages. By default, &lt;code&gt;um&lt;/code&gt; expects you to write your um pages in Markdown so that it can convert them and pass them to the &lt;code&gt;man&lt;/code&gt; program to view. You can, however, elect to just write your um pages as &lt;code&gt;.txt&lt;/code&gt; files and view them without going through the &lt;code&gt;man&lt;/code&gt; program.&lt;/p&gt;
&lt;p&gt;Below is the Markdown source that produced the &lt;code&gt;grep&lt;/code&gt; listing above. Except for the first three lines, it's all just Markdown:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-gfm&quot;&gt;
&lt;pre&gt;
% GREP(shell) Um Pages | Um Pages
%
% September 26, 2017
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&amp;lt;!--&lt;/span&gt; ^ The Pandoc &quot;title block&quot; which provides metadata about the page. &lt;span class=&quot;pl-c&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-mh&quot;&gt;&lt;span class=&quot;pl-mh&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-mh&quot;&gt; &lt;/span&gt;NAME &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&amp;lt;!--&lt;/span&gt; Top-level Markdown headings become man section headings. &lt;span class=&quot;pl-c&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
grep -- Print lines matching a pattern

&lt;span class=&quot;pl-mh&quot;&gt;&lt;span class=&quot;pl-mh&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-mh&quot;&gt; &lt;/span&gt;SYNOPSIS&lt;/span&gt;
&lt;span class=&quot;pl-mb&quot;&gt;**grep**&lt;/span&gt; [options ...] &amp;lt;pattern&amp;gt; [file ...]

&lt;span class=&quot;pl-mh&quot;&gt;&lt;span class=&quot;pl-mh&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-mh&quot;&gt; &lt;/span&gt;REGEX SYNTAX&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&amp;lt;!--&lt;/span&gt; Here we're using a &quot;definition list&quot; to get that man page look. &lt;span class=&quot;pl-c&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
.
: Matches any character.

^
: Anchors pattern to beginning of line.

$
: Anchors pattern to end of line.

[]
: Character set. ^ for negation, - for range.

&lt;span class=&quot;pl-mh&quot;&gt;&lt;span class=&quot;pl-mh&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-mh&quot;&gt; &lt;/span&gt;OPTIONS&lt;/span&gt;
-r
: Recursively search listed directories.

-E
: Force grep to behave as egrep, accepting extended REGEXes.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/sinclairtarget/um#config&quot;&gt;Configuration&lt;/a&gt; below for more information on changing the default um page format. See the &lt;a href=&quot;https://pandoc.org/MANUAL.html#pandocs-markdown&quot; rel=&quot;nofollow&quot;&gt;Pandoc Manual&lt;/a&gt; for more information about Pandoc's flavor of Markdown and the formatting options available to you when you are writing a man page in Markdown.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;um&lt;/code&gt;'s own &lt;a href=&quot;https://github.com/sinclairtarget/um/blob/master/doc&quot;&gt;man pages&lt;/a&gt; are written in Markdown and converted using Pandoc, so they could also make a good reference.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;um&lt;/code&gt; is currently available only for MacOS.&lt;/p&gt;
&lt;p&gt;You can install &lt;code&gt;um&lt;/code&gt; via &lt;a href=&quot;http://brew.sh/&quot; rel=&quot;nofollow&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ brew install sinclairtarget/wst/um
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A bash completion script for &lt;code&gt;um&lt;/code&gt; is installed to &lt;code&gt;/usr/local/etc/bash_completion.d&lt;/code&gt;, assuming you're using the default &lt;code&gt;brew&lt;/code&gt; prefix. You may need to add the following lines to your &lt;code&gt;~/.bash_profile&lt;/code&gt; to enable the completion:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;if [ -f $(brew --prefix)/etc/bash_completion.d/um-completion.sh ]; then
  . $(brew --prefix)/etc/bash_completion.d/um-completion.sh
fi
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Help&lt;/h2&gt;
&lt;p&gt;Refer to &lt;code&gt;um help&lt;/code&gt; for comprehensive documentation of the sub-commands and options available for &lt;code&gt;um&lt;/code&gt;. Man pages are also available.&lt;/p&gt;

&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;You can configure &lt;code&gt;um&lt;/code&gt; using a file called &lt;code&gt;umconfig&lt;/code&gt; placed in a folder called &lt;code&gt;.um&lt;/code&gt; in your home directory. The syntax for setting an option is as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;option&amp;gt; = &amp;lt;value&amp;gt;
e.g.
pager = less
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can set values for &lt;code&gt;pager&lt;/code&gt;, &lt;code&gt;editor&lt;/code&gt;, &lt;code&gt;default_topic&lt;/code&gt;, &lt;code&gt;pages_directory&lt;/code&gt;, and &lt;code&gt;pages_ext&lt;/code&gt;. The defaults for these options are &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;vi&lt;/code&gt;, &lt;code&gt;shell&lt;/code&gt;, &lt;code&gt;~/.um&lt;/code&gt;, and &lt;code&gt;.md&lt;/code&gt; respectively. Before falling back to the defaults, &lt;code&gt;um&lt;/code&gt; will attempt to read the values for &lt;code&gt;pager&lt;/code&gt; and &lt;code&gt;editor&lt;/code&gt; from the shell environment (i.e. the &lt;code&gt;PAGER&lt;/code&gt; and &lt;code&gt;EDITOR&lt;/code&gt; environment variables) if they are not specified in &lt;code&gt;umconfig&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;pager&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;less&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&quot;Use this pager to view um pages.&quot;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;editor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&quot;Use this editor to edit um pages.&quot;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;default_topic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current topic if none is set.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;pages_directory&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~/.um&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Where to store um pages.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;pages_ext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.md&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Unless &lt;code&gt;.md&lt;/code&gt;, just the extension for your um pages.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The &lt;code&gt;pager&lt;/code&gt; configuration option is only used when &lt;code&gt;pages_ext&lt;/code&gt; is not &lt;code&gt;.md&lt;/code&gt; (the default). When &lt;code&gt;pages_ext&lt;/code&gt; is &lt;code&gt;.md&lt;/code&gt;, then &lt;code&gt;um&lt;/code&gt; runs the pages through &lt;code&gt;pandoc&lt;/code&gt; before passing them to &lt;code&gt;man&lt;/code&gt;. The pager used by &lt;code&gt;man&lt;/code&gt; is determined by the &lt;code&gt;PAGER&lt;/code&gt; and &lt;code&gt;MANPAGER&lt;/code&gt; environment variables. See the man page for &lt;code&gt;man&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;So, if you wanted to store your um pages in your Dropbox folder, and you prefer emacs to vim, your config file might look like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;editor = emacs
pages_directory = /Users/myusername/Dropbox/um
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can print the current configuration using &lt;code&gt;um config&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Page Templating&lt;/h2&gt;
&lt;p&gt;If you place a file called &lt;code&gt;template.md&lt;/code&gt; in &lt;code&gt;~/.um&lt;/code&gt;, that file will serve as the basis for any new um pages you create (when &lt;code&gt;pages_ext&lt;/code&gt; is set to &lt;code&gt;.md&lt;/code&gt;). If you have &lt;code&gt;pages_ext&lt;/code&gt; set to something else, perhaps &lt;code&gt;.txt&lt;/code&gt;, then you should create a template file called &lt;code&gt;template.txt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The template file is preprocessed so that the following variables are replaced before the file is used to create a new um page:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Substitution&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;$name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the page, which you specify when you call &lt;code&gt;um edit &amp;lt;page name&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;$NAME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The same as above, but uppercase.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;$topic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the current topic.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;$time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The current time in RFC2822 format.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;$date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The current date as &lt;em&gt;Month&lt;/em&gt; &lt;em&gt;Day&lt;/em&gt;, &lt;em&gt;Year&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;If you do not have an appropriate template in your &lt;code&gt;~/.um&lt;/code&gt; directory, &lt;code&gt;um&lt;/code&gt; falls back to using its default templates. &lt;code&gt;um&lt;/code&gt; ships with a default template for &lt;code&gt;.md&lt;/code&gt; um pages and &lt;code&gt;.txt&lt;/code&gt; um pages.&lt;/p&gt;
&lt;h2&gt;Tips&lt;/h2&gt;
&lt;p&gt;If you want to reset the topic to its default whenever you start a new shell, you can place the following line in your &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;um topic -d
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;p&gt;You must have &lt;code&gt;pandoc&lt;/code&gt; installed to convert the Markdown man pages (for &lt;code&gt;um&lt;/code&gt; itself, that is) to the &lt;code&gt;roff&lt;/code&gt; format readable by &lt;code&gt;man&lt;/code&gt;. See &lt;a href=&quot;https://github.com/sinclairtarget/um/blob/master/Rakefile&quot;&gt;Rakefile&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 20 Aug 2018 02:27:20 +0000</pubDate>
<dc:creator>quickthrower2</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/6401947?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>sinclairtarget/um</og:title>
<og:url>https://github.com/sinclairtarget/um</og:url>
<og:description>um - Create and maintain your own man pages so you can remember how to do stuff</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/sinclairtarget/um</dc:identifier>
</item>
</channel>
</rss>