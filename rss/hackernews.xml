<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Facebook policy chief admits hiring PR firm to attack George Soros</title>
<link>https://www.theguardian.com/technology/2018/nov/21/facebook-admits-definers-pr-george-soros-critics-sandberg-zuckerberg</link>
<guid isPermaLink="true" >https://www.theguardian.com/technology/2018/nov/21/facebook-admits-definers-pr-george-soros-critics-sandberg-zuckerberg</guid>
<description>&lt;p&gt;Facebook admitted on Wednesday that a top executive hired a public relations firm to &lt;a href=&quot;https://www.theguardian.com/technology/2018/nov/14/facebook-george-soros-pr-firm-discredit-critics-crisis&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;attack George Soros&lt;/a&gt; and undermine critics by publicizing their association with the billionaire Jewish philanthropist.&lt;/p&gt;
&lt;p&gt;Elliot Schrage, Facebook’s outgoing head of communications and policy, took responsibility for hiring Definers Public Affairs in a memo first reported by &lt;a href=&quot;https://techcrunch.com/2018/11/20/schrage-definers/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;TechCrunch&lt;/a&gt; and subsequently published as a &lt;a href=&quot;https://newsroom.fb.com/news/2018/11/elliot-schrage-on-definers/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;blog post&lt;/a&gt; on the eve of the US Thanksgiving holiday.&lt;/p&gt;
&lt;p&gt;Both Mark Zuckerberg and Sheryl Sandberg had &lt;a href=&quot;https://www.theguardian.com/technology/2018/nov/15/mark-zuckerberg-facebook-george-soros-antisemitism&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;disavowed knowledge&lt;/a&gt; of the firm’s hiring in comments to the press.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-1 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;“Did we ask them to do work on &lt;a href=&quot;https://www.theguardian.com/business/george-soros&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;George Soros&lt;/a&gt;?” the memo reads. “Yes.”&lt;/p&gt;
&lt;p&gt;Schrage explained that the work on Soros was two-pronged. After Soros characterized Facebook and Google as a “&lt;a href=&quot;https://www.theguardian.com/business/2018/jan/25/george-soros-facebook-and-google-are-a-menace-to-society&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;menace to society&lt;/a&gt;” in a speech at the World Economic Forum in Davos in January 2018, Facebook asked Definers to perform research because it “wanted to determine if he had any financial motivation”.&lt;/p&gt;
&lt;p&gt;Later, when a new organization called Freedom From &lt;a href=&quot;https://www.theguardian.com/technology/facebook&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Facebook&lt;/a&gt; emerged as a critic of the company’s privacy practices, Definers “learned that George Soros was funding several of the coalition members”, Schrage wrote, and “prepared documents and distributed these to the press to show that this was not simply a spontaneous grassroots movement”.&lt;/p&gt;
&lt;p&gt;The work on Soros is sensitive because of the peculiar role that the Hungarian-born investor and philanthropist plays in rightwing conspiracy theories and among antisemites. Soros has long funded liberal and pro-democratic causes, making him a target of the right, the fringes of which have recast Soros as a modern day embodiment of the classic antisemitic trope of a secretive Jewish cabal pulling the strings on world affairs.&lt;/p&gt;
&lt;blockquote class=&quot;js-tweet tweet&quot;&gt;
&lt;p&gt;&lt;span class=&quot;tweet__user-name&quot;&gt;Donald J. Trump&lt;/span&gt; &lt;span class=&quot;tweet__user-id&quot;&gt;(@realDonaldTrump)&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot; class=&quot;tweet-body&quot;&gt;The very rude elevator screamers are paid professionals only looking to make Senators look bad. Don’t fall for it! Also, look at all of the professionally made identical signs. Paid for by Soros and others. These are not signs made in the basement from love! &lt;a href=&quot;https://twitter.com/hashtag/Troublemakers?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;#Troublemakers&lt;/a&gt;&lt;/p&gt;
 &lt;a href=&quot;https://twitter.com/realDonaldTrump/status/1048196883464818688?ref_src=twsrc%5Etfw&quot; data-link-name=&quot;in body link&quot; class=&quot;tweet-date&quot;&gt;October 5, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Antisemitic and baseless conspiracy mongering about Soros &lt;a href=&quot;https://www.theguardian.com/us-news/2018/oct/24/george-soros-antisemitism-bomb-attacks&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;has become more mainstream in recent years&lt;/a&gt;, with mainstream Republicans including president Donald Trump invoking his name in order to undermine critics and protesters.&lt;/p&gt;
&lt;p&gt;The Schrage memo does not include any apology for Definer’s or Facebook’s work on Soros. Indeed, Schrage defended the idea of a company using a political consultancy to perform opposition research on critics, writing: “Some of this work is being characterized as opposition research, but I believe it would be irresponsible and unprofessional for us not to understand the backgrounds and potential conflicts of interest of our critics.”&lt;/p&gt;
&lt;p&gt;In a comment appended to the memo, Sandberg admitted that she had “received a small number of emails where Definers was referenced”.&lt;/p&gt;
&lt;p&gt;Addressing the widespread criticism that the work on Soros was based on an antisemitic trope, she wrote: “I also want to emphasize that it was never anyone’s intention to play into an antisemitic narrative against Mr Soros or anyone else. Being Jewish is a core part of who I am and our company stands firmly against hate. The idea that our work has been interpreted as antisemitic is abhorrent to me — and deeply personal.”&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Mark Zuckerberg has said he knew nothing about the PR firm.&quot; src=&quot;https://i.guim.co.uk/img/media/b9f57307d9e4592c5f0d6a9fe8b755bcc4f04095/0_119_2448_1468/master/2448.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;fit=max&amp;amp;s=52e6059eb95dfab3945ecf25144fd68b&quot;/&gt;&lt;/div&gt;

Mark Zuckerberg has said he knew nothing about the PR firm. Photograph: Gérard Julien/AFP/Getty Images
&lt;p&gt;Patrick Gaspard, the president of Soros’s philanthropic body, the Open Society Foundation, lambasted Facebook engagement with antisemitic tropes last week, writing in a letter to Sandberg: “The notion that your company, at your direction, actively engaged in the same behavior to try to discredit people exercising their first amendment rights to protest Facebook’s role in disseminating vile propaganda is frankly astonishing to me.&lt;/p&gt;
&lt;p&gt;Gaspard appeared unimpressed by Facebook’s release of the memo on Wednesday, &lt;a href=&quot;https://twitter.com/patrickgaspard/status/1065375524426575874&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;tweeting&lt;/a&gt;: “So @facebook decides to drop a turkey on Thanksgiving eve, with admission that Definers was tasked by company leadership to target and smear George Soros because he publicly criticized their out of control business model. Sorry, but this needs independent, congressional oversight.”&lt;/p&gt;
&lt;p&gt;Tim Miller, Definers’ Silicon Valley lead, has defended its research, which he &lt;a href=&quot;https://twitter.com/Timodc/status/1062955268915396608&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;said&lt;/a&gt; was “factually based”, adding that he was “disgusted by the rise of antisemitism including people who have falsely targeted Soros”.&lt;br/&gt;&lt;/p&gt;


</description>
<pubDate>Thu, 22 Nov 2018 21:11:46 +0000</pubDate>
<dc:creator>cityzen</dc:creator>
<og:url>http://www.theguardian.com/technology/2018/nov/21/facebook-admits-definers-pr-george-soros-critics-sandberg-zuckerberg</og:url>
<og:description>Communication head takes blame for hiring Definers Public Affairs as Sheryl Sandberg says antisemitism claim ‘abhorrent’</og:description>
<og:image>https://i.guim.co.uk/img/media/f24eb57ad5208c1661abf3905b588d9bbabc9e8d/0_165_3500_2100/master/3500.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;fit=crop&amp;overlay-align=bottom%2Cleft&amp;overlay-width=100p&amp;overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&amp;s=e348f4b352c1354e3945a5d92ebc7dfb</og:image>
<og:type>article</og:type>
<og:title>Facebook policy chief admits hiring PR firm to attack George Soros</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/technology/2018/nov/21/facebook-admits-definers-pr-george-soros-critics-sandberg-zuckerberg</dc:identifier>
</item>
<item>
<title>Thank you to dang and sctb</title>
<link>https://news.ycombinator.com/item?id=18512304</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18512304</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.8412698412698&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;4.5895691609977&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;18512304&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18512304&quot; class=&quot;storylink&quot;&gt;Thank you to dang and sctb&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.77922077922078&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_18512304&quot;&gt;777 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=sama&quot; class=&quot;hnuser&quot;&gt;sama&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18512304&quot;&gt;11 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_18512304&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=18512304&amp;amp;goto=item%3Fid%3D18512304&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Thank%20you%20to%20dang%20and%20sctb&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Thank%20you%20to%20dang%20and%20sctb&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=18512304&amp;amp;auth=a9e6bd373427380e57397b1547ac9c6524e7f51e&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=18512304&quot;&gt;85 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;6&quot;&gt;Dan and Scott do an incredible amount of work behind the scenes to make Hacker News what it is. I have never met two more thoughtful community stewards. They usually get more hate than thanks, which they deal with cheerfully. This community means a lot to a lot of people.
&lt;p&gt;So today I wanted to say thanks, on behalf of the HN community.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Thu, 22 Nov 2018 20:26:15 +0000</pubDate>
<dc:creator>sama</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18512304</dc:identifier>
</item>
<item>
<title>Boss as a Service – Hire a boss, get stuff done</title>
<link>https://bossasaservice.life/</link>
<guid isPermaLink="true" >https://bossasaservice.life/</guid>
<description>&lt;h3&gt;Why do you need proof? Don't you trust me?&lt;/h3&gt;
&lt;p&gt;Hey, it's not like that, babe, we swear.&lt;/p&gt;
&lt;p&gt;Okay, maybe it is, a little bit. But it's only because we're habitual procrastinators ourselves, and know that in your place, we'd totally try to cheat.&lt;/p&gt;
&lt;p&gt;Maybe you've been lounging around in your pajamas all day eating Doritos, but you &lt;em&gt;plan&lt;/em&gt; to go for a run later that night. So you think it's okay to tell us that you already have. We know how that's going to turn out -- in a guilt-filled unholy orgy of Dorito excesses. So we wouldn't be doing you any favours if we're flexible about the &quot;Prove it&quot; rule. We'll only count the tasks you're able to prove as tasks actually done. In other words, pics or it didn't happen.&lt;/p&gt;
&lt;p&gt;So what does proof look like?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Go for 3km run -- you could send us a screenshot from &lt;a href=&quot;https://runkeeper.com/&quot;&gt;Runkeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code for 1 hour -- you could send us a screenshot of your &lt;a href=&quot;https://www.rescuetime.com/&quot;&gt;Rescuetime stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix form dropdown bug -- maybe a gif of the form dropdown now working?&lt;/li&gt;
&lt;/ul&gt;
You can blur out sensitive data, just make sure your computer / phone time and date is present.</description>
<pubDate>Thu, 22 Nov 2018 20:06:28 +0000</pubDate>
<dc:creator>thisacctforreal</dc:creator>
<og:url>https://bossasaservice.life</og:url>
<og:type>website</og:type>
<og:title>Boss as a Service | Hire a boss, get stuff done</og:title>
<og:description>BaaS helps you achieve your goals, making sure that you follow through on what you plan.</og:description>
<og:image>https://i.imgur.com/jjrWC3a.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://bossasaservice.life/</dc:identifier>
</item>
<item>
<title>Ditching the MacBook Pro for a MacBook Air</title>
<link>http://bradfrost.com/blog/post/ditching-the-macbook-pro-for-a-macbook-air/</link>
<guid isPermaLink="true" >http://bradfrost.com/blog/post/ditching-the-macbook-pro-for-a-macbook-air/</guid>
<description>&lt;p&gt;A while back I upgraded my computer to a new MacBook Pro, and ran into a ton of issues with it. My &lt;a href=&quot;http://bradfrost.com/blog/post/surviving-the-new-macbook-pro/&quot;&gt;post on the topic&lt;/a&gt; apparently found its way to Apple’s engineering team, and I ended up working with them for a few months to get to the bottom of some of the software bugs I was experiencing. It was a wild experience.&lt;/p&gt;
&lt;p&gt;The situation has definitely improved over the last year and a half, but I still wasn’t a huge fan of the machine. I continue to find the TouchBar annoying, and the battery life I got was never impressive. So when the new MacBook Air was announced, my interest was piqued. As it happens, &lt;a href=&quot;https://twitter.com/frostyweather&quot;&gt;Ian&lt;/a&gt;‘s hand-me-down MacBook Pro was wilting and the screen got all messed up somehow, so I decided to get a MacBook Air and pass my MacBook Pro to my favorite (and only) employee.&lt;/p&gt;
&lt;p&gt;It’s still early days, but I’ll say that the new MacBook Air is the best machine I’ve ever owned. I’ll break down some of the pros and cons of the machine.&lt;/p&gt;
&lt;h2&gt;Pros&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The bevel is back, baby.&lt;/strong&gt; – one of the best things about this machine is the nice slope that doesn’t hurt my wrists while typing. This was one of the biggest things I noticed when I switched from my original MacBook Air to a MacBook Pro, and I’m happy to return to a comfortable typing environment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Waaaay better battery life&lt;/strong&gt; – With my MacBook Pro, I would be lucky to get 4 hours out of a charge. I flew last night, and after about three hours of usage my battery was still sitting pretty at about 80% battery. This makes me very happy as the stress of being plugged in always seemed to loom in the back of my mind.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Good riddance, TouchBar&lt;/strong&gt; – I’m so glad to go back to physical keys for the function keys , and especially the escape key. I’m also super glad the TouchID is still there, as that’s a pretty amazing feature for unlocking my device and password manager.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improved keyboard&lt;/strong&gt; – There’s no doubt typing on this thing is better than the first-generation butterfly keyboard of the MacBook Pro. It feels sturdy. It’s quieter. I like it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thinner&lt;/strong&gt; – I was freaking out at the airport because I felt like my backpack was too light. This thing is light, and my back is thankful for that.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Cons&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;No MagSafe&lt;/strong&gt; – As with the other machine, the MagSafe charger is gone and USB-C port is in its place. Over the last year and a half I’ve tried a few third-party magnetic chargers, but they all ended up failing on me. I can only hope that my bulldog and infant daughter don’t ruin my machine.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decreased ports&lt;/strong&gt; – Going from my old machine with plenty of ports to the MBP’s 4 ports was definitely a step down. Now I’m going a step further away from an ideal scenario. Thankfully, I invested in a &lt;a href=&quot;https://eshop.macsales.com/shop/docks/owc-thunderbolt-3-dock?gclid=EAIaIQobChMIgsX-zdrW3gIVQoezCh0Y6wgqEAAYASAAEgKWp_D_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;fancy docking station&lt;/a&gt; for my home setup, so I can plug in one cable and have everything wired up. But the lack of ports will still be an issue on the road, and carrying around a sack of dongles (true story) definitely isn’t ideal.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decreased firepower?&lt;/strong&gt; – The MacBook Air isn’t as powerful as the MBP, but I’m hoping my work as a web developer doesn’t necessitate such heavy firepower. We’ll see how this plays out with my work, but so far I haven’t noticed any performance issues with my workflow.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So yeah! I’m really happy with my decision to switch, and I hope my love affair with this machine continues as I spend more time working on it.&lt;/p&gt;
</description>
<pubDate>Thu, 22 Nov 2018 17:15:50 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:title>Ditching the MacBook Pro for a MacBook Air</og:title>
<og:url>http://bradfrost.com/blog/post/ditching-the-macbook-pro-for-a-macbook-air/</og:url>
<og:type>article</og:type>
<og:description>A while back I upgraded my computer to a new MacBook Pro, and ran into a ton of issues with it. My post on the topic apparently found its way to Apple's engineering team, and I ended up working with them for a few months to get to the bottom of some of the software bugs I was experiencing. It was a</og:description>
<og:image>http://bradfrost.com/wp-content/uploads/2017/08/card-image.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://bradfrost.com/blog/post/ditching-the-macbook-pro-for-a-macbook-air/</dc:identifier>
</item>
<item>
<title>A fullscreen desktop application resembling a sci-fi computer interface</title>
<link>https://github.com/GitSquared/edex-ui</link>
<guid isPermaLink="true" >https://github.com/GitSquared/edex-ui</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p align=&quot;center&quot;&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/logo.png&quot;&gt;&lt;img alt=&quot;Logo&quot; src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/logo.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;eDEX-UI is a fullscreen desktop application resembling a sci-fi computer interface, heavily inspired from &lt;a href=&quot;https://github.com/seenaburns/dex-ui&quot;&gt;DEX-UI&lt;/a&gt; and the &lt;a href=&quot;https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671&quot; rel=&quot;nofollow&quot;&gt;TRON Legacy movie effects&lt;/a&gt;. It runs the shell of your choice in a real terminal, and displays live information about your system. It was made to be used on large touchscreens but will work nicely on a regular desktop computer or perhaps a tablet PC or one of those funky 360° laptops with touchscreens.&lt;/p&gt;
&lt;p&gt;I had no ideas for a name so i took DEX-UI and added a &quot;e&quot; for Electron. Deal with it.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://aur.archlinux.org/packages/edex-ui/&quot; rel=&quot;nofollow&quot;&gt;Official ArchLinux AUR package&lt;/a&gt; maintained by &lt;a href=&quot;https://github.com/JesusCrie&quot;&gt;@JesusCrie&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_default.png&quot;&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_default.png&quot; alt=&quot;Default screenshot&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;neofetch&lt;/a&gt; on eDEX-UI 1.0 with the default &quot;tron&quot; theme &amp;amp; QWERTY keyboard)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_blade.png&quot;&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_blade.png&quot; alt=&quot;Blade screenshot&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://github.com/browsh-org/browsh&quot;&gt;browsh&lt;/a&gt; showing the results of a DuckDuckGo image search on eDEX-UI 1.0 with the &quot;blade&quot; theme &amp;amp; AZERTY keyboard)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_disrupted.png&quot;&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_disrupted.png&quot; alt=&quot;Disrupted screenshot&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://github.com/antonmedv/fx&quot;&gt;fx&lt;/a&gt; showing the results of a &lt;a href=&quot;https://github.com/GitSquared/ipapi&quot;&gt;ipapi&lt;/a&gt; query on eDEX-UI 1.0 with the experimental &quot;tron-disrupted&quot; theme, and the French AZERTY keyboard)&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt;
&lt;h4&gt;What OS can this thing run on?&lt;/h4&gt;
&lt;p&gt;Currently Windows, the latest macOS and any Linux distro that can run Chromium (AppImage package).&lt;/p&gt;
&lt;h4&gt;Is this a real terminal?&lt;/h4&gt;
&lt;p&gt;Yes. By default, eDEX runs bash on Linux and Powershell on Windows, but you can change that to any command in the settings.json file.&lt;/p&gt;
&lt;h4&gt;I don't like the colors/the keyboard layout is not right for me!&lt;/h4&gt;
&lt;p&gt;We got you covered! Check the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/wiki&quot;&gt;repo's Wiki&lt;/a&gt; for in-depth information about customizing eDEX.&lt;/p&gt;
&lt;h4&gt;Why is there a keyboard?&lt;/h4&gt;
&lt;p&gt;eDEX-UI is meant to be used on touchscreens, even if it works well on regular displays! If you have a physical keyboard wired to your computer, pressing keys IRL will illuminate the virtual keyboard: &lt;em&gt;please remember to not type any passwords if you are recording your screen!&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;What's the difference between this and the original DEX-UI?&lt;/h4&gt;
&lt;p&gt;Seenaburns' DEX-UI was created &lt;em&gt;&quot;as an experiment or an art piece, not distributable software&quot;&lt;/em&gt;. The goal of this project is to push Seena's vision forward by making such an interface usable in real-life scenarios.&lt;/p&gt;
&lt;h4&gt;Will using this make me insanely badass?&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&quot; rel=&quot;nofollow&quot;&gt;Yes.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Featured in...&lt;/h2&gt;
&lt;h2&gt;Useful commands for the nerds&lt;/h2&gt;
&lt;h4&gt;Starting from source:&lt;/h4&gt;
&lt;p&gt;on *nix systems (You'll need the Xcode command line tools on macOS):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;clone the repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run install-linux&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;on Windows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;start cmd or powershell &lt;strong&gt;as administrator&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;clone the repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run install-windows&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Building&lt;/h4&gt;
&lt;p&gt;Note: Due to native modules, you can only compile binaries for the OS you are compiling from. Note²: It is recommended to start building from a fresh clone to prevent the code minifier script from parsing an entire &lt;code&gt;node_modules&lt;/code&gt; folder.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;make a fresh clone (recommended)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (NOT &lt;code&gt;install-linux&lt;/code&gt; or &lt;code&gt;install-windows&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run build-linux&lt;/code&gt; or &lt;code&gt;build-windows&lt;/code&gt; or &lt;code&gt;build-darwin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Resulting binaries and assets will be in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;eDEX-UI's source code was primarily written by me, &lt;a href=&quot;https://github.com/GitSquared&quot;&gt;Squared&lt;/a&gt;. If you want to get in touch with me or find other projects I'm involved in, check out &lt;a href=&quot;https://squared.codebrew.fr&quot; rel=&quot;nofollow&quot;&gt;my website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/PixelyIon&quot;&gt;PixelyIon&lt;/a&gt; helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.&lt;/p&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Of course, eDEX would never have existed if I hadn't stumbled upon the amazing work of &lt;a href=&quot;https://github.com/seenaburns&quot;&gt;Seena&lt;/a&gt; on &lt;a href=&quot;https://reddit.com/r/unixporn&quot; rel=&quot;nofollow&quot;&gt;r/unixporn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This project uses a bunch of open-source libraries, frameworks and tools, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/network/dependencies&quot;&gt;the full dependency graph&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I want to namely thank the developers behind &lt;a href=&quot;https://github.com/xtermjs/xterm.js&quot;&gt;xterm.js&lt;/a&gt;, &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation&quot;&gt;systeminformation&lt;/a&gt; and &lt;a href=&quot;https://github.com/joewalnes/smoothie&quot;&gt;SmoothieCharts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/arscan&quot;&gt;Rob &quot;Arscan&quot; Scanlon&lt;/a&gt; for making the fantastic &lt;a href=&quot;https://github.com/arscan/encom-globe&quot;&gt;ENCOM Globe&lt;/a&gt;, also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 22 Nov 2018 13:23:23 +0000</pubDate>
<dc:creator>nailer</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/24496417?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>GitSquared/edex-ui</og:title>
<og:url>https://github.com/GitSquared/edex-ui</og:url>
<og:description>A science fiction desktop running everywhere. Awesome. - GitSquared/edex-ui</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/GitSquared/edex-ui</dc:identifier>
</item>
<item>
<title>The Google Cemetery – A list of dead Google products and why they died</title>
<link>https://gcemetery.co/</link>
<guid isPermaLink="true" >https://gcemetery.co/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://gcemetery.co/&quot;&gt;https://gcemetery.co/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18509735&quot;&gt;https://news.ycombinator.com/item?id=18509735&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 623&lt;/p&gt;
&lt;p&gt;# Comments: 321&lt;/p&gt;
</description>
<pubDate>Thu, 22 Nov 2018 13:03:06 +0000</pubDate>
<dc:creator>naeemnur</dc:creator>
<og:type>website</og:type>
<og:title>The Google Cemetery</og:title>
<og:description>A list of dead google products and services and why they died.</og:description>
<og:url>https://gcemetery.co/</og:url>
<og:image>https://gcemetery.co/wp-content/uploads/2018/11/gcsocial.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gcemetery.co/</dc:identifier>
</item>
<item>
<title>Ask HN: What are you thankful for?</title>
<link>https://news.ycombinator.com/item?id=18509717</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18509717</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.1085383502171&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;4.7995658465991&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;18509717&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18509717&quot; class=&quot;storylink&quot;&gt;Ask HN: What are you thankful for?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.71428571428571&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_18509717&quot;&gt;239 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=wallflower&quot; class=&quot;hnuser&quot;&gt;wallflower&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18509717&quot;&gt;16 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_18509717&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=18509717&amp;amp;goto=item%3Fid%3D18509717&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20What%20are%20you%20thankful%20for%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20What%20are%20you%20thankful%20for%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=18509717&amp;amp;auth=05b922dae09c6ce6fa113bf9ce0a40e24e9ce71e&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=18509717&quot;&gt;123 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;12&quot;&gt;Thanks dang and team for taking care of the HN community!
&lt;p&gt;Many years ago, I stumbled upon HN. I just lurked. Then one day I posted a comment.&lt;/p&gt;
&lt;p&gt;I am thankful for HN because many years ago it provided a community for someone who was desperately seeking social interaction during my very boring corporate job workday. It was my water cooler. It still is even though as it has grown in popularity, it is almost like a meme for some people to say 'Don't read HN' because they maybe read one divisive thread once or only read divisive threads and thus see it as a monoculture...&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Thu, 22 Nov 2018 12:58:48 +0000</pubDate>
<dc:creator>wallflower</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18509717</dc:identifier>
</item>
<item>
<title>Ask HN: Why not more hiring of junior devs, then on-the-job-training?</title>
<link>https://news.ycombinator.com/item?id=18507407</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18507407</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17.483976455199&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;10.582406801831&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;18507407&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18507407&quot; class=&quot;storylink&quot;&gt;Ask HN: Why not more hiring of junior devs, then on-the-job-training?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.72289156626506&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_18507407&quot;&gt;333 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=the_antipode&quot; class=&quot;hnuser&quot;&gt;the_antipode&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18507407&quot;&gt;1 day ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_18507407&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=18507407&amp;amp;goto=item%3Fid%3D18507407&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Why%20not%20more%20hiring%20of%20junior%20devs%2C%20then%20on-the-job-training%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20Why%20not%20more%20hiring%20of%20junior%20devs%2C%20then%20on-the-job-training%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=18507407&amp;amp;auth=c402acb777bb3743b95a68dc2c0a6b56c5fd360f&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=18507407&quot;&gt;444 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;31&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;29&quot;&gt;Hi, all. Long time, first time. Hoping to tap into the collective HN consciousness to help make sense of this question, as I feel it's something I'm seeing/experiencing at present.
&lt;p&gt;It seems like twice a week or more I read there is an industry shortage of devs, but I never hear about any companies, of any size, looking for junior devs -- or generally competent devs that might have a specific knowledge gap -- to hire and give on-the-job training to. Not even a contract-to-hire situation that leaves the company with very little risk if the developer isn't what they needed.&lt;/p&gt;
&lt;p&gt;Is on-the-job training just flat-out dead?&lt;/p&gt;
&lt;p&gt;I ask this because I'm 4-years-experienced as a front-end UI/interaction dev, nothing but glowing references, looking for another, similar, position (regular, not senior or lead) and have had...way too many interviews and rejections, and can't understand why companies are such sticklers for interested devs to have Every Single Box in their list of requirements checked when it would take days or a couple weeks to learn XYZ framework/library/whatever to the level of competence that is required for the position.&lt;/p&gt;
&lt;p&gt;To further stack up the frustration, it's not uncommon to see the same position listed and re-listed on LinkedIn and Indeed for months: certainly somebody could have been hired and trained to the level needed in that time. (Maybe even me!)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Thu, 22 Nov 2018 01:48:29 +0000</pubDate>
<dc:creator>the_antipode</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18507407</dc:identifier>
</item>
<item>
<title>Fundamental Algorithms of Machine Learning</title>
<link>https://www.dropbox.com/s/qiq2c85cle9ydb6/Chapter3.pdf?dl=0</link>
<guid isPermaLink="true" >https://www.dropbox.com/s/qiq2c85cle9ydb6/Chapter3.pdf?dl=0</guid>
<description>&lt;div readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;text-variant post-comment-variant&quot; readability=&quot;10&quot;&gt;To post your comment, create a free Dropbox account.
&lt;p&gt;We'll keep your comment safe during signup.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To subscribe to this file, create a free Dropbox account.&lt;/p&gt;
&lt;p&gt;To continue, create a free Dropbox account.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;text-variant post-comment-variant&quot; readability=&quot;10&quot;&gt;To post your comment, sign in to Dropbox.
&lt;p&gt;We'll keep your comment safe while you sign in.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To subscribe to this file, sign in to Dropbox.&lt;/p&gt;
&lt;p&gt;To continue, sign in to Dropbox.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 21 Nov 2018 22:45:00 +0000</pubDate>
<dc:creator>Vincent_F_Vega</dc:creator>
<og:url>https://www.dropbox.com/s/qiq2c85cle9ydb6/Chapter3.pdf?dl=0</og:url>
<og:type>website</og:type>
<og:description>Shared with Dropbox</og:description>
<og:title>Chapter3.pdf</og:title>
<og:image>https://www.dropbox.com/static/images/spectrum-icons/generated/content/content-pdf-large.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.dropbox.com/s/qiq2c85cle9ydb6/Chapter3.pdf?dl=0</dc:identifier>
</item>
<item>
<title>Slow Software</title>
<link>https://www.inkandswitch.com/slow-software.html</link>
<guid isPermaLink="true" >https://www.inkandswitch.com/slow-software.html</guid>
<description>&lt;h2 id=&quot;what-feels-slow&quot;&gt;What feels slow&lt;/h2&gt;
&lt;p&gt;What feels &quot;slow&quot; to users? We all have a sense for when software annoys us with delays. But to get a better handle on this problem, we'll complement these intuitions with academic research that answers the question rigorously.&lt;/p&gt;
&lt;p&gt;Perceived speed is all about latency. Comparing the &quot;what feels slow&quot; findings from academia with measurements of real-world app latency tells us just how bad things really are.&lt;/p&gt;
&lt;h3 id=&quot;latency-not-throughput&quot;&gt;Latency not throughput&lt;/h3&gt;
&lt;p&gt;When discussing software performance, we often hear about &lt;em&gt;throughput&lt;/em&gt;. E.g. &quot;this web server can do 10,000 requests / second.&quot; But that's not how users perceive things. They care how long their particular web request takes, or how long a doc takes to open, or how responsive an app is to their clicks. These interactions are about &lt;em&gt;latency&lt;/em&gt;. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;User perception&lt;/span&gt; &lt;span&gt;See &lt;a id=&quot;ret-1&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-1&quot;&gt;[1]&lt;/a&gt; for more on the importance of latency in interactive systems.&lt;/span&gt; &lt;span&gt;Other factors influence how fast software feels. E.g. frame rates and feedback about long-running tasks. But we think latency is the most fundamental, and we're only going to have software that feels truly instantaneous if latency is very low.&lt;/span&gt;&lt;/small&gt; Latency is the critical metric we'll examine in this article.&lt;/p&gt;
&lt;h3 id=&quot;touch-interfaces&quot;&gt;Touch interfaces&lt;/h3&gt;
&lt;p&gt;To start, let's look at user sensitivity to latency when using touch screens.&lt;/p&gt;
&lt;p&gt;Researchers can test this with rigs that control exactly how much latency users see. They present a user with an interface having (say) 1ms latency and another with (say) 70ms and then ask them to perform operations like tapping a button. If the 70ms interface consistently feels slower than the 1ms interface, 70ms would be a &quot;noticeable difference.&quot; &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Just noticeable differences&lt;/span&gt; &lt;span&gt;For more on just noticeable latency differences and associated experimental rigs, see e.g. &lt;a href=&quot;https://www.inkandswitch.com/slow-software.html#ref-2&quot;&gt;[2]&lt;/a&gt;.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;The smallest such noticeable difference is the budget one has before a given operation starts to feel slow to that user.&lt;/p&gt;
&lt;p&gt;When dragging items on the screen, for example, users perceive latencies as low as ~2ms. The just noticeable latency varies by user and action being performed, but it's consistently very low. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Drag latency perception&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-2&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-2&quot;&gt;[2]&lt;/a&gt; reports 2–16ms for drags with a stylus.&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-3&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-3&quot;&gt;[3]&lt;/a&gt;: 2–11ms for drags with finger.&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-4&quot; href=&quot;https://www.inkandswitch.com/ref-4&quot;&gt;[4]&lt;/a&gt;: mean of 11ms for drags with finger.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Inking on a tablet with a stylus gives similar results. Here the literature suggests users detect slowness between 20ms and 80ms of latency. In our own informal tests in the lab, latency towards 80ms feels very slow, and it takes something much closer to 20ms for a stylus to feel responsive while inking. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Stylus latency perception&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.inkandswitch.com/slow-software.html#ref-2&quot;&gt;[2]&lt;/a&gt; reports 10–70ms for stylus scribbling.&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-5&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-5&quot;&gt;[5]&lt;/a&gt;: 21–82ms for various stylus actions.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;The difference between low- and high-latency inking is clear when looking at contrasting examples side-by-side:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Inking latency examples&lt;/p&gt;
&lt;p&gt;Left: an iPad Pro and Notes app with ~15ms of end-to-end latency.&lt;/p&gt;
&lt;p&gt;Right: a Samsung S3 and OneNote app with ~70ms of latency.&lt;/p&gt;
&lt;p&gt;Videos slowed 16x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video&quot;&gt;&lt;img class=&quot;play&quot; src=&quot;https://www.inkandswitch.com/media/slow-software/play.svg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Another common operation on touch devices is tapping on buttons or links. Here tests suggests users on average notice latency as it goes beyond ~70ms (though it's likely lower for some individual users). &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Tapping latency perception&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.inkandswitch.com/slow-software.html#ref-4&quot;&gt;[4]&lt;/a&gt; reports 69ms mean just noticeable latency for finger tap across users.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Here's an example showing two different latencies side-by-side:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Tapping latency examples&lt;/p&gt;
&lt;p&gt;Left: Opening a settings tab on an iPhone 6s with ~90ms of latency.&lt;/p&gt;
&lt;p&gt;Right: Toggling a setting a Samsung S3 with ~330ms of latency.&lt;/p&gt;
&lt;p&gt;Videos slowed 16x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video&quot;&gt;&lt;img class=&quot;play&quot; src=&quot;https://www.inkandswitch.com/media/slow-software/play.svg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;How do modern apps fare compared to these latency thresholds for touch interactions? In terms of dragging with a finger, no current consumer system will consistently meet the low single digit millisecond level needed to satisfy all users. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Drag performance&lt;/span&gt; &lt;span&gt;As we'll see below, &amp;lt;10ms is not enough latency budget even for input hardware and displays, not to mention multiple layers of software.&lt;/span&gt;&lt;/small&gt; So all current touchscreen operating systems will leave at least some users feeling like the object they're dragging is lagging behind their finger.&lt;/p&gt;
&lt;p&gt;For drawing with a stylus, a small number of systems get close to the latency levels needed to feel reasonably good. But most are well above these levels and—as we'd expect—feel very slow to users:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Inking latencies&lt;/p&gt;
&lt;p&gt;Results from Ink &amp;amp; Switch tests on tablet inking latency.&lt;/p&gt;
&lt;p&gt;Average latencies as measured from screen contact to start of corresponding pixel color change, rounded to nearest 5ms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;table&quot;&gt;
&lt;table&gt;&lt;tr&gt;&lt;th class=&quot;text left&quot;&gt;Device&lt;/th&gt;
&lt;th class=&quot;text middle&quot;&gt;Program&lt;/th&gt;
&lt;th colspan=&quot;2&quot; class=&quot;mixed right&quot;&gt;Latency (ms)&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;iPad Pro&lt;/td&gt;
&lt;td class=&quot;text middle first&quot;&gt;Notes&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;20&lt;/td&gt;
&lt;td class=&quot;bar right first&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;GoodNotes&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;30&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;Flutter&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;35&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;Surface Pro&lt;/td&gt;
&lt;td class=&quot;text middle first&quot;&gt;OneNote&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;25&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;SketchPad&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;30&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;Canvas&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;Pixelbook&lt;/td&gt;
&lt;td class=&quot;text middle first&quot;&gt;Squid&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;40&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;Canvas&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;Samsung S3&lt;/td&gt;
&lt;td class=&quot;text middle first&quot;&gt;Squid&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;Flutter&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;65&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;/&gt;
&lt;td class=&quot;text middle&quot;&gt;Canvas&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;75&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left last&quot;/&gt;
&lt;td class=&quot;text middle last&quot;&gt;LiveBoard&lt;/td&gt;
&lt;td class=&quot;number middle last&quot;&gt;80&lt;/td&gt;
&lt;td class=&quot;bar right last&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;While we don't have data on tapping latencies across devices, we'd expect them to be comparable to the inking latencies observed above. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Inking vs tapping latencies&lt;/span&gt; &lt;span&gt;We expect these latencies to be comparable because they both test the touch input → screen update loop. That said, there are differences between the two paths so we wouldn't expect them to be exactly the same.&lt;/span&gt;&lt;/small&gt; Since the noticeable latency here is ~70ms, most systems should be able to feel responsive to taps. But it's also easy to find apps that perform much worse than the system's theoretical capability.&lt;/p&gt;
&lt;p&gt;Overall, touch systems need to have very low latencies to feel responsive. Most devices and apps fail to perform at this level, and consequently feel varying degrees of slow to users.&lt;/p&gt;
&lt;h3 id=&quot;typing&quot;&gt;Typing&lt;/h3&gt;
&lt;p&gt;There is some evidence that increased typing latency impairs users. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Typing latency impact&lt;/span&gt; &lt;span&gt;In &lt;a id=&quot;ret-6&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-6&quot;&gt;[6]&lt;/a&gt;, random amounts of latency are added to keying operations, which reduces typing performance. However it only assessed one distribution of latency. It also suggested skilled typists may acclimate to the increased latency.&lt;/span&gt;&lt;/small&gt; However, we're not aware of studies specifically measuring least noticeable end-to-end typing latencies. The tap latency numbers (noticeable at ~70ms) may be a useful benchmark because they also measure a discrete finger touch to visual update.&lt;/p&gt;
&lt;p&gt;Here are some informal end-to-end keyboard latency measurements:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;9.3125&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Typing latencies&lt;/p&gt;
&lt;p&gt;End-to-end latencies from start of keypress to a character appearing in app for a variety of machines.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a href=&quot;https://danluu.com/input-lag/&quot;&gt;Computer latency: 1977-2017&lt;/a&gt;, Ink &amp;amp; Switch tests&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;table&quot;&gt;
&lt;table&gt;&lt;tr&gt;&lt;th class=&quot;text left&quot;&gt;Computer&lt;/th&gt;
&lt;th colspan=&quot;2&quot; class=&quot;mixed right&quot;&gt;Latency (ms)&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;Apple IIe&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;30&lt;/td&gt;
&lt;td class=&quot;bar right first&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Commodore Pet 4016&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;iMac g4 OS 9&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;70&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Macbook Pro 2014&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;100&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Custom Haswell-e 24Hz&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;140&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Samsung S3&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;150&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Powerspec g405 Linux&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;170&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left last&quot;&gt;Symbolics 3620&lt;/td&gt;
&lt;td class=&quot;number middle last&quot;&gt;300&lt;/td&gt;
&lt;td class=&quot;bar right last&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Rigorous assessments of the impact of keyboard latency would be great experiments for enterprising researchers. In any event, it seems likely the latency threshold for typing is below ~100ms for many users, and perhaps well below it.&lt;/p&gt;
&lt;h3 id=&quot;mousing&quot;&gt;Mousing&lt;/h3&gt;
&lt;p&gt;The last input type we'll look at is mice. One experiment found user latency perception thresholds down to 34ms. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Mouse latency impact&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-7&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-7&quot;&gt;[7]&lt;/a&gt; measures latency sensitivity in a cursor dragging test and reports sensitivities in the range of 34–137ms, with a mean of 65ms.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Input latency of mice varies widely. Some setups achieve latencies in the single digit milliseconds range by combining high-performance hardware with careful, low-level programming. It's also possible to go beyond 100ms of end-to-latency with a combination of mediocre hardware and applications that introduce extra delays or buffers between input and display. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Mouse latencies&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.inkandswitch.com/slow-software.html#ref-7&quot;&gt;[7]&lt;/a&gt; describes an optimized setup with end-to-end average mouse movement latencies of ~8ms.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;h3 id=&quot;applications&quot;&gt;Applications&lt;/h3&gt;
&lt;p&gt;Application-level latencies measure how long it takes to complete app-specific actions like loading web pages:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Application latency example&lt;/p&gt;
&lt;p&gt;An example of application-level latency. It takes ~3000ms to load this NYTimes web page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video&quot;&gt;&lt;img class=&quot;play&quot; src=&quot;https://www.inkandswitch.com/media/slow-software/play.svg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;What feels fast for application actions? It's hard to say exactly because actions are more complex and varied than simple inputs. The answer here probably also depends on what users are conditioned to expect (currently, it's usually slow software). But we can triangulate a rough number. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Latency literature&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-8&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-8&quot;&gt;[8]&lt;/a&gt; surveys literature on the impact of latency to application users. It's a good starting point for a deeper dive on this topic.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;One reference is the typical ~70ms just noticeable difference mentioned above for tapping a touch screen. If you notice a delay between tapping a link and seeing a tap indicator, you can probably notice a similar delay between tapping a link and seeing a web page open.&lt;/p&gt;
&lt;p&gt;Another data point is Google’s RAIL model. This model claims that responses within 100ms “feel like the result is immediate” and that higher latency “[breaks] the connection between action and reaction”. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;RAIL&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rail&quot;&gt;Google's model&lt;/a&gt;&lt;/span&gt; &lt;span&gt;Unfortunately they doesn't give a basis for their 100ms figure.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;You can informally test our own sensitivity in a terminal. Consider the command-line programs you use and how they feel, then try them with `time`. You'll notice the difference between e.g. ~15ms CLI responses (great!) and ~500ms (obviously slow).&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Terminal execution times&lt;/p&gt;
&lt;p&gt;Examples of execution times for different terminal commands.&lt;/p&gt;
&lt;p&gt;Even a command that takes half a second is distractingly slow.&lt;/p&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.inkandswitch.com/media/slow-software/terminal-times.png&quot;/&gt;&lt;p&gt;As a final data point, consider that typical human reaction time from seeing a visual stimulus to taking a physical action is about 220ms. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Reaction time&lt;/span&gt; &lt;span&gt;See &lt;a href=&quot;https://web.archive.org/web/20100611222125/http://biae.clemson.edu/bpc/bp/Lab/110/reaction.htm&quot;&gt;Literature Review on Reaction Time&lt;/a&gt;&lt;/span&gt;&lt;/small&gt; This value must be significantly more than noticeable latencies, because reactions involve observing something and then doing something.&lt;/p&gt;
&lt;p&gt;Altogether we think this suggests action latencies should be ~100ms or less to avoid user perception of delay. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Physiological effects&lt;/span&gt; &lt;span&gt;Software latency may be even more damaging than we consciously realize.&lt;/span&gt; &lt;span&gt;&lt;a id=&quot;ret-9&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ref-9&quot;&gt;[9]&lt;/a&gt; documents unconscious, physiological effects in users exposed to increased latency.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;h3 id=&quot;real-world-apps&quot;&gt;Real-world apps&lt;/h3&gt;
&lt;p&gt;How do current apps fair against this benchmark? Some do well. For example, many Unix command line programs run in under 100ms.&lt;/p&gt;
&lt;p&gt;Most of the web does poorly. A ~1,000ms Google search result will feel faster than most of what you see online, though still noticeably delayed compared to a ~100ms interaction. And it's easy to find examples of pages that take ~5,000ms+ to load even on a good connection.&lt;/p&gt;
&lt;p&gt;In the case of mobile and desktop, there are some apps that will consistently achieve &amp;lt;100ms latency, such as the built-in calculator on iOS. But it's easy to find cases of productivity apps that significantly exceed this threshold even when they have (or should have) all data available locally. Consider the Slack example below:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Slack latency example&lt;/p&gt;
&lt;p&gt;Slack on an iPad Pro took ~220ms to change between two low-volume channels in the same workspace.&lt;/p&gt;
&lt;p&gt;This is a long time considering that no network call is needed and the iPad Pro is perhaps the highest performance mobile device in the world.&lt;/p&gt;
&lt;p&gt;Video slowed 8x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video&quot;&gt;&lt;img class=&quot;play&quot; src=&quot;https://www.inkandswitch.com/media/slow-software/play.svg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;It's hard to draw a general conclusion about such a broad area as the action latency of all software. That said, it seems clear that while some apps do complete actions fast enough to feel instantaneous to users (less than ~100ms), many apps do not.&lt;/p&gt;
&lt;h2 id=&quot;where-slowness-comes-from&quot;&gt;Where slowness comes from&lt;/h2&gt;
&lt;p&gt;So we've established that a lot of software is in fact slow. Where does all that time go (and what might we optimize)? We'll look at this next, starting with the first component in the chain: input devices.&lt;/p&gt;
&lt;h3 id=&quot;input-devices&quot;&gt;Input devices&lt;/h3&gt;
&lt;p&gt;The first step in the pipeline that converts physical inputs to updates on screen is the input processing: converting contact with a touch screen, keyboard, or mouse to a digital signal for the operating system. Here we'll look at how long this step takes.&lt;/p&gt;
&lt;p&gt;Let's start with keyboards:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;7.0724637681159&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Keyboard latencies&lt;/p&gt;
&lt;p&gt;Measured latencies from start of key press to signal reaching USB hub, rounded to nearest 5ms.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://danluu.com/keyboard-latency&quot;&gt;Keyboard latency&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;table&quot;&gt;
&lt;table&gt;&lt;tr&gt;&lt;th class=&quot;text left&quot;&gt;Keyboard&lt;/th&gt;
&lt;th colspan=&quot;2&quot; class=&quot;mixed right&quot;&gt;Latency (ms)&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;Apple Magic&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;15&lt;/td&gt;
&lt;td class=&quot;bar right first&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Das 3&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;25&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Kinesis Freestyle2&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;30&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Ergodox&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;40&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;Kinesis Advantage&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;50&lt;/td&gt;
&lt;td class=&quot;bar right&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left last&quot;&gt;Logitech MK360&lt;/td&gt;
&lt;td class=&quot;number middle last&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;bar right last&quot;&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;As you can see these keyboards easily take up 10s of milliseconds of latency budget on the very first step in the processing pipeline. That's out of a total budget of ~100ms or less! &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Typing and latency&lt;/span&gt; &lt;span&gt;See &lt;a href=&quot;https://pavelfatin.com/typing-with-pleasure&quot;&gt;Typing with Pleasure&lt;/a&gt; for much greater detail on this topic.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Mice can similarly introduce 10s of milliseconds of latency. Though the highest performance gaming mice will have latencies in the single digit millisecond range. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Mouse click latency&lt;/span&gt; &lt;span&gt;Data for mouse click latency is a scattered.&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.gamersnexus.net/guides/2594-wireless-mouse-click-latency-analysis-vs-wired&quot;&gt;One example&lt;/a&gt; with single digit millisecond latency.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;It's harder for us to measure the contribution of input devices specifically in mobile devices (because they're tightly integrated with other hardware components). That said, we can use a few of the common patterns in input device hardware to understand latencies in these as well as standalone devices.&lt;/p&gt;
&lt;h3 id=&quot;sample-rates&quot;&gt;Sample rates&lt;/h3&gt;
&lt;p&gt;One common pattern is sample rates. In many input devices, the hardware &quot;scans&quot; or &quot;samples&quot; for new input on a periodic interval. For example, typical consumer touch screens sample for input at the rate of 60hz, or once every ~17ms. This means that in the worst cases input device latency will be at least ~17ms, and in the average case it can be no better than ~8ms.&lt;/p&gt;
&lt;p&gt;All things being equal, higher scan rates can reduce input latency. High-end Apple mobile hardware samples touch and stylus input more frequently than 60hz, correspondingly reducing latency:&lt;/p&gt;

&lt;div class=&quot;table&quot;&gt;
&lt;table&gt;&lt;tr&gt;&lt;th class=&quot;text left&quot;&gt;Device&lt;/th&gt;
&lt;th class=&quot;number middle&quot;&gt;Touch (hz)&lt;/th&gt;
&lt;th class=&quot;number right&quot;&gt;Stylus (hz)&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left first&quot;&gt;iPhone 6&lt;/td&gt;
&lt;td class=&quot;number middle first&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;number right first&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;iPhone 7&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;number right&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;iPhone 8&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;number right&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;iPhone X&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;120&lt;/td&gt;
&lt;td class=&quot;number right&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;iPad Air 2&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;number right&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left&quot;&gt;iPad Mini 4&lt;/td&gt;
&lt;td class=&quot;number middle&quot;&gt;60&lt;/td&gt;
&lt;td class=&quot;number right&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;text left last&quot;&gt;iPad Pro&lt;/td&gt;
&lt;td class=&quot;number middle last&quot;&gt;120&lt;/td&gt;
&lt;td class=&quot;number right last&quot;&gt;240&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;A similar source of latency is USB scanning. The USB protocol pulls input from the keyboard, so the keyboard needs to wait for the USB scan to send its key presses. Low speed USB scans at 125hz, introducing an unavoidable ~8ms max and ~4ms average delay. More recent USB versions scan at 1000hz or more, minimizing the latency impact.&lt;/p&gt;
&lt;p&gt;There are many other potential sources of latency in input devices, for example debouncing in keyboards. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Debouncing&lt;/span&gt; &lt;span&gt;See &lt;a href=&quot;https://summivox.wordpress.com/2016/06/03/keyboard-matrix-scanning-and-debouncing&quot;&gt;Keyboard Matrix Scanning and Debouncing&lt;/a&gt; for details on hardware and software implications of debouncing.&lt;/span&gt;&lt;/small&gt; We won't cover them all here, but emphasize the meta points that a) input devices themselves can introduce significant latency before any software processing happens and b) this may be due to multiple discrete causes that add up.&lt;/p&gt;
&lt;h3 id=&quot;displays-and-gpus&quot;&gt;Displays and GPUs&lt;/h3&gt;
&lt;p&gt;The hardware at the other end of the pipeline are displays and graphics cards.&lt;/p&gt;
&lt;p&gt;One source of latency here is the frame rate of the display. Since displays can't redraw constantly, this introduces unavoidable latency similar to the input scanning discussed above. If a screen updates (say) every 20ms, it adds 20ms of latency in the worst case and 10ms in the average case. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Perceiving movement&lt;/span&gt; &lt;span&gt;Other factors influence how we perceive objects moving on screens. &lt;a href=&quot;https://www.blurbusters.com&quot;&gt;Blur Busters&lt;/a&gt; is a great resource. See e.g. &lt;a href=&quot;https://www.blurbusters.com/faq/lcd-motion-artifacts/&quot;&gt;LCD Motion Artifacts 101&lt;/a&gt;.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Most displays run at 60hz, though high end-devices and especially displays built for gaming run at 120hz, 144hz, and 240hz. Thus display frame rate alone usually contributes ~8ms average-case latency, though this can be reduced to a few milliseconds in the highest-frame-rate displays.&lt;/p&gt;
&lt;p&gt;Another contribution to latency from displays is the time it takes them to physically change the color of pixels after they receive new pixel data. This time varies from low single digit milliseconds or less in high-end gaming displays to double digit milliseconds in less responsive LCDs. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Display response times&lt;/span&gt; &lt;span&gt;These are hard to measure, but &lt;a href=&quot;https://www.notebookcheck.net&quot;&gt;Notebook Check&lt;/a&gt; has some illustrative data. See e.g. a &lt;a href=&quot;https://www.notebookcheck.net/Asus-ROG-Chimera-G703GI-i9-8950HK-GTX-1080-Full-HD-Laptop-Review.308366.0.html&quot;&gt;fast&lt;/a&gt; and &lt;a href=&quot;https://www.notebookcheck.net/Google-Pixelbook-Chromebook-Review.262418.0.html&quot;&gt;slow&lt;/a&gt; example.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;On modern high-end devices, a dedicated graphics unit (GPU) powers the display. GPUs produce the array of pixels for displays by e.g. compositing 2D windowing layers or rendering 3D virtual scenes. GPUs produce frames at a rate that depends on the GPU hardware, their interaction with application and framework code, and sometimes on synchronization logic with displays.&lt;/p&gt;
&lt;p&gt;A related issue happens when application code is outright slow, and doesn't even send instructions to the GPU fast enough to take full advantage of it. This can lead to the GPU producing unique frames at a lower rate than it could if it did in fact have frequent instruction from the application. This is a common source of &quot;jank&quot; we see in 2D applications that render less than 60fps. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Jank&lt;/span&gt; &lt;span&gt;&quot;Jank&quot; is hard to define, but you know it when you see it. Nathan Gitter defines it as &quot;visual glitches that are unexpected or distracting&quot; in &lt;a href=&quot;https://medium.com/@nathangitter/designing-jank-free-apps-9f66d43b9c87&quot;&gt;Designing Jank-Free Apps&lt;/a&gt;.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;h3 id=&quot;cycle-stacking&quot;&gt;&lt;span&gt;Cycle stacking&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;We've discussed at least three parts of the pipeline where latency accrues due to periodic activity: input scanning, GPU rendering loops, and display refresh cycles. It's important to note that these can stack in ways that essentially adds all of their latency together:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;12&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;&lt;span&gt;Waiting for multiple cycles&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A hypothetical latency cascade shows how waiting for successive hardware cycles can accumulate latency.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Dashed vertical lines indicate cycles the pipeline needs to wait for.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;span&gt;&lt;img src=&quot;https://www.inkandswitch.com/media/slow-software/cycle-stacking.png&quot;/&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;In order to move to the next step in a pipeline, we need to wait for the next cycle of that stage to come along. And the cycles may not be aligned. Misaligned cycles and an unfavorable initial input time can cause 10s of milliseconds of additional latency, a large amount relative to the latency budgets discussed above.&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;runtime-overhead&quot;&gt;&lt;span&gt;Runtime overhead&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;On the software side, runtime overhead is a catch-all for overhead from the operating system and other non-application code. We'll look at two important examples: garbage collection and scheduling.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First up is garbage collection (GC). GC is critical in the two most widely-used platforms in the world—the web (JavaScript) and Android (Java).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;GC can contribute a lot of latency at specific instances, especially relative to requirements for fast input latency. GCs on the order of 10ms wouldn't be surprising for JavaScript or Java runtimes. But that's the entire budget we have for dragging objects on a touch screen! &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;GC latency impact&lt;/span&gt; &lt;span&gt;A GC may delay ~1 frame, not all frames. But like &quot;jank&quot; from missed frames, latency jitters are noticeable and annoying to users.&lt;/span&gt;&lt;/small&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There are ways to mitigate GC-induced latency. These include moving as much GC work as possible off of the main thread and optimizing the GC to require only small individual pauses. One can also use a language that trades off some of the convenience of GC for more predictable performance. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;GC latency mitigation&lt;/span&gt; &lt;span&gt;See for example the &lt;a href=&quot;https://v8project.blogspot.com/2016/04/jank-busters-part-two-orinoco.html&quot;&gt;V8 effort&lt;/a&gt; to move more GC off the main thread and the &lt;a href=&quot;https://blog.golang.org/ismmkeynote&quot;&gt;Go work&lt;/a&gt; to bring max GC pauses well below 1ms. Languages like Swift avoid arbitrary GC by using &lt;a href=&quot;https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html&quot;&gt;automatic reference counting&lt;/a&gt;.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Another potential source of overhead is operating system scheduling. Our application (and its dependencies in the OS) are not necessarily running all the time. Other programs may be scheduled in while ours is paused, even if for a very short time.&lt;/p&gt;
&lt;p&gt;If we have a wall-clock budget of 10ms and our app takes 10ms &quot;end-to-end&quot; without accounting for any other programs running, we may well exceed our budget in wall clock time due to OS scheduling. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;CPU usage&lt;/span&gt; &lt;span&gt;Related to the scheduling issue is CPU usage. If your app meets its performance goals but requires ~100% of the CPU to do that, it may well annoy users. You'll drain batteries faster, make the device hotter, and perhaps trigger a noisy fan. In other words, even with user-facing performance held constant, lower CPU usage is a better user experience.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Every program will ask for their time slices, and there are only so many CPU cores to go around.&lt;/p&gt;
&lt;h3 id=&quot;latency-by-design&quot;&gt;Latency by design&lt;/h3&gt;
&lt;p&gt;A common source of latency on mobile interfaces is the design of the OS and apps themselves. There are some important interactions that can only be accomplished by literally waiting.&lt;/p&gt;
&lt;p&gt;Android and iOS both make substantial use of &quot;long press&quot; to access context menus, which require that the user wait hundreds of milliseconds in the middle of their command gestures.&lt;/p&gt;
&lt;p&gt;A related source is delays for disambiguation. For example, on mobile Safari there's a default 350ms delay between when the user taps a link and when the browser begins fetching the new page, in order to tell the difference between a link click and a double-tap zoom. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;iOS tap delays&lt;/span&gt; &lt;span&gt;See &lt;a href=&quot;https://webkit.org/blog/5610/more-responsive-tapping-on-ios/&quot;&gt;More Response Tapping on iOS&lt;/a&gt; for background on this delay as well as recent changes that allow application developers to work around the issue.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;h3 id=&quot;user-hostile-work&quot;&gt;User-hostile work&lt;/h3&gt;
&lt;p&gt;A major source of latency for users on the web is user-hostile work, such as downloading trackers that surveil user activity and loading intrusive ads.&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Loading a news article&lt;/p&gt;
&lt;p&gt;A ~500 word article on the Washington Post website needed 100s of HTTP requests and ~4400ms. Many of the requests are for surveillance and advertising. A small selection of the requests are shown.&lt;/p&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.inkandswitch.com/media/slow-software/washington-post-profile.png&quot;/&gt;&lt;p&gt;There are many great articles on web bloat. &lt;small class=&quot;note&quot;&gt;&lt;span class=&quot;note-title&quot;&gt;Web bloat&lt;/span&gt; &lt;span&gt;See e.g. &lt;a href=&quot;https://pxlnv.com/blog/bullshit-web/&quot;&gt;The Bullshit Web&lt;/a&gt;, &lt;a href=&quot;http://idlewords.com/talks/website_obesity.htm&quot;&gt;The Website Obesity Crisis&lt;/a&gt;, &lt;a href=&quot;https://danluu.com/web-bloat/&quot;&gt;Web bloat&lt;/a&gt;&lt;/span&gt;&lt;/small&gt; We'll just emphasize that the single biggest source of latency on many sites is downloading stuff that users don't want.&lt;/p&gt;
&lt;h3 id=&quot;application-code&quot;&gt;Application code&lt;/h3&gt;
&lt;p&gt;The last source of latency we'll mention is perhaps the most obvious: the application. If the app spends a lot of CPU time processing a given input, or executing some action, it will be slow.&lt;/p&gt;
&lt;h3 id=&quot;putting-it-together&quot;&gt;Putting it together&lt;/h3&gt;
&lt;p&gt;Let's look at an example of how latency can add up:&lt;/p&gt;
&lt;div class=&quot;caption&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;caption-title&quot;&gt;Latency waterfall example&lt;/p&gt;
&lt;p&gt;A hypothetical example of end-to-end latency from input to display.&lt;/p&gt;
&lt;p&gt;Dashed vertical lines indicate cycles the pipeline needs to wait for.&lt;/p&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.inkandswitch.com/media/slow-software/input-latency-cascade.png&quot;/&gt;&lt;p&gt;The example above is hypothetical but illustrative. It shows how there are a lot of layers that add latency and an application can exhibit high latency (much greater than frame length) even if it successfully runs at at the full frame rate.&lt;/p&gt;
&lt;h2 id=&quot;toward-fast-software&quot;&gt;Toward fast software&lt;/h2&gt;
&lt;p&gt;There is a deep stack of technology that makes a modern computer interface respond to a user's requests. Even something as simple as pressing a key on a keyboard and having the corresponding character appear in a text input box traverses a lengthy, complex gauntlet of steps, from the scan rate of the keyboard, through the OS and framework processing layers, through the graphics card rendering and display refresh rate.&lt;/p&gt;
&lt;p&gt;There is reason for this complexity, and yet we feel sad that computer users trying to be productive with these devices are so often left waiting, watching spinners, or even just with the slight but still perceptible sense that their devices simply can't keep up with them.&lt;/p&gt;
&lt;p&gt;We believe fast software empowers users and makes them more productive. We know today's software often lets users down by being slow, and we want to do better. We hope this material is helpful for you as you work on your own software.&lt;/p&gt;
&lt;p&gt;If you're interested in the topic of fast software, or have feedback on this article, we'd love to hear from you: &lt;a href=&quot;https://twitter.com/inkandswitch&quot;&gt;@inkandswitch&lt;/a&gt; or &lt;a href=&quot;mailto:hello@inkandswitch.com&quot;&gt;hello@inkandswitch.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-1&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-1&quot;&gt;[1]&lt;/a&gt; Y. Endo, Z. Wang, J. Chen, and M. Seltzer. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=10535754908454057825&quot;&gt;Using Latency to Evaluate Interactive System Performance&lt;/a&gt;,&quot; In Proceedings of the USENIX 2nd Symposium on Operating Systems Design and Implementation, 1996.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-2&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-2&quot;&gt;[2]&lt;/a&gt; A. Ng, M. Annett, P. Dietz, A. Gupta, and W. Bischof. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=8942755275099535739&quot;&gt;In the Blink of an Eye: Investigating Latency Perception During Stylus Interaction&lt;/a&gt;,&quot; In Proceedings of the 32nd Annual ACM Conference on Human Factors in Computing Systems, 2014.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-3&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-3&quot;&gt;[3]&lt;/a&gt; A. Ng, J. Lepinski, D. Wigdor, S. Sanders, and P. Dietz. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=17905801937419740410&quot;&gt;Designing for low-latency direct-touch input&lt;/a&gt;,&quot; In Proceedings of the 25th Annual ACM Symposium on User Interface Software and Technology, 2012.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-4&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-4&quot;&gt;[4]&lt;/a&gt; J. Deber, and R. Jota, C. Forlines, and D. Wigdor. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=16992791481343673285&quot;&gt;How Much Faster is Fast Enough?: User Perception of Latency &amp;amp; Latency Improvements in Direct and Indirect Touch&lt;/a&gt;,&quot; In Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems, 2015.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-5&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-5&quot;&gt;[5]&lt;/a&gt; M. Annett, A. Ng, P. Dietz, W. Bischof, and A. Gupta. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=15159574178009198437&quot;&gt;How Low Should We Go?: Understanding the Perception of Latency While Inking&lt;/a&gt;,&quot; In Proceedings of Graphics Interface 2014, 2014.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-6&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-6&quot;&gt;[6]&lt;/a&gt; M. Annett, A. Ng, P. Dietz, W. Bischof, and A. Gupta. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=15159574178009198437&quot;&gt;How Low Should We Go?: Understanding the Perception of Latency While Inking&lt;/a&gt;,&quot; In Proceedings of Graphics Interface 2014, 2014.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-7&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-7&quot;&gt;[7]&lt;/a&gt; V. Forch, T. Franke, N. Rauh, and J. Krems. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?q=Are+100+ms+Fast+Enough%3F+Characterizing+Latency+Perception+Thresholds+in+Mouse-Based+Interaction&quot;&gt;Are 100 ms Fast Enough? Characterizing Latency Perception Thresholds in Mouse-Based Interaction&lt;/a&gt;,&quot; In Engineering Psychology and Cognitive Ergonomics: Cognition and Design, 2017.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-8&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-8&quot;&gt;[8]&lt;/a&gt; J. Dabrowski and E. V. Munson. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=15646007677492381636&quot;&gt;40 years of searching for the best computer system response time&lt;/a&gt;,&quot; Interacting with Computers 23.5, 2011.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;ref-number&quot; id=&quot;ref-9&quot; href=&quot;https://www.inkandswitch.com/slow-software.html#ret-9&quot;&gt;[9]&lt;/a&gt; M. Barreda-Ángeles, I. Arapakis, X. Bai, B. Cambazoglu, A. Pereda. &quot;&lt;a href=&quot;https://scholar.google.com/scholar?cluster=3612836859261052030&quot;&gt;Unconscious Physiological Effects of Search Latency on Users and Their Click Behaviour&lt;/a&gt;,&quot; In 38th International ACM SIGIR Conference on Research and Development in Information Retrieval, 2015.&lt;/p&gt;
</description>
<pubDate>Wed, 21 Nov 2018 21:15:32 +0000</pubDate>
<dc:creator>Thibaut</dc:creator>
<og:type>website</og:type>
<og:url>https://www.inkandswitch.com/slow-software.html</og:url>
<og:title>Slow Software</og:title>
<og:description>What it means for software to be fast, and why most software is not.</og:description>
<og:image>https://www.inkandswitch.com/media/slow-software/input-latency-cascade.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.inkandswitch.com/slow-software.html</dc:identifier>
</item>
</channel>
</rss>