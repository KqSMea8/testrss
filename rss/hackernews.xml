<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Recovering Emotions After 24 Years on Antidepressants</title>
<link>https://www.madinamerica.com/2018/10/recovering-emotions-24-years-antidepressants/</link>
<guid isPermaLink="true" >https://www.madinamerica.com/2018/10/recovering-emotions-24-years-antidepressants/</guid>
<description>&lt;p&gt;This is the story of my recovery from depression. I expect it to be an ongoing process that will take a while. But I want to show that recovery is not only possible but should be the expected outcome. This writing will grow. I learned as a child to keep my mouth shut as my thoughts and ideas were not welcome. So, I am adding to this as I think of things that I need to talk about. It’s a bit of a struggle for me to communicate, so please bear with me.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I have suffered from depression my whole life. One doctor told me that dysthymia (or mild depression) was what I suffered in between my major bouts of depression. The causes of my depression were environmental. I grew up in a very dysfunctional family in Minnesota. My parents were both alcoholics and depressed, and their dysfunction became my growth environment.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I’ve had three major bouts of depression:&lt;/p&gt;
&lt;ol readability=&quot;9&quot;&gt;&lt;li readability=&quot;6&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;The first time was at puberty in the eighth grade. I had no confidence in myself. My childhood was filled with messages from my father telling me I was fat, that fat people are ugly, and that no one would ever love me. So, I grew up feeling fat and ugly. I was so sad, I could barely make it to my room after school before the tears would start falling. This happened almost every day. My parents took me to a psychologist who did hypnotherapy with me. It proved to be fairly effective for the short term.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;My second major episode of depression was as a senior in college. I came to realize that I would soon be leaving college and entering the work world. I had no confidence in myself and was soon lost in tears over my prospects. I called my parents at home and they came and got me to spend a few days at home. I was educated but not prepared for life.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;My third major episode with depression happened at about age 40 in 1991. We were now living in Oregon. I had a very good job in the high-tech sector at a computer manufacturer. I was building test equipment for our product for manufacturing and maintaining that equipment and much more. I was running the lab, and purchasing parts, and serving as a lead in my group. I had received accolades in the job I was doing and went on an employee excellence trip as an award. When I got back from that trip I was told, “We have to cut back, and your group has been dissolved.” Some people in my group lost their jobs, and others got reassigned. The management forgot about me. I was finally assigned to a job in purchasing which was basically grunt work. I was typing purchase orders and filing them. I became very depressed and suicidal. I didn’t know how to resolve the dichotomy of being told I was an excellent employee and then put into a job that was so bad for me. The rug of self-confidence was pulled out from under me.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p lang=&quot;en-US&quot;&gt;I contacted my health insurance company in 1991 to get help. I had never taken advantage of my insurance so they sent me a questionnaire to fill out to assist in finding me a doctor. It took one and a half years to get a doctor appointment. I had never been taught to fight for myself, and thus was not able to fight that battle. Worse, I believed I really didn’t deserve help.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;Once I finally got in to see the doctor, I started taking antidepressants in 1993. It took six months before I started seeing an improvement in my mood. I was also put into a cognitive behavioral therapy group which I found to be very enlightening, but of limited usefulness. It demonstrated to me how we see and think about things when depressed, and how twisted it was. It lasted 10 weeks.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;Over the years I have taken a wide variety of antidepressants. There was always a balancing act between which was worse, the depression or the side effects. Side effects included things as minor as dry mouth, to constipation, irritability, a zombie-like state and sexual dysfunction.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I stopped taking them on my own twice, with disastrous results. I got extremely depressed both times. It was worse than before I started taking medications. I would stop in the middle of the workday to run into the bathroom and cry. It felt like I had a bowling ball in my stomach. I ended up going back to my doctor both times and taking something else. Antidepressants changed my brain chemistry. Stopping them too quickly or without medical supervision is a very bad choice.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;My doctor told me after the second time that I would have to take them for the rest of my life. I believed him.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;In the end, I was taking 500 mg of Nefazadone in the evening and tried a number of different antidepressants in the morning. I had problems with all of them.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;The last morning antidepressant I took, I had to stop taking it when people told me how zombie-like I was. I spoke and moved very slowly.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;After almost 25 years of taking antidepressants, I had no emotion left whatsoever. I felt dead and wanted to be dead.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I was overwhelmed. I couldn’t do daily tasks, keep up on my daily chores, or manage my own house. We had 36 acres of property that I had been managing, but I couldn’t do it anymore.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;In 2016, my husband and I made a decision and moved to southern Oregon, and sold our house. We wanted to be closer to family and to where my husband grew up. My doctor in the Portland area told me that I needed to make contact with a new psychiatrist here to “manage” my medications.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;Moving and packing was a nightmare. Our house was in total disarray, and making decisions about what to pack and when to pack it proved to be very difficult for me. My head was spinning, and I couldn’t make decisions about what to do. We did the move very slowly. I think we went up and down I-5 about 25 times over the course of six months. The new house was situated on about five acres (we really downsized) with a panoramic view of the Rogue River valley.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I made an appointment to see a psychiatric nurse practitioner. I really liked her. I was still not doing well, so we talked about my starting anti-anxiety drugs. She seemed to understand me.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;She made it clear that she would be unable to continue treating me — she could not bill Medicare, which I became eligible for within several months of arriving in the valley. She referred me to my new doctor.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;Shortly after I started seeing him, my new doctor had me read the book &lt;em&gt;Anatomy of an Epidemic&lt;/em&gt; by Robert Whitaker. It took me a while to read it, but by the end, I became angry over the manipulation and lies that the pharmaceutical industry tells to the public about psychiatric drugs. The FDA only requires six months of studies on the efficacy of psychiatric drugs. They do not require any long-term studies. Independent research has shown that psychiatric drugs have very limited usefulness over the long term and in fact can be harmful. The pharmaceutical industry also says that mental illness represents a physical problem with the brain that needs to be fixed. There are no studies that prove that this is true. Doctors are now taught in school to prescribe drugs, not to treat mental disorders.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;Studies have also shown that in the case of antidepressants and anti-anxiety drugs, the weaning-off process can be very difficult. Close to 20% of US citizens are on a psychiatric drug of some kind and this country has the worst outcomes on mental illness by far in the developed world.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;My therapist and I jointly made the decision to wean me off of the drugs. We started by reducing my meds by 10% per month. He always asked me if I was ready to go down, and I always ended up saying yes. Finally, a doctor was teaching me, rather than telling me!&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;In the beginning, it was a very scary process for me. Since I had twice gone off medications on my own, I knew how bad it could get. I was also expecting that at some point in time, my emotions would come flooding back.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;There were a couple of episodes of anger that I experienced while I was reducing my medications. I got angry with my husband for letting the dogs out of the house at a bad time. I got angry with a bird for pecking on our metal chimney. No one got hurt, and I learned about riding out my emotions. Feeling them in a safe way.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;At the same time, I was also learning tools to help me with my emotions. I was learning to meditate and journal. Meditation in particular has proven to be an incredibly important tool for me. It has helped me “smooth out” my emotions and gain a better understanding and compassion for myself and others. I can say without exaggeration that meditation has saved my life.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;One time early in the process, I was meditating and I was thinking about how scared I was reducing my medication. After a while, a voice came into my head saying, “You are going to be okay.” What an amazing thing to happen! I eventually came to believe it, and it became easier and easier to continue reducing my meds regularly. My last dose of medication was taken in June of 2017.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;Earlier that same spring, I started attending a local Buddhist temple. Buddhism has been an interest of mine for a long time. In coming to the valley, I found myself with a choice of places to go. My doctor had started teaching me how to meditate, and I wanted to deepen that practice. At the temple I learned about various activities I could participate in that would help me learn more about my new skill. The one thing that really called to me was a one-week meditation retreat that would happen in June. At first I rebelled against the idea of one week away from home meditating, but I came to believe this was the right thing for me to do.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;So, I applied to the temple for permission to go, and I went. There were three 90-minute meditations per day. On the advice of the lamas, for each session I spent 30 minutes meditating, 30 minutes studying and another 30 minutes meditating again. I had found a book there to study. It was called &lt;em&gt;The Mindful Way Through Depression&lt;/em&gt;. As soon as I saw it I knew that was what I had to work on. I read the whole book during the course of that week.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;It was during that time that I took my last doses of antidepressants. I had started feeling emotions. During one of my study sessions, I started thinking about all those years of depression, and I started crying. I cried for about an hour. Just being able to cry was such a relief! It was very good for me. I plan on attending the same retreat this year.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;My individual therapy continues. I am also participating in group therapy. I still have issues with anxiety which I am confident I will learn how to deal with. Group therapy also involves getting a “buddy.” A buddy is someone you meet with weekly or semi-weekly to talk about what is going on in your life. We have only one assignment, and that is to tell each other our life story. After that the agenda is our own. It’s a hard thing to do. It can be very emotional. It is actually a great way to get to know someone. I have several buddies now and it has so far gotten me a few very good friends, for which I am incredibly grateful.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;What else have I learned? One thing I’ve learned about is my “inner guide.” That’s who spoke with me when I started down the path of medication adjustment. The inner guide can be called God, Great Mother, former lives, and many other things. The inner guide helps me make the hard decisions, once I learned to listen to it.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;The good news is, I am alive. I feel alive, and I now have emotions, both good and bad. I am very grateful to have all of them. Most of all, I have joy.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I am also reconnecting with my husband in a wonderful way. We are talking about what I am going through and what I went through.&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;I am learning more each day about how to be more proactive in my own life. I no longer wait for someone to tell me what to do. I learn what to do by seeking appropriate people, books, and thoughts. My growing self-confidence gives me great hope!&lt;/p&gt;
</description>
<pubDate>Sun, 07 Oct 2018 08:30:24 +0000</pubDate>
<dc:creator>BobbyVsTheDevil</dc:creator>
<og:image>https://www.madinamerica.com/wp-content/uploads/2018/10/emotions2.jpg</og:image>
<og:type>article</og:type>
<og:title>Recovering Emotions After 24 Years on Antidepressants - Mad In America</og:title>
<og:description>Weaning off the drugs was scary at first, but I now feel alive, and I have emotions, both good and bad. I am grateful to have all of them.</og:description>
<og:url>https://www.madinamerica.com/2018/10/recovering-emotions-24-years-antidepressants/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.madinamerica.com/2018/10/recovering-emotions-24-years-antidepressants/</dc:identifier>
</item>
<item>
<title>5G Got me Fired</title>
<link>https://medium.com/@dvorak/5g-got-me-fired-ce407e584c4a</link>
<guid isPermaLink="true" >https://medium.com/@dvorak/5g-got-me-fired-ce407e584c4a</guid>
<description>&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;16&quot;&gt;

&lt;p name=&quot;ee7f&quot; id=&quot;ee7f&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;As many of you know, I was unceremoniously fired from PC Magazine on Sept. 20th, 2018 after over 30 years of service. I just figured it was the new people coming in and I was an unneeded throwback to the old regime.&lt;/p&gt;
&lt;p name=&quot;64c7&quot; id=&quot;64c7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This sort of thing happens a lot. Then one of the &lt;em class=&quot;markup--em markup--p-em&quot;&gt;No Agenda&lt;/em&gt; producers noticed a recent column of mine was pulled from the magazine and redirected to someone else’s column about the same subject. It also went missing from the index of Dvorak columns. If you did a google search for the column it showed up but clicking on the Google link resulted in a re-direction to the other column.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;19&quot;&gt;
&lt;p name=&quot;9bd2&quot; id=&quot;9bd2&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The difference was my column was interpreted as critical of 5G. The replacement (and an additional column that came later), was more of a cheer-leading column.&lt;/p&gt;
&lt;p name=&quot;692a&quot; id=&quot;692a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In fact, my column was more reporting than opinion as I was reflecting on all the bad press 5G was getting from every corner. My conclusion was that, unless this stopped, 5G would never get off the ground.&lt;/p&gt;
&lt;p name=&quot;ad89&quot; id=&quot;ad89&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I never once considered that expunging my column then firing me would be part of this process. I’ve asked the editors about this and got no replies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--outsetRow&quot; data-paragraph-count=&quot;2&quot;&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*WI-raK1JOcvP6BNeVchZgg.jpeg&quot; data-width=&quot;1017&quot; data-height=&quot;906&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*WI-raK1JOcvP6BNeVchZgg.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*WI-raK1JOcvP6BNeVchZgg.jpeg&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*YIu_0Ybe-W6g10gdSQ7Yqg.jpeg&quot; data-width=&quot;1337&quot; data-height=&quot;948&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*YIu_0Ybe-W6g10gdSQ7Yqg.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*YIu_0Ybe-W6g10gdSQ7Yqg.jpeg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;34.718772826881&quot;&gt;
&lt;p name=&quot;54bc&quot; id=&quot;54bc&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This is a cautionary tale. Anyone writing for any publisher in today’s commercial market, where the managed advertorial and native ad seems to be the only way to make money, needs to be cautious.&lt;/p&gt;
&lt;p name=&quot;a4fb&quot; id=&quot;a4fb&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;More importantly today’s readers need to be a little more than cautious when believing anything. Native advertising is a most insidious concept and should be rejected by every publisher. Instead it is welcomed by the broadcasting networks and most of the major newspapers including the &lt;em class=&quot;markup--em markup--p-em&quot;&gt;New York Times&lt;/em&gt;. Are the writers saying nice things or are they paid to say nice things?&lt;/p&gt;
&lt;p name=&quot;84b1&quot; id=&quot;84b1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Whatever the case, the independent voice cannot exist in this corrupt milieu and be truly independent. This is why I was happy to help develop the value-for-value model employed at the &lt;em class=&quot;markup--em markup--p-em&quot;&gt;No Agenda&lt;/em&gt; podcast where I’ve been working with Adam Curry for over a decade. There are no advertisers, period.&lt;/p&gt;
&lt;p name=&quot;9465&quot; id=&quot;9465&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I do not want to brag about being a visionary and say that I saw this coming 10 years ago, but I did. Independent opinions and viewpoints as well as unhindered research can only be done with a direct payment method from the customer (the reader).&lt;/p&gt;
&lt;p name=&quot;1601&quot; id=&quot;1601&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Advertising, advertisers, corporate sponsors cannot abide by “opinions” mucking up their strategies.&lt;/p&gt;
&lt;p name=&quot;d591&quot; id=&quot;d591&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Keep that in mind when you choose your information sources. —&lt;em class=&quot;markup--em markup--p-em&quot;&gt; jcd&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;efb4&quot; id=&quot;efb4&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Addendum&lt;/em&gt;&lt;/strong&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt; — the original 5G column is still up in India!&lt;/em&gt; &lt;a href=&quot;https://in.pcmag.com/opinion/124983/the-problem-with-5g&quot; data-href=&quot;https://in.pcmag.com/opinion/124983/the-problem-with-5g&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Click here.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 06 Oct 2018 23:11:16 +0000</pubDate>
<dc:creator>adamrezich</dc:creator>
<og:title>5G Got me Fired – John C. Dvorak – Medium</og:title>
<og:url>https://medium.com/@dvorak/5g-got-me-fired-ce407e584c4a</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*HI63LHqfpen63TOCaecawg.jpeg</og:image>
<og:description>As many of you know, I was unceremoniously fired from PC Magazine on Sept.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@dvorak/5g-got-me-fired-ce407e584c4a</dc:identifier>
</item>
<item>
<title>Writing system software: code comments</title>
<link>http://antirez.com/news/124</link>
<guid isPermaLink="true" >http://antirez.com/news/124</guid>
<description>&lt;span class=&quot;info&quot;&gt;&lt;span class=&quot;username&quot;&gt;&lt;a href=&quot;http://antirez.com/user/antirez&quot;&gt;antirez&lt;/a&gt;&lt;/span&gt; 19 hours ago. 27017 views.&lt;/span&gt;&lt;pre&gt;
For quite some time I’ve wanted to record a new video talking about code comments for my &quot;writing system software&quot; series on YouTube. However, after giving it some thought, I realized that the topic was better suited for a blog post, so here we are. In this post I analyze Redis comments, trying to categorize them.  Along the way I try to show why, in my opinion, writing comments is of paramount importance in order to produce good code, that is maintainable in the long run and understandable by others and by the authors during modifications and debugging activities.

Not everybody thinks likewise. Many believe that comments are useless if the code is solid enough. The idea is that when everything is well designed, the code itself documents what the code is doing, hence code comments are superfluous. I disagree with that vision for two main reasons:

1. Many comments don't explain what the code is doing. They explain what you can't understand just from what the code does. Often this missing information is *why* the code is doing a certain action, or why it’s doing something that is clear instead of something else that would feel more natural.

2. While it is not generally useful to document, line by line, what the code is doing, because it is understandable just by reading it, a key goal in writing readable code is to lower the amount of effort and the number of details the reader should take into her or his head while reading some code. So comments can be, for me, a tool for lowering the cognitive load of the reader.

The following code snippet is a good example of the second point above. Note that all the code snippets in this blog post are obtained from the Redis source code. Every code snipped is presented prefixed by the file name it was extracted from. The branch used is the current &quot;unstable&quot; with hash 32e0d237.

scripting.c:
    /* Initial Stack: array */
    lua_getglobal(lua,&quot;table&quot;);
    lua_pushstring(lua,&quot;sort&quot;);
    lua_gettable(lua,-2);       /* Stack: array, table, table.sort */
    lua_pushvalue(lua,-3);      /* Stack: array, table, table.sort, array */
    if (lua_pcall(lua,1,0,0)) {
        /* Stack: array, table, error */

        /* We are not interested in the error, we assume that the problem is
         * that there are 'false' elements inside the array, so we try
         * again with a slower function but able to handle this case, that
         * is: table.sort(table, __redis__compare_helper) */
        lua_pop(lua,1);             /* Stack: array, table */
        lua_pushstring(lua,&quot;sort&quot;); /* Stack: array, table, sort */
        lua_gettable(lua,-2);       /* Stack: array, table, table.sort */
        lua_pushvalue(lua,-3);      /* Stack: array, table, table.sort, array */
        lua_getglobal(lua,&quot;__redis__compare_helper&quot;);
        /* Stack: array, table, table.sort, array, __redis__compare_helper */
        lua_call(lua,2,0);
    }

Lua uses a stack based API. A reader following each call in the function above, having also a Lua API reference at hand, will be able to mentally reconstruct the stack layout at every given moment. But why to force the reader to do such effort? While writing the code, the original author had to do that mental effort anyway. What I did there was just to annotate every line with the current stack layout after every call. Reading this code is now trivial, regardless of the fact the Lua API is otherwise non trivial to follow.

My goal here is not just to offer my point of view on the usefulness of comments as a tool to provide a background that is not clearly available reading a local section of the source code. But also to also provide some evidence about the usefulness of the kind of comments that are historically considered useless or even dangerous, that is, comments stating *what* the code is doing, and not why.

# Classification of comments

The way I started this work was by reading random parts of the Redis source code, to check if and why comments were useful in different contexts. What quickly emerged was that comments are useful for very different reasons, since they tend to be very different in function, writing style, length and update frequency. I eventually turned the work into a classification task.

During my research I identified nine types of comments:

* Function comments
* Design comments
* Why comments
* Teacher comments
* Checklist comments
* Guide comments
* Trivial comments
* Debt comments
* Backup comments

The first six are, in my opinion, mostly very positive forms of commenting, while the final three are somewhat questionable. In the next sections each type will be analyzed with examples from the Redis source code.

FUNCTION COMMENTS

The goal of a function comment is to prevent the reader from reading code in the first place. Instead, after reading the comment, it should be possible to consider some code as a black box that should obey certain rules. Normally function comments are at the top of functions definitions, but they may be at other places, documenting classes, macros, or other functionally isolated blocks of code that define some interface.

rax.c:

    /* Seek the grestest key in the subtree at the current node. Return 0 on
     * out of memory, otherwise 1. This is an helper function for different
     * iteration functions below. */
    int raxSeekGreatest(raxIterator *it) {
    ...

Function comments are actually a form of in-line API documentation. If the function comment is written well enough, the user should be able most of the times to jump back to what she was reading (reading the code calling such API) without having to read the implementation of a function, a class, a macro, or whatever.

Among all the kinds of comments, these are the ones most widely accepted by the programming community at large as needed. The only point to analyze is if it is a good idea to place comments that are largely API reference documentation inside the code itself. For me the answer is simple: I want the API documentation to exactly match the code. As the code is changed, the documentation should be changed. For this reason, by using function comments as a prologue of functions or other elements, we make the API documentation close to the code, accomplishing three results:

* As the code is changed, the documentation can be easily changed at the same time, without the risk of making the API reference stale.

* This approach maximizes the probability that the author of the change, that should be the one better understanding the change, will also be the author of the API documentation change.

* Reading the code is handy to find the documentation of functions or methods directly where they are defined, so that the reader of the code can focus solely on the code, instead of context switching between code and documentation.

DESIGN COMMENTS

While a &quot;function comment&quot; is usually located at the start of a function, a design comment is more often located at the start of a file. The design comment basically states how and why a given piece of code uses certain algorithms, techniques, tricks, and implementation. It is an higher level overview of what you'll see implemented in the code. With such background, reading the code will be simpler. Moreover I tend to trust more code where I can find design notes. At least I know that some kind of explicit design phase happened, at some point, during the development process.

In my experience design comments are also very useful in order to state, in case the solution proposed by the implementation looks a bit too trivial, what were the competing solutions and why a very simple solution was considered to be enough for the case at hand. If the design is correct, the reader will convince herself that the solution is appropriate and that such simplicity comes from a process, not from being lazy or only knowing how to code basic things.

bio.c:
     * DESIGN
     * ------
     *
     * The design is trivial, we have a structure representing a job to perform
     * and a different thread and job queue for every job type.
     * Every thread waits for new jobs in its queue, and process every job
     * sequentially.
     ...

WHY COMMENTS

Why comments explain the reason why the code is doing something, even if what the code is doing is crystal clear. See the following example from the Redis replication code.

replication.c:

    if (idle &amp;gt; server.repl_backlog_time_limit) {
        /* When we free the backlog, we always use a new
         * replication ID and clear the ID2. This is needed
         * because when there is no backlog, the master_repl_offset
         * is not updated, but we would still retain our replication
         * ID, leading to the following problem:
         *
         * 1. We are a master instance.
         * 2. Our replica is promoted to master. It's repl-id-2 will
         *    be the same as our repl-id.
         * 3. We, yet as master, receive some updates, that will not
         *    increment the master_repl_offset.
         * 4. Later we are turned into a replica, connect to the new
         *    master that will accept our PSYNC request by second
         *    replication ID, but there will be data inconsistency
         *    because we received writes. */
        changeReplicationId();
        clearReplicationId2();
        freeReplicationBacklog();
        serverLog(LL_NOTICE,
            &quot;Replication backlog freed after %d seconds &quot;
            &quot;without connected replicas.&quot;,
            (int) server.repl_backlog_time_limit);
    }

If I check just the function calls there is very little to wonder: if a timeout is reached, change the main replication ID, clear the secondary ID, and finally free the replication backlog. However what is not exactly clear is why we need to change the replication IDs when freeing the backlog.

Now this is the kind of thing that happens continuously in software once it has reached a given level of complexity. Regardless of the code involved, the replication protocol has some level of complexity itself, so we need to do certain things in order to make sure that other bad things can't happen. Probably these kind of comments are, in some way, opportunities to reason about the system and check if it should be improved, so that such complexity is no longer needed, hence also the comment can be removed. However often making something simpler may make something else harder or is simply not viable, or requires future work breaking backward compatibility.

Here is another one.

replication.c:

    /* SYNC can't be issued when the server has pending data to send to
     * the client about already issued commands. We need a fresh reply
     * buffer registering the differences between the BGSAVE and the current
     * dataset, so that we can copy to other replicas if needed. */
    if (clientHasPendingReplies(c)) {
        addReplyError(c,&quot;SYNC and PSYNC are invalid with pending output&quot;);
        return;
    }

If you run SYNC while there is still pending output (from a past command) to send to the client, the command should fail because during the replication handshake the output buffer of the client is used to accumulate changes,  and may be later duplicated to serve other replicas connecting while we are already creating the RDB file for the full sync with the first replica. This is the why we do that. What we do is trivial. Pending replies? Emit an error. Why is rather obscure without the comment.

One may think that such comments are needed only when describing complex protocols and interactions, like in the case of replication. Is that the case? Let's change completely file and goals, and we see still such comments everywhere.

expire.c:

    for (j = 0; j &amp;lt; dbs_per_call &amp;amp;&amp;amp; timelimit_exit == 0; j++) {
        int expired;
        redisDb *db = server.db+(current_db % server.dbnum);

        /* Increment the DB now so we are sure if we run out of time
         * in the current DB we'll restart from the next. This allows to
         * distribute the time evenly across DBs. */
        current_db++;
        ...

That's an interesting one. We want to expire keys from different DBs, as long as we have some time. However instead of incrementing the “database ID” to process next at the end of the loop processing the current database, we do it differently: we select the current DB in the `db` variable, but then we immediately increment the ID of the next database to process (at the next call of this function). This way if the function terminates because too much effort was spent in a single call, we don't have the problem of restarting again from the same database, letting logically expired keys accumulating in the other databases since we are too focused in processing the same database again and again.

With such comment we both explain why we increment at that stage, and that the next person going to modify the code, should preserve such quality. Note that without the comment the code looks completely harmless. Select, increment, go to do some work. There is no evident reason for not relocating the increment at the end of the loop where it could look more natural.

Trivia: the loop increment was indeed at the end in the original code. It was moved there during a fix: at the same time the comment was added. So let's say this is kinda of a &quot;regression comment&quot;.

TEACHER COMMENTS

Teacher comments don't try to explain the code itself or certain side effects we should be aware of. They teach instead the *domain* (for example math, computer graphics, networking, statistics, complex data structures) in which the code is operating, that may be one outside of the reader skills set, or is simply too full of details to recall all them from memory.

The LOLWUT command in version 5 needs to display rotated squares on the screen (&lt;a rel=&quot;nofollow&quot; href=&quot;http://antirez.com/news/123&quot;&gt;http://antirez.com/news/123&lt;/a&gt;). In order to do so it uses some basic trigonometry: despite the fact that the math used is simple, many programmers reading the Redis source code may not have any math background, so the comment at the top of the function explains what's going to happen inside the function itself.

lolwut5.c:

    /* Draw a square centered at the specified x,y coordinates, with the specified
     * rotation angle and size. In order to write a rotated square, we use the
     * trivial fact that the parametric equation:
     *
     *  x = sin(k)
     *  y = cos(k)
     *
     * Describes a circle for values going from 0 to 2*PI. So basically if we start
     * at 45 degrees, that is k = PI/4, with the first point, and then we find
     * the other three points incrementing K by PI/2 (90 degrees), we'll have the
     * points of the square. In order to rotate the square, we just start with
     * k = PI/4 + rotation_angle, and we are done.
     *
     * Of course the vanilla equations above will describe the square inside a
     * circle of radius 1, so in order to draw larger squares we'll have to
     * multiply the obtained coordinates, and then translate them. However this
     * is much simpler than implementing the abstract concept of 2D shape and then
     * performing the rotation/translation transformation, so for LOLWUT it's
     * a good approach. */

The comment does not contain anything that is related to the code of the function itself, or its side effects, or the technical details related to the function. The description is only limited to the mathematical concept that is used inside the function in order to reach a given goal.

I think teacher comments are of huge value. They teach something in case the reader is not aware of such concepts, or at least provide a starting point for further investigation. But this in turn means that a teacher comment increases the amount of programmers that can read some code path: writing code that can be read by many programmers is a major goal of mine. There are developers that may not have math skills but are very solid programmers that can contribute some wonderful fix or optimization. And in general code should be read other than being executed, since is written by humans for other humans.

There are cases where teacher comments are almost impossible to avoid in order to write decent code. A good example is the Redis radix tree implementation. Radix trees are articulated data structures. The Redis implementation re-states the whole data structure theory as it implements it, showing the different cases and what the algorithm does to merge or split nodes and so forth. Immediately after each section of comment, we have the code implementing what was written before. After months of not touching the file implementing the radix tree, I was able to open it, fix a bug in a few minutes, and continue doing something else. There is no need to study again how a radix tree works, since the explanation is the same thing as the code itself, all mixed together.

The comments are too long, so I'll just show certain snippets.

rax.c:

    /* If the node we stopped at is a compressed node, we need to
     * split it before to continue.
     *
     * Splitting a compressed node have a few possible cases.
     * Imagine that the node 'h' we are currently at is a compressed
     * node contaning the string &quot;ANNIBALE&quot; (it means that it represents
     * nodes A -&amp;gt; N -&amp;gt; N -&amp;gt; I -&amp;gt; B -&amp;gt; A -&amp;gt; L -&amp;gt; E with the only child
     * pointer of this node pointing at the 'E' node, because remember that
     * we have characters at the edges of the graph, not inside the nodes
     * themselves.
     *
     * In order to show a real case imagine our node to also point to
     * another compressed node, that finally points at the node without
     * children, representing 'O':
     *
     *     &quot;ANNIBALE&quot; -&amp;gt; &quot;SCO&quot; -&amp;gt; []

     ... snip ...

     * 3a. IF $SPLITPOS == 0:
     *     Replace the old node with the split node, by copying the auxiliary
     *     data if any. Fix parent's reference. Free old node eventually
     *     (we still need its data for the next steps of the algorithm).
     *
     * 3b. IF $SPLITPOS != 0:
     *     Trim the compressed node (reallocating it as well) in order to
     *     contain $splitpos characters. Change chilid pointer in order to link
     *     to the split node. If new compressed node len is just 1, set
     *     iscompr to 0 (layout is the same). Fix parent's reference.

     ... snip ...

        if (j == 0) {
            /* 3a: Replace the old node with the split node. */
            if (h-&amp;gt;iskey) {
                void *ndata = raxGetData(h);
                raxSetData(splitnode,ndata);
            }
            memcpy(parentlink,&amp;amp;splitnode,sizeof(splitnode));
        } else {
            /* 3b: Trim the compressed node. */
            trimmed-&amp;gt;size = j;
            memcpy(trimmed-&amp;gt;data,h-&amp;gt;data,j);
            trimmed-&amp;gt;iscompr = j &amp;gt; 1 ? 1 : 0;
            trimmed-&amp;gt;iskey = h-&amp;gt;iskey;
            trimmed-&amp;gt;isnull = h-&amp;gt;isnull;
            if (h-&amp;gt;iskey &amp;amp;&amp;amp; !h-&amp;gt;isnull) {
                void *ndata = raxGetData(h);
                raxSetData(trimmed,ndata);
            }
            raxNode **cp = raxNodeLastChildPtr(trimmed);
        ...

As you can see the description in the comment is then matched with the same labels in the code. It's hard to show it all in this form so if you want to get the whole idea just check the full file at:

    &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.com/antirez/redis/blob/unstable/src/rax.c&quot;&gt;https://github.com/antirez/redis/blob/unstable/src/rax.c&lt;/a&gt;

This level of commenting is not needed for everything, but things like radix trees are really full of little details and corner cases. They are hard to recall, and certain details are *specific* to a given implementation. Doing this for a linked list does not make much sense of course. It's a matter of personal sensibility to understand when it's worth it or not.

CHECKLIST COMMENTS

This is a very common and odd one: sometimes because of language limitations, design issues, or simply because of the natural complexity arising in systems, it is not possible to centralize a given concept or interface in one piece, so there are places in the code that tells you to remember to do things in some other place of the code. The general concept is:

    /* Warning: if you add a type ID here, make sure to modify the
     * function getTypeNameByID() as well. */

In a perfect world this should never be needed, but in practice sometimes there are no escapes from that. For example Redis types could be represented using an &quot;object type&quot; structure, and every object could link to the type the object it belongs, so you could do:

    printf(&quot;Type is %s\n&quot;, myobject-&amp;gt;type-&amp;gt;name);

But guess what? It's too expensive for us, because a Redis object is represented like this:

    typedef struct redisObject {
        unsigned type:4;
        unsigned encoding:4;
        unsigned lru:LRU_BITS; /* LRU time (relative to global lru_clock) or
                                * LFU data (least significant 8 bits frequency
                                * and most significant 16 bits access time). */
        int refcount;
        void *ptr;
    } robj;

We use 4 bits instead of 64 to represent the type. This is just to show why sometimes things are not as centralized and natural as they should be. When the situation is like that, sometimes what helps is to use defensive commenting in order to make sure that if a given code section is touched, it reminds you to make sure to also modify other parts of the code. Specifically a checklist comment does one or both of the following things:

* It tells you a set of actions to do when something is modified.

* It warns you about the way certain changes should be operated.

Another example in blocked.c, when a new blocking type is introduced.

blocked.c:

     * When implementing a new type of blocking opeation, the implementation
     * should modify unblockClient() and replyToBlockedClientTimedOut() in order
     * to handle the btype-specific behavior of this two functions.
     * If the blocking operation waits for certain keys to change state, the
     * clusterRedirectBlockedClientIfNeeded() function should also be updated.

The checklist comment is also useful in a context similar to when certain &quot;why comments&quot; are used: when it is not obvious why some code must be executed at a given place, after or before something. But while the why comment may tell you why a statement is there, the checklist comment used in the same case is more biased towards telling you what rules to follow if you want to modify it (in this case the rule is, follow a given ordering), without breaking the code behavior.

cluster.c:

    /* Update our info about served slots.
     *
     * Note: this MUST happen after we update the master/replica state
     * so that CLUSTER_NODE_MASTER flag will be set. */

Checklist comments are very common inside the Linux kernel, where the order of certain operations is extremely important.

GUIDE COMMENT

I abuse guide comments at such a level that probably, the majority of comments in Redis are guide comments. Moreover guide comments are exactly what most people believe to be completely useless comments.

* They don't state what is not clear from the code.

* There are no design hints in guide comments.

Guide comments do a single thing: they babysit the reader, assist her while processing what is written in the source code by providing clear division, rhythm, and introducing what you are going to read.

Guide comments’ sole reason to exist is to lower the cognitive load of the programmer reading some code.

rax.c:

    /* Call the node callback if any, and replace the node pointer
     * if the callback returns true. */
    if (it-&amp;gt;node_cb &amp;amp;&amp;amp; it-&amp;gt;node_cb(&amp;amp;it-&amp;gt;node))
        memcpy(cp,&amp;amp;it-&amp;gt;node,sizeof(it-&amp;gt;node));

    /* For &quot;next&quot; step, stop every time we find a key along the
     * way, since the key is lexicographically smaller compared to
     * what follows in the sub-children. */
    if (it-&amp;gt;node-&amp;gt;iskey) {
        it-&amp;gt;data = raxGetData(it-&amp;gt;node);

        return 1;
    }

There is nothing that the comments are adding to the code above. The guide comments above will assist you reading the code, moreover they'll acknowledge you about the fact you are understanding it right. More examples.

networking.c:

    /* Log link disconnection with replica */
    if ((c-&amp;gt;flags &amp;amp; CLIENT_SLAVE) &amp;amp;&amp;amp; !(c-&amp;gt;flags &amp;amp; CLIENT_MONITOR)) {
        serverLog(LL_WARNING,&quot;Connection with replica %s lost.&quot;,
            replicationGetSlaveName(c));
    }

    /* Free the query buffer */
    sdsfree(c-&amp;gt;querybuf);
    sdsfree(c-&amp;gt;pending_querybuf);
    c-&amp;gt;querybuf = NULL;

    /* Deallocate structures used to block on blocking ops. */
    if (c-&amp;gt;flags &amp;amp; CLIENT_BLOCKED) unblockClient(c);
    dictRelease(c-&amp;gt;bpop.keys);

    /* UNWATCH all the keys */
    unwatchAllKeys(c);
    listRelease(c-&amp;gt;watched_keys);

    /* Unsubscribe from all the pubsub channels */
    pubsubUnsubscribeAllChannels(c,0);
    pubsubUnsubscribeAllPatterns(c,0);
    dictRelease(c-&amp;gt;pubsub_channels);
    listRelease(c-&amp;gt;pubsub_patterns);

    /* Free data structures. */
    listRelease(c-&amp;gt;reply);
    freeClientArgv(c);

    /* Unlink the client: this will close the socket, remove the I/O
     * handlers, and remove references of the client from different
     * places where active clients may be referenced. */
    unlinkClient(c);

Redis is *literally* ridden of guide comments, so basically every file you open will contain plenty of them. Why bother? Of all the comment types I analyzed so far in this blog post, I'll admit that this is absolutely the most subjective one. I don't value code without such comments as less good, yet I firmly believe that if people regard the Redis code as readable, some part of the reason is because of all the guide comments.

Guide comments have some usefulness other than the stated ones. Since they clearly divide the code in isolated sections, an addition to the code is very likely to be inserted in the appropriate section, instead of ending in some random part. To have related statements nearby is a big readability win.

Also make sure to check the guide comment above before the unlinkClient() function is called. The guide comment briefly tells the reader what the function is going to do, avoiding the need to jump back into the function if you are only interested in the big picture.

TRIVIAL COMMENTS

Guide comments are very subjective tools. You may like them or not. I love them. However, a guide comment can degenerate into a a very bad comment: it can easily turn into a &quot;trivial comment&quot;. A trivial comment is a guide comment where the cognitive load of reading the comment is the same or higher than just reading the associated code. The following form of trivial comment is exactly what many books will tell you to avoid.

    array_len++;        /* Increment the length of our array. */

So if you write guide comments, make sure you avoid writing trivial ones.

DEBT COMMENTS

Debt comments are technical debts statements hard coded inside the source code itself:

t_stream.c:

    /* Here we should perform garbage collection in case at this point
     * there are too many entries deleted inside the listpack. */
    entries -= to_delete;
    marked_deleted += to_delete;
    if (entries + marked_deleted &amp;gt; 10 &amp;amp;&amp;amp; marked_deleted &amp;gt; entries/2) {
        /* TODO: perform a garbage collection. */
    }

The snippet above is extracted from the Redis streams implementation. Redis streams allow to delete elements from the middle using the XDEL command. This may be useful in different ways, especially in the context of privacy regulations where certain data cannot be retained no matter what data structure or system you are using in order to store them. It is a very odd use case for a mostly append only data structure, but if users start to delete more than 50% of items in the middle, the stream starts to fragment, being composed of &quot;macro nodes&quot;. Entries are just flagged as deleted, but are only reclaimed once all the entries in a given macro node are freed. So your mass deletions will change the memory behavior of streams.

Right now, this looks like a non issue, since I don't expect users to delete most history in a stream. However it is possible that in the future we may want to introduce garbage collection: the macro node could be compacted once the ratio between the deleted entries and the existing entries reach a given level. Moreover nearby nodes may be glued together after the garbage collection. I was kind of afraid that later I would no longer remember what were the entry points to do the garbage collection, so I put TODO comments, and even wrote the trigger condition.

This is probably not great. A better idea was instead to write, in the design comment at the top of the file, why we are currently not performing GC. And what are the entry points for GC, if we want to add it later.

FIXME, TODO, XXX, &quot;This is a hack&quot;, are all forms of debt comments. They are not great in general, I try to avoid them, but it's not always possible, and sometimes instead of forgetting forever about a problem, I prefer to put a node inside the source code. At least one should periodically grep for such comments, and see if it is possible to put the notes in a better place, or if the problem is no longer relevant or could be fixed right away.

BACKUP COMMENTS

Finally backup comments are the ones where the developer comments older versions of some code block or even a whole function, because she or he is insecure about the change that was operated in the new one. What is puzzling is that this still happens now that we have Git. I guess people have an uneasy feeling about losing that code fragment, considered more sane or stable, in some years old commit.

But source code is not for making backups. If you want to save an older version of a function or code part, your work is not finished and cannot be committed. Either make sure the new function is better than the past one, or take it just in your development tree until you are sure.

Backup comments end my classification. Let's try some conclusion.

# Comments as an analysis tool.

Comments are rubber duck debugging on steroids, except you are not talking with a rubber duck, but with the future reader of the code, which is more intimidating than a rubber duck, and can use Twitter. So in the process you really try to understand if what you are stating *is acceptable*, honorable, good enough. And if it is not, you make your homework, and come up with something more decent.

It is the same process that happens while writing documentation: the writer attempts to provide the gist of what a given piece of code does, what are the guarantees, the side effects. This is often a bug hunting opportunity. It is very easy while describing something to find that it has holes... You can't really describe it all because you are not sure about a given behavior: such behavior is just emerging from complexity, at random. You really don't want that, so you go back and fix it all. I find this a splendid reason to write comments.

# Writing good comments is harder than writing good code

You may think that writing comments is a lesser noble form of work. After all you *can code*! However consider this: code is a set of statement and function calls, or whatever your programming paradigm is. Sometimes such statements do not make much sense, honestly, if the code is not good. Comments require always to have some design process ongoing, and to understand the code you are writing in a deeper sense. On top of that, in order to write good comments, you have to develop your writing skills. The same writing skills will assist you writing emails, documentation, design documents, blog posts, and commit messages.

I write code because I have an urgent sense to share and communicate more than anything else. Comments coadiuvate the code, assist it, describe our efforts, and after all I love writing them as much as I love writing code itself.

(Thanks to Michel Martens for giving feedbacks during the writing of this blog post)
&lt;/pre&gt;</description>
<pubDate>Sat, 06 Oct 2018 20:18:45 +0000</pubDate>
<dc:creator>indy</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://antirez.com/news/124</dc:identifier>
</item>
<item>
<title>Microsoft open sources parts of Minecraft: Java Edition</title>
<link>https://minecraft.net/en-us/article/programmers-play-minecrafts-inner-workings</link>
<guid isPermaLink="true" >https://minecraft.net/en-us/article/programmers-play-minecrafts-inner-workings</guid>
<description>&lt;p&gt;Nathan hopes that giving the Minecraft community access to Brigadier can make it “extremely user friendly one day.” After all, commands are still not commonly used by a lot of Minecraft players. “Some people don't really look at commands because they’re a bit intimidating and I totally understand why,” says Nathan. “This is supposed to help a lot with that.”&lt;/p&gt;
&lt;p&gt;Brigadier takes the random strings of text you enter into Minecraft and turns into an actual function that the game will perform (so you've got Brigadier to thank for all those sticks). “A lot of people think this is a really easy function,” says Nathan. “But the reality is actually extremely complicated.&lt;/p&gt;
&lt;p&gt;“We thought this would be an amazing first test of the system. It’s a great thing that people can just pick up and use in any kind of project. It doesn’t even have to be a game – I’ve seen some people trying to use it on telegram chat bots, so you can just message it and it’ll do what you’re asking it to do.” Neat!&lt;/p&gt;
&lt;p&gt;Brigadier has only been available for just over a week, and already we've seen people trying to improve the code, and even make Nathan's handy readme doc a bit prettier and more user-friendly! Wait, you lot are writing stuff for Nathan for &lt;em&gt;free?&lt;/em&gt; Are you trying to put me out of a job?&lt;/p&gt;
&lt;h2 id=&quot;data-fixer-upper&quot;&gt;DATA FIXER UPPER&lt;/h2&gt;
&lt;p&gt;“The name is so stupid that we had to keep it,” explains Nathan, unapologetically. DataFixerUpper does exactly what it sounds like, and it's one of the most important parts of the Minecraft game engine. It's also the second library we're opening up!&lt;/p&gt;
&lt;p&gt;“The problem that we have in Minecraft, that I’m pretty sure every game has, is that data changes over time,” says Nathan. “we add a thing into Minecraft and then we kind of have to change how we store level data, how we store all the save files and stuff to accommodate it.&lt;/p&gt;
&lt;p&gt;“When we load up any world in Minecraft right now, you can have some data that has not been touched for six years, because that chunk was last played six years ago. So we need to know: 'OK, this level actually looks really old. Now we’ve got to turn that old data into what it should look like now – in a way that the game can currently read.'&lt;/p&gt;
&lt;p&gt;“We have one little unit which uses DataFixerUpper that just says to Minecraft: 'this is how to turn anything into the data format that the game is going to use.' And so the game is now only saying 'This is how the data looks, so this is how I’m going to read it.'&lt;/p&gt;
&lt;p&gt;&quot;Basically, before Minecraft actually loads the chunks, it goes through DataFixerUpper and that turns it into what it should currently be now.”&lt;/p&gt;
&lt;p&gt;Confused? That's fair – DataFixerUpper is a lot less user-friendly than Brigadier – but that's also one of the reasons why we're making it available to everyone!&lt;/p&gt;
</description>
<pubDate>Sat, 06 Oct 2018 19:52:20 +0000</pubDate>
<dc:creator>aw1621107</dc:creator>
<og:image>https://community-content-assets.minecraft.net/upload/f66187c39483f072b434a9cd06bfe6d6-Header.jpeg</og:image>
<og:type>article</og:type>
<og:url>https://minecraft.net/en-us/article/programmers-play-minecrafts-inner-workings</og:url>
<og:title>Programmers: Play with Minecraft's Inner Workings!</og:title>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://minecraft.net/en-us/article/programmers-play-minecrafts-inner-workings</dc:identifier>
</item>
<item>
<title>Microsoft suspends Windows 10 update, citing data loss reports</title>
<link>https://techcrunch.com/2018/10/06/microsoft-suspends-windows-10-update-citing-data-loss-reports/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/10/06/microsoft-suspends-windows-10-update-citing-data-loss-reports/</guid>
<description>&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;A few day after making the latest version of Windows 10 &lt;a href=&quot;https://techcrunch.com/2018/10/02/the-windows-10-october-2018-update-is-now-available/&quot;&gt;available to users&lt;/a&gt;, Microsoft &lt;a href=&quot;https://www.theverge.com/2018/10/6/17944966/microsoft-windows-10-october-2018-update-documents-deleted-issues-windows-update-paused&quot;&gt;has suspended&lt;/a&gt; the update, citing multiple reports of user data loss.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;“We have paused the rollout of the Windows 10 October 2018 Update (version 1809) for all users as we investigate isolated reports of users missing some files after updating,” the company writes &lt;a href=&quot;https://support.microsoft.com/en-us/help/4464619/windows-10-update-history&quot;&gt;on its support site.&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;The company opened up the latest version of the desktop/laptop operating system as part of its big Surface event earlier this week. While it hasn’t officially started pushing the update, some users who’ve downloaded the OS refresh have begun reporting the deletion of documents, photos and other info on a variety of different forums.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;The company appears to still be investigating precisely what’s going on here — and how widespread the issue is. Plans to begin pushing it to users early next week are likely delayed until the company gets to the root of the issue. Meantime, if you were planning to install the update, it’s probably best to just wait this one out. &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 06 Oct 2018 18:30:43 +0000</pubDate>
<dc:creator>doppp</dc:creator>
<og:title>Microsoft suspends Windows 10 update, citing data loss reports</og:title>
<og:description>A few day after making the latest version of Windows 10 available to users, Microsoft has suspended the update, citing multiple reports of user data loss. “We have paused the rollout of the Windows 10 October 2018 Update (version 1809) for all users as we investigate isolated reports of users missi…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/10/CMB_42541.jpg?w=600</og:image>
<og:url>http://social.techcrunch.com/2018/10/06/microsoft-suspends-windows-10-update-citing-data-loss-reports/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/10/06/microsoft-suspends-windows-10-update-citing-data-loss-reports/</dc:identifier>
</item>
<item>
<title>The Python Unicode Mess</title>
<link>http://changelog.complete.org/archives/9938-the-python-unicode-mess</link>
<guid isPermaLink="true" >http://changelog.complete.org/archives/9938-the-python-unicode-mess</guid>
<description>&lt;p&gt;Unicode has solved a lot of problems. Anyone that remembers the mess of ISO-8859-* vs. CP437 (and of course it’s even worse for non-Western languages) can attest to that. And of course, these days they’re doing the useful work of…. codifying emojis.&lt;/p&gt;
&lt;p&gt;Emojis aside, things aren’t all so easy. Today’s cause of pain: Python 3. So much pain.&lt;/p&gt;
&lt;p&gt;Python decided to fully integrate Unicode into the language. Nice idea, right?&lt;/p&gt;
&lt;p&gt;But here come the problems. And they are numerous.&lt;/p&gt;
&lt;p&gt;gpodder, for instance, frequently exits with tracebacks due to Python errors converting podcast titles with smartquotes into ASCII. Then you have the case where the pexpect &lt;a href=&quot;https://pexpect.readthedocs.io/en/stable/overview.html&quot;&gt;docs&lt;/a&gt; say to use &lt;tt&gt;logfile = sys.stdout&lt;/tt&gt; to show the interaction with the virtual terminal. Only that &lt;a href=&quot;https://stackoverflow.com/questions/35330424/expect-in-python3-is-throwing-error-as-must-be-in-str-not-bytes&quot;&gt;causes an error these days&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But processing of filenames takes the cake. I was recently dealing with data from 20 years ago, before UTF-8 was a filename standard. These filenames are still valid on Unix. tar unpacks them, and they work fine. But you start getting encoding errors from Python trying to do things like store filenames in strings. For a Python program to properly support all valid Unix filenames, it must use “bytes” instead of strings, which has all sorts of annoying implications. What’s the chances that all Python programs do this correctly? Yeah. Not high, I bet.&lt;/p&gt;
&lt;p&gt;I recently was processing data generated by mtree, which uses octal escapes for special characters in filenames. I thought this should be easy in Python, eh?&lt;/p&gt;
&lt;p&gt;That second link had a mention of an undocumented function, codecs.escape_decode, which does it right. I finally had to do this:&lt;/p&gt;
&lt;pre&gt;
    if line.startswith(b'#'):
        continue
    fields = line.split()
    filename = codecs.escape_decode(fields[0])[0]
    filetype = getfield(b&quot;type&quot;, fields[1:])
    if filetype == b&quot;file&quot;:
&lt;/pre&gt;
&lt;p&gt;And, whatever you do, don’t accidentally write &lt;tt&gt;if filetype == &quot;file&quot;&lt;/tt&gt; — that will silently always evaluate to False, because &lt;tt&gt;&quot;file&quot;&lt;/tt&gt; tests different than &lt;tt&gt;b&quot;file&quot;&lt;/tt&gt;. Not that I, uhm, wrote that and didn’t notice it at first…&lt;/p&gt;
&lt;p&gt;So if you want to actually handle Unix filenames properly in Python, you:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Must have a processing path that fully avoids Python strings.&lt;/li&gt;
&lt;li&gt;Must use sys.{stdin,stdout}.buffer instead of just sys.stdin/stdout&lt;/li&gt;
&lt;li&gt;Must supply filenames as bytes to various functions. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0471/&quot;&gt;PEP 0471&lt;/a&gt; for this comment: “Like the other functions in the os module, scandir() accepts either a bytes or str object for the path parameter, and returns the DirEntry.name and DirEntry.path attributes with the same type as path. However, it is strongly recommended to use the str type, as this ensures cross-platform support for Unicode filenames. (On Windows, bytes filenames have been deprecated since Python 3.3).” So if you want to be cross-platform, it’s even worse, because you can’t use str on Unix nor bytes on Windows.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Would you like to receive filenames on the command line? I’ll hand you &lt;a href=&quot;https://stackoverflow.com/questions/27185295/access-sys-argv-as-bytes-in-python-3&quot;&gt;this fine mess&lt;/a&gt;. And the environment? &lt;a href=&quot;https://stackoverflow.com/questions/44479826/how-do-you-set-a-string-of-bytes-from-an-environment-variable-in-python&quot;&gt;it’s not even clear&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 06 Oct 2018 11:54:24 +0000</pubDate>
<dc:creator>psibi</dc:creator>
<og:type>article</og:type>
<og:title>The Python Unicode Mess</og:title>
<og:url>http://changelog.complete.org/archives/9938-the-python-unicode-mess</og:url>
<og:description>Unicode has solved a lot of problems. Anyone that remembers the mess of ISO-8859-* vs. CP437 (and of course it’s even worse for non-Western languages) can attest to that. And of course, these…</og:description>
<og:image>https://s0.wp.com/i/blank.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://changelog.complete.org/archives/9938-the-python-unicode-mess</dc:identifier>
</item>
<item>
<title>Apple’s repair kill switch hasn’t been activated yet</title>
<link>https://ifixit.org/blog/11673/</link>
<guid isPermaLink="true" >https://ifixit.org/blog/11673/</guid>
<description>&lt;p&gt;&lt;span&gt;Well, stop the presses. Turns out, ‘Apple makes your MacBook &lt;strong&gt;inoperative&lt;/strong&gt; if you get it fixed at local repair shops’ isn’t quite true—not yet, no matter what&lt;/span&gt; &lt;a href=&quot;https://www.thesun.co.uk/tech/7427666/apple-macbook-pro-repair-fix-inoperative-authorised-service/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;The Sun&lt;/span&gt;&lt;/a&gt; &lt;span&gt;says. Our lab testing has found that independent (and DIY) repair is alive and well. But it is under threat.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Even though the Mac line has grown&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/10305/macbook-pro-2018-teardown/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;less repairable&lt;/span&gt;&lt;/a&gt; &lt;span&gt;over time, fixers have still managed to develop techniques for performing essential screen and battery repairs—until now. According to an internal Apple service document, any Mac with an Apple T2 chip now requires the proprietary ‘Apple Service Toolkit 2 (AST 2) System Configuration Suite’ (whew, that’s a mouthful!) to complete certain repairs. This issue has&lt;/span&gt; &lt;a href=&quot;https://www.macrumors.com/2018/10/04/t2-macs-must-pass-diagnostics-for-certain-repairs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;received&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;https://motherboard.vice.com/en_us/article/yw9qk7/macbook-pro-software-locks-prevent-independent-repair&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;extensive&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;https://www.theverge.com/2018/10/4/17938820/apple-macbook-pro-imac-pro-third-party-repair-lock-out-software&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;coverage&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, but we wanted to perform some lab testing before we took our shot. Let’s break down what all this means first.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https://d3nevzfk7ii3be.cloudfront.net/igi/cHBANvMSGMZcA1am&quot; width=&quot;3445&quot; height=&quot;2584&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The wily T2 chip in question.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Apple’s bulletin states that repairs to a laptop’s display assembly, logic board, upper case, and Touch ID board will require Apple’s secret software toolkit. In case you weren’t counting, that’s pretty much everything but the battery. On desktops, the logic board and flash storage are affected. But how?&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;E.T. Phone Home&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Here’s how Apple describes the new process: After replacing a part, a technician must run the configuration suite, which connects to Apple’s Global Service Exchange (GSX) server to perform performance and compatibility checks for the new parts. Without this software, an internet connection, and approval from Apple’s servers, the repair is considered incomplete and the computer is rendered inoperative.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AST 2 is only provided to Apple stores and a very few select ‘Authorized Apple Service Providers’ (AASPs) that are under strict confidentiality and business contracts mandating what parts they can use and what they charge. This shift will leave third-party repair shops out to dry, not to mention the rest of us that are accustomed to fixing our own hardware. It is unclear whether this software is available to&lt;/span&gt; &lt;a href=&quot;https://support.apple.com/self-servicing-account-program&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;certified self-servicing accounts&lt;/span&gt;&lt;/a&gt;&lt;span&gt;—if not, schools and businesses are out of luck too.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Our Testing&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;This service document certainly paints a grim picture, but ever the optimists, we headed down to our friendly local Apple Store and bought a brand new 2018 13” MacBook Pro Touch Bar unit. Then we disassembled it and traded displays with our teardown unit from this summer. To our surprise, the displays and MacBooks functioned normally in every combination we tried. We also updated to Mojave &lt;em&gt;and&lt;/em&gt; swapped logic boards with the same results.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That’s a promising sign, and it means the sky isn’t quite falling—yet. But as we’ve learned, nothing is certain. Apple has a string of software-blocked repair scandals under its belt, including the device-disabling&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/7889/whats-up-with-error-53/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Error 53&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, a functionality-throttling&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/11208/batterygate-timeline/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Batterygate&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, and&lt;/span&gt; &lt;a href=&quot;https://motherboard.vice.com/en_us/article/kbjm8e/iphone-7-home-button-unreplaceable-repair-software-lock&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;repeated&lt;/span&gt;&lt;/a&gt; &lt;span&gt;feature-&lt;/span&gt;&lt;a href=&quot;https://motherboard.vice.com/en_us/article/59jwvz/iphone-8-aftermarket-touchscreens-ios-update&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;disabling&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;https://ifixit.org/blog/9917/11-3-update-breaking-iphone-screens/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;incidents&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. It’s very possible that a future software update could render these “incomplete repairs” inoperative, and who knows when, or &lt;em&gt;if&lt;/em&gt;, a fix will follow.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https://d3nevzfk7ii3be.cloudfront.net/igi/pwdwFy3YglKVR41R&quot; width=&quot;4834&quot; height=&quot;3226&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We completed a display replacement on a 2018 13″ MacBook Pro Touch Bar to see if we would experience any of the suspected complications.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Our guess is that this software tracks serial numbers and other parts data so Apple can verify AASPs are correctly completing repairs. It may also perform calibration, or it could simply be a way of keeping their authorized network in line. Basically it means Apple owns your device, not you, and could conceivably disable it remotely if they detect unauthorized repairs going on. For years, Apple has actively&lt;/span&gt; &lt;a href=&quot;https://motherboard.vice.com/en_us/article/nz85y7/apple-is-lobbying-against-your-right-to-repair-iphones-new-york-state-records-confirm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;fought right to repair&lt;/span&gt;&lt;/a&gt; &lt;span&gt;legislation in the US, but hasn’t outright blocked independent repair—this would be a big step, even for them.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;The End Game&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;So why is Apple doing this? It could simply be a mechanism for tracking parts used by their authorized network, to check quality or replacement rates. It’s possible that units with swapped parts may operate normally, but still report a failure in Apple diagnostic tests for having ‘unauthorized’ components installed—much like earlier units did on earlier versions of AST for third party HDD/SSD, RAM and batteries.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If it’s not, then we have a problem. Making part swaps dependent on secret software would be a customer-hostile move. It would impact people that don’t live near an AASP, can’t afford to go to one, don’t have time to mail their device, or like to use their computer longer than&lt;/span&gt; &lt;a href=&quot;https://support.apple.com/en-us/HT201624&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;five years&lt;/span&gt;&lt;/a&gt; &lt;span&gt;(the timeframe that Apple supports their hardware except where legally required otherwise). Third-party repair shops—which cater to the aforementioned groups—already struggle to keep up with Apple’s&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/7900/repair-error-53/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;shenanigans&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Non-swappable parts would mean that large parts of the world will find themselves with unusable Macs, and no means for repair. Add to that a somewhat&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/10229/macbook-pro-keyboard/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;fragile keyboard&lt;/span&gt;&lt;/a&gt; &lt;span&gt;on the 2018 MacBook Pro, and the situation becomes even more dire. This is a ridiculous idea, especially from a company that claims to care about professionals and the environment. Damaged devices with a T2 chip could become expensive paperweights (&lt;/span&gt;&lt;a href=&quot;https://ifixit.org/ewaste&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;or just trash&lt;/span&gt;&lt;/a&gt;&lt;span&gt;) as soon as they reach&lt;/span&gt; &lt;a href=&quot;https://support.apple.com/en-us/HT201624&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;vintage status&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https://d3nevzfk7ii3be.cloudfront.net/igi/rfh6qOxsLWInTGKc&quot; width=&quot;5934&quot; height=&quot;4451&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Why is Apple targeting Macs with the T2 chip?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Apple seems to be following the footsteps of&lt;/span&gt; &lt;a href=&quot;https://www.wired.com/2015/04/dmca-ownership-john-deere/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;John Deere&lt;/span&gt;&lt;/a&gt; &lt;span&gt;and most automakers: you exchange money for a product, but you can’t actually do anything to that product yourself—sounds more like renting than ownership to us. Apple’s becoming another overbearing parent that can’t quite bring itself to let its children—err, customers—take full ownership of their devices. Except in this case parental love isn’t Apple’s motivating force—it’s&lt;/span&gt; &lt;a href=&quot;https://9to5mac.com/2017/07/20/apple-global-fortune-500/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;profit&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Luckily, we can do something about this. The auto world already has a&lt;/span&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Motor_Vehicle_Owners'_Right_to_Repair_Act&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;right to repair act&lt;/span&gt;&lt;/a&gt; &lt;span&gt;requiring that automakers provide independent mechanics with the means to do any repairs that a dealer can. You shouldn’t have to wait until Apple deigns to push a fix, you shouldn’t let Apple remotely detonate your device. You need real repairs, and&lt;/span&gt; &lt;a href=&quot;https://repair.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;electronics right to repair&lt;/span&gt;&lt;/a&gt; &lt;span&gt;laws can help. Mac repair may not be dead yet, but it’s certainly not safe—Apple has made that much painfully obvious.&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 06 Oct 2018 10:06:13 +0000</pubDate>
<dc:creator>ccnafr</dc:creator>
<og:title>Apple’s secret repair kill switch hasn’t been activated—yet</og:title>
<og:description></og:description>
<og:url>https://ifixit.org/blog/11673/t2-mac-repairs-test/</og:url>
<og:image>https://d3nevzfk7ii3be.cloudfront.net/igi/cHBANvMSGMZcA1am</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ifixit.org/blog/11673/</dc:identifier>
</item>
<item>
<title>An artwork by Banksy shredded itself after selling for $1.3M at Sotheby’s</title>
<link>https://www.artsy.net/news/artsy-editorial-artwork-banksy-shredded-selling-13-million-sothebys</link>
<guid isPermaLink="true" >https://www.artsy.net/news/artsy-editorial-artwork-banksy-shredded-selling-13-million-sothebys</guid>
<description>&lt;div readability=&quot;23&quot;&gt;
&lt;p&gt;A source at Sotheby’s, who spoke on the condition of anonymity, said that the Banksy camp had insisted on securing an unusually high number of seats for the sale. Some onlookers reported seeing one of these people with a device in his hand after the shredding happened, and that he was detained by security as he tried to leave.&lt;/p&gt;
&lt;p&gt;“We have not experienced a work spontaneously shredding after it sells for a million pounds,” Sotheby’s Europe head of Contemporary Art, Alex Branczik said at the press conference.&lt;/p&gt;
&lt;p&gt;He absolutely denied any knowledge that such an act was coming.&lt;/p&gt;
&lt;p&gt;“We got Banksy’d,” he said.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 06 Oct 2018 05:41:42 +0000</pubDate>
<dc:creator>okket</dc:creator>
<og:title>Banksy Self-destructs after Selling for $1.3 Million at Sotheby’s</og:title>
<og:url>https://www.artsy.net/news/artsy-editorial-artwork-banksy-shredded-selling-13-million-sothebys</og:url>
<og:type>article</og:type>
<og:description>It seems that the art world’s biggest prankster concocted a scheme in which his work would get destroyed as soon as it was sold.</og:description>
<og:image>https://artsy-media-uploads.s3.amazonaws.com/4nNPKkWC0Yko_pC8JUfe_g%2Fbanksysocialthumb.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.artsy.net/news/artsy-editorial-artwork-banksy-shredded-selling-13-million-sothebys</dc:identifier>
</item>
<item>
<title>Apple Insiders Say Nobody Knows What’s Going on with Bloomberg&amp;#039;s Hack Story</title>
<link>https://www.buzzfeednews.com/article/johnpaczkowski/apple-china-hacking-bloomberg-servers-spies-fbi</link>
<guid isPermaLink="true" >https://www.buzzfeednews.com/article/johnpaczkowski/apple-china-hacking-bloomberg-servers-spies-fbi</guid>
<description>&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;42.294573643411&quot;&gt;

&lt;p&gt;Multiple senior Apple executives, speaking with BuzzFeed News on the condition of anonymity so that they could speak freely, all denied and expressed confusion with a report earlier this week that the company’s servers had been compromised by a Chinese intelligence operation.&lt;/p&gt;
&lt;p&gt;On Thursday morning, Bloomberg Businessweek published &lt;a href=&quot;https://www.bloomberg.com/news/features/2018-10-04/the-big-hack-how-china-used-a-tiny-chip-to-infiltrate-america-s-top-companies&quot; target=&quot;_blank&quot;&gt;a bombshell investigation&lt;/a&gt;. The report — the result of more than a year of reporting and over 100 interviews with intelligence and company sources — alleged that Chinese spies compromised and infiltrated almost 30 US companies, including Apple and Amazon, by embedding a tiny microchip inside company servers.&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-quote&quot; readability=&quot;35&quot;&gt;

&lt;p&gt;“We tried to figure out if there was anything, &lt;em&gt;anything&lt;/em&gt;, that transpired that’s even remotely close to this. We found nothing.” &lt;/p&gt;


&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;98.448606271777&quot;&gt;

&lt;p&gt;According to Bloomberg’s reporting, an attack of this caliber isn’t just elaborate but “the most significant supply chain attack known to have been carried out against American companies.” The security ramifications for the businesses (and consequently millions of Americans) are likely dizzying.&lt;/p&gt;
&lt;p&gt;Both &lt;a href=&quot;https://aws.amazon.com/blogs/security/setting-the-record-straight-on-bloomberg-businessweeks-erroneous-article/&quot; target=&quot;_blank&quot;&gt;Amazon&lt;/a&gt; and &lt;a href=&quot;https://www.apple.com/newsroom/2018/10/what-businessweek-got-wrong-about-apple/&quot; target=&quot;_blank&quot;&gt;Apple&lt;/a&gt; issued uncharacteristically strong and detailed denials of Bloomberg’s claims.&lt;/p&gt;
&lt;p&gt;Reached by BuzzFeed News, multiple Apple sources — three of them very senior executives who work on the security and legal teams — said that they are at a loss as to how to explain the allegations. These people described a massive, granular, and siloed investigation into not just the claims made in the story, but into unrelated incidents that might have inspired them.&lt;/p&gt;
&lt;p&gt;“We tried to figure out if there was anything, &lt;em&gt;anything&lt;/em&gt;, that transpired that’s even remotely close to this,” a senior Apple security executive told BuzzFeed News. “We found nothing.”&lt;/p&gt;
&lt;p&gt;A senior security engineer directly involved in Apple’s internal investigation described it as “endoscopic,” noting they had never seen a chip like the one described in the story, let alone found one. “I don’t know if something like this even exists,” this person said, noting that Apple was not provided with a malicious chip or motherboard to examine. “We were given nothing. No hardware. No chips. No emails.”&lt;/p&gt;
&lt;p&gt;Equally puzzling to Apple execs is the assertion that it was party to an FBI investigation — Bloomberg wrote that Apple “reported the incident to the FBI.” A senior Apple legal official told BuzzFeed News the company had not contacted the FBI, nor had it been contacted by the FBI, the CIA, the NSA, or any government agency in regards to the incidents described in the Bloomberg report. This person’s purview and responsibilities are of such a high level that it’s unlikely they would not have been aware of government outreach.&lt;/p&gt;
&lt;p&gt;Reached for comment, Apple &lt;a href=&quot;https://www.apple.com/newsroom/2018/10/what-businessweek-got-wrong-about-apple/&quot; target=&quot;_blank&quot;&gt;directed BuzzFeed News to its Thursday blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Apple’s broad, categorical denial is essentially unprecedented in its detail. For example, when &lt;a href=&quot;https://www.washingtonpost.com/investigations/us-intelligence-mining-data-from-nine-us-internet-companies-in-broad-secret-program/2013/06/06/3a0c0da8-cebf-11e2-8845-d970ccb04497_story.html?utm_term=.70f638ef013f&quot; target=&quot;_blank&quot;&gt;the Washington Post revealed&lt;/a&gt; the government's PRISM program in 2013, Apple, Google, and Facebook all issued very precise denials noting that none had given government agencies “direct access to our servers.” In this case, however, Apple’s statement leaves little room for interpretation or alternate explanations. Apple not only denies the direct claims about its involvement with the FBI, but goes further to deny that “anything like this” happened. It went on to state that “we are not under any kind of gag order or other confidentiality obligations.”&lt;/p&gt;
&lt;p&gt;Bloomberg’s defense of its story is equally forceful. On Friday, the publication stood by its reporting. “Bloomberg Businessweek's investigation is the result of more than a year of reporting, during which we conducted more than 100 interviews,” a spokesperson told BuzzFeed News in response to a series of questions. “Seventeen individual sources, including government officials and insiders at the companies, confirmed the manipulation of hardware and other elements of the attacks. We also published three companies’ full statements, as well as a statement from China’s Ministry of Foreign Affairs. We stand by our story and are confident in our reporting and sources.”&lt;/p&gt;
&lt;p&gt;The result is an unusual stalemate that’s left onlookers baffled.&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;80.897015552753&quot;&gt;

&lt;p&gt;The story has clearly rattled Apple, a notoriously private company, and one that has long touted its strong commitment to privacy. Sources say the company’s infosec team is aghast at the allegations. “This did not happen,” a senior Apple security executive told BuzzFeed News. This person insisted, vehemently, that there is no dissembling in the company’s response, that it didn’t secretly remove compromised servers, or discover compromised servers during the acceptance process and stop short of deploying them. “We have literally seen nothing like this.”&lt;/p&gt;
&lt;p&gt;&quot;Your iPhone is absolutely not compromised,&quot; another senior Apple security engineer told BuzzFeed News. &quot;&lt;em&gt;Nothing&lt;/em&gt; is compromised.&quot; And, &quot;by the way,&quot; this person added, &quot;no servers were removed — not 7,000, not 2,000.&quot; Apple, they explained — referencing &lt;a href=&quot;https://www.theinformation.com/articles/apple-severed-ties-with-server-supplier-after-security-concern&quot; target=&quot;_blank&quot;&gt;a 2017 report by The Information&lt;/a&gt; — found a lone piece of common malware on a single server in a lab environment. The company determined it was the result of poor system hygiene on the part of server motherboard supplier Super Micro Computer. &quot;We lost confidence in the vendor. We moved on. Plenty of companies do this.&quot;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Particularly vexing for Apple, say company sources, is the suggestion it might be lying to the public to protect national security interests. The company has said on record that it is under no gag order, but Congress has on occasion granted retroactive immunity to companies aiding US intelligence efforts. However, a senior Apple legal official who spoke with BuzzFeed News said the company is bound by no confidentiality order or agreement. “We are not restrained in any way,” this executive said. Asked point blank if Apple is lying to the public in the interests of national security, this executive replied, “No.”&lt;/p&gt;
&lt;p&gt;For Apple, the investigation into the Bloomberg allegations appears to be over. Multiple sources tell BuzzFeed News that the company believes it’s done everything it can, pulled all the threads, talked to everyone, and examined every corner of its business. It’s reached a what-else-can-we-do impasse.&lt;/p&gt;
&lt;p&gt;What happens next isn’t exactly clear. Those with a vested interest — security professionals, government officials, and Amazon and Apple’s millions of customers — are left with questions that are currently unanswerable as Bloomberg and the subjects of its story continue to square off.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Sat, 06 Oct 2018 00:31:04 +0000</pubDate>
<dc:creator>BinaryIdiot</dc:creator>
<og:url>https://www.buzzfeednews.com/article/johnpaczkowski/apple-china-hacking-bloomberg-servers-spies-fbi</og:url>
<og:image>https://img.buzzfeed.com/buzzfeed-static/static/2018-10/5/19/enhanced/buzzfeed-prod-web-03/original-7443-1538783287-2.jpg?crop=1171:613;0,167</og:image>
<og:title>Apple Insiders Say Nobody Internally Knows What’s Going On With Bloomberg’s China Hack Story</og:title>
<og:description>“I don’t know if something like this even exists.”</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.buzzfeednews.com/article/johnpaczkowski/apple-china-hacking-bloomberg-servers-spies-fbi</dc:identifier>
</item>
<item>
<title>Microsoft is embracing Android as the mobile version of Windows</title>
<link>https://www.theverge.com/2018/10/3/17933644/microsoft-android-apps-windows-10-app-mirroring-report</link>
<guid isPermaLink="true" >https://www.theverge.com/2018/10/3/17933644/microsoft-android-apps-windows-10-app-mirroring-report</guid>
<description>&lt;p id=&quot;9tWNim&quot;&gt;Microsoft unveiled a &lt;a href=&quot;https://www.theverge.com/2018/10/2/17929822/microsoft-surface-event-2018-highlights-news-recap-surface-laptop-pro&quot;&gt;bunch of Surface hardware&lt;/a&gt; during a press event in New York City last night. While matte black Surfaces, headphones with Cortana, and a new Surface Studio were the highlights of the hardware side, Microsoft unveiled an interesting change to its Windows operating system. Windows 10 will soon fully embrace Android to &lt;a href=&quot;https://www.theverge.com/2018/10/2/17929908/microsoft-app-mirroring-android-windows-10-desktop&quot;&gt;mirror these mobile apps to your PC&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;NJtl7C&quot;&gt;The Android app mirroring will be part of Microsoft’s new Your Phone app for Windows 10. This app debuts this week as part of the &lt;a href=&quot;https://www.theverge.com/2018/10/3/17924506/microsoft-windows-10-october-2018-update-features-review&quot;&gt;Windows 10 October 2018 Update&lt;/a&gt;, but the app mirroring part won’t likely appear until next year. Microsoft briefly demonstrated how it will work, though; You’ll be able to simply mirror your phone screen straight onto Windows 10 through the Your Phone app, which will have a list of your Android apps. You can tap to access them and have them appear in the remote session of your phone.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/nUrHhZJKZ_HvoCKyy2w01wKv_OU=/0x0:2500x1667/320x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 320w, https://cdn.vox-cdn.com/thumbor/qZY9AFdZbuJyE3ojlmbW_Ip3egI=/0x0:2500x1667/520x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 520w, https://cdn.vox-cdn.com/thumbor/16kI19zsgXViN66Kc1M89JmiZT0=/0x0:2500x1667/720x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 720w, https://cdn.vox-cdn.com/thumbor/g8tmhfVYsSQFd9uME_ZJRThh2Tc=/0x0:2500x1667/920x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 920w, https://cdn.vox-cdn.com/thumbor/MxbqY-31QW4VRPiqcDcf_1m1TLk=/0x0:2500x1667/1120x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 1120w, https://cdn.vox-cdn.com/thumbor/jSOz34um2RqunZ0OPQpxja5QhF8=/0x0:2500x1667/1320x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 1320w, https://cdn.vox-cdn.com/thumbor/DwFnlhrOQbswhng1VjtlerUsGbE=/0x0:2500x1667/1520x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 1520w, https://cdn.vox-cdn.com/thumbor/hD7oEmU-h94jcCPFF7gDglWkr9U=/0x0:2500x1667/1720x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 1720w, https://cdn.vox-cdn.com/thumbor/EX4vhZzF8mD7A3PO97cYuzhE6Ro=/0x0:2500x1667/1920x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; data-upload-width=&quot;2500&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/QNylU2hKRmXXg20HhqqrP2RNZeE=/0x0:2500x1667/1200x0/filters:focal(0x0:2500x1667):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/13208165/androidwindows10.JPG&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;Android app mirroring on Windows 10&lt;/span&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;SXiWFj&quot;&gt;&lt;q&gt;Microsoft is really aligning itself with Android&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;XJbRS6&quot;&gt;We’ve seen a variety of ways of bringing Android apps to Windows in recent years, including &lt;a href=&quot;https://www.theverge.com/2015/12/3/9839134/bluestacks-2-launch-android-emulator-windows-multiple-apps&quot;&gt;Bluestacks&lt;/a&gt; and even &lt;a href=&quot;https://www.theverge.com/2018/1/9/16867156/dell-mobile-connect-notification-syncing-app-ios-android&quot;&gt;Dell’s Mobile Connect software&lt;/a&gt;. This app mirroring is certainly easier to do with Android, as it’s less restricted than iOS. Still, Microsoft’s welcoming embrace of Android in Windows 10 with this app mirroring is just the latest in a number of steps the company has taken recently to really help align Android as the mobile equivalent of Windows.&lt;/p&gt;
&lt;p id=&quot;Ggmrus&quot;&gt;&lt;a href=&quot;https://www.theverge.com/2017/10/5/16428686/microsoft-launcher-android-launcher-features&quot;&gt;Microsoft Launcher&lt;/a&gt; is designed to replace the default Google experience on Android phones, and bring Microsoft’s own services and Office connectivity to the home screen. It’s a popular launcher that Microsoft keeps updating, and it’s even getting support for the Windows 10 Timeline feature that lets you resume apps and sites across devices.&lt;/p&gt;
&lt;p id=&quot;jsd2et&quot;&gt;All of this just reminds me of Windows Phone. It’s only been three years since Microsoft launched its &lt;a href=&quot;https://www.theverge.com/2015/10/6/9459581/microsoft-lumia-950-features&quot;&gt;Lumia 950 Windows 10 Mobile device&lt;/a&gt; at a packed holiday hardware event. Windows Phone has vanished in the last couple of years, and Microsoft finally admitted &lt;a href=&quot;https://www.theverge.com/2017/10/9/16446280/microsoft-finally-admits-windows-phone-is-dead&quot;&gt;Windows Phone was dead&lt;/a&gt; nearly a year ago. The software maker has now embraced the reality that people don’t &lt;em&gt;need&lt;/em&gt; Windows on a phone. Instead, it’s embracing Android as the mobile version of Windows.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/cke1HyacJhKYO38ziJX44d-5EZw=/0x0:2040x1360/320x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/rE36cxAfj7hq6tmch4Jj-FmUUJc=/0x0:2040x1360/520x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 520w, https://cdn.vox-cdn.com/thumbor/FEVsC0NDlH4l0tI5vZi5gjTxrUE=/0x0:2040x1360/720x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 720w, https://cdn.vox-cdn.com/thumbor/EcoT4Uuh-1CQCArbCnKI2dUnfrg=/0x0:2040x1360/920x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/8y6dXxcf93pN_Wcvmmr1beiKsPQ=/0x0:2040x1360/1120x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 1120w, https://cdn.vox-cdn.com/thumbor/QiJcthVBbUHvHfGGecCcGE8w8PI=/0x0:2040x1360/1320x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 1320w, https://cdn.vox-cdn.com/thumbor/3drIj-Z3LPFbpJr1ZQEHYpZmyBU=/0x0:2040x1360/1520x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 1520w, https://cdn.vox-cdn.com/thumbor/KI5HQ-dMAKS-ftdSz1kQe9VXhKA=/0x0:2040x1360/1720x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 1720w, https://cdn.vox-cdn.com/thumbor/bpMC8oGWztOBQGkkR25MPJyMDnY=/0x0:2040x1360/1920x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;Microsoft Lumia 950&quot; data-upload-width=&quot;2040&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/NBf9kO3iychktk1Bvxz-xM4BnnU=/0x0:2040x1360/1200x0/filters:focal(0x0:2040x1360):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/4284623/microsoft-lumia950-review-4.0.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;Microsoft’s Lumia 950&lt;/span&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;5MJU7e&quot;&gt;&lt;q&gt;Android is the obvious choice for Windows users now&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;9M3mPM&quot;&gt;Microsoft’s best mobile work is debuting on Android right now, and if you’re a Windows user then Google’s operating system has always felt like the natural companion anyway. As Microsoft can’t replicate a lot of Your Phone functionality on iPhones, Android now feels like the only choice if you want a close mobile connection to a Windows PC.&lt;/p&gt;
&lt;p id=&quot;9p1G1n&quot;&gt;We’re only at the early stages of Microsoft’s new mobile strategy of &lt;a href=&quot;https://www.theverge.com/2017/5/11/15621428/microsoft-cross-device-ios-android-apps&quot;&gt;making iOS and Android better&lt;/a&gt; at connecting to Windows, but it’s clear the company won’t hold back on features to ensure they’re available on iPhones too. Bringing Android apps to Windows 10 PCs through a remote window into your phone is a useful and clever way of keeping Windows 10 users focused on using their PCs more.&lt;/p&gt;
&lt;p id=&quot;HDY1Gl&quot;&gt;This is all part of &lt;a href=&quot;https://www.theverge.com/2018/7/20/17594508/microsoft-consumer-push-2018&quot;&gt;Microsoft’s bigger productivity push&lt;/a&gt;, and a renewed focus on “prosumers” that use Windows for both work and home. It’s encouraging that Microsoft is willing to embrace a rival operating system to deliver mobile functionality that we’d never see from Apple and Google unless you bought a MacBook or a Chromebook. Microsoft’s “for the people” fluffy message always feels like marketing, but this new mobile push is a good example of doing something that will actually benefit Windows 10 users, Android owners, and iPhone users.&lt;/p&gt;
</description>
<pubDate>Fri, 05 Oct 2018 19:56:11 +0000</pubDate>
<dc:creator>kanishkdudeja</dc:creator>
<og:description>Android is the obvious choice for Windows users now</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/MCN0OGobDF3HFPSc0bCTohyur_g=/0x180:2500x1489/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/13208159/androidappswindows10.JPG</og:image>
<og:title>Microsoft is embracing Android as the mobile version of Windows</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2018/10/3/17933644/microsoft-android-apps-windows-10-app-mirroring-report</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2018/10/3/17933644/microsoft-android-apps-windows-10-app-mirroring-report</dc:identifier>
</item>
</channel>
</rss>