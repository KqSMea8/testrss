<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Microsoft Joins the Open Invention Network</title>
<link>https://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</link>
<guid isPermaLink="true" >https://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</guid>
<description>&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;DURHAM, N.C., Oct. 10, 2018 (GLOBE NEWSWIRE) -- Open Invention Network (OIN) announced today that Microsoft has become a member of the OIN community.  By joining OIN, Microsoft is demonstrating its commitment to open source software (OSS) and innovation through collaborative development.  With more than 2,650 members, including numerous Fortune 500 enterprises, OIN is the largest patent non-aggression community in history and represents a core set of community values related to open source licensing, which has become the norm.  &lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;“Open source development continues to expand into new products and markets to create unrivaled levels of innovation.  Through its participation in OIN, Microsoft is explicitly acknowledging the importance of open source software to its future growth,&quot; said Keith Bergelt, CEO of Open Invention Network.  “Microsoft’s participation in OIN adds to our strong community, which through its breadth and depth has reduced patent risk in core technologies, and unequivocally signals for all companies who are using OSS but have yet to join OIN that the litmus test for authentic behavior in the OSS community includes OIN participation.”&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;“Microsoft sees open source as a key innovation engine, and for the past several years we have increased our involvement in, and contributions to, the open source community,” said Erich Andersen, Corporate Vice President and Chief IP Counsel, Microsoft. “We believe the protection OIN offers the open source community helps increase global contributions to and adoption of open source technologies.  We are honored to stand with OIN as an active participant in its program to protect against patent aggression in core Linux and other important OSS technologies.”&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;OIN’s community practices patent non-aggression in core open source technologies by cross-licensing Linux System patents to one another on a royalty-free basis. Patents owned by Open Invention Network are similarly licensed royalty-free to any organization that agrees not to assert its patents against the Linux System.  The OIN license can be signed online at &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=85Hhd1Y27-lI_QoNqzQkMshSSwMWFhTp7qS_udVXdudy3hQ1Uji-In43AbVyREigP4ub-aW-lp8bqNWWqB5ygw==&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;&quot;&gt;&lt;u&gt;http://www.j-oin.net/&lt;/u&gt;&lt;/a&gt;.&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;&lt;strong&gt;&lt;em&gt;About Open Invention Network&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;Open Invention Network (OIN) is the largest patent non-aggression community in history and supports freedom of action in Linux as a key element of open source software. Funded by Google, IBM, NEC, Philips, Red Hat, Sony, SUSE, and Toyota, OIN has more than 2,650 community members and owns more than 1,300 global patents and applications.  The OIN patent license and member cross-licenses are available royalty-free to any party that joins the OIN community.&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;For more information, visit &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=85Hhd1Y27-lI_QoNqzQkMkYxI6rm6VThIhbmue2z4vbgZkFUwZ93Cha6MEzT8se2UGQfBa8X75Pw0aUVcqYve1P1Ml-rHVxnC5li1P2brhIBfnQG9lxHd9JDly7L8wbV&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;&quot;&gt;&lt;u&gt;http://www.openinventionnetwork.com&lt;/u&gt;&lt;/a&gt;.&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;&lt;strong&gt;&lt;em&gt;Media-Only Contact:&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;Ed Schauweker&lt;br/&gt;AVID Public Relations for Open Invention Network&lt;br/&gt;&lt;u&gt;ed@avidpr.com&lt;/u&gt;&lt;br/&gt;+1 (703) 963-5238&lt;/span&gt;</description>
<pubDate>Wed, 10 Oct 2018 13:54:07 +0000</pubDate>
<dc:creator>MikusR</dc:creator>
<og:title>Microsoft Joins the Open Invention Network Community</og:title>
<og:type>article</og:type>
<og:image>http://globenewswire.com/Attachment/LogoDisplay/508655?filename=508655.png&amp;size=1</og:image>
<og:url>http://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</og:url>
<og:description>Microsoft’s participation in OIN will drive additional innovation and enhance patent non-aggression in Linux and adjacent OSS technologies</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</dc:identifier>
</item>
<item>
<title>“12 years ago today, I finished writing Hacker News”</title>
<link>https://twitter.com/paulg/status/1049723540902215681?s=21</link>
<guid isPermaLink="true" >https://twitter.com/paulg/status/1049723540902215681?s=21</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/paulg/status/1049723540902215681?s=21&quot;&gt;https://twitter.com/paulg/status/1049723540902215681?s=21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18183822&quot;&gt;https://news.ycombinator.com/item?id=18183822&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 232&lt;/p&gt;
&lt;p&gt;# Comments: 116&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 11:31:52 +0000</pubDate>
<dc:creator>theCricketer</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/paulg/status/1049723540902215681?s=21</dc:identifier>
</item>
<item>
<title>Introduction to Differential Equations (2008)</title>
<link>http://tutorial.math.lamar.edu/Classes/DE/Definitions.aspx</link>
<guid isPermaLink="true" >http://tutorial.math.lamar.edu/Classes/DE/Definitions.aspx</guid>
<description>&lt;span id=&quot;SHLink_NoteMobile&quot; class=&quot;SH-Link content-note-link-mobile&quot;&gt;Show Mobile Notice&lt;/span&gt;&lt;span id=&quot;SHImg_NoteMobile&quot; class=&quot;fas fa-caret-right SH-padding content-note-link-mobile&quot; aria-hidden=&quot;true&quot;/&gt; &lt;span id=&quot;SHALink_S_Note&quot; class=&quot;SH-Link SH-Hide SH-Bracket&quot;&gt;Show All Notes&lt;/span&gt; &lt;span id=&quot;SHALink_H_Note&quot; class=&quot;SH-Link SH-Hide SH-Bracket&quot;&gt;Hide All Notes&lt;/span&gt;
&lt;div id=&quot;SHObj_NoteMobile&quot; class=&quot;content-note-container content-note-container-mobile&quot; readability=&quot;35&quot;&gt;

&lt;p&gt;You appear to be on a device with a &quot;narrow&quot; screen width (&lt;em&gt;i.e.&lt;/em&gt; you are probably on a mobile phone). Due to the nature of the mathematics on this site it is best views in landscape mode. If your device is not in landscape mode many of the equations will run off the side of your device (should be able to scroll to see them) and some of the menu items will be cut off due to the narrow screen width.&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;Section 1-1 : Definitions&lt;/h3&gt;
&lt;h4&gt;Differential Equation&lt;/h4&gt;
&lt;p&gt;The first definition that we should cover should be that of &lt;strong&gt;differential equation&lt;/strong&gt;. A differential equation is any equation which contains derivatives, either ordinary derivatives or partial derivatives.&lt;/p&gt;

&lt;p&gt;There is one differential equation that everybody probably knows, that is Newton’s Second Law of Motion. If an object of mass \(m\) is moving with acceleration \(a\) and being acted on with force \(F\) then Newton’s Second Law tells us.&lt;/p&gt;
\[\begin{equation}F = ma \label{eq:eq1} \end{equation}\]
&lt;p&gt;To see that this is in fact a differential equation we need to rewrite it a little. First, remember that we can rewrite the acceleration, \(a\), in one of two ways.&lt;/p&gt;
\[\begin{equation}a = \frac{{dv}}{{dt}}\hspace{0.25in}{\mbox{OR}}\hspace{0.25in}\,\,\,\,\,\,a = \frac{{{d^2}u}}{{d{t^2}}} \label{eq:eq2}\end{equation}\]
&lt;p&gt;Where \(v\) is the velocity of the object and \(u\) is the position function of the object at any time \(t\). We should also remember at this point that the force, \(F\) may also be a function of time, velocity, and/or position.&lt;/p&gt;
&lt;p&gt;So, with all these things in mind Newton’s Second Law can now be written as a differential equation in terms of either the velocity, \(v\), or the position, \(u\), of the object as follows.&lt;/p&gt;
\[\begin{equation}m\frac{{dv}}{{dt}} = F\left( {t,v} \right)\label{eq:eq3}\end{equation}\] \[\begin{equation}m\frac{{{d^2}u}}{{d{t^2}}} = F\left( {t,u,\frac{{du}}{{dt}}} \right) \label{eq:eq4}\end{equation}\]
&lt;p&gt;So, here is our first differential equation. We will see both forms of this in later chapters.&lt;/p&gt;
&lt;p&gt;Here are a few more examples of differential equations.&lt;/p&gt;
\[\begin{equation}ay'' + by' + cy = g\left( t \right)\label{eq:eq5}\end{equation}\] \[\begin{equation}\sin \left( y \right)\frac{{{d^2}y}}{{d{x^2}}} = \left( {1 - y} \right)\frac{{dy}}{{dx}} + {y^2}{{\bf{e}}^{ - 5y}}\label{eq:eq6}\end{equation}\] \[\begin{equation}{y^{\left( 4 \right)}} + 10y''' - 4y' + 2y = \cos \left( t \right) \label{eq:eq7}\end{equation}\] \[\begin{equation}{\alpha ^2}\frac{{{\partial ^2}u}}{{\partial {x^2}}} = \frac{{\partial u}}{{\partial t}}\label{eq:eq8}\end{equation}\] \[\begin{equation}{a^2}{u_{xx}} = {u_{tt}}\label{eq:eq9}\end{equation}\] \[\begin{equation}\frac{{{\partial ^3}u}}{{{\partial ^2}x\partial t}} = 1 + \frac{{\partial u}}{{\partial y}} \label{eq:eq10}\end{equation}\]
&lt;h4&gt;Order&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;order&lt;/strong&gt; of a differential equation is the largest derivative present in the differential equation. In the differential equations listed above \(\eqref{eq:eq3}\) is a first order differential equation, \(\eqref{eq:eq4}\), \(\eqref{eq:eq5}\), \(\eqref{eq:eq6}\), \(\eqref{eq:eq8}\), and \(\eqref{eq:eq9}\) are second order differential equations, \(\eqref{eq:eq10}\) is a third order differential equation and \(\eqref{eq:eq7}\) is a fourth order differential equation.&lt;/p&gt;
&lt;p&gt;Note that the order does not depend on whether or not you’ve got ordinary or partial derivatives in the differential equation.&lt;/p&gt;
&lt;p&gt;We will be looking almost exclusively at first and second order differential equations in these notes. As you will see most of the solution techniques for second order differential equations can be easily (and naturally) extended to higher order differential equations and we’ll discuss that idea later on.&lt;/p&gt;
&lt;h4&gt;Ordinary and Partial Differential Equations&lt;/h4&gt;
&lt;p&gt;A differential equation is called an &lt;strong&gt;ordinary differential equation&lt;/strong&gt;, abbreviated by &lt;strong&gt;ode,&lt;/strong&gt; if it has ordinary derivatives in it. Likewise, a differential equation is called a &lt;strong&gt;partial differential equation&lt;/strong&gt;, abbreviated by &lt;strong&gt;pde,&lt;/strong&gt; if it has partial derivatives in it. In the differential equations above \(\eqref{eq:eq3}\) - \(\eqref{eq:eq7}\) are ode’s and \(\eqref{eq:eq8}\) - \(\eqref{eq:eq10}\) are pde’s.&lt;/p&gt;
&lt;p&gt;The vast majority of these notes will deal with ode’s. The only exception to this will be the last chapter in which we’ll take a brief look at a common and basic solution technique for solving pde’s.&lt;/p&gt;
&lt;h4&gt;Linear Differential Equations&lt;/h4&gt;
&lt;p&gt;A &lt;strong&gt;linear differential equation&lt;/strong&gt; is any differential equation that can be written in the following form.&lt;/p&gt;
\[\begin{equation} {a_n}\left( t \right){y^{\left( n \right)}}\left( t \right) + {a_{n - 1}}\left( t \right){y^{\left( {n - 1} \right)}}\left( t \right) + \cdots + {a_1}\left( t \right)y'\left( t \right) + {a_0}\left( t \right)y\left( t \right) = g\left( t \right) \label{eq:eq11}\end{equation}\]
&lt;p&gt;The important thing to note about linear differential equations is that there are no products of the function, \(y\left( t \right)\), and its derivatives and neither the function or its derivatives occur to any power other than the first power. Also note that neither the function or its derivatives are “inside” another function, for example, \(\sqrt {y'} \) or \({{\bf{e}}^y}\).&lt;/p&gt;
&lt;p&gt;The coefficients \({a_0}\left( t \right),\,\, \ldots \,\,,{a_n}\left( t \right)\) and \(g\left( t \right)\) can be zero or non-zero functions, constant or non-constant functions, linear or non-linear functions. Only the function,\(y\left( t \right)\), and its derivatives are used in determining if a differential equation is linear.&lt;/p&gt;
&lt;p&gt;If a differential equation cannot be written in the form, \(\eqref{eq:eq11}\) then it is called a &lt;strong&gt;non-linear&lt;/strong&gt; differential equation.&lt;/p&gt;
&lt;p&gt;In \(\eqref{eq:eq5}\) - \(\eqref{eq:eq7}\) above only \(\eqref{eq:eq6}\) is non-linear, the other two are linear differential equations. We can’t classify \(\eqref{eq:eq3}\) and \(\eqref{eq:eq4}\) since we do not know what form the function \(F\) has. These could be either linear or non-linear depending on \(F\).&lt;/p&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;A &lt;strong&gt;solution&lt;/strong&gt; to a differential equation on an interval \(\alpha &amp;lt; t &amp;lt; \beta \) is any function \(y\left( t \right)\) which satisfies the differential equation in question on the interval \(\alpha &amp;lt; t &amp;lt; \beta \). It is important to note that solutions are often accompanied by intervals and these intervals can impart some important information about the solution. Consider the following example.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;9&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 1&lt;/span&gt; Show that \(y\left( x \right) = {x^{ - \,\frac{3}{2}}}\) is a solution to \(4{x^2}y'' + 12xy' + 3y = 0\) for \(x &amp;gt; 0\).
&lt;div class=&quot;example-content&quot; readability=&quot;48&quot;&gt;&lt;span id=&quot;SHLink_Soln1&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln1&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln1&quot; class=&quot;soln-content&quot; readability=&quot;66&quot;&gt;
&lt;p&gt;We’ll need the first and second derivative to do this.&lt;/p&gt;
\[y'\left( x \right) = - \frac{3}{2}{x^{ - \frac{5}{2}}}\hspace{0.25in}y''\left( x \right) = \frac{{15}}{4}{x^{ - \frac{7}{2}}}\]
&lt;p&gt;Plug these as well as the function into the differential equation.&lt;/p&gt;
\[\begin{align*}4{x^2}\left( {\frac{{15}}{4}{x^{ - \,\frac{7}{2}}}} \right) + 12x\left( { - \frac{3}{2}{x^{ - \,\frac{5}{2}}}} \right) + 3\left( {{x^{ - \,\frac{3}{2}}}} \right) &amp;amp; = 0\\ 15{x^{ - \,\frac{3}{2}}} - 18{x^{ - \,\frac{3}{2}}} + 3{x^{ - \,\frac{3}{2}}} &amp;amp; = 0\\ 0 &amp;amp; = 0\end{align*}\]
&lt;p&gt;So, \(y\left( x \right) = {x^{ - \frac{3}{2}}}\) does satisfy the differential equation and hence is a solution. Why then did we include the condition that \(x &amp;gt; 0\)? We did not use this condition anywhere in the work showing that the function would satisfy the differential equation.&lt;/p&gt;
&lt;p&gt;To see why recall that&lt;/p&gt;
\[y\left( x \right) = {x^{ - \frac{3}{2}}} = \frac{1}{{\sqrt {{x^3}} }}\]
&lt;p&gt;In this form it is clear that we’ll need to avoid \(x = 0\) at the least as this would give division by zero.&lt;/p&gt;
&lt;p&gt;Also, there is a general rule of thumb that we’re going to run with in this class. This rule of thumb is : Start with real numbers, end with real numbers. In other words, if our differential equation only contains real numbers then we don’t want solutions that give complex numbers. So, in order to avoid complex numbers we will also need to avoid negative values of \(x\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So, we saw in the last example that even though a function may symbolically satisfy a differential equation, because of certain restrictions brought about by the solution we cannot use all values of the independent variable and hence, must make a restriction on the independent variable. This will be the case with many solutions to differential equations.&lt;/p&gt;
&lt;p&gt;In the last example, note that there are in fact many more possible solutions to the differential equation given. For instance, all of the following are also solutions&lt;/p&gt;
\[\begin{align*}y\left( x \right) &amp;amp; = {x^{ - \frac{1}{2}}}\\ y\left( x \right) &amp;amp; = - 9{x^{ - \frac{3}{2}}}\\ y\left( x \right) &amp;amp; = 7{x^{ - \frac{1}{2}}}\\ y\left( x \right) &amp;amp; = - 9{x^{ - \frac{3}{2}}} + 7{x^{ - \frac{1}{2}}}\end{align*}\]
&lt;p&gt;We’ll leave the details to you to check that these are in fact solutions. Given these examples can you come up with any other solutions to the differential equation? There are in fact an infinite number of solutions to this differential equation.&lt;/p&gt;
&lt;p&gt;So, given that there are an infinite number of solutions to the differential equation in the last example (provided you believe us when we say that anyway….) we can ask a natural question. Which is the solution that we want or does it matter which solution we use? This question leads us to the next definition in this section.&lt;/p&gt;

&lt;h4&gt;Initial Condition(s)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Initial Condition(s)&lt;/strong&gt; are a condition, or set of conditions, on the solution that will allow us to determine which solution that we are after. Initial conditions (often abbreviated i.c.’s when we’re feeling lazy…) are of the form,&lt;/p&gt;
\[y\left( {{t_0}} \right) = {y_0}\hspace{0.25in}{\mbox{and/or }}{y^{\left( k \right)}}\left( {{t_0}} \right) = {y_k}\]
&lt;p&gt;So, in other words, initial conditions are values of the solution and/or its derivative(s) at specific points. As we will see eventually, solutions to “nice enough” differential equations are unique and hence only one solution will meet the given initial conditions.&lt;/p&gt;
&lt;p&gt;The number of initial conditions that are required for a given differential equation will depend upon the order of the differential equation as we will see.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;10&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 2&lt;/span&gt; \(y\left( x \right) = {x^{ - \frac{3}{2}}}\) is a solution to \(4{x^2}y'' + 12xy' + 3y = 0\), \(y\left( 4 \right) = \frac{1}{8}\), and \(y'\left( 4 \right) = - \frac{3}{{64}}\).
&lt;div class=&quot;example-content&quot; readability=&quot;35.5&quot;&gt;&lt;span id=&quot;SHLink_Soln2&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln2&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln2&quot; class=&quot;soln-content&quot; readability=&quot;41&quot;&gt;
&lt;p&gt;As we saw in previous example the function is a solution and we can then note that&lt;/p&gt;
\[\begin{align*}y\left( 4 \right) &amp;amp; = {4^{ - \frac{3}{2}}} = \frac{1}{{{{\left( {\sqrt 4 } \right)}^3}}} = \frac{1}{8}\\ y'\left( 4 \right) &amp;amp; = - \frac{3}{2}{4^{ - \frac{5}{2}}} = - \frac{3}{2}\frac{1}{{{{\left( {\sqrt 4 } \right)}^5}}} = - \frac{3}{{64}}\end{align*}\]
&lt;p&gt;and so this solution also meets the initial conditions of \(y\left( 4 \right) = \frac{1}{8}\) and \(y'\left( 4 \right) = - \frac{3}{{64}}\). In fact, \(y\left( x \right) = {x^{ - \frac{3}{2}}}\) is the only solution to this differential equation that satisfies these two initial conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;Initial Value Problem&lt;/h4&gt;
&lt;p&gt;An &lt;strong&gt;Initial Value Problem&lt;/strong&gt; (or &lt;strong&gt;IVP&lt;/strong&gt;) is a differential equation along with an appropriate number of initial conditions.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 3&lt;/span&gt; The following is an IVP.
&lt;p&gt;\[4{x^2}y'' + 12xy' + 3y = 0\hspace{0.25in}y\left( 4 \right) = \frac{1}{8},\,\,\,\,y'\left( 4 \right) = - \frac{3}{{64}}\]&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;example&quot; readability=&quot;14&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 4&lt;/span&gt; Here’s another IVP.
&lt;p&gt;\[2t\,y' + 4y = 3\hspace{0.25in}\,\,\,\,\,\,y\left( 1 \right) = - 4\]&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As we noted earlier the number of initial conditions required will depend on the order of the differential equation.&lt;/p&gt;

&lt;h4&gt;Interval of Validity&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;interval of validity&lt;/strong&gt; for an IVP with initial condition(s)&lt;/p&gt;
\[y\left( {{t_0}} \right) = {y_0}\hspace{0.25in}{\mbox{and/or }}{y^{\left( k \right)}}\left( {{t_0}} \right) = {y_k}\]
&lt;p&gt;is the largest possible interval on which the solution is valid and contains \({t_0}\). These are easy to define, but can be difficult to find, so we’re going to put off saying anything more about these until we get into actually solving differential equations and need the interval of validity.&lt;/p&gt;
&lt;h4&gt;General Solution&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;general solution&lt;/strong&gt; to a differential equation is the most general form that the solution can take and doesn’t take any initial conditions into account.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;12&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 5&lt;/span&gt; \(\displaystyle y\left( t \right) = \frac{3}{4} + \frac{c}{{{t^2}}}\) is the general solution to \[2t\,y' + 4y = 3\]
&lt;div class=&quot;example-content&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;We’ll leave it to you to check that this function is in fact a solution to the given differential equation. In fact, all solutions to this differential equation will be in this form. This is one of the first differential equations that you will learn how to solve and you will be able to verify this shortly for yourself.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Actual Solution&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;actual solution&lt;/strong&gt; to a differential equation is the specific solution that not only satisfies the differential equation, but also satisfies the given initial condition(s).&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;15&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 6&lt;/span&gt; What is the actual solution to the following IVP? \[2t\,y' + 4y = 3\hspace{0.25in}\,\,\,\,\,\,y\left( 1 \right) = - 4\]
&lt;div class=&quot;example-content&quot; readability=&quot;38.5&quot;&gt;&lt;span id=&quot;SHLink_Soln6&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln6&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln6&quot; class=&quot;soln-content&quot; readability=&quot;47&quot;&gt;
&lt;p&gt;This is actually easier to do than it might at first appear. From the previous example we already know (well that is provided you believe our solution to this example…) that all solutions to the differential equation are of the form.&lt;/p&gt;
\[y\left( t \right) = \frac{3}{4} + \frac{c}{{{t^2}}}\]
&lt;p&gt;All that we need to do is determine the value of \(c\) that will give us the solution that we’re after. To find this all we need do is use our initial condition as follows.&lt;/p&gt;
\[ - 4 = y\left( 1 \right) = \frac{3}{4} + \frac{c}{{{1^2}}}\hspace{0.25in} \Rightarrow \hspace{0.25in}c = - 4 - \frac{3}{4} = - \frac{{19}}{4}\]
&lt;p&gt;So, the actual solution to the IVP is.&lt;/p&gt;
\[y\left( t \right) = \frac{3}{4} - \frac{{19}}{{4{t^2}}}\]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;From this last example we can see that once we have the general solution to a differential equation finding the actual solution is nothing more than applying the initial condition(s) and solving for the constant(s) that are in the general solution.&lt;/p&gt;

&lt;h4&gt;Implicit/Explicit Solution&lt;/h4&gt;
&lt;p&gt;In this case it’s easier to define an explicit solution, then tell you what an implicit solution isn’t, and then give you an example to show you the difference. So, that’s what we’ll do.&lt;/p&gt;
&lt;p&gt;An &lt;strong&gt;explicit solution&lt;/strong&gt; is any solution that is given in the form \(y = y\left( t \right)\). In other words, the only place that \(y\) actually shows up is once on the left side and only raised to the first power. An &lt;strong&gt;implicit solution&lt;/strong&gt; is any solution that isn’t in explicit form. Note that it is possible to have either general implicit/explicit solutions and actual implicit/explicit solutions.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;16.5&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 7&lt;/span&gt; \({y^2} = {t^2} - 3\) is the actual implicit solution to \(y' = \frac{t}{y},\,\,\,\,\,y\left( 2 \right) = - 1\)
&lt;div class=&quot;example-content&quot; readability=&quot;35&quot;&gt;
&lt;p&gt;At this point we will ask that you trust us that this is in fact a solution to the differential equation. You will learn how to get this solution in a later section. The point of this example is that since there is a \({y^2}\) on the left side instead of a single \(y\left( t \right)\)this is not an explicit solution!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;example&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 8&lt;/span&gt; Find an actual explicit solution to \(y' = \frac{t}{y},\,\,\,\,\,y\left( 2 \right) = - 1\).
&lt;div class=&quot;example-content&quot; readability=&quot;37.5&quot;&gt;&lt;span id=&quot;SHLink_Soln8&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln8&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln8&quot; class=&quot;soln-content&quot; readability=&quot;45&quot;&gt;
&lt;p&gt;We already know from the previous example that an implicit solution to this IVP is \({y^2} = {t^2} - 3\). To find the explicit solution all we need to do is solve for \(y\left( t \right)\).&lt;/p&gt;
\[y\left( t \right) = \pm \sqrt {{t^2} - 3} \]
&lt;p&gt;Now, we’ve got a problem here. There are two functions here and we only want one and in fact only one will be correct! We can determine the correct function by reapplying the initial condition. Only one of them will satisfy the initial condition.&lt;/p&gt;
&lt;p&gt;In this case we can see that the “-“ solution will be the correct one. The actual explicit solution is then&lt;/p&gt;
\[y\left( t \right) = - \sqrt {{t^2} - 3} \]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this case we were able to find an explicit solution to the differential equation. It should be noted however that it will not always be possible to find an explicit solution.&lt;/p&gt;
&lt;p&gt;Also, note that in this case we were only able to get the explicit actual solution because we had the initial condition to help us determine which of the two functions would be the correct solution.&lt;/p&gt;
&lt;p&gt;We’ve now gotten most of the basic definitions out of the way and so we can move onto other topics.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 06:13:28 +0000</pubDate>
<dc:creator>peter_d_sherman</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://tutorial.math.lamar.edu/Classes/DE/Definitions.aspx</dc:identifier>
</item>
<item>
<title>Brief aerobic exercise immediately enhances attention and perceptual speed</title>
<link>https://www.sciencedirect.com/science/article/pii/S0001691817301336</link>
<guid isPermaLink="true" >https://www.sciencedirect.com/science/article/pii/S0001691817301336</guid>
<description>&lt;article class=&quot;col-lg-12 col-md-16 pad-left pad-right&quot; role=&quot;main&quot; lang=&quot;en&quot; readability=&quot;5.1188118811881&quot;&gt;&lt;noscript readability=&quot;3&quot;&gt;
&lt;p&gt;JavaScript is disabled on your browser. Please enable JavaScript to use all the features on this page.&lt;/p&gt;
&lt;/noscript&gt;




&lt;section class=&quot;ReferencedArticles&quot;/&gt;&lt;section class=&quot;ReferencedArticles&quot;/&gt;
&lt;div class=&quot;Abstracts&quot; id=&quot;abstracts&quot;&gt;
&lt;div class=&quot;abstract author-highlights&quot; id=&quot;ab0010&quot; lang=&quot;en&quot;&gt;
&lt;h2 class=&quot;section-title&quot;&gt;Highlights&lt;/h2&gt;
&lt;div id=&quot;as0010&quot;&gt;

&lt;dl class=&quot;list&quot; readability=&quot;2.5&quot;&gt;&lt;dt class=&quot;list-label&quot;&gt;•&lt;/dt&gt;
&lt;dd class=&quot;list-description&quot; readability=&quot;-1&quot;&gt;
&lt;p id=&quot;p0005&quot;&gt;Acute exercise is thought to facilitate cognitive processes by replenishing energy levels.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;list-label&quot;&gt;•&lt;/dt&gt;
&lt;dd class=&quot;list-description&quot; readability=&quot;0&quot;&gt;
&lt;p id=&quot;p0010&quot;&gt;Various cognitive performances were measured before and following 15 min of exercise vs. relaxation/concentration.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;list-label&quot;&gt;•&lt;/dt&gt;
&lt;dd class=&quot;list-description&quot; readability=&quot;-1&quot;&gt;
&lt;p id=&quot;p0015&quot;&gt;Pre- to post-intervention changes in feelings of energy were also assessed in each group.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;list-label&quot;&gt;•&lt;/dt&gt;
&lt;dd class=&quot;list-description&quot; readability=&quot;-1&quot;&gt;
&lt;p id=&quot;p0020&quot;&gt;Significantly differences were found for cognitive processing speed.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;list-label&quot;&gt;•&lt;/dt&gt;
&lt;dd class=&quot;list-description&quot; readability=&quot;-1&quot;&gt;
&lt;p id=&quot;p0025&quot;&gt;These differences were fully mediated by changes in feelings of energy.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;abstract author&quot; id=&quot;ab0005&quot; lang=&quot;en&quot; readability=&quot;11.5&quot;&gt;
&lt;h2 class=&quot;section-title&quot;&gt;Abstract&lt;/h2&gt;
&lt;div id=&quot;as0005&quot; readability=&quot;18&quot;&gt;
&lt;p id=&quot;sp0030&quot;&gt;While the effects of acute exercise on mood and cognitive functions have been separately documented over the last decade, recent findings have pointed to a possible connection between affective responses to exercise and cognitive performance. The main objective of this study was to test whether the effects of acute exercise on cognition were mediated by changes in feelings of energy. One-hundred-and-one undergraduate students were randomized into one of two experimental conditions: 15 min of jogging at “moderate” intensity, or 15 min of relaxation/concentration (control condition). Perceptual speed, visual attentional control, working memory, and cognitive flexibility were assessed pre- and post-intervention in both groups via the Trail Making Test. Self-rated feelings of energy were also recorded pre- and post-intervention. Only completion time for the TMT-A significantly improved from pre- to post-intervention in participants who exercised compared with participants who practiced relaxation/concentration. No Group × Time interaction was found with regard to the other TMT variables. Finally, changes in feelings of energy were found to fully mediate the relationship between exercise and perceptual speed/visual attentional control. Taken together, our data suggest that a brief bout of moderate intensity exercise can improve the efficiency of certain cognitive processes through increases in feelings of energy, but further research is required to evaluate the duration of benefits and to determine whether these apply to other populations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul id=&quot;issue-navigation&quot; class=&quot;issue-navigation u-margin-s-bottom u-bg-grey1&quot;&gt;&lt;li class=&quot;previous move-left u-padding-s-ver u-padding-s-left&quot;&gt;&lt;button class=&quot;button-alternative button-alternative-tertiary&quot; disabled=&quot;disabled&quot; type=&quot;button&quot;&gt;&lt;span class=&quot;button-alternative-text&quot;&gt;&lt;strong&gt;Previous&lt;/strong&gt;  &lt;/span&gt;&lt;/button&gt;&lt;/li&gt;
&lt;li class=&quot;next move-right u-padding-s-ver u-padding-s-right&quot;&gt;&lt;button class=&quot;button-alternative button-alternative-tertiary&quot; disabled=&quot;disabled&quot; type=&quot;button&quot;&gt;&lt;span class=&quot;button-alternative-text&quot;&gt;&lt;strong&gt;Next&lt;/strong&gt;  &lt;/span&gt;&lt;/button&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;Keywords&quot;&gt;
&lt;div id=&quot;ks0005&quot; class=&quot;keywords-section&quot;&gt;
&lt;h2 class=&quot;section-title&quot;&gt;Keywords&lt;/h2&gt;
&lt;p&gt;&lt;span id=&quot;tx0010&quot;&gt;Acute aerobic exercise&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;tx0015&quot;&gt;Feelings of energy&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;tx0020&quot;&gt;Cognitive functions&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;button class=&quot;button button-anchor&quot; type=&quot;button&quot;&gt;&lt;span class=&quot;button-text&quot;&gt;Recommended articles&lt;/span&gt;&lt;/button&gt;&lt;button class=&quot;button button-anchor&quot; disabled=&quot;disabled&quot; type=&quot;button&quot;&gt;&lt;span class=&quot;button-text&quot;&gt;Citing articles (0)&lt;/span&gt;&lt;/button&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;copyright-line&quot;&gt;© 2018 Elsevier B.V. All rights reserved.&lt;/span&gt;&lt;/p&gt;
&lt;/article&gt;&lt;div class=&quot;u-show-from-md col-lg-6 col-md-8 pad-right&quot;&gt;
&lt;aside class=&quot;RelatedContent&quot; aria-label=&quot;Related content&quot;&gt;&lt;section class=&quot;SidePanel&quot;&gt;&lt;header id=&quot;recommended-articles-header&quot; class=&quot;side-panel-header&quot;&gt;&lt;button class=&quot;button-link side-panel-toggle is-up button-link-primary&quot; aria-expanded=&quot;true&quot; type=&quot;button&quot;&gt;
&lt;h2 class=&quot;section-title&quot;&gt;&lt;span class=&quot;button-link-text&quot;&gt;Recommended articles&lt;/span&gt;&lt;/h2&gt;
&lt;/button&gt;&lt;/header&gt;&lt;div class=&quot;&quot; aria-hidden=&quot;false&quot; aria-describedby=&quot;recommended-articles-header&quot;&gt;
&lt;p&gt;&lt;span class=&quot;size-m&quot;&gt;No articles found.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;section class=&quot;SidePanel&quot;&gt;&lt;header id=&quot;citing-articles-header&quot; class=&quot;side-panel-header&quot;&gt;&lt;h2 class=&quot;section-title&quot;&gt;Citing articles&lt;/h2&gt;
&lt;/header&gt;
&lt;/section&gt;&lt;section class=&quot;SidePanel hidden&quot;&gt;
&lt;/section&gt;&lt;/aside&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 10 Oct 2018 04:43:33 +0000</pubDate>
<dc:creator>laurex</dc:creator>
<og:description>While the effects of acute exercise on mood and cognitive functions have been separately documented over the last decade, recent findings have pointed…</og:description>
<og:image>https://ars.els-cdn.com/content/image/S00016918.gif</og:image>
<og:title>Brief aerobic exercise immediately enhances visual attentional control and perceptual speed. Testing the mediating role of feelings of energy</og:title>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sciencedirect.com/science/article/pii/S0001691817301336</dc:identifier>
</item>
<item>
<title>Leaked Google briefing, admitting a “shift towards censorship”</title>
<link>https://www.scribd.com/document/390521673/The-Good-Censor-GOOGLE-LEAK</link>
<guid isPermaLink="true" >https://www.scribd.com/document/390521673/The-Good-Censor-GOOGLE-LEAK</guid>
<description> 
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;// Insights Lab&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;a&quot;&gt;Can Google protect&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;free-speech&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;and &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt; police&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;harmful content?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;From elections and political propaganda, trolls and gendered&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;bigotry, to hate speech and religious extremism,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;debates&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;about who can and should be heard on the internet rage like&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;never before.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt; As governments struggle to apply existing&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;legislation to the Wild West online,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;users are asking if the&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;openness of the internet should be celebrated after all.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;Bots and troll farms lash out at free thought and controversial&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;opinion, while faceless users attack each other without&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;empathy.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;Free speech becomes a social, economic and&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;political weapon.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt; Automated technologies lack the&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;sophistication to adjudicate effectively. In response, people&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;think twice before airing their thoughts aloud, while critique is&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;buried under avalanches of automated rebuttals, vitriolic&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;attacks and nonsensical rhetoric.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;As the tech firms struggle&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;to deal with the issues, the public and governments grow&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;increasingly impatient.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt; &lt;/span&gt;&lt;span class=&quot;a&quot;&gt;Yet, amongst all this negativity, seeds of political harmony,&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;gender and racial equality, and tolerance are sown on the&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;internet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;Is it possible to have an open and inclusive internet&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt; &lt;/span&gt;&lt;span class=&quot;a&quot;&gt;while simultaneously limiting political oppression and&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;despotism, hate, violence and harassment?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;a&quot;&gt;Who should be&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;responsible for censoring ‘unwanted’ conversation, anyway?&lt;/span&gt; &lt;span class=&quot;a&quot;&gt;Governments? Users? Google?&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 03:08:15 +0000</pubDate>
<dc:creator>freedomben</dc:creator>
<og:title>The Good Censor - GOOGLE LEAK | Facebook | Censorship</og:title>
<og:type>scribd-com:document</og:type>
<og:url>https://www.scribd.com/document/390521673/The-Good-Censor-GOOGLE-LEAK</og:url>
<og:description>A leaked Google briefing in which the company admits a &quot;shift towards censorship&quot; in Silicon Valley.</og:description>
<og:image>https://imgv2-1-f.scribdassets.com/img/document/390521673/original/03cfc7605f/1539132956?v=1</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scribd.com/document/390521673/The-Good-Censor-GOOGLE-LEAK</dc:identifier>
</item>
<item>
<title>Ask HN: What can be done to prevent a climate catastrophe?</title>
<link>https://news.ycombinator.com/item?id=18181503</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18181503</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.0642954856361&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;4.2202462380301&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;18181503&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18181503&quot; class=&quot;storylink&quot;&gt;Ask HN: What can be done to prevent a climate catastrophe?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.69767441860465&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_18181503&quot;&gt;284 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=andrewstuart&quot; class=&quot;hnuser&quot;&gt;andrewstuart&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18181503&quot;&gt;13 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_18181503&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=18181503&amp;amp;goto=item%3Fid%3D18181503&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20What%20can%20be%20done%20to%20prevent%20a%20climate%20catastrophe%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20What%20can%20be%20done%20to%20prevent%20a%20climate%20catastrophe%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=18181503&amp;amp;auth=1b5fe6ca9554c81dd4da654f48c7e98e5086a31e&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=18181503&quot;&gt;396 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;14&quot;&gt;It seems to me that governments can be counted out of taking the leadership needed to solve this within 12 years. If anything they seem to want to act against solving this issue in some cases.
&lt;p&gt;So what can we do so our children don't live in some ghastly hothouse world?&lt;/p&gt;
&lt;p&gt;The scientists have told us its our final chance.... not to start within 12 years, but solve it within 12 years.&lt;/p&gt;
&lt;p&gt;I feel like the young people need to take charge of the world because the older generations have had their chance and not fixed it.&lt;/p&gt;
&lt;p&gt;Maybe corporations are the ones who can be pressured to take the lead.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Wed, 10 Oct 2018 02:25:12 +0000</pubDate>
<dc:creator>andrewstuart</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18181503</dc:identifier>
</item>
<item>
<title>Choosing to stay out of the community</title>
<link>http://rachelbythebay.com/w/2018/10/09/moat/</link>
<guid isPermaLink="true" >http://rachelbythebay.com/w/2018/10/09/moat/</guid>
<description>&lt;p&gt;In the past couple of weeks, there's been a lot of commotion in the open source / free software world about codes of conduct and specific people (Linus) and specific projects (Linux) and so on. This is a thing now, that is a thing now, this is good, this is bad, we're pulling our code, you're a bad person, you're a this, you're a that. We don't like you, all of you are this way, none of you are that way. We're being attacked, we don't attack, blah blah blah blah blah.&lt;/p&gt;
&lt;p&gt;In that vein, I received a question from Peter who writes...&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;I have with great interest for many years been reading about your experiences with, and thoughts on corporate culture.&lt;/p&gt;
&lt;p&gt;The Linux kernel community is now going through a cultural change, which I have my own conflicting thoughts about. I would like to hear your opinion on this matter, if you think that you have the time, and something interesting to say about it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;... and there are links to the lkml posts about Linus going on a break, and all of that stuff. Everything you've already heard about on HN and/or your favorite this-leaning or that-leaning web site.&lt;/p&gt;
&lt;p&gt;This is a legitimate question, and I have an answer, but I don't think many people are going to like it.&lt;/p&gt;
&lt;p&gt;My response to this is to say &quot;wow, look at how screwed up these communities are&quot;, and then tag on &quot;just like I always suspected&quot;, and then finally I add &quot;and that reinforces my decision to &lt;em&gt;stay out of them&lt;/em&gt;&quot;.&lt;/p&gt;
&lt;p&gt;So, okay, what does that mean in practice? I wrote a really horrible utility that Should Not Exist at a former employer. Some folks there wanted to open source it. (Why they didn't attack the root cause instead of investing in this horrible thing is a story for another time). I did not want to deal with the community, and the things which would come from opening it up. So, I didn't put any effort into it, and it didn't happen under my tenure.&lt;/p&gt;
&lt;p&gt;I've felt this way for a long time, and I still do, and apparently have no reason to change. My take on it is, and has been: if the community is so toxic, then it can operate without some of us.&lt;/p&gt;
&lt;p&gt;Really, I'm not just making this up here on the fly. I have actual &lt;a href=&quot;http://rachelbythebay.com/w/2013/06/03/bugs/&quot;&gt;written proof&lt;/a&gt; in a post of mine from June 2013.&lt;/p&gt;
&lt;p&gt;Notice this part:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;While it's probably true that the dictator &lt;em&gt;does&lt;/em&gt; suck at design, the talented user wants no part of the drama which would follow such a report. There is absolutely no benefit to lighting that particular fuse. And so, the problem is never reported, and the patch is never conveyed upstream. It effectively becomes a private fork limited to the talented user's systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I wrote that as a cautionary tale those 5 years ago, but it was actually me describing &lt;em&gt;what I was already doing&lt;/em&gt;. And, guess what, I'm still going to be doing it. Grab it, fork it locally, fix it locally, and share fixes with a few trusted individuals who have been invited to participate in the system.&lt;/p&gt;
&lt;p&gt;Does this help the community? Nope. Wasted effort abounds.&lt;/p&gt;
&lt;p&gt;I'm here to remind everyone of that post, and to point out that I'm not the only one doing this. There could be an entire &quot;shadow ecosystem&quot; of invite-only source repos being shared among friends who are responsible for those they invite, including possibly having whole &quot;trees&quot; pruned if they turn out to be troublesome.&lt;/p&gt;
&lt;p&gt;What's funny is that my friends in the know tell me this is how private warez torrent sites work: you invite someone, and now you're responsible for their behavior. If they mess up, you deal with them, or you might be out, too.&lt;/p&gt;
&lt;p&gt;How do you fix this? I don't think you do. Be a good person and you will be invited to a private/secret repository. Continue to be reasonable and respectful to those who are part of it and you can maintain your access.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;While I have your attention, I want to try to explain some terms I use in the real world, and specifically the difference between them.&lt;/p&gt;
&lt;p&gt;The notion of &quot;Vegas rules&quot; is inspired by their marketing schtick of &quot;what happens in (Las) Vegas stays in (Las) Vegas&quot;. Basically, it's what you apply to a meeting or project or whatever when the actual discussions are private, but the fact that the meeting occurred &lt;em&gt;is not&lt;/em&gt;. People know that Las Vegas exists. That's not the secret. The secret is what happens there, as the line goes.&lt;/p&gt;
&lt;p&gt;So, then, contrast that with this.&lt;/p&gt;
&lt;p&gt;&quot;Fight Club rules&quot;, then, are inspired by the movie, in which a bunch of people get together and do things but don't even acknowledge it exists the rest of the time. It encompasses the &quot;private discussions&quot; angle of &quot;Vegas rules&quot;, but it also goes a step beyond that to indicate that the event, venue, project, tool, or whatever is itself not to be discussed.&lt;/p&gt;
&lt;p&gt;The private/secret repos I'm talking about? They're probably operating under Fight Club rules. If you aren't plugged in, they don't even exist as far as you are concerned. You don't even know you're missing out.&lt;/p&gt;
&lt;p&gt;I think I'm okay with that.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 01:53:51 +0000</pubDate>
<dc:creator>pulisse</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://rachelbythebay.com/w/2018/10/09/moat/</dc:identifier>
</item>
<item>
<title>Memory Allocators 101 – Write a simple memory allocator (2016)</title>
<link>https://arjunsreedharan.org/post/148675821737/memory-allocators-101</link>
<guid isPermaLink="true" >https://arjunsreedharan.org/post/148675821737/memory-allocators-101</guid>
<description>&lt;p&gt;Code related to this article: &lt;a href=&quot;https://t.umblr.com/redirect?z=%2F%2Fgithub.com%2Farjun024%2Fmemalloc&amp;amp;t=ZTllYzkzOTgzZDhjM2EwNTJhMmE2NDM1MjllM2RhN2U0ZWZjOGI5ZCxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; data-href=&quot;//github.com/arjun024/memalloc&quot; target=&quot;_blank&quot;&gt;github.com/arjun024/memalloc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This article is about writing a simple memory allocator in C.&lt;br/&gt;We will implement &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman3%2Ffree.3.html&amp;amp;t=M2EzY2U0ZGRhYjBhNjA3Y2U4NDczMjc3ZTg1ZWQxMjI3MWJjNzZjNixGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://man7.org/linux/man-pages/man3/free.3.html&quot;&gt;malloc()&lt;/a&gt;, &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman3%2Ffree.3.html&amp;amp;t=M2EzY2U0ZGRhYjBhNjA3Y2U4NDczMjc3ZTg1ZWQxMjI3MWJjNzZjNixGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://man7.org/linux/man-pages/man3/free.3.html&quot;&gt;calloc()&lt;/a&gt;, &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman3%2Ffree.3.html&amp;amp;t=M2EzY2U0ZGRhYjBhNjA3Y2U4NDczMjc3ZTg1ZWQxMjI3MWJjNzZjNixGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://man7.org/linux/man-pages/man3/free.3.html&quot;&gt;realloc()&lt;/a&gt; and &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman3%2Ffree.3.html&amp;amp;t=M2EzY2U0ZGRhYjBhNjA3Y2U4NDczMjc3ZTg1ZWQxMjI3MWJjNzZjNixGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://man7.org/linux/man-pages/man3/free.3.html&quot;&gt;free()&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a beginner level article, so I will not spell out every detail.&lt;br/&gt;This memory allocator will not be fast and efficient, we will not adjust allocated memory to align to a page boundary, but we will build a memory allocator that works. That’s it.&lt;/p&gt;
&lt;p&gt;If you want to take a look at the code in full, take a look at my github repo &lt;a href=&quot;https://t.umblr.com/redirect?z=%2F%2Fgithub.com%2Farjun024%2Fmemalloc&amp;amp;t=ZTllYzkzOTgzZDhjM2EwNTJhMmE2NDM1MjllM2RhN2U0ZWZjOGI5ZCxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;//github.com/arjun024/memalloc&quot;&gt;memalloc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before we get into building the memory allocator, you need to be familiar with the memory layout of a program. A process runs within its own virtual address space that’s distinct from the virtual address spaces of other processes. This virtual address space typically comprises of 5 sections:&lt;/p&gt;
&lt;strong&gt;Text section&lt;/strong&gt;: The part that contains the binary instructions to be executed by the processor.&lt;br/&gt;&lt;strong&gt;Data section&lt;/strong&gt;: Contains non-zero initialized static data.&lt;br/&gt;&lt;strong&gt;BSS&lt;/strong&gt; (Block Started by Symbol) : Contains zero-initialized static data. Static data uninitialized in program is initialized 0 and goes here.&lt;br/&gt;&lt;strong&gt;Heap&lt;/strong&gt;: Contains the dynamically allocated data.&lt;br/&gt;&lt;strong&gt;Stack&lt;/strong&gt;: Contains your automatic variables, function arguments, copy of base pointer etc. &lt;img src=&quot;https://static.tumblr.com/gltvynn/tHIobhrb5/memlayout.jpg&quot; alt=&quot;Memory layout&quot;/&gt;&lt;p&gt;As you can see in the image, the stack and the heap grow in the opposite directions.&lt;br/&gt;Sometimes the data, bss and heap sections are collectively referred to as the “&lt;em&gt;data segment&lt;/em&gt;”,&lt;br/&gt;the end of which is demarcated by a pointer named program break or &lt;strong&gt;brk&lt;/strong&gt;.&lt;br/&gt;That is, &lt;em&gt;brk&lt;/em&gt; points to the end of the heap.&lt;/p&gt;
&lt;p&gt;Now if we want to allocate more memory in the heap, we need to request the system to increment brk. Similarly, to release memory we need to request the system to decrement &lt;em&gt;brk&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Assuming we run Linux (or a Unix-like system), we can make use of &lt;code&gt;sbrk()&lt;/code&gt; system call that lets us manipulate the program break.&lt;/p&gt;
&lt;p&gt;Calling &lt;code&gt;sbrk(0)&lt;/code&gt; gives the current address of program break.&lt;br/&gt;Calling &lt;code&gt;sbrk(x)&lt;/code&gt; with a positive value increments brk by x bytes, as a result allocating memory.&lt;br/&gt;Calling &lt;code&gt;sbrk(-x)&lt;/code&gt; with a negative value decrements brk by x bytes, as a result releasing memory.&lt;br/&gt;On failure, sbrk() returns &lt;code&gt;(void*) -1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To be honest, sbrk() is not our best buddy in 2016. There are better alternatives like &lt;em&gt;mmap()&lt;/em&gt; available today. sbrk() is not really thread safe. It can can only grow or shrink in LIFO order.&lt;br/&gt;If you do a &lt;code&gt;man 2 sbrk&lt;/code&gt; on your macbook, it will tell you:&lt;br/&gt;&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;
The brk and sbrk functions are historical curiosities left over from earlier days before the advent of virtual memory management.
&lt;/pre&gt;
&lt;p&gt;However, the glibc implementation of malloc still uses sbrk() for allocating memory that’s not too big in size.&lt;sup&gt;[1]&lt;/sup&gt;&lt;br/&gt;So, we will go ahead with sbrk() for our simple memory allocator.&lt;/p&gt;
&lt;h3&gt;malloc()&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;malloc(size)&lt;/em&gt; function allocates &lt;em&gt;size&lt;/em&gt; bytes of memory and returns a pointer to the allocated memory.&lt;br/&gt;Our simple malloc will look like:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
void *malloc(size_t size)
{
        void *block;
        block = sbrk(size);
        if (block == (void*) -1)
                return NULL;
        return block;
}
&lt;/pre&gt;
&lt;p&gt;In the above code, we call sbrk() with the given size.&lt;br/&gt;On success, &lt;em&gt;size&lt;/em&gt; bytes are allocated on the heap.&lt;br/&gt;That was easy. Wasn’t it?&lt;/p&gt;
&lt;p&gt;The tricky part is freeing this memory.&lt;br/&gt;The &lt;em&gt;free(ptr)&lt;/em&gt; function frees the memory block pointed to by ptr, which must have been returned by a previous call to malloc(), calloc() or realloc().&lt;br/&gt;But to free a block of memory, the first order of business is to know the size of the memory block to be freed. In the current scheme of things, this is not possible as the size information is not stored anywhere. So, we will have to find a way to store the size of an allocated block somewhere.&lt;/p&gt;
&lt;p&gt;Moreover, we need to understand that the heap memory the operating system has provided is contiguous. So we can only release memory which is at the end of the heap. We can’t release a block of memory in the middle to the OS. Imagine your heap to be something like a long loaf of bread that you can stretch and shrink at one end, but you have to keep it in one piece.&lt;br/&gt;To address this issue of not being able to release memory that’s not at the end of the heap, we will make a distinction between freeing memory and releasing memory.&lt;br/&gt;From now on, freeing a block of memory does not necessarily mean we release memory back to OS. It just means that we keep the block marked as free. This block marked as free may be reused on a later malloc() call. Since memory not at the end of the heap can’t be released, this is the only way ahead for us.&lt;/p&gt;
&lt;p&gt;So now, we have two things to store for every block of allocated memory:&lt;br/&gt;    1. size&lt;br/&gt;    2. Whether a block is free or not-free?&lt;/p&gt;
&lt;p&gt;To store this information, we will add a header to every newly allocated memory block.&lt;br/&gt;The header will look something like this:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
struct header_t {
        size_t size;
        unsigned is_free;
};
&lt;/pre&gt;
&lt;p&gt;The idea is simple. When a program requests for &lt;em&gt;size&lt;/em&gt; bytes of memory, we calculate &lt;code&gt;total_size = header_size + size&lt;/code&gt;, and call &lt;code&gt;sbrk(total_size)&lt;/code&gt;. We use this memory space returned by sbrk() to fit in both the header and the actual memory block. The header is internally managed, and is kept completely hidden from the calling program.&lt;/p&gt;
&lt;p&gt;Now, each one of our memory blocks will look like:&lt;br/&gt;&lt;img src=&quot;https://static.tumblr.com/gltvynn/2YZobhtak/node.png&quot; width=&quot;50%&quot; alt=&quot;memory block with header&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We can’t be completely sure the blocks of memory allocated by our malloc is contiguous. Imagine the calling program has a foreign sbrk(), or there’s a section of memory &lt;em&gt;mmap()&lt;/em&gt;ed in between our memory blocks. We also need a way to traverse through our blocks for memory (why traverse? we will get to know when we look at the implementation of &lt;em&gt;free()&lt;/em&gt;). So to keep track of the memory allocated by our malloc, we will put them in a linked list. Our header will now look like:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
struct header_t {
        size_t size;
        unsigned is_free;
        struct header_t *next;
};
&lt;/pre&gt;
&lt;p&gt;and the linked list of memory blocks like this:&lt;/p&gt;
&lt;img src=&quot;https://static.tumblr.com/gltvynn/hjcobhtc6/nodes.png&quot; alt=&quot;linked list of memory blocks&quot;/&gt;&lt;p&gt;We will have a head and tail pointer to keep track of the list.&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
struct header_t *head, *tail;
&lt;/pre&gt;
&lt;p&gt;To prevent two or more threads from concurrently accessing memory, we will put a basic locking mechanism in place.&lt;/p&gt;
&lt;p&gt;We’ll have a global lock, and before every action on memory you have to acquire the lock, and once you are done you have to release the lock.&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
pthread_mutex_t global_malloc_lock;
&lt;/pre&gt;
&lt;p&gt;Our malloc is now modified to:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
void *malloc(size_t size)
{
        size_t total_size;
        void *block;
        struct header_t *header;
        if (!size)
                return NULL;
        pthread_mutex_lock(&amp;amp;global_malloc_lock);
        header = get_free_block(size);
        if (header) {
                header-&amp;gt;is_free = 0;
                pthread_mutex_unlock(&amp;amp;global_malloc_lock);
                return (void*)(header + 1);
        }
        total_size = sizeof(struct header_t) + size;
        block = sbrk(total_size);
        if (block == (void*) -1) {
                pthread_mutex_unlock(&amp;amp;global_malloc_lock);
                return NULL;
        }
        header = block;
        header-&amp;gt;size = size;
        header-&amp;gt;is_free = 0;
        header-&amp;gt;next = NULL;
        if (!head)
                head = header;
        if (tail)
                tail-&amp;gt;next = header;
        tail = header;
        pthread_mutex_unlock(&amp;amp;global_malloc_lock);
        return (void*)(header + 1);
}

struct header_t *get_free_block(size_t size)
{
        struct header_t *curr = head;
        while(curr) {
                if (curr-&amp;gt;is_free &amp;amp;&amp;amp; curr-&amp;gt;size &amp;gt;= size)
                        return curr;
                curr = curr-&amp;gt;next;
        }
        return NULL;
}
&lt;/pre&gt;
&lt;p&gt;Let me explain the code:&lt;/p&gt;
&lt;p&gt;We check if the requested size is zero. If it is, then we return &lt;code&gt;NULL&lt;/code&gt;.&lt;br/&gt;For a valid size, we first acquire the lock. The we call &lt;code&gt;get_free_block()&lt;/code&gt; - it traverses the linked list and see if there already exist a block of memory that is marked as free and can accomodate the given size. Here, we take a first-fit approach in searching the linked list.&lt;/p&gt;
&lt;p&gt;If a sufficiently large free block is found, we will simply mark that block as not-free, release the global lock, and then return a pointer to that block. In such a case, the &lt;em&gt;header&lt;/em&gt; pointer will refer to the header part of the block of memory we just found by traversing the list. Remember, we have to hide the very existence of the header to an outside party. When we do &lt;code&gt;(header + 1)&lt;/code&gt;, it points to the byte right after the end of the header. This is incidentally also the first byte of the actual memory block, the one the caller is interested in. This is cast to &lt;code&gt;(void*)&lt;/code&gt; and returned.&lt;/p&gt;
&lt;p&gt;If we have not found a sufficiently large free block, then we have to extend the heap by calling sbrk(). The heap has to be extended by a size that fits the requested &lt;em&gt;size&lt;/em&gt; as well a header. For that, we first compute the total size: &lt;code&gt;total_size = sizeof(struct header_t) + size;&lt;/code&gt;. Now, we request the OS to increment the program break: &lt;code&gt;sbrk(total_size)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the memory thus obtained from the OS, we first make space for the header. In C, there is no need to cast a &lt;code&gt;void*&lt;/code&gt; to any other pointer type, it is always safely promoted. That’s why we don’t explicitly do: &lt;code&gt;header = (header_t *)block;&lt;/code&gt;&lt;br/&gt;We fill this header with the requested size (not the total size) and mark it as not-free. We update the &lt;em&gt;next&lt;/em&gt; pointer, head and tail so to reflect the new state of the linked list. As explained earlier, we hide the header from the caller and hence return &lt;code&gt;(void*)(header + 1)&lt;/code&gt;. We make sure we release the global lock as well.&lt;/p&gt;
&lt;h3&gt;free()&lt;/h3&gt;
&lt;p&gt;Now, we will look at what free() should do. free() has to first deterimine if the block-to-be-freed is at the end of the heap. If it is, we can release it to the OS. Otherwise, all we do is mark it ‘free’, hoping to reuse it later.&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
void free(void *block)
{
        struct header_t *header, *tmp;
        void *programbreak;

        if (!block)
                return;
        pthread_mutex_lock(&amp;amp;global_malloc_lock);
        header = (struct header_t*)block - 1;

        programbreak = sbrk(0);
        if ((char*)block + header-&amp;gt;size == programbreak) {
                if (head == tail) {
                        head = tail = NULL;
                } else {
                        tmp = head;
                        while (tmp) {
                                if(tmp-&amp;gt;next == tail) {
                                        tmp-&amp;gt;next = NULL;
                                        tail = tmp;
                                }
                                tmp = tmp-&amp;gt;next;
                        }
                }
                sbrk(0 - sizeof(struct header_t) - header-&amp;gt;size);
                pthread_mutex_unlock(&amp;amp;global_malloc_lock);
                return;
        }
        header-&amp;gt;is_free = 1;
        pthread_mutex_unlock(&amp;amp;global_malloc_lock);
}
&lt;/pre&gt;
&lt;p&gt;Here, first we get the header of the block we want to free. All we need to do is get a pointer that is behind the block by a distance equalling the size of the header. So, we cast &lt;em&gt;block&lt;/em&gt; to a header pointer type and move it behind by 1 unit.&lt;br/&gt;&lt;code&gt;header = (struct header_t*)block - 1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sbrk(0)&lt;/code&gt; gives the current value of program break. To check if the block to be freed is at the end of the heap, we first find the end of the current block. The end can be computed as &lt;code&gt;(char*)block + header-&amp;gt;size&lt;/code&gt;. This is then compared with the program break.&lt;/p&gt;
&lt;p&gt;If it is in fact at the end, then we could shrink the size of the heap and release memory to OS. We first reset our head and tail pointers to reflect the loss of the last block. Then the amount of memory to be released is calculated. This the sum of sizes of the header and the acutal block: &lt;code&gt;sizeof(struct header_t) + header-&amp;gt;size&lt;/code&gt;. To release this much amount of memory, we call sbrk() with the negative of this value.&lt;/p&gt;
&lt;p&gt;In the case the block is not the last one in the linked list, we simply set the &lt;em&gt;is_free&lt;/em&gt; field of its header. This is the field checked by &lt;em&gt;get_free_block()&lt;/em&gt; before actually calling sbrk() on a malloc().&lt;/p&gt;
&lt;h3&gt;calloc()&lt;/h3&gt;
The calloc(num, nsize) function allocates memory for an array of &lt;em&gt;num&lt;/em&gt; elements of &lt;em&gt;nsize&lt;/em&gt; bytes each and returns a pointer to the allocated memory. Additionally, the memory is all set to zeroes.
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
void *calloc(size_t num, size_t nsize)
{
        size_t size;
        void *block;
        if (!num || !nsize)
                return NULL;
        size = num * nsize;
        /* check mul overflow */
        if (nsize != size / num)
                return NULL;
        block = malloc(size);
        if (!block)
                return NULL;
        memset(block, 0, size);
        return block;
}
&lt;/pre&gt;
&lt;p&gt;Here, we do a quick check for multiplicative overflow, then call our malloc(),&lt;br/&gt;and clears the allocated memory to all zeroes using &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman3%2Fmemset.3.html&amp;amp;t=NWY5OTY3YzZlZjA3MThlNWYyYjUwNGZkNDI3NTk0YTM5NGIyMjg1MCxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://man7.org/linux/man-pages/man3/memset.3.html&quot;&gt;memset()&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;realloc()&lt;/h3&gt;
&lt;p&gt;realloc() changes the size of the given memory block to the size given.&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;
void *realloc(void *block, size_t size)
{
        struct header_t *header;
        void *ret;
        if (!block || !size)
                return malloc(size);
        header = (struct header_t*)block - 1;
        if (header-&amp;gt;size &amp;gt;= size)
                return block;
        ret = malloc(size);
        if (ret) {
                
                memcpy(ret, block, header-&amp;gt;size);
                free(block);
        }
        return ret;
}
&lt;/pre&gt;
&lt;p&gt;Here, we first get the block’s header and see if the block already has the size to accomodate the requested size. If it does, there’s nothing to be done.&lt;/p&gt;
&lt;p&gt;If the current block does not have the requested size, then we call malloc() to get a block of the request size, and relocate contents to the new bigger block using &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman3%2Fmemcpy.3.html&amp;amp;t=Y2I5MTJhZTVjMjZlMDI0MGY0MmU5OWM3Y2Q2ZWQwNGRiMmIwMDQ0YSxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://man7.org/linux/man-pages/man3/memcpy.3.html&quot;&gt;memcpy()&lt;/a&gt;. The old memory block is then freed.&lt;/p&gt;
&lt;h3&gt;Compiling and using our memory allocator.&lt;/h3&gt;
&lt;p&gt;You can get the code from my github repository - &lt;a href=&quot;https://t.umblr.com/redirect?z=%2F%2Fgithub.com%2Farjun024%2Fmemalloc&amp;amp;t=ZTllYzkzOTgzZDhjM2EwNTJhMmE2NDM1MjllM2RhN2U0ZWZjOGI5ZCxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;//github.com/arjun024/memalloc&quot;&gt;memalloc&lt;/a&gt;.&lt;br/&gt;We’ll compile our memory allocator and then run a utility like &lt;strong&gt;ls&lt;/strong&gt; using our memory allocator.&lt;/p&gt;
&lt;p&gt;To do that, we will first compile it as a library file.&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;
$ gcc -o memalloc.so -fPIC -shared memalloc.c
&lt;/pre&gt;
&lt;p&gt;The &lt;em&gt;-fPIC&lt;/em&gt; and &lt;em&gt;-shared&lt;/em&gt; options makes sure the compiled output has position-independent code and tells the linker to produce a shared object suitable for dynamic linking.&lt;/p&gt;
&lt;p&gt;On Linux, if you set the enivornment variable &lt;strong&gt;LD_PRELOAD&lt;/strong&gt; to the path of a shared object, that file will be loaded before any other library. We could use this trick to load our compiled library file first, so that the later commands run in the shell will use our malloc(), free(), calloc() and realloc().&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;
$ export LD_PRELOAD=$PWD/memalloc.so
&lt;/pre&gt;
&lt;p&gt;Now,&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;
$ ls
memalloc.c              memalloc.so
&lt;/pre&gt;
&lt;p&gt;Voila! That’s our memory allocator serving &lt;em&gt;ls&lt;/em&gt;.&lt;br/&gt;Print some debug message in malloc() and see it for yourself if you don’t believe me.&lt;/p&gt;
&lt;p&gt;Thank you for reading. All comments are welcome. Please report bugs if you find any.&lt;/p&gt;
&lt;h3&gt;Footnotes, References&lt;/h3&gt;
&lt;p&gt;See a list of memory allocators:&lt;br/&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fgithub.com%2Fblanham%2Fliballoc%2F&amp;amp;t=Nzk1OGUxZGMwZDYwMmY3MDU4ZmY0YzNjYTcyNmUwZjgyNzU0MzY4OSxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;https://github.com/blanham/liballoc/&quot;&gt;liballoc&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fg.oswego.edu%2Fdl%2Fhtml%2Fmalloc.html%2520dlmalloc&amp;amp;t=MzlkZDU5NDc0YzA3MzY3Y2U5YThlNTRkNTcyMWI3NzdhMTc5MTYxOSxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://g.oswego.edu/dl/html/malloc.html dlmalloc&quot;&gt;Doug Lea’s Memory Allocator&lt;/a&gt;.&lt;br/&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fgoog-perftools.sourceforge.net%2Fdoc%2Ftcmalloc.html&amp;amp;t=OWZmMTY0M2Q1NjE3OTQ4MzQ5MzgzOWNkYzQxYTRhMTFjMmQxYjZjZSxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://goog-perftools.sourceforge.net/doc/tcmalloc.html&quot;&gt;TCMalloc&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.malloc.de%2Fen%2F&amp;amp;t=MmZkZmE2MzRiYWU2MmRlY2RlODMyNjQ2MzQ2ZTg3NWVjZTUxNWE1MyxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://www.malloc.de/en/&quot;&gt;ptmalloc&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;[1] &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.gnu.org%2Fsoftware%2Flibc%2Fmanual%2Fhtml_node%2FMalloc-Tunable-Parameters.html&amp;amp;t=ZGVjN2Y3MTU3NDg1YWMzZDc5MjZiYmNiZmYyOTJmYzIzODM0ODZmNyxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;https://www.gnu.org/software/libc/manual/html_node/Malloc-Tunable-Parameters.html&quot;&gt;The GNU C Library: Malloc Tunable Parameters&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwiki.osdev.org%2FMemory_Allocation&amp;amp;t=NjY5MWUzMDc0NmY3ZGUyNDRlNmVmNzQ0MDJjMWY1YTY4MjYwNTI0NixGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://wiki.osdev.org/Memory_Allocation&quot;&gt;OSDev - Memory allocation&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fjamesgolick.com%2F2013%2F5%2F15%2Fmemory-allocators-101.html&amp;amp;t=M2YzNDcwMzkzM2NlN2Y4NGQwMjQxOGI1OGQ1OWYxYjMwZWY4NWJlMSxGcHpyWHZINg%3D%3D&amp;amp;b=t%3AlMu0rOs9jGwbQo_qiwGh_A&amp;amp;p=https%3A%2F%2Farjunsreedharan.org%2Fpost%2F148675821737%2Fmemory-allocators-101-write-a-simple-memory&amp;amp;m=1&quot; target=&quot;_blank&quot; data-href=&quot;http://jamesgolick.com/2013/5/15/memory-allocators-101.html&quot;&gt;Memory Allocators 101 - James Golick&lt;/a&gt;&lt;/p&gt;

&lt;a rel=&quot;tag&quot; class=&quot;article-tag&quot; href=&quot;https://arjunsreedharan.org/tagged/c&quot;&gt;c&lt;/a&gt;&lt;a rel=&quot;tag&quot; class=&quot;article-tag&quot; href=&quot;https://arjunsreedharan.org/tagged/memory&quot;&gt;memory&lt;/a&gt;&lt;a rel=&quot;tag&quot; class=&quot;article-tag&quot; href=&quot;https://arjunsreedharan.org/tagged/Memory-Allocation&quot;&gt;Memory Allocation&lt;/a&gt;&lt;a rel=&quot;tag&quot; class=&quot;article-tag&quot; href=&quot;https://arjunsreedharan.org/tagged/operating-system&quot;&gt;operating system&lt;/a&gt;&lt;p class=&quot;credit disclaimer visible-desktop&quot;&gt;Disclaimer: The views expressed here are solely those of the author in his private capacity and do not in any way represent the views of the author's employer or any organization associated with the author.&lt;/p&gt;


</description>
<pubDate>Wed, 10 Oct 2018 00:20:30 +0000</pubDate>
<dc:creator>DonbunEf7</dc:creator>
<og:title>Memory Allocators 101 - Write a simple memory allocator</og:title>
<og:url>https://arjunsreedharan.org/post/148675821737/memory-allocators-101-write-a-simple-memory</og:url>
<og:type>tumblr-feed:entry</og:type>
<og:description>Code related to this article: github.com/arjun024/memalloc This article is about writing a simple memory allocator in C. We will implement malloc(), calloc(), realloc() and free(). This is a beginner...</og:description>
<og:image>https://static.tumblr.com/gltvynn/tHIobhrb5/memlayout.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://arjunsreedharan.org/post/148675821737/memory-allocators-101-write-a-simple-memory</dc:identifier>
</item>
<item>
<title>Why I Bid $700 for a Stolen PSN Account</title>
<link>https://waypoint.vice.com/en_us/article/43ebpd/the-long-weird-story-explaining-why-i-bid-dollar700-for-a-stolen-psn-account</link>
<guid isPermaLink="true" >https://waypoint.vice.com/en_us/article/43ebpd/the-long-weird-story-explaining-why-i-bid-dollar700-for-a-stolen-psn-account</guid>
<description>&lt;p class=&quot;article__text--dropcap&quot;&gt;$1,200. That’s how much someone is asking for a PlayStation Network account I’ve been investigating for the past few weeks. “Secure,” the person calls it, claiming the account will “never be touched” by the original owner again. “He won't be getting it back,” they claim. More than a thousand dollars? That’s a little rich for my blood, and so I counteroffer: $700.&lt;/p&gt;
&lt;p&gt;“Btc?” they respond, accepting my bid. (BTC refers to bitcoin. The majority of transactions like this take place using cryptocurrency; it’s generally harder, &lt;a href=&quot;https://thenextweb.com/hardfork/2018/01/26/this-is-why-buying-drugs-with-bitcoin-is-a-really-bad-idea/&quot; target=&quot;_blank&quot;&gt;but not impossible&lt;/a&gt;, to trace.)&lt;/p&gt;

&lt;p&gt;I didn’t purchase the account, of course. But I could—anyone could, if they only knew where to look. This account wasn’t on a shady market because someone was clumsy with their digital security. They had a strong password &lt;em&gt;and&lt;/em&gt; two-factor authentication. When they were notified about problems with their account, they called Sony and asked for help.&lt;/p&gt;
&lt;p&gt;Despite all this, despite proving their identity over and over, they lost access to their PSN account, including any trophies earned or any games purchased. It was gone...well, sort of. The original owner no longer had access, but this person—the individual asking for $1,200 but who quickly and without hesitation dropped to $700—did.&lt;/p&gt;
&lt;p&gt;“Right now it feels like Sony’s system is protecting the people who stole my account and not me, the legit account owner of that account for almost 12 years,” said Justin, who asked to keep his identity and PSN name anonymous for reasons that’ll become increasingly clear.&lt;/p&gt;
&lt;p&gt;Sony did not respond to my multiple requests for comment about this story.&lt;/p&gt;
&lt;p&gt;To prove Justin owned the account in question, he forwarded me several PSN receipts with the username attached to the email, and various correspondence with Sony.&lt;/p&gt;
&lt;p&gt;Roughly a month after the launch of the PlayStation 3 and PSN, Justin did what a lot of people were doing: registered a username. There was nothing special about the username; it was the same one he’d been using online for years. And for a while, everything was normal. He played games, mostly single-player ones. Eventually, someone tried to gain access to his account, prompting an email from Sony thanking him for calling into customer service, but nothing more came of it. A fluke, surely?&lt;/p&gt;

&lt;p&gt;It was not.&lt;/p&gt;
&lt;p&gt;Instead, it proved to be the opening shot in a ongoing struggle for Justin. This tug-of-war began in 2015, and escalated in recent weeks, where people would gain access to his PSN account, then he’d wrestle it back. Justin would add new security measures, figuring the digital wall would prove too high, or they’d get bored and move on—and they’d get it again.&lt;/p&gt;

&lt;p&gt;The moment Sony added two-factor authentication to PSN, Justin did, too.&lt;/p&gt;
&lt;p&gt;“I've had at least one or two instances,” he said, “where they got far enough where the two-factor prevented them, it stopped them. I was like ‘OK, that's what two-factor is supposed to do.’”&lt;/p&gt;
&lt;p&gt;Nothing is completely secure on the Internet, but there are steps you can take to make life harder for anyone trying to access your stuff. Two-factor authentication, where after entering a password the user is asked to paste a randomly generated code sent to an email account or device of their choosing, is one of the easiest steps one can take. It means an intruder requires access to your device &lt;em&gt;or&lt;/em&gt; multiple accounts. It’s helpful, and it took far too long for Sony to add two-factor authentication to PSN, despite &lt;a href=&quot;https://www.eurogamer.net/articles/2016-04-26-sony-admitted-the-great-psn-hack-five-years-ago-today&quot; target=&quot;_blank&quot;&gt;the service’s massive hack in 2011.&lt;/a&gt; Microsoft &lt;a href=&quot;https://www.usatoday.com/story/tech/2013/04/17/microsoft--two-factor-authentication-cybersecurity-identity-theft/2091507/&quot; target=&quot;_blank&quot;&gt;added two-factor to Xbox Live in 2013&lt;/a&gt;. It &lt;a href=&quot;https://www.theverge.com/2016/8/25/12637762/sony-playstation-network-two-factor-authentication&quot; target=&quot;_blank&quot;&gt;didn’t hit PSN until 2016&lt;/a&gt;, five years after the personal details of 77 million users were potentially exposed to hackers.&lt;/p&gt;
&lt;p&gt;Two-factor authentication is enough for most people, though increasingly, companies are offering more complex security layers, &lt;a href=&quot;https://theappfactor.com/best-two-factor-authentication-apps/&quot; target=&quot;_blank&quot;&gt;including dedicated authentication apps&lt;/a&gt;. (I use Authy.)&lt;/p&gt;

&lt;p&gt;Until this point, what Justin was experiencing was annoying but tolerable. The two-factor notifications told him people were trying to gain access, but all he had to do was change his PSN password. Things changed last month, however, when he was getting ready for school.&lt;/p&gt;
&lt;p&gt;“I got a text message on my phone,” he said, “from the two-factor service saying ‘Your two-factor authentication has been deactivated. Please be careful, you don't have that protection.’ I won't say I'm a security expert, but I like to believe I'm security conscious. I knew I was screwed. I tried to log in, but it wouldn't let me log in, so I called Sony.”&lt;/p&gt;
&lt;p&gt;After proving he was the account owner, control reverted to Justin, but he was confused. Justin told me Sony’s customer service representatives couldn’t explain what happened, but noted they could flag the count as “sensitive or something”—he couldn’t remember the exact phrasing—which would invite extra scrutiny by future representatives.&lt;/p&gt;
&lt;p&gt;Justin pressed on. He registered a brand-new email account, one that hadn’t been associated with anything yet, and used the respected password management software LastPass to generate a 30-character password for his PSN account.&lt;/p&gt;
&lt;p&gt;“I would go longer but I hate manually typing it in the PS4,” he said.&lt;/p&gt;
&lt;p class=&quot;article__pull-quote&quot;&gt;“Right now it feels like Sony’s system is protecting the people who stole my account and not me, the legit account owner of that account for almost 12 years.&quot;&lt;/p&gt;

&lt;p&gt;For the email address itself, however, he applied a 100-character, randomly generated password with two-factor authentication. After logging in, the name associated with the account (not the username) had changed. He didn’t take much note of it. Fear-something?&lt;/p&gt;
&lt;p&gt;“I changed it all back,” he said, “and I was like ‘OK, this happened before. It's never gotten this far, but it was probably a one-off. Sony said they'd keep an eye on it. I have a new email address. I have a new password. Everything should be fine.&quot;&lt;/p&gt;
&lt;p&gt;Narrator: It wasn’t.&lt;/p&gt;
&lt;p&gt;When Justin woke up the next morning, it was like &lt;em&gt;Groundhog Day;&lt;/em&gt; another text message saying two-factor had been flipped off. After calling Sony, he learned the damage was more serious: whoever hijacked the account changed the email address it was associated with, punched in a new password, &lt;em&gt;and&lt;/em&gt; set up their own form of two-factor for a phone number.&lt;/p&gt;
&lt;p&gt;When he tried to regain access through customer service, the said the account was now flagged as “protected.” Protected? This was different than “sensitive,” apparently. Protected turns on automatically, when the information on an account changes enough times to be considered erratic, and isn’t controlled by the representatives. Though the representatives confirmed Justin was the account holder, it was now, as Justin tells it, out of their hands. Another team was supposed to contact him in three days with more information.&lt;/p&gt;

&lt;p&gt;During this phone call, something weird happened: someone texted Justin with messages he described “vaguely threatening,” promising to make things “worse” if he didn’t give up the account. (He deleted the text messages before I'd gotten in touch, when I asked him to start documenting everything.) If he &lt;em&gt;didn’t&lt;/em&gt; give up the account, this person would make things worse at their job at Earthlink. They also made vague allusions to his wife and child.&lt;/p&gt;
&lt;p&gt;Here’s the problem: Justin never worked at Earthlink. &lt;a href=&quot;https://en.wikipedia.org/wiki/EarthLink&quot; target=&quot;_blank&quot;&gt;Earthlink was his old internet service provider&lt;/a&gt; during the PlayStation 3 era, and there was an old Earthlink email address attached to a &lt;a href=&quot;https://support.us.playstation.com/articles/en_US/KC_Article/How-to-Create-a-Child-Account-on-Your-PS4&quot; target=&quot;_blank&quot;&gt;PSN child account&lt;/a&gt; he’d made for a reason he couldn’t remember. The hijacker, it seems, used these scant details to infer he worked at Earthlink, and had a family worth threatening.&lt;/p&gt;

&lt;p&gt;This was actually comforting to Justin. There was no family to be threatened. Plus, when he’d been thinking through the other ways someone might be getting access to his information—cloning his phone’s SIM card, a hidden keylogger tracking the movements on his keyboard, a fully compromised email account—it was potentially much worse. Had then been true, though, why hadn’t anyone used his credit card? Accessed a website that could do more financial damage than his lowly PSN account?&lt;/p&gt;
&lt;p&gt;The fact that two-factor was disabled on Justin’s account is an important, complicating point. In order to disable two-factor, you’d theoretically have to have full access to the account, which &lt;em&gt;also&lt;/em&gt; means access to the email (or device) the two-factor code is being forwarded to.&lt;/p&gt;
&lt;p&gt;In such a case, wouldn’t the hijacker have access to more information than the misleading details on the PSN account, such as an old email address? Something wasn’t adding up.&lt;/p&gt;
&lt;p&gt;Who, then, was disabling two-factor on his account? A key piece of evidence to consider: Sony had told him someone had called about his PSN account a whopping 12 times in the past 48 hours. A few of those were Justin, but the vast majority of calls were someone else.&lt;/p&gt;
&lt;p&gt;“I assume he's wasting an hour or two [on the phone with Sony], at least?” said Justin. “It takes me half an hour to sort it out, and I have all the information. [laughs] So I'm just going off how long it takes me, and I hope it takes him at least as long. I hope he's not calling up and getting it done in 10 minutes.”&lt;/p&gt;

&lt;p&gt;A potential culprit, then, is social engineering, a now-pervasive technique where someone uses pieces of information to trick someone, usually customer service representatives, into gaining access to another person’s account. This would explain the volume of phone calls. If you don’t succeed with one representative, call back and see if another will be more willing.&lt;/p&gt;
&lt;p&gt;Though Sony asked Justin a series of personal questions to re-establish identity—the primary email address on the account, serial number of his first console, first city he logged in from—they also asked for details, like recent purchases, &lt;a href=&quot;https://psnprofiles.com/&quot; target=&quot;_blank&quot;&gt;that could be found by punching in the account into any number of websites and seeing what trophies had recently unlocked&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(I asked multiple individuals who recently spoke with Sony’s customer service over similar issues, and several mentioned Sony asking for recent purchases as one of their identity metrics.)&lt;/p&gt;
&lt;p&gt;Once you know one piece of information, it’s not difficult to start punching that into Google and find &lt;em&gt;other&lt;/em&gt; pieces of information that might be just enough for a more lax representative.&lt;/p&gt;
&lt;p&gt;Whatever happened, the end result was the same: When Justin finally heard back from Sony, they didn’t apologize and promise to protect the account. Instead, they said it—an account Justin has had for more than 12 years, with a history of trophies and purchases—was gone. There was nothing he could do, no process to appeal, no way to get any of his games back.&lt;/p&gt;

&lt;p&gt;“I couldn't get any confirmation on if the person who ‘hacked’ it is locked out, but I sure as shit am,” he said. “From what I can gather I have lost that account and Sony can't or won't do jack shit about it. If the person who stole it is also locked out that is one thing, but I couldn't get a concrete answer on that piece of info.”&lt;/p&gt;
&lt;p&gt;That’s when I went looking for answers, and how I’d end eventually end talking someone down from a $1,200 asking price for Justin’s account to only— &lt;em&gt;only&lt;/em&gt;—$700. My first tip came from one of Justin’s friends, who, in a fit of frustration, looked up Justin’s account on PSN, and found someone was actively using it, and had changed a bunch of information on it.&lt;/p&gt;
&lt;p&gt;Importantly, it listed an active Twitter account in the “about me” section of the profile, an account that featured a (now deleted) screen bragging about access to Justin’s PSN name:&lt;/p&gt;
&lt;div class=&quot;article__media&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1539025025454-Image-2018-09-24-at-326-BLUR.png?resize=320:*&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1539025025454-Image-2018-09-24-at-326-BLUR.png&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;A reply mentioned another account, who &lt;em&gt;also&lt;/em&gt; bragged about nabbing Justin’s PSN name.&lt;/p&gt;
&lt;div class=&quot;article__media&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1539025120185-Image-2018-10-04.png?resize=320:*&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1539025120185-Image-2018-10-04.png&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;When I contacted the first person, who had open direct messages, they pleaded ignorance, and repeatedly claimed it was their account. “What makes you believe the account was stolen?” they asked. Not long after, they locked their account—and deleted the screen shot.&lt;/p&gt;
&lt;p&gt;It’s at this point that I contacted a source close to the hacking and piracy community, who pointed me towards a popular message board for sharing, selling, and buying “OG,” aka original, accounts across a variety of platforms, including &lt;em&gt;Fortnite&lt;/em&gt;, Snapchat, Steam, Twitter, and, of course, PlayStation Network.&lt;/p&gt;

&lt;p&gt;I’m declining to name the message board due to the sensitivity of the information on it.&lt;/p&gt;
&lt;p&gt;On the board, there are guides to “secure” a PSN account in case “someone attempts to get the account back,” albeit with the important caveat “there’s no way to secure a PSN 100%.” One of the key suggestions is to quickly change the account to Japanese, which you’ll notice happened with Justin’s account. One of the screen shots listed the language as “Japanese.”&lt;/p&gt;
&lt;p&gt;It was easy enough to register an account on this message board. There’s no vetting process. You also don’t have to pay anything to search the database, either. Once I was in, I plugged Justin’s PSN account into the search field and voila. There was a thread selling his username for $1,200.&lt;/p&gt;
&lt;div class=&quot;article__media&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1539025137529-Image-2018-10-04-at-30434-PM.png?resize=320:*&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1539025137529-Image-2018-10-04-at-30434-PM.png&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;In the thread, the seller promises the account is “secure.” There’s scattered and disputed discussion about whether the account has been sold before, but the seller claims it hasn’t. Importantly, there’s a discussion over whether the “og owner,”—Justin—could regain access.&lt;/p&gt;
&lt;p&gt;“He won’t be getting it back,” argued the seller.&lt;/p&gt;
&lt;p&gt;“Are you going to have a pull war with him or what,” asked another user.&lt;/p&gt;
&lt;p&gt;“Not really a pull war when he not gonna pull lol” retorted the seller.&lt;/p&gt;
&lt;p&gt;Pull war is a reference to the cat-and-mouse game Justin had been playing with this person, or possibly someone else, and Sony’s customer service department. The seller was boasting there’s no way it’ll switch hands, a claim bolstered by what Justin was told by Sony: the account is lost. In this case, though, it’s not “lost” because Sony locked it down, it’s lost because the user apparently had pulled enough tricks to make sure it’s out of Justin’s hands.&lt;/p&gt;

&lt;p&gt;The seller even referenced the text message conversations he had with Justin:&lt;/p&gt;
&lt;div class=&quot;article__media&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1539027316277-update.jpeg?resize=320:*&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1539027316277-update.jpeg&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;Soon after, another user vouches for the seller’s authenticity, but is called out by someone as being a duplicate account for the seller—a violation of the board’s rules. He’s now banned, amid speculation from other users the seller cannot back up claims of securing the account.&lt;/p&gt;
&lt;p&gt;“Use your brain a lil bit,” said another user. “There are ways to make sure og owner doesnt get it back. If you dont know then you dont.”&lt;/p&gt;
&lt;p&gt;The other user concedes the point.&lt;/p&gt;
&lt;p&gt;The seller continues to bump the thread— it’s been on sale for nearly a month—but no one’s biting. That’s when I decided to send a message, asking for proof about the account. He agrees to add me as a friend on PSN, and after registering a new account, I send a request.&lt;/p&gt;
&lt;p&gt;Jackpot.&lt;/p&gt;
&lt;div class=&quot;article__media&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1539025190293-42959609_10110187417171140_6821669888784859136_o-BLUR.jpeg?resize=320:*&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1539025190293-42959609_10110187417171140_6821669888784859136_o-BLUR.jpeg&quot;/&gt;&lt;p&gt;A screen shot from a burner PSN account I made.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You’ll notice we’re now friends, as evidenced by the “your friend” note in the corner. The avatar is the same as the one referenced in the screenshot from Twitter a few weeks back.&lt;/p&gt;
&lt;p&gt;This is when I decided to negotiate. Nobody had bought the account at $1,200, so maybe he’d go a little lower. Like I mentioned, I picked $700 out of thin air, thinking we’d settle somewhere in the middle, but they immediately agreed to my asking price. No negotiation.&lt;/p&gt;
&lt;p&gt;“No one actually pays real money for accounts, so I bet he’s thrilled,” said the hacker who’d tipped me off to the forum in the first place.&lt;/p&gt;
&lt;p&gt;I haven’t paid any money for the account, of course. Nor has anyone else.&lt;/p&gt;

&lt;p&gt;More than likely, Sony itself is a victim of a clever social engineering scheme, in which a user, or series of users, repeatedly spammed their representatives, until it found someone willing to accept the limited information they did have, and calculated the system would eventually lock the account in their favor. Even a &quot;failed&quot; social engineering attempt can be a success, if the person calling comes away with new information about the account. Every company in the world can fall victim to social engineering, as there are no true fail safes. But Sony’s setup seems especially ripe for it.&lt;/p&gt;
&lt;p&gt;Why didn’t the system get flagged as “sensitive” sooner? Why can a user flip off two-factor authentication over the phone? How can an account get abandoned, when it’s still active?&lt;/p&gt;
&lt;p&gt;There are ways Sony could have prevented this from happening.&lt;/p&gt;
&lt;p&gt;As I mentioned before, Sony did not respond to my request for comment about this story. They didn’t respond to my request for comment in 2017 &lt;a href=&quot;https://waypoint.vice.com/en_us/article/8qjp5b/inside-the-shady-world-of-playstation-network-account-resellers&quot; target=&quot;_blank&quot;&gt;when I investigated the shady world of PSN account resellers, either&lt;/a&gt;. PSN has a long, troubled history of putting their users in compromising situations. There are always exceptions, and no digital security is completely safe, but when someone follows all the rules, shouldn’t the company go above and beyond?&lt;/p&gt;
&lt;p&gt;In this case, Sony most definitely did not—at first, anyway.&lt;/p&gt;
&lt;p&gt;Though Sony did not officially respond to me, a few days after being alerted to the situation, in which I outlined everything that had happened to Justin’s account, he got a phone call. A week after Sony told Justin he was screwed, he was magically being handed the account.&lt;/p&gt;

&lt;p&gt;“Sony promised that there were going to set it up so no reps could make any changes,” he said, “but they are still investigating how this happened.”&lt;/p&gt;
&lt;p&gt;Sony did not respond to my request for comment about this new development.&lt;/p&gt;
&lt;p&gt;There’s evidence the seller truly did believe they had the account “secured.” There was a new name and address associated with the account, and $15 in credit had been added. The seller even purchased some new games. This was an account someone intended to use, or allow someone else to use, if they’d agreed to an asking price of $1,200. (Or, uh, $700.) It’s also possible the purchases were made to establish a new purchase history, one of the identity metrics Sony’s customer service uses to establish who is the owner of an account.&lt;/p&gt;
&lt;p&gt;Justin was also given a specific phone number to call in the future, if he has new problems.&lt;/p&gt;
&lt;p&gt;“I have my account all set up now,” he said. “We shall see how well Sony can protect it.”&lt;/p&gt;
&lt;p&gt;As for the seller, I called their bluff and asked for evidence they still had the account. They demurred, accused me of trying to waste their time (fact check: true), and asked for their money. They'll have to keep waiting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Follow Patrick on &lt;a href=&quot;http://www.twitter.com/patrickklepek&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;. If you have a tip or a story idea, drop him an email: patrick.klepek@vice.com.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://forum.waypoint.vice.com/&quot; target=&quot;_blank&quot;&gt;Have thoughts? Swing by Waypoint's forums to share them!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 09 Oct 2018 21:56:12 +0000</pubDate>
<dc:creator>jsnell</dc:creator>
<og:type>article</og:type>
<og:title>The Long, Weird Story Explaining Why I Bid $700 For a Stolen PSN Account</og:title>
<og:image>https://video-images.vice.com/articles/5bbba797173ddf000665ec20/lede/1539024792122-watchdogs_ss_hq_full_157609.jpeg?crop=1xw:1xh;center,center&amp;resize=1200:*</og:image>
<og:url>https://waypoint.vice.com/en_us/article/43ebpd/the-long-weird-story-explaining-why-i-bid-dollar700-for-a-stolen-psn-account</og:url>
<og:description>Justin has been using the same PSN account for 12 years. Then, someone tricked Sony into giving it away. Here's how I tracked it down, and started negotiating for its release.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://waypoint.vice.com/en_us/article/43ebpd/the-long-weird-story-explaining-why-i-bid-dollar700-for-a-stolen-psn-account</dc:identifier>
</item>
<item>
<title>Flatpak – a security nightmare</title>
<link>http://flatkill.org/</link>
<guid isPermaLink="true" >http://flatkill.org/</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#ffffff&quot;/&gt;&lt;title&gt;Flatpak - a security nightmare&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;Flatpak - a security nightmare&quot;/&gt;&lt;link href=&quot;main.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;96.187132593076&quot;&gt;

&lt;p class=&quot;st&quot;&gt;Red Hat's flatpak has been getting a lot of attention lately, it's the self-proclaimed new way of distributing desktop applications on Linux. It's secure they say ...&lt;/p&gt;
&lt;h2&gt;The sandbox is a lie&lt;/h2&gt;
&lt;p&gt;Almost all popular applications on flathub come with &lt;span class=&quot;code&quot;&gt;filesystem=host&lt;/span&gt;, &lt;span class=&quot;code&quot;&gt;filesystem=home&lt;/span&gt; or &lt;span class=&quot;code&quot;&gt;device=all&lt;/span&gt; permissions, that is, &lt;span class=&quot;wr&quot;&gt;write permissions to the user home directory&lt;/span&gt; (and more), this effectively means that all it takes to &quot;escape the sandbox&quot; is &lt;span class=&quot;code&quot;&gt;echo download_and_execute_evil &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;. That's it.&lt;/p&gt;
&lt;p&gt;This includes &lt;span class=&quot;wr&quot;&gt;Gimp, VSCode, PyCharm, Octave, Inkscape, Steam, Audacity, VLC, ...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To make matters worse, the users are misled to believe the apps run sandboxed. For all these apps flatpak shows a reassuring &quot;sandbox&quot; icon when installing the app (things do not get much better even when installing in the command line - you need to know flatpak internals to understand the warnings).&lt;/p&gt;
&lt;h2&gt;You are NOT getting security updates&lt;/h2&gt;
&lt;p&gt;Official applications and runtimes are vulnerable to known easily-exploitable code execution vulnerabilities, some of the vulnerabilities have been known (and fixed in distributions but not in flatpak) for half a year.&lt;/p&gt;
&lt;p&gt;Yes, it's possible your linux box has been compromised if you use flatpak, we are literally talking about several months old public exploits. Ever opened an image in flatpak Gimp? The criticial vulnerability &quot;shell in the ghost&quot; was fixed in flatpak about one month after linux distributions.&lt;/p&gt;
&lt;p&gt;Let's go through DSA and look for something trivial to exploit.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.debian.org/security/2018/dsa-4212&quot;&gt;CVE-2018-11235&lt;/a&gt; reported and fixed &lt;strong&gt;more than 4 months ago&lt;/strong&gt;. Flatpak VSCode, Android Studio and Sublime Text still use unpatched git version 2.9.3. Note that flatpak PyCharm comes with git 2.19.0 with this issue fixed but still vulnerable to &lt;a href=&quot;https://www.debian.org/security/2018/dsa-4311&quot;&gt;CVE-2018-17456&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can demonstrate this using Sublime with GitSavvy plugin with recursive clone (plugin at &lt;em&gt;https://github.com/divmain/GitSavvy/tree/dev&lt;/em&gt;, clone command &lt;em&gt;git: clone recursively&lt;/em&gt;, parameter &lt;em&gt;git://flatkill.org/cve-2018-11235&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://flatkill.org/git_submodules_old.png&quot; alt=&quot;pwned&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Local root exploit? Minor issue!&lt;/h2&gt;
&lt;p&gt;Up until 0.8.7 all it took to get root on the host was to install a flatpak package that contains a suid binary (flatpaks are installed to /var/lib/flatpak on your host system). Again, could this be any easier? A high severity &lt;a href=&quot;https://www.cvedetails.com/cve/CVE-2017-9780/&quot;&gt;CVE-2017-9780&lt;/a&gt; (CVSS Score 7.2) has indeed been assigned to this vulnerability. Flatpak developers consider this &lt;a href=&quot;https://github.com/flatpak/flatpak/releases/tag/0.8.7&quot;&gt;a minor security issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Future of application distribution?&lt;/h2&gt;
&lt;p&gt;Let's hope not! Sadly, it's obvious Red Hat developers working on flatpak do not care about security, yet the self-proclaimed goal is to replace desktop application distribution - a cornerstone of linux security.&lt;/p&gt;
&lt;p&gt;And it's not only about these security problems. Running KDE apps in fakepak? Forget about desktop integration (not even font &lt;em&gt;size&lt;/em&gt;). Need to input Chinese/Japanese/Korean characters? Forget about that too - fcitx has been &lt;a href=&quot;https://github.com/flatpak/flatpak/issues/2031&quot;&gt;broken since flatpak 1.0&lt;/a&gt;, never fixed since.&lt;/p&gt;
&lt;p&gt;The way we package and distribute desktop applications on Linux surely needs to be rethinked, sadly flatpak is introducing more problems than it is solving.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 09 Oct 2018 21:38:43 +0000</pubDate>
<dc:creator>stryk</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://flatkill.org/</dc:identifier>
</item>
</channel>
</rss>