<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Microsoft gives up on Windows 10 Mobile</title>
<link>http://www.bbc.co.uk/news/technology-41551546</link>
<guid isPermaLink="true" >http://www.bbc.co.uk/news/technology-41551546</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Windows 10 Mobile phones&quot; src=&quot;https://ichef-1.bbci.co.uk/news/320/cpsprodpb/587D/production/_98235622_whatsubject.jpg&quot; width=&quot;976&quot; height=&quot;400&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Microsoft&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Microsoft said creating Windows 10 Mobile phones was not a &quot;focus&quot; for the company
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Microsoft appears to have abandoned its smartphone operating system ambitions.&lt;/p&gt;&lt;p&gt;The company's Windows 10 chief &lt;a href=&quot;https://twitter.com/joebelfiore/status/917071399541391360&quot; class=&quot;story-body__link-external&quot;&gt;has tweeted that developing&lt;/a&gt; new features and hardware for the Mobile version of the OS was no longer a &quot;focus&quot;.&lt;/p&gt;&lt;p&gt;Joe Belfiore added that he had also switched to Android himself.&lt;/p&gt;&lt;p&gt;Windows 10 Mobile tried to attract users by letting them run the same &quot;universal apps&quot; on both their PCs and handsets, but the concept failed to catch on.&lt;/p&gt;&lt;p&gt;The OS accounted for just 0.03% of the global market - based on smartphone shipments - between April and June, according to research company IDC.&lt;/p&gt;&lt;p&gt;The market intelligence provider said the news had been a long time coming.&lt;/p&gt;&lt;p&gt;&quot;There wasn't a wide range of devices running Windows 10 Mobile, so it wasn't attractive to retailers or operators,&quot; said IDC's Francisco Jeronimo.&lt;/p&gt;&lt;p&gt;&quot;And from a consumer perspective, the operating system didn't provide as good an experience as Android or iOS.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Mr Belfiore headed up Microsoft's Windows Phone platform before it moved to Windows 10 Mobile
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Mr Belfiore began a series of tweets on Sunday by discussing the recent launch of a test version of Microsoft's Edge web browser for Android and iOS - the latest in a series of releases of its core software for rival mobile platforms.&lt;/p&gt;&lt;p&gt;He then went on to respond to questions about whether there was any point sticking with Windows 10 Mobile.&lt;/p&gt;&lt;p&gt;He said that while Microsoft would support the &quot;many companies&quot; that had adopted the platform, he had switched to Android for the diversity of its apps and hardware.&lt;/p&gt;&lt;p&gt;&quot;Of course we'll continue to support the platform... bug fixes, security updates, et cetera,&quot; he said.&lt;/p&gt;&lt;p&gt;&quot;But building new features or hardware is not the focus.&quot;&lt;/p&gt;&lt;p&gt;Mr Belfiore posted Microsoft had tried &quot;very hard&quot; to incentivise other companies to release universal apps - even writing their software for them in some cases - but the number of users had been too low for most to bother.&lt;/p&gt;&lt;p&gt;The announcement comes a week after HP had said it no longer planned to release further Windows 10 Mobile handsets, and a fortnight after Microsoft co-founder Bill Gates disclosed that he had &lt;a href=&quot;http://www.bbc.co.uk/news/technology-41399823&quot; class=&quot;story-body__link&quot;&gt;already made the switch to Android&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;However, some manufacturers - including the UK's Wileyfox and Germany's TrekStor - had unveiled new models powered by Windows 10 Mobile as recently as last month.&lt;/p&gt;&lt;p&gt;&quot;Most Microsoft applications are now available and supported on other mobile operating systems,&quot; said Mr Jeronimo.&lt;/p&gt;&lt;p&gt;&quot;After Satya Nadella took over [as chief executive], that clearly became the strategy - and after that happened what incentive was there to buy a Windows-powered phone?&quot;&lt;/p&gt;&lt;p&gt;However, Microsoft may not have given up on powering smartphones altogether.&lt;/p&gt;&lt;p&gt;Earlier this year, Windows Central reported the company was &lt;a href=&quot;https://www.windowscentral.com/microsofts-plan-windows-10-mobile-and-existing-phones&quot; class=&quot;story-body__link-external&quot;&gt;working on a new version of Windows 10&lt;/a&gt; - codenamed Andromeda - that would run on all types of computer and make it possible for third-party apps to adapt without having to code a special &quot;universal&quot; version. &lt;/p&gt;&lt;p&gt;It said the OS was due for release next year, but suggested the code would not be offered as an upgrade to existing Windows 10 Mobile devices.&lt;/p&gt;&lt;p&gt;A spokeswoman for Microsoft was unable to provide further comment.&lt;/p&gt;
    </description>
<pubDate>Mon, 09 Oct 2017 10:35:30 +0000</pubDate>
<dc:creator>nocoder</dc:creator>
<og:title>Microsoft gives up on Windows 10 Mobile</og:title>
<og:type>article</og:type>
<og:description>The technology company says it struggled to convince others to make mobile apps for the platform.</og:description>
<og:url>http://www.bbc.co.uk/news/technology-41551546</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/cpsprodpb/316D/production/_98235621_whatsubject.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.co.uk/news/technology-41551546</dc:identifier>
</item>
<item>
<title>Java at Alibaba [pdf]</title>
<link>https://jcp.org/aboutJava/communityprocess/ec-public/materials/2017-02-14/Java_at_Alibaba.pdf</link>
<guid isPermaLink="true" >https://jcp.org/aboutJava/communityprocess/ec-public/materials/2017-02-14/Java_at_Alibaba.pdf</guid>
<description>&lt;a href=&quot;https://jcp.org/aboutJava/communityprocess/ec-public/materials/2017-02-14/Java_at_Alibaba.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Mon, 09 Oct 2017 01:42:25 +0000</pubDate>
<dc:creator>marktangotango</dc:creator>
<og:title>Microsoft gives up on Windows 10 Mobile</og:title>
<og:type>article</og:type>
<og:description>The technology company says it struggled to convince others to make mobile apps for the platform.</og:description>
<og:url>http://www.bbc.co.uk/news/technology-41551546</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/cpsprodpb/316D/production/_98235621_whatsubject.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://jcp.org/aboutJava/communityprocess/ec-public/materials/2017-02-14/Java_at_Alibaba.pdf</dc:identifier>
</item>
<item>
<title>Deutsche Bank makes source code publicly available for the first time</title>
<link>https://www.db.com/newsroom_news/2017/deutsche-bank-makes-its-computer-code-publicly-available-for-the-first-time-en-11674.htm</link>
<guid isPermaLink="true" >https://www.db.com/newsroom_news/2017/deutsche-bank-makes-its-computer-code-publicly-available-for-the-first-time-en-11674.htm</guid>
<description>&lt;span class=&quot;rs_skip&quot;&gt;&lt;noscript&gt;

&lt;/noscript&gt;&lt;/span&gt;&lt;p&gt;Deutsche Bank (XETRA: DBKGn.DE / NYSE: DB) aims to create a common industry standard for trading technology by making its own computer code publicly available for the first time.&lt;/p&gt;
&lt;p&gt;The bank will put over 150,000 lines of code from its award-winning electronic platform Autobahn into the public domain so that trading applications from different providers can use it as a shared foundation and work seamlessly with each other. The code will also be integrated into the Symphony collaboration platform, which is widely used by financial institutions.&lt;/p&gt;
&lt;p&gt;The move is Deutsche Bank’s first contribution to open source technology, in which firms provide public access to computer code so that other programmers can suggest improvements and new ways of using it, for example to provide new services. It marks a further step in the bank’s strategy of modernising, simplifying and standardising its technology.&lt;/p&gt;
&lt;p&gt;The code, known as Plexus Interop, is designed to connect thousands of different applications from across the financial services industry, enabling banks and clients’ systems to talk to each other. Currently, many market participants use multiple applications for data, news and trading that work independently of each other.&lt;/p&gt;
&lt;p&gt;Feedback from clients suggested that they were keen to use a standard platform for trading applications that was not the proprietary solution of a single provider. Deutsche Bank reviewed the commercial products available in the market and decided to create a solution when none of them fulfilled its needs.&lt;/p&gt;
&lt;p&gt;Peter Wharton-Hood, Chief Operating Officer of the Corporate &amp;amp; Investment Bank at Deutsche Bank, said: “We want to be a leader in open source technology in the banking sector. By making this code publicly available, we aim to create a common industry standard that will deliver a faster and more convenient service to clients, strengthen controls and reduce costs.”&lt;/p&gt;
&lt;p&gt;David Gurle, Founder and CEO of Symphony, said: “We are thrilled to be working with Deutsche Bank on the integration of this open source solution with Symphony. Plexus Interop represents the largest outside contribution to the Symphony Software Foundation since its founding, and underscores the power of the community and our strong partnership with Deutsche Bank.”&lt;/p&gt;
&lt;p&gt;This announcement will be made at Symphony’s annual platform conference, &lt;a href=&quot;https://innovate.symphony.com/&quot; class=&quot;alertBox&quot;&gt;Symphony Innovate 2017&lt;/a&gt;, held in New York on October 4.&lt;/p&gt;
</description>
<pubDate>Sun, 08 Oct 2017 22:08:21 +0000</pubDate>
<dc:creator>Khaine</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.db.com/newsroom_news/2017/deutsche-bank-makes-its-computer-code-publicly-available-for-the-first-time-en-11674.htm</dc:identifier>
</item>
<item>
<title>Tensorflow sucks</title>
<link>http://nicodjimenez.github.io/2017/10/08/tensorflow.html</link>
<guid isPermaLink="true" >http://nicodjimenez.github.io/2017/10/08/tensorflow.html</guid>
<description>&lt;p&gt;Every few months I enter the following query into Google: “Tensorflow sucks” or “f*** Tensorflow”, hoping to find like-minded folk on the internet. Unfortunately, although Tensorflow has been around for about two years, I still cannot find a bashing of Tensorflow that leaves me fully satisfied.&lt;/p&gt;
&lt;p&gt;Although I suppose it’s possible I might be asking the wrong search engine, I think there’s a different force at work here: Google envy. The phenomenon known as “Google deep envy” is the following set of assumptions made by engineers across the world:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;People who work at Google are more intelligent and competent than yourself&lt;/li&gt;
&lt;li&gt;If you learn Tensorflow you could get a deep learning job at Google! (keep deep dreaming young fellow)&lt;/li&gt;
&lt;li&gt;If your mediocre startup uses Tensorflow and you blog about its virtues maybe Google will want to buy it&lt;/li&gt;
&lt;li&gt;If you don’t “get” Tensorflow’s unintuitive design, you’re just dumb&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Let’s leave our assumptions behind us for now and give Tensorflow an honest look.&lt;/p&gt;
&lt;p&gt;When Tensorflow first came out, we were promised an end to the endless nightmare of poorly designed or poorly maintained deep learning frameworks. (e.g. &lt;a href=&quot;https://github.com/BVLC/caffe/issues&quot;&gt;https://github.com/BVLC/caffe/issues&lt;/a&gt;). What we got instead, was the deep learning framework equivalent of Java (write once, run everywhere), but less fun to work with, and with a purely declarative paradigm. Yuck.&lt;/p&gt;
&lt;p&gt;Where did things go wrong? In trying to build a tool to satisfy everyone’s needs, it seems that Google built a product that does a so-so job of satisfying anyone’s needs.&lt;/p&gt;
&lt;p&gt;For researchers, Tensorflow is hard to learn and hard to use. Research is all about flexibility, and lack of flexibility is baked into Tensorflow at a deep level.&lt;/p&gt;
&lt;p&gt;Want to extract the values of intermediate layers of a neural net? You’ll need to define a graph, and then execute it with the data passed in as a dictionary, and oh don’t forget to add the intermediate layers as outputs of the graph, or else you won’t be able to retrieve their values. Ok, that hurt, but it’s doable.&lt;/p&gt;
&lt;p&gt;Want to execute layers conditionally, such as an RNN that stops whenever an end-of-sentence (EOS) token is produced? Someone using Pytorch will be on their 3rd failed AI startup by the time you’re done with that.&lt;/p&gt;
&lt;p&gt;For machine learning practitioners such as myself, Tensorflow is not a great choice either. The declarative nature of the framework makes debugging much more difficult. The advantage of being able to run models on Android or iOS looks great until you see how big the framework binaries are (20MB+), or you try to look at the nearly non-existent C++ documentation, or you want to do any kind of conditional network execution, which is super useful in low resource situations such as mobile.&lt;/p&gt;

&lt;p&gt;It is true that the developers of Tensorflow are deep learning superstars. However, the original developer of Tensorflow that is probably most widely known and respected, Yangquing Jia, has recently left Google to join Facebook, where his Caffe2 project is quietly picking up steam: (&lt;a href=&quot;https://github.com/caffe2/caffe2/graphs/contributors&quot;&gt;https://github.com/caffe2/caffe2/graphs/contributors&lt;/a&gt;, &lt;a href=&quot;https://github.com/caffe2/caffe2/issues&quot;&gt;https://github.com/caffe2/caffe2/issues&lt;/a&gt;). Unlike Tensorflow, Caffe2 allows the user to execute a layer on a piece of data in one line of code. Radical!&lt;/p&gt;
&lt;p&gt;In addition, Pytorch is quickly developing popularity amongst top AI researchers. Torch users, although nursing RSI injuries from writing Lua code to perform simple string operations, simply aren’t deserting in droves to Tensorflow – they are switching to Pytorch. It appears that Tensorflow is just not good enough for top AI labs. Sorry, Google.&lt;/p&gt;
&lt;p&gt;The most interesting question to me is why Google chose a purely declarative paradigm for Tensorflow in spite of the obvious downsides of this approach. Did they feel that encapsulating all the computation in a single computation graph would simplify executing models on their TPU’s so they can cut Nvidia out of the millions of dollars to be made from cloud hosting of deep learning powered applications? It’s difficult to say. Overall, Tensorflow does not feel like a pure open source project for the common good. Which I would have no problem with, had their design been sound. In comparison with beautiful Google open source projects out there such as Protobuf, Golang, and Kubernetes, Tensorflow falls dramatically short.&lt;/p&gt;
&lt;p&gt;While declarative paradigms are great for UI programming, there are many reasons why it is a problematic choice for deep learning.&lt;/p&gt;
&lt;p&gt;Take the React Javascript library as an example, the standard choice today for interactive web applications. In React, the complexity of how data flows through the application makes sense to be hidden from the developer, since Javascript execution is generally orders of magnitudes faster than updates to the DOM. React developers don’t want to worry about the mechanics of how state is propagated, so long as the end user experience is “good enough”.&lt;/p&gt;
&lt;p&gt;On the other hand, in deep learning, a single layer can literally execute billions of FLOP’s! And deep learning researchers care very much about the mechanics of how computation is done and want fine control because they are constantly pushing the edge of what’s possible (e.g. dynamic networks) and want easy access to intermediate results.&lt;/p&gt;

&lt;p&gt;Let’s look at a simple example of training a model to multiply its input by 3.&lt;/p&gt;
&lt;p&gt;First, let’s look at the Tensorflow example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;weight&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GradientDescentOptimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_variables_initializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now let’s look at a Pytorch example that does the same thing:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.autograd&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loss_fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MSELoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size_average&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SGD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_numpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y_pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss_fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Although the Pytorch example is one less line of code, the operations are much more explicit, and the syntax follows the actual learning process much more closely inside the training loop:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Forward pass of input&lt;/li&gt;
&lt;li&gt;Generate loss&lt;/li&gt;
&lt;li&gt;Compute gradients&lt;/li&gt;
&lt;li&gt;Backprop&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;whereas in Tensorflow the core operation is a magic &lt;code class=&quot;highlighter-rouge&quot;&gt;sess.run&lt;/code&gt; call.&lt;/p&gt;
&lt;p&gt;Why would you want to write more lines of code to end up with something more difficult to understand and maintain? Pytorch’s interface is objectively much better than Tensorflow’s. It’s not even close.&lt;/p&gt;

&lt;p&gt;With Tensorflow, Google has created a framework that is simultaneously too low level to use comfortably for rapid prototyping, yet too high level to use comfortably in cutting edge research or in production environments that are resource constrained.&lt;/p&gt;
&lt;p&gt;Let’s be honest, when you have about half a dozen open source high-level libraries out there built on top of your already high-level library to make your library usable, you know something has gone terribly wrong:&lt;/p&gt;
&lt;p&gt;Note: I will concede that Tensorboard (Tensorflow’s monitoring tool) is a really good idea. If you want a beautiful monitoring solution for your machine learning project that includes advanced model comparison features, check out Losswise (&lt;a href=&quot;https://losswise.com&quot;&gt;https://losswise.com&lt;/a&gt;). I developed it to allow machine learning developers such as myself to decouple tracking their model’s performance from whatever machine learning library they use, and to implement many awesome features that I wanted which Tensorboard does not provide.&lt;/p&gt;
</description>
<pubDate>Sun, 08 Oct 2017 20:24:44 +0000</pubDate>
<dc:creator>nicodjimenez</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://nicodjimenez.github.io/2017/10/08/tensorflow.html</dc:identifier>
</item>
<item>
<title>EPA photos show what US looked like before pollution regulation</title>
<link>http://www.businessinsider.com/photos-america-before-epa-documerica-2017-10/#many-of-these-photos-simply-show-life-in-america-at-the-time-but-a-number-also-document-concerning-environmental-issues-1</link>
<guid isPermaLink="true" >http://www.businessinsider.com/photos-america-before-epa-documerica-2017-10/#many-of-these-photos-simply-show-life-in-america-at-the-time-but-a-number-also-document-concerning-environmental-issues-1</guid>
<description>&lt;p&gt;&lt;span class=&quot;KonaFilter image-container float_right no-rightrail&quot;&gt;&lt;span data-post-image=&quot;&quot; class=&quot;image on-image&quot;&gt;&lt;img src=&quot;http://static4.businessinsider.com/image/59d7ca343e7bfd2b058b4645-1200/documerica.jpg&quot; alt=&quot;Documerica&quot; width=&quot;1200&quot;/&gt;&lt;span class=&quot;caption-source&quot;&gt;&lt;span class=&quot;caption&quot;&gt;An oil slick surrounds the Statue of Liberty.&lt;/span&gt;&lt;span class=&quot;source&quot;&gt;&lt;span&gt;Chester Higgins/Documerica&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Trump administration plans to try to repeal the Clean Power Plan, the Obama administration's main initiative to fight climate change by lowering emissions, according &lt;a href=&quot;https://www.nytimes.com/2017/10/04/climate/trump-climate-change.html&quot;&gt;to news reports&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the same time, EPA Administrator Scott Pruitt has &lt;a href=&quot;https://www.nytimes.com/2017/10/03/us/politics/epa-scott-pruitt-calendar-industries-coal-oil-environmentalists.html&quot;&gt;reportedly spent much of his term&lt;/a&gt; meeting with executives and lobbyists from companies and industries regulated by the EPA. &lt;a href=&quot;https://www.nytimes.com/2017/08/11/us/politics/scott-pruitt-epa.html&quot;&gt;Many reports also suggest&lt;/a&gt; that Pruitt's primary aim is to eliminate environmental protections and dismantle much of the regulatory agency.&lt;/p&gt;
&lt;p&gt;Under Pruitt, the EPA has already &lt;a href=&quot;http://www.businessinsider.com/scott-pruitt-trumps-epa-chief-met-with-dow-chemical-exec-before-rolling-back-a-ban-on-pesticides-2017-6&quot;&gt;reversed a ban on a pesticide&lt;/a&gt; that can harm children's brains, and moved to &lt;a href=&quot;http://www.businessinsider.com/r-epa-and-army-corps-seek-to-rescind-clean-water-rule-2017-6&quot;&gt;rescind the Clean Water Rule&lt;/a&gt;, which clarified the Clean Water Act to prohibit industries from dumping pollutants into streams and wetlands. The agency has also &lt;a href=&quot;http://www.businessinsider.com/epa-challenging-climate-change-science-scott-pruitt-2017-6&quot;&gt;reportedly begun an initiative&lt;/a&gt; to challenge climate science, among other rollbacks. Some of these moves have been &lt;a href=&quot;https://www.nytimes.com/2017/10/06/climate/trump-administration-environmental-regulations.html&quot;&gt;legally challenged&lt;/a&gt;, but others are already in effect.&lt;/p&gt;
&lt;p&gt;If Pruitt succeeds in his goal to roll back a significant portion of the rules that protect air and water, we'd return to the state the US was in before these things were regulated.&lt;/p&gt;
&lt;p&gt;The EPA was founded in 1970, and soon thereafter &lt;a href=&quot;https://www.epa.gov/history/historical-photos-and-images&quot;&gt;began&lt;/a&gt; a photo project called &lt;a href=&quot;https://www.flickr.com/photos/usnationalarchives/sets/72157620856436476/with/3703575717/&quot;&gt;Documerica&lt;/a&gt; that captured more than 81,000 images showing what the US looked like from 1971 to 1977. More than 20,000 photos were archived and at least &lt;a href=&quot;https://catalog.archives.gov/id/542493&quot;&gt;15,000 have been digitized&lt;/a&gt; by the National Archives.&lt;/p&gt;
&lt;p&gt;Here's a selection of those photos, many of which show what the US looked like without the air and water protections that exist today.&lt;/p&gt;
&lt;div class=&quot;slideshow-content slide-intro-bottom&quot;&gt;
&lt;h4&gt;View As: &lt;a href=&quot;http://www.businessinsider.com/photos-america-before-epa-documerica-2017-10/#&quot; onclick=&quot;return false;&quot; class=&quot;sl-start border-right disabled&quot;&gt;One Page&lt;/a&gt; &lt;a href=&quot;http://www.businessinsider.com/photos-america-before-epa-documerica-2017-10?op=0#/#many-of-these-photos-simply-show-life-in-america-at-the-time-but-a-number-also-document-concerning-environmental-issues-1&quot; class=&quot;sl-start href-swap&quot;&gt;Slides&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;

</description>
<pubDate>Sun, 08 Oct 2017 20:20:11 +0000</pubDate>
<dc:creator>dankohn1</dc:creator>
<og:title>Vintage photos taken by the EPA reveal what America looked like before pollution was regulated</og:title>
<og:description>Trump's Environmental Protection Agency wants to get rid of the Clean Power Plan and other regulations — here's what America looked like before the EPA.</og:description>
<og:type>article</og:type>
<og:url>http://www.businessinsider.com/photos-america-before-epa-documerica-2017-10</og:url>
<og:image>http://static2.businessinsider.com/image/59d7ca02536204c5028b469a-1190-625/vintage-photos-taken-by-the-epa-reveal-what-america-looked-like-before-pollution-was-regulated.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.businessinsider.com/photos-america-before-epa-documerica-2017-10/</dc:identifier>
</item>
<item>
<title>On the devastating effects of a year in space</title>
<link>https://www.brisbanetimes.com.au/world/north-america/astronaut-scott-kelly-on-the-devastating-effects-of-a-year-in-space-20170922-gyn9iw.html</link>
<guid isPermaLink="true" >https://www.brisbanetimes.com.au/world/north-america/astronaut-scott-kelly-on-the-devastating-effects-of-a-year-in-space-20170922-gyn9iw.html</guid>
<description>&lt;p data-reactid=&quot;496&quot;&gt;&quot;That's the first time I've seen you stumble,&quot; Mark says. &quot;You're doing pretty good.&quot; A former astronaut, Mark knows from personal experience what it's like to come back to Earth. As I walk by Samantha, I put my hand on her shoulder and she smiles up at me.&lt;/p&gt;
&lt;p data-reactid=&quot;498&quot;&gt;I make it to my bedroom without incident and close the door behind me. Every part of my body hurts. All my joints and all of my muscles are protesting the crushing pressure of gravity. I'm also nauseated, though I haven't thrown up. I strip off my clothes and get into bed, relishing the feeling of sheets, the light pressure of the blanket over me, the fluff of the pillow under my head.&lt;/p&gt;
&lt;p data-reactid=&quot;500&quot;&gt;All these are things I've missed dearly for the past year. I can hear the happy chatter of my family behind the door, voices I haven't heard for a long time without the distortion of phones bouncing signals off satellites. I drift off to sleep to the comforting sound of their talking and laughing.&lt;/p&gt;
&lt;p data-reactid=&quot;502&quot;&gt;A crack of light wakes me: Is it morning? No, it's just Amiko coming to bed. I've only been asleep for a couple of hours but I feel delirious. It's a struggle to come to consciousness enough to move, to tell her how awful I feel. I'm seriously nauseated now, feverish, and my pain has gotten worse. This isn't like how I felt after my last mission. This is much, much worse.&lt;/p&gt;
&lt;div data-reactid=&quot;504&quot; readability=&quot;8&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; data-reactid=&quot;506&quot;&gt;&lt;img alt=&quot;Scott Kelly and partner Amiko in Red Square, Moscow.&quot; srcset=&quot;https://static.ffx.io/images/$zoom_1,$multiply_0.5878594249201278,$ratio_0.666667,$width_626,$x_14,$y_45/t_crop_custom/t_quality_best,f_auto/86a6d0c459e25b3e35e76f2809fc6b99941587f6&quot; data-reactid=&quot;510&quot;/&gt;&lt;/a&gt;
&lt;p data-reactid=&quot;512&quot;&gt;Scott Kelly and partner Amiko in Red Square, Moscow.&lt;/p&gt;
&lt;cite data-reactid=&quot;513&quot;&gt;Photo: Courtesy of Penguin Random House Australia&lt;/cite&gt;&lt;/div&gt;
&lt;p data-reactid=&quot;517&quot;&gt;&quot;Amiko,&quot; I finally manage to say. She is alarmed by the sound of my voice.&lt;/p&gt;
&lt;p data-reactid=&quot;519&quot;&gt;&quot;What is it?&quot; Her hand is on my arm, then on my forehead.&lt;/p&gt;
&lt;div data-reactid=&quot;521&quot; readability=&quot;8&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; data-reactid=&quot;523&quot;&gt;&lt;img alt=&quot;Twin future astronauts Mark (left) and Scott Kelly, in 1967. &quot; srcset=&quot;https://static.ffx.io/images/$zoom_1,$multiply_0.3388581952117864,$ratio_0.666667,$width_1086,$x_209,$y_0/t_crop_custom/t_quality_best,f_auto/311d5d6888cb9d48e34e63c40b14fd57371a90a5&quot; data-reactid=&quot;527&quot;/&gt;&lt;/a&gt;
&lt;p data-reactid=&quot;529&quot;&gt;Twin future astronauts Mark (left) and Scott Kelly, in 1967.&lt;/p&gt;
&lt;cite data-reactid=&quot;530&quot;&gt;Photo: Courtesy of Penguin Random House Australia&lt;/cite&gt;&lt;/div&gt;
&lt;p data-reactid=&quot;534&quot;&gt;Her skin feels chilled, but it's just that I'm so hot. &quot;I don't feel good,&quot; I say.&lt;/p&gt;
&lt;p data-reactid=&quot;536&quot;&gt;&lt;strong data-reactid=&quot;537&quot;&gt;Over the past year&lt;/strong&gt;, I've spent 340 days alongside Russian astronaut Mikhail &quot;Misha&quot; Kornienko on the International Space Station (ISS). As part of NASA's planned journey to Mars, we're members of a program designed to discover what effect such long-term time in space has on human beings. This was my fourth trip to space, and by the end of the mission I'd spent 520 days up there, more than any other NASA astronaut. Amiko has gone through the whole process with me as my main support once before, when I spent 159 days on the ISS in 2010-11. I had a reaction to coming back from space that time, but it was nothing like this.&lt;/p&gt;
&lt;div data-reactid=&quot;540&quot; readability=&quot;8&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; data-reactid=&quot;542&quot;&gt;&lt;img alt=&quot;The International Space Station, where Scott Kelly spent 340 consecutive days.&quot; srcset=&quot;https://static.ffx.io/images/$width_768,$height_432/t_crop_fill/t_quality_best,f_auto/302972e4a206c58b90c82dc5f093cd668030d4a7&quot; data-reactid=&quot;546&quot;/&gt;&lt;/a&gt;
&lt;p data-reactid=&quot;548&quot;&gt;The International Space Station, where Scott Kelly spent 340 consecutive days.&lt;/p&gt;
&lt;cite data-reactid=&quot;549&quot;&gt;Photo: Courtesy of Penguin Random House Australia&lt;/cite&gt;&lt;/div&gt;
&lt;p data-reactid=&quot;553&quot;&gt;I struggle to get up. Find the edge of the bed. Feet down. Sit up. Stand up. At every stage I feel like I'm fighting through quicksand. When I'm finally vertical, the pain in my legs is awful, and on top of that pain I feel a sensation that's even more alarming: it feels as though all the blood in my body is rushing to my legs, like the sensation of the blood rushing to your head when you do a handstand, but in reverse.&lt;/p&gt;
&lt;p data-reactid=&quot;555&quot;&gt;I can feel the tissue in my legs swelling. I shuffle my way to the bath room, moving my weight from one foot to the other with deliberate effort. Left. Right. Left. Right. I make it to the bathroom, flip on the light, and look down at my legs. They are swollen and alien stumps, not legs at all. &quot;Oh shit,&quot; I say. &quot;Amiko, come look at this.&quot; She kneels down and squeezes one ankle, and it squishes like a water balloon. She looks up at me with worried eyes. &quot;I can't even feel your ankle bones,&quot; she says.&lt;/p&gt;
&lt;p data-reactid=&quot;557&quot;&gt;&quot;My skin is burning, too,&quot; I tell her. Amiko frantically examines me. I have a strange rash all over my back, the backs of my legs, the back of my head and neck – everywhere I was in contact with the bed. I can feel her cool hands moving over my inflamed skin. &quot;It looks like an allergic rash,&quot; she says. &quot;Like hives.&quot;&lt;/p&gt;
&lt;p data-reactid=&quot;559&quot;&gt;I use the bathroom and shuffle back to bed, wondering what I should do. Normally if I woke up feeling like this, I would go to the emergency room. But no one at the hospital will have seen symptoms of having been in space for a year. I crawl back into bed, trying to find a way to lie down without touching my rash.&lt;/p&gt;
&lt;p data-reactid=&quot;561&quot;&gt;I can hear Amiko rummaging in the medicine cabinet. She returns with two ibuprofen and a glass of water. As she settles down, I can tell from her every movement, every breath, that she is worried about me. We both knew the risks of the mission I signed on for. After six years together, I can understand her perfectly, even in the wordless dark.&lt;/p&gt;
&lt;p data-reactid=&quot;563&quot;&gt;As I try to will myself to sleep, I wonder whether my friend Misha, by now back in Moscow, is also suffering from swollen legs and painful rashes. I suspect so. This is why we volunteered for this mission, after all: to discover more about how the human body is affected by long-term space flight. Scientists will study the data on Misha and my 53-year-old self for the rest of our lives and beyond. Our space agencies won't be able to push out farther into space, to a destination like Mars, until we can learn more about how to strengthen the weakest links in the chain that make space flight possible: the human body and mind.&lt;/p&gt;
&lt;p data-reactid=&quot;565&quot;&gt;People often ask me why I volunteered for this mission, knowing the risks: the risk of launch, the risk inherent in space walks, the risk of returning to Earth, the risks I would be exposed to every moment I lived in a metal container orbiting the Earth at 28,100 kilometres an hour. I have a few answers I give to this question, but none of them feels fully satisfying to me. None of them quite answers it.&lt;/p&gt;
&lt;div data-reactid=&quot;567&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; data-reactid=&quot;569&quot;&gt;&lt;img alt=&quot;Scott Kelly (at left) undertaking a dangerous space walk outside the International Space Station.&quot; srcset=&quot;https://static.ffx.io/images/$width_768,$height_432/t_crop_fill/t_quality_best,f_auto/574254561d25e642679f244026b8ede85aa2c487&quot; data-reactid=&quot;573&quot;/&gt;&lt;/a&gt;
&lt;p data-reactid=&quot;575&quot;&gt;Scott Kelly (at left) undertaking a dangerous space walk outside the International Space Station.&lt;/p&gt;
&lt;cite data-reactid=&quot;576&quot;&gt;Photo: Courtesy of Penguin Random House Australia&lt;/cite&gt;&lt;/div&gt;
&lt;p data-reactid=&quot;580&quot;&gt;&lt;strong data-reactid=&quot;581&quot;&gt;A normal mission to the International Space Station&lt;/strong&gt; lasts five to six months, so scientists have a good deal of data about what happens to the human body in space for that length of time. But very little is known about what occurs after month six. The symptoms may get precipitously worse in the ninth month, for instance, or they may level off. We don't know, and there is only one way to find out.&lt;/p&gt;
&lt;p data-reactid=&quot;584&quot;&gt;During our mission, Misha and I collected various types of data for studies on our selves, which took a significant amount of our time. Because Mark and I were identical twins, I also took part in an extensive study comparing the two of us throughout the year, down to the genetic level. The ISS was a world-class orbiting laboratory, and in addition to the human studies of which I was one of the main subjects, I also spent a lot of my time during the year working on other experiments, like fluid physics, botany, combustion and Earth observation.&lt;/p&gt;
&lt;p data-reactid=&quot;586&quot;&gt;When I talked about the ISS to audiences, I always shared with them the importance of the science being done there. But to me, it was just as important that the station was serving as a foothold for our species in space. From here, we could learn more about how to push out further into the cosmos. The costs were high, as were the risks.&lt;/p&gt;
&lt;p data-reactid=&quot;588&quot;&gt;On my previous flight to the space station, a mission of 159 days, I lost bone mass, my muscles atrophied, and my blood redistributed itself in my body, which strained and shrank the walls of my heart. More troubling, I experienced problems with my vision, as many other astronauts had. I had been exposed to more than 30 times the radiation of a person on Earth, equivalent to about 10 chest X-rays every day. This exposure would increase my risk of a fatal cancer for the rest of my life.&lt;/p&gt;
&lt;p data-reactid=&quot;590&quot;&gt;None of this compared, though, to the most troubling risk: that something bad could happen to someone I love while I was in space with no way for me to come home.&lt;/p&gt;
&lt;p data-reactid=&quot;592&quot;&gt;&lt;strong data-reactid=&quot;593&quot;&gt;I had been on the station for a week&lt;/strong&gt;, and was getting better at knowing where I was when I first woke up. If I had a headache, I knew it was because I had drifted too far from the vent blowing clean air at my face. I was often still disoriented about how my body was positioned: I would wake up convinced that I was upside down, because in the dark and without gravity, my inner ear took a random guess as to how my body was positioned in the small space. When I turned on a light, I had a sort of visual illusion that the room was rotating rapidly as it reoriented itself around me, though I knew it was actually my brain readjusting in response to new sensory input.&lt;/p&gt;
&lt;p data-reactid=&quot;596&quot;&gt;The light in my crew quarters took a minute to warm up to full brightness. The space was just barely big enough for me and my sleeping bag, two laptops, some clothes, toiletries, photos of Amiko and my daughters, a few paperback books. I looked at my schedule for today. I clicked through new emails, stretched and yawned, then fished around in my toiletries bag, attached to the wall down by my left knee, for my toothpaste and toothbrush. I brushed, still in my sleeping bag, then swallowed the toothpaste and chased it with a sip of water out of a bag with a straw. There wasn't really a good way to spit in space.&lt;/p&gt;
&lt;p data-reactid=&quot;598&quot;&gt;&lt;strong data-reactid=&quot;599&quot;&gt;I didn't get to spend time outside the station&lt;/strong&gt; until my first of two planned space walks, which was almost seven months in. This was one of the things that some people found difficult to imagine about living on the space station, the fact that I couldn't step outside when I felt like it. Putting on a spacesuit and leaving the station for a space walk was an hours-long process that required the full attention of at least three people on station and dozens more on the ground.&lt;/p&gt;
&lt;p data-reactid=&quot;602&quot;&gt;Space walks were the most dangerous thing we did in orbit. Even if the station was on fire, even if it was filling up with poison gas, even if a meteoroid had crashed through a module and outer space was rushing in, the only way to escape the station was in a Soyuz capsule, which also needed preparation and planning to depart safely. We practised dealing with emergency scenarios regularly, and in many of these drills we raced to prepare the Soyuz as quickly as we could. No one had ever had to use the Soyuz as a lifeboat, and no one hoped to.&lt;/p&gt;
&lt;p data-reactid=&quot;604&quot;&gt;&lt;strong data-reactid=&quot;605&quot;&gt;I opened a food container&lt;/strong&gt; attached to the wall and fished out a pouch of dehydrated coffee with cream and sugar. I floated over to the hot-water dispenser in the ceiling of the lab, which worked by insert ing a needle into a nozzle on the bag. When the bag was full, I replaced the needle with a drinking straw – this way the liquid didn't escape into the module. It had been oddly unsatisfying at first to drink coffee from a plastic bag sipped through a straw, but now I wasn't bothered by it.&lt;/p&gt;
&lt;p data-reactid=&quot;608&quot;&gt;I flipped through the breakfast options, looking for a packet of the granola I liked. Unfortunately, everyone else seemed to like it, too. I chose some dehydrated eggs instead and reconstituted them with the same hot water dispenser, then warmed up some irradiated sausage links in the food warmer box, which looked a lot like a metal briefcase. I cut the bag open, then, since we had no sink, cleaned the scissors by licking them (we each had our own scissors). I spooned the eggs out of the bag onto a tortilla – conveniently, surface tension held them in place – added the sausage and some hot sauce, rolled it up, and ate the burrito while catch ing up with the morning's news on &lt;em data-reactid=&quot;610&quot;&gt;CNN&lt;/em&gt;.&lt;/p&gt;
&lt;p data-reactid=&quot;613&quot;&gt;All the while I was holding myself in place with my right big toe tucked ever so slightly under a handrail on the floor. Handrails were placed on the walls, floors and ceilings of every module and at the hatches where modules connected, allowing us to propel ourselves through the modules or to stay in place rather than drifting away. There were a lot of things about living in weightlessness that were fun, but eating was not one of them. I missed being able to sit in a chair while eating a meal, relaxing and pausing to connect with other people.&lt;/p&gt;
&lt;div data-reactid=&quot;615&quot; readability=&quot;10&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; data-reactid=&quot;617&quot;&gt;&lt;img alt=&quot;&amp;quot;I missed being able to sit in a chair while eating a meal, relaxing and pausing to connect with other people,&amp;quot; writes Kelly of life on the ISS. &quot; srcset=&quot;https://static.ffx.io/images/$width_768,$height_432/t_crop_fill/t_quality_best,f_auto/20260c0bec151874ede9935989e3e48e93fe7229&quot; data-reactid=&quot;621&quot;/&gt;&lt;/a&gt;
&lt;p data-reactid=&quot;623&quot;&gt;&quot;I missed being able to sit in a chair while eating a meal, relaxing and pausing to connect with other people,&quot; writes Kelly of life on the ISS.&lt;/p&gt;
&lt;cite data-reactid=&quot;624&quot;&gt;Photo: Marco Grob&lt;/cite&gt;&lt;/div&gt;
&lt;p data-reactid=&quot;628&quot;&gt;&lt;strong data-reactid=&quot;629&quot;&gt;More than 400 experiments &lt;/strong&gt;took place on ISS during this expedition. NASA scientists talked about the research falling into two major categories. The first had to do with studies that might benefit life on Earth. These included research on the properties of chemicals that could be used in new drugs, combustion studies that were unlocking new ways to get more efficiency out of the fuel we burnt, and the development of new materials. The second large category had to do with solving problems for future space exploration: testing new life-support equipment, solving technical problems of spaceflight and studying new ways of handling the demands of the human body in space.&lt;/p&gt;
&lt;p data-reactid=&quot;632&quot;&gt;Science took up about a third of my time, human studies about three-quarters of that. I had to take blood samples from myself and my crew mates for analysis back on Earth, and I kept a log of everything, from what I ate to my moods. I tested my reaction skills at various points throughout the day. I took ultrasounds of blood vessels, my heart, my eyes and my muscles. I also took part in an experiment called Fluid Shifts, using a device that sucked the blood down to the lower half of my body, where gravity normally kept it. This tested a leading theory about why space flight caused damage to some astronauts' vision.&lt;/p&gt;
&lt;p data-reactid=&quot;634&quot;&gt;In fact, there was much crossover between these categories of research. If we could learn how to counteract the devastating impact of bone loss in microgravity, the solutions could well be applied to osteoporosis and other bone diseases. If we could learn how to keep our hearts healthy in space, that knowledge could be useful on Earth. &lt;/p&gt;
&lt;p data-reactid=&quot;636&quot;&gt;The effects of living in space looked a lot like the effects of ageing, which affected us all. The lettuce we grew was a study for future space travel – astronauts on their way to Mars will have no fresh food but what they can grow – but it also taught us more about growing food efficiently on Earth. The ISS's closed water system, where we processed our urine into clean water, will be crucial for getting to Mars, but it also has promising implications for treating water on Earth – especially in places where clean water was scarce.&lt;/p&gt;
&lt;p data-reactid=&quot;638&quot;&gt;&lt;strong data-reactid=&quot;639&quot;&gt;I tell my flight surgeon, Steve,&lt;/strong&gt; that I feel well enough to get right to work immediately upon returning from space, and I do, but within a few days I feel much worse. This is what it means to have allowed my body to be used for science. I will be a test subject for the rest of my life. A few months after arriving back on Earth, though, I feel distinctly better. I've been travelling the country and the world talking about my experiences in space. It's gratifying to see how curious people are about my mission, how much children instinctively feel the excitement and wonder of space flight, and how many people think, as I do, that Mars is the next step.&lt;/p&gt;
&lt;p data-reactid=&quot;642&quot;&gt;I also know that if we want to go to Mars, it will be very, very difficult, it will cost a great deal of money and it may likely cost human lives. But I know now that if we decide to do it, we can. &lt;/p&gt;
&lt;p data-reactid=&quot;644&quot;&gt;&lt;strong data-reactid=&quot;645&quot;&gt;Edited extract from &lt;em data-reactid=&quot;647&quot;&gt;Endurance: A Year in Space, A Lifetime of Discovery&lt;/em&gt; by Scott Kelly (Doubleday, $35), published on October 19.&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 08 Oct 2017 19:51:00 +0000</pubDate>
<dc:creator>hunglee2</dc:creator>
<og:description>NASA astronaut Scott Kelly spent a year in space. His recollections of this unprecedented test of human endurance, and the physical toll it took, raise questions about the likelihood of future travel to Mars.</og:description>
<og:image>https://static.ffx.io/images/$zoom_1,$multiply_0.4071246819338422,$ratio_1.777778,$width_1965,$x_8,$y_223/t_crop_custom/t_quality_best,f_auto/9d27bc3be3e32ddf451aea63efb3e307a0a4a02c</og:image>
<og:title>Astronaut Scott Kelly on the devastating effects of a year in space</og:title>
<og:url>https://www.brisbanetimes.com.au/world/north-america/astronaut-scott-kelly-on-the-devastating-effects-of-a-year-in-space-20170922-gyn9iw.html</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.brisbanetimes.com.au/world/north-america/astronaut-scott-kelly-on-the-devastating-effects-of-a-year-in-space-20170922-gyn9iw.html</dc:identifier>
</item>
<item>
<title>Show HN: A simple, fast and user-friendly alternative to find, written in Rust</title>
<link>https://github.com/sharkdp/fd</link>
<guid isPermaLink="true" >https://github.com/sharkdp/fd</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/sharkdp/fd&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/bdc43a34688aca2a7a722307c63ba5fbe5564862/68747470733a2f2f7472617669732d63692e6f72672f736861726b64702f66642e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/sharkdp/fd.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/sharkdp/fd&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/f72b18672ae7f4aeffb5e1259468459b9210802d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3231633470356677676763356779336a3f7376673d74727565&quot; alt=&quot;Build status&quot; data-canonical-src=&quot;https://ci.appveyor.com/api/projects/status/21c4p5fwggc5gy3j?svg=true&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/fd-find&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/67aa90f091b4dabbe9a05f94e0aa0cd5bbf18336/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f66642d66696e642e737667&quot; alt=&quot;Version info&quot; data-canonical-src=&quot;https://img.shields.io/crates/v/fd-find.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;fd&lt;/em&gt; is a simple, fast and user-friendly alternative to &lt;a href=&quot;https://www.gnu.org/software/findutils/&quot;&gt;&lt;em&gt;find&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While it does not seek to mirror all of &lt;em&gt;find&lt;/em&gt;'s powerful functionality, it provides sensible (opinionated) defaults for &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;80%&lt;/a&gt; of the use cases.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Convenient syntax: &lt;code&gt;fd PATTERN&lt;/code&gt; instead of &lt;code&gt;find -iname '*PATTERN*'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Colorized terminal output (similar to &lt;em&gt;ls&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;It's &lt;em&gt;fast&lt;/em&gt; (see &lt;a href=&quot;https://github.com/sharkdp/fd#benchmark&quot;&gt;benchmarks&lt;/a&gt; below).&lt;/li&gt;
&lt;li&gt;Smart case: the search is case-insensitive by default. It switches to case-sensitive if the pattern contains an uppercase character&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'smartcase'&quot;&gt;*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ignores hidden directories and files, by default.&lt;/li&gt;
&lt;li&gt;Ignores patterns from your &lt;code&gt;.gitignore&lt;/code&gt;, by default.&lt;/li&gt;
&lt;li&gt;Regular expressions.&lt;/li&gt;
&lt;li&gt;Unicode-awareness.&lt;/li&gt;
&lt;li&gt;The command name is &lt;em&gt;50%&lt;/em&gt; shorter&lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;*&lt;/a&gt; than &lt;code&gt;find&lt;/code&gt; :-).&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/7f1a80fe54ca14295869160b6e81994ba7947c69/687474703a2f2f692e696d6775722e636f6d2f6b544d465356552e676966&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/7f1a80fe54ca14295869160b6e81994ba7947c69/687474703a2f2f692e696d6775722e636f6d2f6b544d465356552e676966&quot; alt=&quot;Demo&quot; data-canonical-src=&quot;http://i.imgur.com/kTMFSVU.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Benchmark&lt;/h2&gt;
&lt;p&gt;Let's search my home folder for files that end in &lt;code&gt;[0-9].jpg&lt;/code&gt;. It contains ~150.000 subdirectories and about a million files. For averaging and statistical analysis, I'm using &lt;a href=&quot;https://github.com/Gabriel439/bench&quot;&gt;bench&lt;/a&gt;. All benchmarks are performed for a &quot;warm cache&quot;. Results for a cold cache are similar.&lt;/p&gt;
&lt;p&gt;Let's start with &lt;code&gt;find&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;find ~ -iregex '.*[0-9]\.jpg$'

time                 6.265 s    (6.127 s .. NaN s)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 6.162 s    (6.140 s .. 6.181 s)
std dev              31.73 ms   (0.0 s .. 33.48 ms)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;find&lt;/code&gt; is much faster if it does not need to perform a regular-expression search:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;find ~ -iname '*[0-9].jpg'

time                 2.866 s    (2.754 s .. 2.964 s)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 2.860 s    (2.834 s .. 2.875 s)
std dev              23.11 ms   (0.0 s .. 25.09 ms)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now let's try the same for &lt;code&gt;fd&lt;/code&gt;. Note that &lt;code&gt;fd&lt;/code&gt; &lt;em&gt;always&lt;/em&gt; performs a regular expression search. The options &lt;code&gt;--hidden&lt;/code&gt; and &lt;code&gt;--no-ignore&lt;/code&gt; are needed for a fair comparison, otherwise &lt;code&gt;fd&lt;/code&gt; does not have to traverse hidden folders and ignored paths (see below):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;fd --hidden --no-ignore '.*[0-9]\.jpg$' ~

time                 892.6 ms   (839.0 ms .. 915.4 ms)
                     0.999 R²   (0.997 R² .. 1.000 R²)
mean                 871.2 ms   (857.9 ms .. 881.3 ms)
std dev              15.50 ms   (0.0 s .. 17.49 ms)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For this particular example, &lt;code&gt;fd&lt;/code&gt; is approximately seven times faster than &lt;code&gt;find -iregex&lt;/code&gt; and about three times faster than &lt;code&gt;find -iname&lt;/code&gt;. By the way, both tools found the exact same 14030 files 😄.&lt;/p&gt;
&lt;p&gt;Finally, let's run &lt;code&gt;fd&lt;/code&gt; without &lt;code&gt;--hidden&lt;/code&gt; and &lt;code&gt;--no-ignore&lt;/code&gt; (this can lead to different search results, of course):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;fd '[0-9]\.jpg$' ~

time                 159.5 ms   (155.8 ms .. 165.3 ms)
                     0.999 R²   (0.996 R² .. 1.000 R²)
mean                 158.7 ms   (156.5 ms .. 161.6 ms)
std dev              3.263 ms   (2.401 ms .. 4.298 ms)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is &lt;em&gt;one particular&lt;/em&gt; benchmark on &lt;em&gt;one particular&lt;/em&gt; machine. While I have performed quite a lot of different tests (and found consistent results), things might be different for you! I encourage everyone to try it out on their own.&lt;/p&gt;
&lt;p&gt;Concerning &lt;em&gt;fd&lt;/em&gt;'s speed, the main credit goes to the &lt;code&gt;regex&lt;/code&gt; and &lt;code&gt;ignore&lt;/code&gt; crates that are also used in &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;ripgrep&lt;/a&gt; (check it out!).&lt;/p&gt;
&lt;h2&gt;Colorized output&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fd&lt;/code&gt; can colorize files by extension, just like &lt;code&gt;ls&lt;/code&gt;. In order for this to work, the environment variable &lt;a href=&quot;https://linux.die.net/man/5/dir_colors&quot;&gt;&lt;code&gt;LS_COLORS&lt;/code&gt;&lt;/a&gt; has to be set. Typically, the value of this variable is set by the &lt;code&gt;dircolors&lt;/code&gt; command which provides a convenient configuration format to define colors for different file formats. On most distributions, &lt;code&gt;LS_COLORS&lt;/code&gt; should be set already. If you are looking for alternative, more complete (and more colorful) variants, see &lt;a href=&quot;https://github.com/seebi/dircolors-solarized&quot;&gt;here&lt;/a&gt; or &lt;a href=&quot;https://github.com/trapd00r/LS_COLORS&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;With Rust's package manager &lt;a href=&quot;https://github.com/rust-lang/cargo&quot;&gt;cargo&lt;/a&gt;, you can install &lt;em&gt;fd&lt;/em&gt; via:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cargo install fd-find
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that rust version &lt;em&gt;1.16.0&lt;/em&gt; or later is required. The release page of this repository also includes precompiled binaries for Linux.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;macOS&lt;/strong&gt;, you can use &lt;a href=&quot;http://braumeister.org/formula/fd&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;brew install fd
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On &lt;strong&gt;Arch Linux&lt;/strong&gt;, you can install the AUR package &lt;a href=&quot;https://aur.archlinux.org/packages/fd-rs/&quot;&gt;fd-rs&lt;/a&gt; via yaourt, or manually:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone https://aur.archlinux.org/fd-rs.git
cd fd-rs
makepkg -si
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On &lt;strong&gt;Windows&lt;/strong&gt;, you can download the pre-built binaries from the &lt;a href=&quot;https://github.com/sharkdp/fd/releases&quot;&gt;Release page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
git clone https://github.com/sharkdp/fd

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Build&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; fd
cargo build

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Run unit tests and integration tests&lt;/span&gt;
cargo &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Install&lt;/span&gt;
cargo install
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Command-line options&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;USAGE:
    fd [FLAGS/OPTIONS] [&amp;lt;pattern&amp;gt;] [&amp;lt;path&amp;gt;]

FLAGS:
    -H, --hidden            Search hidden files and directories
    -I, --no-ignore         Do not respect .(git)ignore files
    -s, --case-sensitive    Case-sensitive search (default: smart case)
    -a, --absolute-path     Show absolute instead of relative paths
    -L, --follow            Follow symbolic links
    -p, --full-path         Search full path (default: file-/dirname only)
    -0, --print0            Separate results by the null character
    -h, --help              Prints help information
    -V, --version           Prints version information

OPTIONS:
    -d, --max-depth &amp;lt;depth&amp;gt;    Set maximum search depth (default: none)
    -t, --type &amp;lt;filetype&amp;gt;      Filter by type: f(ile), d(irectory), s(ymlink)
    -e, --extension &amp;lt;ext&amp;gt;      Filter by file extension
    -c, --color &amp;lt;when&amp;gt;         When to use color in the output:
                               never, auto, always (default: auto)
    -j, --threads &amp;lt;num&amp;gt;        Set number of threads to use for searching:
                               (default: number of available CPU cores)

ARGS:
    &amp;lt;pattern&amp;gt;    the search pattern, a regular expression (optional)
    &amp;lt;path&amp;gt;       the root directory for the filesystem search (optional)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Tutorial&lt;/h2&gt;
&lt;p&gt;First, to see all command line options, you can get &lt;code&gt;fd&lt;/code&gt;'s help text by running:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;fd --help
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For the sake of this tutorial, let's assume we have a directory with the following file structure:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;fd_examples
├── .gitignore
├── desub_dir
│   └── old_test.txt
├── not_file
├── sub_dir
│   ├── .here_be_tests
│   ├── more_dir
│   │   ├── .not_here
│   │   ├── even_further_down
│   │   │   ├── not_me.sh
│   │   │   ├── test_seven
│   │   │   └── testing_eight
│   │   ├── not_file -&amp;gt; /Users/fd_user/Desktop/fd_examples/not_file
│   │   └── test_file_six
│   ├── new_test.txt
│   ├── test_file_five
│   ├── test_file_four
│   └── test_file_three
├── test_file_one
├── test_file_two
├── test_one
└── this_is_a_test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If &lt;code&gt;fd&lt;/code&gt; is called with a single argument (the search pattern), it will perform a recursive search through the current directory. To search for all files that include the string &quot;test&quot;, we can simply run:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd test
sub_dir/more_dir/even_further_down/test_seven
sub_dir/more_dir/even_further_down/testing_eight
sub_dir/more_dir/test_file_six
sub_dir/test_file_five
sub_dir/test_file_three
sub_dir/test_four
test_file_one
test_file_two
test_one
this_is_a_test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The search pattern is treated as a regular expression. To show only entries that start with &quot;test&quot;, we can call:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd '^test'
sub_dir/more_dir/even_further_down/test_seven
sub_dir/more_dir/even_further_down/testing_eight
sub_dir/more_dir/test_file_six
sub_dir/test_file_five
sub_dir/test_file_three
sub_dir/test_four
test_file_one
test_file_two
test_one
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;fd&lt;/code&gt; does not show hidden files (&lt;code&gt;.here_be_tests&lt;/code&gt;) by default. To change this, we can use the &lt;code&gt;-H&lt;/code&gt; (or &lt;code&gt;--hidden&lt;/code&gt;) option:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd -H test
sub_dir/.here_be_tests
sub_dir/more_dir/even_further_down/test_seven
sub_dir/more_dir/even_further_down/testing_eight
sub_dir/more_dir/test_file_six
sub_dir/test_file_five
sub_dir/test_file_four
sub_dir/test_file_three
test_file_one
test_file_two
test_one
this_is_a_test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we are interested in showing the results from a particular directory, we can specify the root of the search as a second argument:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd test sub_dir
sub_dir/more_dir/even_further_down/test_seven
sub_dir/more_dir/even_further_down/testing_eight
sub_dir/more_dir/test_file_six
sub_dir/test_file_five
sub_dir/test_file_three
sub_dir/test_four
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we don't give &lt;em&gt;any&lt;/em&gt; arguments to &lt;code&gt;fd&lt;/code&gt;, it simply shows all entries in the current directory, recursively (like &lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd
not_file
sub_dir
sub_dir/more_dir
sub_dir/more_dir/even_further_down
sub_dir/more_dir/even_further_down/test_seven
sub_dir/more_dir/even_further_down/testing_eight
sub_dir/more_dir/not_file
sub_dir/more_dir/test_file_six
sub_dir/test_file_five
sub_dir/test_file_three
sub_dir/test_four
test_file_one
test_file_two
test_one
this_is_a_test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we work in a directory that is a Git repository (or includes several Git repositories), &lt;code&gt;fd&lt;/code&gt; does not search folders (and does not show files) that match the &lt;code&gt;.gitignore&lt;/code&gt; pattern. For example, imagine we had a &lt;code&gt;.gitignore&lt;/code&gt; file with the following content:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;*.sh
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this case, &lt;code&gt;fd&lt;/code&gt; would not show any files that end in &lt;code&gt;.sh&lt;/code&gt;. To disable this behavior, we can use the &lt;code&gt;-I&lt;/code&gt; (or &lt;code&gt;--ignore&lt;/code&gt;) option:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd -I me
sub_dir/more_dir/even_further_down/not_me.sh
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To really search &lt;em&gt;all&lt;/em&gt; files and directories, we can combine the hidden and ignore features to show everything (&lt;code&gt;-HI&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;fd -HI 'not|here'
not_file
sub_dir/.here_be_tests
sub_dir/more_dir/.not_here
sub_dir/more_dir/even_further_down/not_me.sh
sub_dir/more_dir/not_file
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Searching for a file extension is easy too, using the &lt;code&gt;-e&lt;/code&gt; (or &lt;code&gt;--extension&lt;/code&gt;) switch for file extensions:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd -e sh
sub_dir/more_dir/even_further_down/not_me.sh
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Next, we can even use a pattern in combination with &lt;code&gt;-e&lt;/code&gt; to search for a regex pattern over the files that end in the specified extension.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd -e txt test
fd_examples/desub_dir/old_test.txt
fd_examples/sub_dir/new_test.txt
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we want to run a command for each of the search results, we can use the &lt;code&gt;-0&lt;/code&gt; option to pipe the output to &lt;code&gt;xargs&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; fd -0 'test' | xargs -0 wc -l
&lt;/code&gt;
&lt;/pre&gt;&lt;/article&gt;</description>
<pubDate>Sun, 08 Oct 2017 18:49:10 +0000</pubDate>
<dc:creator>sharkdp</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/4209276?v=4&amp;s=400</og:image>
<og:type>object</og:type>
<og:title>sharkdp/fd</og:title>
<og:url>https://github.com/sharkdp/fd</og:url>
<og:description>fd - A simple, fast and user-friendly alternative to find.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/sharkdp/fd</dc:identifier>
</item>
<item>
<title>Designing Data-Intensive Applications</title>
<link>https://dataintensive.net/</link>
<guid isPermaLink="true" >https://dataintensive.net/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;author&quot; content=&quot;&quot;/&gt;&lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot;/&gt;&lt;title&gt;Designing Data-Intensive Applications (DDIA) — an O’Reilly book by Martin Kleppmann (The Wild Boar Book)&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;23.908187411264&quot;&gt;
&lt;nav class=&quot;navbar navbar-default navbar-static-top&quot; role=&quot;navigation&quot;&gt;
&lt;/nav&gt;&lt;div class=&quot;container&quot; readability=&quot;6.4587024180034&quot;&gt;
&lt;div class=&quot;row intro&quot; readability=&quot;13.60396039604&quot;&gt;
&lt;div class=&quot;col-sm-5&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/book-cover.png&quot; class=&quot;img-responsive&quot; alt=&quot;Book cover of Designing Data-Intensive Applications&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;col-sm-7&quot; readability=&quot;22.349363507779&quot;&gt;

&lt;p class=&quot;lead&quot;&gt;NoSQL… Big Data… Scalability… CAP Theorem… Eventual Consistency… Sharding…&lt;/p&gt;
&lt;p class=&quot;lead&quot;&gt;Nice buzzwords, but how does the stuff actually &lt;em&gt;work&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;As software engineers, we need to build applications that are reliable, scalable and maintainable in the long run. We need to understand the range of available tools and their trade-offs. For that, we have to &lt;mark&gt;dig deeper than buzzwords&lt;/mark&gt;.&lt;/p&gt;
&lt;p&gt;This book will help you navigate the diverse and fast-changing landscape of technologies for storing and processing data. We &lt;mark&gt;compare a broad variety of tools and approaches&lt;/mark&gt;, so that you can see the strengths and weaknesses of each, and decide what’s best for your application.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;btn btn-primary match-twitter-button&quot; href=&quot;https://dataintensive.net/buy.html&quot; role=&quot;button&quot;&gt;Get the book »&lt;/a&gt; &lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;intensivedata&quot; data-size=&quot;large&quot; data-related=&quot;intensivedata&quot; data-count=&quot;none&quot;&gt;Tweet&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;How this book is different&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;row principles&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;col-sm-4&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;center-icon&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/directions.png&quot; class=&quot;img-responsive&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Compare several designs&lt;/h3&gt;
&lt;p&gt;This book compares the &lt;mark&gt;fundamental ideas&lt;/mark&gt; behind a broad variety of systems. It doesn’t go into the details of how to configure and use one particular tool. But it does explain the trade-offs and fundamental limitations that systems face, so that you can &lt;mark&gt;make informed decisions&lt;/mark&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;col-sm-4&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;center-icon&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/books.png&quot; class=&quot;img-responsive&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Both theory and practice&lt;/h3&gt;
&lt;p&gt;We discuss many good ideas from academic research, but we always tie them back to reality. Just because it looks good on a whiteboard doesn’t mean it actually works in practice. We care about ideas that have been &lt;mark&gt;proven under intensive workloads&lt;/mark&gt;, at big companies and at startups.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;col-sm-4&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;center-icon&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/gears.png&quot; class=&quot;img-responsive&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Deeper understanding&lt;/h3&gt;
&lt;p&gt;We go under the hood of the systems you already use, teasing apart how they work internally. The aim is to help you &lt;mark&gt;think about data systems&lt;/mark&gt; in new ways — not just how they work, but &lt;mark&gt;why they were designed that way&lt;/mark&gt;. Your own software will be better as a result.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;testimonials&quot;&gt;
&lt;h2&gt;What people are saying&lt;/h2&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-xs-2&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/jaykreps.jpg&quot; class=&quot;img-responsive img-rounded&quot; alt=&quot;Jay Kreps&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;col-xs-10&quot; readability=&quot;6.4748201438849&quot;&gt;
&lt;blockquote readability=&quot;6.9064748201439&quot;&gt;
&lt;p&gt;This book is awesome. It bridges the huge gap between distributed systems theory and practical engineering. I wish it had existed a decade ago, so I could have read it then and saved myself all the mistakes along the way.&lt;/p&gt;
&lt;footer&gt;&lt;a href=&quot;https://twitter.com/jaykreps&quot;&gt;Jay Kreps&lt;/a&gt;, creator of &lt;a href=&quot;http://kafka.apache.org/&quot;&gt;Apache Kafka&lt;/a&gt; and &lt;a href=&quot;http://www.project-voldemort.com/&quot;&gt;Project Voldemort&lt;/a&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-xs-2&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/kevinscott.jpg&quot; class=&quot;img-responsive img-rounded&quot; alt=&quot;Kevin Scott&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;col-xs-10&quot; readability=&quot;7.1495327102804&quot;&gt;
&lt;blockquote readability=&quot;7.6261682242991&quot;&gt;
&lt;p&gt;This book should be required reading for software engineers. The explosion of data and its increased importance to the applications we build has created a new set of complex challenges. Designing Data-Intensive Applications is a rare resource that bridges theory and practice to help developers make smart decisions as they design and implement data infrastructure and systems.&lt;/p&gt;
&lt;footer&gt;&lt;a href=&quot;https://www.linkedin.com/in/jkevinscott&quot;&gt;Kevin Scott&lt;/a&gt;, Chief Technology Officer at &lt;a href=&quot;https://www.microsoft.com/&quot;&gt;Microsoft&lt;/a&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-xs-2&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/veenabasavaraj.jpg&quot; class=&quot;img-responsive img-rounded&quot; alt=&quot;Veena Basavaraj&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;col-xs-10&quot; readability=&quot;7.14463840399&quot;&gt;
&lt;blockquote readability=&quot;7.6209476309227&quot;&gt;
&lt;p&gt;The essence of building reliable and scalable distributed data systems and efficiently using them to solve real world problems is in mastering the tradeoffs associated with the design choices. Designing Data Intensive applications explores them like none other and provides a unbiased view of how distributed systems have made these choices over time.&lt;/p&gt;
&lt;footer&gt;&lt;a href=&quot;https://www.linkedin.com/in/veenabasavaraj&quot;&gt;Veena Basavaraj&lt;/a&gt;, Senior Software Engineer at &lt;a href=&quot;https://www.uber.com/&quot;&gt;Uber&lt;/a&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-xs-2&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/davidbeyer.jpg&quot; class=&quot;img-responsive img-rounded&quot; alt=&quot;Kevin Scott&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;col-xs-10&quot; readability=&quot;6.5264423076923&quot;&gt;
&lt;blockquote readability=&quot;6.9615384615385&quot;&gt;
&lt;p&gt;A joy to read! This is one of the best technical books I've read. It offers very helpful context, historical and current, to understanding the key issues in the text.&lt;/p&gt;
&lt;footer&gt;&lt;a href=&quot;https://www.linkedin.com/in/davidabeyer&quot;&gt;David Beyer&lt;/a&gt;, Investor at &lt;a href=&quot;http://www.amplifypartners.com/&quot;&gt;Amplify Partners&lt;/a&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot; readability=&quot;15.01996672213&quot;&gt;
&lt;div class=&quot;col-sm-4&quot; readability=&quot;12.818858560794&quot;&gt;
&lt;h3&gt;Now available&lt;/h3&gt;
&lt;p&gt;The final version of &lt;em&gt;Designing Data-Intensive Applications&lt;/em&gt; (DDIA) was published in March 2017, after 2½ years in Early Release (beta). It is now available in print and ebook formats from your favorite bookstore.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;btn btn-primary match-twitter-button&quot; href=&quot;https://dataintensive.net/buy.html&quot; role=&quot;button&quot;&gt;Get the book »&lt;/a&gt; &lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;intensivedata&quot; data-size=&quot;large&quot; data-related=&quot;intensivedata&quot; data-count=&quot;none&quot;&gt;Tweet&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Stay in touch&lt;/h3&gt;
&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/intensivedata&quot;&gt;@intensivedata&lt;/a&gt; on Twitter, or join our mailing list to receive very occasional news related to the book:&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;col-sm-4&quot; readability=&quot;19.285509325681&quot;&gt;
&lt;p class=&quot;center-icon&quot;&gt;&lt;img src=&quot;https://dataintensive.net/images/martinkleppmann.jpg&quot; class=&quot;img-responsive img-rounded&quot; alt=&quot;Martin Kleppmann&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;About the author&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://martin.kleppmann.com/&quot;&gt;Martin Kleppmann&lt;/a&gt; is a researcher in distributed systems at the &lt;a href=&quot;http://www.cl.cam.ac.uk/&quot;&gt;University of Cambridge&lt;/a&gt;. Previously he was a software engineer and entrepreneur at Internet companies including &lt;a href=&quot;https://www.linkedin.com/&quot;&gt;LinkedIn&lt;/a&gt; and &lt;a href=&quot;http://rapportive.com/&quot;&gt;Rapportive&lt;/a&gt;, where he worked on large-scale data infrastructure. In the process he learned a few things the hard way, and he hopes this book will save you from repeating the same mistakes.&lt;/p&gt;
&lt;p&gt;Martin is a regular conference speaker, blogger, and open source contributor. He believes that profound technical ideas should be accessible to everyone, and that deeper understanding will help us develop better software.&lt;/p&gt;
&lt;p&gt;You can find him as &lt;a href=&quot;https://twitter.com/martinkl&quot;&gt;@martinkl&lt;/a&gt; on Twitter, and his blog is at &lt;a href=&quot;http://martin.kleppmann.com/&quot;&gt;martin.kleppmann.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;footer readability=&quot;1&quot;&gt;&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;© 2014-2017 Martin Kleppmann&lt;/p&gt;
&lt;/div&gt;
&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Sun, 08 Oct 2017 15:22:00 +0000</pubDate>
<dc:creator>wooola</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dataintensive.net/</dc:identifier>
</item>
<item>
<title>No Bitcoin-based protocol can handle more than 20M users per month</title>
<link>https://runeksvendsen.github.io/blog/posts/2017-10-08-no-bitcoin-based-protocol-can-handle-more-than-20m-users-per-month.html</link>
<guid isPermaLink="true" >https://runeksvendsen.github.io/blog/posts/2017-10-08-no-bitcoin-based-protocol-can-handle-more-than-20m-users-per-month.html</guid>
<description>&lt;p&gt;Posted on October 8, 2017 by Rune K. Svendsen&lt;/p&gt;
&lt;p&gt;To solve Bitcoin’s scalability challenge, many so-called &lt;em&gt;layer 2&lt;/em&gt; protocols have been proposed. All of these protocols operate on the same, relatively simple, principle:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User deposits bitcoins (via the Bitcoin blockchain) into the layer 2 system&lt;/li&gt;
&lt;li&gt;Stuff happens within the layer 2 system – without touching the Bitcoin blockchain – which assigns arbitrarily small parts of the deposited bitcoins to other users (recipients) in the system&lt;/li&gt;
&lt;li&gt;Recipients withdraw received bitcoins (into the Bitcoin blockchain)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This increases the scalability of transferring bitcoins from user to user, since at &lt;em&gt;Step 2&lt;/em&gt; nothing touches the blockchain. In fact, since nothing touches the blockchain, the transaction speed (as measured in transactions per second) is theoretically unlimited, and in practice only limited by latency and bandwidth between nodes.&lt;/p&gt;
&lt;p&gt;The problem, however, is &lt;em&gt;Step 1&lt;/em&gt;. When a user receives money – which humans usually receive monthly as wages/salaries – they need to deposit it into the layer 2 system, in order for it to be available within it. At the current block size limit of 1 MB, the maximum number of deposit transactions per month – assuming the simplest Bitcoin transaction (single-signature) with a size of 224 bytes is used – is 20 million&lt;sup&gt;1&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;This is a maximum, since a single-signature Bitcoin transaction isn’t very interesting in the context of layer 2 protocols (it essentially constitutes sending your bitcoins to a trusted third party). Thus, with more complex (e.g. multi-signature) deposit transactions, the number of monthly users will be less than 20 million. Furthermore, this figure does not include the withdrawal transactions (where recipients withdraw funds from the layer 2 system to their private Bitcoin address), which will decrease the maximum number of supported users even further.&lt;/p&gt;
&lt;p&gt;In conclusion, if Bitcoin is to scale to more than ~0.2% of the world’s population, layer 2 protocols – operating on the principle described above – will not be sufficient. The Bitcoin blockchain will need to increase its capacity in conjunction with layer 2 protocols, or it will not have sufficient capacity to support more than – at most – 20 million users per month.&lt;/p&gt;
&lt;p&gt;      &lt;sup&gt;1&lt;/sup&gt; 1,000,000 bytes per block/224 bytes per transactions = 4464 tx/block&lt;br/&gt;         4464 tx/block*6 blocks per hour*24 hours per day = ~643000 tx/day&lt;br/&gt;         643000 tx/day*30 days per month = ~20 million tx/month&lt;/p&gt;
</description>
<pubDate>Sun, 08 Oct 2017 10:13:44 +0000</pubDate>
<dc:creator>runeks</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://runeksvendsen.github.io/blog/posts/2017-10-08-no-bitcoin-based-protocol-can-handle-more-than-20m-users-per-month.html</dc:identifier>
</item>
<item>
<title>Thoughts on Microsoft&amp;#039;s Time-Travel Debugger</title>
<link>http://robert.ocallahan.org/2017/10/thoughts-on-microsofts-time-travel.html</link>
<guid isPermaLink="true" >http://robert.ocallahan.org/2017/10/thoughts-on-microsofts-time-travel.html</guid>
<description>&lt;p&gt;I'm excited that Microsoft's &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview&quot;&gt;TTD&lt;/a&gt; is finally available to the public. Congratulations to the team! &lt;a href=&quot;https://www.youtube.com/watch?v=l1YJTg_A914&quot;&gt;The video&lt;/a&gt; is well worth watching. I haven't used TTD myself yet since I don't have a Windows system at hand, but I've talked to Mozilla developers who've tried it on Firefox.&lt;/p&gt;
&lt;p&gt;The most important and obvious difference between TTD and rr is that TTD is for Windows and rr is for Linux (though a few crazy people have had success debugging Windows applications in Wine under rr).&lt;/p&gt;
&lt;p&gt;TTD supports recording of multiple threads in parallel, while rr is limited to a single core. On the other hand, per-thread recording overhead seems to be much higher in TTD than in rr. It's hard to make a direct comparison, but a simple &quot;start Firefox, display &lt;a href=&quot;https://mozilla.org&quot;&gt;mozilla.org&lt;/a&gt;, shut down&quot; test run on similar hardware takes about 250 seconds under TTD and 26 seconds under rr. This is not surprising given TTD relies on &lt;a href=&quot;https://www.usenix.org/legacy/events/vee06/full_papers/p154-bhansali.pdf&quot;&gt;pervasive binary instrumentation&lt;/a&gt; and rr was designed not to. This means recording extremely parallel workloads might be faster under TTD, but for many workloads rr recording will be faster. Starting up a large application really stresses binary translation frameworks, so it's a bit of a worst-case scenario for TTD — though a common one for developers. TTD's multicore recording might be better at reproducing certain kinds of concurrency bugs, though rr's &lt;a href=&quot;http://robert.ocallahan.org/2016/02/introducing-rr-chaos-mode.html&quot;&gt;chaos mode&lt;/a&gt; helps mitigate that problem — and lower recording overhead means you can churn through test iterations faster.&lt;/p&gt;
&lt;p&gt;Therefore for Firefox-like workloads, on Linux, I still think rr's recording approach is superior. Note that when the technology behind TTD was first developed the &lt;a href=&quot;https://arxiv.org/pdf/1705.05937.pdf&quot;&gt;hardware and OS features&lt;/a&gt; needed to support an rr-like approach did not exist.&lt;/p&gt;
&lt;p&gt;TTD's ability to attach to arbitrary processes and start recording sounds great and would mitigate some of the slow-recording problem. This would be nice to have with rr, but hard to implement. (Currently we require reserving a couple of pages at specific addresses that might not be available when attaching to an arbitrary process.)&lt;/p&gt;
&lt;p&gt;Some of the performance overhead of TTD comes from it copying all loaded libraries into the trace file, to ensure traces are portable across machines. rr doesn't do that by default; instead you have to run &lt;tt&gt;rr pack&lt;/tt&gt; to make traces self-contained. I still like our approach, especially in scenarios where you repeatedly re-record a testcase until it fails.&lt;/p&gt;
&lt;p&gt;The video mentions that TTD supports shared memory and async I/O and suggests rr doesn't. It can be confusing, but to clarify: rr supports shared memory as long as you record all the processes that are using the shared memory; for example Firefox and Chromium communicate with subprocesses using shared memory and work fine under rr. Async I/O is pretty rare in Linux; where it has come up so far (V4L2) we have been able to handle it.&lt;/p&gt;
&lt;p&gt;Supporting unlimited data breakpoints is a nice touch. I assume that's done using their binary instrumentation.&lt;/p&gt;
&lt;p&gt;TTD's replay looks fast in the demo videos but they mention that it can be slower than live debugging. They have an offline index build step, though it's not clear to me yet what exactly those indexes contain. It would be interesting to compare TTD and rr replay speed, especially for reverse execution.&lt;/p&gt;
&lt;p&gt;The TTD trace querying tools look cool. A lot more can be done in this area.&lt;/p&gt;
&lt;p&gt;rr+gdb supports running application functions at debug time (e.g. to dump data structures), while TTD does not. This feature is very important to some rr users, so it might be worthwhile for the TTD people to look at.&lt;/p&gt;

</description>
<pubDate>Sun, 08 Oct 2017 04:32:19 +0000</pubDate>
<dc:creator>JoshTriplett</dc:creator>
<og:url>http://robert.ocallahan.org/2017/10/thoughts-on-microsofts-time-travel.html</og:url>
<og:title>Thoughts On Microsoft's Time-Travel Debugger</og:title>
<og:description>I'm excited that Microsoft's TTD is finally available to the public. Congratulations to the team! The video is well worth watching. I have...</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>http://robert.ocallahan.org/2017/10/thoughts-on-microsofts-time-travel.html</dc:identifier>
</item>
</channel>
</rss>