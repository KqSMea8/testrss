<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>GPU Fluid</title>
<link>https://benedikt-bitterli.me/gpu-fluid.html</link>
<guid isPermaLink="true" >https://benedikt-bitterli.me/gpu-fluid.html</guid>
<description>&lt;div class=&quot;youtube&quot;&gt;&lt;img src=&quot;https://benedikt-bitterli.me/images/fluid-thumb/video.jpg&quot; alt=&quot;Video Thumbnail&quot;/&gt;
&lt;/div&gt;
&lt;h2&gt;GPU Fluid&lt;/h2&gt;
&lt;p&gt;This GPU implementation of a high-quality, offline fluid solver was written in Summer 2013 as a personal exercise in GPGPU. My main goal here was to become more familiar with versatile GPU algorithms such as stream compaction, and at the same time apply them in an exciting, computation heavy setting. The solver is written in C++ and OpenGL 4. The project is available on &lt;a href=&quot;https://github.com/tunabrain/gpu-fluid&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The fluid simulation itself is implemented using a grid-based Eulerian solver. One of the core ingredients of a Eulerian solver is the pressure solve, which involves computing the solution to a large system of linear equations (more than 1 million variables are typical). Simple solvers such as Gauss-Seidel are not very useful here, and I opted to implement the &lt;a href=&quot;http://en.wikipedia.org/wiki/Conjugate_gradient_method#The_preconditioned_conjugate_gradient_method&quot; target=&quot;_blank&quot;&gt;Preconditioned Conjugate Gradient method&lt;/a&gt; (PCG) instead.&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;img src=&quot;https://benedikt-bitterli.me/images/fluid-thumb/video-2.jpg&quot; alt=&quot;Video Thumbnail&quot;/&gt;
&lt;/div&gt;
&lt;p class=&quot;caption&quot;&gt;Heavy, black liquid is dispersed onto an obstacle in a container of light, white liquid&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Accelerating dot products&lt;/h2&gt;
&lt;p&gt;Implementing PCG on the GPU can be challenging due to the fact that it requires several dot products per iteration. Dot products are difficult to parallelize efficiently over several hundred cores, since they require summing a large vector into a single scalar. On the GPU, this operation easily becomes the bottleneck of the solver, and I spent a lot of time just optimizing this step.&lt;/p&gt;
&lt;p&gt;Firstly, the vector sum is performed in 2D instead of 1D, and stepwise instead of all at once. The input vectors for the dot product are multiplied element-wise and the result stored in a 2D texture, which is then summed to a single scalar step by step. In each step, every shader core computes the sum of a 4x4 texel area, shrinking the texture by a factor of 4 per side at each step, eventually arriving at a 1x1 area (a scalar). This provides a compromise between the number of synchronization steps and the number of cores utilized per sum.&lt;/p&gt;
&lt;p&gt;As an additional trick, the texturing unit is used to decrease the number of texture reads. GPUs feature several highly optimized hardware texturing units that can be abused to perform efficient floating point sums. That is, an interpolated texture read placed precisely in the center between four texels will produce the sum of the four texels, divided by four, in a single texture read. This is much more efficient than reading four texels in the shader without interpolation (using texelFetch) and adding them manually. Also, multiple texture reads are performed by each shader core to overlap their latency.&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;img src=&quot;https://benedikt-bitterli.me/images/fluid-thumb/video-3.jpg&quot; alt=&quot;Video Thumbnail&quot;/&gt;
&lt;/div&gt;
&lt;p class=&quot;caption&quot;&gt;Hot, black smoke rises in a cold container&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Finding a preconditioner&lt;/h2&gt;
&lt;p&gt;The performance of PCG is heavily dependent on the preconditioner, which is a special type of matrix tailored specifically to the class of matrix being inverted (here, a Poisson problem). For CPU implementations, a popular choice is Modified Incomplete Cholesky, which performs excellently in many cases. Unfortunately, it is also inherently sequential, making it infeasible for GPU implementations.&lt;br/&gt;I did some research and discovered the paper &lt;a href=&quot;http://link.springer.com/chapter/10.1007%2F978-3-642-25090-3_33&quot; target=&quot;_blank&quot;&gt;Parallelized Incomplete Poisson Preconditioner in Cloth Simulation&lt;/a&gt; by Sideris et. al., which describes the Incomplete Poisson preconditioner, tailored towards parallel solvers for Poisson problems. It translates to the GPU without issues and does not perform much worse than Modified Incomplete Cholesky.&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;img src=&quot;https://benedikt-bitterli.me/images/fluid-thumb/video-4.jpg&quot; alt=&quot;Video Thumbnail&quot;/&gt;
&lt;/div&gt;
&lt;p class=&quot;caption&quot;&gt;Light, white fluid and heavy, black fluid flow past each other, creating the Kelvin-Helmholtz instability&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Managing Particles&lt;/h2&gt;
&lt;p&gt;Finally, performing accurate advection on the GPU poses additional challenges. Semi-lagrangian approaches are easy to implement on the GPU, but suffer from numerical diffusion; that is, the simulation loses small-scale detail over time and eventually becomes &quot;smoothed out&quot;. This is undesirable, since much of the visual fidelity is dependent on the small-scale vortices and other details.&lt;br/&gt;A popular choice of advection method that mostly avoids numerical diffusion is &lt;a href=&quot;http://www.researchgate.net/publication/222452290_Flip_A_low-dissipation_particle-in-cell_method_for_fluid_flow&quot; target=&quot;_blank&quot;&gt;Fluid Implicit Particle (FLIP)&lt;/a&gt;. On the CPU, this technique is not too difficult to implement. On the GPU however, things are a little bit more complex.&lt;/p&gt;
&lt;p&gt;The main problem is that a) lists of particles need to be built for every grid cell and b) possibly many particles need to be created and deleted per frame. Building lists of things and dynamically deleting/creating data points stored in a continuous buffer without the data ever leaving the GPU is a difficult thing to do, and this is where a technique called &lt;a href=&quot;http://folk.uio.no/erikd/histo/hpmarchertalk.pdf&quot; target=&quot;_blank&quot;&gt;Histopyramids&lt;/a&gt; comes in handy.&lt;br/&gt;Generally speaking, histopyramids allow collecting possibly sparse data points into a packed buffer using prefix sums, in order to evenly distribute work from this buffer to GPU cores. In this case, I am using histopyramids as a simple memory allocator that creates, deletes and sorts particles into lists in a single step. Doing this efficiently requires access to atomic memory operations, which are available as of OpenGL 3.2.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 18:18:40 +0000</pubDate>
<dc:creator>pablode</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://benedikt-bitterli.me/gpu-fluid.html</dc:identifier>
</item>
<item>
<title>AppStore Preferences can be unlocked by a local admin with any bogus password</title>
<link>https://openradar.appspot.com/36350507</link>
<guid isPermaLink="true" >https://openradar.appspot.com/36350507</guid>
<description>&lt;div readability=&quot;7.3929845422117&quot;&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;Originator:&lt;/td&gt;
&lt;td&gt;eholtam&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Number:&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;rdar://problem/36350507&quot;&gt;rdar&lt;/a&gt;://&lt;a href=&quot;https://openradar.appspot.com/36350507&quot;&gt;36350507&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Date Originated:&lt;/td&gt;
&lt;td&gt;08-Jan-2018 11:15 AM&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Status:&lt;/td&gt;
&lt;td&gt;Open&lt;/td&gt;
&lt;td&gt;Resolved:&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Product:&lt;/td&gt;
&lt;td&gt;macOS + SDK&lt;/td&gt;
&lt;td&gt;Product Version:&lt;/td&gt;
&lt;td&gt;10.13.2 17C88&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Classification:&lt;/td&gt;
&lt;td&gt;Security&lt;/td&gt;
&lt;td&gt;Reproducible:&lt;/td&gt;
&lt;td&gt;Always&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;div readability=&quot;10&quot;&gt;
&lt;pre&gt;
 
Summary:
The AppStore Preferences in System Preferences can be unlocked by a local admin with any bogus password.  

Steps to Reproduce:
1) Log in as a local admin
2) Open App Store Prefpane from the System Preferences
3) Lock the padlock if it is already unlocked
4) Click the lock to unlock it
5) Enter any bogus password

Expected Results:
The authorization to fail.

Actual Results:
Authorization succeeds and grants access to change the AppStore preferences.

Version:
10.13.2 17C88

Notes:
This only appears to be when logged in as a local admin. 
Tested with a non-admin account and I cannot unlock the prefpane with incorrect credentials.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;Comments&lt;/h2&gt;


&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; Reports posted here will not necessarily be seen by Apple. All problems should be submitted at bugreport.apple.com before they are posted here. Please only post information for Radars that you have filed yourself, and please do not include Apple confidential information in your posts. Thank you!&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 16:50:53 +0000</pubDate>
<dc:creator>tomduncalf</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://openradar.appspot.com/36350507</dc:identifier>
</item>
<item>
<title>Turning web design mockups into code with Deep Learning</title>
<link>https://blog.floydhub.com/turning-design-mockups-into-code-with-deep-learning/</link>
<guid isPermaLink="true" >https://blog.floydhub.com/turning-design-mockups-into-code-with-deep-learning/</guid>
<description>&lt;p&gt;Within three years deep learning will change front-end development. It will increase prototyping speed and lower the barrier for building software.&lt;/p&gt;
&lt;p&gt;The field took off last year when Tony Beltramelli introduced the &lt;a href=&quot;https://arxiv.org/abs/1705.07962&quot;&gt;pix2code paper&lt;/a&gt; and Airbnb launched &lt;a href=&quot;https://airbnb.design/sketching-interfaces/&quot;&gt;sketch2code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Currently, the largest barrier to automating front-end development is computing power. However, we can use current deep learning algorithms, along with synthesized training data, to start exploring artificial front-end automation right now.&lt;/p&gt;
&lt;p&gt;In this post, we’ll teach a neural network how to code a basic a HTML and CSS website based on a picture of a design mockup. Here's a quick overview of the process:&lt;/p&gt;
&lt;h3&gt;1) Give a design image to the trained neural network&lt;/h3&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/image_to_notebookfile-3354b407064e4d95a0217612a5463434-4a3e0.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;image to notebookfile&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/image_to_notebookfile-3354b407064e4d95a0217612a5463434-6c1a3.png&quot; srcset=&quot;/static/image_to_notebookfile-3354b407064e4d95a0217612a5463434-4f362.png 192w, /static/image_to_notebookfile-3354b407064e4d95a0217612a5463434-1883a.png 384w, /static/image_to_notebookfile-3354b407064e4d95a0217612a5463434-6c1a3.png 768w, /static/image_to_notebookfile-3354b407064e4d95a0217612a5463434-4a3e0.png 1043w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;h3&gt;2) The neural network converts the image into HTML markup&lt;/h3&gt;
&lt;img src=&quot;https://blog.floydhub.com/generate_html_markup-b6ceec69a7c9cfd447d188648049f2a4.gif&quot;/&gt;&lt;h3&gt;3) Rendered output&lt;/h3&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-843a4.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;render example&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-6c1a3.png&quot; srcset=&quot;/static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-4f362.png 192w, /static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-1883a.png 384w, /static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-6c1a3.png 768w, /static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-650d4.png 1152w, /static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-bbf5a.png 1536w, /static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-c6553.png 2304w, /static/render_example-4c9df7e5e8bb455c71dd7856acca7aae-843a4.png 3570w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;p&gt;We’ll build the neural network in three iterations.&lt;/p&gt;
&lt;p&gt;In the first version, we’ll make a bare minimum version to get a hang of the moving parts. The second version, HTML, will focus on automating all the steps and explaining the neural network layers. In the final version, Bootstrap, we’ll create a model that can generalize and explore the LSTM layer.&lt;/p&gt;
&lt;p&gt;All the code is prepared on &lt;a href=&quot;https://github.com/emilwallner/Screenshot-to-code-in-Keras/blob/master/README.md&quot;&gt;Github&lt;/a&gt; and &lt;a href=&quot;https://www.floydhub.com/emilwallner/projects/picturetocode&quot;&gt;FloydHub&lt;/a&gt; in Jupyter notebooks. All the FloydHub notebooks are inside the &lt;code&gt;floydhub&lt;/code&gt; directory and the local equivalents are under &lt;code&gt;local&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The models are based on Beltramelli‘s &lt;a href=&quot;https://arxiv.org/abs/1705.07962&quot;&gt;pix2code paper&lt;/a&gt; and Jason Brownlee’s &lt;a href=&quot;https://machinelearningmastery.com/blog/page/2/&quot;&gt;image caption tutorials&lt;/a&gt;. The code is written in Python and Keras, a framework on top of TensorFlow.&lt;/p&gt;
&lt;p&gt;If you’re new to deep learning, I’d recommend getting a feel for Python, backpropagation, and convolutional neural networks. My three earlier posts on FloydHub’s blog will get you started &lt;a href=&quot;https://blog.floydhub.com/my-first-weekend-of-deep-learning/&quot;&gt;[1]&lt;/a&gt; &lt;a href=&quot;https://blog.floydhub.com/coding-the-history-of-deep-learning/&quot;&gt;[2]&lt;/a&gt; &lt;a href=&quot;https://blog.floydhub.com/colorizing-b&amp;amp;w-photos-with-neural-networks/&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s recap our goal. We want to build a neural network that will generate HTML/CSS markup that corresponds to a screenshot.&lt;/p&gt;
&lt;p&gt;When you train the neural network, you give it several screenshots with matching HTML.&lt;/p&gt;
&lt;p&gt;It learns by predicting all the matching HTML markup tags one by one. When it predicts the next markup tag, it receives the screenshot as well as all the correct markup tags until that point.&lt;/p&gt;
&lt;p&gt;Here is a simple &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1xXwarcQZAHluorveZsACtXRdmNFbwGtN3WMNhcTdEyQ/edit?usp=sharing&quot;&gt;training data example&lt;/a&gt; in a Google Sheet.&lt;/p&gt;
&lt;p&gt;Creating a model that predicts word by word is the most common approach today. There are &lt;a href=&quot;https://machinelearningmastery.com/deep-learning-caption-generation-models/&quot;&gt;other approaches&lt;/a&gt;, but that’s the method that we’ll use throughout this tutorial.&lt;/p&gt;
&lt;p&gt;Notice that for each prediction it gets the same screenshot. So if it has to predict 20 words, it will get the same design mockup twenty times. For now, don’t worry about how the neural network works. Focus on grasping the input and output of the neural network.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-ecc59.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;neural network overview&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-6c1a3.png&quot; srcset=&quot;/static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-4f362.png 192w, /static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-1883a.png 384w, /static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-6c1a3.png 768w, /static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-650d4.png 1152w, /static/neural_network_overview-82bea09299f242ad5d6e1236b9661ec6-ecc59.png 1531w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;Let’s focus on the previous markup. Say we train the network to predict the sentence “I can code”. When it receives “I”, then it predicts “can”. Next time it will receive “I can” and predict “code”. It receives all the previous words and only has to predict the next word.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-ecc59.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;input and output data&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-6c1a3.png&quot; srcset=&quot;/static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-4f362.png 192w, /static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-1883a.png 384w, /static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-6c1a3.png 768w, /static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-650d4.png 1152w, /static/input_and_output_data-555f7b04c75a202041f0a4438af5cd51-ecc59.png 1531w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;p&gt;From the data the neural network creates features. The neural network builds features to link the input data with the output data. It has to create representations to understand what is in each screenshot, the HTML syntax, that it has predicted. This builds the knowledge to predict the next tag.&lt;/p&gt;
&lt;p&gt;When you want to use the trained model for real-world usage, it's similar to when you train the model. The text is generated one by one with the same screenshot each time. Instead of feeding it with the correct HTML tags, it receives the markup it has generated so far. Then it predicts the next markup tag. The prediction is initiated with a &quot;start tag&quot; and stops when it predicts an “end tag” or reaches a max limit. Here's another example in &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1yneocsAb_w3-ZUdhwJ1odfsxR2kr-4e_c5FabQbNJrs/edit?usp=sharing&quot;&gt;a Google Sheet&lt;/a&gt;.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-ecc59.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;model prediction&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-6c1a3.png&quot; srcset=&quot;/static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-4f362.png 192w, /static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-1883a.png 384w, /static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-6c1a3.png 768w, /static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-650d4.png 1152w, /static/model_prediction-801ad7af1d2205276ba64fdc6d7c7ec8-ecc59.png 1531w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;

&lt;p&gt;Let’s build a hello world version. We’ll feed a neural network a screenshot with a website displaying “Hello World!”, and teach it to generate the markup.&lt;/p&gt;
&lt;img src=&quot;https://blog.floydhub.com/hello_world_generation-039d78c27eb584fa639b89d564b94772.gif&quot;/&gt;&lt;p&gt;First, the neural network maps the design mockup into a list of pixel values. From 0 - 255 in three channels - red, blue, and green.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/website_pixels-6f11057880ea91a87ddc087c27d063a7-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;website pixels&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/website_pixels-6f11057880ea91a87ddc087c27d063a7-6c1a3.png&quot; srcset=&quot;/static/website_pixels-6f11057880ea91a87ddc087c27d063a7-4f362.png 192w, /static/website_pixels-6f11057880ea91a87ddc087c27d063a7-1883a.png 384w, /static/website_pixels-6f11057880ea91a87ddc087c27d063a7-6c1a3.png 768w, /static/website_pixels-6f11057880ea91a87ddc087c27d063a7-650d4.png 1152w, /static/website_pixels-6f11057880ea91a87ddc087c27d063a7-bbf5a.png 1536w, /static/website_pixels-6f11057880ea91a87ddc087c27d063a7-c6553.png 2304w, /static/website_pixels-6f11057880ea91a87ddc087c27d063a7-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;p&gt;To represent the markup in a way that the neural network understands, I use &lt;a href=&quot;https://machinelearningmastery.com/how-to-one-hot-encode-sequence-data-in-python/&quot;&gt;one hot encoding&lt;/a&gt;. Thus, the sentence “I can code”, could be mapped like the below.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;one hot encoding&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-6c1a3.png&quot; srcset=&quot;/static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-4f362.png 192w, /static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-1883a.png 384w, /static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-6c1a3.png 768w, /static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-650d4.png 1152w, /static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-bbf5a.png 1536w, /static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-c6553.png 2304w, /static/one_hot_encoding-2a72d2b794b26e6e4c4cc9c5f8bd4649-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;In the above graphic, we include the start and end tag. These tags are cues for when the network starts its predictions and when to stop.&lt;/p&gt;
&lt;p&gt;For the input data, we will use sentences, starting with the first word and then adding each word one by one. The output data is always one word.&lt;/p&gt;
&lt;p&gt;Sentences follow the same logic as words. They also need the same input length. Instead of being capped by the vocabulary they are bound by maximum sentence length. If it’s shorter than the maximum length, you fill it up with empty words, a word with just zeros.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;one hot sentence&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-6c1a3.png&quot; srcset=&quot;/static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-4f362.png 192w, /static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-1883a.png 384w, /static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-6c1a3.png 768w, /static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-650d4.png 1152w, /static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-bbf5a.png 1536w, /static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-c6553.png 2304w, /static/one_hot_sentence-6b3c930c8a7808b928639201cac78ebe-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;As you see, words are printed from right to left. This forces each word to change position for each training round. This allows the model to learn the sequence instead of memorizing the position of each word.&lt;/p&gt;
&lt;p&gt;In the below graphic there are four predictions. Each row is one prediction. To the left are the images represented in their three color channels: red, green and blue and the previous words. Outside of the brackets, are the predictions one by one, ending with a red square to mark the end.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;model function&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-6c1a3.png&quot; srcset=&quot;/static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-4f362.png 192w, /static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-1883a.png 384w, /static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-6c1a3.png 768w, /static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-650d4.png 1152w, /static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-bbf5a.png 1536w, /static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-c6553.png 2304w, /static/model_function-068c180c2ba3efdbb54193f21a5d5d7d-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;50&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;    
    max_caption_len &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;
    
    vocab_size &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;
    
    
    images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        images&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;img_to_array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;load_img&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'screenshot.jpg'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;224&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;224&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dtype&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;float&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; preprocess_input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    html_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    next_words &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
    
    
    VGG &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; VGG16&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;weights&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'imagenet'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; include_top&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    features &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; VGG&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    vgg_feature &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    vgg_feature_dense &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vgg_feature&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    vgg_feature_repeat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; RepeatVector&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_caption_len&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vgg_feature_dense&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    language_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; vocab_size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_input&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; concatenate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;vgg_feature_repeat&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; language_model&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    decoder_output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'softmax'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;vgg_feature&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; language_input&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;decoder_output&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;compile&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loss&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'categorical_crossentropy'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optimizer&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'rmsprop'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;features&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; html_input&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; next_words&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; batch_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; shuffle&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; epochs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the hello world version we use three tokens: “start”, “Hello World!&lt;/p&gt;
” and “end”. A token can be anything. It can be a character, word or sentence. Character versions require a smaller vocabulary but constrain the neural network. Word level tokens tend to perform best.
&lt;p&gt;Here we make the prediction:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;    
    sentence &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zeros&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
    start_token &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 
    sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; start_token 
    
    
    second_word &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;features&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sentence&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; start_token
    sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;round&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;second_word&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    third_word &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;features&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sentence&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; start_token
    sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;round&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;second_word&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;round&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;third_word&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    vocabulary &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&amp;lt;HTML&amp;gt;&amp;lt;center&amp;gt;&amp;lt;H1&amp;gt;Hello World!&amp;lt;/H1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/HTML&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;end&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; sentence&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocabulary&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argmax&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Output&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;10 epochs:&lt;/strong&gt; &lt;code&gt;start start start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;100 epochs:&lt;/strong&gt; &lt;code&gt;start &amp;lt;HTML&amp;gt;&amp;lt;center&amp;gt;&amp;lt;H1&amp;gt;Hello World!&amp;lt;/H1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/HTML&amp;gt; &amp;lt;HTML&amp;gt;&amp;lt;center&amp;gt;&amp;lt;H1&amp;gt;Hello World!&amp;lt;/H1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/HTML&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;300 epochs:&lt;/strong&gt; &lt;code&gt;start &amp;lt;HTML&amp;gt;&amp;lt;center&amp;gt;&amp;lt;H1&amp;gt;Hello World!&amp;lt;/H1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/HTML&amp;gt; end&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Mistakes I made:&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Build the first working version before gathering the data.&lt;/strong&gt; Early on in this project, I managed to get a copy of an old archive of the Geocities hosting website. It had 38 million websites. Blinded by the potential, I ignored the huge workload that would be required to reduce the 100K-sized vocabulary.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dealing with a terabyte worth of data requires good hardware or a lot of patience.&lt;/strong&gt; After having my mac run into several problems I ended up using a powerful remote server. Expect to rent a rig with 8 modern CPU cores and a 1GPS internet connection to have a decent workflow.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nothing made sense until I understood the input and output data.&lt;/strong&gt; The input, X, is one screenshot and the previous markup tags. The output, Y, is the next markup tag. When I got this, it became easier to understand everything between them. It also became easier to experiment with different architectures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be aware of the rabbit holes.&lt;/strong&gt; Because this project intersects with a lot of fields in deep learning, I got stuck in plenty of rabbit holes along the way. I spent a week programming RNNs from scratch, got too fascinated by embedding vector spaces, and was seduced by exotic implementations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Picture-to-code networks are image caption models in disguise.&lt;/strong&gt; Even when I learned this, I still ignored many of the image caption papers, simply because they were less cool. Once I got some perspective, I accelerated my learning of the problem space.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Running the code on FloydHub&lt;/h2&gt;
&lt;p&gt;FloydHub is a training platform for deep learning. I came across them when I first started learning deep learning and I’ve used them since for training and managing my deep learning experiments. You can install it and run your first model within 10 minutes. It’s hands down the best option to run models on cloud GPUs.&lt;/p&gt;
&lt;p&gt;If you are new to FloydHub, do their &lt;a href=&quot;https://www.floydhub.com/&quot;&gt;2-min installation&lt;/a&gt; or &lt;a href=&quot;https://www.youtube.com/watch?v=byLQ9kgjTdQ&amp;amp;t=21s&quot;&gt;my 5-minute walkthrough.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clone the repository&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone https://github.com/emilwallner/Screenshot-to-code-in-Keras.git
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Login and initiate FloydHub command-line-tool&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; Screenshot-to-code-in-Keras
floyd login
floyd init s2c
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run a Jupyter notebook on a FloydHub cloud GPU machine:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;floyd run --gpu --env tensorflow-1.4 --data emilwallner/datasets/imagetocode/2:data --mode jupyter
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All the notebooks are prepared inside the floydhub directory. The local equivalents are under local. Once it’s running, you can find the first notebook here: floydhub/Hello&lt;em&gt;world/hello&lt;/em&gt;world.ipynb .&lt;/p&gt;
&lt;p&gt;If you want more detailed instructions and an explanation for the flags, check &lt;a href=&quot;https://blog.floydhub.com/colorizing-b&amp;amp;w-photos-with-neural-networks/&quot;&gt;my earlier post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this version, we’ll automate many of the steps from the Hello World model. This section will focus on creating a scalable implementation and the moving pieces in the neural network.&lt;/p&gt;
&lt;p&gt;This version will not be able to predict HTML from random websites, but it’s still a great setup to explore the dynamics of the problem.&lt;/p&gt;
&lt;img src=&quot;https://blog.floydhub.com/html_generation-2476413d4299a3a8b407ee9cdb6774b6.gif&quot;/&gt;&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;If we expand the components of the previous graphic it looks like this. npm &lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-2b038.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;model more details&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-6c1a3.png&quot; srcset=&quot;/static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-4f362.png 192w, /static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-1883a.png 384w, /static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-6c1a3.png 768w, /static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-650d4.png 1152w, /static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-bbf5a.png 1536w, /static/model_more_details-68db3bf26f6df205ffe4c541ace33a92-2b038.png 2267w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are two major sections. First, the encoder. This is where we create image features and previous markup features. Features are the building blocks that the network creates to connect the design mockups with the markup. At the end of the encoder, we glue the image features to each word in the previous markup.&lt;/p&gt;
&lt;p&gt;The decoder then takes the combined design and markup feature and creates a next tag feature. This feature is run through a fully connected neural network to predict the next tag.&lt;/p&gt;
&lt;h5&gt;Design mockup features&lt;/h5&gt;
&lt;p&gt;Since we need to insert one screenshot for each word, this becomes a bottleneck when training the network (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1xXwarcQZAHluorveZsACtXRdmNFbwGtN3WMNhcTdEyQ/edit#gid=0&quot;&gt;example&lt;/a&gt;). Instead of using the images, we extract the information we need to generate the markup.&lt;/p&gt;
&lt;p&gt;The information is encoded into image features. This is done by using an already pre-trained convolutional neural network (CNN). The model is pre-trained on Imagenet.&lt;/p&gt;
&lt;p&gt;We extract the features from the layer before the final classification.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-d5626.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;ir2 to image features&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-6c1a3.png&quot; srcset=&quot;/static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-4f362.png 192w, /static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-1883a.png 384w, /static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-6c1a3.png 768w, /static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-650d4.png 1152w, /static/ir2_to_image_features-5455a0516284ac036482417b56a57d49-d5626.png 1159w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;p&gt;We end up with 1536 eight by eight pixel images known as features. Although they are hard to understand for us, a neural network can extract the objects and position of the elements from these features.&lt;/p&gt;
&lt;h5&gt;Markup features&lt;/h5&gt;
&lt;p&gt;In the hello world version we used a one-hot encoding to represent the markup. In this version, we’ll use a word embedding for the input and keep the one-hot encoding for the output.&lt;/p&gt;
&lt;p&gt;The way we structure each sentence stays the same, but how we map each token is changed. One-hot encoding treats each word as an isolated unit. Instead, we convert each word in the input data to lists of digits. These represent the relationship between the markup tags.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/embedding-2146c151fd4dbf5dcce6257444931a79-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;embedding&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/embedding-2146c151fd4dbf5dcce6257444931a79-6c1a3.png&quot; srcset=&quot;/static/embedding-2146c151fd4dbf5dcce6257444931a79-4f362.png 192w, /static/embedding-2146c151fd4dbf5dcce6257444931a79-1883a.png 384w, /static/embedding-2146c151fd4dbf5dcce6257444931a79-6c1a3.png 768w, /static/embedding-2146c151fd4dbf5dcce6257444931a79-650d4.png 1152w, /static/embedding-2146c151fd4dbf5dcce6257444931a79-bbf5a.png 1536w, /static/embedding-2146c151fd4dbf5dcce6257444931a79-c6553.png 2304w, /static/embedding-2146c151fd4dbf5dcce6257444931a79-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;The dimension of this word embedding is eight but often vary between 50 - 500 depending on the size of the vocabulary.&lt;/p&gt;
&lt;p&gt;The eight digits for each word are weights similar to a vanilla neural network. They are tuned to map how the words relate to each other (&lt;a href=&quot;https://arxiv.org/abs/1301.3781&quot;&gt;Mikolov alt el., 2013&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This is how we start developing markup features. Features are what the neural network develop to link the input data with the output data. For now, don’t worry about what they are, we’ll dig deeper into this in the next section.&lt;/p&gt;
&lt;h3&gt;The Encoder&lt;/h3&gt;
&lt;p&gt;We’ll take the word embeddings and run them through an LSTM and return a sequence of markup features. These are run through a Time distributed dense layer - think of it as a dense layer with multiple inputs and outputs.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/encoder-78498407f393e83128abed5eec86dd4c-524bf.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;encoder&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/encoder-78498407f393e83128abed5eec86dd4c-6c1a3.png&quot; srcset=&quot;/static/encoder-78498407f393e83128abed5eec86dd4c-4f362.png 192w, /static/encoder-78498407f393e83128abed5eec86dd4c-1883a.png 384w, /static/encoder-78498407f393e83128abed5eec86dd4c-6c1a3.png 768w, /static/encoder-78498407f393e83128abed5eec86dd4c-650d4.png 1152w, /static/encoder-78498407f393e83128abed5eec86dd4c-bbf5a.png 1536w, /static/encoder-78498407f393e83128abed5eec86dd4c-524bf.png 1561w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;In parallel, the image features are first flattened. Regardless of how the digits where structured they are transformed into one large list of numbers. Then we apply a dense layer on this layer to form a high-level features. These image features are then concatenated to the markup features.&lt;/p&gt;
&lt;p&gt;This can be hard to wrap your mind around - so let’s break it down.&lt;/p&gt;
&lt;h5&gt;Markup features&lt;/h5&gt;
&lt;p&gt;Here we run the word embeddings through the LSTM layer. In this graphic, all the sentences are padded to reach the maximum size of three tokens.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-f669c.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;word embedding markup feature&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-6c1a3.png&quot; srcset=&quot;/static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-4f362.png 192w, /static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-1883a.png 384w, /static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-6c1a3.png 768w, /static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-650d4.png 1152w, /static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-bbf5a.png 1536w, /static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-c6553.png 2304w, /static/word_embedding_markup_feature-d4e76483527fefd10742c0ddc1cd3227-f669c.png 2637w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;To mix signals and find higher-level patterns we apply a TimeDistributed dense layer to the markup features. TimeDistributed dense is the same as a dense layer but with multiple inputs and outputs.&lt;/p&gt;
&lt;h5&gt;Image features&lt;/h5&gt;
&lt;p&gt;In parallel, we prepare the images. We take all the mini image features and transform them into one long list. The information is not changed, just reorganized.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-78710.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;image feature to image feature&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-6c1a3.png&quot; srcset=&quot;/static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-4f362.png 192w, /static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-1883a.png 384w, /static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-6c1a3.png 768w, /static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-650d4.png 1152w, /static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-bbf5a.png 1536w, /static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-c6553.png 2304w, /static/image_feature_to_image_feature-77a1cf39ed251d4243b90325e60fbdf5-78710.png 2384w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;Again, to mix signals and extract higher level notions, we apply a dense layer. Since we are only dealing with one input value, we can use a normal dense layer. To connect the image features to the markup features, we copy the image features.&lt;/p&gt;
&lt;p&gt;In this case, we have three markup features. Thus, we end up with an equal amount of image features and markup features.&lt;/p&gt;
&lt;h5&gt;Concatenating the image and markup features&lt;/h5&gt;
&lt;p&gt;All the sentences are padded to create three markup features. Since we have prepared the image features, we can now add one image feature for each markup feature.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/concatenate-747c07d8c62a2e026212d20860514188-78710.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;concatenate&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/concatenate-747c07d8c62a2e026212d20860514188-6c1a3.png&quot; srcset=&quot;/static/concatenate-747c07d8c62a2e026212d20860514188-4f362.png 192w, /static/concatenate-747c07d8c62a2e026212d20860514188-1883a.png 384w, /static/concatenate-747c07d8c62a2e026212d20860514188-6c1a3.png 768w, /static/concatenate-747c07d8c62a2e026212d20860514188-650d4.png 1152w, /static/concatenate-747c07d8c62a2e026212d20860514188-bbf5a.png 1536w, /static/concatenate-747c07d8c62a2e026212d20860514188-c6553.png 2304w, /static/concatenate-747c07d8c62a2e026212d20860514188-78710.png 2384w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;After sticking one image feature to each markup feature, we end up with three image-markup features. This is the input we feed into the decoder.&lt;/p&gt;
&lt;h3&gt;The Decoder&lt;/h3&gt;
&lt;p&gt;Here we use the combined image-markup features to predict the next tag.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/decoder-1592aedab9a95e07a513234aa258d777-524bf.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;decoder&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/decoder-1592aedab9a95e07a513234aa258d777-6c1a3.png&quot; srcset=&quot;/static/decoder-1592aedab9a95e07a513234aa258d777-4f362.png 192w, /static/decoder-1592aedab9a95e07a513234aa258d777-1883a.png 384w, /static/decoder-1592aedab9a95e07a513234aa258d777-6c1a3.png 768w, /static/decoder-1592aedab9a95e07a513234aa258d777-650d4.png 1152w, /static/decoder-1592aedab9a95e07a513234aa258d777-bbf5a.png 1536w, /static/decoder-1592aedab9a95e07a513234aa258d777-524bf.png 1561w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;In the below example, we use three image-markup feature pairs and output one next tag feature.&lt;/p&gt;
&lt;p&gt;Note that the LSTM layer has the sequence set to false. Instead of returning the length of the input sequence it only predicts one feature. In our case, it’s a feature for the next tag. It contains the information for the final prediction.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-99852.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;image markup feature to vocab&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-6c1a3.png&quot; srcset=&quot;/static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-4f362.png 192w, /static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-1883a.png 384w, /static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-6c1a3.png 768w, /static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-650d4.png 1152w, /static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-bbf5a.png 1536w, /static/image-markup-feature_to_vocab-eb39368b3f466914c9383d532675a622-99852.png 2200w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;h5&gt;The final prediction&lt;/h5&gt;
&lt;p&gt;The dense layer works like a traditional feedforward neural network. It connects the 512 digits in the next tag feature with the 4 final predictions. Say we have 4 words in our vocabulary: start, hello, world, and end.&lt;/p&gt;
&lt;p&gt;The vocabulary prediction could be [0.1, 0.1, 0.1, 0.7]. The softmax activation in the dense layer distributes a probability from 0 - 1, with the sum of all predictions equal to 1. In this case, it predicts that the 4th word is the next tag. Then you translate the one-hot encoding [0, 0, 0, 1] into the mapped value, say “end”.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;68&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;    
    images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    all_filenames &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; listdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'images/'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    all_filenames&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sort&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; filename &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; all_filenames&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        images&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;img_to_array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;load_img&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'images/'&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;299&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;299&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dtype&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;float&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; preprocess_input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    IR2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; InceptionResNetV2&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;weights&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'imagenet'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; include_top&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    features &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; IR2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    
    max_caption_len &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;
    
    tokenizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Tokenizer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filters&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; split&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lower&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;load_doc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; open&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;close&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; text
    
    
    X &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    all_filenames &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; listdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'html/'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    all_filenames&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sort&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; filename &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; all_filenames&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        X&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;load_doc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'html/'&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit_on_texts&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;X&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    vocab_size &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;word_index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
    
    sequences &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;texts_to_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;X&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    max_length &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; max&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; sequences&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    X&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; image_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; img_no&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; seq &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; enumerate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sequences&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;seq&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            
            in_seq&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_seq &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; seq&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; seq&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
            
            in_seq &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pad_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;in_seq&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maxlen&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
            
            out_seq &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; to_categorical&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;out_seq&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; num_classes&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
            
            image_data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;features&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;img_no&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            X&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_seq&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            y&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;out_seq&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    X&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; image_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;X&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image_data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    image_features &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1536&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_flat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Flatten&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image_features&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_flat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image_flat&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    ir2_out &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; RepeatVector&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_caption_len&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image_flat&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    language_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_caption_len&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Embedding&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; input_length&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;max_caption_len&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_input&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_model&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_model&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; TimeDistributed&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_model&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; concatenate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ir2_out&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; language_model&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    decoder_output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'softmax'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;image_features&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; language_input&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;decoder_output&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;compile&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loss&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'categorical_crossentropy'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optimizer&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'rmsprop'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;image_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; X&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; batch_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; shuffle&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; epochs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;word_for_id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;integer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; word&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;word_index&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; integer&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; word
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; None
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;generate_desc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; photo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        
        in_text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'START'&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;900&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            
            sequence &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;texts_to_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;in_text&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
            
            sequence &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pad_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;sequence&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maxlen&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            yhat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;photo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;sequence&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            yhat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argmax&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;yhat&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            word &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; word_for_id&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;yhat&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; None&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;
            
            in_text &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; word
            
            &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; word&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'END'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;
    
    
    test_image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; img_to_array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;load_img&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'images/87.jpg'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;299&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;299&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    test_image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test_image&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dtype&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;float&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    test_image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; preprocess_input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test_image&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    test_features &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; IR2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;test_image&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    generate_desc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test_features&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Output&lt;/h3&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;html output&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-6c1a3.png&quot; srcset=&quot;/static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-4f362.png 192w, /static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-1883a.png 384w, /static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-6c1a3.png 768w, /static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-650d4.png 1152w, /static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-bbf5a.png 1536w, /static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-c6553.png 2304w, /static/html_output-ba7571455ed0209f2d98b2cd1f94b9df-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;h4&gt;Links to generated websites&lt;/h4&gt;
&lt;p&gt;If you can’t see anything when you click these links, you can right click and click on ‘View Page Source’. Here is the &lt;a href=&quot;https://emilwallner.github.io/html/Original/&quot;&gt;original website&lt;/a&gt; for reference.&lt;/p&gt;
&lt;h3&gt;Mistakes I made:&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;LSTMs are a lot heavier for my cognition compared to CNNs&lt;/strong&gt;. When I unrolled all the LSTMs they became easier to understand. &lt;a href=&quot;http://course.fast.ai/lessons/lesson6.html&quot;&gt;Fast.ai’s video on RNNs&lt;/a&gt; was super useful. Also, focus on the input and output features before you try understanding how they work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Building a vocabulary from the ground up is a lot easier than narrowing down a huge vocabulary.&lt;/strong&gt; This includes everything from fonts, div sizes, hex colors to variable names and normal words.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Most of the libraries are created to parse text documents and not code.&lt;/strong&gt; In documents, everything is separated by a space, but in code, you need custom parsing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You can extract features with a model that’s trained on Imagenet.&lt;/strong&gt; This might seem counterintuitive since Imagenet has few web images. However, the loss is 30% higher compared to to a pix2code model, which is trained from scratch. I’d be interesting to use a pre-train inception-resnet type of model based on web screenshots.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In our final version, we’ll use a dataset of generated bootstrap websites from the &lt;a href=&quot;https://arxiv.org/abs/1705.07962&quot;&gt;pix2code paper.&lt;/a&gt; By using Twitter’s &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;bootstrap&lt;/a&gt;, we can combine HTML and CSS and decrease the size of the vocabulary.&lt;/p&gt;
&lt;p&gt;We’ll enable it to generate the markup for a screenshot it has not seen before. We’ll also dig into how it builds knowledge about the screenshot and markup.&lt;/p&gt;
&lt;p&gt;Instead of training it on the bootstrap markup, we’ll use 17 simplified tokens that we then translate into HTML and CSS. &lt;a href=&quot;https://github.com/tonybeltramelli/pix2code/tree/master/datasets&quot;&gt;The dataset&lt;/a&gt; includes 1500 test screenshots and 250 validation images. For each screenshot there are on average 65 tokens, resulting in 96925 training examples.&lt;/p&gt;
&lt;p&gt;By tweaking the model in the pix2code paper, the model can predict the web components with 97% accuracy (BLEU 4-ngram greedy search, more on this later).&lt;/p&gt;
&lt;img src=&quot;https://blog.floydhub.com/bootstrap_overview-99e7deb3c036ab6d5def0ab33f2e4d69.gif&quot;/&gt;&lt;h4&gt;An end-to-end approach&lt;/h4&gt;
&lt;p&gt;Extracting features from pre-trained models works well in image captioning models. But after a few experiments, I realized that pix2code’s end-to-end approach works better for this problem. The pre-trained models have not been trained on web data and are customized for classification.&lt;/p&gt;
&lt;p&gt;In this model, we replace the pre-trained image features with a light convolutional neural network. Instead of using max-pooling to increase information density, we increase the strides. This maintains the position and the color of the front-end elements.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-2b038.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;model more detail alone&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-6c1a3.png&quot; srcset=&quot;/static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-4f362.png 192w, /static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-1883a.png 384w, /static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-6c1a3.png 768w, /static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-650d4.png 1152w, /static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-bbf5a.png 1536w, /static/model_more_detail_alone-bfbf97a5ec65ff255f35a8e3cd2069e0-2b038.png 2267w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;There are two core models that enable this: convolutional neural networks (CNN) and recurrent neural networks (RNN). The most common recurrent neural network is long-short term memory (LSTM), so that’s what I’ll refer to.&lt;/p&gt;
&lt;p&gt;There are plenty of great CNN tutorials and I covered them in &lt;a href=&quot;https://blog.floydhub.com/colorizing-b&amp;amp;w-photos-with-neural-networks/&quot;&gt;my previous article&lt;/a&gt;. Here, I’ll focus on the LSTMs.&lt;/p&gt;
&lt;h4&gt;Understanding timesteps in LSTMs&lt;/h4&gt;
&lt;p&gt;One of the harder things to grasp about LSTMs is timesteps. A vanilla neural network can be thought of as two timesteps. If you give it “Hello”, it predicts “World”. But it would struggle to predict more timesteps. In the below example, the input has four timesteps, one for each word.&lt;/p&gt;
&lt;p&gt;LSTMs are made for input with timesteps. It’s a neural network customized for information in order. If you unroll our model it looks like this. For each downward step, you keep the same weights. You apply one set of weights to the previous output and another set to the new input.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;lstm timesteps&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-6c1a3.png&quot; srcset=&quot;/static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-4f362.png 192w, /static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-1883a.png 384w, /static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-6c1a3.png 768w, /static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-650d4.png 1152w, /static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-bbf5a.png 1536w, /static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-c6553.png 2304w, /static/lstm_timesteps-51b6eece9c5e6abe2cc16b0dcac6eb53-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;p&gt;The weighted input and output are concatenated and added together with an activation. This is the output for that timestep. Since we reuse the weights, they draw information from several inputs and build knowledge of the sequence.&lt;/p&gt;
&lt;p&gt;Here is a simplified version of the process for each timestep in an LSTM.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;rnn example&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-6c1a3.png&quot; srcset=&quot;/static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-4f362.png 192w, /static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-1883a.png 384w, /static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-6c1a3.png 768w, /static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-650d4.png 1152w, /static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-bbf5a.png 1536w, /static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-c6553.png 2304w, /static/rnn_example-385ca1843bf3d88e93eec3294fcbb13c-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;To get a feel for this logic, I’d recommend building an RNN from scratch with Andrew Trask’s &lt;a href=&quot;https://iamtrask.github.io/2015/11/15/anyone-can-code-lstm/&quot;&gt;brilliant tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Understanding the units in LSTM layers&lt;/h4&gt;
&lt;p&gt;The amount of units in each LSTM layer determines it’s ability to memorize. This also corresponds to the size of each output feature. Again, a feature is a long list of numbers used to transfer information between layers.&lt;/p&gt;
&lt;p&gt;Each unit in the LSTM layer learns to keep track of different aspects of the syntax. Below is a visualization of a unit that keeps tracks of the information in the row div. This is the simplified markup we are using to train the bootstrap model.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;lstm cell activation&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-6c1a3.png&quot; srcset=&quot;/static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-4f362.png 192w, /static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-1883a.png 384w, /static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-6c1a3.png 768w, /static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-650d4.png 1152w, /static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-bbf5a.png 1536w, /static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-c6553.png 2304w, /static/lstm_cell_activation-1a1842b595ea638407a7389e26aa699b-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;Each LSTM unit maintains a cell state. Think of the cell state as the memory. The weights and activations are used to modify the state in different ways. This enables the LSTM layers to fine tune which information to keep and discard for each input.&lt;/p&gt;
&lt;p&gt;In addition to passing through an output feature for each input it also forwards the cell states, one value for each unit in the LSTM. To get a feel for how the components within the LSTM interacts, I recommend &lt;a href=&quot;https://colah.github.io/posts/2015-08-Understanding-LSTMs/&quot;&gt;Colah’s tutorial&lt;/a&gt;, Jayasiri’s &lt;a href=&quot;http://blog.varunajayasiri.com/numpy_lstm.html&quot;&gt;Numpy implementation&lt;/a&gt;, and &lt;a href=&quot;https://www.youtube.com/watch?v=yCC09vCHzF8&quot;&gt;Karphay’s lecture&lt;/a&gt; and &lt;a href=&quot;https://karpathy.github.io/2015/05/21/rnn-effectiveness/&quot;&gt;write-up.&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;101&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;    dir_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'resources/eval_light/'&lt;/span&gt;
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;load_doc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; open&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;close&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; text
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;load_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        
        all_filenames &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; listdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        all_filenames&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sort&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; filename &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;all_filenames&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; filename&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npz&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                
                image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                images&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'features'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                
                syntax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'&amp;lt;START&amp;gt; '&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; load_doc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' &amp;lt;END&amp;gt;'&lt;/span&gt;
                
                syntax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;syntax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                
                syntax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; syntax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' ,'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;syntax&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dtype&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;float&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; images&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text
    
    train_features&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; texts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; load_data&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dir_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    tokenizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Tokenizer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filters&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; split&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lower&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit_on_texts&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;load_doc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'bootstrap.vocab'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    vocab_size &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;word_index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
    
    train_sequences &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;texts_to_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;texts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    max_sequence &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; max&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; train_sequences&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    max_length &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;48&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;preprocess_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sequences&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; features&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        X&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; image_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; img_no&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; seq &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; enumerate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sequences&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;seq&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                
                in_seq&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_seq &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; seq&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; seq&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
                
                in_seq &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pad_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;in_seq&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maxlen&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;max_sequence&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
                
                out_seq &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; to_categorical&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;out_seq&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; num_classes&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
                
                image_data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;features&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;img_no&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                
                X&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_seq&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                y&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;out_seq&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;X&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image_data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    X&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; image_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; preprocess_data&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;train_sequences&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; train_features&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    image_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'valid'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; input_shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; strides&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; strides&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; strides&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Conv2D&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Flatten&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dropout&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dropout&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    image_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RepeatVector&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    visual_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    encoded_image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; image_model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;visual_input&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    language_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Input&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_length&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Embedding&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; input_length&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;max_length&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mask_zero&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_input&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_model&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    language_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language_model&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; concatenate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;encoded_image&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; language_model&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LSTM&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; return_sequences&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Dense&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vocab_size&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; activation&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'softmax'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;visual_input&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; language_input&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    optimizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; RMSprop&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lr&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.0001&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; clipvalue&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;compile&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loss&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'categorical_crossentropy'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optimizer&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;optimizer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;org-weights-epoch-{epoch:04d}--val_loss-{val_loss:.4f}--loss-{loss:.4f}.hdf5&quot;&lt;/span&gt;
    checkpoint &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ModelCheckpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; monitor&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'val_loss'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; save_weights_only&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; period&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    callbacks_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;checkpoint&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    
    
    model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;image_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; X&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; batch_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; shuffle&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; validation_split&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callbacks&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;callbacks_list&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; epochs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Test accuracy&lt;/h3&gt;
&lt;p&gt;It’s tricky to find a fair way to measure the accuracy. Say you compare word by word. If your prediction is one word out of sync, you might have 0% accuracy. If you remove one word which syncs the prediction, you might end up with 99/100.&lt;/p&gt;
&lt;p&gt;I used the BLEU score, best practice in machine translating and image captioning models. It breaks the sentence into four n-grams, from 1-4 word sequences. In the below prediction “cat” is supposed to be “code”.&lt;/p&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-ef96e.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;bleu score&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-6c1a3.png&quot; srcset=&quot;/static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-4f362.png 192w, /static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-1883a.png 384w, /static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-6c1a3.png 768w, /static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-650d4.png 1152w, /static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-bbf5a.png 1536w, /static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-c6553.png 2304w, /static/bleu_score-741cd6ede6d32df1de54a6d8dd41c530-ef96e.png 3840w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;To get the final score you multiply each score with 25%, (4/5) * 0.25 + (2/4) * 0.25 + (1/3) * 0.25 + (0/2) * 0.25 = 0.2 + 0.125 + 0.083 + 0 = 0.408 . The sum is then multiplied with a sentence length penalty. Since the length is correct in our example, it becomes our final score.&lt;/p&gt;
&lt;p&gt;You could increase the number of n-grams to make it harder. A four n-gram model is the model that best corresponds to human translations. I’d recommend running a few examples with the below code and reading the &lt;a href=&quot;https://en.wikipedia.org/wiki/BLEU&quot;&gt;wiki page.&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;51&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;load_doc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; open&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;close&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; text
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;load_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        files_in_folder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;listdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        files_in_folder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sort&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; filename &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tqdm&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;files_in_folder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; filename&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npz&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                images&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'features'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            
                syntax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'&amp;lt;START&amp;gt; '&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; load_doc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_dir&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;filename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' &amp;lt;END&amp;gt;'&lt;/span&gt;
                
                syntax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;syntax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                
                syntax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; syntax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' ,'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;syntax&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        images &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;images&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dtype&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;float&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; images&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text
    
    
    tokenizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Tokenizer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filters&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; split&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lower&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit_on_texts&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;load_doc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'bootstrap.vocab'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    dir_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'../../../../eval/'&lt;/span&gt;
    train_features&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; texts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; load_data&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dir_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    json_file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; open&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'../../../../model.json'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    loaded_model_json &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; json_file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    json_file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;close&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    loaded_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model_from_json&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loaded_model_json&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    loaded_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load_weights&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;../../../../weights.hdf5&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Loaded model from disk&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;word_for_id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;integer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; word&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;word_index&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; integer&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; word
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; None
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;word_for_id&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;generate_desc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; photo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        photo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;photo&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
        in_text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'&amp;lt;START&amp;gt; '&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'\nPrediction----&amp;gt;\n\n&amp;lt;START&amp;gt; '&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            
            sequence &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;texts_to_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;in_text&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
            
            sequence &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pad_sequences&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;sequence&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maxlen&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            yhat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; loaded_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;photo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sequence&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            yhat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; argmax&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;yhat&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            word &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; word_for_id&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;yhat&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; None&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;
            
            in_text &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; word &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt;
            
            &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;word &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'&amp;lt;END&amp;gt;'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; in_text
        
    
    max_length &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;48&lt;/span&gt; 
    
    
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;evaluate_model&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; descriptions&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; photos&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        actual&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; predicted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;len&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;texts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            yhat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; generate_desc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; photos&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'\n\nReal----&amp;gt;\n\n'&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; texts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            actual&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;texts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            predicted&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;yhat&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
        bleu &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; corpus_bleu&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;actual&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; predicted&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; bleu&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; actual&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; predicted
    
    bleu&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; actual&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; predicted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; evaluate_model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loaded_model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; texts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; train_features&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tokenizer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max_length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    
    dsl_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;compiler/assets/web-dsl-mapping.json&quot;&lt;/span&gt;
    compiler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Compiler&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dsl_path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    compiled_website &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; compiler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;compile&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;predicted&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'index.html'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;compiled_website &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bleu&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Output&lt;/h3&gt;
&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.floydhub.com/static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-1b912.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;bootstrap output&quot; title=&quot;&quot; src=&quot;https://blog.floydhub.com/static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-6c1a3.png&quot; srcset=&quot;/static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-4f362.png 192w, /static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-1883a.png 384w, /static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-6c1a3.png 768w, /static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-650d4.png 1152w, /static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-bbf5a.png 1536w, /static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-c6553.png 2304w, /static/bootstrap_output-8a1b036ddc436e20453b7c2962b0fa85-1b912.png 3188w&quot; sizes=&quot;(max-width: 768px) 100vw, 768px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
&lt;h5&gt;Links to sample output&lt;/h5&gt;
&lt;h3&gt;Mistakes I made:&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Understand the weakness of the models instead of testing random models.&lt;/strong&gt; First I applied random things such as batch normalization, bidirectional networks and tried implementing attention. After looking at the test data and seeing that it could not predict color and position with high accuracy I realized there was a weakness in the CNN. This lead me to replace maxpooling with increased strides. The validation loss went from 0.12 to 0.02 and increased the BLEU score from 85% to 97%.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Only use pre-trained models if they are relevant.&lt;/strong&gt; Given the small dataset I thought that a pre-trained image model would improve the performance. From my experiments, and end-to-end model is slower to train and requires more memory, but is 30% more accurate.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plan for slight variance when you run your model on a remote server.&lt;/strong&gt; On my mac, it read the files in alphabetic order. However, on the server, it was randomly located. This created a mismatch between the screenshots and the code. It still converged, but was the validation data was 50% worse than when I fixed it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make sure you understand library functions.&lt;/strong&gt; Include space for the empty token in your vocabulary. When I didn’t add it, it did not include one of the tokens. I only noticed it after looking at the final output several times and noticing that it never predicted a “single” token. After a quick check, I realized it wasn’t even in the vocabulary. Also, use the same order in the vocabulary for training and testing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use lighter models when experimenting.&lt;/strong&gt; Using GRUs instead of LSTMs reduced each epoch cycle by 30%, and did not have a large effect on the performance.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;Front-end development is an ideal space to apply deep learning. It’s easy to generate data and the current deep learning algorithms can map most of the logic.&lt;/p&gt;
&lt;p&gt;One of the most exciting areas is &lt;a href=&quot;https://arxiv.org/pdf/1502.03044.pdf&quot;&gt;applying attention to LSTMs&lt;/a&gt;. This will not just improve the accuracy, but enable us to visualize where the CNN puts its focus as it generates the markup.&lt;/p&gt;
&lt;p&gt;Attention is also key for communicating between markup, stylesheets, scripts and eventually the backend. Attention layers can keep track of variables, enabling the network to communicate between programming languages.&lt;/p&gt;
&lt;p&gt;But in the near feature, the biggest impact will come from building a scalable way to synthesize data. Then you can add fonts, colors, words, and animations step-by-step.&lt;/p&gt;
&lt;p&gt;So far, most progress is happening in taking sketches and turning them into template apps. In less then two years, we’ll be able to draw an app on paper and have the corresponding front-end in less than a second. There are already two working prototypes built by &lt;a href=&quot;https://airbnb.design/sketching-interfaces/&quot;&gt;Airbnb’s design team&lt;/a&gt; and &lt;a href=&quot;https://www.uizard.io/&quot;&gt;Uizard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some experiments to get started.&lt;/p&gt;
&lt;h2&gt;Experiments&lt;/h2&gt;
&lt;h5&gt;Getting started&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;Run all the models&lt;/li&gt;
&lt;li&gt;Try different hyper parameters&lt;/li&gt;
&lt;li&gt;Test a different CNN architecture&lt;/li&gt;
&lt;li&gt;Add Bidirectional LSTM models&lt;/li&gt;
&lt;li&gt;Implement the model with a &lt;a href=&quot;http://lstm.seas.harvard.edu/latex/&quot;&gt;different dataset&lt;/a&gt;. (You can easily mount this dataset in your FloydHub jobs with this flag &lt;code&gt;--data emilwallner/datasets/100k-html:data&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;Further experiments&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;Creating a solid random app/web generator with the corresponding syntax.&lt;/li&gt;
&lt;li&gt;Data for a sketch to app model. Auto-convert the app/web screenshots into sketches and use a GAN to create variety.&lt;/li&gt;
&lt;li&gt;Apply an attention layer to visualize the focus on the image for each prediction, &lt;a href=&quot;https://arxiv.org/abs/1502.03044&quot;&gt;similar to this model&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a framework for a modular approach. Say, having encoder models for fonts, one for color, another for layout and combine them with one decoder. A good start could be solid image features.&lt;/li&gt;
&lt;li&gt;Feed the network simple HTML components and teach it to generate animations using CSS. It would be fascinating to have an attention approach and visualize the focus on both input sources.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Huge thanks to&lt;/strong&gt; Tony Beltramelli and Jon Gold for answering questions, their research, and all their ideas. Thanks to Jason Brownlee for his stellar Keras tutorials, I included a few snippets from his tutorial in the core Keras implementation, and Beltramelli for providing the data. Also thanks to Qingping Hou, Charlie Harrington, Sai Soundararaj, Jannes Klaas, Claudio Cabral, Alain Demenet and Dylan Djian for reading drafts of this.&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;About Emil Wallner&lt;/h2&gt;
&lt;p&gt;This the fourth part of a multi-part blog series from Emil as he learns deep learning. Emil has spent a decade exploring human learning. He's worked for Oxford's business school, invested in education startups, and built an education technology business. Last year, he enrolled at &lt;a href=&quot;https://twitter.com/paulg/status/847844863727087616&quot;&gt;Ecole 42&lt;/a&gt; to apply his knowledge of human learning to machine learning.&lt;/p&gt;
&lt;p&gt;You can follow along with Emil on &lt;a href=&quot;https://twitter.com/EmilWallner&quot;&gt;Twitter&lt;/a&gt; and &lt;a href=&quot;https://medium.com/@emilwallner&quot;&gt;Medium&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 15:03:42 +0000</pubDate>
<dc:creator>narenst</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.floydhub.com/turning-design-mockups-into-code-with-deep-learning/</dc:identifier>
</item>
<item>
<title>North Carolina Is Ordered to Redraw Its Congressional Map</title>
<link>https://www.nytimes.com/2018/01/09/us/north-carolina-gerrymander.html?_r=0</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/01/09/us/north-carolina-gerrymander.html?_r=0</guid>
<description>&lt;div&gt;
&lt;div id=&quot;top-wrapper&quot; class=&quot;ResponsiveAd-topAd--3uZAv&quot;&gt;
&lt;div id=&quot;top-slug&quot; class=&quot;ResponsiveAd-hide--3eu5-&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;A panel of federal judges struck down North Carolina’s congressional map on Tuesday, condemning it as unconstitutional because Republicans had drawn the map seeking a political advantage.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The ruling was the first time that a federal court had blocked a congressional map because of a partisan gerrymander, and it instantly endangered Republican seats in the coming elections.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;Judge James A. Wynn Jr., in a biting 191-page opinion, said that Republicans in North Carolina’s Legislature had been “motivated by invidious partisan intent” as they carried out their obligation in 2016 to divide the state into 13 congressional districts, 10 of which are held by Republicans. The result, Judge Wynn wrote, violated the 14th Amendment’s guarantee of equal protection.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The ruling and its chief demand — that the Republican-dominated Legislature create a new landscape of congressional districts by Jan. 24 — infused new turmoil into the political chaos that has in recent years enveloped North Carolina. President Trump carried North Carolina in 2016, but the state elected a Democrat as its governor on the same day and in 2008 supported President Barack Obama.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The unusually blunt decision by the panel could lend momentum to two other challenges on gerrymandering that are already before the Supreme Court — and that the North Carolina case could join if Republicans make good on their vow to appeal Tuesday’s ruling.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;In October, the &lt;a rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; href=&quot;https://www.nytimes.com/2017/10/03/us/politics/gerrymandering-supreme-court-wisconsin.html&quot; title=&quot;&quot; class=&quot;styles-link--1Tap3&quot;&gt;court heard an appeal&lt;/a&gt; of another three-judge panel’s ruling that Republicans had unconstitutionally gerrymandered Wisconsin’s State Assembly in an attempt to relegate Democrats to a permanent minority. &lt;a rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; href=&quot;https://www.nytimes.com/2017/12/08/us/politics/supreme-court-partisan-gerrymandering.html&quot; title=&quot;&quot; class=&quot;styles-link--1Tap3&quot;&gt;In the second case&lt;/a&gt;, the justices will hear arguments by Maryland Republicans that the Democratic-controlled Legislature redrew House districts to flip a Republican-held seat to Democratic control.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The Supreme Court has &lt;a rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; href=&quot;https://www.nytimes.com/2017/10/01/us/wisconsin-supreme-court-gerrymander.html&quot; title=&quot;&quot; class=&quot;styles-link--1Tap3&quot;&gt;struggled without success&lt;/a&gt; for decades to develop a legal standard for determining when a partisan gerrymander crosses constitutional lines. The court once came close to ruling that such cases were political matters beyond its jurisdiction. But the rise of extreme partisan gerrymanders in the last decade, powered by a growing ideological divide and powerful map-drawing software, has brought the question back to the justices with new urgency. A Supreme Court ruling outlawing at least some such gerrymanders could reshape the political landscape.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;Fights over voting rights and election procedures have often taken center stage in Raleigh, North Carolina’s capital, and Tuesday’s ruling noted that “partisan advantage” had been a criterion lawmakers used when mulling how to map the state.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;Republican officials in the General Assembly said Tuesday evening that they intended to appeal the ruling, which many elected officials and political strategists were still scrambling to digest. Dallas Woodhouse, the executive director of the North Carolina Republican Party, criticized Judge Wynn and accused him of “waging a personal, partisan war on North Carolina Republicans.”&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;In a separate &lt;a rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/DallasWoodhouse/status/950878855321063425&quot; title=&quot;&quot; class=&quot;styles-link--1Tap3&quot;&gt;post&lt;/a&gt; on Twitter, Mr. Woodhouse argued that Judge Wynn had concluded that North Carolina’s Republicans “should not be allowed to draw election districts under any circumstances under any set of rules,” an effort he called “a hostile takeover” of the General Assembly and legislatures nationwide. Republicans could ask the Supreme Court to stay the decision and allow the disputed map to be used this year.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;But critics of the congressional map welcomed a decision that was notable for its tartness and urgency.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;“Clearly, the courts have realized that they do need to step in and police extreme partisan gerrymanders, and the court recognized that North Carolina’s gerrymander was one of the most extreme in history,” said Ruth Greenwood, senior legal counsel at the Campaign Legal Center and a lawyer representing some of the map’s challengers.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The chairman of the North Carolina Democratic Party, Wayne Goodwin, said the decision was “a major victory for North Carolina and people across the state whose voices were silenced by Republicans’ unconstitutional attempts to rig the system to their partisan advantage.”&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The judges issued their decision fewer than 24 hours before the General Assembly was to convene in Raleigh for a special session. The ruling unmistakably placed lawmakers on the clock, giving them two weeks to present a “remedial plan” and declaring that the court would institute its own map if it finds the new district lines unsatisfactory.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;“Politically, this gives hope to Democrats,” said J. Michael Bitzer, a professor of political science at Catawba College, which is near Charlotte. “I can imagine the Republicans being furious, but they have to see political reality, and it’s not just in the next two weeks: It’s come November.”&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;Professor Bitzer, though, cautioned that the ultimate political fallout would not become clearer until the courts settled what could be a cascade of appeals and injunctions.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;The ruling left little doubt about how the judges assessed the Legislature’s most recent map. Judge Wynn, who sits on the United States Court of Appeals for the Fourth Circuit and was a member of a special panel considering the congressional map, said that “a wealth of evidence proves the General Assembly’s intent to ‘subordinate’ the interests of non-Republican voters and ‘entrench’ Republican domination of the state’s congressional delegation.”&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;Most federal lawsuits are first heard by a district court, and later — if needed — by an appeals court and the Supreme Court. &lt;a rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; href=&quot;https://www.law.cornell.edu/uscode/text/28/2284&quot; title=&quot;&quot; class=&quot;styles-link--1Tap3&quot;&gt;But under federal law&lt;/a&gt;, constitutional challenges to the apportionment of House districts or statewide legislative bodies are automatically heard by three-judge panels, and appeals are taken directly to the Supreme Court.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;In addition to Judge Wynn, an appointee of Mr. Obama’s, Senior Judge W. Earl Britt of the Federal District Court in Raleigh joined the opinion. Judge Britt was appointed by President Jimmy Carter.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph--2eXNE elementStyles-paragraph--3EIcW elementStyles-toneNews--sRTft&quot;&gt;Judge William L. Osteen Jr., who was appointed by President George W. Bush and sits on the federal bench in Greensboro, said he agreed that the existing map violated the 14th Amendment, but he disputed other parts of Judge Wynn’s opinion, including the decision to appoint an independent expert to begin preparing an alternative map.&lt;/p&gt;
&lt;div class=&quot;bottom-of-article&quot; readability=&quot;25.795918367347&quot;&gt;

&lt;div class=&quot;elementStyles-printInformation--2VtfI elementStyles-toneNews--sRTft&quot; readability=&quot;7.2551020408163&quot;&gt;A version of this article appears in print on , on Page A1 of the New York edition with the headline: North Carolina Told to Redraw ‘Partisan’ Map&lt;span&gt;. &lt;a href=&quot;http://www.nytreprints.com/&quot;&gt;Order Reprints&lt;/a&gt; | &lt;a href=&quot;http://www.nytimes.com/pages/todayspaper/index.html&quot;&gt;Today’s Paper&lt;/a&gt; | &lt;a href=&quot;https://www.nytimes.com/subscriptions/Multiproduct/lp8HYKU.html?campaignId=48JQY&quot;&gt;Subscribe&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;

&lt;/div&gt;


&lt;div id=&quot;bottom-wrapper&quot; class=&quot;ResponsiveAd-bottomAd--1hHJW ResponsiveAd-storyBodyAd--35v2w&quot;&gt;
&lt;div id=&quot;bottom-slug&quot; class=&quot;ResponsiveAd-adSlug--3H3QM&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Wed, 10 Jan 2018 14:54:26 +0000</pubDate>
<dc:creator>kyleblarson</dc:creator>
<og:url>https://www.nytimes.com/2018/01/09/us/north-carolina-gerrymander.html</og:url>
<og:type>article</og:type>
<og:title>North Carolina Is Ordered to Redraw Its Congressional Map</og:title>
<og:image>https://static01.nyt.com/images/2018/01/10/us/10northcarolina/10northcarolina-facebookJumbo.jpg</og:image>
<og:description>The ruling was the first time that a federal court had blocked a congressional map because the judges believed it to be a partisan gerrymander.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/01/09/us/north-carolina-gerrymander.html?_r=0</dc:identifier>
</item>
<item>
<title>WhatsApp Encryption Security Flaws Could Allow Snoops to Slide into Group Chats</title>
<link>https://www.wired.com/story/whatsapp-security-flaws-encryption-group-chats/</link>
<guid isPermaLink="true" >https://www.wired.com/story/whatsapp-security-flaws-encryption-group-chats/</guid>
<description>&lt;p&gt;When WhatsApp added &lt;a href=&quot;https://www.wired.com/2016/04/forget-apple-vs-fbi-whatsapp-just-switched-encryption-billion-people/&quot;&gt;end-to-end encryption to every conversation&lt;/a&gt; for its billion users two years ago, the mobile messaging giant significantly raised the bar for the privacy of digital communications worldwide. But one of the tricky elements of encryption—and even trickier in a group chat setting—has always been ensuring that a secure conversation reaches only the intended audience, rather than some impostor or infiltrator. And according to new research from one team of German cryptographers, flaws in WhatsApp make infiltrating the app's group chats much easier than ought to be possible.&lt;/p&gt;
&lt;p&gt;At the Real World Crypto security conference Wednesday in Zurich, Switzerland, a group of researchers from the Ruhr University Bochum in Germany plan to describe a series of flaws in encrypted messaging apps including WhatsApp, Signal, and Threema. The team argues their findings undermine each app's security claims for multi-person group conversations to varying degrees.&lt;/p&gt;
&lt;p&gt;But while the Signal and Threema flaws they found were relatively harmless, the researchers unearthed far more significant gaps in WhatsApp's security: They say that anyone who controls WhatsApp's servers could effortlessly insert new people into an otherwise private group, even without the permission of the administrator who ostensibly controls access to that conversation.&lt;/p&gt;
&lt;div class=&quot;inset-left-component inset-left-component--pullquote&quot; readability=&quot;9&quot;&gt;
&lt;blockquote name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;'It's just a total screwup. There's no excuse.'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot;&gt;Matthew Green, Johns Hopkins University&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&quot;The confidentiality of the group is broken as soon as the uninvited member can obtain all the new messages and read them,&quot; says Paul Rösler, one of the Ruhr University researchers who co-authored a &lt;a href=&quot;https://eprint.iacr.org/2017/713.pdf&quot; target=&quot;_blank&quot;&gt;paper on the group messaging vulnerabilities&lt;/a&gt;. &quot;If I hear there's end-to-end encryption for both groups and two-party communications, that means adding of new members should be protected against. And if not, the value of encryption is very little.&quot;&lt;/p&gt;

&lt;p&gt;That any would-be eavesdropper would have to control the WhatsApp server limits the spying method to sophisticated hackers who could compromise those servers, WhatsApp staffers, or governments who legally coerce WhatsApp to give them access. But the premise of so-called end-to-end encryption has always been that even a compromised server shouldn't expose secrets. Only people in a conversation should be able to read WhatsApp's messages, not the servers themselves.&lt;/p&gt;
&lt;p&gt;&quot;If you build a system where everything comes down to trusting the server, you might as well dispense with all the complexity and forget about end-to-end encryption,&quot; says Matthew Green, a cryptography professor at Johns Hopkins University who reviewed the Ruhr University researchers' work. &quot;It's just a total screwup. There's no excuse.&quot;&lt;/p&gt;
&lt;h3&gt;Group Threat&lt;/h3&gt;
&lt;p&gt;The German researchers say their WhatsApp attack takes advantage of a simple bug. Only an administrator of a WhatsApp group can invite new members, but WhatsApp doesn't use any authentication mechanism for that invitation that its own servers can't spoof. So the server can simply add a new member to a group with no interaction on the part of the administrator, and the phone of every participant in the group then automatically shares secret keys with that new member, giving him or her full access to any future messages. (Messages sent prior to an illicit invitation, fortunately, still can't be decrypted.)&lt;/p&gt;
&lt;p&gt;Everyone in the group would see a message that a new member had joined, seemingly at the invitation of the unwitting administrator. If the administrator is watching closely, he or she could warn the group's intended members about the interloper and the spoofed invitation message.&lt;/p&gt;


&lt;p&gt;But the Ruhr University researchers and Johns Hopkins' Green point out several tricks that could be used to delay detection. Once an attacker with control of the WhatsApp server had access to the conversation, he or she could also use the server to selectively block any messages in the group, including those that ask questions, or provide warnings about the new entrant.&lt;/p&gt;
&lt;p&gt;&quot;He can cache all the message and then decide which get sent to whom and which not,&quot; says Rösler. And in groups with multiple administrators, the hijacked server could spoof different messages to each administrator, making it appear that another one had invited the eavesdropper, so that none raises an alarm. It could even prevent any administrator's attempt to remove the eavesdropper from the group if discovered.&lt;/p&gt;
&lt;h3&gt;Some Limits&lt;/h3&gt;
&lt;p&gt;In a phone call with WIRED, a WhatsApp spokesperson confirmed the researchers' findings, but emphasized that no one can &lt;em&gt;secretly&lt;/em&gt; add a new member to a group—a notification does go through that a new, unknown member has joined the group. The staffer added that if an administrator spots a fishy new addition to a group, they can always tell other users via another group, or in one-to-one messages. And the WhatsApp spokesperson also noted that preventing the Ruhr University researchers' attack would likely break a popular WhatsApp feature known as a &quot;group invite link&quot; that allows anyone to join a group simply by clicking on a URL.&lt;/p&gt;
&lt;p&gt;“We've looked at this issue carefully,&quot; a WhatsApp spokesperson wrote in an email. &quot;Existing members are notified when new people are added to a WhatsApp group. We built WhatsApp so group messages cannot be sent to a hidden user. The privacy and security of our users is incredibly important to WhatsApp. It's why we collect very little information and all messages sent on WhatsApp are end-to-end encrypted.”&lt;/p&gt;
&lt;p&gt;To be fair, this technique wouldn't be a very stealthy strategy in the long run for government spying. Sooner or later, users would likely notice that unexpected strangers were showing up in their chats. But that possibility of detection isn't an adequate solution to WhatsApp's underlying problem, argues John Hopkins' Green. &quot;That's like leaving the front door of a bank unlocked and then saying no one will rob it because there’s a security camera,&quot; Green says. &quot;It's dumb.&quot;&lt;/p&gt;
&lt;p&gt;The Ruhr University researchers say they alerted WhatsApp to the problem with group messaging security last July. In response to their report, WhatsApp's staff say they fixed one problem with a feature of their encryption that made it harder to crack future messages even after an attacker obtained one decryption key. But they told the researchers the group invitation bug they'd found was merely &quot;theoretical&quot; and didn't even qualify for the so-called bug bounty program run by Facebook, WhatsApp's corporate owner, in which security researchers are paid for reporting hackable flaws in the company's software.&lt;/p&gt;

&lt;div class=&quot;inset-left-component inset-left-component--pullquote&quot; readability=&quot;10&quot;&gt;
&lt;blockquote name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;'If I hear there's end-to-end encryption for both groups and two-party communications, that means adding of new members should be protected against.'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot;&gt;Paul Rösler, Ruhr University&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For some of WhatsApp's users, the stakes of the app's security could be high. WhatsApp's convenient group messaging system, in combination with its encryption promises, have made it a popular tool for &quot;whisper networks&quot; of grassroots organizing around sensitive or dangerous topics. Victims of sexual abuse and harassment have &lt;a href=&quot;https://www.theguardian.com/global/2017/nov/12/whatsapp-inside-secret-world-of-group-chat-politics-sexual-harassment&quot; target=&quot;_blank&quot;&gt;used it to organize the campaign against abusers&lt;/a&gt;, for instance. So have political insiders and Syria's embattled White Helmets, volunteer rescue brigades in Syria who are often targeted by the ruling regime.&lt;/p&gt;
&lt;p&gt;But the shoddy security around WhatsApp's group chats should make its most sensitive users wary of interlopers, Rösler argues. If WhatsApp were to comply with a government request—in the US or abroad—agents could join any private group and listen along.&lt;/p&gt;
&lt;h3&gt;Smaller Problems&lt;/h3&gt;
&lt;p&gt;The researchers dug up less serious flaws in the more specialized secure messaging apps Signal and Threema, too. They warn that Signal allows the same group chat attack as WhatsApp, letting uninvited eavesdroppers join groups. But in Signal's case, that eavesdropper would have to not only control the Signal server, but also know a virtually unguessable number called the Group ID. That essentially blocks the attack, unless the Group ID can be obtained from one of the group member's phones—in which case the group is likely already compromised. The researchers say that Open Whisper Systems, the non-profit that runs and maintains Signal, nonetheless responded to their work, saying that it's currently redesigning how Signal handles group messaging. Open Whisper Systems declined to comment on the record to WIRED about the Ruhr researchers' findings.&lt;/p&gt;
&lt;p&gt;For Threema, the researchers found even smaller bugs: An attacker who controls the server can replay messages or add users back into a group who have been removed. The researchers say Threema responded to their findings with a fix in an earlier version of its software.&lt;/p&gt;
&lt;p&gt;As for WhatsApp, the researchers write that the company could fix its more egregious group chat flaw by adding an authentication mechanism for new group invitations. Using a secret key only the administrator possesses to sign those invitations could let the admin prove his or her identity and prevent the spoofed invites, locking out uninvited guests. WhatsApp has yet to take their advice.&lt;/p&gt;
&lt;p&gt;Until they do, WhatsApp's most sensitive users should consider sticking with one-to-one conversations, or switching to a more secure group messaging app like Signal. Otherwise, they'd be wise to keep a vigilant eye out for any new entrants sliding into their private conversations. Until an administrator actively vouches for that newcomer, there's a small chance he or she might just be something other than a new friend.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 13:41:36 +0000</pubDate>
<dc:creator>uptown</dc:creator>
<og:type>article</og:type>
<og:title>WhatsApp Flaws Could Allow Snoops to Slide Into Group Chats</og:title>
<og:description>German researchers say that a flaw in the app's group-chat feature undermines its end-to-end encryption promises.</og:description>
<og:image>https://media.wired.com/photos/5a555100c6b8cf23abc74946/191:100/pass/whatsapp.jpg</og:image>
<og:url>https://www.wired.com/story/whatsapp-security-flaws-encryption-group-chats/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wired.com/story/whatsapp-security-flaws-encryption-group-chats/</dc:identifier>
</item>
<item>
<title>Learn to Code Ethereum DApps by Building Your Own Game</title>
<link>https://cryptozombies.io/</link>
<guid isPermaLink="true" >https://cryptozombies.io/</guid>
<description>&lt;h2 class=&quot;mb-4&quot;&gt;Who Made CryptoZombies and Why Is It Free?&lt;/h2&gt;
&lt;p&gt;CryptoZombies was made by the team at &lt;a href=&quot;https://loomx.io&quot; target=&quot;_blank&quot;&gt;Loom Network&lt;/a&gt;. We're building a platform for running large-scale applications on Ethereum sidechains.&lt;/p&gt;
&lt;p&gt;We think blockchains are capable of a lot more than just payments, and we want to get more developers thinking outside the box and trying to build large-scale DApps. Games are one of the areas where we think blockchain will really revolutionize things. So we built CryptoZombies to help educate and inspire the next generation of blockchain game devs.&lt;/p&gt;
&lt;p&gt;Aside from CryptoZombies, we're working on some really cool projects. If you'd like to follow us, get in touch for a project, or just say hi, you can find us on &lt;a href=&quot;https://twitter.com/loomnetwork&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; and our &lt;a href=&quot;https://t.me/loomnetwork&quot; target=&quot;_blank&quot;&gt;Telegram chat&lt;/a&gt;, or email us at &lt;a href=&quot;https://cryptozombies.io/cdn-cgi/l/email-protection#8ffbeaeee2cfe3e0e0e2f7a1e6e0&quot;&gt;&lt;span class=&quot;__cf_email__&quot; data-cfemail=&quot;255140444865494a4a485d0b4c4a&quot;&gt;[email protected]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 07:30:19 +0000</pubDate>
<dc:creator>alanfalcon</dc:creator>
<og:title>CryptoZombies - Learn to code games on Ethereum.</og:title>
<og:description>CryptoZombies is an interactive code school that teaches you to write smart contracts in Solidity through building your own crypto-collectables game.</og:description>
<og:image>https://cryptozombies.io/course/static/image/preview-zombie.png</og:image>
<og:url>OGURL</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cryptozombies.io/</dc:identifier>
</item>
<item>
<title>Let&amp;#039;s Encrypt tls-sni-01 disabled due to credible vulnerability report</title>
<link>https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5a55777ed9a9c1024c00b241</link>
<guid isPermaLink="true" >https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5a55777ed9a9c1024c00b241</guid>
<description>&lt;div class=&quot;row&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;col-xs-12 col-md-2&quot;&gt;
&lt;p class=&quot;pull-left text event_inner_title&quot;&gt;Components&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;col-xs-12 col-md-10&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;incident_section event_inner_text&quot;&gt;acme-staging-v02.api.letsencrypt.org (Staging), acme-staging.api.letsencrypt.org (Staging), acme-v01.api.letsencrypt.org (Production)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot; readability=&quot;6.5&quot;&gt;

&lt;div class=&quot;col-xs-12 col-md-10&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;incident_section event_inner_text&quot;&gt;High Assurance Datacenter 1, High Assurance Datacenter 2&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;div class=&quot;row&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;incident_time&quot;&gt;January 10, 2018 09:35 UTC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Identified]&lt;/strong&gt; &lt;span id=&quot;statusio_incident_message_5a55de7fc57eca4cc552e3df&quot; class=&quot;incident_message_details&quot;&gt;Update regarding TLS-SNI validation can be found here: https://community.letsencrypt.org/t/2018-01-09-issue-with-tls-sni-01-and-shared-hosting-infrastructure/49996&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;div class=&quot;row&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;incident_time&quot;&gt;January 10, 2018 02:16 UTC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Investigating]&lt;/strong&gt; &lt;span id=&quot;statusio_incident_message_5a55777ed9a9c1024c00b246&quot; class=&quot;incident_message_details&quot;&gt;The tls-sni challenge has been disabled due to strong credibility of a vulnerability report.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 10 Jan 2018 02:56:36 +0000</pubDate>
<dc:creator>regecks</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5a55777ed9a9c1024c00b241</dc:identifier>
</item>
<item>
<title>A Type of Road Junction that Kills Cyclists</title>
<link>http://singletrackworld.com/2018/01/collision-course-why-this-type-of-road-junction-will-keep-killing-cyclists/</link>
<guid isPermaLink="true" >http://singletrackworld.com/2018/01/collision-course-why-this-type-of-road-junction-will-keep-killing-cyclists/</guid>
<description>&lt;p&gt;Ipley Cross is a largely unremarkable place, an open plain where two roads cross: Beaulieu Road running north-to-south and Dibden Bottom running roughly east-to-west.&lt;/p&gt;
&lt;p&gt;Yet it is a place of notoriety. For good reason.&lt;/p&gt;
&lt;h3&gt;Two Deaths And A Lucky Escape&lt;/h3&gt;
&lt;p&gt;In August 2011 a 15 year old boy was cycling along Beaulieu Road when he was struck from his left by a driver who failed to see him and failed to give way at the junction. The boy was sent flying, but somehow escaped with only a broken collarbone.&lt;/p&gt;
&lt;p&gt;In May 2012 a second, almost identical incident occurred. Mark Brummell was cycling along Beaulieu Road when he was struck from his left by Stephen Chard, who failed to see Brummell and failed to give way at the junction. Brummell was killed.&lt;/p&gt;

&lt;p&gt;In December 2016 a third, almost identical incident occurred. Kieran Dix was cycling along Beaulieu Road when he was struck from his left by Viral Parekh, who failed to see Dix and failed to give way at the junction. Dix, too, was fatally injured.&lt;/p&gt;
&lt;p&gt;Chard was charged with causing death by careless driving and pleaded guilty; Parekh was charged with causing death by dangerous driving and pleaded guilty to causing death by careless driving, but was found not guilty of the more serious offence by a jury despite having driven through the junction’s “give way” line at 37mph without slowing.&lt;/p&gt;
&lt;p&gt;Two questions present themselves.&lt;/p&gt;
&lt;p&gt;Firstly, why it that the same collision keeps occurring at this junction? And secondly, why is such a standard of driving considered only to be “careless” rather than “dangerous”?&lt;/p&gt;
&lt;p&gt;As we shall see, the answers to both are closely related.&lt;/p&gt;
&lt;p&gt;By understanding one of the most likely causes for “failure to see” collisions at this junction, not only can we answer those questions but we can offer surprisingly straightforward solutions.&lt;/p&gt;
&lt;h3&gt;The Existing Layout&lt;/h3&gt;
&lt;p&gt;Ipley crossroads has a very simple layout: two straight sections of road cross at an angle of 69 degrees, with the north-south road (Beaulieu Road) having priority.&lt;/p&gt;
&lt;img class=&quot;wp-image-4716 size-full&quot; src=&quot;https://beyondthekerb.org.uk/wordpress/wp-content/uploads/2018/01/ipley-cross.jpg&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;320&quot; /&gt;The innocuous, yet dangerous Ipley crossroads
&lt;p&gt;Sight lines are good, although &lt;a href=&quot;https://goo.gl/maps/Yo8zWHf69Dq&quot;&gt;the rightward view from the easterly approach&lt;/a&gt; is affected somewhat by a gentle slope which rises to the northeast of the junction.&lt;/p&gt;
&lt;p&gt;So, if it’s so easy to see, why is it apparently so easy to fail to see?&lt;/p&gt;
&lt;h3&gt;Hidden In Plain View&lt;/h3&gt;
&lt;p&gt;Far and away the most plausible answer is a phenomenon known as “constant bearing, decreasing range”, or CBDR. Originally noted by sailors, it is the phenomenon whereby two vessels, or vehicles, moving at steady speeds in straight lines towards a collision will maintain the same bearing.&lt;/p&gt;
&lt;p&gt;If you’re a dab hand with basic trigonometry, you can probably figure the principles out for yourself, but if not then of course Wikipedia has an explanation.&lt;/p&gt;
&lt;p&gt;CBDR is required knowledge in maritime and aviation, where ships and aircraft travel significant distances with constant speed and bearing, but it is rarely taught in the context of highways, where motion is generally less constant. But it is nonetheless important where two straight routes cross: not just two roads, but also where roads and railways cross at unsignalled level crossings (a design which is rarely if ever found in the UK but which is not uncommon in parts of the US).&lt;/p&gt;
&lt;p&gt;Sailors and pilots are taught to detect ships and planes at a constant bearing and to take avoiding action. When it comes to drivers, however, things are very different, because almost all motor vehicles have a design flaw which means not only that a CBDR condition precedes a collision, but that unless (as we shall see) the driver does one of two things, the same condition means that the driver will never even see the phenomenon occurring.&lt;/p&gt;
&lt;p&gt;That design flaw is the front ‘A’ pillar, at the edge of the windscreen.&lt;/p&gt;
&lt;h3&gt;The Pillar Shadow&lt;/h3&gt;
&lt;p&gt;Take a look at this plan view of a Vauxhall Zafira (as driven by Viral Parekh). When the driver looks towards the horizon, the front pillar will obscure some of the view. The red ellipse represents an approximate cross section at that point, with the shaded area beyond it being obscured as a result.&lt;/p&gt;
&lt;img class=&quot;wp-image-4721 size-full&quot; src=&quot;https://beyondthekerb.org.uk/wordpress/wp-content/uploads/2018/01/zafira-pillar.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;280&quot; /&gt;The driver’s blind spot in a &lt;span class=&quot;s1&quot;&gt;Vauxhall Zafira.&lt;/span&gt;
&lt;p&gt;Once you extrapolate that obscured area, the extent of its effect is obvious. Here’s the same set of lines drawn on the Zafira, scaled up and overlaid on Ipley Cross.&lt;/p&gt;
&lt;img class=&quot;wp-image-4717 size-full&quot; src=&quot;https://beyondthekerb.org.uk/wordpress/wp-content/uploads/2018/01/ipley-cross-pillar-shadow.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;320&quot; /&gt;A projection of the driver’s blind spot.
&lt;p&gt;At the position shown, approximately 100m from the junction at Ipley Cross, the pillar obscures roughly 12m of Beaulieu road. That’s six bicycle lengths: enough to hide not just a cyclist but a small group of riders.&lt;/p&gt;
&lt;p&gt;Of course, as the driver approaches that junction, that obscured section of road moves towards the junction with them. As does the cyclist.&lt;/p&gt;
&lt;p&gt;Parekh’s car had a black box type device, which (contrary to his statements to police) recorded his approach to the junction at a steady speed of 37mph. At this speed it would have taken six seconds to cover the 100m to the collision, and the following image shows the approximate areas obscured by the Zafira’s pillar at six points in time representing each incremental second leading up to impact, with the red area showing the pillar shadow one second prior to impact.&lt;/p&gt;
&lt;img class=&quot;wp-image-4718 size-full&quot; src=&quot;https://beyondthekerb.org.uk/wordpress/wp-content/uploads/2018/01/ipley-cross-pillar-shadows-6-seconds.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;320&quot; /&gt;The obscured section of road becomes smaller as the driver nears the intersection.
&lt;p&gt;Although the obscured section of road becomes smaller as the driver approaches, it remains large enough to completely obscure a bicycle until less than a second prior to impact: too late for either party to react.&lt;/p&gt;
&lt;p&gt;The light blue line in the following diagram represents the approximate length of a bicycle and fits comfortably within the pillar shadow at one second before impact.&lt;/p&gt;
&lt;img class=&quot;wp-image-4720 size-full&quot; src=&quot;https://beyondthekerb.org.uk/wordpress/wp-content/uploads/2018/01/ipley-cross-pillar-shadows-bike-zoom.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;320&quot; /&gt;The light blue line represents the cyclist.
&lt;p&gt;Naturally, as per the conditions of a collision course being signalled by a constant bearing, for any speed of the approaching car there is a speed at which a cyclist will remain obscured by the front pillar almost until the point of impact. The angles of the triangles define a ratio of speeds, and with this geometry that ratio is a little over 3:1.&lt;/p&gt;
&lt;p&gt;So, in the case of a vehicle moving at 37mph westwards along Dibden Bottom, the CBDR speed southbound along Beaulieu Road is roughly 13.5mph. A very plausible speed for a cyclist.&lt;/p&gt;
&lt;p&gt;But such a degree of coincidence is actually not required.&lt;/p&gt;
&lt;p&gt;Due to the width of the pillar and the extent shadow it casts, which is much larger than a bicycle until impact is inevitable, true CBDR is not even necessary: it would be perfectly possible for a cyclist to be moving at around 17.5mph and then hit the brakes two seconds prior to impact, without ever appearing in the driver’s view.&lt;/p&gt;
&lt;p&gt;There’s a whole range of steady speeds at which someone could approach this junction from the north and remain obscured to a driver approaching at a steady speed from the east (and, likewise, also from the south and east respectively).&lt;/p&gt;
&lt;p&gt;Crucially, for any likely speed of an approaching car, any speed in that range is a perfectly feasible speed for a cyclist.&lt;/p&gt;
&lt;p&gt;But there’s one more thing about Ipley Cross that makes it especially dangerous.&lt;/p&gt;
&lt;h3&gt;Critical Angles&lt;/h3&gt;
&lt;p&gt;Keen triangle enthusiasts may have started thinking about this already, but there are of course three angles to consider here.&lt;/p&gt;
&lt;p&gt;The first is the angle between the two approach paths, which is a constant value defined by the road. At Ipley Cross this is 69 degrees.&lt;/p&gt;
&lt;p&gt;The second is the angle between the driver’s line of travel and the line from their eyes to the front pillar. This will vary depending on the vehicle and the driver, but the approximations above put the angle at around 17 degrees to the centre of the pillar.&lt;/p&gt;
&lt;p&gt;The third is the angle between the cyclist’s line of travel and the line from their eyes to the vehicle which will hit them.&lt;/p&gt;
&lt;p&gt;At this location, with this vehicle, it is 94 degrees.&lt;/p&gt;
&lt;p&gt;A car which is on a collision course at Ipley Cross with a cyclist who is obscured from the driver’s view by the front pillar will approach the cyclist from behind.&lt;/p&gt;
&lt;p&gt;Ipley Cross is constructed in such a way that not only is it possible for a careless driver to drive straight into a cyclist without seeing them until a fraction of a second before impact, but under the exact same circumstances it is also possible for that cyclist not to see the car that hits them until the same moment.&lt;/p&gt;
&lt;p&gt;If anyone were to take a highway engineer to a wide open space and ask them to design a junction which would readily enable two road users to collide with neither of them ever seeing each other, I doubt any would be able to manage it.&lt;/p&gt;
&lt;p&gt;Yet this is precisely what exists.&lt;/p&gt;
&lt;p&gt;The exact numbers, of course, depend on the driver’s height and seating position, the geometry of their vehicle, and—if you wanted to apply this to other locations—the angle at which the roads meet. The 3:1 speed ratio will vary slightly according to all these factors, and it will not always be the case that the deadly vehicle will be so hard for its victim to see, but the angle between a driver’s line of travel and the line between their eyes and the pillar will always be such that it is the slower road user who is at risk of not being seen.&lt;/p&gt;
&lt;p&gt;The point is this: given the design of almost every motor vehicle on the road, the crossing of two straight roads can make for a perfect storm when combined with typical speeds of drivers and cyclists. Ipley Cross represents possibly the most perfect of such storms.&lt;/p&gt;
&lt;p&gt;These collisions are, therefore, inevitable—aren’t they?&lt;/p&gt;
&lt;p&gt;Of course not.&lt;/p&gt;
&lt;h3&gt;Human Error: The Eternal Excuse&lt;/h3&gt;
&lt;p&gt;“None of us are perfect drivers,” remarked Parekh’s defence barrister, attributing the whole affair to “human error”.&lt;/p&gt;
&lt;p&gt;The human error in this case, and the other cases, may have been for the drivers to have maintained a constant speed (as we know Parekh did) without having physically moved their head either side of the pillar to rigorously scan the area ahead and to their right.&lt;/p&gt;
&lt;p&gt;There are two very simple solutions to the very real risk of a driver-vs-cyclist CBDR collision.&lt;/p&gt;
&lt;p&gt;Firstly, by slowing down significantly, any vehicle approaching from the right at a constant speed will move out of the obscured area and into view at the right of the windscreen.&lt;/p&gt;
&lt;p&gt;And secondly, significant movement of the head will bring previously obscured sections of road into view.&lt;/p&gt;
&lt;p&gt;It’s quite plausible that these simple strategies—either of them—could have prevented two fatalities at this one junction.&lt;/p&gt;
&lt;p&gt;One of those strategies can, however, be easily enforced.&lt;/p&gt;
&lt;h3&gt;A Simple Solution&lt;/h3&gt;
&lt;p&gt;In 2015, nearly three years after the death of Mark Brummell, a local resident sent a pencil sketch to councillor David Harrison, which he passed on to Hampshire County Council. It was &lt;a href=&quot;https://www.dharrison.org.uk/ipley-crossroads/&quot;&gt;a simple plan of Ipley Cross, with one modification&lt;/a&gt;: the western approach now had a short kink at its meeting with Beaulieu Road, making the junction offset.&lt;/p&gt;
&lt;img class=&quot;wp-image-4722 size-full&quot; src=&quot;https://beyondthekerb.org.uk/wordpress/wp-content/uploads/2018/01/ipley-cross-before-after.jpg&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;385&quot; /&gt;Before, and a potential after.
&lt;p&gt;With this design, no longer would it be reasonably possible for any driver to simply blow through the junction. Drivers would have to come almost to a stop.&lt;/p&gt;
&lt;p&gt;This design would, very simply, force the slowing down that eliminates the problem of CBDR.&lt;/p&gt;
&lt;p&gt;The image above is, of course, a mock-up. The junction was never altered.&lt;/p&gt;
&lt;p&gt;Two years after that simple sketch was handed to the authority responsible for the junction, Kieran Dix was dead.&lt;/p&gt;
&lt;h3&gt;Is This Not Dangerous?&lt;/h3&gt;
&lt;p&gt;And, lest we forget: what of the criminal proceedings against Parekh? Why is it not deemed “dangerous” to approach this junction at 37mph without slowing?&lt;/p&gt;
&lt;p&gt;We must note that there are two parts to the definition of dangerous driving. Firstly the standard of driving must be “far below what would be expected of a competent and careful driver”, and secondly it must be “obvious to a competent and careful driver that driving in that way would be dangerous”.&lt;/p&gt;
&lt;p&gt;People are often drawn to the term “far below”, which offers only a vague difference from “below” as used in the definition of careless driving, but generally the problematic clause is more likely the latter: it simply doesn’t matter how dangerous the driving is if it’s not obvious that it’s dangerous.&lt;/p&gt;
&lt;p&gt;If we don’t teach people that to approach a junction at a constant speed is inherently dangerous, and if we don’t offer a basic explanation as to why, then it is surely not obvious to most people.&lt;/p&gt;
&lt;p&gt;“Human error” may be real, but so are techniques to mitigate or eliminate its effects—and driver training is poor when it comes to equipping people with those techniques, let alone habituating them. (And let alone reviewing knowledge of those techniques every few years.)&lt;/p&gt;
&lt;p&gt;It would appear from media reports that Parekh’s defence was simply that he did not see Dix; the implied logic being that since he saw no other vehicles he felt no compulsion to slow down. The jury’s acquittal equally implies that they agree with this logic: it was not obvious to them that failing to see another vehicle is anything other than unavoidable.&lt;/p&gt;
&lt;p&gt;Yet, once the nature of a collision course is explained, the need to slow down becomes obvious.&lt;/p&gt;
&lt;p&gt;The truly contemptible human error is not in a single person carelessly failing to see. It is in our failure to continually improve the training and licensing system so as to render the need to slow down obvious; it is in our incessant support of a system which cries “human error” as an excuse to do nothing, rather than as a stimulus to understand that error in order to create a solution.&lt;/p&gt;

&lt;h3&gt;Constant Bearing, Reducing Distance&lt;/h3&gt;
&lt;p&gt;So we can easily answer both of our original questions: why the same collision keeps occurring at this junction, and why driving straight through it at a steady 37mph is not deemed “dangerous” by law.&lt;/p&gt;
&lt;p&gt;The question we still can’t answer is that of why, when clear solutions to both problems exist, no-one ever does anything about it.&lt;/p&gt;
&lt;p&gt;We remain on the same bearing, heading for the next collision.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://singletrackworld.com/author/bez/&quot;&gt;More road safety articles from Bez&lt;/a&gt;&lt;/h3&gt;




</description>
<pubDate>Wed, 10 Jan 2018 02:39:37 +0000</pubDate>
<dc:creator>thebent</dc:creator>
<og:url>http://singletrackworld.com/2018/01/collision-course-why-this-type-of-road-junction-will-keep-killing-cyclists/</og:url>
<og:title>Collision Course: Why This Type Of Road Junction Will Keep Killing Cyclists</og:title>
<og:description>Bez suggests that sometimes a steady driver can be the most dangerous driver</og:description>
<og:type>article</og:type>
<og:image>http://singletrackworld.com/wp-content/blogs.dir/1/files/2018/01/ipley-cross-before-after.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://singletrackworld.com/2018/01/collision-course-why-this-type-of-road-junction-will-keep-killing-cyclists/</dc:identifier>
</item>
<item>
<title>Trends to Avoid When Founding a Startup</title>
<link>http://www.fast.ai/2018/01/08/startups/</link>
<guid isPermaLink="true" >http://www.fast.ai/2018/01/08/startups/</guid>
<description>&lt;span class=&quot;post-date&quot;&gt;08 Jan 2018 &lt;em&gt;Rachel Thomas&lt;/em&gt;&lt;/span&gt; &lt;span&gt;[ &lt;a href=&quot;http://www.fast.ai/tag/advice&quot;&gt;&lt;code class=&quot;highligher-rouge&quot;&gt;&lt;nobr&gt;advice&lt;/nobr&gt;&lt;/code&gt;&lt;/a&gt; ]&lt;/span&gt;
&lt;p&gt;&lt;em&gt;This post was inspired by a round-table discussion I led on the topics of founding start-ups and personal branding at the &lt;a href=&quot;http://wimlworkshop.org/2017/&quot;&gt;Women in Machine Learning Workshop&lt;/a&gt;, co-located with deep learning conference &lt;a href=&quot;https://nips.cc/&quot;&gt;NIPS&lt;/a&gt;. I covered &lt;a href=&quot;http://www.fast.ai/2017/12/18/personal-brand/&quot;&gt;personal branding in a previous post&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I first moved to San Francisco in 2012, I was thrilled by how many startups there are here; the culture seemed so creative! Then I realized that most of the startups were &lt;strong&gt;indistinguishable&lt;/strong&gt; from one another: nearly everyone was following the &lt;strong&gt;same destructive trends&lt;/strong&gt; which are &lt;strong&gt;bad for employees&lt;/strong&gt; and &lt;strong&gt;bad for products&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you are working on a startup, I want you to know that there are options in how to to do things. After working at several startups and watching friends found start-ups, I took the leap and started fast.ai, together with Jeremy Howard. We are unusual in many ways: we have no interest in growing our tiny team; we are allergic to traditional venture capital; and we don’t plan to hire any deep learning PhDs. Yet we are still having a big impact!&lt;/p&gt;
&lt;img class=&quot;image&quot; width=&quot;450&quot; src=&quot;http://www.fast.ai/images/nikkei.jpg&quot; alt=&quot;fast.ai founders Jeremy and Rachel speaking at the Nikkei Innovation Forum&quot;/&gt; fast.ai founders Jeremy and Rachel speaking at the Nikkei Innovation Forum
&lt;p&gt;If you are going to avoid making the same mistakes that so many entrepreneurs have made, the first step is to be able to recognize them. I’ve identified 5 dominant narratives in Bay Area Tech start-ups that not only harm employees, but lead to weaker companies and worse products. This post offers a high-level overview, and I’ll dig into the trends in greater detail in future posts (adding links as I do so):&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Venture Capital&lt;/strong&gt; often pushes what could’ve been a successful small business to over-expand and ultimately fail; prevents companies from focusing their priorities; distracts from finding a monetization plan; causes conflict due to the misalignment of incentives between VCs and founders; and is full of far too many unethical bullies and thugs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hypergrowth&lt;/strong&gt; is nearly impossible to manage and leads to communication failures, redundant work, burnout, and high employee attrition.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trying to be “like a family”&lt;/strong&gt; severely limits your pool of potential employees, leaves you unprepared for conflict or HR incidents, and sets employees up to feel betrayed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attempting to productionize a PhD thesis&lt;/strong&gt; is rarely a good business plan. The priorities and values of academia and business are drastically different.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hiring a bunch of academic researchers&lt;/strong&gt; will not improve your product and harms your company by diverting so many resources (unless your goal is an aquihire).&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I recognize that there are many startups following these trends that have high-valuations on paper. However, that does not mean that these companies will succeed in the long-term (we’ve already seen many highly valued, high profile startups fail in recent years).&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-1-venture-capital&quot;&gt;Negative trend 1: Venture Capital&lt;/h2&gt;
&lt;p&gt;Imagine you were to create a business where you could profitably support yourself and 10 employees selling a product your customers liked, and after running it for 10 years you sold it for $10 million, of which half ended up in your pocket and half with your employees. Most VCs would consider that an &lt;strong&gt;abject failure&lt;/strong&gt;. They are looking for at least 100x returns, because all of their profits come from the one or two best performers in their portfolio.&lt;/p&gt;
&lt;p&gt;Therefore, VCs often push companies to grow too quickly, before they’ve nailed down product-market fit and monetization. Growing at a slow, sustainable rate helps keep your priorities in order. Funding yourself (through part-time consulting, saving up money in advance, and/or getting a simple product to market quickly) will force you to stay smaller and grow more slowly than VC funded businesses, but &lt;strong&gt;this is good&lt;/strong&gt;. Staying small keeps you focused on a &lt;strong&gt;small number of high-impact features&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I have seen a lot of deeply unethical, bullying, and downright illegal behavior by venture capitalists against close friends of mine. This is not just a few bad actors: the behavior is wide-spread, including by many well-known and ultra-wealthy investors (although founders often don’t speak out about it because of fear of professional repercussions).&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-2-hypergrowth&quot;&gt;Negative trend 2: Hypergrowth&lt;/h2&gt;
&lt;p&gt;Hypergrowth typically involves: &lt;strong&gt;chaos&lt;/strong&gt;, &lt;strong&gt;inefficiency&lt;/strong&gt;, and &lt;strong&gt;severe burn-out&lt;/strong&gt; (none of which is good for your business) I’ve worked at several companies that have doubled in size in just a year. It was always painful and chaotic. Communication broke down. There was duplicate and redundant work. Company politics became increasingly destructive. Burnout was endemic and many people quit. In all cases, &lt;strong&gt;the quality of the product suffered&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Management is hard, and management of hypergrowth is an order of magnitude harder. So many start-ups work their employees into the ground for the sake of short-term growth. Burnout is a very real and expensive problem in the tech industry, and hypergrowth routinely leads to burnout.&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-3-our-startup-is-like-a-family&quot;&gt;Negative trend 3: “Our startup is like a family”&lt;/h2&gt;
&lt;p&gt;Many startups claim that they’re creating a family-like culture amongst their employees: they don’t just work together, they go out after work, share the same hobbies, and are best friends. Doing this &lt;strong&gt;severely limits&lt;/strong&gt; your pool of potential employees. Employees with &lt;strong&gt;health problems, long commutes, families, outside hobbies, outside friendships, or from under-represented groups&lt;/strong&gt; may all struggle to thrive in such a culture.&lt;/p&gt;
&lt;p&gt;Secondly, you are making a promise you can’t keep, which sets people up for &lt;strong&gt;feeling betrayed&lt;/strong&gt;. You’re not actually a family; you are a company. You will need to make hard decisions for the sake of the business. You can’t actually offer people anything remotely close to lifelong loyalty or security, and it’s dishonest to implicitly do so.&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-4-ai-specific-productionizing-your-phd-thesis&quot;&gt;Negative trend 4 (AI specific): Productionizing your PhD thesis&lt;/h2&gt;
&lt;p&gt;The best approach to starting a start-up is to address a problem that people in the business world have. Your PhD thesis is not doing this, and it is highly unlikely that it will give you a competitive edge. You and your adviser picked your thesis topic because it’s an interesting technical problem with good opportunities to publish, &lt;strong&gt;not&lt;/strong&gt; because it has a large opportunity for impact in an underserved market with few barriers to entry.&lt;/p&gt;
&lt;p&gt;In the business world, products are not evaluated on underlying theoretical novelty, but on implementation, ease-of-use, effectiveness, and how they relate to revenues.&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-5-ai-specific-hiring-a-bunch-of-phds&quot;&gt;Negative trend 5 (AI specific): Hiring a bunch of PhDs&lt;/h2&gt;
&lt;p&gt;You almost certainly do not need a bunch of PhDs. There are so many things that go into a successful product beyond the algorithm: the product-market fit, software engineering that productionizes and deploys it, the act of selling it, supporting your users, etc. And even for highly technical aspects like deep learning, fast.ai has shown that people with 1-year of coding experience can become world-class deep learning practitioners; you don’t need to hire Stanford PhDs. By diverting valuable resources into academic research at your startup, you are hurting the product.&lt;/p&gt;
&lt;h2 id=&quot;my-journey-to-fastai&quot;&gt;My journey to fast.ai&lt;/h2&gt;
&lt;p&gt;Whilst avoiding these trends, fast.ai has accomplished far more than I ever expected in our first year and a half: over 100,000 people have started our &lt;a href=&quot;http://course.fast.ai/&quot;&gt;Practical Deep Learning for Coders course&lt;/a&gt; and fast.ai students have landed new jobs, launched companies, had their work &lt;a href=&quot;https://medium.com/@timanglade/how-hbos-silicon-valley-built-not-hotdog-with-mobile-tensorflow-keras-react-native-ef03260747f3&quot;&gt;shown on HBO&lt;/a&gt;, been &lt;a href=&quot;https://www.forbes.com/sites/mariyayao/2017/04/10/why-we-need-to-democratize-ai-machine-learning-education/#7b9552a81197&quot;&gt;featured in Forbes&lt;/a&gt;, won hackathons, and been accepted to the Google Brain AI Residency. Fast.ai has been mentioned in the &lt;a href=&quot;https://hbr.org/cover-story/2017/07/the-business-of-artificial-intelligence&quot;&gt;Harvard Business Review&lt;/a&gt; and the &lt;a href=&quot;https://www.nytimes.com/2017/10/22/technology/artificial-intelligence-experts-salaries.html&quot;&gt;New York Times&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fast.ai is solving a problem that I experienced first-hand: how hard it can be to break into deep learning and gain practical AI knowledge if you don’t have the “right” background and didn’t train with the academic stars of the field. I have seen and experienced some of the &lt;strong&gt;obstacles facing outsiders: inequality, discrimination, and lack of access&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I grew up in Texas (not in a major city) and attended a poor, predominantly Black public high school that was later ranked in &lt;strong&gt;the bottom 2% of Texas schools&lt;/strong&gt;. We had far fewer resources and opportunities compared to the wealthier, predominantly White schools around us. In graduate school, the sexism and harassment I experienced led me to abandon my dreams of becoming a math professor, although &lt;a href=&quot;https://medium.com/tech-diversity-files/if-you-think-women-in-tech-is-just-a-pipeline-problem-you-haven-t-been-paying-attention-cb7a2073b996&quot;&gt;I then experienced similar problems in the the tech industry&lt;/a&gt;. When I first became interested in deep learning in 2013, I found that &lt;a href=&quot;https://vimeo.com/214233053&quot;&gt;experts weren’t writing down the practical methods&lt;/a&gt; they used to actually get their research to work, instead just publishing the theory. I believe deep learning will have a huge impact across all industries, and I want the creators of this technology to be a more diverse and less exclusive group.&lt;/p&gt;
&lt;p&gt;With fast.ai, I’m finally able to do work completely in line with my values, on a tiny team characterized by trust and respect. Having a small team forces us to prioritize ruthlessly, and to focus only on what we value most or think will be highest impact. Something that has surprised me with fast.ai is how much I’ve been able to invest in my own career and own skills, in ways that I never could in previous jobs. Jeremy and I are committed to fast.ai for the long term, so neither of us has any interest in burning out. We believe you can have an impact with your work, without destroying your health and relationships.&lt;/p&gt;
&lt;p&gt;I’d love to see more small companies building useful products in a healthy and sustainable way.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;To discuss this post at Hacker News, &lt;a href=&quot;javascript:window.location=%22http://news.ycombinator.com/submitlink?u=%22+encodeURIComponent(document.location)+%22&amp;amp;t=%22+encodeURIComponent(&amp;quot;Five%20Trends%20to%20Avoid%20When%20Founding%20a%20Startup&amp;quot;)&quot;&gt;click here&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 00:12:24 +0000</pubDate>
<dc:creator>rmason</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.fast.ai/2018/01/08/startups/</dc:identifier>
</item>
<item>
<title>Intel has released new CPU microcode for download</title>
<link>https://downloadcenter.intel.com/download/27431/Linux-Processor-Microcode-Data-File</link>
<guid isPermaLink="true" >https://downloadcenter.intel.com/download/27431/Linux-Processor-Microcode-Data-File</guid>
<description>&lt;p&gt;The terms of the software license agreement included with any software you download will control your use of the software.&lt;/p&gt;&lt;div id=&quot;license-text&quot;&gt;INTEL SOFTWARE LICENSE AGREEMENT
&lt;p&gt;IMPORTANT - READ BEFORE COPYING, INSTALLING OR USING.&lt;/p&gt;
&lt;p&gt;Do not use or load this software and any associated materials (collectively,&lt;/p&gt;
&lt;p&gt;the &quot;Software&quot;) until you have carefully read the following terms and&lt;/p&gt;
&lt;p&gt;conditions. By loading or using the Software, you agree to the terms of this&lt;/p&gt;
&lt;p&gt;Agreement. If you do not wish to so agree, do not install or use the Software.&lt;/p&gt;
&lt;p&gt;LICENSES: Please Note:&lt;/p&gt;
&lt;p&gt;- If you are a network administrator, the &quot;Site License&quot; below shall&lt;/p&gt;
&lt;p&gt;apply to you.&lt;/p&gt;
&lt;p&gt;- If you are an end user, the &quot;Single User License&quot; shall apply to you.&lt;/p&gt;
&lt;p&gt;- If you are an original equipment manufacturer (OEM), the &quot;OEM License&quot;&lt;/p&gt;
&lt;p&gt;shall apply to you.&lt;/p&gt;
&lt;p&gt;SITE LICENSE. You may copy the Software onto your organization's computers&lt;/p&gt;
&lt;p&gt;for your organization's use, and you may make a reasonable number of&lt;/p&gt;
&lt;p&gt;back-up copies of the Software, subject to these conditions:&lt;/p&gt;
&lt;p&gt;1. This Software is licensed for use only in conjunction with Intel&lt;/p&gt;
&lt;p&gt;component products. Use of the Software in conjunction with non-Intel&lt;/p&gt;
&lt;p&gt;component products is not licensed hereunder.&lt;/p&gt;
&lt;p&gt;2. You may not copy, modify, rent, sell, distribute or transfer any part&lt;/p&gt;
&lt;p&gt;of the Software except as provided in this Agreement, and you agree to&lt;/p&gt;
&lt;p&gt;prevent unauthorized copying of the Software.&lt;/p&gt;
&lt;p&gt;3. You may not reverse engineer, decompile, or disassemble the Software.&lt;/p&gt;
&lt;p&gt;4. You may not sublicense or permit simultaneous use of the Software by&lt;/p&gt;
&lt;p&gt;more than one user.&lt;/p&gt;
&lt;p&gt;5. The Software may include portions offered on terms in addition to those&lt;/p&gt;
&lt;p&gt;set out here, as set out in a license accompanying those portions.&lt;/p&gt;
&lt;p&gt;SINGLE USER LICENSE. You may copy the Software onto a single computer for&lt;/p&gt;
&lt;p&gt;your personal, noncommercial use, and you may make one back-up copy of the&lt;/p&gt;
&lt;p&gt;Software, subject to these conditions:&lt;/p&gt;
&lt;p&gt;1. This Software is licensed for use only in conjunction with Intel&lt;/p&gt;
&lt;p&gt;component products. Use of the Software in conjunction with non-Intel&lt;/p&gt;
&lt;p&gt;component products is not licensed hereunder.&lt;/p&gt;
&lt;p&gt;2. You may not copy, modify, rent, sell, distribute or transfer any part&lt;/p&gt;
&lt;p&gt;of the Software except as provided in this Agreement, and you agree to&lt;/p&gt;
&lt;p&gt;prevent unauthorized copying of the Software.&lt;/p&gt;
&lt;p&gt;3. You may not reverse engineer, decompile, or disassemble the Software.&lt;/p&gt;
&lt;p&gt;4. You may not sublicense or permit simultaneous use of the Software by&lt;/p&gt;
&lt;p&gt;more than one user.&lt;/p&gt;
&lt;p&gt;5. The Software may include portions offered on terms in addition to those&lt;/p&gt;
&lt;p&gt;set out here, as set out in a license accompanying those portions.&lt;/p&gt;
&lt;p&gt;OEM LICENSE: You may reproduce and distribute the Software only as an&lt;/p&gt;
&lt;p&gt;integral part of or incorporated in Your product or as a standalone&lt;/p&gt;
&lt;p&gt;Software maintenance update for existing end users of Your products,&lt;/p&gt;
&lt;p&gt;excluding any other standalone products, subject to these conditions:&lt;/p&gt;
&lt;p&gt;1. This Software is licensed for use only in conjunction with Intel&lt;/p&gt;
&lt;p&gt;component products. Use of the Software in conjunction with non-Intel&lt;/p&gt;
&lt;p&gt;component products is not licensed hereunder.&lt;/p&gt;
&lt;p&gt;2. You may not copy, modify, rent, sell, distribute or transfer any part&lt;/p&gt;
&lt;p&gt;of the Software except as provided in this Agreement, and you agree to&lt;/p&gt;
&lt;p&gt;prevent unauthorized copying of the Software.&lt;/p&gt;
&lt;p&gt;3. You may not reverse engineer, decompile, or disassemble the Software.&lt;/p&gt;
&lt;p&gt;4. You may only distribute the Software to your customers pursuant to a&lt;/p&gt;
&lt;p&gt;written license agreement. Such license agreement may be a &quot;break-the-&lt;/p&gt;
&lt;p&gt;seal&quot; license agreement. At a minimum such license shall safeguard&lt;/p&gt;
&lt;p&gt;Intel's ownership rights to the Software.&lt;/p&gt;
&lt;p&gt;5. The Software may include portions offered on terms in addition to those&lt;/p&gt;
&lt;p&gt;set out here, as set out in a license accompanying those portions.&lt;/p&gt;
&lt;p&gt;NO OTHER RIGHTS. No rights or licenses are granted by Intel to You, expressly&lt;/p&gt;
&lt;p&gt;or by implication, with respect to any proprietary information or patent,&lt;/p&gt;
&lt;p&gt;copyright, mask work, trademark, trade secret, or other intellectual property&lt;/p&gt;
&lt;p&gt;right owned or controlled by Intel, except as expressly provided in this&lt;/p&gt;
&lt;p&gt;Agreement.&lt;/p&gt;
&lt;p&gt;OWNERSHIP OF SOFTWARE AND COPYRIGHTS. Title to all copies of the Software&lt;/p&gt;
&lt;p&gt;remains with Intel or its suppliers. The Software is copyrighted and&lt;/p&gt;
&lt;p&gt;protected by the laws of the United States and other countries, and&lt;/p&gt;
&lt;p&gt;international treaty provisions. You may not remove any copyright notices&lt;/p&gt;
&lt;p&gt;from the Software. Intel may make changes to the Software, or to items&lt;/p&gt;
&lt;p&gt;referenced therein, at any time without notice, but is not obligated to&lt;/p&gt;
&lt;p&gt;support or update the Software. Except as otherwise expressly provided, Intel&lt;/p&gt;
&lt;p&gt;grants no express or implied right under Intel patents, copyrights,&lt;/p&gt;
&lt;p&gt;trademarks, or other intellectual property rights. You may transfer the&lt;/p&gt;
&lt;p&gt;Software only if the recipient agrees to be fully bound by these terms and if&lt;/p&gt;
&lt;p&gt;you retain no copies of the Software.&lt;/p&gt;
&lt;p&gt;LIMITED MEDIA WARRANTY. If the Software has been delivered by Intel on&lt;/p&gt;
&lt;p&gt;physical media, Intel warrants the media to be free from material physical&lt;/p&gt;
&lt;p&gt;defects for a period of ninety days after delivery by Intel. If such a defect&lt;/p&gt;
&lt;p&gt;is found, return the media to Intel for replacement or alternate delivery of&lt;/p&gt;
&lt;p&gt;the Software as Intel may select.&lt;/p&gt;
&lt;p&gt;EXCLUSION OF OTHER WARRANTIES. EXCEPT AS PROVIDED ABOVE, THE SOFTWARE IS&lt;/p&gt;
&lt;p&gt;PROVIDED &quot;AS IS&quot; WITHOUT ANY EXPRESS OR IMPLIED WARRANTY OF ANY KIND&lt;/p&gt;
&lt;p&gt;INCLUDING WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT, OR FITNESS FOR A&lt;/p&gt;
&lt;p&gt;PARTICULAR PURPOSE. Intel does not warrant or assume responsibility for the&lt;/p&gt;
&lt;p&gt;accuracy or completeness of any information, text, graphics, links or other&lt;/p&gt;
&lt;p&gt;items contained within the Software.&lt;/p&gt;
&lt;p&gt;LIMITATION OF LIABILITY. IN NO EVENT SHALL INTEL OR ITS SUPPLIERS BE LIABLE&lt;/p&gt;
&lt;p&gt;FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, LOST PROFITS,&lt;/p&gt;
&lt;p&gt;BUSINESS INTERRUPTION, OR LOST INFORMATION) ARISING OUT OF THE USE OF OR&lt;/p&gt;
&lt;p&gt;INABILITY TO USE THE SOFTWARE, EVEN IF INTEL HAS BEEN ADVISED OF THE&lt;/p&gt;
&lt;p&gt;POSSIBILITY OF SUCH DAMAGES. SOME JURISDICTIONS PROHIBIT EXCLUSION OR&lt;/p&gt;
&lt;p&gt;LIMITATION OF LIABILITY FOR IMPLIED WARRANTIES OR CONSEQUENTIAL OR INCIDENTAL&lt;/p&gt;
&lt;p&gt;DAMAGES, SO THE ABOVE LIMITATION MAY NOT APPLY TO YOU. YOU MAY ALSO HAVE&lt;/p&gt;
&lt;p&gt;OTHER LEGAL RIGHTS THAT VARY FROM JURISDICTION TO JURISDICTION.&lt;/p&gt;
&lt;p&gt;TERMINATION OF THIS AGREEMENT. Intel may terminate this Agreement at any time&lt;/p&gt;
&lt;p&gt;if you violate its terms. Upon termination, you will immediately destroy the&lt;/p&gt;
&lt;p&gt;Software or return all copies of the Software to Intel.&lt;/p&gt;
&lt;p&gt;APPLICABLE LAWS. Claims arising under this Agreement shall be governed by the&lt;/p&gt;
&lt;p&gt;laws of California, excluding its principles of conflict of laws and the&lt;/p&gt;
&lt;p&gt;United Nations Convention on Contracts for the Sale of Goods. You may not&lt;/p&gt;
&lt;p&gt;export the Software in violation of applicable export laws and regulations.&lt;/p&gt;
&lt;p&gt;Intel is not obligated under any other agreements unless they are in writing&lt;/p&gt;
&lt;p&gt;and signed by an authorized representative of Intel.&lt;/p&gt;
&lt;p&gt;GOVERNMENT RESTRICTED RIGHTS. The Software is provided with &quot;RESTRICTED&lt;/p&gt;
&lt;p&gt;RIGHTS.&quot; Use, duplication, or disclosure by the Government is subject to&lt;/p&gt;
&lt;p&gt;restrictions as set forth in FAR52.227-14 and DFAR252.227-7013 et seq. or its&lt;/p&gt;
&lt;p&gt;successor. Use of the Software by the Government constitutes acknowledgment&lt;/p&gt;
&lt;p&gt;of Intel's proprietary rights therein. Contractor or Manufacturer is Intel&lt;/p&gt;
&lt;p&gt;2200 Mission College Blvd., Santa Clara, CA 95052.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 10 Jan 2018 00:12:04 +0000</pubDate>
<dc:creator>mrmondo</dc:creator>
<og:url>https://downloadcenter.intel.com/download/27431/Linux-Processor-Microcode-Data-File</og:url>
<og:title>Download Linux* Processor Microcode Data File</og:title>
<og:type>article</og:type>
<og:description>Linux* Processor Microcode Data File</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://downloadcenter.intel.com/download/27431/Linux-Processor-Microcode-Data-File</dc:identifier>
</item>
</channel>
</rss>