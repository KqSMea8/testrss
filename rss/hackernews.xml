<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Certificates for localhost</title>
<link>https://letsencrypt.org/docs/certificates-for-localhost/</link>
<guid isPermaLink="true" >https://letsencrypt.org/docs/certificates-for-localhost/</guid>
<description>&lt;p&gt;Last updated: December 21, 2017 | &lt;a href=&quot;https://letsencrypt.org/docs&quot;&gt;See all Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sometimes people want to get a certificate for the hostname “localhost”, either for use in local development, or for distribution with a native application that needs to communicate with a web application. Let’s Encrypt can’t provide certificates for “localhost” because nobody uniquely owns it, and it’s not rooted in a top level domain like “.com” or “.net”. It’s possible to set up your own domain name that happens to resolve to 127.0.0.1, and get a certificate for it using the DNS challenge. However, this is generally a bad idea and there are better options.&lt;/p&gt;

&lt;p&gt;If you’re developing a web app, it’s useful to run a local web server like Apache or Nginx, and access it via &lt;a href=&quot;http://localhost:8000/&quot;&gt;http://localhost:8000/&lt;/a&gt; in your web browser. However, web browsers behave in subtly different ways on HTTP vs HTTPS pages. The main difference: On an HTTPS page, any requests to load JavaScript from an HTTP URL will be blocked. So if you’re developing locally using HTTP, you might add a script tag that works fine on your development machine, but breaks when you deploy to your HTTPS production site. To catch this kind of problem, it’s useful to set up HTTPS on your local web server. However, you don’t want to see certificate warnings all the time. How do you get the green lock locally?&lt;/p&gt;
&lt;p&gt;The best option: Generate your own certificate, either self-signed or signed by a local root, and trust it in your operating system’s trust store. Then use that certificate in your local web server. See below for details.&lt;/p&gt;

&lt;p&gt;Sometimes developers want to offer a downloadable native app that can be used alongside a web site to offer extra features. For instance, the Dropbox and Spotify desktop apps scan for files from across your machine, which a web app would not be allowed to do. One common approach is for these native apps to offer a web service on localhost, and have the web app make requests to it via XMLHTTPRequest (XHR) or WebSockets. The web app almost always uses HTTPS, which means that browsers will forbid it from making XHR or WebSockets requests to non-secure URLs. This is called Mixed Content Blocking. To communicate with the web app, the native app needs to provide a secure web service.&lt;/p&gt;
&lt;p&gt;Fortunately, modern browsers &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=607878&quot;&gt;consider&lt;/a&gt; “&lt;a href=&quot;http://127.0.0.1:8000/&amp;quot;&quot;&gt;http://127.0.0.1:8000/&quot;&lt;/a&gt; to be a &lt;a href=&quot;https://www.w3.org/TR/secure-contexts/#is-origin-trustworthy&quot;&gt;“potentially trustworthy”&lt;/a&gt; URL because it refers to a loopback address. Traffic sent to 127.0.0.1 is guaranteed not to leave your machine, and so is considered automatically secure against network interception. That means if your web app is HTTPS, and you offer a native app web service on 127.0.0.1, the two can happily communicate via XHR. Unfortunately, &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-dnsop-let-localhost-be-localhost-02&quot;&gt;localhost doesn’t yet get the same treatment&lt;/a&gt;. Also, WebSockets don’t get this treatment for either name.&lt;/p&gt;
&lt;p&gt;You might be tempted to work around these limitations by setting up a domain name in the global DNS that happens to resolve to 127.0.0.1 (for instance, localhost.example.com), getting a certificate for that domain name, shipping that certificate and corresponding private key with your native app, and telling your web app to communicate with &lt;a href=&quot;https://localhost.example.com:8000/&quot;&gt;https://localhost.example.com:8000/&lt;/a&gt; instead of &lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt;. &lt;em&gt;Don’t do this.&lt;/em&gt; It will put your users at risk, and your certificate may get revoked.&lt;/p&gt;
&lt;p&gt;By introducing a domain name instead of an IP address, you make it possible for an attacker to Man in the Middle (MitM) the DNS lookup and inject a response that points to a different IP address. The attacker can then pretend to be the local app and send fake responses back to the web app, which may compromise your account on the web app side, depending on how it is designed.&lt;/p&gt;
&lt;p&gt;The successful MitM in this situation is possible because in order to make it work, you had to ship the private key to your certificate with your native app. That means that anybody who downloads your native app gets a copy of the private key, including the attacker. This is considered a compromise of your private key, and your Certificate Authority (CA) is required to revoke your certificate if they become aware of it. &lt;a href=&quot;https://groups.google.com/d/msg/mozilla.dev.security.policy/eV89JXcsBC0/wsj5zpbbAQAJ&quot;&gt;Many native apps&lt;/a&gt; have &lt;a href=&quot;https://groups.google.com/d/msg/mozilla.dev.security.policy/T6emeoE-lCU/-k-A2dEdAQAJ&quot;&gt;had their certificates&lt;/a&gt; revoked for &lt;a href=&quot;https://groups.google.com/d/msg/mozilla.dev.security.policy/pk039T_wPrI/tGnFDFTnCQAJ&quot;&gt;shipping their private key&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, this leaves native apps without a lot of good, secure options to communicate with their corresponding web site. And the situation may get trickier in the future if browsers further &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=378566&quot;&gt;tighten access to localhost from the web&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also note that exporting a web service that offers privileged native APIs is inherently risky, because web sites that you didn’t intend to authorize may access them. If you go down this route, make sure to read up on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt;, use Access-Control-Allow-Origin, and make sure to use a memory-safe HTTP parser, because even origins you don’t allow access to can send preflight requests, which may be able to exploit bugs in your parser.&lt;/p&gt;

&lt;p&gt;Anyone can make their own certificates without help from a CA. The only difference is that certificates you make yourself won’t be trusted by anyone else. For local development, that’s fine.&lt;/p&gt;
&lt;p&gt;The simplest way to generate a private key and self-signed certificate for localhost is with this openssl command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;openssl req -x509 -out localhost.crt -keyout localhost.key \
  -newkey rsa:2048 -nodes -sha256 \
  -subj '/CN=localhost' -extensions EXT -config &amp;lt;( \
   printf &quot;[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth&quot;)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can then configure your local web server with localhost.crt and localhost.key, and install localhost.crt in your list of locally trusted roots.&lt;/p&gt;
&lt;p&gt;If you want a little more realism in your development certificates, you can use &lt;a href=&quot;https://github.com/jsha/minica&quot;&gt;minica&lt;/a&gt; to generate your own local root certificate, and issue end-entity (aka leaf) certificates signed by it. You would then import the root certificate rather than a self-signed end-entity certificate.&lt;/p&gt;
&lt;p&gt;You can also choose to use a domain with dots in it, like “www.localhost”, by adding it to /etc/hosts as an alias to 127.0.0.1. This subtly changes how browsers handle cookie storage.&lt;/p&gt;
</description>
<pubDate>Wed, 20 Jun 2018 18:39:46 +0000</pubDate>
<dc:creator>colinprince</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://letsencrypt.org/docs/certificates-for-localhost/</dc:identifier>
</item>
<item>
<title>YAML: probably not so great after all (2017)</title>
<link>https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html</link>
<guid isPermaLink="true" >https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html</guid>
<description>&lt;p&gt;I previously wrote &lt;a href=&quot;http://arp242.net/weblog/JSON_as_configuration_files-_please_dont.html&quot;&gt;why using JSON for human-editable configuration files is a bad idea&lt;/a&gt;. Today we’re going to look at some general problems with the YAML format.&lt;/p&gt;
&lt;h2 id=&quot;insecure-by-default&quot;&gt;Insecure by default&lt;/h2&gt;
&lt;p&gt;YAML is insecure by default. Loading a user-provided (untrusted) YAML string needs careful consideration.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;!!python/object/apply:os.system
args: ['ls /']
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Running it with &lt;code&gt;print(yaml.load(open('a.yaml')))&lt;/code&gt; should give you something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;bin   etc   lib    lost+found  opt   root  sbin  tmp  var sys
boot  dev   efi    home        lib64 mnt   proc  run  srv usr
0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Many other languages (including Ruby and PHP&lt;sup id=&quot;fnref:1&quot;&gt;&lt;/sup&gt;) are also unsafe by default. &lt;a href=&quot;https://github.com/search?q=yaml.load&amp;amp;type=Code&amp;amp;utf8=%E2%9C%93&quot;&gt;Searching for &lt;code&gt;yaml.load&lt;/code&gt; on GitHub&lt;/a&gt; gives a whopping 2.8 million results. &lt;a href=&quot;https://github.com/search?q=yaml.safe_load&amp;amp;type=Code&amp;amp;utf8=%E2%9C%93&quot;&gt;&lt;code&gt;yaml.safe_load&lt;/code&gt;&lt;/a&gt; only gives 26,000 results.&lt;/p&gt;
&lt;p&gt;Mind you, many of those &lt;code&gt;yaml.load()&lt;/code&gt;s are fine – loading in a config file with &lt;code&gt;yaml.load()&lt;/code&gt; is often okay since it’s usually (though not always!) from a ‘trusted source’, and many are from test files with static YAML. But still, one can’t help but wonder how many exploits are hidden in those 2.8 million results.&lt;/p&gt;
&lt;p&gt;This is not a theoretical problem. In 2013 &lt;a href=&quot;https://www.sitepoint.com/anatomy-of-an-exploit-an-in-depth-look-at-the-rails-yaml-vulnerability/&quot;&gt;every Ruby on Rails application ever written was found to be vulnerable&lt;/a&gt; to remote code execution due to exactly this problem.&lt;/p&gt;
&lt;p&gt;One might argue this is not really the fault of the YAML format &lt;em&gt;as such&lt;/em&gt;, but rather the fault of the libraries implementing it wrong, but it seems to be the case that the majority of libraries are unsafe by default (especially the dynamic languages), so &lt;em&gt;de-facto&lt;/em&gt; it is a problem with YAML.&lt;/p&gt;
&lt;p&gt;One might also argue that fixing it is as easy as replacing &lt;code&gt;load()&lt;/code&gt; with &lt;code&gt;safe_load()&lt;/code&gt;, but many people are unaware of the problem, and even &lt;em&gt;if&lt;/em&gt; you’re aware of it, it’s one of those things that can be easy to forget. It’s pretty bad API design.&lt;/p&gt;
&lt;h2 id=&quot;can-be-hard-to-edit-especially-for-large-files&quot;&gt;Can be hard to edit, especially for large files&lt;/h2&gt;
&lt;p&gt;YAML files can be hard to edit, and this difficulty grows fast as the file gets larger.&lt;/p&gt;
&lt;p&gt;A good example of this are Ruby on Rails’ translation files; for example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;en:
   formtastic:
         labels:
           title: &quot;Title&quot;  # Default global value
           article:
                 body: &quot;Article content&quot;
           post:
                 new:
                   title: &quot;Choose a title...&quot;
                   body: &quot;Write something...&quot;
                 edit:
                   title: &quot;Edit title&quot;
                   body: &quot;Edit body&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This still looks okay, right? But what if this file has 100 lines? Or 1,000 lines? It is difficult to see “where” in the file you are because it may be off the screen. You’ll need to scroll up, but then you need to keep track of the indentation, which can be pretty hard even with indentation guides, especially since 2-space indentation is the norm and &lt;a href=&quot;http://www.yaml.org/faq.html&quot;&gt;tab indentation is forbidden&lt;/a&gt;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;And accidentally getting the indentation wrong often isn’t an error; it will often just deserialize to something you didn’t intend. Happy debugging!&lt;/p&gt;
&lt;p&gt;I’ve been happily programming Python for over a decade, so I’m used to significant whitespace, but sometimes I’m still struggling with YAML. In Python the drawbacks and loss of clarity are contained by not having functions that are several pages long, but data or configuration files have no such natural limits to their length.&lt;/p&gt;
&lt;p&gt;For small files this is not a problem; but it really doesn’t scale well to larger files, especially not if you want to edit them later on.&lt;/p&gt;
&lt;h2 id=&quot;its-pretty-complex&quot;&gt;It’s pretty complex&lt;/h2&gt;
&lt;p&gt;YAML may seem ‘simple’ and ‘obvious’ when glancing at a basic example, but turns out it’s not. The &lt;a href=&quot;http://yaml.org/spec/1.2/spec.pdf&quot;&gt;YAML spec&lt;/a&gt; is 23,449 words; for comparison, &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; is 3,339 words, &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf&quot;&gt;JSON&lt;/a&gt; is 1,969 words, and &lt;a href=&quot;https://www.w3.org/TR/REC-xml/&quot;&gt;XML&lt;/a&gt; is 20,603 words.&lt;/p&gt;
&lt;p&gt;Who among us have read all that? Who among us have read and &lt;em&gt;understood&lt;/em&gt; all of that? Who among of have read, &lt;em&gt;understood&lt;/em&gt;, and &lt;strong&gt;remembered&lt;/strong&gt; all of that?&lt;/p&gt;
&lt;p&gt;For example did you know there are &lt;a href=&quot;http://stackoverflow.com/a/21699210/660921&quot;&gt;&lt;em&gt;nine&lt;/em&gt; ways to write a multi-line string in YAML&lt;/a&gt; with subtly different behaviour?&lt;/p&gt;
&lt;p&gt;Yeah :-/&lt;/p&gt;
&lt;p&gt;That post gets even more interesting if you look at &lt;a href=&quot;http://stackoverflow.com/posts/21699210/revisions&quot;&gt;its revision history&lt;/a&gt;, as the author of the post discovers more and more ways to do this and more of the subtleties involved.&lt;/p&gt;
&lt;p&gt;It’s telling that the YAML spec starts with a preview, which states (emphases mine):&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;This section provides a quick glimpse into the expressive power of YAML. &lt;strong&gt;It is not expected that the first-time reader grok all of the examples&lt;/strong&gt;. Rather, these selections are used as motivation for the remainder of the specification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;surprising-behaviour&quot;&gt;Surprising behaviour&lt;/h3&gt;
&lt;p&gt;What does this parse to (examples courtesy of &lt;a href=&quot;https://github.com/crdoconnor/strictyaml/blob/master/FAQ.rst#what-is-wrong-with-implicit-typing&quot;&gt;Colm O’Connor&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;- Don Corleone: Do you have faith in my judgment?
- Clemenza: Yes
- Don Corleone: Do I have your loyalty?
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yup!&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[
        {'Don Corleone': 'Do you have faith in my judgment?'},
        {'Clemenza': True},
        {'Don Corleone': 'Do I have your loyalty?'}
]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or what about:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python: 3.5.3
postgres: 9.3
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;3.5.3&lt;/code&gt; gets recognized as as string, but &lt;code&gt;9.3&lt;/code&gt; gets recognized as a number instead of a string:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{'python': '3.5.3', 'postgres': 9.3}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or what about:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Effenaar: Eindhoven
013: Tilburg
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;013 is a popular music Venue in Tilburg, but YAML will send you the wrong way since it’s parsed as an octal number:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{11: 'Tilburg', 'Effenaar': 'Eindhoven'}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All of this – and more – is why many experienced YAMLers will often quote all strings, even when it’s not strictly required. Many people don’t use quotes, and it can be easy to forget especially if the rest of the file – possibly written by other people – doesn’t use quotes.&lt;/p&gt;
&lt;h3 id=&quot;its-not-portable&quot;&gt;It’s not portable&lt;/h3&gt;
&lt;p&gt;Because it’s so complex, its claims of portability have been greatly exaggerated. For example consider this example taken from the YAML spec:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;? - Detroit Tigers
  - Chicago cubs
:
  - 2001-07-23

? [ New York Yankees,
        Atlanta Braves ]
: [ 2001-07-02, 2001-08-12,
        2001-08-14 ]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Aside from the fact that most readers of this probably won’t even know what this does, try parsing it in Python with PyYAML:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;yaml.constructor.ConstructorError: while constructing a mapping
  in &quot;a.yaml&quot;, line 1, column 1
found unhashable key
  in &quot;a.yaml&quot;, line 1, column 3
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Ruby it works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{
        [&quot;Detroit Tigers&quot;, &quot;Chicago cubs&quot;] =&amp;gt; [
                #&amp;lt;Date: 2001-07-23 ((2452114j,0s,0n),+0s,2299161j)&amp;gt;
        ],
        [&quot;New York Yankees&quot;, &quot;Atlanta Braves&quot;] =&amp;gt; [
                #&amp;lt;Date: 2001-07-02 ((2452093j,0s,0n),+0s,2299161j)&amp;gt;,
                #&amp;lt;Date: 2001-08-12 ((2452134j,0s,0n),+0s,2299161j)&amp;gt;,
                #&amp;lt;Date: 2001-08-14 ((2452136j,0s,0n),+0s,2299161j)&amp;gt;
        ]
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason for this is because you can’t use a list as a dict key in Python:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; {['a']: 'zxc'}
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  TypeError: unhashable type: 'list'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And this restriction is not unique to Python; common languages such as PHP, JavaScript, and Go all share this restriction.&lt;/p&gt;
&lt;p&gt;So use this in a YAML file, and you won’t be able to read it in most languages.&lt;/p&gt;
&lt;p&gt;Here’s another example again taken from the examples section of the YAML spec:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Ranking of 1998 home runs
---
- Mark McGwire
- Sammy Sosa
- Ken Griffey

# Team ranking
---
- Chicago Cubs
- St Louis Cardinals
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Python says:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;yaml.composer.ComposerError: expected a single document in the stream
  in &quot;a.yaml&quot;, line 3, column 1
but found another document
  in &quot;a.yaml&quot;, line 8, column 1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While Ruby outputs:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[&quot;Mark McGwire&quot;, &quot;Sammy Sosa&quot;, &quot;Ken Griffey&quot;]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason for this is that there are multiple YAML documents in a single file (&lt;code&gt;---&lt;/code&gt; start the document). In Python there is the &lt;code&gt;load_all()&lt;/code&gt; function to parse all documents. Ruby’s &lt;code&gt;load()&lt;/code&gt; just loads the first document, and as near as I can tell, doesn’t have a way to load multiple documents.&lt;/p&gt;
&lt;p&gt;I’m fairly sure that many more incompatibilities more subtle than this can be found. Are you &lt;em&gt;sure&lt;/em&gt; that every YAML parser will treat &lt;code&gt;foo:bar&lt;/code&gt; as a string, or &lt;code&gt;0x42&lt;/code&gt; as the integer &lt;code&gt;66&lt;/code&gt;, etc.?&lt;/p&gt;
&lt;h2 id=&quot;goals-achieved&quot;&gt;Goals achieved?&lt;/h2&gt;
&lt;p&gt;The spec states:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;The design goals for YAML are, in decreasing priority:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;YAML is easily readable by humans.&lt;/li&gt;
&lt;li&gt;YAML data is portable between programming languages.&lt;/li&gt;
&lt;li&gt;YAML matches the native data structures of agile languages.&lt;/li&gt;
&lt;li&gt;YAML has a consistent model to support generic tools.&lt;/li&gt;
&lt;li&gt;YAML supports one-pass processing.&lt;/li&gt;
&lt;li&gt;YAML is expressive and extensible.&lt;/li&gt;
&lt;li&gt;YAML is easy to implement and use.&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;So how well does it do?&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML is easily readable by humans.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;True only if you stick to a small subset. The full set is complex – much &lt;em&gt;more&lt;/em&gt; so than XML or JSON.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML data is portable between programming languages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not really true, as it’s too easy to create constructs that are not supported by common languages.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML matches the native data structures of agile languages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See above. Plus, why only support agile (or dynamic) languages? What about other languages?&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML has a consistent model to support generic tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am not even sure what this means and I can’t find any elaboration.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML supports one-pass processing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’ll take their word for it.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML is expressive and extensible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, it is, but it’s &lt;em&gt;too&lt;/em&gt; expressive (e.g. too complex).&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;YAML is easy to implement and use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;
&lt;code&gt;$ cat `ls -1 ~/gocode/src/github.com/go-yaml/yaml/*.go | grep -v _test` | wc -l
9247

$ cat /usr/lib/python3.5/site-packages/yaml/*.py | wc -l
5713
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Don’t get me wrong, it’s not like YAML is absolutely terrible – it’s certainly not as &lt;a href=&quot;http://arp242.net/weblog/JSON_as_configuration_files-_please_dont.html&quot;&gt;problematic as using JSON&lt;/a&gt; – but it’s not exactly great either. There are some drawbacks and surprises that are not at all obvious at first, and there are a number of better alternatives such as &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; and other more specialized formats.&lt;/p&gt;
&lt;p&gt;Personally, I’m not likely to use it again when I’ve got a choice.&lt;/p&gt;
&lt;p&gt;If you &lt;em&gt;must&lt;/em&gt; use YAML then I recommend you use &lt;a href=&quot;https://github.com/crdoconnor/strictyaml&quot;&gt;StrictYAML&lt;/a&gt;, which removes some (though not all) of the more hairy parts.&lt;/p&gt;

&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;You can mail me at &lt;a href=&quot;mailto:martin@arp242.net&quot;&gt;martin@arp242.net&lt;/a&gt; or &lt;a href=&quot;https://github.com/Carpetsmoker/arp242.net/issues/new&quot;&gt;create a GitHub issue&lt;/a&gt; for feedback, questions, etc.&lt;/p&gt;
</description>
<pubDate>Wed, 20 Jun 2018 18:20:53 +0000</pubDate>
<dc:creator>tlb</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html</dc:identifier>
</item>
<item>
<title>Keybase Exploding Messages</title>
<link>https://keybase.io/blog/keybase-exploding-messages</link>
<guid isPermaLink="true" >https://keybase.io/blog/keybase-exploding-messages</guid>
<description>&lt;h2&gt;&lt;span&gt;NEWS FLASH:&lt;/span&gt; &lt;strong&gt;Keybase Exploding Messages&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;June 20, 2018&lt;/p&gt;
&lt;center&gt;
&lt;div class=&quot;img-exploding&quot;&gt;&lt;img src=&quot;https://keybase.io/images/blog/exploding/cherry_sm.png&quot; width=&quot;218&quot; height=&quot;218&quot;/&gt;&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;Hi everyone. Starting today, you can put a short fuse on your Keybase chat messages. This works for 1-on-1 chats and also inside team, group, and community channels.&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;center class=&quot;img-exploding&quot;&gt;
&lt;div&gt;
&lt;div&gt;&lt;img src=&quot;https://keybase.io/images/blog/exploding/zep2.png&quot; class=&quot;img img-rounded img-responsive&quot; width=&quot;566&quot; height=&quot;344&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;p class=&quot;small&quot;&gt;demonstration from my brother&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We recommend your most &lt;strong&gt;intimate&lt;/strong&gt; and most &lt;strong&gt;corporate&lt;/strong&gt; messages get the exploding treatment. Each end of the professionalism spectrum. Don't put that dank meme or Income Statement in Slack, people. Put it in Keybase, so it's encrypted.&lt;/p&gt;
&lt;p&gt;And if you'd like it to be &lt;em&gt;temporary&lt;/em&gt;, make it explode.&lt;/p&gt;
&lt;p&gt;Some details:&lt;/p&gt;
&lt;h2&gt;They blow up&lt;/h2&gt;
&lt;p&gt;When the time comes, KA-BOOM&lt;/p&gt;
&lt;center class=&quot;img-exploding&quot;&gt;
&lt;div&gt;
&lt;div&gt;&lt;img src=&quot;https://keybase.io/images/blog/exploding/drugstore.gif&quot; class=&quot;img img-rounded img-responsive&quot; width=&quot;609&quot; height=&quot;314&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;When the countdown hits zero, everyone throws away the plaintext and ciphertext.&lt;/p&gt;
&lt;h2&gt;Exploding messages have forward secrecy&lt;/h2&gt;
&lt;p&gt;Forward secrecy means your apps use temporary &quot;ephemeral&quot; keys that are thrown away.&lt;/p&gt;
&lt;p&gt;To be clear, all Keybase messages - not just exploding ones - are &lt;strong&gt;end-to-end encrypted&lt;/strong&gt;. No one can read them without compromising one of your devices.&lt;/p&gt;
&lt;p&gt;Forward secrecy is something extra. It protects you if someone in the future &lt;strong&gt;steals your device's key&lt;/strong&gt; and also has access to old recorded messages, say by scooping up ciphertexts as a man-in-the-middle.&lt;/p&gt;
&lt;p&gt;Forward secrecy works extra well with &lt;em&gt;timed&lt;/em&gt; messages because your device destroys &lt;strong&gt;both&lt;/strong&gt; the decryption keys and plaintext.&lt;/p&gt;
&lt;h2&gt;Splosions from the command line&lt;/h2&gt;
&lt;p&gt;You can also send exploding messages from your terminal of choice.*&lt;/p&gt;
&lt;div class=&quot;pre-exploding&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;code code-highlighted&quot;&gt;

keybase chat send --exploding-lifetime &lt;span class=&quot;hljs-string&quot;&gt;&quot;30s&quot;&lt;/span&gt; friend1234 \
&lt;span class=&quot;hljs-string&quot;&gt;&quot;Yo - meet @ 10pm under the powerlines. Bring the stuff&quot;&lt;/span&gt;


keybase chat send --exploding-lifetime &lt;span class=&quot;hljs-string&quot;&gt;&quot;6h&quot;&lt;/span&gt; acmecorp.finance \
&lt;span class=&quot;hljs-string&quot;&gt;&quot;That is NO laughing matter, James.&quot;&lt;/span&gt;

&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;* assuming sane choices&lt;/p&gt;
&lt;p&gt;If you're writing a bot, you can pipe JSON to &lt;code&gt;keybase chat api&lt;/code&gt;. Example:&lt;/p&gt;
&lt;div class=&quot;pre-exploding&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;code code-highlighted&quot;&gt;
{
  &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;method&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;/span&gt;,
  &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;params&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;{
     &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;options&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;{
        &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;channel&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;{
           &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;name&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;vegetarians.bots&quot;&lt;/span&gt;
        &lt;/span&gt;}&lt;/span&gt;,
        &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;exploding_lifetime&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;1d&quot;&lt;/span&gt;&lt;/span&gt;,
        &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;message&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;{
           &quot;&lt;span class=&quot;hljs-attribute&quot;&gt;body&lt;/span&gt;&quot;:&lt;span class=&quot;hljs-value&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;smellbot has detected meat in the office foyer.&quot;&lt;/span&gt;
        &lt;/span&gt;}
     &lt;/span&gt;}
  &lt;/span&gt;}
&lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can get more API examples with &lt;code&gt;keybase chat api --help&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;That's it!&lt;/h2&gt;
&lt;p&gt;Another step forward for Keybase. Cryptography for everyone.&lt;/p&gt;
&lt;p&gt;More stuff soon,&lt;br/&gt;💖 Keybase&lt;/p&gt;
&lt;center&gt;&lt;a class=&quot;btn btn-primary&quot; href=&quot;https://keybase.io/download&quot;&gt;INSTALL KEYBASE &lt;span&gt;🌈&lt;/span&gt;&lt;/a&gt;&lt;/center&gt;

&lt;div class=&quot;blog-faq&quot; readability=&quot;69.365299684543&quot;&gt;
&lt;h2 id=&quot;faq&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;are-there-docs-on-how-this-works-&quot;&gt;Are there docs on how this works?&lt;/h3&gt;
&lt;p&gt;Yes, here are the &lt;a href=&quot;https://keybase.io/docs/crypto/ephemeral&quot;&gt;crypto docs&lt;/a&gt;. And here's the Keybase &lt;a href=&quot;https://github.com/keybase/client&quot;&gt;source code&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;my-team-uses-telegram-and-i-m-scared-shitless-&quot;&gt;My team uses Telegram and I'm scared shitless.&lt;/h3&gt;
&lt;p&gt;Hugs&lt;/p&gt;
&lt;h3 id=&quot;what-s-the-point-if-someone-can-just-take-a-screenshot-&quot;&gt;What's the point, if someone can just take a screenshot?&lt;/h3&gt;
&lt;p&gt;I answered this on &lt;a href=&quot;https://news.ycombinator.com/item?id=17357992&quot;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;why-don-t-all-messages-have-forward-secrecy-&quot;&gt;Why don't all messages have forward secrecy?&lt;/h3&gt;
&lt;p&gt;We've &lt;a href=&quot;https://keybase.io/blog/keybase-chat#pfs&quot;&gt;blogged about this before&lt;/a&gt;. It's not the right answer for a mainstream chat replacement, because it forces dangerous behavior and/or makes you lose all your group's messages when you update devices.&lt;/p&gt;
&lt;p&gt;Still, it's up to you! Now you can have all the forward secrecy you want with Keybase.&lt;/p&gt;
&lt;h3 id=&quot;what-about-repudiation-&quot;&gt;What about repudiation?&lt;/h3&gt;
&lt;p&gt;Repudiation is launching in ~3 weeks.&lt;/p&gt;
&lt;p&gt;So yes, in chats up to 100 people, messages will be pairwise MAC'ed. Pairwise MAC'ing doesn't scale for mega-large community chats, so those messages are still signed &amp;amp; encrypted in the traditional sense. This seems like the best balance.&lt;/p&gt;
&lt;p&gt;Some have argued repudiation is a silly feature. After all, who, in the history of humanity, has ever &lt;em&gt;not&lt;/em&gt; gotten in trouble for something that leaked, &lt;strong&gt;just because it wasn't cryptographically signed&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;Anyway, this is minimal overhead with some benefit, so we're doing it.&lt;/p&gt;
&lt;h3 id=&quot;does-the-timer-begin-when-the-message-is-sent-or-received-&quot;&gt;Does the timer begin when the message is sent or received?&lt;/h3&gt;
&lt;p&gt;Sent.&lt;/p&gt;
&lt;p&gt;This seems like the only sensible answer for group chats. And we can't have a different answer for 1-on-1 chats and group chats. That would confuse people. Not the kind of person who reads an FAQ such as yourself, of course.&lt;/p&gt;
&lt;p&gt;So our answer is simple: you set a timer and the message is gone after that time.&lt;/p&gt;
&lt;h3 id=&quot;i-have-nothing-to-hide&quot;&gt;I have nothing to hide&lt;/h3&gt;
&lt;p&gt;Because no one is trying to hurt you&lt;/p&gt;
&lt;/div&gt;
&lt;center&gt;&lt;a class=&quot;btn btn-primary&quot; href=&quot;https://keybase.io/download&quot;&gt;INSTALL KEYBASE &lt;span&gt;🌈&lt;/span&gt;&lt;/a&gt;&lt;/center&gt;
</description>
<pubDate>Wed, 20 Jun 2018 18:09:39 +0000</pubDate>
<dc:creator>aston</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://keybase.io/blog/keybase-exploding-messages</dc:identifier>
</item>
<item>
<title>Tesla sues ex-employee for hacking, theft, and leaking to the press</title>
<link>https://www.theverge.com/2018/6/20/17484030/tesla-sues-employee-hacking-theft-leaking</link>
<guid isPermaLink="true" >https://www.theverge.com/2018/6/20/17484030/tesla-sues-employee-hacking-theft-leaking</guid>
<description>&lt;p id=&quot;Yr7ffj&quot;&gt;Tesla filed a lawsuit on Wednesday alleging that a former employee hacked the company’s system and transferred “gigabytes” of data to unnamed third parties. The lawsuit may align with Tesla CEO Elon Musk’s &lt;a href=&quot;https://www.theverge.com/2018/6/18/17476854/tesla-sabotage-elon-musk-email&quot;&gt;recent claim of “sabotage”&lt;/a&gt; by an ex-worker.&lt;/p&gt;
&lt;p id=&quot;vOjGf6&quot;&gt;Tesla’s lawsuit names Martin Tripp, a former process technician at the company’s Gigafactory in Nevada, as the defendant. Tesla claims that Tripp “unlawfully hacked the company’s confidential and trade secret information and transferred that information to third parties.” To do so, Tripp placed “hacking software” in the computers of three individual employees to routinely export confidential data, the company says.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;47YkpK&quot;&gt;&lt;q&gt;“unlawfully hacked the company’s confidential and trade secret information”&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;tlXQ18&quot;&gt;Tesla says that Tripp has already admitted to hacking its manufacturing operating system, and the company accuses him of making false statements to the media about the stolen information. The suit, which was filed in federal court in Nevada, was &lt;a href=&quot;https://www.cnbc.com/2018/06/20/tesla-sues-former-employee-for-allegedly-stealing-gigabytes-of-data-making-false-claims-to-media.html&quot;&gt;first reported by CNBC&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;pX8rcf&quot;&gt;Tesla claims that Tripp was the source of a news report about punctured battery cells at Tesla’s factory.&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p id=&quot;n4uZJ7&quot;&gt;For example, Tripp claimed that punctured battery cells had been used in certain Model 3 vehicles even though no punctured cells were ever used in vehicles, batteries or otherwise. Tripp also vastly exaggerated the true amount and value of “scrap” material that Tesla generated during the manufacturing process, and falsely claimed that Tesla was delayed in bringing new manufacturing equipment online.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;FBGRXZ&quot;&gt;The lawsuit doesn’t specify which media outlet Tripp leaked to, but earlier this month, &lt;a href=&quot;http://uk.businessinsider.com/tesla-model-3-scrap-waste-high-gigafactory-2018-5?r=US&amp;amp;IR=T&quot;&gt;&lt;em&gt;Business Insider&lt;/em&gt; ran a story&lt;/a&gt; about scrap metal waste and punctured battery cells at Tesla’s factory, citing documents and former employees as sources.&lt;/p&gt;
&lt;p id=&quot;GlaKUr&quot;&gt;Musk &lt;a href=&quot;https://www.theverge.com/2018/6/18/17476854/tesla-sabotage-elon-musk-email&quot;&gt;first alluded&lt;/a&gt; to the incidents described in the lawsuit last week in an email to Tesla employees in which he claimed Tesla was being sabotaged by an ex-employee. The employee was allegedly found to have made “direct code changes” to Tesla’s manufacturing system and sent “large amounts of highly sensitive” data to third parties.&lt;/p&gt;
&lt;p id=&quot;9HlBot&quot;&gt;Musk also questioned whether “Wall Street short-sellers,” “oil &amp;amp; gas companies,” or “the multitude of big gas/diesel car company competitors” may have been involved. “If they’re willing to cheat so much about emissions, maybe they’re willing to cheat in other ways?” he wrote.&lt;/p&gt;
&lt;p id=&quot;qWBrPz&quot;&gt;Tesla has struggled to ramp up production of its Model 3 vehicle, encountering bottlenecks in its factory and supply chain. The company is scrambling to produce 5,000 Model 3s a week ahead of its third-quarter earnings, as it attempts to evolve from a niche luxury electric car company into a mass-market player.&lt;/p&gt;
&lt;p id=&quot;6tsm70&quot;&gt;A lawyer for Tripp could not be immediately reached, and a Tesla spokesperson declined to comment.&lt;/p&gt;

</description>
<pubDate>Wed, 20 Jun 2018 16:39:55 +0000</pubDate>
<dc:creator>salmonellaeater</dc:creator>
<og:description>Tesla filed a lawsuit on Wednesday alleging that a former employee hacked the company’s system and transferred &quot;gigabytes&quot; of data to unnamed third parties.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/QOXVhSBb4175xx8o0uvdkZ4tAgA=/0x146:2040x1214/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/11423503/acastro_180524_1777_tesla_0001.jpg</og:image>
<og:title>Tesla sues ex-employee for hacking, theft, and leaking to the press</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2018/6/20/17484030/tesla-sues-employee-hacking-theft-leaking</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2018/6/20/17484030/tesla-sues-employee-hacking-theft-leaking</dc:identifier>
</item>
<item>
<title>Surgeon Atul Gawande selected as CEO of new health care company from Amazon</title>
<link>https://www.statnews.com/2018/06/20/surgeon-atul-gawande-selected-ceo-amazon-partners/</link>
<guid isPermaLink="true" >https://www.statnews.com/2018/06/20/surgeon-atul-gawande-selected-ceo-amazon-partners/</guid>
<description>&lt;p class=&quot;big-cap-wrap&quot;&gt;&lt;span class=&quot;big-cap&quot;&gt;D&lt;/span&gt;&lt;/p&gt;&lt;p&gt;r. Atul Gawande — the prominent physician, prolific writer, and all-around health care celebrity — will become the &lt;a href=&quot;https://www.statnews.com/2018/06/20/gawande-five-ideas/&quot;&gt;chief executive&lt;/a&gt; of the &lt;a href=&quot;https://www.statnews.com/2018/01/30/amazon-jpmorgan-berkshire-health-care/&quot; rel=&quot;noopener&quot;&gt;new health care company&lt;/a&gt; launched by Amazon, Berkshire Hathaway, and JPMorgan Chase, the three companies announced Wednesday.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.statnews.com/2015/11/11/atul-gawande-health-care-journalism/&quot; rel=&quot;noopener&quot;&gt;Gawande&lt;/a&gt;, a surgeon at Brigham and Women’s Hospital in Boston who teaches at Harvard’s medical and public health schools, will take charge of the new organization July 9. In a note sent to friends and colleagues, Gawande said that he is not giving up his positions at Harvard or the Brigham and that he will keep writing, including for the New Yorker. But he said he will transition from being executive director to chairman of Ariadne Labs, which works on solving problems in health systems around the world.&lt;/p&gt;
&lt;p&gt;The new company will be based in Boston.&lt;/p&gt;
&lt;p class=&quot;ad-label&quot;&gt;advertisement&lt;/p&gt;

&lt;p&gt;“I have devoted my public health career to building scalable solutions for better healthcare delivery that are saving lives, reducing suffering, and eliminating wasteful spending both in the US and across the world,” Gawande said in a statement put out by the companies. “Now I have the backing of these remarkable organizations to pursue this mission with even greater impact for more than a million people, and in doing so incubate models of care for all.”&lt;/p&gt;
&lt;aside class=&quot;read-more standard&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Not much has been revealed about the new health care enterprise from the three corporate giants; in the release Wednesday, it doesn’t even have a name. The new organization is meant to come up with ways to address the health care costs for the companies’ employees, though its founders have indicated they hope that it comes up with solutions that could be spread across the entire U.S. health system.&lt;/p&gt;
&lt;p&gt;Some experts have &lt;a href=&quot;https://www.statnews.com/2018/01/30/amazon-health-care-reaction/&quot; rel=&quot;noopener&quot;&gt;expressed some skepticism&lt;/a&gt; though so far, given the lack of details and the quagmire that is the health care industry. Many other innovators have sought to find solutions to health care costs in the past but have run head-on into the complexity of the system.&lt;/p&gt;
&lt;p&gt;But in his note to friends, Gawande said that “this new health care organization represents one of the most promising opportunities to accelerate improvement of US health care delivery. The work will be difficult and take time, but it must be done.”&lt;/p&gt;
&lt;p&gt;Gawande was not immediately available for an interview, according to the Brigham.&lt;/p&gt;

&lt;div class=&quot;content-meta&quot;&gt;

&lt;div class=&quot;author-info&quot; readability=&quot;4.0737704918033&quot;&gt;
&lt;div class=&quot;author-avatar&quot;&gt;&lt;img src=&quot;https://www.statnews.com/wp-content/uploads/2018/01/Circular_Drew.png&quot; srcset=&quot;https://www.statnews.com/wp-content/uploads/2018/01/Circular_Drew.png 160w, https://www.statnews.com/wp-content/uploads/2018/01/Circular_Drew-80x80.png 80w&quot; width=&quot;80&quot; height=&quot;80&quot; class=&quot;avatar&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;author-data&quot; readability=&quot;5.2377049180328&quot;&gt;

&lt;p&gt;General Assignment Reporter&lt;/p&gt;
&lt;p&gt;Andrew is a general assignment reporter.&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;
</description>
<pubDate>Wed, 20 Jun 2018 13:57:35 +0000</pubDate>
<dc:creator>uptown</dc:creator>
<og:type>article</og:type>
<og:title>Atul Gawande picked as CEO of Amazon, Berkshire health care company</og:title>
<og:description>Atul Gawande, the surgeon and author, has been selected to lead the health-care venture from Amazon, J.P. Morgan, and Berkshire Hathaway.</og:description>
<og:url>https://www.statnews.com/2018/06/20/surgeon-atul-gawande-selected-ceo-amazon-partners/</og:url>
<og:image>https://www.statnews.com/wp-content/uploads/2017/07/Boghosian_Atul-Gawande3_STAT-1024x576.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.statnews.com/2018/06/20/surgeon-atul-gawande-selected-ceo-amazon-partners/</dc:identifier>
</item>
<item>
<title>European parliament committee approves vote on ‘disastrous’ copyright bill</title>
<link>https://www.bbc.com/news/technology-44546620</link>
<guid isPermaLink="true" >https://www.bbc.com/news/technology-44546620</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;People looking at a screen&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/130E4/production/_102125087_gettyimages-857906012.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The changes could put an end to user-generated content, warn critics
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;A committee of MEPs has voted to accept major changes to European copyright law, which experts say could change the nature of the internet.&lt;/p&gt;&lt;p&gt;They voted to approve the controversial Article 13, which critics warn could put an end to memes, remixes and other user-generated content.&lt;/p&gt;&lt;p&gt;Article 11, requiring online platforms to pay publishers a fee if they link to their news content, was also approved.&lt;/p&gt;&lt;p&gt;One organisation opposed to the changes called it a &quot;dark day&quot;.&lt;/p&gt;&lt;p&gt;The European Parliament's Committee on Legal Affairs voted by 15 votes to 10 to adopt Article 13 and by 13 votes to 12 to adopt Article 11.&lt;/p&gt;&lt;p&gt;It will now go to the wider European Parliament to vote on in July.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;'Censorship'&lt;/h2&gt;&lt;p&gt;Last week, 70 influential tech leaders, including Vint Cerf and Tim Berners-Lee, signed &lt;a href=&quot;https://www.eff.org/files/2018/06/12/article13letter.pdf&quot; class=&quot;story-body__link-external&quot;&gt;a letter&lt;/a&gt; opposing Article 13, which they called &quot;an imminent threat to the future&quot; of the internet.&lt;/p&gt;&lt;p&gt;Article 13 puts more onus on websites to enforce copyright and could mean that every online platform that allows users to post text, sounds, code or images will need some form of content-recognition system to review all material that users upload.&lt;/p&gt;&lt;p&gt;Activist Cory Doctorow has called it a &quot;foolish, terrible idea&quot;.  &lt;/p&gt;&lt;p&gt;Writing on online news website &lt;a href=&quot;https://boingboing.net/2018/06/14/six-days-left.html&quot; class=&quot;story-body__link-external&quot;&gt;BoingBoing&lt;/a&gt;, he said: &quot;No filter exists that can even approximate this. And the closest equivalents are mostly run by American companies, meaning that US big tech is going to get to spy on everything Europeans post and decide what gets censored and what doesn't.&quot;&lt;/p&gt;&lt;p&gt;Article 11 has been called the &quot;link tax&quot; by opponents. &lt;/p&gt;&lt;p&gt;Designed to limit the power over news publishers that tech giants such as Facebook and Google have, it requires online platforms to pay publishers a fee if they link to their news content.&lt;/p&gt;&lt;p&gt;The theory is that this would help support smaller news publishers and drive users to their homepages rather than directly to their news stories.&lt;/p&gt;&lt;p&gt;But critics say it fails to clearly define what constitutes a link and could be manipulated by governments to curb freedom of speech.&lt;/p&gt;&lt;p&gt;After the vote, US not-for-profit organisation Creative Commons, which aims to make more content free for others to share, called it a &quot;dark day for the open web&quot;.&lt;/p&gt;&lt;p&gt;Another Twitter user tweeted: &quot;15 MEPs voted for upload filtering. They understand the internet better than the people who invented it, apparently.&quot;&lt;/p&gt;&lt;p&gt;Open Rights executive director Jim Killock told the BBC: &quot;Article 13 must go. The EU parliament will have another chance to remove this dreadful law.&lt;/p&gt;&lt;p&gt;&quot;The EU parliament's duty is to defend citizens from unfair and unjust laws. &lt;/p&gt;&lt;p&gt;&quot;MEPs must reject this law, which would create a robo-copyright regime intended to zap any image, text, meme or video that appears to include copyright material, even when it is entirely legal material.&quot;&lt;/p&gt;&lt;p&gt;But publishers, including the Independent Music Companies Association (Impala) welcomed the vote.&lt;/p&gt;&lt;p&gt;&quot;This is a strong and unambiguous message sent by the European Parliament,&quot; said executive chair Helen Smith.&lt;/p&gt;&lt;p&gt;&quot;It clarifies what the music sector has been saying for years: if you are in the business of distributing music or other creative works, you need a licence, clear and simple. It's time for the digital market to catch up with progress.&quot;&lt;/p&gt;
            </description>
<pubDate>Wed, 20 Jun 2018 11:49:57 +0000</pubDate>
<dc:creator>sebst</dc:creator>
<og:title>'Disastrous' copyright bill vote approved</og:title>
<og:type>article</og:type>
<og:description>Critics call it a &quot;dark day&quot; as an EU committee adopts two controversial changes to copyright law.</og:description>
<og:url>https://www.bbc.com/news/technology-44546620</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/130E4/production/_102125087_gettyimages-857906012.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/technology-44546620</dc:identifier>
</item>
<item>
<title>Ask HN: What is the first thing you implement at a new company?</title>
<link>https://news.ycombinator.com/item?id=17353854</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=17353854</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5846774193548&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;5.4778225806452&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;17353854&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17353854&quot; class=&quot;storylink&quot;&gt;Ask HN: What is the first thing you implement at a new company?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.71428571428571&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_17353854&quot;&gt;275 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=systemtest&quot; class=&quot;hnuser&quot;&gt;systemtest&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17353854&quot;&gt;14 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_17353854&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=17353854&amp;amp;goto=item%3Fid%3D17353854&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20What%20is%20the%20first%20thing%20you%20implement%20at%20a%20new%20company%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20What%20is%20the%20first%20thing%20you%20implement%20at%20a%20new%20company%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=17353854&amp;amp;auth=a4a8710c5275ab54b34cb2baae43d78203f917e9&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=17353854&quot;&gt;254 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;14&quot;&gt;For job-hoppers and contractors. If you arrive at a company, what is the first thing you push for?
&lt;p&gt;For instance, I usually implement a good feature-branch flow with branch pipelines and a strict merge-to-develop etiquette with mandatory merge requests. It makes my work easier and once the team is used to it, they also really like it. No more messy development branches.&lt;/p&gt;
&lt;p&gt;I also request a small office stool next to my desk to make code reviews, three amigos and pair programming easier. It is a small thing but I noticed that people are more eager to discuss things if they have a place to sit.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Wed, 20 Jun 2018 09:47:50 +0000</pubDate>
<dc:creator>systemtest</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=17353854</dc:identifier>
</item>
<item>
<title>Transfer.sh – File sharing from the command line</title>
<link>https://transfer.sh/</link>
<guid isPermaLink="true" >https://transfer.sh/</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;30&quot;&gt;
&lt;p&gt;transfer.sh: Easy file sharing from the command line === made with &amp;lt;3 by DutchCoders Upload: $ curl --upload-file ./hello.txt https://transfer.sh/hello.txt Encrypt &amp;amp; upload: $ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file &quot;-&quot; https://transfer.sh/test.txt Download &amp;amp; decrypt: $ curl https://transfer.sh/1lDau/test.txt|gpg -o- &amp;gt; /tmp/hello.txt Grep pound from syslog and transfer cat /var/log/syslog|grep pound|curl --upload-file - https://transfer.sh/pound.log Using Keybase: # import keys from keybase $ keybase track [them] # encrypt for recipients $ cat somebackupfile.tar.gz | keybase encrypt [them] | curl --upload-file '-' https://transfer.sh/test.txt # decrypt $ curl https://transfer.sh/sqUFi/test.md |keybase decrypt Upload to Virustotal: $ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal Virusscan: $ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/scan Add alias to .bashrc or .zshrc: === transfer() { if [ $# -eq 0 ]; then echo -e &quot;No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md&quot;; return 1; fi tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename &quot;$1&quot; | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file &quot;$1&quot; &quot;https://transfer.sh/$basefile&quot; &amp;gt;&amp;gt; $tmpfile; else curl --progress-bar --upload-file &quot;-&quot; &quot;https://transfer.sh/$1&quot;; fi; cat $tmpfile; rm -f $tmpfile; } } === $ transfer test.txt&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 20 Jun 2018 05:33:43 +0000</pubDate>
<dc:creator>nilsocket</dc:creator>
<dc:format>text/plain</dc:format>
<dc:identifier>https://transfer.sh/</dc:identifier>
</item>
<item>
<title>Functional Data Structures</title>
<link>https://cs.uwaterloo.ca/~plragde/flaneries/FDS/</link>
<guid isPermaLink="true" >https://cs.uwaterloo.ca/~plragde/flaneries/FDS/</guid>
<description>&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Introduction.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Introduction&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td readability=&quot;1.6666666666667&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Introduction.html#%28part._.Required_background%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;1.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Required background&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0588235294118&quot;&gt;&lt;td readability=&quot;1.7647058823529&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Introduction.html#%28part._.Design_philosophy%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;1.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Design philosophy&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.7741935483871&quot;&gt;&lt;td readability=&quot;1.2903225806452&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Tools and Techniques&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.70588235294118&quot;&gt;&lt;td readability=&quot;1.1764705882353&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Order_notation_and_its_discontents%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Order notation and its discontents&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.97959183673469&quot;&gt;&lt;td readability=&quot;1.6326530612245&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Ambiguities_in_mathematics%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Ambiguities in mathematics&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1428571428571&quot;&gt;&lt;td readability=&quot;1.9047619047619&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.A_formal_definition%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;A formal definition&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2&quot;&gt;&lt;td readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Abuse_of_notation%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Abuse of notation&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0909090909091&quot;&gt;&lt;td readability=&quot;1.8181818181818&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.What_is_running_time_%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;What is running time?&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.87272727272727&quot;&gt;&lt;td readability=&quot;1.4545454545455&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Precision_leads_to_complications%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.5&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Precision leads to complications&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.90566037735849&quot;&gt;&lt;td readability=&quot;1.5094339622642&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Algorithm_analysis_in_practice%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.6&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Algorithm analysis in practice&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1162790697674&quot;&gt;&lt;td readability=&quot;1.8604651162791&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.More_useful_notation%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.1.7&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;More useful notation&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.58064516129032&quot;&gt;&lt;td readability=&quot;0.96774193548387&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Functional_programming_and_algorithm_analysis%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Functional programming and algorithm analysis&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.90566037735849&quot;&gt;&lt;td readability=&quot;1.5094339622642&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.The_.O.Caml_programming_language%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The OCaml programming language&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2972972972973&quot;&gt;&lt;td readability=&quot;2.1621621621622&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Insertion_sort%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Insertion sort&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0212765957447&quot;&gt;&lt;td readability=&quot;1.7021276595745&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Analyzing_insertion_sort%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Analyzing insertion sort&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.5&quot;&gt;&lt;td readability=&quot;2.5&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Mergesort%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Mergesort&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1162790697674&quot;&gt;&lt;td readability=&quot;1.8604651162791&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Algebraic_data_types%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.5&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Algebraic data types&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.88888888888889&quot;&gt;&lt;td readability=&quot;1.4814814814815&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.The_.Sequence_abstract_data_type%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.6&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The Sequence abstract data type&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.84210526315789&quot;&gt;&lt;td readability=&quot;1.4035087719298&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Using_a_module_to_implement_an_.A.D.T%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.7&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Using a module to implement an ADT&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.97959183673469&quot;&gt;&lt;td readability=&quot;1.6326530612245&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Immutable_and_mutable_.A.D.Ts%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.8&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Immutable and mutable ADTs&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.73846153846154&quot;&gt;&lt;td readability=&quot;1.2307692307692&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Tools_and_Techniques.html#%28part._.Improving_the_index_operation_for_.Sequence%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;2.2.9&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Improving the index operation for Sequence&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Queues&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2&quot;&gt;&lt;td readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Simple_queues%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Simple queues&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2&quot;&gt;&lt;td readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Mutation_in_.O.Caml%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.1.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Mutation in OCaml&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0434782608696&quot;&gt;&lt;td readability=&quot;1.7391304347826&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Using_arrays_for_queues%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.1.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Using arrays for queues&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0285714285714&quot;&gt;&lt;td readability=&quot;1.7142857142857&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Amortized_analysis%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Amortized analysis&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.73469387755102&quot;&gt;&lt;td readability=&quot;1.2244897959184&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Lazy_evaluation_with_memoization%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Lazy evaluation with memoization&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.8&quot;&gt;&lt;td readability=&quot;1.3333333333333&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Incremental_vs_monolithic_computation%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.3.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Incremental vs monolithic computation&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0212765957447&quot;&gt;&lt;td readability=&quot;1.7021276595745&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Flattening_using_streams%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.3.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Flattening using streams&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1162790697674&quot;&gt;&lt;td readability=&quot;1.8604651162791&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Queues_using_streams%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.3.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Queues using streams&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.70588235294118&quot;&gt;&lt;td readability=&quot;1.1764705882353&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Achieving_constant_time_with_full_persistence%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.3.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Achieving constant time with full persistence&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.125&quot;&gt;&lt;td readability=&quot;1.875&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Priority_queues%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Priority queues&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.87272727272727&quot;&gt;&lt;td readability=&quot;1.4545454545455&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Functors__parameterized_modules_%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.4.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Functors (parameterized modules)&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.85714285714286&quot;&gt;&lt;td readability=&quot;1.4285714285714&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Priority_queues_using_.Braun_heaps%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.4.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Priority queues using Braun heaps&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1162790697674&quot;&gt;&lt;td readability=&quot;1.8604651162791&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.L.J.N.P_trees_revisited%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.4.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;LJNP trees revisited&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.3333333333333&quot;&gt;&lt;td readability=&quot;2.2222222222222&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Queues.html#%28part._.Merging_heaps%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;3.4.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Merging heaps&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Sets and Maps&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.125&quot;&gt;&lt;td readability=&quot;1.875&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Ordered_domains%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Ordered domains&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.70588235294118&quot;&gt;&lt;td readability=&quot;1.1764705882353&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Binary_search_trees__the_naive_implementation%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Binary search trees: the naive implementation&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.8135593220339&quot;&gt;&lt;td readability=&quot;1.3559322033898&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.History_of_efficient_implementations%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;History of efficient implementations&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0909090909091&quot;&gt;&lt;td readability=&quot;1.8181818181818&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.The_general_framework%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The general framework&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.6551724137931&quot;&gt;&lt;td readability=&quot;2.7586206896552&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Treaps%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Treaps&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.8&quot;&gt;&lt;td readability=&quot;1.3333333333333&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;          &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Probabilistic_analysis_of_treap_.Map_operations%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.4.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Probabilistic analysis of treap Map operations&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.85714285714286&quot;&gt;&lt;td readability=&quot;1.4285714285714&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;          &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Remarks_on_the_analysis_of_set_operations%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.4.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Remarks on the analysis of set operations&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.82191780821918&quot;&gt;&lt;td readability=&quot;1.3698630136986&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;          &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Reusing_the_treap_analysis_for_added_benefit%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.4.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Reusing the treap analysis for added benefit&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.5&quot;&gt;&lt;td readability=&quot;2.5&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.A.V.L_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.5&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;AVL trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0909090909091&quot;&gt;&lt;td readability=&quot;1.8181818181818&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Weight-balanced_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.6&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Weight-balanced trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2631578947368&quot;&gt;&lt;td readability=&quot;2.1052631578947&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Red-black_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.1.7&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Red-black trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2413793103448&quot;&gt;&lt;td readability=&quot;2.0689655172414&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sets_and_Maps.html#%28part._.Binary_tries%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;4.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Binary tries&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.92307692307692&quot;&gt;&lt;td readability=&quot;1.5384615384615&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;5&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Text Processing&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.94736842105263&quot;&gt;&lt;td readability=&quot;1.5789473684211&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Simple_exact_matching%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Simple exact matching&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1428571428571&quot;&gt;&lt;td readability=&quot;1.9047619047619&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.The_naive_algorithm%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.1.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The naive algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.75&quot;&gt;&lt;td readability=&quot;1.25&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.The_.Gusfield-.Main-.Lorentz__.G.M.L__algorithm%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.1.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The Gusfield-Main-Lorentz (GML) algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.82758620689655&quot;&gt;&lt;td readability=&quot;1.3793103448276&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.An_overview_of_classical_algorithms%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.1.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;An overview of classical algorithms&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.8955223880597&quot;&gt;&lt;td readability=&quot;1.4925373134328&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;          &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.The_.Knuth-.Morris-.Pratt__.K.M.P__algorithm%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.1.3.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The Knuth-Morris-Pratt (KMP) algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0169491525424&quot;&gt;&lt;td readability=&quot;1.6949152542373&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;          &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.The_.Boyer-.Moore__.B.M__algorithm%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.1.3.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;The Boyer-Moore (BM) algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2413793103448&quot;&gt;&lt;td readability=&quot;2.0689655172414&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Suffix_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Suffix trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.85714285714286&quot;&gt;&lt;td readability=&quot;1.4285714285714&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.From_suffix_tries_to_suffix_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.2.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;From suffix tries to suffix trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td readability=&quot;1.6666666666667&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Constructing_suffix_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.2.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Constructing suffix trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.94117647058824&quot;&gt;&lt;td readability=&quot;1.5686274509804&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Applications_of_suffix_trees%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.2.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Applications of suffix trees&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2&quot;&gt;&lt;td readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Suffix_arrays%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Suffix arrays&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.96&quot;&gt;&lt;td readability=&quot;1.6&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Search_using_a_suffix_array%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.3.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Search using a suffix array&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.96&quot;&gt;&lt;td readability=&quot;1.6&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Text_Processing.html#%28part._.Constructing_a_suffix_array%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;5.3.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Constructing a suffix array&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;6&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Hashing&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.44&quot;&gt;&lt;td readability=&quot;2.4&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html#%28part._.Chaining%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;6.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Chaining&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0212765957447&quot;&gt;&lt;td readability=&quot;1.7021276595745&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html#%28part._.Universal_hash_functions%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;6.1.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Universal hash functions&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2972972972973&quot;&gt;&lt;td readability=&quot;2.1621621621622&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;        &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html#%28part._.Balls_in_boxes%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;6.1.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Balls in boxes&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.125&quot;&gt;&lt;td readability=&quot;1.875&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html#%28part._.Open_addressing%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;6.2&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Open addressing&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.1612903225806&quot;&gt;&lt;td readability=&quot;1.9354838709677&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html#%28part._.Cuckoo_hashing%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;6.3&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Cuckoo hashing&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.125&quot;&gt;&lt;td readability=&quot;1.875&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Hashing.html#%28part._.Perfect_hashing%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;6.4&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Perfect hashing&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.75&quot;&gt;&lt;td readability=&quot;1.25&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;    &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sources_and_Resources.html&quot; class=&quot;toptoclink&quot; data-pltdoc=&quot;x&quot;&gt;7&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Sources and Resources&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.0909090909091&quot;&gt;&lt;td readability=&quot;1.8181818181818&quot;&gt;
&lt;p&gt;&lt;span class=&quot;hspace&quot;&gt;      &lt;/span&gt;&lt;a href=&quot;https://cs.uwaterloo.ca/~plragde/flaneries/FDS/Sources_and_Resources.html#%28part._.Acknowledgements%29&quot; class=&quot;toclink&quot; data-pltdoc=&quot;x&quot;&gt;7.1&lt;span class=&quot;hspace&quot;&gt; &lt;/span&gt;Acknowledgements&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Wed, 20 Jun 2018 03:44:11 +0000</pubDate>
<dc:creator>signa11</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://cs.uwaterloo.ca/~plragde/flaneries/FDS/</dc:identifier>
</item>
<item>
<title>Canada legalises recreational cannabis use</title>
<link>https://www.bbc.co.uk/news/world-us-canada-44543286</link>
<guid isPermaLink="true" >https://www.bbc.co.uk/news/world-us-canada-44543286</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Canadian flying a national flag with a marijuana leaf instead of a maple leaf&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/F2FA/production/_102120226_aa038ab5-e73f-400f-ae7e-f024eff17c6f.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;AFP/Getty&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The Senate passed the bill, with 52 votes in favour and 29 against
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Canada's parliament has passed a law legalising the recreational use of marijuana nationwide.&lt;/p&gt;&lt;p&gt;The Cannabis Act passed its final hurdle on Tuesday in a 52-29 vote in the Senate. The bill controls and regulates how the drug can be grown, distributed, and sold. &lt;/p&gt;&lt;p&gt;Canadians will be able to buy and consume cannabis legally as early as this September. &lt;/p&gt;&lt;p&gt;The country is the second worldwide to legalise the drug's recreational use.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/uk-44531112&quot; class=&quot;story-body__link&quot;&gt;Legalising cannabis: What you need to know&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-latin-america-39522345&quot; class=&quot;story-body__link&quot;&gt;Uruguay became the first country to legalise the sale of cannabis for recreational use&lt;/a&gt; in December 2013, while a number of US states have also voted to permit it.&lt;/p&gt;&lt;p&gt;Cannabis possession first became a crime in Canada in 1923 but medical use has been legal since 2001. &lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-us-canada-38083738&quot; class=&quot;story-body__link&quot;&gt;Pot advocates concerned about legalisation&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/av/world-us-canada-38500023/marijuana-brands-aim-for-high-end-retail-in-canada&quot; class=&quot;story-body__link&quot;&gt;Marijuana brands aim for high-end retail in Canada&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The bill will likely receive Royal Assent this week, and the government will then choose an official date when the law will come into force.&lt;/p&gt;&lt;p&gt;Prime Minister Justin Trudeau tweeted that until now, &quot;it's been too easy for our kids to get marijuana - and for criminals to reap the profits&quot;.&lt;/p&gt;&lt;div class=&quot;social-embed&quot;&gt;&lt;div class=&quot;social-embed-post social-embed-twitter&quot;&gt;
    &lt;div class=&quot;embed embed-twitter&quot; readability=&quot;4.7739938080495&quot;&gt;
        &lt;div class=&quot;embed-region&quot; role=&quot;region&quot; aria-label=&quot;Twitter post by @JustinTrudeau&quot; readability=&quot;5.5696594427245&quot;&gt;
            &lt;a class=&quot;off-screen jump-link&quot; href=&quot;#jump-linkhttps://twitter.com/JustinTrudeau/status/1009227308216045568&quot;&gt;Skip Twitter post  by @JustinTrudeau&lt;/a&gt;
            &lt;div class=&quot;twitter-wrap&quot; readability=&quot;6.1285140562249&quot;&gt;
                &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;6.2768595041322&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;It’s been too easy for our kids to get marijuana - and for criminals to reap the profits. Today, we change that. Our plan to legalize &amp;amp; regulate marijuana just passed the Senate. &lt;a href=&quot;https://twitter.com/hashtag/PromiseKept?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#PromiseKept&lt;/a&gt;&lt;/p&gt;— Justin Trudeau (@JustinTrudeau) &lt;a href=&quot;https://twitter.com/JustinTrudeau/status/1009227308216045568?ref_src=twsrc%5Etfw&quot;&gt;June 20, 2018&lt;/a&gt;&lt;/blockquote&gt;

            
            &lt;/div&gt;
            &lt;p class=&quot;off-screen&quot; id=&quot;jump-linkhttps://twitter.com/JustinTrudeau/status/1009227308216045568&quot; tabindex=&quot;-1&quot;&gt;End of Twitter post  by @JustinTrudeau&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;But some groups objected to the new law, with opposition Conservative politicians and indigenous groups among those voicing concerns.&lt;/p&gt;&lt;p&gt;The government is expected to give the provinces and territories, as well as municipalities, eight to 12 weeks to set up the new marijuana marketplace.&lt;/p&gt;&lt;p&gt;This timeframe will also allow industry and police forces to prepare for the new legal framework.&lt;/p&gt;&lt;p&gt;In 2015, &lt;a href=&quot;https://www.bbc.co.uk/news/world-us-canada-42416763&quot; class=&quot;story-body__link&quot;&gt;Canadians were estimated to have spent about C$6bn ($4.5bn, £3.4bn) on cannabis&lt;/a&gt; - almost as much as they did on wine.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How will legal marijuana in Canada work? &lt;/h2&gt;&lt;p&gt;It is likely that by mid-September, Canadians will be able to buy cannabis and cannabis oil grown by licensed producers at various retail locations. &lt;/p&gt;&lt;p&gt;Canadians across the country will also be able to order the drug online from federally licensed producers, and grow up to four plants at home.&lt;/p&gt;&lt;figure class=&quot;media-with-caption&quot; readability=&quot;-24&quot;&gt;&lt;div class=&quot;player-with-placeholder&quot; readability=&quot;7&quot;&gt;
            &lt;img class=&quot;media-placeholder player-with-placeholder__image narrative-video-placeholder&quot; src=&quot;https://ichef.bbci.co.uk/images/ic/720x405/p06blz34.jpg&quot;/&gt;&lt;p&gt;Media playback is unsupported on your device&lt;/p&gt;
      
    &lt;/div&gt;    &lt;figcaption class=&quot;media-with-caption__caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Media caption&lt;/span&gt;Take a look inside the world's largest legal cannabis farm&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Adults will be able to possess up to 30 grams (one ounce) of dried cannabis in public. &lt;/p&gt;&lt;p&gt;Edibles, or cannabis-infused foods, will not be immediately available for purchase but will be within a year of the bill coming into force. The delay is meant to give the government time to set out regulations specific to those products. &lt;/p&gt;&lt;p&gt;The minimum legal age to buy and consume marijuana has been set federally at 18 but some provinces have chosen to set it at 19. &lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-us-canada-42285744&quot; class=&quot;story-body__link&quot;&gt;Canada, provinces reach pot tax deal &lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/business-28767270&quot; class=&quot;story-body__link&quot;&gt;Cannabis and Canada: Why has drug policy changed?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Provinces are in charge of how it is sold and have the power to set various other limits on its use within their jurisdiction - like where it can be smoked. &lt;/p&gt;&lt;p&gt;But the federal government has set guidelines for plain packaging with little branding and strict health warnings. It will also impose restrictions on promotions targeting young people, promotion through sponsorships, or depictions of celebrities, characters or animals in advertisements.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What will remain illegal?&lt;/h2&gt;&lt;p&gt;It will be illegal to possess more than 30 grams of cannabis in public, grow more than four plants per household and to buy from an unlicensed dealer. &lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Press Association&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    There will still be some restrictions on cannabis use in Canada
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Penalties will be severe. Someone caught selling the drug to a minor could be jailed for up to 14 years.&lt;/p&gt;&lt;p&gt;Some critics say the penalties are too harsh and not proportional to similar laws like those around selling alcohol to minors. &lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What are the rules around the world?&lt;/h2&gt;&lt;p&gt;Cannabis is banned in most countries but a number of places have decriminalised its use in recent years. &lt;a href=&quot;https://www.bbc.co.uk/news/uk-politics-44536978&quot; class=&quot;story-body__link&quot;&gt;The UK government said recently it would review the use of medicinal cannabis.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;It is legal for medicinal purposes in 14 European countries, Israel, Argentina, Puerto Rico, Panama, Mexico, Turkey, Zambia and Zimbabwe.&lt;/p&gt;&lt;p&gt;In the US, medicinal use is allowed in 29 states and the District of Columbia, Nine of the states have legalised both medical and personal cannabis use.&lt;/p&gt;&lt;p&gt;Spain, the Netherlands, Portugal, Slovenia, Jamaica, Chile, Peru, Colombia, Ecuador and Luxembourg are among countries that have relaxed legislation regarding personal use.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Did anyone object?&lt;/h2&gt;&lt;p&gt;The new law has not been met with universal praise.&lt;/p&gt;&lt;p&gt;Conservative Party leader Andrew Scheer has previously said he was apprehensive it would normalise cannabis use and make it more accessible. &lt;/p&gt;&lt;p&gt;Leo Housakos, a Conservative senator from Quebec, tweeted to say that he thought the law would be &quot;catastrophic for Canadian generations to come&quot;.&lt;/p&gt;&lt;p&gt;One specific concern being raised is the legal minimum age being set at 18 instead of 25, as was recommended by multiple experts. However, the government's own task force recommended 18, warning that setting the age limit too high could continue to encourage youth to buy marijuana on the illegal market. &lt;/p&gt;&lt;p&gt;Opponents also question the potential public health impact of legalisation. &lt;/p&gt;&lt;p&gt;Meanwhile, indigenous groups and politicians have voiced fears that their communities were not adequately consulted in the run-up to the vote.&lt;/p&gt;&lt;p&gt;Indigenous services minister Jane Philpott and health minister Ginette Petitpas Taylor had to write a letter to the chair and deputy chair of the Senate's Committee on Aboriginal Peoples earlier in June promising a full report to parliament addressing their concerns, narrowly averting a delay to the law's passage.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Why is Canada doing this now? &lt;/h2&gt;&lt;p&gt;This legislation fulfils a 2015 campaign promise by Mr Trudeau, the leader of the Liberal Party.&lt;/p&gt;&lt;p&gt;The prime minister has argued that Canada's nearly century-old laws criminalising use of the drug have been ineffective, given that Canadians are still among the world's heaviest users.&lt;/p&gt;&lt;p&gt;Polls have repeatedly indicated that a solid majority of Canadians are supportive of the move. &lt;/p&gt;&lt;p&gt;The decision to legalise recreational use of marijuana in Canada comes as global trends shift away from criminal prohibition of the widely used drug. &lt;/p&gt;&lt;figure class=&quot;media-with-caption&quot; readability=&quot;-24&quot;&gt;&lt;div class=&quot;player-with-placeholder&quot; readability=&quot;7&quot;&gt;
            &lt;img class=&quot;media-placeholder player-with-placeholder__image narrative-video-placeholder&quot; src=&quot;https://ichef.bbci.co.uk/images/ic/720x405/p05jldgm.jpg&quot;/&gt;&lt;p&gt;Media playback is unsupported on your device&lt;/p&gt;
      
    &lt;/div&gt;    &lt;figcaption class=&quot;media-with-caption__caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Media caption&lt;/span&gt;UK Labour backbencher Paul Flynn said the tide of world opinion is moving to legalisation of cannabis&lt;/figcaption&gt;&lt;/figure&gt;</description>
<pubDate>Wed, 20 Jun 2018 01:06:59 +0000</pubDate>
<dc:creator>pmoriarty</dc:creator>
<og:title>Canada legalises recreational cannabis use</og:title>
<og:type>article</og:type>
<og:description>It becomes the second country in the world to allow recreational use of the drug nationwide.</og:description>
<og:url>https://www.bbc.co.uk/news/world-us-canada-44543286</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/F2FA/production/_102120226_aa038ab5-e73f-400f-ae7e-f024eff17c6f.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.co.uk/news/world-us-canada-44543286</dc:identifier>
</item>
</channel>
</rss>