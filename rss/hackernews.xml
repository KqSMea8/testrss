<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Why I Ripped the Same CD 300 Times</title>
<link>https://john-millikin.com/%F0%9F%A4%94/why-i-ripped-the-same-cd-300-times</link>
<guid isPermaLink="true" >https://john-millikin.com/%F0%9F%A4%94/why-i-ripped-the-same-cd-300-times</guid>
<description>&lt;p&gt;I collect music by buying physical CDs, digitizing them with &lt;a href=&quot;http://www.exactaudiocopy.de&quot;&gt;Exact Audio Copy&lt;/a&gt;, and scanning the artwork. This is sometimes challenging if the CD was self-published in a limited run in a foreign country ten years ago. It is very challenging if the CDs have a manufacturing defect that renders some tracks unreadable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/shiro_jacket.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The piano arrangement album &lt;a href=&quot;https://altneuland.net/gallery/the-citadel-where-to-return/&quot;&gt;Â∏∞„Çã„Åπ„ÅçÂüé&lt;/a&gt; by &lt;a href=&quot;https://altneuland.net/&quot;&gt;Altneuland&lt;/a&gt; was published in 2005. I discovered it in 2008 (probably on YouTube), downloaded the best copy I could find, and filed it away in the TODO list. Recent advances in international parcel forwarding technology let me buy a used copy last year, but when it arrived none of my CD drives could read track #3. This sort of thing is common when buying used CDs, especially if they need to transit a USPS international shipping center. I shelved it and kept on the lookout for another copy, which I located last month. It arrived on Friday, I immediately tried to rip it, and hit the &lt;em&gt;exact same error&lt;/em&gt;. This didn‚Äôt seem to be an issue of wear or damage ‚Äì the CD itself was probably defective from the factory.&lt;/p&gt;
&lt;p&gt;I had two choices: hope to find another copy some day that would rip successfully (unlikely), or somehow regenerate the original audio data from my corrupt copies. You already know which branch I took.&lt;/p&gt;
&lt;h2 id=&quot;how-ripping-works&quot;&gt;How Ripping Works&lt;/h2&gt;
&lt;div readability=&quot;7&quot;&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2009-20-48.png&quot;/&gt;&lt;p&gt;&lt;em&gt;EAC failing to read track #3 of „ÄåÂ∏∞„Çã„Åπ„ÅçÂüé„Äç&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;CDs store digital data, but the interface between CDs, lasers, and optical diodes is very analog. Read errors can be caused by anything from dirty media, to scratches on the protective polycarbonate layer, to vibration from the optical drive itself. The primitive error correction codes in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Compact_Disc_Digital_Audio&quot;&gt;CDDA standard&lt;/a&gt;, designed to minimize audible distortions on lightly used disks, are not capable of fully recovering the bitstream on CDs with a significant error rate. Contemporary CD ripping software works around this with two important error detection techniques: redundant reads and AccurateRip.&lt;/p&gt;
&lt;p&gt;The page &lt;a href=&quot;http://www.exactaudiocopy.de/en/index.php/overview/basic-technology/extraction-technology/&quot;&gt;EAC: Extraction Technology&lt;/a&gt; describes EAC‚Äôs approach to redundant reads:&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;In secure mode this program either reads every audio sector at least twice [‚Ä¶] If an error occurs (read or sync error), the program keeps on reading this sector, until eight of 16 retries are identical, but at maximum one, three or five times (according to the selected error recovery quality) these 16 retries are read. So, in the worst case, bad sectors are read up to 82 times!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Simple enough. If a read request sometimes returns bad data, read everything twice, and then be extra careful if the first two reads didn‚Äôt match. &lt;a href=&quot;https://wiki.hydrogenaud.io/index.php?title=AccurateRip&quot;&gt;AccurateRip&lt;/a&gt; is the same principle, but distributed ‚Äì it‚Äôs a service to which rippers can submit checksums of their ripped audio files. The idea is that if you rip a track and see that a thousand other people got the same bits for the same track, then your rip was probably good.&lt;/p&gt;
&lt;p&gt;This article is about what happens with both techniques fail. EAC can‚Äôt make progress if every single read returns different data, and because it‚Äôs rare the AccurateRip database only had a single entry.&lt;/p&gt;
&lt;h2 id=&quot;‚Äúi-walked-ten-thousand-aisles,-ten-thousand-aisles-to-see-you‚Äù&quot;&gt;‚ÄúI walked ten thousand aisles, ten thousand aisles to see you‚Äù&lt;/h2&gt;
&lt;div readability=&quot;11&quot;&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/IMG_20180730_123418.jpg&quot;/&gt;&lt;p&gt;&lt;em&gt;Optical drives from Asus, LG, Lite-On, Pioneer, and an unknown OEM&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A practical solution to CDs that won‚Äôt rip is to use a different drive. Sometimes a particular model is especially lenient with the CDDA spec or has better error correction firmware or whatever. The DBpoweramp forums maintain a &lt;a href=&quot;https://forum.dbpoweramp.com/showthread.php?37706-CD-DVD-Drive-Accuracy-List-2016&quot;&gt;CD/DVD Drive Accuracy List&lt;/a&gt; for rippers to select a good drive.&lt;/p&gt;
&lt;p&gt;On Saturday morning I bought five new CD drives from different brands, tried rips on all of them, and found one that could maintain sync through the broken track. Unfortunately the confirmation rip failed to verify ‚Äì there were about 20,000 bytes different betwen each rip.&lt;/p&gt;
&lt;p&gt;But now I had a .wav file sitting on disk, and a way to get more of them. Reasoning that the read errors on a bad disk will fluctuate around the ‚Äúcorrect‚Äù value, I figured I‚Äôd rip it a couple times, find the most ‚Äúvoted‚Äù value for unstable bytes, and use that as a correction. This approach was ultimately successful, but was far more work than I expected.&lt;/p&gt;
&lt;h2 id=&quot;‚Äúquantity-has-a-quality-all-its-own‚Äù&quot;&gt;‚ÄúQuantity has a quality all its own‚Äù&lt;/h2&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2015-24-15.png&quot;&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2015-24-15.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Corrected and uncorrectable errors per rip count&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I started by ripping one of the CDs repeatedly, recording all the values for each byte, and declaring an error ‚Äúcorrectable‚Äù if more than half of the rips had used a particular byte value at that position. Initial behavior was good, the number of uncorrectable errors dropped from almost ~6900 bytes at N=4 to ~5000 bytes at N=10. The per-rip benefit slowly decreased over time, until at around N=80 the uncorrectable error count stabilized at ~3700. I stopped ripping at N=100.&lt;/p&gt;
&lt;div readability=&quot;30.937617909697&quot;&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2015-24-20.png&quot;&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2015-24-20.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Same, but for two disks with cross-checked corrections&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Next I tried ripping the second CD 100 times and using the two correction maps to ‚Äúfill in‚Äù uncorrectable error positions in the other disk. This was a failure: each disk had thousands of corrections that disagreed with corrections on the other disk! It turns out you can‚Äôt fix noisy data by intersecting it with a different-but-related noise source.&lt;/p&gt;
&lt;h2 id=&quot;arts-and-crafts&quot;&gt;Arts and Crafts&lt;/h2&gt;
&lt;div&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/IMG_20180730_104806.jpg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The EAC site has another nice resource: the &lt;a href=&quot;http://www.exactaudiocopy.de/en/index.php/other-projects/dae-quality/&quot;&gt;DAE Quality Test&lt;/a&gt;, which quantifies the error correction capability of an optical disk drive‚Äôs firmware. This is a different, lower-level type of error handling that can &lt;em&gt;fix&lt;/em&gt; read errors instead of merely reporting them. The catch is that EAC‚Äôs ‚Äúsecure mode‚Äù works by disabling or avoiding this built-in correction code, on the assumption that it doesn‚Äôt work well.&lt;/p&gt;
&lt;p&gt;The test is prepared by burning a provided waveform to a CD-R, cutting some divots in the data surface, then carefully coloring part of it with black marker. That‚Äôs it ‚Äì guaranteed unrecoverable errors in a deterministic pattern.&lt;/p&gt;
&lt;p&gt;I ran the test on all of the drives, obtaining two interesting results:&lt;/p&gt;
&lt;div readability=&quot;30.5&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/dae-liteon.png&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The Lite-On drive here is what I used to get past the sync error. It happily chews through the magic marker, but gets &lt;em&gt;really&lt;/em&gt; confused by straight lines cut in the data surface. You can see how what should be three distinct peaks on the right get merged into one giant error blob.&lt;/p&gt;
&lt;div class=&quot;chroma-chroma&quot;&gt;
&lt;table class=&quot;chroma-lntable&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;chroma-lntd&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
&lt;span class=&quot;chroma-lnt&quot;&gt;1
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;2
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;3
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;4
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;5
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;6
&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;chroma-lntd&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
Errors total        Num : 206645159
Errors (Loudness)   Num : 965075 - Avg :  -21.7 dB(A)   -  Max :   -5.5 dB(A)
Error Muting        Num : 154153 - Avg :   99.1 Samples -  Max :   3584 Samples
Skips               Num :    103 - Avg :  417.3 Samples -  Max :   2939 Samples

Total Test Result       :   45.3 points (of 100.0 maximum)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div readability=&quot;47&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/dae-pioneer.png&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The Pioneer drive scored the highest on the DAE test. To my eye the chart doesn‚Äôt look like anything special, but the analysis tool judged it the best error-correction firmware in my little fleet.&lt;/p&gt;
&lt;div class=&quot;chroma-chroma&quot;&gt;
&lt;table class=&quot;chroma-lntable&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;chroma-lntd&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
&lt;span class=&quot;chroma-lnt&quot;&gt;1
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;2
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;3
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;4
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;5
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;6
&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;chroma-lntd&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
Errors total        Num : 2331952
Errors (Loudness)   Num : 147286 - Avg :  -77.2 dB(A)   -  Max :  -13.2 dB(A)
Error Muting        Num :   8468 - Avg :    1.5 Samples -  Max :    273 Samples
Skips               Num :     50 - Avg :    6.5 Samples -  Max :     30 Samples

Total Test Result       :   62.7 points (of 100.0 maximum)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;h2 id=&quot;‚Äúat-some-point-numbers-do-count‚Äù&quot;&gt;‚ÄúAt some point numbers do count‚Äù&lt;/h2&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2016-03-18.png&quot;&gt;&lt;img src=&quot;https://john-millikin.com/ü§î/why-i-ripped-the-same-cd-300-times/Screenshot%20from%202018-07-30%2016-03-18.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Corrected and uncorrectable errors per rip count (Pioneer)&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;How can I use the Pioneer‚Äôs good innate error handing when EAC‚Äôs ‚Äúsecure mode‚Äù works by bypassing a drive‚Äôs error logic? That‚Äôs easy, switch EAC to ‚Äúburst mode‚Äù and let it write the bits to disk just as the firmware reported them. How can we turn that heap of unchecked wavs into a file of ‚Äúsecure mode‚Äù quality? The same error analysis tooling built for the Lite-On rips!&lt;/p&gt;
&lt;p&gt;A few EAC config tweaks and another hundred rips later, we get this beautiful chart. A few things to note:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The uncorrectable bit errors quickly approach zero, but never quite get there.&lt;/li&gt;
&lt;li&gt;There‚Äôs a huge jump in corrected errors in the 53rd or 54th rip.&lt;/li&gt;
&lt;li&gt;The error counts before and after that big jump have some flat areas, indicating areas of stability in the ripped data.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;0xa595bc09&quot;&gt;0xA595BC09&lt;/h2&gt;
&lt;p&gt;Using the nearly-perfect correction data from the Pioneer, I generated a ‚Äúbest guess‚Äù file and started comparing it to the Pioneer rips. As expected there were some bad outliers, which I fixed by ripping ten more times:&lt;/p&gt;
&lt;div class=&quot;chroma-chroma&quot;&gt;
&lt;table class=&quot;chroma-lntable&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;chroma-lntd&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
&lt;span class=&quot;chroma-lnt&quot;&gt; 1
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 2
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 3
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 4
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 5
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 6
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 7
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 8
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 9
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;10
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;11
&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;chroma-lntd&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
$ for RIP_ID in $(seq -w 1 100); do echo -n &quot;rip$RIP_ID: &quot;; cmp -l analysis-out.wav rips-cd1-pioneer/rip${RIP_ID}/*.wav | wc -l ; done | sort -rgk2 | head -n 10
rip054: 2865
rip099: 974
rip007: 533
rip037: 452
rip042: 438
rip035: 404
rip006: 392
rip059: 381
rip043: 327
rip014: 323
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;I also found something really interesting, a handful of rips had come out with &lt;em&gt;exactly&lt;/em&gt; the same audio content! Remember that this is what the EAC ‚Äúsecure mode‚Äù is designed to test for as a success criteria. That &lt;code&gt;shncat -q -e | rhash --print=&quot;%C&quot;&lt;/code&gt; snippet is used to calculate the CRC32 checksum of the raw audio data, and it‚Äôs what AccurateRip uses.&lt;/p&gt;
&lt;div class=&quot;chroma-chroma&quot;&gt;
&lt;table class=&quot;chroma-lntable&quot; readability=&quot;3.5&quot;&gt;&lt;tr readability=&quot;10.5&quot;&gt;&lt;td class=&quot;chroma-lntd&quot; readability=&quot;5&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
&lt;span class=&quot;chroma-lnt&quot;&gt; 1
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 2
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 3
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 4
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 5
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 6
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 7
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 8
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 9
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;10
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;11
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;12
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;13
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;14
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;15
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;16
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;17
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;18
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;19
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;20
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;21
&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;chroma-lntd&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
$ for wav in rips-cd1-pioneer/*/*.wav; do shncat &quot;$wav&quot; -q -e | rhash --printf=&quot;%C $wav\n&quot; - ; done  | sort -k1
[...]
9DD05FFF rips-cd1-pioneer/rip059/rip.wav
9F8D1B53 rips-cd1-pioneer/rip072/rip.wav
A2EA0283 rips-cd1-pioneer/rip082/rip.wav
A595BC09 rips-cd1-pioneer/rip021/rip.wav
A595BC09 rips-cd1-pioneer/rip022/rip.wav
A595BC09 rips-cd1-pioneer/rip023/rip.wav
A595BC09 rips-cd1-pioneer/rip024/rip.wav
A595BC09 rips-cd1-pioneer/rip025/rip.wav
A595BC09 rips-cd1-pioneer/rip026/rip.wav
A595BC09 rips-cd1-pioneer/rip027/rip.wav
A595BC09 rips-cd1-pioneer/rip028/rip.wav
A595BC09 rips-cd1-pioneer/rip030/rip.wav
A595BC09 rips-cd1-pioneer/rip031/rip.wav
A595BC09 rips-cd1-pioneer/rip040/rip.wav
A595BC09 rips-cd1-pioneer/rip055/rip.wav
A595BC09 rips-cd1-pioneer/rip058/rip.wav
AA3B5929 rips-cd1-pioneer/rip043/rip.wav
ABAAE784 rips-cd1-pioneer/rip033/rip.wav
[...]
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Setting that aside for now, re-ripping the outliers let the analysis complete with zero uncorrectable errors. And when I checked that file, it had the same audio content as the ‚Äúcommon‚Äù rip! This is enough to declare victory.&lt;/p&gt;
&lt;p&gt;I am 99% confident that I have successfully ripped this troublesome CD, with 0xA595BC09 being the correct CRC of track #3.&lt;/p&gt;
&lt;h2 id=&quot;appendix-a:-compare.rs&quot;&gt;Appendix A: compare.rs&lt;/h2&gt;
&lt;p&gt;This is the tool I used to calculate suspected byte errors. It wasn‚Äôt intended to live long so it‚Äôs a bit ugly, but may be of interest to anyone who stumbles across this page with the same goal.&lt;/p&gt;
&lt;div class=&quot;chroma-chroma&quot;&gt;
&lt;table class=&quot;chroma-lntable&quot; readability=&quot;15.5&quot;&gt;&lt;tr readability=&quot;46.5&quot;&gt;&lt;td class=&quot;chroma-lntd&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
&lt;span class=&quot;chroma-lnt&quot;&gt; 1
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 2
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 3
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 4
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 5
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 6
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 7
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 8
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt; 9
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;10
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;11
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;12
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;13
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;14
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;15
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;16
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;17
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;18
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;19
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;20
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;21
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;22
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;23
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;24
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;25
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;26
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;27
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;28
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;29
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;30
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;31
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;32
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;33
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;34
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;35
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;36
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;37
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;38
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;39
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;40
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;41
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;42
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;43
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;44
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;45
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;46
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;47
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;48
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;49
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;50
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;51
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;52
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;53
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;54
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;55
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;56
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;57
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;58
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;59
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;60
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;61
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;62
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;63
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;64
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;65
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;66
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;67
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;68
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;69
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;70
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;71
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;72
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;73
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;74
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;75
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;76
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;77
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;78
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;79
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;80
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;81
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;82
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;83
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;84
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;85
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;86
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;87
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;88
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;89
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;90
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;91
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;92
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;93
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;94
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;95
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;96
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;97
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;98
&lt;/span&gt;&lt;span class=&quot;chroma-lnt&quot;&gt;99
&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;chroma-lntd&quot; readability=&quot;30&quot;&gt;
&lt;pre class=&quot;chroma-chroma&quot;&gt;
&lt;span class=&quot;chroma-k&quot;&gt;extern&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;crate&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;memmap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;collections&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;sync&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;mpsc&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;memmap&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;Mmap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;CHUNK_SIZE&lt;/span&gt;: &lt;span class=&quot;chroma-kt&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;chroma-nf&quot;&gt;suspect_positions&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps&lt;/span&gt;: &lt;span class=&quot;chroma-kp&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;chroma-nc&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;Mmap&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;: &lt;span class=&quot;chroma-kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;end_idx&lt;/span&gt;: &lt;span class=&quot;chroma-kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;-&amp;gt; &lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;ii&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;end_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;byte&lt;/span&gt;: &lt;span class=&quot;chroma-kt&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;_file_name&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;ii&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;ii&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;ii&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;chroma-nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;args&lt;/span&gt;: &lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;env&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;size&lt;/span&gt;: &lt;span class=&quot;chroma-kt&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;files&lt;/span&gt;: &lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;fs&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps&lt;/span&gt;: &lt;span class=&quot;chroma-nc&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;Mmap&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;HashMap&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;fs&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;File&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;unsafe&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;Mmap&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;};&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;());&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_tx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_rx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mpsc&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps_ref&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;sync&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;Arc&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;t_start_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;t_end_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;cmp&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;CHUNK_SIZE&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;t_end_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps_ref&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps_ref&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_tx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_tx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;thread&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspect_positions&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps_ref&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;as_ref&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;t_start_idx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;t_end_idx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_tx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;});&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;start_idx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;t_end_idx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_tx&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;: &lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;chroma-kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-nb&quot;&gt;Vec&lt;/span&gt;::&lt;span class=&quot;chroma-n&quot;&gt;with_capacity&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_chunk&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_rx&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects_chunk&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;{{&lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;: [&quot;&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first_file&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;mmaps_ref&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_comma&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first_file&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;};&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;first_file&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;{}{{&lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;suspect_bytes&lt;/span&gt;&lt;span class=&quot;chroma-se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;: [&quot;&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_comma&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;ii&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;comma&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;ii&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;suspects&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;};&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;[{}, {}]{}&quot;&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;comma&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;]}}&quot;&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;chroma-n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;chroma-o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;chroma-s&quot;&gt;&quot;]}}&quot;&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;chroma-w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;chroma-p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Mon, 30 Jul 2018 23:59:36 +0000</pubDate>
<dc:creator>jmillikin</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://john-millikin.com/%F0%9F%A4%94/why-i-ripped-the-same-cd-300-times</dc:identifier>
</item>
<item>
<title>Why the New V8 Is So Damn Fast</title>
<link>https://nodesource.com/blog/why-the-new-v8-is-so-damn-fast</link>
<guid isPermaLink="true" >https://nodesource.com/blog/why-the-new-v8-is-so-damn-fast</guid>
<description>&lt;fieldset class=&quot;social-share&quot;&gt;&lt;legend&gt;Share&lt;/legend&gt;

&lt;/fieldset&gt;&lt;p&gt;Many in the Node.js community were excited to see recent updates to V8, which impacted the entire V8 compiler architecture as well as large parts of the Garbage Collector. TurboFan replaced Crankshaft, and Orinoco now collects garbage in parallel, among other changes that were applied.&lt;/p&gt;
&lt;p&gt;Node.js version 8 shipped with this new and improved version of V8, which means we can finally write idiomatic and declarative JavaScript without worrying about incurring performance overhead due to compiler shortcomings. At least, this is what the V8 team tells us.&lt;/p&gt;
&lt;p&gt;As part of my work with NodeSource I researched these latest changes, by consulting blog articles published by the V8 team, reading the V8 source code itself, and by building tools that provide the means to verify specific performance metrics.&lt;/p&gt;
&lt;p&gt;I collected those findings inside a github repository &lt;a href=&quot;https://github.com/thlorenz/v8-perf&quot;&gt;v8-perf&lt;/a&gt; to make them available to the community. They are also the basis for a talk I'll give at &lt;a href=&quot;http://www.nodesummit.com/agenda/&quot;&gt;NodeSummit&lt;/a&gt; this week and a series of blog posts, starting with this one.&lt;/p&gt;
&lt;div class=&quot;blog-cta nsolid&quot; readability=&quot;20.363636363636&quot;&gt;View notes and resources on v8 and Node.js performance: &lt;a class=&quot;button more large&quot; href=&quot;https://github.com/thlorenz/v8-perf&quot;&gt;Visit thlorenz/v8-perf on Github&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;As the changes are complex and many, I plan to provide an introduction in this post and explore this topic in more details in future blog posts in the series. Thus, you could consider this a &lt;strong&gt;tl;dr&lt;/strong&gt; of what's yet to come.&lt;/p&gt;
&lt;p&gt;For those of you eager to learn more immediately head on over to &lt;a href=&quot;https://github.com/thlorenz/v8-perf&quot;&gt;v8-perf&lt;/a&gt; or consult the resources provided below.&lt;/p&gt;
&lt;h2 id=&quot;thenewv8compilerpipeline&quot;&gt;The New V8 Compiler Pipeline&lt;/h2&gt;
&lt;p&gt;As most of you will know, previous V8 versions suffered from so-called &lt;em&gt;optimizations killers&lt;/em&gt; that seemed impossible to fix in the engine. The V8 team also had a difficult time implementing new JavaScript language features with good performance characteristics.&lt;/p&gt;
&lt;p&gt;The main reason for this was that the V8 architecture had become very hard to change and extend. Crankshaft, the optimizing compiler, had not been implemented with a constantly-evolving language in mind, and the lack of separation between layers in the compiler pipeline became a problem. In some extreme cases, developers had to write assembly code by hand for the &lt;em&gt;four&lt;/em&gt; supported architectures.&lt;/p&gt;
&lt;p&gt;The V8 team realized that this was not a sustainable system, especially with the many new&lt;br/&gt;language features that would need to be added as JavaScript itself evolved more rapidly. Thus, a new compiler architecture was designed from the ground up. It is split into three cleanly separated layers, the &lt;em&gt;frontend&lt;/em&gt;, &lt;em&gt;optimization layer&lt;/em&gt;, and &lt;em&gt;backend&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The frontend is mostly responsible for the generation of bytecode run by the &lt;em&gt;Ignition&lt;/em&gt; interpreter, while the optimization layer improves the code's performance via the &lt;em&gt;TurboFan&lt;/em&gt; optimizing compiler. Lower level tasks, like machine-level optimization, scheduling, and generation of machine code for the supported architectures, are performed by the backend.&lt;/p&gt;
&lt;p&gt;The separation of the backend alone resulted in about 29% less architecture-specific code even though at this point &lt;em&gt;nine&lt;/em&gt; architectures are supported.&lt;/p&gt;
&lt;h2 id=&quot;smallerperformancecliffs&quot;&gt;Smaller Performance Cliffs&lt;/h2&gt;
&lt;p&gt;The primary goals of this new V8 architecture include the following:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;smaller performance cliffs&lt;/li&gt;
&lt;li&gt;improved startup time&lt;/li&gt;
&lt;li&gt;improved baseline performance&lt;/li&gt;
&lt;li&gt;reduced memory usage&lt;/li&gt;
&lt;li&gt;support for new language features&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The first three goals are related to the implementation of the &lt;em&gt;Ignition&lt;/em&gt; interpreter, and the third goal is partially achieved via improvements in that area as well.&lt;/p&gt;
&lt;p&gt;To start, I will focus on this part of the architecture and explain it in conjunction with those goals.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/hspc7zpa5cvq/3Lj8FuZkw8Cieyqss6uecU/6c8cfcd2ba3a09abdda8b96a332bb73d/cliff-cropped.png&quot; alt=&quot;cliff-cropped&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In the past the V8 team focused on the performance of optimized code and somewhat neglected that of interpreted bytecode; this resulted in steep performance cliffs, which made runtime characteristics of an application very unpredictable overall. An application could be running perfectly fine until something in the code tripped up Crankshaft, causing it to deoptimize and resulting in a huge performance degradation - in some&lt;br/&gt;cases, sections would execute &lt;strong&gt;100x slower&lt;/strong&gt;. To avoid &lt;em&gt;falling off the cliff&lt;/em&gt;, developers learned how to make the optimizing compiler happy by writing &lt;em&gt;Crankshaft Script&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;However, it was shown that for most web pages the optimizing compiler isn't as important as is the interpreter, as code needs to run fast quickly. There is no time to &lt;em&gt;warm up&lt;/em&gt; your code and since &lt;em&gt;speculative optimizations&lt;/em&gt; aren't cheap, the optimizing compiler even hurt performance in some cases.&lt;/p&gt;
&lt;p&gt;The solution was to improve the &lt;em&gt;baseline performance&lt;/em&gt; of interpreter bytecode. This is achieved by passing the bytecode through inline-optimization stages as it is generated, resulting in highly optimized and small interpreter code which can execute the instructions and interact with rest of V8 VM in a low overhead manner.&lt;/p&gt;
&lt;p&gt;Since the bytecode is small, memory usage was reduced as well and as it runs decently fast further optimizations can be delayed. Thus, more information can be collected via &lt;em&gt;Inline Caches&lt;/em&gt; before an optimization is attempted, causing less overhead due to deoptimizations and re-optimizations that occur when assumptions about how the code will execute are violated.&lt;/p&gt;
&lt;p&gt;Running bytecode instead of TurboFan optimized code won't have the detrimental effect it had in the past since it is performing closer to the optimized code; this means any performance cliff dropoffs are much smaller.&lt;/p&gt;
&lt;h2 id=&quot;makingsureyourcoderunsatpeakperformance&quot;&gt;Making Sure Your Code Runs at Peak Performance&lt;/h2&gt;
&lt;p&gt;When using the new V8, writing declarative JavaScript and using good data structures and algorithms is all you need to worry about in most cases. However in &lt;em&gt;hot code paths&lt;/em&gt; of your application you may want to ensure that it is running at peak performance.&lt;/p&gt;
&lt;p&gt;The TurboFan optimizing compiler uses advanced techniques to make &lt;em&gt;hot code&lt;/em&gt; run as fast as possible. These techniques include the &lt;em&gt;sea of nodes&lt;/em&gt; approach, &lt;em&gt;innovative scheduling&lt;/em&gt;, and many more which will be explained in future blog posts.&lt;/p&gt;
&lt;p&gt;TurboFan relies on input type information collected via &lt;em&gt;inline caches&lt;/em&gt; while functions run via the Ignition interpreter. Using that information it generates the best possible code handling the different types it encountered.&lt;/p&gt;
&lt;p&gt;The fewer function input type variations the compiler has to consider, the smaller and faster the resulting code will be. Therefore, you can help TurboFan make your code fast by keeping your functions &lt;em&gt;monomorphic&lt;/em&gt; or at least &lt;em&gt;polymorphic&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;monomorphic&lt;/em&gt;: one input type&lt;/li&gt;
&lt;li&gt;&lt;em&gt;polymorphic&lt;/em&gt;: two to four input types&lt;/li&gt;
&lt;li&gt;&lt;em&gt;megamorphic&lt;/em&gt;: five or more input types&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;inspectingperformancecharacteristicswithdeoptigate&quot;&gt;Inspecting Performance Characteristics with Deoptigate&lt;/h2&gt;
&lt;p&gt;Instead of trying to achieve peak performance blindly, I recommend first seeking some insights into how your code is handled by the optimizing compiler and inspecting the cases that result in less-optimal code.&lt;/p&gt;
&lt;p&gt;To make that easier I created &lt;a href=&quot;https://github.com/thlorenz/deoptigate&quot;&gt;deoptigate&lt;/a&gt; which is designed to provide insight into optimizations, deoptimizations and &lt;em&gt;mono/poly/megamorphism&lt;/em&gt; of your functions.&lt;/p&gt;
&lt;div class=&quot;blog-cta nsolid&quot; readability=&quot;21.532710280374&quot;&gt;Use deoptigate to inspect your own v8/Node.js function deoptimizations: &lt;a class=&quot;button more large&quot; href=&quot;https://github.com/thlorenz/deoptigate&quot;&gt;Visit thlorenz/deoptigate on Github&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Let's look at a simple example script that I will profile with deoptigate.&lt;/p&gt;
&lt;p&gt;I've defined two vector functions: &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;subtract&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-js&quot;&gt;function add(v1, v2) {
  return {
    x: v1.x + v2.x
  , y: v1.y + v2.y
  , z: v1.z + v2.z
  }
}

function subtract(v1, v2) {
  return {
    x: v1.x - v2.x
  , y: v1.y - v2.y
  , z: v1.z - v2.z
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Next, I &lt;em&gt;warm up&lt;/em&gt; these functions by executing them with &lt;em&gt;objects of the same type&lt;/em&gt; (same properties assigned in the same order) in a tight loop.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-js&quot;&gt;const ITER = 1E3
let xsum = 0
for (let i = 0; i &amp;lt; ITER; i++) {
  for (let j = 0; j &amp;lt; ITER; j++) {
    xsum += add({ x: i, y: i, z: i }, { x: 1, y: 1, z: 1 }).x
    xsum += subtract({ x: i, y: i, z: i }, { x: 1, y: 1, z: 1 }).x
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At this point &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;subtract&lt;/code&gt; ran &lt;em&gt;hot&lt;/em&gt; and should have been optimized.&lt;/p&gt;
&lt;p&gt;Now I execute them again, passing objects to &lt;code&gt;add&lt;/code&gt; that don't have the exact same type as&lt;br/&gt;before since their &lt;em&gt;properties are assigned in a different order&lt;/em&gt; (&lt;code&gt;{ y: i, x: i, z: i }&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To &lt;code&gt;subtract&lt;/code&gt; I pass the same types of objects as before.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-js&quot;&gt;for (let i = 0; i &amp;lt; ITER; i++) {
  for (let j = 0; j &amp;lt; ITER; j++) {
    xsum += add({ y: i, x: i, z: i }, { x: 1, y: 1, z: 1 }).x
    xsum += subtract({ x: i, y: i, z: i }, { x: 1, y: 1, z: 1 }).x
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's run this code and inspect it with deoptigate.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sh&quot;&gt;node --trace-ic ./vector.js
deoptigate
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When executing our script with the &lt;code&gt;--trace-ic&lt;/code&gt; flag, V8 writes the information we need to an &lt;code&gt;isolate-v8.log&lt;/code&gt; file. When deoptigate is run from the same folder it processes that file and opens an interactive visualization of the contained data.&lt;/p&gt;
&lt;p&gt;It is a web application, so you can &lt;a href=&quot;http://thlorenz.github.io/deoptigate/vector/&quot;&gt;open it in your browser to follow&lt;br/&gt;along&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;deoptigate provides us with a summary of all files, in our case just the &lt;code&gt;vector.js&lt;/code&gt;.&lt;br/&gt;For each file it shows related Optimizations, Deoptimizations and Inline Cache information. Here green means &lt;em&gt;no problem&lt;/em&gt;, blue are &lt;em&gt;minor perf issues&lt;/em&gt; and red are potentially &lt;em&gt;major perf issue&lt;/em&gt; that should be investigated. We can expand the details for a file simply by clicking on it's name.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/192891/42702692-7e7104dc-8687-11e8-9099-e7efb48a0558.png&quot; alt=&quot;screen shot 2018-07-13 at 10 22 01 am&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We are provided with the source of the file on the left, with annotations pointing out potential performance problems. On the right, we can learn more details about each problem. Both views function in tandem; clicking an annotation on the left highlights more details about it on the right and vice versa.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/192891/43057574-faa50522-8df7-11e8-9e0c-4dc6395a14e3.png&quot; alt=&quot;screen shot 2018-07-13 at 10 49 11 am&quot;/&gt;&lt;/p&gt;
&lt;p&gt;At a quick glance we can see that &lt;code&gt;subtract&lt;/code&gt; shows no potential issues, but &lt;code&gt;add&lt;/code&gt; does. Clicking on the red triangle in the code highlights the related deoptimization information on the right. Note the reason &lt;em&gt;wrong map&lt;/em&gt; for the &lt;em&gt;eager bailout&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Clicking on any of the blue telephone icons reveals more information. Namely, we find that the function became polymorphic. As we can see this was due to a &lt;em&gt;Map&lt;/em&gt; mismatch as well.&lt;/p&gt;
&lt;p&gt;Checking &lt;em&gt;Low Severities&lt;/em&gt; on the top of the page reveals more context regarding the deoptimization as now we are also presented with the optimizations applied to &lt;code&gt;add&lt;/code&gt; including timestamps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/192891/43057583-0bac4240-8df8-11e8-9fb4-b9f9e69afb31.png&quot; alt=&quot;screen shot 2018-07-13 at 1 53 25 pm&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We see that &lt;code&gt;add&lt;/code&gt; was optimized after &lt;em&gt;32ms&lt;/em&gt;. At around &lt;em&gt;40ms&lt;/em&gt; it was provided an input type that the optimized code didn't account for - hence the &lt;em&gt;wrong map&lt;/em&gt; - and was deoptimized at which point it reverted to running Ignition bytecode while collecting more &lt;em&gt;Inline Cache&lt;/em&gt; information. Very quickly after that at &lt;em&gt;41ms&lt;/em&gt; it was optimized again.&lt;/p&gt;
&lt;p&gt;In summary, the &lt;code&gt;add&lt;/code&gt; function executed via optimized code in the end, but that code needed to handle two types of inputs (different &lt;em&gt;Maps&lt;/em&gt;) and thus was larger and not as optimal as before.&lt;/p&gt;
&lt;p&gt;On the contrary the &lt;code&gt;subtract&lt;/code&gt; function was only optimized once as we can verify by clicking the green pointed up triangle inside it's function signature.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/192891/43057595-1f09f2e2-8df8-11e8-836c-eb108c619343.png&quot; alt=&quot;screen shot 2018-07-13 at 2 07 33 pm&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;whydifferentmaps&quot;&gt;Why different Maps?&lt;/h2&gt;
&lt;p&gt;Some of you may wonder why V8 considers the objects created via the &lt;code&gt;{ x, y, z }&lt;/code&gt; assignment different from the ones created via &lt;code&gt;{ y, x, z }&lt;/code&gt; given that they have the exact same properties just assigned in a different order.&lt;/p&gt;
&lt;p&gt;This is due to &lt;a href=&quot;https://github.com/thlorenz/v8-perf/blob/master/data-types.md#fast-in-object-properties&quot;&gt;the way maps are&lt;br/&gt;created&lt;/a&gt; when JavaScript objects are initialized, and is a topic for another post (I will also explain this in more detail as part of my talk at Node Summit).&lt;/p&gt;
&lt;p&gt;So make sure to come back for more articles in this multi-part series, and if you're attending Node Summit please check out my talk &lt;em&gt;Understanding Why the New V8 is so Damn Fast, One Demo at a Time&lt;/em&gt; on Tue, July 24th, 2:55pm at NodeSummit at the Fisher West location.&lt;/p&gt;
&lt;p&gt;Hope to see you there!&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;
</description>
<pubDate>Mon, 30 Jul 2018 21:19:45 +0000</pubDate>
<dc:creator>okket</dc:creator>
<og:type>article</og:type>
<og:title>Why the New V8 is so Damn Fast</og:title>
<og:description>The entire V8 compiler pipeline was overhauled and shipped with Node.js version 8. This post investigates what speed improvements we can expect as a result.</og:description>
<og:url>http://nodesource.com/blog/why-the-new-v8-is-so-damn-fast/</og:url>
<og:image>https://images.ctfassets.net/hspc7zpa5cvq/6P6VJxQE1O2QekeO0OSekg/381e19e4e8cb2725649ea90599d7e391/cliff-cropped.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nodesource.com/blog/why-the-new-v8-is-so-damn-fast</dc:identifier>
</item>
<item>
<title>Uber shuts down self-driving trucks unit</title>
<link>https://techcrunch.com/2018/07/30/ubers-self-driving-trucks-division-is-dead-long-live-uber-self-driving-cars/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/07/30/ubers-self-driving-trucks-division-is-dead-long-live-uber-self-driving-cars/</guid>
<description>&lt;p&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://www.crunchbase.com/organization/uber/&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;uber&quot;&gt;Uber&lt;/a&gt; is shuttering its self-driving trucks unit, a beleaguered program borne out of the company‚Äôs controversial multi-million acquisition of Otto nearly two years ago.&lt;/p&gt;
&lt;p&gt;The company said Monday that Uber Advanced Technologies Group will stop development of self-driving trucks and instead focus its efforts on¬†self-driving cars.&lt;/p&gt;
&lt;p&gt;‚ÄúWe recently took the important step of returning to public roads in Pittsburgh, and as we look to continue that momentum, we believe having our entire team‚Äôs energy and expertise focused on this effort is the best path forward,‚Äù¬†Eric Meyhofer, head of Uber Advanced Technologies Group, said in an emailed statement.&lt;/p&gt;
&lt;p&gt;Uber Freight, a business unit that helps truck drivers connect with shipping companies, is unaffected by this decision. &lt;a href=&quot;https://techcrunch.com/2017/05/18/uber-freight-launches-to-connect-truck-drivers-with-available-shipments/&quot;&gt;Uber Freight&lt;/a&gt;, which launched in May 2017, is¬†designed for vetted and approved drivers, who can use it to find nearby available loads and see destination info, distance required and payment upfront. If the drivers like what they see, they can tap to book.&lt;/p&gt;
&lt;p&gt;Uber Freight, which started in three regions, is now available throughout the¬†continental U.S. And it is considered a viable and promising business (and revenue opportunity) within the company. The business unit has expanded threefold in the past 15 months and has offices in San Francisco and Chicago.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;‚ÄúRather than having two groups working side by side, focused on different vehicle platforms, I want us instead collaborating as one team, according to an email reviewed by TechCrunch that was sent by Meyhofer to employees. ‚ÄúI know we‚Äôre all super proud of what the Trucks team has accomplished, and we continue to see the incredible promise of self-driving technology applied to moving freight across the country. But we believe delivering on self-driving for passenger applications first, and then bringing it to freight applications down the line, is the best path forward. For now, we need the focus of one team, with one clear objective.‚Äù&lt;/p&gt;
&lt;p&gt;Uber‚Äôs self-driving trucks unit is based in San Francisco, while the team dedicated to self-driving cars is located in Pittsburgh. Uber says it will¬†pivot employees focused on self-driving trucks to other work that supports its ongoing development of self-driving technology. If there isn‚Äôt a comparable role, Uber will offer relocation to Pittsburgh or¬†a separation package to support the transition.&lt;/p&gt;
&lt;p&gt;Uber ATG is going to continue to investigate approaches to highway driving using the car platform, and is going to keep its relationship with truck manufacturers intact. The company may return to self-driving trucks, but only after it has developed the foundation of the self-driving system.&lt;/p&gt;
&lt;p&gt;Uber ATG will continue its in-house development of light detection and ranging radar known as LiDAR. This technology, which would later be at the heart of a lawsuit between Uber and Waymo, measures distance using laser light to generate highly accurate 3D maps of the world around the car.&lt;/p&gt;
&lt;p&gt;Uber‚Äôs self-driving truck efforts have been plagued by controversy since its beginning. &lt;a href=&quot;https://techcrunch.com/2016/08/18/uber-acquires-otto-to-lead-ubers-self-driving-car-effort-report-says/&quot;&gt;Uber bought Otto&lt;/a&gt;, the self-driving trucks startup founded by former Google engineer Anthony Levandowski and three others, including Lior Ron, who was head of product at Google Maps, in August 2016 for $680 million. (Later reports suggest the actual payout might have been as low as¬†&lt;a href=&quot;https://spectrum.ieee.org/cars-that-think/transportation/self-driving/turns-out-uber-got-otto-on-the-cheap&quot;&gt;$220 million&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;As part of the acquisition, Levandowski became head of Uber‚Äôs self-driving car research.&lt;/p&gt;
&lt;p&gt;Two months later, the company enjoyed a moment of glory that received a lot of media attention: a self-driving truck that drove 120 highway miles along a route in Colorado with a trailer full of Budweiser.&lt;/p&gt;
&lt;p&gt;But the buzz around the size of the Otto deal and its self-driving truck run in Colorado would soon be replaced with a different, more unwelcoming kind of attention.&lt;/p&gt;
&lt;p&gt;Nine months after the acquisition, Uber was embroiled in a trade secrets lawsuit with Waymo, the former Google self-driving project that spun out to become a business under Alphabet.¬†Waymo accused Levandowski of hatching a plan to use trade secrets related to Waymo‚Äôs in-house development of LiDAR tech and use it to kickstart Otto and ultimately,¬†Uber‚Äôs own self-driving technology program.&lt;/p&gt;
&lt;p&gt;The lawsuit, filed against Otto and its parent company Uber in February 2017, alleged patent infringement and stealing trade secrets. The lawsuit made a number of allegations specifically against Levandowski, including that he downloaded more than 14,000 confidential and proprietary files shortly before his resignation. Waymo contended that Otto and Uber were using key parts of its self-driving technology, specifically related to LiDAR.&lt;/p&gt;
&lt;p&gt;Uber would later &lt;a href=&quot;https://techcrunch.com/2017/05/30/uber-fires-otto-co-founder-anthony-levandowski-due-to-waymo-dispute/&quot;&gt;fire Levandowski&lt;/a&gt;. However, the polarizing star engineer isn‚Äôt out of the self-driving trucks game just yet. TechCrunch uncovered that &lt;a href=&quot;https://techcrunch.com/2018/07/02/anthony-levandowski-is-back-with-a-new-self-driving-startup-called-kache-ai/&quot;&gt;Levandowski was behind Kache.ai&lt;/a&gt;, a self-driving trucks company that is still in stealth mode.&lt;/p&gt;
&lt;p&gt;The case did go to trial in February 2018. Before a jury could weigh in, the two parties reached a &lt;a href=&quot;https://techcrunch.com/2018/02/09/uber-settles-lawsuit-with-waymo/&quot;&gt;settlement agreement&lt;/a&gt;. Uber agreed to not incorporate Waymo‚Äôs confidential information into their hardware and software. Uber also agreed to pay a financial settlement that includes 0.34 percent of Uber equity, per its Series G-1 round $72 billion valuation. In other words, Waymo got about $244.8 million in Uber equity.&lt;/p&gt;
&lt;p&gt;Uber ATG has had other existential struggles in recent months. The unit has suffered a number of departures. The¬†other three Otto founders left, including Don Burnette, who, with Paz Eshel, formerly of Battery Ventures, in April founded an autonomous vehicle company called Kodiak Robotics.&lt;/p&gt;
&lt;p&gt;In March, and just six weeks after settling with Waymo, an Uber self-driving test vehicle was involved in a¬†&lt;a href=&quot;https://techcrunch.com/story/uber-self-driving-car-strikes-and-kills-pedestrian-while-in-autonomous-mode/&quot;&gt;tragic fatal accident&lt;/a&gt;¬†in Tempe, Ariz. Uber halted all of its autonomous vehicle operations March 19, the day after one of its vehicles struck and killed pedestrian Elaine Herzberg in the Phoenix suburb. Uber was testing its self-driving vehicles on public roads in Tempe, Ariz., where the accident occurred, as well as in Pittsburgh, San Francisco and Toronto.&lt;/p&gt;
&lt;p&gt;Uber‚Äôs decision to shut down its self-driving trucks operation comes just a week after the company put¬†its &lt;a href=&quot;https://techcrunch.com/2018/07/24/uber-self-driving-cars-back-on-public-roads-but-in-manual-mode/&quot;&gt;autonomous vehicles back on Pittsburgh‚Äôs city streets&lt;/a&gt;. For now, Uber‚Äôs modified self-driving Volvo XC90 vehicles¬†will only be driven manually by humans and under a new set of safety standards that includes real-time monitoring of its test drivers and efforts to beef up simulation.&lt;/p&gt;
&lt;p&gt;This manual-first rollout is a step toward Uber‚Äôs ultimate goal to relaunch its¬†autonomous¬†vehicle testing program in Pittsburgh.&lt;/p&gt;
</description>
<pubDate>Mon, 30 Jul 2018 21:14:45 +0000</pubDate>
<dc:creator>mark-ruwt</dc:creator>
<og:title>Uber‚Äôs self-driving trucks division is dead, long live Uber self-driving cars</og:title>
<og:description>Uber is shuttering its self-driving trucks unit, a beleaguered program borne out of the company‚Äôs controversial multi-million acquisition of Otto nearly two years ago. The company said Monday that Uber Advanced Technologies Group will stop development of self-driving trucks and instead focus ‚Ä¶</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/07/uber-truck-atg.jpg?w=750</og:image>
<og:url>http://social.techcrunch.com/2018/07/30/ubers-self-driving-trucks-division-is-dead-long-live-uber-self-driving-cars/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/07/30/ubers-self-driving-trucks-division-is-dead-long-live-uber-self-driving-cars/</dc:identifier>
</item>
<item>
<title>Some Amazon Reviews Are Too Good to Be Believed ‚Äì They&amp;#039;re Paid For</title>
<link>https://www.npr.org/2018/07/30/629800775/some-amazon-reviews-are-too-good-to-be-believed-theyre-paid-for</link>
<guid isPermaLink="true" >https://www.npr.org/2018/07/30/629800775/some-amazon-reviews-are-too-good-to-be-believed-theyre-paid-for</guid>
<description>&lt;div id=&quot;res629868958&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/07/17/rtx2qsbi-45552ad510f3988d5fc46e93a76a4499b7cd983a-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/07/17/rtx2qsbi-45552ad510f3988d5fc46e93a76a4499b7cd983a-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;In shadow marketplaces, positive reviews for Amazon products are bought and sold. The company says it's cracking down and that it estimates that less than 1 percent of reviews are fake. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Mike Segar/Reuters&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Mike Segar/Reuters&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2018/07/17/rtx2qsbi-45552ad510f3988d5fc46e93a76a4499b7cd983a-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;In shadow marketplaces, positive reviews for Amazon products are bought and sold. The company says it's cracking down and that it estimates that less than 1 percent of reviews are fake.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Mike Segar/Reuters&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Travis is a teenager living in a small town in the Northeast. He enjoys hunting and shooting, and keeps a rifle at home. But with several younger siblings around the house, he wanted to make sure his gun was safe. So he ordered a trigger lock on Amazon, to prevent the gun from firing.&lt;/p&gt;
&lt;p&gt;&quot;The reviews were great, five-star reviews,&quot; says Travis, who asked that NPR use only his first name to avoid scrutiny and possible legal attention. &quot;[They] said it worked great, locked perfectly, the combination system worked great.&quot;&lt;/p&gt;
&lt;p&gt;It didn't.&lt;/p&gt;
&lt;p&gt;&quot;The combination doesn't even matter; the lock just opens,&quot; Travis says. &quot;It's cheap plastic, it will pull apart as soon as you give it any force.&quot;&lt;/p&gt;
&lt;p&gt;Thankfully, he realized this immediately, went to a store, and purchased a proper trigger lock for his gun. Everyone at home is fine.&lt;/p&gt;
&lt;p&gt;Travis rues the experience, and the stellar reviews that led him to purchase the faulty lock in the first place. He didn't realize it at the time, he says, but he's now certain that those glowing reviews were paid for. And that many of the people who gave the trigger lock excellent reviews may never have opened the package in the first place.&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Travis is certain of this because he himself is now a prolific paid reviewer. He writes Amazon reviews for money, and he commissions others to do the same ‚Äî for a company that approached him online. (Note: Amazon is one of NPR's financial sponsors.)&lt;/p&gt;
&lt;p&gt;&quot;I don't think it's right that people can write fake reviews on products,&quot; Travis says. &quot;But I need the money.&quot;&lt;/p&gt;
&lt;div id=&quot;res629832615&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage615137239&quot; href=&quot;https://www.npr.org/2018/06/06/615137239/what-americans-told-us-about-online-shopping-says-a-lot-about-amazon&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2018\/06\/06\/615137239\/what-americans-told-us-about-online-shopping-says-a-lot-about-amazon&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/06/05/npr-amazon-2_sq-0952c0f7da9f5e3d60128b11b040125548b89697-s100-c15.jpeg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/06/05/npr-amazon-2_sq-0952c0f7da9f5e3d60128b11b040125548b89697-s100.jpeg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;What Americans Told Us About Online Shopping Says A Lot About Amazon&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;NPR spoke with several people who write Amazon reviews for pay, from a college student in Puerto Rico to a stay-at-home mother in the Midwest. Such reviews are a problem on e-commerce sites, outside auditors say, and they proliferate in online channels set up for this purpose.&lt;/p&gt;
&lt;p&gt;Much like Amazon itself is a marketplace for goods, a world of separate, shadow marketplaces exists where reviews for Amazon products are bought and paid for ‚Äî private Facebook groups, Slack channels, subreddits and more.&lt;/p&gt;
&lt;p&gt;According to outside auditors like Fakespot and ReviewMeta, more than half the reviews for certain popular products are questionable. Amazon disputes those estimates.&lt;/p&gt;
&lt;p&gt;&quot;Our approximation is that less than 1 percent of reviews are inauthentic,&quot; says Sharon Chiarella, vice president of community shopping at Amazon. She adds that &quot;sometimes individual products have more suspicious activity.&quot;&lt;/p&gt;
&lt;p&gt;&quot;We have built a lot of technology to assess whether or not we think a review is authentic,&quot; Chiarella says. &quot;The star rating, a lot of people think that's an average ... it's actually much more intelligent. It's a weighted calculation that gives more weight to reviews we trust more and less to reviews we trust less.&quot;&lt;/p&gt;
&lt;div id=&quot;res629833315&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage623990036&quot; href=&quot;https://www.npr.org/sections/money/2018/06/27/623990036/episode-850-the-fake-review-hunter&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/sections\/money\/2018\/06\/27\/623990036\/episode-850-the-fake-review-hunter&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/06/27/fakereviewimage_sq-b452d2636423525e3434f0c6a8b8d9c8a6390749-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/06/27/fakereviewimage_sq-b452d2636423525e3434f0c6a8b8d9c8a6390749-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Episode 850: The Fake Review Hunter&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Amazon looks for suspicious patterns of behavior that might indicate a paid or incentivized review. Penalties for cheating can be harsh ‚Äî in the past three years, Amazon has sued more than 1,000 sellers for buying reviews.&lt;/p&gt;
&lt;p&gt;Chiarella says the lawsuits give the company the opportunity to subpoena bad actors to get data from them. &quot;That allows us to identify more bad actors and spider out from there and train our algorithms,&quot; she says.&lt;/p&gt;
&lt;p&gt;But this has led to a sort of digital cat-and-mouse game. As Amazon and its algorithms get better at hunting them down, paid reviewers employ their own evasive maneuvers. Travis, the teenage paid reviewer, explained his process.&lt;/p&gt;
&lt;p&gt;He's a member of several online channels where Amazon sellers congregate, hawking Ethernet cables, flashlights, protein powder, fanny packs ‚Äî any number of small items for which they want favorable reviews.&lt;/p&gt;
&lt;div id=&quot;res629831519&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage451993322&quot; href=&quot;https://www.npr.org/sections/alltechconsidered/2015/10/26/451993322/dont-necessarily-judge-your-next-e-book-by-its-online-review&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/sections\/alltechconsidered\/2015\/10\/26\/451993322\/dont-necessarily-judge-your-next-e-book-by-its-online-review&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2015/12/04/gettyimages-487304489_sq-ce08eea5f673d4608ff735329e949e493ad28007-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2015/12/04/gettyimages-487304489_sq-ce08eea5f673d4608ff735329e949e493ad28007-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Don't Necessarily Judge Your Next E-Book By Its Online Review&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If something catches Travis' attention, he approaches the seller and they negotiate terms. Once he buys the product and leaves a five-star review, the seller will refund his purchase, often adding a few dollars &quot;commission&quot; for his trouble. He says he earns around $200 a month this way.&lt;/p&gt;
&lt;p&gt;The sellers provide detailed instructions, to avoid being detected by Amazon's algorithms, Travis says. For example, he says, &quot;Order here at the Amazon link. Don't clip any coupons or promo codes. [Wait 4 to 5 days] after receiving [the item].&quot; This last instruction is especially important, Travis adds. &quot;If you review too soon after receiving it'll look pretty suspicious.&quot;&lt;/p&gt;
&lt;p&gt;Ren√©e DiResta says these persistent efforts to game the system amount to a sort of whack-a-mole problem for Amazon. DiResta researches disinformation online as director of research at New Knowledge, and is a Mozilla Fellow on media, misinformation and trust.&lt;/p&gt;
&lt;p&gt;As part of her research, DiResta said she wrote her own paid reviews through the same kind of marketplaces that Travis frequents.&lt;/p&gt;
&lt;p&gt;&quot;Being on the first page of Amazon is profoundly impactful for businesses,&quot; DiResta says. &quot;Doing well on Amazon really makes or breaks brands.&quot;&lt;/p&gt;
&lt;p&gt;She says the types of companies commissioning paid reviews are often Chinese brands selling on the Chinese e-commerce giant Alibaba. They're looking to penetrate the U.S. market.&lt;/p&gt;
&lt;p&gt;&quot;If you order from Alibaba, it's going to take six to eight weeks to arrive; it's not a great experience,&quot; DiResta says. &quot;If you buy on Amazon, it feels like a protected transaction.&quot;&lt;/p&gt;
&lt;div id=&quot;res629833139&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage160755775&quot; href=&quot;https://www.npr.org/sections/thesalt/2012/09/12/160755775/five-ways-to-spot-a-fake-online-review-restaurant-or-otherwise&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/sections\/thesalt\/2012\/09\/12\/160755775\/five-ways-to-spot-a-fake-online-review-restaurant-or-otherwise&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2012/09/10/restaurant-review_sq-021c66784f15042cb7d910b646361966de75cf30-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2012/09/10/restaurant-review_sq-021c66784f15042cb7d910b646361966de75cf30-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Five Ways To Spot A Fake Online Review, Restaurant Or Otherwise&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;She adds that by using Amazon to migrate their products to the U.S. market, these sellers can take advantage of Amazon Prime's superior shipping and logistics, as well as the reputation and trust that comes with the Amazon brand. Not to mention the cachet of its user reviews.&lt;/p&gt;
&lt;p&gt;&quot;That's potentially deeply harmful to Amazon as a brand,&quot; DiResta says. &quot;When people begin to realize what they're buying is cheap junk or won't hold up.&quot;&lt;/p&gt;
&lt;p&gt;In the end, DiResta says, this problem may not have a solution. As Amazon keeps cracking down, paid reviewers will keep finding ways to evade the company's attempts. Customers can turn to outside review sites like CNET or Wirecutter to find transparent information. But as long as there's a business incentive to game them, online user reviews will remain muddy waters.&lt;/p&gt;
&lt;div id=&quot;res629832787&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage617858833&quot; href=&quot;https://www.npr.org/2018/06/08/617858833/online-shoppers-say-they-rarely-return-purchases-why&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2018\/06\/08\/617858833\/online-shoppers-say-they-rarely-return-purchases-why&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/06/07/gettyimages-468160611_sq-784b51037fe988fe737297511134af31675f2519-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/06/07/gettyimages-468160611_sq-784b51037fe988fe737297511134af31675f2519-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Online Shoppers Say They Rarely Return Purchases. Why?&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;res629831521&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage240801871&quot; href=&quot;https://www.npr.org/sections/money/2013/10/25/240801871/episode-492-m-erbs-amazon-empire&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/sections\/money\/2013\/10\/25\/240801871\/episode-492-m-erbs-amazon-empire&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2013/10/25/erb_sq-6efb9086b799204b4f3ff431973a5d370dd0c118-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2013/10/25/erb_sq-6efb9086b799204b4f3ff431973a5d370dd0c118-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Episode 492: M. Erb's Amazon Empire&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 30 Jul 2018 20:29:29 +0000</pubDate>
<dc:creator>EnderWT</dc:creator>
<og:title>Some Amazon Reviews Are Too Good To Be Believed. They're Paid For</og:title>
<og:url>https://www.npr.org/2018/07/30/629800775/some-amazon-reviews-are-too-good-to-be-believed-theyre-paid-for</og:url>
<og:type>article</og:type>
<og:description>In shadow marketplaces, positive reviews for Amazon products are bought and sold. The company says it's cracking down and that it estimates that less than 1 percent of reviews are fake.</og:description>
<og:image>https://media.npr.org/assets/img/2018/07/17/rtx2qsbi_wide-f425c74af84a16242b1fe0a4b0385d2946060d99.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2018/07/30/629800775/some-amazon-reviews-are-too-good-to-be-believed-theyre-paid-for</dc:identifier>
</item>
<item>
<title>Announcing TypeScript 3.0</title>
<link>https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/</link>
<guid isPermaLink="true" >https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/</guid>
<description>&lt;div&gt;TypeScript 3.0 is here! Today marks a new milestone in the TypeScript journey, serving JavaScript users everywhere.
&lt;p&gt;If you‚Äôre unfamiliar with TypeScript, it‚Äôs not too late to learn about it now! TypeScript is an extension of JavaScript that aims to bring static types to modern JavaScript. The TypeScript compiler reads in TypeScript code, which has things like type declarations and type annotations, and emits clean readable JavaScript with those constructs transformed and removed. That code runs in any ECMAScript runtime like your favorite browsers and Node.js. At its core, this experience means analyzing your code to catch things like bugs and typos before your users run into them; but it brings more than that. Thanks to all that information and analysis TypeScript can provide a better authoring experience, providing code completion and navigation features like &lt;em&gt;Find all References&lt;/em&gt;, &lt;em&gt;Go to Definition&lt;/em&gt;, and &lt;em&gt;Rename&lt;/em&gt; in your favorite editor.&lt;/p&gt;
&lt;p&gt;To get started with the language itself, check out &lt;a href=&quot;https://www.typescriptlang.org/&quot; rel=&quot;nofollow&quot;&gt;typescriptlang.org&lt;/a&gt; to learn more. And if you want to try TypeScript 3.0 out now, you can get it &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild&quot; rel=&quot;nofollow&quot;&gt;through NuGet&lt;/a&gt; or via npm by running&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
npm install -g typescript
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also get editor support for&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;Other editors&lt;/a&gt; may have different update schedules, but should all have excellent TypeScript support soon as well.&lt;/p&gt;

&lt;p&gt;When we released TypeScript 2.0, we took a brief look back at how each release leading up to TypeScript 2.0 brought the language to where it is today. Between TypeScript 1.0 and up until 2.0, the language added union types, type guards, modern ECMAScript support, type aliases, JSX support, literal types, and polymorphic &lt;code&gt;this&lt;/code&gt; types. If we include TypeScript 2.0 with its introduction of non-nullable types, control flow analysis, tagged union support, &lt;code&gt;this&lt;/code&gt;-types, and a simplified model around &lt;code&gt;.d.ts&lt;/code&gt; file acquisition, that era truly defined the fundamentals of using TypeScript.&lt;/p&gt;
&lt;p&gt;So what have we done since? What, apart from new ECMAScript features like the long-&lt;em&gt;await&lt;/em&gt;-ed &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;, generators, and object rest/spread brought us to TypeScript 3.0?&lt;/p&gt;
&lt;p&gt;TypeScript 2.1 was a foundational release that introduced a static model for metaprogramming in JavaScript. The key query (&lt;code&gt;keyof&lt;/code&gt;), indexed access (&lt;code&gt;T[K]&lt;/code&gt;), and mapped object (&lt;code&gt;{ [K in keyof T]: T[K] }&lt;/code&gt;) types have been instrumental in better modeling libraries like React, Ember, Lodash, and more.&lt;/p&gt;
&lt;p&gt;TypeScript 2.2 and 2.3 brought support for mixin patterns, the non-primitive &lt;code&gt;object&lt;/code&gt; type, and generic defaults, used by a number of projects like Angular Material and Polymer. TypeScript 2.3 also shipped a feature for fine-grained control of &lt;code&gt;this&lt;/code&gt; types that allowed TypeScript to work well with libraries like Vue, and added the &lt;code&gt;checkJs&lt;/code&gt; flag to enable type-checking on JavaScript files.&lt;/p&gt;
&lt;p&gt;TypeScript 2.4 and 2.6 tightened up the story for strict checking on function types, addressing some of the longest-standing feedback about our type system through &lt;code&gt;--strictFunctionTypes&lt;/code&gt; which enforced contravariance on parameters. 2.7 continued the trend of strictness with &lt;code&gt;--strictPropertyInitialization&lt;/code&gt; checks in classes.&lt;/p&gt;
&lt;p&gt;TypeScript 2.8 introduced conditional types, a powerful tool for statically expressing decisions based on types, and 2.9 generalized &lt;code&gt;keyof&lt;/code&gt; and provided easier imports for types.&lt;/p&gt;
&lt;p&gt;Which brings us to TypeScript 3.0! Despite the new big number, 3.0 has few breaking changes (meaning it should be &lt;em&gt;very&lt;/em&gt; easy to upgrade) and introduces a new flexible and scalable way to structure your projects, powerful new support for operating on parameter lists, new types to enforce explicit checks, better JSX support, an overall better error UX, and much more!&lt;/p&gt;

&lt;h2 id=&quot;project-references&quot;&gt;Project references&lt;/h2&gt;
&lt;p&gt;It‚Äôs fairly common to have several different build steps for a library or application. Maybe your codebase has a &lt;code&gt;src&lt;/code&gt; and a &lt;code&gt;test&lt;/code&gt; directory. Maybe you have your front-end code in a folder called &lt;code&gt;client&lt;/code&gt; with your Node.js back-end code in a folder called &lt;code&gt;server&lt;/code&gt;, and each imports code from a &lt;code&gt;shared&lt;/code&gt; folder. And maybe you use what‚Äôs called a ‚Äúmonorepo‚Äù and have many many projects which depend on each other in non-trivial ways.&lt;/p&gt;
&lt;p&gt;One of the biggest features that we‚Äôve worked on for TypeScript 3.0 is called ‚Äúproject references‚Äù, and it aims to make working with these scenarios easier.&lt;/p&gt;
&lt;p&gt;Project references allow TypeScript projects to depend on other TypeScript projects ‚Äì specifically, allowing &lt;code&gt;tsconfig.json&lt;/code&gt; files to reference other &lt;code&gt;tsconfig.json&lt;/code&gt; files. Specifying these dependencies makes it easier to split your code into smaller projects, since it gives TypeScript (and tools around it) a way to understand build ordering and output structure. That means things like faster builds that work incrementally, and support for transparently navigating, editing, and refactoring across projects. Since 3.0 lays the foundation and exposes the APIs, any build tool should be able to provide this.&lt;/p&gt;
&lt;h3 id=&quot;whats-it-look-like&quot;&gt;What‚Äôs it look like?&lt;/h3&gt;
&lt;p&gt;As a quick example, here‚Äôs what a &lt;code&gt;tsconfig.json&lt;/code&gt; with project references looks like:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span&gt;// ./src/bar/tsconfig.json&lt;/span&gt;
{
    &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;compilerOptions&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
        &lt;span&gt;// Needed for project references.&lt;/span&gt;
        &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;composite&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;,
        &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;declaration&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;,

        &lt;span&gt;// Other options...&lt;/span&gt;
        &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;outDir&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;../../lib/bar&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;strict&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;module&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;esnext&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;moduleResolution&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;node&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    },
    &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;references&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; [
        { &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;path&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;../foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
    ]
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are two new fields to notice here: &lt;code&gt;composite&lt;/code&gt; and &lt;code&gt;references&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;references&lt;/code&gt; simply specifies other &lt;code&gt;tsconfig.json&lt;/code&gt; files (or folders immediately containing them). Each reference is currently just an object with a &lt;code&gt;path&lt;/code&gt; field, and lets TypeScript know that building the current project requires building that referenced project first.&lt;/p&gt;
&lt;p&gt;Perhaps equally important is the &lt;code&gt;composite&lt;/code&gt; field. The &lt;code&gt;composite&lt;/code&gt; field ensures certain options are enabled so that this project can be referenced and built incrementally for any project that depends on it. Being able to intelligently and incrementally rebuild is important, since build speed is one of the reasons you might break up a project in the first place. For example, if project &lt;code&gt;front-end&lt;/code&gt; depends on &lt;code&gt;shared&lt;/code&gt;, and &lt;code&gt;shared&lt;/code&gt; depends on &lt;code&gt;core&lt;/code&gt;, our APIs around project references can be used to detect a change in &lt;code&gt;core&lt;/code&gt;, but to only rebuild &lt;code&gt;shared&lt;/code&gt; if the types (i.e. the &lt;code&gt;.d.ts&lt;/code&gt; files) produced by &lt;code&gt;core&lt;/code&gt; have changed. That means a change to &lt;code&gt;core&lt;/code&gt; doesn‚Äôt completely force us to rebuild the world. For that reason, setting &lt;code&gt;composite&lt;/code&gt; forces the &lt;code&gt;declaration&lt;/code&gt; flag to be set as well.&lt;/p&gt;
&lt;h3 id=&quot;build-mode&quot;&gt;&lt;code&gt;--build&lt;/code&gt; mode&lt;/h3&gt;
&lt;p&gt;TypeScript 3.0 will provide a set of APIs for project references so that other tools can provide this fast incremental behavior. As an example, gulp-typescript already leverages it! So project references should be able to integrate with your choice of build orchestrators in the future.&lt;/p&gt;
&lt;p&gt;However, for many simple apps and libraries, it‚Äôs nice not to need external tools. That‚Äôs why &lt;code&gt;tsc&lt;/code&gt; now ships with a new &lt;code&gt;--build&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tsc --build&lt;/code&gt; (or its nickname, &lt;code&gt;tsc -b&lt;/code&gt;) takes a set of projects and builds them and their dependencies. When using this new build mode, the &lt;code&gt;--build&lt;/code&gt; flag has to be set first, and can be paired with certain other flags:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;--verbose&lt;/code&gt;: displays every step of what a build requires&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dry&lt;/code&gt;: performs a build without emitting files (this is useful with &lt;code&gt;--verbose&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--clean&lt;/code&gt;: attempts to remove output files given the inputs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--force&lt;/code&gt;: forces a full non-incremental rebuild for a project&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;controlling-output-structure&quot;&gt;Controlling output structure&lt;/h3&gt;
&lt;p&gt;One subtle but incredibly useful benefit of project references is logically being able to map your input source to its outputs.&lt;/p&gt;
&lt;p&gt;If you‚Äôve ever tried to share TypeScript code between the client and server of your application, you might have run into problems controlling the output structure.&lt;/p&gt;
&lt;p&gt;For example, if &lt;code&gt;client/index.ts&lt;/code&gt; and &lt;code&gt;server/index.ts&lt;/code&gt; both reference &lt;code&gt;shared/index.ts&lt;/code&gt; for the following projects:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;src
‚îú‚îÄ‚îÄ client
‚îÇ   ‚îú‚îÄ‚îÄ index.ts
‚îÇ   ‚îî‚îÄ‚îÄ tsconfig.json
‚îú‚îÄ‚îÄ server
‚îÇ   ‚îú‚îÄ‚îÄ index.ts
‚îÇ   ‚îî‚îÄ‚îÄ tsconfig.json
‚îî‚îÄ‚îÄ shared
    ‚îî‚îÄ‚îÄ index.ts
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;‚Ä¶then trying to build &lt;code&gt;client&lt;/code&gt; and &lt;code&gt;server&lt;/code&gt;, we‚Äôll end up with‚Ä¶&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;lib
‚îú‚îÄ‚îÄ client
‚îÇ   ‚îú‚îÄ‚îÄ client
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îÇ   ‚îî‚îÄ‚îÄ shared
‚îÇ       ‚îî‚îÄ‚îÄ index.js
‚îî‚îÄ‚îÄ server
    ‚îú‚îÄ‚îÄ server
    ‚îÇ   ‚îî‚îÄ‚îÄ index.js
    ‚îî‚îÄ‚îÄ shared
        ‚îî‚îÄ‚îÄ index.js
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;rather than&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;lib
‚îú‚îÄ‚îÄ client
‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îú‚îÄ‚îÄ shared
‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îî‚îÄ‚îÄ server
    ‚îî‚îÄ‚îÄ index.js
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that we ended up with a copy of &lt;code&gt;shared&lt;/code&gt; in both &lt;code&gt;client&lt;/code&gt; and &lt;code&gt;server&lt;/code&gt;. We unnecessarily spent time building &lt;code&gt;shared&lt;/code&gt; twice and introduced an undesirable level of nesting in &lt;code&gt;lib/client/client&lt;/code&gt; and &lt;code&gt;lib/server/server&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The problem is that TypeScript greedily looks for &lt;code&gt;.ts&lt;/code&gt; files and tries to include them in a given compilation. Ideally, TypeScript would understand that these files don‚Äôt need to be built in the same compilation, and would instead jump to the &lt;code&gt;.d.ts&lt;/code&gt; files for type information.&lt;/p&gt;
&lt;p&gt;Creating a &lt;code&gt;tsconfig.json&lt;/code&gt; for &lt;code&gt;shared&lt;/code&gt; and using project references does exactly that. It signals to TypeScript that&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;shared&lt;/code&gt; should be built independently, and that&lt;/li&gt;
&lt;li&gt;when importing from &lt;code&gt;../shared&lt;/code&gt;, we should look for the &lt;code&gt;.d.ts&lt;/code&gt; files in its output directory.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This avoids triggering a double-build, and also avoids accidentally absorbing all the contents of &lt;code&gt;shared&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;further-work&quot;&gt;Further work&lt;/h3&gt;
&lt;p&gt;To get a deeper understanding of project references and how you can use them, &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/3469#issuecomment-400439520&quot;&gt;read up more our issue tracker&lt;/a&gt;. In the near future, we‚Äôll have documentation on project references and build mode.&lt;/p&gt;
&lt;p&gt;We‚Äôre committed to ensuring that other tool authors can support project references, and will continue to improve the editing experience around project references. Our intent is for project references to feel as seamless as authoring code with a single &lt;code&gt;tsconfig.json&lt;/code&gt;. If you do end up using project references, we‚Äôd appreciate any and all feedback to do just that.&lt;/p&gt;
&lt;h2 id=&quot;tuples-and-parameters&quot;&gt;Extracting and spreading parameter lists with tuples&lt;/h2&gt;
&lt;p&gt;We often take it for granted, but JavaScript lets us think about parameter lists as first-class values ‚Äì either by using &lt;code&gt;arguments&lt;/code&gt; or rest-parameters (e.g. &lt;code&gt;...rest&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;args);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice here that &lt;code&gt;call&lt;/code&gt; works on functions of any parameter length. Unlike other languages, JavaScript doesn‚Äôt force us to define a &lt;code&gt;call0&lt;/code&gt;, &lt;code&gt;call1&lt;/code&gt;, &lt;code&gt;call2&lt;/code&gt;, etc. as follows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;call0&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;();
}

&lt;span&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;call1&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;param1&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(param1);
}

&lt;span&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;call2&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;param1&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;param2&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(param1, param2);
}

&lt;span&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;call3&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;param1&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;param2&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;param3&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(param1, param2, param3);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, for a while there wasn‚Äôt a great well-typed way to express this statically in TypeScript without declaring a finite number of overloads:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;// TODO (billg): 5 overloads should *probably* be enough for anybody?&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;T1&lt;/span&gt;, &lt;span&gt;T2&lt;/span&gt;, &lt;span&gt;T3&lt;/span&gt;, &lt;span&gt;T4&lt;/span&gt;, &lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T2&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T3&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param4&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T4&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T2&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T3&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param4&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T4&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;T1&lt;/span&gt;, &lt;span&gt;T2&lt;/span&gt;, &lt;span&gt;T3&lt;/span&gt;, &lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T2&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T3&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T2&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T3&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;T1&lt;/span&gt;, &lt;span&gt;T2&lt;/span&gt;, &lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T2&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T2&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;T1&lt;/span&gt;, &lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; () &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;T1&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;;
&lt;span&gt;function&lt;/span&gt; call(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;[]) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;[]) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;args&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oof! Another case of death by a thousand overloads! Or at least, as many overloads as our users asked us for.&lt;/p&gt;
&lt;p&gt;TypeScript 3.0 allows us to better model scenarios like these by now allowing rest parameters to be generic, and inferring those generics as tuple types! Instead of declaring each of these overloads, we can say that the &lt;code&gt;...args&lt;/code&gt; rest parameter from &lt;code&gt;fn&lt;/code&gt; must be a type parameter that extends an array, and then we can re-use that for the &lt;code&gt;...args&lt;/code&gt; that &lt;code&gt;call&lt;/code&gt; passes:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;TS&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;[], &lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;TS&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;TS&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt; {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;args&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we call the &lt;code&gt;call&lt;/code&gt; function, TypeScript will try to extract the parameter list from whatever we pass to &lt;code&gt;fn&lt;/code&gt;, and turn that into a tuple:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; foo(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;number&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; {
    &lt;span&gt;return&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;y&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;toLowerCase&lt;/span&gt;();
}

&lt;span&gt;// The `TS` type parameter is inferred as `[number, string]`&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;, &lt;span&gt;100&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When TypeScript infers &lt;code&gt;TS&lt;/code&gt; as &lt;code&gt;[number, string]&lt;/code&gt; and we end up re-using &lt;code&gt;TS&lt;/code&gt; on the rest parameter of &lt;code&gt;call&lt;/code&gt;, the instantiation looks like the following&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; call(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; [&lt;span&gt;number&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt;]) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; [&lt;span&gt;number&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt;])&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And with TypeScript 3.0, using a tuple in a rest parameter gets &lt;em&gt;flattened&lt;/em&gt; into the rest of the parameter list! The above boils down to simple parameters with no tuples:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; call(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-v&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;number&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;number&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So in addition to catching type errors when we pass in the wrong arguments:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; call&amp;lt;&lt;span&gt;TS&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;[], &lt;span&gt;R&lt;/span&gt;&amp;gt;(&lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;TS&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;R&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;TS&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;R&lt;/span&gt; {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;args&lt;/span&gt;);
}

&lt;span class=&quot;pl-en&quot;&gt;call&lt;/span&gt;((&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;number&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;y&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span&gt;//                                ~~~~~~~&lt;/span&gt;
&lt;span&gt;// Error! `string` isn't assignable to `number`!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and inference from other arguments:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;call&lt;/span&gt;((&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;y&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; { &lt;span&gt;/* .... */&lt;/span&gt; }, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;100&lt;/span&gt;);
&lt;span&gt;//    ^  ^&lt;/span&gt;
&lt;span&gt;// `x` and `y` have their types inferred as `string` and `number` respectively.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we can also observe the tuple types that these functions infer from the outside:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; tuple&amp;lt;&lt;span&gt;TS&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;[]&amp;gt;(&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;TS&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;TS&lt;/span&gt; {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;xs&lt;/span&gt;;
}

&lt;span&gt;let&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;tuple&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span&gt;// has type `[number, number, string]`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is a subtler point to note though. In order to make all of this work, we needed to expand what tuples could do‚Ä¶&lt;/p&gt;
&lt;h2 id=&quot;richer-tuple-types&quot;&gt;Richer tuple types&lt;/h2&gt;
&lt;p&gt;To make tuples model parameter lists (as we just discussed), we had to rethink tuple types a bit. Before TypeScript 3.0, the best that tuples could model was the order and count of a set of parameters.&lt;/p&gt;
&lt;p&gt;However, parameter lists aren‚Äôt just ordered lists of types. For example, parameters at the end can be optional:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;// Both `y` and `z` are optional here.&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; foo(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;100&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;) {
    &lt;span&gt;// ...&lt;/span&gt;
}

&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;(&lt;span&gt;true&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;(&lt;span&gt;true&lt;/span&gt;, &lt;span&gt;undefined&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;(&lt;span&gt;true&lt;/span&gt;, &lt;span&gt;200&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last parameter can be a &lt;em&gt;rest&lt;/em&gt; parameter.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;// `rest` accepts any number of strings - even none!&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; foo(&lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;[]) {
    &lt;span&gt;// ...&lt;/span&gt;
}

&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();
&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;(&lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;(&lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, there is one mildly interesting property about parameter lists which is that they can be empty:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;// Accepts no parameters.&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; foo() {
    &lt;span&gt;// ...&lt;/span&gt;
}

&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So to make it possible for tuples to correspond to parameter lists, we needed to model each of these scenarios.&lt;/p&gt;
&lt;p&gt;First, tuples now allow trailing optional elements:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; * 2D, or potentially 3D, coordinate.&lt;/span&gt;
&lt;span&gt; */&lt;/span&gt;
&lt;span&gt;type&lt;/span&gt; &lt;span&gt;Coordinate&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [&lt;span&gt;number&lt;/span&gt;, &lt;span&gt;number&lt;/span&gt;, &lt;span&gt;number&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt;];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Coordinate&lt;/code&gt; type creates a tuple with an optional property named &lt;code&gt;2&lt;/code&gt; ‚Äì the element at index &lt;code&gt;2&lt;/code&gt; might not be defined! Interestingly, since tuples use numeric literal types for their &lt;code&gt;length&lt;/code&gt; properties, &lt;code&gt;Coordinate&lt;/code&gt;‚Äòs &lt;code&gt;length&lt;/code&gt; property has the type &lt;code&gt;2 | 3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Second, tuples now allow rest elements at the end.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;type&lt;/span&gt; &lt;span&gt;OneNumberAndSomeStrings&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [&lt;span&gt;number&lt;/span&gt;, ...&lt;span&gt;string&lt;/span&gt;[]];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rest elements introduce some interesting open-ended behavior to tuples. The above &lt;code&gt;OneNumberAndSomeStrings&lt;/code&gt; type requires its first property to be a &lt;code&gt;number&lt;/code&gt;, and permits 0 or more &lt;code&gt;string&lt;/code&gt;s. Indexing with an arbitrary &lt;code&gt;number&lt;/code&gt; will return a &lt;code&gt;string | number&lt;/code&gt; since the index won‚Äôt be known. Likewise, since the tuple length won‚Äôt be known, the &lt;code&gt;length&lt;/code&gt; property is just &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Of note, when no other elements are present, a rest element in a tuple is identical to itself:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;type&lt;/span&gt; &lt;span&gt;Foo&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [...&lt;span&gt;number&lt;/span&gt;[]]; &lt;span&gt;// Equivalent to `number[]`.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, tuples can now be empty! While it‚Äôs not that useful outside of parameter lists, the empty tuple type can be referenced as &lt;code&gt;[]&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;type&lt;/span&gt; &lt;span&gt;EmptyTuple&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you might expect, the empty tuple has a &lt;code&gt;length&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; and indexing with a &lt;code&gt;number&lt;/code&gt; returns the &lt;code&gt;never&lt;/code&gt; type.&lt;/p&gt;
&lt;h2 id=&quot;improved-errors-and-ux&quot;&gt;Improved errors and UX&lt;/h2&gt;
&lt;p&gt;Over time we‚Äôve heard more and more demand from our community regarding better error messages. While we‚Äôre by no means done, we heard you in TypeScript 3.0 and have invested a bit here.&lt;/p&gt;
&lt;h3 id=&quot;related-error-spans&quot;&gt;Related error spans&lt;/h3&gt;
&lt;p&gt;Part of the goal of providing a good error message is also guiding a user towards a way to fix the error, or providing a way to intuit why the error message was given in the first place. Much of the time, there can be a lot of information or multiple reasons an error message might surface. Of those reasons, we might find they come from different parts of the code.&lt;/p&gt;
&lt;p&gt;Related error spans are a new way to surface that information to users. In TypeScript 3.0, error messages can provide messages on other locations so that users can reason about cause-and-effect of an error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/3.0-related-spans-export-default.png&quot; alt=&quot;Using import * as express syntax can cause an error when calling express(). Here, the provided error tells the user not just that the call is invalid, but that it has occurred because of the way the user imported express.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In some sense, related error messages can give a user not just an explanation, but also breadcrumbs to see where things went wrong.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/3.0-misspelled-related-span1.gif&quot; alt=&quot;An error on a potentially misspelled property now also informs the user of where the most likely candidate originated.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;These spans will also appear in the terminal when running &lt;code&gt;tsc&lt;/code&gt; with &lt;code&gt;--pretty&lt;/code&gt; mode enabled, though our team is still iterating on the UI and would appreciate feedback!&lt;/p&gt;
&lt;h3 id=&quot;improved-messages-and-elaboration&quot;&gt;Improved messages and elaboration&lt;/h3&gt;
&lt;p&gt;Around TypeScript 2.9, we started investing more in our error messages, and &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/25310&quot;&gt;with 3.0 we really tried to tackle a core set of cases&lt;/a&gt; that could give a smarter, cleaner, and more accurate error experience. This includes things like picking better types with mismatches in union types, and cutting right to the chase for certain error messages.&lt;/p&gt;
&lt;p&gt;We believe this effort had paid off and will provide significantly shorter and cleaner error messages.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/3.0-error-messages-vertical.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/3.0-error-messages-object-literals-vertical-2.png&quot; alt=&quot;Error messages for the equivalent code/issue in JSX compared between TypeScript 2.8 and TypeScript 3.0. In TypeScript 3.0, the message is dramatically shorter and has a related span, while still providing context.&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-unknown-type&quot;&gt;The &lt;code&gt;unknown&lt;/code&gt; type&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;any&lt;/code&gt; type is the most-capable type in TypeScript ‚Äì while it encompasses the type of every possible value, it doesn‚Äôt force us to do any checking before we try to call, construct, or access properties on these values. It also lets us assign values of type &lt;code&gt;any&lt;/code&gt; to values that expect any other type.&lt;/p&gt;
&lt;p&gt;This is mostly useful, but it can be a bit lax.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;let&lt;/span&gt; foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;any&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;;

&lt;span&gt;// All of these will throw errors, but TypeScript&lt;/span&gt;
&lt;span&gt;// won't complain since `foo` has the type `any`.&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;y&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;z&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();
&lt;span&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();
&lt;span class=&quot;pl-en&quot;&gt;upperCase&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;);
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;hello world!&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;&lt;/span&gt;;

&lt;span&gt;function&lt;/span&gt; upperCase(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are often times where we want to describe the &lt;em&gt;least&lt;/em&gt;-capable type in TypeScript. This is useful for APIs that want to signal ‚Äúthis can be any value, so you &lt;em&gt;must&lt;/em&gt; perform some type of checking before you use it‚Äù. This forces users to safely introspect returned values.&lt;/p&gt;
&lt;p&gt;TypeScript 3.0 introduces a new type called &lt;code&gt;unknown&lt;/code&gt; that does exactly that. Much like &lt;code&gt;any&lt;/code&gt;, any value is assignable &lt;em&gt;to&lt;/em&gt; &lt;code&gt;unknown&lt;/code&gt;; however, unlike &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;unknown&lt;/code&gt; is assignable to almost nothing else without a type assertion. You also can‚Äôt access any properties off of an &lt;code&gt;unknown&lt;/code&gt;, nor can you call/construct them.&lt;/p&gt;
&lt;p&gt;As an example, swapping the above example to use &lt;code&gt;unknown&lt;/code&gt; instead of &lt;code&gt;any&lt;/code&gt; forces turns all usages of &lt;code&gt;foo&lt;/code&gt; into an error:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;let&lt;/span&gt; foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;unknown&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;;

&lt;span&gt;// Since `foo` has type `unknown`, TypeScript&lt;/span&gt;
&lt;span&gt;// errors on each of these locations.&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;y&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;z&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();
&lt;span&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();
&lt;span class=&quot;pl-en&quot;&gt;upperCase&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;);
&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;hello world!&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;&lt;/span&gt;;

&lt;span&gt;function&lt;/span&gt; upperCase(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead, we‚Äôre now forced to either perform checking, or use a type assertion to convince the type-system that we know better.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;let&lt;/span&gt; foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;unknown&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;;

&lt;span&gt;function&lt;/span&gt; hasXYZ(&lt;span class=&quot;pl-v&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;obj&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; { &lt;span class=&quot;pl-en&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;any&lt;/span&gt;, &lt;span class=&quot;pl-en&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;any&lt;/span&gt;, &lt;span class=&quot;pl-en&quot;&gt;z&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;any&lt;/span&gt; } {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;!!&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span&gt;typeof&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;object&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;x&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;y&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;z&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;obj&lt;/span&gt;
}

&lt;span&gt;// Using a user-defined type guard...&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-en&quot;&gt;hasXYZ&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;)) {
    &lt;span&gt;// ...we're allowed to access certain properties again.&lt;/span&gt;
    &lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
    &lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;y&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
    &lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;z&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;prop&lt;/span&gt;;
}

&lt;span&gt;// We can also just convince TypeScript we know what we're doing&lt;/span&gt;
&lt;span&gt;// by using a type assertion.&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;upperCase&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;);

&lt;span&gt;function&lt;/span&gt; upperCase(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you‚Äôve been using a type like &lt;code&gt;{} | null | undefined&lt;/code&gt; to achieve similar behavior, &lt;code&gt;unknown&lt;/code&gt; usually has more desirable behavior in constructs like conditional types, since conditional types distribute across unions:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;type&lt;/span&gt; &lt;span&gt;Arrayify&lt;/span&gt;&amp;lt;&lt;span&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;T&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;any&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt; &lt;span&gt;Array&lt;/span&gt;&amp;lt;&lt;span&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;never&lt;/span&gt;;

&lt;span&gt;type&lt;/span&gt; &lt;span&gt;A&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;Arrayify&lt;/span&gt;&amp;lt;{} &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span&gt;undefined&lt;/span&gt;&amp;gt;; &lt;span&gt;// null[] | undefined[] | {}[]&lt;/span&gt;
&lt;span&gt;type&lt;/span&gt; &lt;span&gt;B&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;Arrayify&lt;/span&gt;&amp;lt;&lt;span&gt;unknown&lt;/span&gt;&amp;gt;;               &lt;span&gt;// unknown[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;default-props-support&quot;&gt;Support for &lt;code&gt;defaultProps&lt;/code&gt; in JSX&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Note: at the time of writing, React‚Äôs &lt;code&gt;.d.ts&lt;/code&gt; files may not yet support this functionality.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you‚Äôve ever used default initializers in modern TypeScript/JavaScript, you might know how handy they can be for function callers. They give us a useful syntax to let callers use functions more easily by not requiring certain arguments, while letting function authors ensure that their values are always defined in a clean way.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; loudlyGreet(&lt;span class=&quot;pl-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
    &lt;span&gt;// Thanks to the default initializer, `name` will always have type `string` internally.&lt;/span&gt;
    &lt;span&gt;// We don't have to check for `undefined` here.&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HELLO&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;());
}

&lt;span&gt;// Externally, `name` is optional, and we can potentially pass `undefined` or omit it entirely.&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;loudlyGreet&lt;/span&gt;();
&lt;span class=&quot;pl-en&quot;&gt;loudlyGreet&lt;/span&gt;(&lt;span&gt;undefined&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In &lt;a href=&quot;https://reactjs.org/&quot; rel=&quot;nofollow&quot;&gt;React&lt;/a&gt;, a similar concept exists for components and their &lt;code&gt;props&lt;/code&gt;. When creating a new element using a component, React looks up a property called &lt;code&gt;defaultProps&lt;/code&gt;, to fill in values for &lt;code&gt;props&lt;/code&gt; that are omitted.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js-jsx&quot;&gt;
&lt;pre&gt;
&lt;span&gt;// Some non-TypeScript JSX file&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; *&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; as&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt; React&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; from&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;react&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span&gt;import&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; *&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; as&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt; ReactDOM&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; from&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;react-dom&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;Greet&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;Component&lt;/span&gt; {
    &lt;span class=&quot;pl-en&quot;&gt;render&lt;/span&gt;() {
        &lt;span&gt;const&lt;/span&gt; {&lt;span class=&quot;pl-smi&quot;&gt; name&lt;/span&gt; } &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; this&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;props&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;        return&lt;/span&gt; &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;Hello $&lt;span class=&quot;pl-pse&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;toUpperCase&lt;/span&gt;()&lt;/span&gt;&lt;span class=&quot;pl-pse&quot;&gt;}&lt;/span&gt;!&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;;
    }

&lt;span class=&quot;pl-k&quot;&gt;    static&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;defaultProps&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; {
&lt;span class=&quot;pl-c1&quot;&gt;        &lt;span&gt;name&lt;/span&gt;:&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    };
}

&lt;span&gt;//      Notice no `name` attribute was specified!&lt;/span&gt;
&lt;span&gt;//                                     vvvvvvvvv&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt; =&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;renderToString&lt;/span&gt;(&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Greet&lt;/span&gt;&lt;/span&gt; /&amp;gt;);
&lt;span class=&quot;pl-c1&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;result&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that in &lt;code&gt;&amp;lt;Greet /&amp;gt;&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; didn‚Äôt have to be specified. When a &lt;code&gt;Greet&lt;/code&gt; element is created, &lt;code&gt;name&lt;/code&gt; will be initialized with &lt;code&gt;&quot;world&quot;&lt;/code&gt; and this code will print &lt;code&gt;&amp;lt;div&amp;gt;Hello world!&amp;lt;/div&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, TypeScript didn‚Äôt understand that &lt;code&gt;defaultProps&lt;/code&gt; had any bearing on JSX invocations. Instead, users would often have to declare properties optional and use non-null assertions inside of &lt;code&gt;render&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;export&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; &lt;span&gt;Props&lt;/span&gt; { name&lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; }
&lt;span&gt;export&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;Greet&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;.&lt;span&gt;Component&lt;/span&gt;&amp;lt;&lt;span&gt;Props&lt;/span&gt;&amp;gt; {
    render() {
        &lt;span&gt;const&lt;/span&gt; { name } &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;props&lt;/span&gt;;

        &lt;span&gt;// Notice the `!` ------v&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &amp;lt;&lt;span class=&quot;pl-en&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;span class=&quot;pl-smi&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;()}&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;;
    }
    &lt;span&gt;static&lt;/span&gt; defaultProps &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; { name: &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;}
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or they‚Äôd use some hacky type-assertions to fix up the type of the component before exporting it.&lt;/p&gt;
&lt;p&gt;That‚Äôs why TypeScript 3.0, the language supports a new type alias in the &lt;code&gt;JSX&lt;/code&gt; namespace called &lt;code&gt;LibraryManagedAttributes&lt;/code&gt;. Despite the long name, this is just a helper type that tells TypeScript what attributes a JSX tag accepts. The short story is that using this general type, we can model React‚Äôs specific behavior for things like &lt;code&gt;defaultProps&lt;/code&gt; and, to some extent, &lt;code&gt;propTypes&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;export&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; &lt;span&gt;Props&lt;/span&gt; {
    name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;
}

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;Greet&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;.&lt;span&gt;Component&lt;/span&gt;&amp;lt;&lt;span&gt;Props&lt;/span&gt;&amp;gt; {
    render() {
        &lt;span&gt;const&lt;/span&gt; { name } &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;props&lt;/span&gt;;
        &lt;span&gt;return&lt;/span&gt; &amp;lt;&lt;span class=&quot;pl-en&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;span class=&quot;pl-smi&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;()}&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;;
    }
    &lt;span&gt;static&lt;/span&gt; defaultProps &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; { name: &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;}
}

&lt;span&gt;// Type-checks! No type assertions needed!&lt;/span&gt;
&lt;span&gt;let&lt;/span&gt; el &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &amp;lt;&lt;span&gt;Greet&lt;/span&gt; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind that there are some limitations. For &lt;code&gt;defaultProps&lt;/code&gt; that explicitly specify their type as something like &lt;code&gt;Partial&amp;lt;Props&amp;gt;&lt;/code&gt;, or stateless function components (SFCs) whose &lt;code&gt;defaultProps&lt;/code&gt; are declared with &lt;code&gt;Partial&amp;lt;Props&amp;gt;&lt;/code&gt;, will make &lt;em&gt;all&lt;/em&gt; props optional. As a workaround, you can omit the type annotation entirely for &lt;code&gt;defaultProps&lt;/code&gt; on a class component (like we did above), or use ES2015 default initializers for SFCs:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; Greet({ &lt;span class=&quot;pl-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span&gt;Props&lt;/span&gt;) {
    &lt;span&gt;return&lt;/span&gt; &amp;lt;&lt;span class=&quot;pl-en&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;span class=&quot;pl-smi&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toUpperCase&lt;/span&gt;()}&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One last thing to note is that while the support is built into TypeScript, the current &lt;code&gt;.d.ts&lt;/code&gt; files on DefinitelyTyped are not &lt;em&gt;currently&lt;/em&gt; leveraging it ‚Äì therefore &lt;code&gt;@types/react&lt;/code&gt; may not have the change available yet. We are currently waiting on stabilization throughout DefinitelyTyped to ensure that the change is minimally disruptive.&lt;/p&gt;
&lt;h2 id=&quot;lib-directives&quot;&gt;&lt;code&gt;/// &amp;lt;reference lib=&quot;...&quot; /&amp;gt;&lt;/code&gt; directives&lt;/h2&gt;
&lt;p&gt;One of the issues we‚Äôve seen in the community is that polyfills ‚Äì libraries that provide newer APIs in older runtimes ‚Äì often have their own declaration files (&lt;code&gt;.d.ts&lt;/code&gt; files) that attempt to define those APIs themselves. While this is sometimes fine, these declarations are global, and may provide issues with TypeScript‚Äôs built-in &lt;code&gt;lib.d.ts&lt;/code&gt; depending on users‚Äô compiler options like &lt;code&gt;--lib&lt;/code&gt; and &lt;code&gt;--target&lt;/code&gt;. For example, declarations for &lt;code&gt;core-js&lt;/code&gt; might conflict with the built-in &lt;code&gt;lib.es2015.d.ts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To solve this, TypeScript 3.0 provides a new way for files to declare the built-in APIs which they expect to be present using a new reference directive: &lt;code&gt;/// &amp;lt;reference lib=&quot;...&quot; /&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, a polyfill for ES2015‚Äôs &lt;code&gt;Promise&lt;/code&gt; might now simply contain the lines&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/// &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;reference&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;es2015.promise&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span&gt;export&lt;/span&gt; {};
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this comment, even if a TypeScript 3.0 consumer has explicitly used a target that doesn‚Äôt bring in &lt;code&gt;lib.es2015.promise.d.ts&lt;/code&gt;, importing the above library will ensure that &lt;code&gt;Promise&lt;/code&gt; is present.&lt;/p&gt;
&lt;h2 id=&quot;editor-productivity&quot;&gt;Editor Productivity&lt;/h2&gt;
&lt;p&gt;For those who are unfamiliar, TypeScript leverages its syntactic and semantic knowledge to provide services for writing code more easily. It acts as the engine for TypeScript and JavaScript underneath editors like Visual Studio, Visual Studio Code, and any other editor with a TypeScript plugin to provide the things users love like code completion, &lt;em&gt;Go to Definition&lt;/em&gt;, and even quick fixes and refactorings. TypeScript 3.0 continues to deliver here.&lt;/p&gt;
&lt;h3 id=&quot;named-import-refactorings&quot;&gt;Named import refactorings&lt;/h3&gt;
&lt;p&gt;Occasionally, qualifying every import with the module it came from can be cumbersome.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;dependency&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;./dependency&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;

&lt;span&gt;// look at all this repetition!&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;dependency&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();

&lt;span class=&quot;pl-smi&quot;&gt;dependency&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;bar&lt;/span&gt;();

&lt;span class=&quot;pl-smi&quot;&gt;dependency&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;baz&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the other hand, if we individually import the things we use, we might find that after many uses it‚Äôs become unclear for new readers where these imports originated from.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; { &lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;bar&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;baz&lt;/span&gt; } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;./dependency&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;

&lt;span&gt;// way lower in the file...&lt;/span&gt;

&lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;();

&lt;span class=&quot;pl-en&quot;&gt;bar&lt;/span&gt;();

&lt;span class=&quot;pl-en&quot;&gt;baz&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Regardless of which you decide to choose now, you might change your mind later. TypeScript 3.0 provides refactorings so that switch never feels daunting.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/namespaceToNamedImports.gif&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;jsx-productivity&quot;&gt;Closing JSX tag completions and outlining spans&lt;/h3&gt;
&lt;p&gt;TypeScript now provides two new productivity features around JSX:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;providing completions for JSX closing tags&lt;/li&gt;
&lt;li&gt;providing collapsible outlining spans for JSX&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/jsxCompletionsAndOutlining.gif&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;remove-bogus-code&quot;&gt;Quick fixes for unreachable code and unused labels&lt;/h3&gt;
&lt;p&gt;TypeScript will now provide quick fixes to remove any unreachable code, as well as remove unused labels.&lt;/p&gt;
&lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt;
&lt;p&gt;You can always keep an eye on upcoming breaking changes &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes&quot;&gt;in the language&lt;/a&gt; as well as &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/API-Breaking-Changes/&quot;&gt;in our API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We expect TypeScript 3.0 to have very few impactful breaking changes. Language changes should be minimally disruptive, and most breaks in our APIs are oriented around removing already-deprecated functions.&lt;/p&gt;
&lt;h3 id=&quot;unknown-is-a-reserved-type-name&quot;&gt;&lt;code&gt;unknown&lt;/code&gt; is a reserved type name&lt;/h3&gt;
&lt;p&gt;Since &lt;code&gt;unknown&lt;/code&gt; is a new built-in type, it can no longer be used in type declarations like interfaces, type aliases, or classes.&lt;/p&gt;
&lt;h3 id=&quot;api-breaking-changes&quot;&gt;API breaking changes&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;The deprecated internal method &lt;code&gt;LanguageService#getSourceFile&lt;/code&gt; has been removed, as it has been deprecated for two years. See &lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/24540&quot;&gt;#24540&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The deprecated function &lt;code&gt;TypeChecker#getSymbolDisplayBuilder&lt;/code&gt; and associated interfaces have been removed. See &lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/25331&quot;&gt;#25331&lt;/a&gt;. The emitter and node builder should be used instead.&lt;/li&gt;
&lt;li&gt;The deprecated functions &lt;code&gt;escapeIdentifier&lt;/code&gt; and &lt;code&gt;unescapeIdentifier&lt;/code&gt; have been removed. Due to changing how the identifier name API worked in general, they have been identity functions for a few releases, so if you need your code to behave the same way, simply removing the calls should be sufficient. Alternatively, the typesafe &lt;code&gt;escapeLeadingUnderscores&lt;/code&gt; and &lt;code&gt;unescapeLeadingUnderscores&lt;/code&gt; should be used if the types indicate they are required (as they are used to convert to or from branded &lt;code&gt;__String&lt;/code&gt; and &lt;code&gt;string&lt;/code&gt; types).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;TypeChecker#getSuggestionForNonexistentProperty&lt;/code&gt;, &lt;code&gt;TypeChecker#getSuggestionForNonexistentSymbol&lt;/code&gt;, and &lt;code&gt;TypeChecker#getSuggestionForNonexistentModule&lt;/code&gt; methods have been made internal, and are no longer part of our public API. See &lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/25520&quot;&gt;#25520&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TypeScript owes so much of its success to its community. We‚Äôre indebted to our contributors who‚Äôve worked on the compiler, the language service, DefinitelyTyped, and tooling integration that leveraged any combination of them. But we‚Äôre also grateful for our users who‚Äôve consistently given us the feedback we needed and pushed us to improve. Going forward, we foresee bringing more value to the type system and tooling experience, polishing the existing work on project references, and making TypeScript (both the language and the project) more approachable by whatever means we can. But in addition to that, we want to explore what we can do to empower more tool authors and users in the JavaScript community ‚Äì to bring value to users who could still get value from using TypeScript even without directly using TypeScript.&lt;/p&gt;
&lt;p&gt;Keep an eye on &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap&quot;&gt;our roadmap&lt;/a&gt; as these ideas become specifics, and feel free to drop us a line to give us feedback, whether via the comments below, &lt;a href=&quot;https://twitter.com/typescriptlang/&quot; rel=&quot;nofollow&quot;&gt;over Twitter&lt;/a&gt;, or &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/new/choose&quot;&gt;by filing an issue&lt;/a&gt;. We‚Äôre always trying to do better.&lt;/p&gt;
&lt;p&gt;For everyone who‚Äôs been a part of the TypeScript journey so far ‚Äì thank you. We look forward to bringing you the best experience we can. And for everyone else, we hope you‚Äôll start exploring and loving TypeScript as much as we do.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;The TypeScript Team&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Mon, 30 Jul 2018 16:43:41 +0000</pubDate>
<dc:creator>DanRosenwasser</dc:creator>
<og:type>article</og:type>
<og:title>Announcing TypeScript 3.0</og:title>
<og:url>https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/</og:url>
<og:description></og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/</dc:identifier>
</item>
<item>
<title>How Britain beat the odds to achieve space flight, and then abandoned it</title>
<link>https://medium.com/lapsed-historian/an-empire-of-stars-d6b24f92cbc7</link>
<guid isPermaLink="true" >https://medium.com/lapsed-historian/an-empire-of-stars-d6b24f92cbc7</guid>
<description>&lt;p&gt;

&lt;h2 name=&quot;41b3&quot; id=&quot;41b3&quot; class=&quot;graf graf--h4 graf-after--h3 graf--subtitle&quot;&gt;How Britain beat the odds to independently achieve space flight, and then abandoned it on the very same¬†day.&lt;/h2&gt;
&lt;/p&gt;&lt;div readability=&quot;39&quot;&gt;
&lt;p name=&quot;ea37&quot; id=&quot;ea37&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;A cold autumn day was dawning as the German soldiers of the &lt;em class=&quot;markup--em markup--p-em&quot;&gt;Altenwalde Versuchskommando&lt;/em&gt; prepared their V-2 rocket for launch. They‚Äôd done this a hundred times before, firing the rockets that had terrified Londoners as the Second World War dragged on. As officers and other soldiers looked on, they finished their work and watched as their rocket finally roared up into the sky.&lt;/p&gt;
&lt;p name=&quot;7aba&quot; id=&quot;7aba&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;As the V-2 disappeared into the distance, the men of the AVKO couldn‚Äôt help but smile and cheer. Their delight was catching, and soon the rest of the soldiers and officers around the launchpad were cheering as well. &lt;em class=&quot;markup--em markup--p-em&quot;&gt;British&lt;/em&gt; officers and soldiers. Because this was Operation Backfire, the beginning of something that most people don‚Äôt even know existed‚Ää‚Äî‚Ääthe &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;British&lt;/strong&gt; Space Programme.&lt;/p&gt;
&lt;h3 name=&quot;35fa&quot; id=&quot;35fa&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Operation Paperclip&lt;/h3&gt;
&lt;p name=&quot;fbdc&quot; id=&quot;fbdc&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;When most people think of the scramble for German rocketry in the chaotic final days of the war in Europe, they think of it as a two-horse race between the US and the USSR. In reality though, Great Britain was just as involved. Indeed arguably more than any other nation, the British knew just what this new age of rocketry would usher in. Thanks to the V-2, London had become the founding member of a club whose total membership can still today be counted entirely on one hand‚Ää‚Äî‚Ääit remains one of the few cities in the world ever to be bombarded by ballistic missiles.&lt;/p&gt;
&lt;p name=&quot;e0a6&quot; id=&quot;e0a6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Indeed the British suffered at the hands of Operation Paperclip‚Ää‚Äî‚ÄäAmerica‚Äôs great quest to grab as much of Germany‚Äôs rocket industry as possible‚Ää‚Äî‚Ääas much the Russians did. As well as capturing Werner von Braun, who elected to surrender to the US (‚ÄúWe despised the french, feared the Russians and the British could not afford us‚Äù) the Americans walked away with the extensive collection of blueprints and documents that he had preserved from destruction as the Nazi state collapsed. What is often forgotten, however, is that many of those blueprints and documents were in fact ‚Äúliberated‚Äù from the British sector, not the Russian.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;18.907849829352&quot;&gt;
&lt;p name=&quot;f08f&quot; id=&quot;f08f&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;When the dust settled, the British found themselves with a lack of rockets and rocket scientists. Determined to have a stake in the game, however, they quickly realised that the men who‚Äôd been launching the V-2s on a daily basis probably knew as much about the practicalities of German rocketry as the scientists themselves. And so, Operation Backfire was born.&lt;/p&gt;
&lt;h3 name=&quot;5096&quot; id=&quot;5096&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Operation Backfire&lt;/h3&gt;
&lt;p name=&quot;9fb3&quot; id=&quot;9fb3&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Prisoner camps were combed for soldiers from V-2 units and the AKVO was formed. It was a curious arrangement‚Ää‚Äî‚Ääthe men who had launched the world‚Äôs first ballistic missile attack on London were now working with soldiers and scientists who‚Äôd often been on the receiving end of it. &lt;a href=&quot;http://www.v2rocket.com/start/chapters/backfire.html#collection&quot; data-href=&quot;http://www.v2rocket.com/start/chapters/backfire.html#collection&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;The photos of the Frank Micklethwaite Collection&lt;/a&gt;, which show British and German soldiers chatting around (and sometimes sitting on) V-2 rockets really highlight how strange a relationship it must have been.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;62&quot;&gt;
&lt;p name=&quot;c2c5&quot; id=&quot;c2c5&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;For the British, Backfire was a huge success. Not just because it helped them gain the knowledge necessary to enter the space race, but because it also left them as unchallenged masters of High Test Peroxide (HTP) rocketry. Von Braun was right, the British &lt;em class=&quot;markup--em markup--p-em&quot;&gt;didn‚Äôt&lt;/em&gt; have the money or resources that the Americans had, but with HTP and a little ingenuity they were determined to compete without them.&lt;/p&gt;
&lt;p name=&quot;d88b&quot; id=&quot;d88b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Ultimately, it was military need that drove this competition for space. With the Iron Curtain descending, Britain was keen to retain an independent Nuclear deterrent and rocketry seemed the answer‚Ää‚Äî‚Ääeven if the grandiose efforts of the likes of Korolev (who had actually witnessed the Backfire launches) and Von Braun were out of their range.&lt;/p&gt;
&lt;h3 name=&quot;d43b&quot; id=&quot;d43b&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Singing the¬†blues&lt;/h3&gt;
&lt;p name=&quot;6ccb&quot; id=&quot;6ccb&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The first real result of these British rocketry efforts was Blue Steel, a nuclear ballistic missile designed to be launched from Britain‚Äôs V Bomber squadrons. It is safe to say that it was not without issues. Working with HTP was still a new art, and it was only after the missile was commissioned that it was discovered that HTP and aircraft de-icer tended to get somewhat explosive if they came into contact.&lt;/p&gt;
&lt;p name=&quot;5603&quot; id=&quot;5603&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Given that Scotland was host to more than a few V Bombers, this was not an entirely satisfactory arrangement and the Aviation Authority soon placed strict rules on Blue Steel‚Äôs operation. In fact, for a significant portion of its life, this key piece of Britain‚Äôs nuclear deterrent was allowed to carry fuel or a warhead, &lt;em class=&quot;markup--em markup--p-em&quot;&gt;but not both at the same time.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;d32d&quot; id=&quot;d32d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The first real leap forward in Britain‚Äôs space programme, however, came in 1953 with the birth of Blue Streak, a silo-launchable Medium Range Ballistic Missile (MRBM). Tested on giant gantries at RAF Spadeadam in the wooded heart of Cumbria. Blue Streak proved to be very reliable indeed.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*WIhMSHvpA4NvXbkfMCbkXw.jpeg&quot; data-width=&quot;697&quot; data-height=&quot;553&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*WIhMSHvpA4NvXbkfMCbkXw.jpeg&quot;/&gt;&lt;/div&gt;
Testing Blue Streak at Spadeadam
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*uDEz0NEtBBoCUta2jxy8zw.gif&quot; data-width=&quot;702&quot; data-height=&quot;538&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*uDEz0NEtBBoCUta2jxy8zw.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*uDEz0NEtBBoCUta2jxy8zw.gif&quot;/&gt;&lt;/div&gt;
A control room at Spadeadam
&lt;p name=&quot;0c1c&quot; id=&quot;0c1c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Evidence of the Spadeadam test site still remains at the base today, a haunting relic of a bygone age.&lt;/p&gt;

&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*4MlONZAwBn-PyHhimiPWWg.jpeg&quot; data-width=&quot;1280&quot; data-height=&quot;960&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*4MlONZAwBn-PyHhimiPWWg.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*4MlONZAwBn-PyHhimiPWWg.jpeg&quot;/&gt;&lt;/div&gt;
Remains of a test rig at Spadeadam
&lt;p name=&quot;7395&quot; id=&quot;7395&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;With Blue Streak looking promising, the Black Knight rocket soon followed. Designed for orbital testing and experiments rather than to carry a warhead, Black Knight was housed and tested in something straight out of a 60s Sci-Fi novel: A bunker complex looking out over the Needles on the Isle of Wight. As with Blue Streak, Black Knight proved to be a highly reliable piece of rocketry.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;228.65950920245&quot;&gt;
&lt;p name=&quot;a109&quot; id=&quot;a109&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;All the key components were thus now in place for a genuine British space shot, a fact that was not lost on both the rocket manufacturers themselves and various civilian agencies. Their chance finally came in the Sixties when Blue Streak was cancelled in favour of a cheaper, ‚Äúoff-the-shelf,‚Äù American-built solution. Fearing a backlash from press and public over wasted cost and effort, the Government swiftly announced that Britain‚Äôs efforts would now be civilian. British rockets would put a satellite in space.&lt;/p&gt;
&lt;p name=&quot;440f&quot; id=&quot;440f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Black Arrow, Britain‚Äôs first genuine satellite launcher, based on both Blue Streak and Black Knight technology, was born.&lt;/p&gt;
&lt;h3 name=&quot;6d92&quot; id=&quot;6d92&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Black Arrow&lt;/h3&gt;
&lt;p name=&quot;fd97&quot; id=&quot;fd97&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Black Arrow was a masterpiece of engineering on a budget. The project‚Äôs scientists and engineers were determined to prove that Britain could not only get into space, but could stay there. They cannibalised the knowledge and technology developed for Blue Streak and Black Knight and produced a rocket that, if launched from the right place, could put a satellite in polar orbit. It pushed the technology to the absolute limit, but if successful laid the groundwork for a better rocket beyond‚Ää‚Äî‚ÄäBlack Prince. Black Arrow would be able to launch small satellites but Black Prince would be better. More importantly, it would be the rocket that could achieve the engineering holy grail‚Ää‚Äî‚Ääputting payloads in geostationary orbit.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*d8Y9ECYWE5ZuaQ1yI3UYDA.jpeg&quot; data-width=&quot;1425&quot; data-height=&quot;1696&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*d8Y9ECYWE5ZuaQ1yI3UYDA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*d8Y9ECYWE5ZuaQ1yI3UYDA.jpeg&quot;/&gt;&lt;/div&gt;
A Black Arrow¬†launch
&lt;p name=&quot;dc05&quot; id=&quot;dc05&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;By 1968 the plans and rockets were in place, but as always money was a problem. For reasons that still cannot be adequately explained, the Treasury had taken a dislike to Britain‚Äôs rocket programme and ruthlessly trimmed its budget and questioned its expenses at every turn. This placed enormous pressure on the engineers involved. With the limited funds available only five Black Arrows could be built, and only two satellites. Working at the very edge of their knowledge and the limits of the technology they had practically no margin for error. They would, almost literally, only get one shot at their launch.&lt;/p&gt;
&lt;h3 name=&quot;0960&quot; id=&quot;0960&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The Launch¬†Site&lt;/h3&gt;
&lt;p name=&quot;3076&quot; id=&quot;3076&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;That launch would happen at the joint British and Australian space town of Woomera, a strange place where both military and civilian rocket scientists lived and mixed. It hadn‚Äôt been the first choice of the British when it came to launching rockets. Initially they‚Äôd hoped to launch from somewhere on mainland Britain itself, firing out over the North Sea in case anything went wrong. That plan, however, was swiftly abandoned as the North Sea oil industry began to develop and it was realised that, however small the chance was, a collision between a failed rocket and an oil rig would be a rather bad idea indeed. Luckily, Australia had all the open space that a rocket launch site could ever need and Woomera would become host to many launches of all nationalities over the coming decades.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*GF7G3n-DcqsHlWX01QCvHw.jpeg&quot; data-width=&quot;800&quot; data-height=&quot;522&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*GF7G3n-DcqsHlWX01QCvHw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*GF7G3n-DcqsHlWX01QCvHw.jpeg&quot;/&gt;&lt;/div&gt;
A launch site at¬†Woomera
&lt;p name=&quot;8faf&quot; id=&quot;8faf&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;With five rockets then, and a place from which to launch them, the Black Arrow team got to work.&lt;/p&gt;
&lt;h3 name=&quot;c17b&quot; id=&quot;c17b&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The Launches&lt;/h3&gt;
&lt;p name=&quot;7bb7&quot; id=&quot;7bb7&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;By 1969, the first of their five Black Arrow was ready to launch. As ever money was tight and worse, the Treasury had begun to review the project‚Äôs future. The Black Arrow team put this to the back of their minds, however, and in June launched the first of their precious Black Arrows.&lt;/p&gt;
&lt;p name=&quot;00dd&quot; id=&quot;00dd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It was not a success.&lt;/p&gt;
&lt;p name=&quot;a66b&quot; id=&quot;a66b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Before the launcher had even left the launchpad it developed an electrical fault. This caused a pair of the first stage combustion chambers to pivot and rotate and it had barely left the launchpad before it began to spin out of control. Just over a minute later, as it began to fall to Earth prematurely, it was detonated for safety reasons. The only person not disappointed was the operator of range control (‚ÄúI‚Äôve never gotten to blow up a rocket before.‚Äù He sheepishly admitted as he pushed the destruct button).&lt;/p&gt;
&lt;p name=&quot;ab14&quot; id=&quot;ab14&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;All was not lost though. The reasons for the failure were found and the team prepared to try again. The second Black Arrow was prepared, with the team hoping that the launch would successfully test the first two of the Black Arrow‚Äôs three stages. This time they were more successful, and the launch passed without a hitch.&lt;/p&gt;
&lt;p name=&quot;c1c9&quot; id=&quot;c1c9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Their hopes lifted, the Black Arrow team now prepared to take a gamble. The third launch would represent the first test of Black Arrow‚Äôs third stage, known as ‚ÄúWaxwing.‚Äù If all went well, this would represent a genuine opportunity to put one of their two precious satellites into orbit. If it went badly, however, that satellite would be lost. With only three rockets left, however, and ominous rumours about more cuts beginning to circulate, the decision to gamble was made.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*9g-BbWKcKIEImJqstXDzYg.jpeg&quot; data-width=&quot;1000&quot; data-height=&quot;864&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*9g-BbWKcKIEImJqstXDzYg.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*9g-BbWKcKIEImJqstXDzYg.jpeg&quot;/&gt;&lt;/div&gt;
The Puck satellite, later renamed¬†Prospero
&lt;p name=&quot;7f4d&quot; id=&quot;7f4d&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;On the 2nd of September, the third Black Arrow, complete with satellite, was launched. At first everything went well, but it soon became apparent that there was a problem. A leak in the second stage oxidiser pressurisation system caused it to cut out early, and although the third stage separated successfully it failed to make orbit, falling back to earth with its precious payload somewhere over the Gulf of Carpentaria.&lt;/p&gt;
&lt;h3 name=&quot;7f1b&quot; id=&quot;7f1b&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Cancellation&lt;/h3&gt;
&lt;p name=&quot;ff51&quot; id=&quot;ff51&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Morale was low. With just two rockets and one satellite left the chances of success were getting awfully slim. Then disaster happened. On the 29th July Frederick Corfield, the Minister of State for Trade and Industry, announced in the House of Commons that Britain‚Äôs independent satellite launcher programme was officially cancelled.&lt;/p&gt;
&lt;p name=&quot;7e4c&quot; id=&quot;7e4c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The quest for space was over.&lt;/p&gt;
&lt;p name=&quot;f976&quot; id=&quot;f976&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Almost.&lt;/p&gt;
&lt;h3 name=&quot;d0d9&quot; id=&quot;d0d9&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;All or¬†nothing&lt;/h3&gt;
&lt;p name=&quot;b381&quot; id=&quot;b381&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;When news of the project‚Äôs cancellation came, the fourth Black Arrow launcher was already en route to Australia. With it was the last of the project‚Äôs satellites‚Ää‚Äî‚Ääa basic sound-broadcasting satellite device which had been christened ‚ÄúPuck.‚Äù&lt;/p&gt;
&lt;p name=&quot;ee78&quot; id=&quot;ee78&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It would cost more, the team pointed out to the Treasury, to ship the whole lot back than it would to launch it, so why not let them have one final shot? Reluctantly the Treasury agreed. The Black Arrow team would get one last roll of the dice.&lt;/p&gt;
&lt;p name=&quot;cbae&quot; id=&quot;cbae&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;They thought that roll would come on the 27th October, but as the scientists and engineers watched from the launch centre the weather conditions changed. Launch was impossible. Dejected, many decamped to the nearest bar. It was an odd scene‚Ää‚Äî‚Ääa mix of local Australian farmers and workers and British boffins.&lt;/p&gt;
&lt;p name=&quot;ba43&quot; id=&quot;ba43&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p&quot;&gt;‚ÄúAwww. What‚Äôs the matter boys?‚Äù One Australian worker reputedly said, as the alcohol flowed. ‚ÄúYour matches get wet?‚Äù&lt;/p&gt;
&lt;p name=&quot;56f2&quot; id=&quot;56f2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It was the wrong comment to make and a full-on bar fight immediately erupted between the British and Australians. Luckily no one was seriously hurt.&lt;/p&gt;
&lt;p name=&quot;fd6c&quot; id=&quot;fd6c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;And so, on 28th October 1971, with seemingly the whole of British rocketry at Woomera watching, the countdown was started again. On the pad stood the fourth Black Arrow launcher, the last with permission to fly. Perched atop its third stage sat the last of the satellites, formerly called Puck but now with a certain dark humour rechristened ‚ÄúProspero‚Äù‚Ää‚Äî‚Ääafter Shakespeare‚Äôs weary magician determined to drown his magic book and renounce magic forever.&lt;/p&gt;
&lt;p name=&quot;2b13&quot; id=&quot;2b13&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At 3:50am GMT Black Arrow‚Äôs first stage, powered by HTP systems that the men of the AVKO would have recognised all those years ago, roared into life. Ten seconds later, on a cloud of superheated steam, Black Arrow leapt into the air. It was soon out of sight.&lt;/p&gt;
&lt;p name=&quot;8ec6&quot; id=&quot;8ec6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Three minutes later the first stage separated perfectly and, right on time, the second stage fired. The point of failure for the second stage was soon passed and right on time the third stage fired. All was going to plan!&lt;/p&gt;
&lt;p name=&quot;aaf7&quot; id=&quot;aaf7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;And then, as the men in the control room watched their instruments and monitors, something went wrong. As the final stage opened up and Prospero emerged, the still-moving final third stage, Waxwing, bumped sharply against it.&lt;/p&gt;
&lt;p name=&quot;1a29&quot; id=&quot;1a29&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Silence.&lt;/p&gt;
&lt;p name=&quot;4c06&quot; id=&quot;4c06&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In the control room no-one dared even to breathe.&lt;/p&gt;
&lt;p name=&quot;a81c&quot; id=&quot;a81c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;They waited‚Ä¶&lt;/p&gt;
&lt;p name=&quot;28b6&quot; id=&quot;28b6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;..and waited‚Ä¶&lt;/p&gt;
&lt;p name=&quot;4250&quot; id=&quot;4250&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;‚Ä¶and then Prospero &lt;em class=&quot;markup--em markup--p-em&quot;&gt;sang.&lt;/em&gt;&lt;/p&gt;

&lt;p name=&quot;8a0e&quot; id=&quot;8a0e&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;And down on Earth, deep in the heart of the Australian desert, a control room full of mild-mannered British scientists and engineers cheered, and screamed, and wept with joy.&lt;/p&gt;
&lt;p name=&quot;d99a&quot; id=&quot;d99a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;From Backfire to the outback, on 28th October 1971 Britain joined the very small and exclusive club of countries who have independently achieved true space flight. On the very same day, it also became the first (and so far only) country to officially abandon it.&lt;/p&gt;
&lt;h3 name=&quot;db38&quot; id=&quot;db38&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;A Lonely¬†end&lt;/h3&gt;
&lt;p name=&quot;b947&quot; id=&quot;b947&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;There is no Hollywood payoff to this story. There was no reversal of Government policy, no change of heart.&lt;/p&gt;
&lt;p name=&quot;445b&quot; id=&quot;445b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The final Black Arrow never flew and you can now see her tucked away in the Science Museum in London, if you know where to look. Nor did the scientists and engineers come back to a hero‚Äôs welcome. Indeed by the time many got home they had already been let go. They left as quietly as they had worked, the US space programme picking up some of the best whilst others went back to private industry. None would ever forget what they had done.&lt;/p&gt;
&lt;p name=&quot;3b06&quot; id=&quot;3b06&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But what of Prospero?&lt;/p&gt;
&lt;p name=&quot;dc3c&quot; id=&quot;dc3c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She‚Äôs still up there, orbiting the Earth. Her tape recorder broke a few years after launch, but her solar batteries still work. For many years the tracking station at RAF Lasham used to fire her up unofficially on her ‚Äúbirthday,‚Äù but Lasham closed down twenty years ago now and a planned attempt by University College London to wake her up on her 40th birthday failed. To everyone‚Äôs dismay, it turned out that with Lasham‚Äôs closure her activation codes had been lost and they could not be recreated.&lt;/p&gt;
&lt;p name=&quot;4cf1&quot; id=&quot;4cf1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Prospero, it seems, will never sing again.&lt;/p&gt;
&lt;p name=&quot;9fd8&quot; id=&quot;9fd8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You can, however, &lt;a href=&quot;http://www.n2yo.com/?s=5580&quot; data-href=&quot;http://www.n2yo.com/?s=5580&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;still track her path online&lt;/a&gt;. So next time she passes overhead, look up and give her a little wave.&lt;/p&gt;
&lt;p name=&quot;75e3&quot; id=&quot;75e3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She is a last, lonely piece of Empire, in a Super-powered sky.&lt;/p&gt;
&lt;p name=&quot;e5d9&quot; id=&quot;e5d9&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Like what I write? Then help me do more of it. Back both me and&lt;/em&gt; &lt;a href=&quot;https://www.londonreconnections.com/&quot; data-href=&quot;https://www.londonreconnections.com/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener noopener noopener nofollow noopener nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;London Reconnections&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;, my transport site&lt;/em&gt; &lt;a href=&quot;https://www.patreon.com/lonrec&quot; data-href=&quot;https://www.patreon.com/lonrec&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener nofollow noopener noopener noopener nofollow noopener nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;on Patreon&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;. Every penny helps tell a story.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 30 Jul 2018 16:15:48 +0000</pubDate>
<dc:creator>villaaston1</dc:creator>
<og:title>An Empire of Stars ‚Äì Lapsed Historian ‚Äì Medium</og:title>
<og:url>https://medium.com/lapsed-historian/an-empire-of-stars-d6b24f92cbc7</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*W-DyCGzvWL-vrSPz75DPpQ.jpeg</og:image>
<og:description>How Britain beat the odds to independently achieve space flight, and then abandoned it on the very same day.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/lapsed-historian/an-empire-of-stars-d6b24f92cbc7</dc:identifier>
</item>
<item>
<title>Learning Dexterity</title>
<link>https://blog.openai.com/learning-dexterity/</link>
<guid isPermaLink="true" >https://blog.openai.com/learning-dexterity/</guid>
<description>&lt;div id=&quot;intro&quot;&gt;&lt;p&gt;&lt;strong&gt;We've trained a human-like robot hand to manipulate physical objects with unprecedented dexterity.&lt;/strong&gt; Our system, called Dactyl, is trained entirely in simulation and transfers its knowledge to reality, adapting to real-world physics using techniques we've been working on for the &lt;a href=&quot;https://blog.openai.com/spam-detection-in-the-physical-world/&quot;&gt;past&lt;/a&gt; &lt;a href=&quot;https://blog.openai.com/generalizing-from-simulation/&quot;&gt;year&lt;/a&gt;. Dactyl learns from scratch using the same general-purpose reinforcement learning algorithm and code as &lt;a href=&quot;https://blog.openai.com/openai-five/&quot;&gt;OpenAI Five&lt;/a&gt;. Our &lt;a href=&quot;https://blog.openai.com/learning-dexterity/#results&quot;&gt;results&lt;/a&gt; show that it's possible to train agents in simulation and have them solve real-world tasks, without physically-accurate modeling of the world.&lt;/p&gt;
&lt;div class=&quot;Post-Actions Post-Actions--listicons&quot;&gt;&lt;a href=&quot;https://d4mucfpksywv.cloudfront.net/research-covers/learning-dexterity/learning-dexterity-paper.pdf&quot; class=&quot;Post-Actions--paper&quot;&gt;Read Paper&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://d4mucfpksywv.cloudfront.net/research-covers/learning-dexterity/motion-types-v2.gif&quot;/&gt;&lt;em&gt;Examples of dexterous manipulation behaviors &lt;a href=&quot;https://blog.openai.com/learning-dexterity/#results&quot;&gt;autonomously learned&lt;/a&gt; by Dactyl.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Dactyl is a system for manipulating objects using a &lt;a href=&quot;https://www.shadowrobot.com/products/dexterous-hand/&quot;&gt;Shadow Dexterous Hand&lt;/a&gt;. We place an object such as a block or a prism in the palm of the hand and ask Dactyl to reposition it into a different orientation; for example, rotating the block to put a new face on top. The network observes only the coordinates of the fingertips and the images from three regular RGB cameras.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.openai.com/content/images/2018/07/195A4726-2.jpg&quot; alt=&quot;Dactyl robot hand with a colored block resting on the palm&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Although the first humanoid hands were developed decades ago, using them to manipulate objects effectively has been a long-standing challenge in robotic control. Unlike other problems such as &lt;a href=&quot;https://www.bostondynamics.com/atlas&quot;&gt;locomotion&lt;/a&gt;, progress on dextrous manipulation using traditional robotics approaches has been slow, and &lt;a href=&quot;https://www.youtube.com/playlist?list=PLOXw6I10VTv_CcTXlvHmGbWH-_wUOoRoO&quot;&gt;current techniques&lt;/a&gt; remain limited in their ability to manipulate objects in the real world.&lt;/p&gt;
&lt;p&gt;Reorienting an object in the hand requires the following problems to be solved:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Working in the real world.&lt;/strong&gt; Reinforcement learning has shown many successes in simulations and video games, but has had comparatively limited results in the real world. We test Dactyl on a physical robot.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High-dimensional control.&lt;/strong&gt; The Shadow Dexterous Hand has 24 degrees of freedom compared to 7 for a typical robot arm.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Noisy and partial observations.&lt;/strong&gt; Dactyl works in the physical world and therefore must handle noisy and delayed sensor readings. When a fingertip sensor is occluded by other fingers or by the object, Dactyl has to work with partial information. Many aspects of the physical system like friction and slippage are not directly observable and must be inferred.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manipulating more than one object.&lt;/strong&gt; Dactyl is designed to be flexible enough to reorient multiple kinds of objects. This means that our approach cannot use strategies that are only applicable to a specific object geometry.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dactyl learns to solve the object reorientation task entirely in simulation without any human input. After this training phase, the learned policy works on the real robot without any fine-tuning.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/DKe8FumoD4E&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;&lt;em&gt;Dactyl achieving the &lt;a href=&quot;https://blog.openai.com/learning-dexterity/#results&quot;&gt;tested maximum&lt;/a&gt; of 50 consecutive rotations. Real-time.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Learning methods for robotic manipulation face a dilemma. Simulated robots can easily provide enough data to train complex policies, but most manipulation problems can‚Äôt be modeled accurately enough for those policies to transfer to real robots. Even modeling what happens when two objects touch ‚Äî the most basic problem in manipulation ‚Äî is an &lt;a href=&quot;https://homes.cs.washington.edu/~todorov/papers/TodorovIROS12.pdf&quot;&gt;active area of research&lt;/a&gt; with no widely accepted solution. Training directly on physical robots allows the policy to learn from real-world physics, but today‚Äôs algorithms would require years of experience to solve a problem like object reorientation.&lt;/p&gt;
&lt;p&gt;Our approach, &lt;em&gt;domain randomization&lt;/em&gt;, learns in a simulation which is designed to provide a variety of experiences rather than maximizing realism. This gives us the best of both approaches: by learning in simulation, we can gather more experience quickly by scaling up, and by de-emphasizing realism, we can tackle problems that simulators can only model approximately.&lt;/p&gt;
&lt;p&gt;It's been shown (by &lt;a href=&quot;https://blog.openai.com/generalizing-from-simulation/&quot;&gt;OpenAI&lt;/a&gt; and &lt;a href=&quot;https://arxiv.org/abs/1611.04201&quot;&gt;others&lt;/a&gt;) that domain randomization can work on increasingly complex problems ‚Äî domain randomizations were even &lt;a href=&quot;https://blog.openai.com/openai-five/#exploration&quot;&gt;used to train OpenAI Five&lt;/a&gt;. Here, we wanted to see if scaling up domain randomization could solve a task well beyond the reach of current methods in robotics.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;p&gt;We built a &lt;a href=&quot;https://blog.openai.com/ingredients-for-robotics-research/&quot;&gt;simulated version&lt;/a&gt; of our robotics setup using the &lt;a href=&quot;http://www.mujoco.org/&quot;&gt;MuJoCo&lt;/a&gt; physics engine. This simulation is only a coarse approximation of the real robot:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Measuring physical attributes like friction, damping, and rolling resistance is cumbersome and difficult. They also change over time as the robot experiences wear and tear.&lt;/li&gt;
&lt;li&gt;MuJoCo is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Rigid_body&quot;&gt;rigid body&lt;/a&gt; simulator, which means that it cannot simulate the deformable rubber found at the fingertips of the hand or the stretching of tendons.&lt;/li&gt;
&lt;li&gt;Our robot can only manipulate the object by repeatedly making contact with it. However, contact forces are notoriously difficult to reproduce accurately in simulation.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The simulation can be made more realistic by calibrating its parameters to match robot behavior, but many of these effects simply cannot be modeled accurately in current simulators.&lt;/p&gt;
&lt;p&gt;Instead, we train the policy on a distribution of simulated environments where the physical and visual attributes are chosen randomly. Randomized values are a natural way to represent the uncertainties that we have about the physical system and also prevent overfitting to a single simulated environment. If a policy can accomplish the task across all of the simulated environments, it will more likely be able to accomplish it in the real world.&lt;/p&gt;
&lt;h4 id=&quot;learningtocontrol&quot;&gt;Learning to control&lt;/h4&gt;
&lt;p&gt;By building simulations that support transfer, we have reduced the problem of controlling a robot in the real world to accomplishing a task in simulation, which is a problem well-suited for reinforcement learning. While the task of manipulating an object in a simulated hand is already &lt;a href=&quot;https://blog.openai.com/ingredients-for-robotics-research/&quot;&gt;somewhat difficult&lt;/a&gt;, learning to do so across all combinations of randomized physical parameters is substantially more difficult.&lt;/p&gt;
&lt;p&gt;To generalize across environments, it is helpful for the policy to be able to take different actions in environments with different dynamics. Because most dynamics parameters cannot be inferred from a single observation, we used an &lt;a href=&quot;http://colah.github.io/posts/2015-08-Understanding-LSTMs/#lstm-networks&quot;&gt;LSTM&lt;/a&gt; ‚Äî a type of neural network with memory ‚Äî to make it possible for the network to learn about the dynamics of the environment. The LSTM achieved about twice as many rotations in simulation as a policy without memory.&lt;/p&gt;
&lt;p&gt;Dactyl learns using &lt;a href=&quot;https://blog.openai.com/openai-five/#rapid&quot;&gt;Rapid&lt;/a&gt;, the massively scaled implementation of Proximal Policy Optimization developed to allow OpenAI Five to solve Dota 2. We use a different model architecture, environment, and hyperparameters than OpenAI Five does, but we use the same algorithms and training code. Rapid used 6144 CPU cores and 8 GPUs to train our policy, collecting about one hundred years of experience in 50 hours.&lt;/p&gt;
&lt;p&gt;For development and testing, we validated our control policy against objects with embedded motion tracking sensors to isolate the performance of our control and vision networks.&lt;/p&gt;
&lt;h4 id=&quot;learningtosee&quot;&gt;Learning to see&lt;/h4&gt;
&lt;p&gt;Dactyl was designed to be able to manipulate arbitrary objects, not just those that have been specially modified to support tracking. Therefore, Dactyl uses regular RGB camera images to estimate the position and orientation of the object.&lt;/p&gt;
&lt;p&gt;We train a pose estimator using a convolutional neural network. The neural network takes the video streams from three cameras positioned around the robot hand and outputs the estimated position and orientation of the object. We use multiple cameras to resolve ambiguities and occlusion. We again use domain randomization to train this network only in simulation using the &lt;a href=&quot;https://unity3d.com/&quot;&gt;Unity&lt;/a&gt; game development platform, which can model a wider variety of visual phenomena than Mujoco.&lt;/p&gt;
&lt;p&gt;By combining these two independent networks, the control network that reorients the object given its pose and the vision network that maps images from cameras to the object‚Äôs pose, Dactyl can manipulate an object by seeing it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.openai.com/content/images/2018/07/simulated-camera-grid.png&quot; alt=&quot;simulated-camera-grid&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;CustomCaption&quot;&gt;&lt;em&gt;Example training images used for learning to estimate the pose of the block.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;emergentbehaviors&quot;&gt;Emergent behaviors&lt;/h4&gt;
&lt;p&gt;When deploying our system, we noticed that Dactyl uses a rich set of &lt;a href=&quot;https://www.eng.yale.edu/grablab/pubs/Ma_ICAR2011.pdf&quot;&gt;in-hand dexterous manipulation strategies&lt;/a&gt; to solve the task. These strategies are commonly used by humans as well. However, we do not teach them to our system explicitly; all behaviors are discovered autonomously.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d4mucfpksywv.cloudfront.net/research-covers/learning-dexterity/motion-types-v2.gif&quot;/&gt;&lt;em&gt;Examples of dexterous manipulation behaviors &lt;a href=&quot;https://blog.openai.com/learning-dexterity/#results&quot;&gt;autonomously learned&lt;/a&gt; by Dactyl.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d4mucfpksywv.cloudfront.net/research-covers/learning-dexterity/grasp-types.jpg&quot; alt=&quot;Six different grasp types learned by Dactyl&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;CustomCaption&quot;&gt;&lt;em&gt;Dactyl grasp types according to the &lt;a href=&quot;https://www.is.mpg.de/uploads_file/attachment/attachment/256/grasp_taxonomy.pdf&quot;&gt;GRASP taxonomy&lt;/a&gt;. Top left to bottom right: Tip Pinch, Palmar Pinch, Tripod, Quadpod, Power grasp, and 5-Finger Precision grasp.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We observed that for precision grasps, such as the Tip Pinch grasp, Dactyl uses the thumb and little finger. Humans tend to use the thumb and either the index or middle finger instead. However, the robot hand's little finger is more flexible due to an &lt;a href=&quot;http://www.shadowrobot.com/wp-content/uploads/shadow_dexterous_hand_technical_specification_E1_20130101.pdf&quot;&gt;extra degree of freedom&lt;/a&gt;, which may explain why Dactyl prefers it. This means that Dactyl can rediscover grasps found in humans, but adapt them to better fit the limitations and abilities of its own body.&lt;/p&gt;
&lt;h4 id=&quot;transferperformance&quot;&gt;Transfer performance&lt;/h4&gt;
&lt;p&gt;We tested how many rotations Dactyl could achieve before it dropped the object, timed out, or reached 50 successes. Our policies trained purely in simulation were able to successfully manipulate objects in the real world.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.openai.com/content/images/2018/07/001cageoverview_raw.jpg&quot; alt=&quot;001cageoverview_raw&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;CustomCaption&quot;&gt;&lt;em&gt;Dactyl lab setup with Shadow Dexterous Hand, PhaseSpace motion tracking cameras, and Basler RGB cameras.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For the task of block manipulation, policies trained with randomization could achieve many more rotations than those trained without randomization, as can be seen in the results below. Also, using the control network with pose estimated from vision performs nearly as well as reading the pose directly from motion tracking sensors.&lt;/p&gt;

&lt;h4 id=&quot;learningprogress&quot;&gt;Learning progress&lt;/h4&gt;
&lt;p&gt;The vast majority of training time is spent making the policy robust to different physical dynamics. Learning to rotate an object in simulation without randomizations requires about 3 years of simulated experience, while achieving similar performance in a fully randomized simulation requires about 100 years of experience.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.openai.com/content/images/2018/07/learning-progress-1.svg&quot; alt=&quot;learning-progress-1&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;CustomCaption&quot;&gt;&lt;em&gt;Learning progress with and without randomizations over years of simulated experience.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Tactile sensing is not necessary to manipulate real-world objects.&lt;/strong&gt; Our robot receives only the locations of the five fingertips along with the position and orientation of the cube. Although the robot hand has touch sensors on its fingertips, we didn't need to use them. Generally, we found better performance from using a limited set of sensors that could be modeled effectively in the simulator instead of a rich sensor set with values that were hard to model.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Randomizations developed for one object generalize to others with similar properties.&lt;/strong&gt; After developing our system for the problem of manipulating a block, we printed an octagonal prism, trained a new policy using its shape, and attempted to manipulate it. Somewhat to our surprise, it achieved high performance using only the randomizations we had designed for the block. By contrast, a policy that manipulated a sphere could only achieve a few successes in a row, perhaps because we had not randomized any simulation parameters that model rolling behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;With physical robots, good systems engineering is as important as good algorithms.&lt;/strong&gt; At one point, we noticed that one engineer consistently achieved much better performance than others when running the exact same policy. We later discovered that he had a faster laptop, which hid a timing bug that reduced performance. After the bug was fixed, performance improved for the rest of the team.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also found to our surprise that a number of commonly employed techniques did not improve our results.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Decreasing reaction time did not improve performance.&lt;/strong&gt; Conventional wisdom states that reducing the time between actions should improve performance because the changes between states are smaller and therefore easier to predict. Our current time between actions is 80ms, which is smaller than human reaction time of 150-250ms, but significantly larger than neural network computation time of roughly 25ms. Surprisingly, decreasing time between actions to 40ms required additional training time but did not noticeably improve performance in the real world. It‚Äôs possible that this rule of thumb is less applicable to neural network models than to the linear models that are in common use today.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Using real data to train our vision policies didn‚Äôt make a difference.&lt;/strong&gt; In early experiments, we used a combination of simulated and real data to improve our models. The real data was gathered from trials of our policy against an object with embedded tracking markers. However, real data has significant disadvantages compared to simulated data. Position information from tracking markers has latency and measurement error. Worse, real data is easily invalidated by common configuration changes, making it a hassle to collect enough to be useful. As our methods developed, our simulator-only error improved until it matched our error from using a mixture of simulated and real data. Our final vision models were trained without real data.&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;p&gt;This project completes a full cycle of AI development that OpenAI has been pursuing for the past two years: we've developed &lt;a href=&quot;https://blog.openai.com/openai-baselines-ppo/&quot;&gt;a new learning algorithm&lt;/a&gt;, scaled it massively to solve &lt;a href=&quot;https://blog.openai.com/openai-five/&quot;&gt;hard simulated tasks&lt;/a&gt;, and then applied the resulting system to the real world. Repeating this cycle at &lt;a href=&quot;https://blog.openai.com/ai-and-compute/&quot;&gt;increasing scale&lt;/a&gt; is the primary route we are pursuing to increase the capabilities of today's AI systems towards safe artificial general intelligence. If you'd like to be part of what comes next, &lt;a href=&quot;https://openai.com/jobs/&quot;&gt;we're hiring&lt;/a&gt;!&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;small&gt;Thanks to the following for feedback on drafts of this post: Pieter Abbeel, Tamim Asfour, Marek Cygan, Ken Goldberg, Anna Goldie, Edward Mehr, Azalia Mirhoseini, Lerrel Pinto, Aditya Ramesh, and Ian Rust.&lt;/small&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 30 Jul 2018 16:04:54 +0000</pubDate>
<dc:creator>gdb</dc:creator>
<og:type>article</og:type>
<og:title>Learning Dexterity</og:title>
<og:description>We've trained a human-like robot hand to manipulate physical objects with unprecedented dexterity.</og:description>
<og:url>https://blog.openai.com/learning-dexterity/</og:url>
<og:image>https://blog.openai.com/content/images/2018/07/learning-dexterity-twitter-card-16x9.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.openai.com/learning-dexterity/</dc:identifier>
</item>
<item>
<title>Bank of America questions customer‚Äôs citizenship, freezes accounts</title>
<link>http://www.kctv5.com/story/38753295/bank-of-america-questioning-customers-citizenship-freezing-accounts</link>
<guid isPermaLink="true" >http://www.kctv5.com/story/38753295/bank-of-america-questioning-customers-citizenship-freezing-accounts</guid>
<description>&lt;span id=&quot;WNStoryDateline&quot;&gt;KANSAS CITY, MO (KCTV) -&lt;/span&gt;&lt;p&gt;This is a heads-up for any Bank of America customer: You might be getting questions about your citizenship status and even have your accounts frozen with no warning.&lt;/p&gt;
&lt;p&gt;KCTV5 News heard about this happening when one of our longtime photographers, Josh Collins, told us what happened to him.&lt;/p&gt;
&lt;p&gt;He had received a mailer claiming to be sent by Bank of America that asked for personal information and citizenship information.&lt;/p&gt;
&lt;p&gt;However, he has been a Bank of America customer for 20 years and was born a¬†U.S.¬†citizen, so he figured it could be a scam and that the bank would follow up if it was legitimate.&lt;/p&gt;
&lt;p&gt;The next thing he knew, his accounts were frozen without notice.&lt;/p&gt;
&lt;p&gt;‚ÄúThey only do that to people‚Äôs accounts for people trying to flee the country,‚Äù he said. ‚ÄúWe‚Äôre not criminals. We didn‚Äôt do anything wrong.‚Äù&lt;/p&gt;
&lt;p&gt;When he found out his card was declined and when he called Bank of America to find out why, they told him his account was frozen.&lt;/p&gt;
&lt;p&gt;‚ÄúThe first question is, ‚ÄòOh, we sent you something in the mail a few weeks ago,‚Äô‚Äù he recalled. ‚ÄúI said, ‚ÄòYeah, I remember getting something that didn‚Äôt look real.‚Äô And they‚Äôre like, ‚ÄòOh yeah, we need to know if you‚Äôre a citizen.‚Äô¬†You know, I was born and raised in Kansas like Superman. I said, ‚ÄòHow much more American can you get?‚Äô‚Äù&lt;/p&gt;
&lt;p&gt;The bank representative told Collins he would have access to his accounts the next day,&lt;/p&gt;
&lt;p&gt;‚ÄúSo, we get up in the morning,‚Äù he said. ‚ÄúCard doesn‚Äôt work again. So, my wife -- being the patient one -- calls and they said, ‚ÄòWell, your cards have been lost or stolen.‚Äô‚Äù&lt;/p&gt;
&lt;p&gt;That was not true.&lt;/p&gt;
&lt;p&gt;‚ÄúSo, at that point, we decide to go into the physical bank and it took about 15 minutes, but the first question they asked me was, ‚ÄòAre you a citizen?‚Äô‚Äù he said. ‚ÄúAgain? ‚ÄòYes.‚Äô And then they wanted to know if I had dual citizenship.‚Äù&lt;/p&gt;
&lt;p&gt;They eventually unfroze Collins‚Äô accounts, but not before sending an email notifying him all of his automatic bill payment accounts were wiped out. ¬†&lt;/p&gt;
&lt;p&gt;Collins said the bank explained that, eventually, they would be asking this of all their customers.&lt;/p&gt;
&lt;p&gt;Sure enough, when KCTV5‚Äôs Emily Sinovic logged into her account, there was an alert to update personal information, then a big alert asking her to update her citizenship status, and then a question asking whether she is a dual citizen.&lt;/p&gt;
&lt;p&gt;However, there was no warning about frozen accounts.&lt;/p&gt;
&lt;p&gt;We contacted Bank of America for comment and they sent the following statement:¬†&lt;/p&gt;
&lt;blockquote readability=&quot;19&quot;&gt;
&lt;p&gt;&quot;Like all financial institutions, we‚Äôre required by law to maintain complete and accurate records for¬†all¬†of our customers and may periodically request information, such as country of citizenship and proof of US residency. This is not unique to Bank of America. This type of outreach is nothing new and the information must be up to date. Therefore we periodically reach out to customers, which is what we did in this case.&lt;/p&gt;
&lt;p&gt;Over time, we reach out to¬†all¬†customers to verify their information, not only specific customers. If we don‚Äôt hear from a customer in response to our outreach, as a last resort, we may restrict the account until we can confirm it is in compliance with regulatory requirements.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Later on Friday, they sent the following updated statement:&lt;/p&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;&quot;Updated statement:&lt;/p&gt;
&lt;p&gt;Like all financial institutions, we‚Äôre required by law to maintain complete and accurate records for all of our customers and may periodically request information as required by law and regulation. This is not unique to Bank of America.¬† This type of outreach is nothing new and the information must be up to date. Therefore we periodically reach out to customers, which is what we did in this case.&lt;/p&gt;
&lt;p&gt;Over time, we reach out to all customers to verify their information, not only specific customers. If we don‚Äôt hear from a customer in response to our outreach, as a last resort, we may restrict the account until we can confirm it is in compliance with regulatory requirements.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Copyright 2018 KCTV (Meredith Corp.) All rights reserved.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 30 Jul 2018 15:16:37 +0000</pubDate>
<dc:creator>Fermin</dc:creator>
<og:title>Bank of America questions customer‚Äôs citizenship, freezes accounts</og:title>
<og:type>article</og:type>
<og:url>//www.kctv5.com/story/38753295/bank-of-america-questioning-customers-citizenship-freezing-accounts</og:url>
<og:image>http://kctv.images.worldnow.com/images/17292633_G.jpg?lastEditedDate=20180727154124</og:image>
<og:description>This is a heads-up for any Bank of America customer: You might be getting questions about your citizenship status and even have your accounts frozen with no warning.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.kctv5.com/story/38753295/bank-of-america-questioning-customers-citizenship-freezing-accounts</dc:identifier>
</item>
<item>
<title>L-theanine, a constituent in tea, and its effect on mental state (2008) [pdf]</title>
<link>http://apjcn.nhri.org.tw/server/APJCN/17%20Suppl%201//167.pdf</link>
<guid isPermaLink="true" >http://apjcn.nhri.org.tw/server/APJCN/17%20Suppl%201//167.pdf</guid>
<description>&lt;a href=&quot;http://apjcn.nhri.org.tw/server/APJCN/17%20Suppl%201//167.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Mon, 30 Jul 2018 13:19:17 +0000</pubDate>
<dc:creator>lainon</dc:creator>
<og:title>Bank of America questions customer‚Äôs citizenship, freezes accounts</og:title>
<og:type>article</og:type>
<og:url>//www.kctv5.com/story/38753295/bank-of-america-questioning-customers-citizenship-freezing-accounts</og:url>
<og:image>http://kctv.images.worldnow.com/images/17292633_G.jpg?lastEditedDate=20180727154124</og:image>
<og:description>This is a heads-up for any Bank of America customer: You might be getting questions about your citizenship status and even have your accounts frozen with no warning.</og:description>
<dc:language>en</dc:language>
<dc:format>application/pdf</dc:format>
<dc:identifier>http://apjcn.nhri.org.tw/server/APJCN/17%20Suppl%201//167.pdf</dc:identifier>
</item>
<item>
<title>How F5Bot Slurps All of Reddit</title>
<link>https://intoli.com/blog/f5bot/</link>
<guid isPermaLink="true" >https://intoli.com/blog/f5bot/</guid>
<description>&lt;p&gt;&lt;em&gt;In this guest post, Lewis Van Winkle talks about &lt;a href=&quot;https://f5bot.com&quot;&gt;F5Bot&lt;/a&gt;, a free service that emails you when selected keywords are mentioned on Reddit, Hacker News, or Lobsters. He explains in detail how F5Bot is able to process millions of comments and posts from Reddit every day on a single VPS. You can check out more of Lewis Van Winkle‚Äôs writing at &lt;a href=&quot;https://codeplea.com&quot;&gt;codeplea.com&lt;/a&gt;, and his open source contributions at &lt;a href=&quot;https://github.com/codeplea&quot;&gt;github.com/codeplea&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I run a free service, &lt;a href=&quot;https://f5bot.com&quot;&gt;F5Bot&lt;/a&gt;. The basic premise is that you enter a few keywords to monitor, and it‚Äôll email you whenever those keywords show up on Reddit or Hacker News. I‚Äôm hoping to add a few more sites soon.&lt;/p&gt;
&lt;p&gt;This post is going to be about how I built the service. Specifically, we‚Äôre going to focus on scraping every post and comment from Reddit in real time.&lt;/p&gt;
&lt;p&gt;F5Bot is written in PHP. It‚Äôs programmed in a very boring, straight-forward manner. I‚Äôm not doing anything special, really, but it does manage to scan every Reddit post and comment in real-time. And it does it all on a tiny low-end VPS. Sometimes people are surprised when I tell them this. ‚ÄúReddit has huge volume,‚Äù they say, ‚ÄúReddit runs a room-full of super computers, and they still have downtime like every day! How do you it?‚Äù Well, I‚Äôm going to tell you.&lt;/p&gt;
&lt;p&gt;Reddit gets about 500,000 new posts and 4,000,000 new comments every day. Combined, that‚Äôs about 50/second. The posts don‚Äôt come in at a constant rate, though, so we‚Äôd better be able to handle a few hundred a second. You may think PHP is slow, but it can definitely handle that. I mean how long does it take you to search a few hundred files on your computer? So really, the only key thing here is that we need to write the program in a careful way. We can‚Äôt waste resources, but if we‚Äôre careful, we‚Äôll be able to handle the traffic.&lt;/p&gt;
&lt;p&gt;So let‚Äôs get started!&lt;/p&gt;
&lt;h2 id=&quot;reddit-s-listing-api&quot;&gt;Reddit‚Äôs Listing API&lt;/h2&gt;
&lt;p&gt;Reddit offers a nice JSON API. There‚Äôs some &lt;a href=&quot;https://www.reddit.com/dev/api&quot;&gt;good documentation here&lt;/a&gt;. I‚Äôm pretty sure their site uses it internally to render the HTML pages for visitors. So we‚Äôll just use that to grab the most recent posts. It‚Äôs at &lt;a href=&quot;https://www.reddit.com/r/all/new/.json&quot;&gt;https://www.reddit.com/r/all/new/.json&lt;/a&gt;, and I recommend you open that up in your browser to follow along.&lt;/p&gt;
&lt;p&gt;In PHP we‚Äôll just grab it with a simple &lt;a href=&quot;https://secure.php.net/manual/en/book.curl.php&quot;&gt;curl&lt;/a&gt; and then decode it with &lt;a href=&quot;https://secure.php.net/manual/en/function.json-decode.php&quot;&gt;json_decode()&lt;/a&gt;. (As a side note, I‚Äôm going to completely skip over error handling because it‚Äôs so boring. I mean it‚Äôs the most important part of running an actual real-live server, but it‚Äôs boring so I won‚Äôt talk about it anymore here.)&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, &quot;https://www.reddit.com/r/all/new/.json&quot;);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_USERAGENT, 'testbot2000'); /* Don't forget to name yourself! */
$posts = curl_exec($ch);
curl_close($ch);
$posts = json_decode($posts, true);
print_r($posts);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here‚Äôs an example showing the basic structure of the JSON you‚Äôll get back. I have trimmed it down by leaving only 2 of the 25 posts and by removing most of the key/value pairs (there‚Äôs a lot of them).&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-json&quot;&gt;{
  &quot;kind&quot;: &quot;Listing&quot;,
  &quot;data&quot;: {
    &quot;modhash&quot;: &quot;5b1dwrfbn4a9f8c200824114ecc7110ee2baa4d95dc2c106b9&quot;,
    &quot;dist&quot;: 25,
    &quot;children&quot;: [
      {
        &quot;kind&quot;: &quot;t3&quot;,
        &quot;data&quot;: {
          &quot;approved_at_utc&quot;: null,
          &quot;subreddit&quot;: &quot;Guitar&quot;,
          &quot;selftext&quot;: &quot;I practice my guitar every day.   Most every day, I ...&quot;,
          &quot;user_reports&quot;: [],
          &quot;saved&quot;: false,
          &quot;mod_reason_title&quot;: null,
          &quot;gilded&quot;: 0,
          &quot;clicked&quot;: false,
          &quot;title&quot;: &quot;[DISCUSSION] Thanks to everyone here&quot;,
          &quot;subreddit_name_prefixed&quot;: &quot;r/Guitar&quot;,
          &quot;hidden&quot;: false,
          &quot;id&quot;: &quot;91sed5&quot;,
          /* Many more key/value pairs. */
        }
      },
      {
        &quot;kind&quot;: &quot;t3&quot;,
        &quot;data&quot;: {
          &quot;approved_at_utc&quot;: null,
          &quot;subreddit&quot;: &quot;gpdwin&quot;,
          &quot;selftext&quot;: &quot;What would be the cheapest way to purchase a unit in ...&quot;,
          &quot;user_reports&quot;: [],
          &quot;saved&quot;: false,
          &quot;mod_reason_title&quot;: null,
          &quot;gilded&quot;: 0,
          &quot;clicked&quot;: false,
          &quot;title&quot;: &quot;Looking for advice on buying a WIN 2 in the UK&quot;,
          &quot;subreddit_name_prefixed&quot;: &quot;r/gpdwin&quot;,
          &quot;hidden&quot;: false,
          &quot;id&quot;: &quot;91secm&quot;,
          /* Many more key/value pairs. */
        },
        /* Many more objects. */
      }
    ],
    &quot;after&quot;: &quot;t3_91secm&quot;,
    &quot;before&quot;: null
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Depending on how you have PHP setup, curl may have trouble with the secure HTTPS connection. If that‚Äôs the case you can bypass it with &lt;code&gt;curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now we have all the recent posts in &lt;code&gt;$posts&lt;/code&gt; as a nice clean PHP array. This is going to be a short article, we‚Äôre pretty much done.&lt;/p&gt;
&lt;p&gt;But, wait, how many posts did we get? I only want to my scraper to run every few minutes, so it‚Äôd better be a lot.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;print(&quot;Downloaded &quot; . count($posts['data']['children']) . &quot; posts.\n&quot;);
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;Downloaded 25 posts.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Well, that‚Äôs a bit tedious. I only want to run my scraper every few minutes, not constantly. So we‚Äôd better get at least a minute worth of posts. That‚Äôs 300 posts, let‚Äôs grab 1,000 just to be safe. We can just add a &lt;code&gt;?limit=1000&lt;/code&gt; to the end of the URL.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;...
curl_setopt($ch, CURLOPT_URL, &quot;https://www.reddit.com/r/all/new/.json?limit=1000&quot;);
...
print(&quot;Downloaded &quot; . count($posts['data']['children']) . &quot; posts.\n&quot;);
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;Downloaded 100 posts.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Turns out that Reddit has a limit. It‚Äôll only show you 100 posts at a time.&lt;/p&gt;
&lt;p&gt;There‚Äôs an easy solution though. If you look closely at the &lt;a href=&quot;https://www.reddit.com/r/all/new/.json?limit=100&quot;&gt;JSON&lt;/a&gt; you‚Äôll see that it has an &lt;code&gt;after&lt;/code&gt; field with an ID. The &lt;code&gt;after&lt;/code&gt; field tells us which post id came &lt;em&gt;before&lt;/em&gt; the oldest post here. So we‚Äôre saved, really. We can just call the API again, but ask it for the 100 posts starting at that post id!&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;$after = $posts['data']['after'];
...
curl_setopt($ch, CURLOPT_URL, &quot;https://api.reddit.com/api/info.json?limit=100&amp;amp;id=$after&quot;);
...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This works well up to a point. That point is about 1,000 posts. After that it will either loop back to the beginning and start showing you posts you‚Äôve already seen, or it will just stop returning anything. I‚Äôm not a big fan of that, because if my scraper has a little down time I‚Äôd like it to go back and grab the old posts too, but maybe you‚Äôre not worried about that.&lt;/p&gt;
&lt;p&gt;Now everything I‚Äôve said here about posts is also true of comments. The only difference is that the new ones are at &lt;a href=&quot;https://www.reddit.com/r/all/comments/.json&quot;&gt;https://www.reddit.com/r/all/comments/.json&lt;/a&gt; instead of &lt;a href=&quot;https://www.reddit.com/r/all/new/.json&quot;&gt;https://www.reddit.com/r/all/new/.json&lt;/a&gt;, and they come in much quicker.&lt;/p&gt;
&lt;p&gt;But we‚Äôve got an even bigger problem. Each request takes a few seconds (or much longer if Reddit servers are loaded), and that means we can‚Äôt pull comments as quickly as they‚Äôre coming in. Remember, comments get posted at a rate of 50 per second, and it can be much more during peak traffic.&lt;/p&gt;
&lt;h2 id=&quot;making-multiple-simultaneous-connections&quot;&gt;Making Multiple Simultaneous Connections&lt;/h2&gt;
&lt;p&gt;So we‚Äôll have to make a bunch of connections all at once. PHP makes this easy enough with its &lt;code&gt;curl_multi&lt;/code&gt; functions, but we‚Äôre getting ahead of ourselves. If we‚Äôre just pulling the listings, how do we know the id to start the next request on if the current request hasn‚Äôt finished?&lt;/p&gt;
&lt;p&gt;So each Reddit thing, like a post or comment, has a unique ID. Post IDs start with &lt;code&gt;t3_&lt;/code&gt; and comment IDs start with &lt;code&gt;t1_&lt;/code&gt;. The API is very inconsistent about whether it uses the prefix or not. Some places of the API require the prefix, but some just use the ID with no prefix.&lt;/p&gt;
&lt;p&gt;The IDs themselves are encoded in base 36 - therefore they use the ten digits, 0-9, and the twenty six letters, a-z. In PHP we can use &lt;code&gt;base_convert()&lt;/code&gt; to convert them to decimal and do math with them.&lt;/p&gt;
&lt;p&gt;So here we get the most recent post ID, and convert it to decimal.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, &quot;https://www.reddit.com/r/all/new/.json?limit=1&quot;);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$posts = curl_exec($ch);
curl_close($ch);

$posts = json_decode($posts, true);
$id = $posts['data']['children'][0]['data']['id'];
$id = base_convert($id,36,10);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;From that you can easily do math on &lt;code&gt;$id&lt;/code&gt; and then convert it back to Reddit‚Äôs format with: &lt;code&gt;base_convert($id,10,36)&lt;/code&gt;. It‚Äôs pretty convenient.&lt;/p&gt;
&lt;p&gt;The best part is all the bandwidth you‚Äôre going to save by using base 36 instead of 10! You‚Äôre going to need it too, since almost the entire Reddit API consists of crap you‚Äôll almost certainly never need. I mean do you really want &lt;code&gt;subreddit&lt;/code&gt; name and &lt;code&gt;subreddit_name_prefixed&lt;/code&gt;? They‚Äôre the same, one just has an ‚Äúr/‚Äù in front of it. In fact, take a look at that JSON again: &lt;a href=&quot;https://www.reddit.com/r/all/new/.json&quot;&gt;https://www.reddit.com/r/all/new/.json&lt;/a&gt;. Basically I use the &lt;code&gt;selftext&lt;/code&gt;, &lt;code&gt;subreddit&lt;/code&gt;, &lt;code&gt;permalink&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt;. The other 95% of it is just wasted bandwidth. Actually, over half of the reply is JSON key text. So even if you‚Äôre going to use every value, you‚Äôre spending more bandwidth just on JSON key names than on the actual data. Oh well, I guess it‚Äôs still better than XML.&lt;/p&gt;
&lt;p&gt;Anyway, now we can manipulate Reddit IDs, and it turns out that both comments and posts are assigned IDs more or less serially. They‚Äôre not strictly monotonic in the short term, but they are in the long term. (i.e. a post from an hour ago will have a lower ID than a post right now, but a post from 2 seconds ago may not)&lt;/p&gt;
&lt;p&gt;So we can find where to start each API call by simply subtracting 100 from a starting ID. Using this method we can download a bunch of posts all at once. Here‚Äôs the latest 1,000 posts, downloaded simultaneously. It assumes you‚Äôve already loaded the ID of the latest post into &lt;code&gt;$id&lt;/code&gt; (in decimal).&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;$mh = curl_multi_init();
$curls = array();

for ($i = 0; $i &amp;lt; 10; ++$i) {
  $ch = curl_init();
  $url = &quot;https://www.reddit.com/r/all/new/.json?limit=100&amp;amp;after=t3_&quot; . base_convert($id,10,36);
  print(&quot;$url\n&quot;);
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

  curl_multi_add_handle($mh, $ch);
  $curls[] = $ch;
  $id -= 100;
}

$running = null;
do {
  curl_multi_exec($mh, $running);
} while ($running);

echo &quot;Finished downloading\n&quot;;

foreach ($curls as $ch) {
  $response_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
  $response_time = curl_getinfo($ch, CURLINFO_TOTAL_TIME);
  $posts = curl_multi_getcontent($ch);
  $posts = json_decode($posts, true);

  print(&quot;Response: $response_code, Time: $response_time, Post count: &quot; .
    count($posts['data']['children']) . &quot;, Starting id: &quot; .
    $posts['data']['children'][0]['data']['id'] . &quot;\n&quot;);

  curl_multi_remove_handle($mh, $ch);
}

curl_multi_close($mh);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you try to push that back past about 1,000 posts you‚Äôll just get empty replies. Assuming that you‚Äôre ok with the 1,000 post limit, we‚Äôre done. We‚Äôve got the API totally figured out, scraping is a solved problem, and you‚Äôre ready to finish building your bot.&lt;/p&gt;
&lt;p&gt;Except‚Ä¶ if you look at the post IDs you‚Äôre getting, you‚Äôll find some funny business. Some posts are repeated. That‚Äôs not a big deal, we can ignore them, but also some posts are missing. That‚Äôs a big deal! We aren‚Äôt slurping all of Reddit if we‚Äôre missing posts.&lt;/p&gt;
&lt;p&gt;The missing posts are caused by the IDs not being totally in order. Or maybe it‚Äôs just some other bug. I don‚Äôt know. In any case, there‚Äôs nothing we can do about it here that I know of. We‚Äôll need another solution. The 1,000 post limit was really annoying anyway. And the 1,000 comment limit meant we were going to need to scrape every 10 seconds just to avoid missing anything. That wasn‚Äôt really viable long-term.&lt;/p&gt;

&lt;p&gt;Reddit‚Äôs listing APIs are terrible for trying to see every post and comment. To be fair, they probably weren‚Äôt designed for that. I guess they are just designed to work with their website to render pages. No real human would want to keeping clicking past 1,000 posts.&lt;/p&gt;
&lt;p&gt;So here‚Äôs the approach I ended up using, which worked much better: request each post by its ID. That‚Äôs right, instead of asking for posts in batches of 100, we‚Äôre going to need to ask for each post individually by its post ID. We‚Äôll do the same for comments.&lt;/p&gt;
&lt;p&gt;This has a few huge advantages. First, and most important, we won‚Äôt miss any posts. Second, we won‚Äôt get any post twice. Third, we can go back in time as far as we want. This means we can run our scraper in huge batches every few minutes. If there is downtime, we can go back and get the old posts that we missed. It‚Äôs perfect.&lt;/p&gt;
&lt;p&gt;Here‚Äôs how we do it. We find the starting post ID, and then we get posts individually from &lt;a href=&quot;https://api.reddit.com/api/info.json?id=&quot;&gt;https://api.reddit.com/api/info.json?id=&lt;/a&gt;. We‚Äôll need to add a big list of post IDs to the end of that API URL.&lt;/p&gt;
&lt;p&gt;So here are 2,000 posts, spread out over 20 batches of 100 that we download simultaneously. It assumes you‚Äôve already got the last post ID loaded into &lt;code&gt;$id&lt;/code&gt; base-36.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;print(&quot;Starting id: $id\n&quot;);

$urls = array();
for ($i = 0; $i &amp;lt; 20; ++$i) {
  $ids = array();
  for ($j = 0; $j &amp;lt; 100; ++$j) {
    $ids[] = &quot;t3_&quot; . $id;
    $id = base_convert((base_convert($id,36,10) - 1), 10, 36);
  }
  $urls[] = &quot;https://api.reddit.com/api/info.json?id=&quot; . implode(',', $ids);
}



$mh = curl_multi_init();
$curls = array();

foreach ($urls as $url) {
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_USERAGENT, &quot;This is actually needed!&quot;);
  print(&quot;$url\n&quot;);
  curl_multi_add_handle($mh, $ch);
  $curls[] = $ch;
}

$running = null;
do {
  curl_multi_exec($mh, $running);
} while ($running);

print(&quot;Finished downloading\n&quot;);

foreach ($curls as $ch) {
  $response_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
  $response_time = curl_getinfo($ch, CURLINFO_TOTAL_TIME);
  $posts = json_decode(curl_multi_getcontent($ch), true);

  print(&quot;Response: $response_code, Time: $response_time, Post count: &quot; .
    count($posts['data']['children']) . &quot;, Starting id: &quot; .
    $posts['data']['children'][0]['data']['id'] . &quot;\n&quot;);

  curl_multi_remove_handle($mh, $ch);
}
curl_multi_close($mh);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We‚Äôll end up with some pretty long URLs, such as &lt;a href=&quot;https://api.reddit.com/api/info.json?id=t3_90ytk4,t3_90ytk3,t3_90ytk2,t3_90ytk1,t3_90ytk0,t3_90ytjz,t3_90ytjy,t3_90ytjx,t3_90ytjw,t3_90ytjv,t3_90ytju,t3_90ytjt,t3_90ytjs,t3_90ytjr,t3_90ytjq,t3_90ytjp,t3_90ytjo,t3_90ytjn,t3_90ytjm,t3_90ytjl,t3_90ytjk,t3_90ytjj,t3_90ytji,t3_90ytjh,t3_90ytjg,t3_90ytjf,t3_90ytje,t3_90ytjd,t3_90ytjc,t3_90ytjb,t3_90ytja,t3_90ytj9,t3_90ytj8,t3_90ytj7,t3_90ytj6,t3_90ytj5,t3_90ytj4,t3_90ytj3,t3_90ytj2,t3_90ytj1,t3_90ytj0,t3_90ytiz,t3_90ytiy,t3_90ytix,t3_90ytiw,t3_90ytiv,t3_90ytiu,t3_90ytit,t3_90ytis,t3_90ytir,t3_90ytiq,t3_90ytip,t3_90ytio,t3_90ytin,t3_90ytim,t3_90ytil,t3_90ytik,t3_90ytij,t3_90ytii,t3_90ytih,t3_90ytig,t3_90ytif,t3_90ytie,t3_90ytid,t3_90ytic,t3_90ytib,t3_90ytia,t3_90yti9,t3_90yti8,t3_90yti7,t3_90yti6,t3_90yti5,t3_90yti4,t3_90yti3,t3_90yti2,t3_90yti1,t3_90yti0,t3_90ythz,t3_90ythy,t3_90ythx,t3_90ythw,t3_90ythv,t3_90ythu,t3_90ytht,t3_90yths,t3_90ythr,t3_90ythq,t3_90ythp,t3_90ytho,t3_90ythn,t3_90ythm,t3_90ythl,t3_90ythk,t3_90ythj,t3_90ythi,t3_90ythh,t3_90ythg,t3_90ythf,t3_90ythe,t3_90ythd&quot;&gt;this&lt;/a&gt;, but Reddit doesn‚Äôt seem to mind.&lt;/p&gt;
&lt;p&gt;Also please note that we actually need to set the user-agent for the ‚Äúinfo.json‚Äù API point. Apparently Reddit has blocked PHP/Curl from it. It‚Äôs probably a good idea to set the user-agent for everything; I‚Äôve only omitted it above to shorten the code samples. See &lt;a href=&quot;https://github.com/reddit-archive/reddit/wiki/API&quot;&gt;Reddit‚Äôs API access rules&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;From the above script, you‚Äôll get an output like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-literal&quot;&gt;Finished downloading
Response: 200, Time: 5.735, Post count: 96, Starting id: 90yv0w
Response: 200, Time: 7.36, Post count: 99, Starting id: 90yuy4
Response: 200, Time: 6.532, Post count: 100, Starting id: 90yuvc
Response: 200, Time: 6.547, Post count: 99, Starting id: 90yusk
Response: 200, Time: 7.344, Post count: 99, Starting id: 90yups
Response: 200, Time: 7.25, Post count: 94, Starting id: 90yun0
Response: 200, Time: 6.672, Post count: 83, Starting id: 90yuk8
Response: 200, Time: 7.469, Post count: 97, Starting id: 90yuhg
Response: 200, Time: 6.344, Post count: 91, Starting id: 90yueo
Response: 200, Time: 7.187, Post count: 97, Starting id: 90yubw
Response: 200, Time: 22.734, Post count: 96, Starting id: 90yu94
Response: 200, Time: 7.453, Post count: 93, Starting id: 90yu6c
Response: 200, Time: 7.359, Post count: 99, Starting id: 90yu3k
Response: 200, Time: 7.812, Post count: 100, Starting id: 90yu0s
Response: 200, Time: 7.703, Post count: 100, Starting id: 90yty0
Response: 200, Time: 6.375, Post count: 99, Starting id: 90ytv8
Response: 200, Time: 6.734, Post count: 97, Starting id: 90ytsg
Response: 200, Time: 7.328, Post count: 97, Starting id: 90ytpo
Response: 200, Time: 7.812, Post count: 98, Starting id: 90ytmw
Response: 200, Time: 7.812, Post count: 98, Starting id: 90ytk4
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So even though we asked for posts in batches of 100, many batches are short. There are two reasons for this. First, some posts are going to be in private communities you don‚Äôt have access too. You won‚Äôt be able to see them, there‚Äôs nothing you can do about that. Second, because post IDs aren‚Äôt assigned in perfect order, it could be that some of the missing posts haven‚Äôt been written yet. In that case, we just wait a few seconds and do another request with the missing IDs. Not a big deal.&lt;/p&gt;
&lt;p&gt;By the way, the above code also works perfectly for comments too. The only difference is that comment IDs start with &lt;code&gt;t1_&lt;/code&gt; instead of &lt;code&gt;t3_&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The other issue you may run into when loading comments, is that the API doesn‚Äôt return the title of the post that the comment is attached to. If you need this (F5Bot does) you‚Äôll have to use the &lt;code&gt;parent_id&lt;/code&gt; field to get the parent post‚Äôs ID. Then you‚Äôll need a separate call to load up that post just so you can grab its title. Luckily you can batch a bunch of these calls together into one request.&lt;/p&gt;

&lt;p&gt;After I got it figured out, scraping all of Reddit in real-time wasn‚Äôt that tough. I launched F5Bot and it worked fine for a long time. Eventually, however, I ran into a second problem. Processing the data became the bottle-neck. Remember, I‚Äôm doing this on a tiny VPS. It has a fast connection, but an anemic CPU.&lt;/p&gt;
&lt;p&gt;F5Bot has to search every post and comment for all of the keywords that all of my users have. So it started out as something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;foreach ($new_posts as $post) {
    foreach ($all_keywords as $keyword) {
        if (strpos($post, $keyword) !== FALSE) {
            ... found a relevant post ...
        }
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can imagine, I get more users, more keywords, and eventually I‚Äôm searching each post for thousands of keywords. It gets a bit slow.&lt;/p&gt;
&lt;p&gt;Eventually I converted over to using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm&quot;&gt;Aho-Corasick string searching algorithm&lt;/a&gt;. It‚Äôs really slick. You put your keywords into a tree structure as a pre-processing step. Then you only need to look at each post one time to see which keywords it contains.&lt;/p&gt;
&lt;p&gt;I couldn‚Äôt find an Aho-Corasick implementation in PHP, so I wrote my own. &lt;a href=&quot;https://github.com/codeplea/ahocorasickphp&quot;&gt;It‚Äôs up on Github here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Scraping all of Reddit in real-time doesn‚Äôt require a lot of processing power. You just have to be careful and know how to work around their APIs. If do you implement any of these ideas, please be sure to follow &lt;a href=&quot;https://github.com/reddit-archive/reddit/wiki/API&quot;&gt;Reddit‚Äôs API access rules&lt;/a&gt;. It‚Äôs cool of them to offer a public API.&lt;/p&gt;
&lt;p&gt;I hope you enjoyed the write-up! Special thanks to Intoli and Evan Sangaline for the idea to write this article and for hosting it here.&lt;/p&gt;
&lt;p&gt;If you‚Äôd like to know when people on Reddit or Hacker News are talking about you, your company, or your product, please &lt;a href=&quot;https://f5bot.com&quot;&gt;give F5Bot a try&lt;/a&gt;. It‚Äôs free.&lt;/p&gt;
&lt;p&gt;If you want to read more of my posts you can check out my blog at &lt;a href=&quot;https://codeplea.com&quot;&gt;https://codeplea.com&lt;/a&gt; or &lt;a href=&quot;https://github.com/codeplea/&quot;&gt;follow me on Github&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 30 Jul 2018 12:24:46 +0000</pubDate>
<dc:creator>foob</dc:creator>
<og:title>How F5Bot Slurps All of Reddit</og:title>
<og:description>Lewis Van Winkle, he creator of F5Bot‚Äîa free service that emails you when selected keywords are mention on Reddit, Hacker News, or Lobsters‚Äîexplains in detail how it works, and how it's able to scrape million of Reddit comments per day.</og:description>
<og:type>website</og:type>
<og:url>https://intoli.com/blog/f5bot/</og:url>
<og:image>https://intoli.com/blog/f5bot/img/f5bot-logo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://intoli.com/blog/f5bot/</dc:identifier>
</item>
</channel>
</rss>