<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>It’s time to give Firefox a fresh chance</title>
<link>https://www.theverge.com/2018/4/15/17239548/firefox-chrome-safari-competition</link>
<guid isPermaLink="true" >https://www.theverge.com/2018/4/15/17239548/firefox-chrome-safari-competition</guid>
<description>&lt;p id=&quot;cbxKsG&quot;&gt;Ever since it was first released almost a decade ago, Google’s Chrome browser has been the most consistent piece of technology in my life. I’ve gone through a legion of phones, laptops, and headphones, I’ve jumped around between Android, iOS, Windows Phone, macOS, and Windows, but I’ve rarely had reason to doubt my browser choice. Things have changed in recent times, however, and those changes have been sufficient to make me reconsider. After so many years away, I’m returning to Firefox, in equal measure pushed by Chrome’s downsides as I am pulled by Firefox’s latest upgrades.&lt;/p&gt;
&lt;p id=&quot;a7FBfc&quot;&gt;If a friend were to ask me what the best web browser is, I’d answer “Chrome” in a heartbeat, so don’t mistake this as a screed against Google’s browser. I still see it as the most fully-featured and trouble-free option for exploring the web. It’s just that sometimes there are reasons to not use the absolute best option available. Here are mine.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;drWxVS&quot;&gt;&lt;q&gt;Chrome has outgrown its competition in a way that’s unhealthy&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;aPzpRh&quot;&gt;The thing that woke me up to my over-reliance on Chrome was when Google &lt;a href=&quot;https://netmarketshare.com/browser-market-share.aspx?options=%7B%22filter%22%3A%7B%22%24and%22%3A%5B%7B%22deviceType%22%3A%7B%22%24in%22%3A%5B%22Desktop%2Flaptop%22%5D%7D%7D%5D%7D%2C%22dateLabel%22%3A%22Trend%22%2C%22attributes%22%3A%22share%22%2C%22group%22%3A%22browser%22%2C%22sort%22%3A%7B%22share%22%3A-1%7D%2C%22id%22%3A%22browsersDesktop%22%2C%22dateInterval%22%3A%22Monthly%22%2C%22dateStart%22%3A%222017-04%22%2C%22dateEnd%22%3A%222018-03%22%2C%22segments%22%3A%22-1000%22%7D&quot;&gt;implemented an ad blocker directly into the browser&lt;/a&gt;. I’d usually be delighted to have ad blocking automated away, but the surrounding conversation about Google — an ad company — having sway over which ads are and are not acceptable to present to users convinced me there was a problem. &lt;a href=&quot;https://netmarketshare.com/&quot;&gt;According to NetMarketShare&lt;/a&gt;, Chrome is now used by 60 percent of web users, both on mobile and desktop devices, and Firefox looks respectable with 12 percent of desktops, but is almost a rounding error with only 0.6 percent of mobile devices. Apple’s Safari and Microsoft’s Edge don’t look much better, even though they’re the default option on their respective OS platforms.&lt;/p&gt;
&lt;p id=&quot;s68mea&quot;&gt;Chrome has outgrown its competition in a way that’s unhealthy. My colleague Tom Warren already &lt;a href=&quot;https://www.theverge.com/2018/1/4/16805216/google-chrome-only-sites-internet-explorer-6-web-standards&quot;&gt;detailed the deleterious effects of Chrome’s outsize influence&lt;/a&gt;, with web developers optimizing and coding specifically for Chrome (and Google encouraging the practice), with unhappy connotations of the crummy old days when Internet Explorer was the dominant browser for the web. Chrome came to liberate us from the shackles of IE, but like many revolutionary leaders, too many years in power have corrupted Chrome’s original mission.&lt;/p&gt;
&lt;p id=&quot;MNb9lu&quot;&gt;Before I settled on Firefox as my Escape from Chrometown alternative, I gave Safari a solid couple of months as my primary browser. If I were committed to using only iPhones, iPads, and Macs for the rest of my tech life, I might still be on Safari. Its performance is great on both iOS and macOS — though I’d be lying to you if I were to say I could tell a difference in speed between any of the modern browsers — and it offers a choice of ad blockers among a reasonable selection of browser extensions. The options are nowhere near as varied as Chrome’s extension library, but that’s a non-issue for me since I’ve never been dependent on extensions in the first place.&lt;/p&gt;
&lt;div&gt;
&lt;aside id=&quot;smXAQ1&quot;&gt;&lt;q&gt;Today’s Firefox is a very different beast from the memory hog of a few years ago&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;k7dh8s&quot;&gt;But I’m writing this in Firefox today for a very simple reason: cross-platform compatibility. I recently set up a new Windows laptop, and having to deal with a browser that doesn’t know me or my preferences was just an exercise in frustration. Safari’s nice, and I’m certain it’s good enough to supplant Chrome for Apple device users, but for me it’s a non-starter. I need a browser that knows me as well on a Huawei smartphone or Lenovo ThinkPad as it understands me an on iPhone X.&lt;/p&gt;
&lt;p id=&quot;kamHPd&quot;&gt;Like Chrome and Safari, Firefox has a built-in password manager that saves my logins and passwords as I browse, which I can then protect with a master password. One password, I can remember. Dozens of weird alphanumerical concoctions? That’s where I need the browser to step in and help, and Firefox has been great in that respect. With Safari, I had a couple of occasions where the browser would either forget a password or get confused about where to save it when, for example, I’m logging into more than one Google account. Firefox keeps all this stuff straight and, so far as I can tell, secure. (Security pros will tell you that a dedicated password manager is best, of course.)&lt;/p&gt;
&lt;p id=&quot;82rYa8&quot;&gt;In pondering my browser switch, I did the obvious thing and looked at benchmark comparisons among the most popular browsers, while also reading up on real-world experience with regard to battery life and other less obvious impacts. That piqued my interest in Opera, which has a built-in VPN and, like Firefox, plenty of privacy protection and &lt;a href=&quot;https://blog.mozilla.org/firefox/cross-site-tracking-lets-unpack-that/&quot;&gt;anti-tracking options&lt;/a&gt;. I like the philosophy embodied by Opera, but I don’t like that the Android versions of its browsers serve ads on my lock screen.&lt;/p&gt;
&lt;p id=&quot;pImyoG&quot;&gt;After spending some quality time comparing the actual experience of using Chrome, Safari, and Firefox across a variety of websites, I’m confident in saying browser benchmarks are profoundly uninformative. The truth is that performance differences are not substantial enough to be noticed. If anything, you’re most likely to clash with “only works in Chrome” incompatibilities, but that’s kind of the whole reason for me to avoid Chrome: someone has to keep using the alternatives so as to give them a reason to exist.&lt;/p&gt;
&lt;div class=&quot;c-float-left&quot;&gt;
&lt;aside id=&quot;TO6Cia&quot;&gt;&lt;q&gt;Browsers these days are more similar than they are different&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;qCHINw&quot;&gt;But I’m no martyr sacrificing himself for the common good here. Firefox is a legitimate, high-quality replacement for Chrome. Ever since its &lt;a href=&quot;https://www.theverge.com/2017/11/14/16648886/firefox-quantum-live-now-out-of-beta-how-to-download&quot;&gt;Quantum engine overhaul&lt;/a&gt;, Firefox has been garnering plenty of praise from satisfied users, and though I’m only just starting to get into using it full-time as my main browser, everything I’ve seen has been encouraging. Firefox has certainly grown far beyond slow memory hog that I remember from a few years ago.&lt;/p&gt;
&lt;p id=&quot;s6jrF4&quot;&gt;The main thing I’ve learned from migrating between a few browsers over the past couple of months has been that the design and performance differences between them are smaller than ever before. If you’re like me and want to strip your browser down to a bare address bar and a couple of arrows, you can do that as easily with Chrome, Firefox, Opera, Safari, or any of the other alternatives like Edge and Vivaldi. Your bookmarks can travel with you across operating systems and devices with most browsers. Keyboard shortcuts like Cmd/Ctrl + Shift + T to revive the last-closed browser window are approaching universality. Chrome and Firefox both have a “close tabs to the right [of this one]” option. You can mute individual tabs in both browsers.&lt;/p&gt;
&lt;p id=&quot;xZT8Ne&quot;&gt;Eventually, I may find myself forced to return to Chrome, perhaps by some clever ecosystem integration Google adds or the latest lovely Chromebook (I really think Chromebooks are underrated as basic getting-stuff-done computers). But until that time comes, I’m happy to support Firefox in its efforts to provide a genuine and viable alternative to the browser juggernaut.&lt;/p&gt;
</description>
<pubDate>Sun, 15 Apr 2018 17:10:12 +0000</pubDate>
<dc:creator>Tomte</dc:creator>
<og:description>Because everyone using Chrome for everything is a bad idea</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/349ikDciOWmtZGACdAWZzqt49gY=/0x146:2040x1214/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/10655185/ff12.jpg</og:image>
<og:title>It’s time to give Firefox a fresh chance</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2018/4/15/17239548/firefox-chrome-safari-competition</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2018/4/15/17239548/firefox-chrome-safari-competition</dc:identifier>
</item>
<item>
<title>A dive into the making of a 64K Intro</title>
<link>http://www.ctrl-alt-test.fr/2018/a-dive-into-the-making-of-immersion/</link>
<guid isPermaLink="true" >http://www.ctrl-alt-test.fr/2018/a-dive-into-the-making-of-immersion/</guid>
<description>&lt;p&gt;At last. Last December, we finally finished it. This video here is our last production, a 4 minute animation called &lt;em&gt;“Immersion”&lt;/em&gt;. To be more precise, it’s a capture of what is usually referred to as a &lt;a href=&quot;https://en.wikipedia.org/wiki/64K_intro&quot;&gt;64k intro&lt;/a&gt;. But more on that later.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/27PN1SsXbjM&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Making it took the better part of two years’ free time. It all started during &lt;a href=&quot;http://2015.revision-party.net&quot;&gt;Revision 2015&lt;/a&gt;, a large event that takes place every year in Germany, during the Easter weekend. The both of us were chatting on our few kilometers long walk from the hotel to the party place, our faces battling the brisk morning air and the sleep deprivation. The previous night, the level of the 64kB competition had been high. Really high. The long established Hungarian group &lt;em&gt;Conspiracy&lt;/em&gt; was finally back with a serious &lt;a href=&quot;https://www.youtube.com/watch?v=PaNYOzwlVC8&quot;&gt;bombastic entry&lt;/a&gt;. Our best enemy &lt;em&gt;Approximate&lt;/em&gt; was perfectly on time for its three years release cycle and showing a great deal of &lt;a href=&quot;https://www.youtube.com/watch?v=foYcHp40HTg&quot;&gt;improvement in storytelling&lt;/a&gt;. The prolific &lt;em&gt;Mercury&lt;/em&gt; now had a &lt;a href=&quot;https://www.youtube.com/watch?v=XF4SEVbxUdE&quot;&gt;mature design style&lt;/a&gt;, with a foreshadowing intro title that left no doubt on the showdown.&lt;/p&gt;
&lt;p&gt;That year, coming empty handed, we were not part of the competition, but we sure wanted to get back as soon as possible. Yet, after such a show we were wondering: slick look, great storytelling, great design… how could we get to that level? I couldn’t see what concept that, even perfectly executed, would have been a clear winner over any of those three. Not to mention that our tech was below any of them. And so there we were, throwing ideas on Hohenzollernstraße, when finally one of them stuck. &lt;em&gt;A city rising out of the sea.&lt;/em&gt; That was a concept that, well executed, could maybe stand a chance at competing at the level this subset of that subculture had become. &lt;a href=&quot;http://2016.revision-party.net&quot;&gt;Revision 2016&lt;/a&gt;, get ready, here we come!&lt;/p&gt;
&lt;p&gt;Revision 2016 zoomed past us with a whooshing sound… &lt;a href=&quot;http://2017.revision-party.net&quot;&gt;Revision 2017&lt;/a&gt; it would be then. Alas, we barely made it to this new deadline either. At the party when people asked how it was going, the answer was a witty &lt;em&gt;“It took us a year to make the first half, I’m confident we can make the second half in 24 hours”&lt;/em&gt;. We couldn’t. We did release though, but that second half was rushed, and &lt;a href=&quot;https://www.youtube.com/watch?v=HpAMtE4i8zg&quot;&gt;it showed&lt;/a&gt;. So much so that we didn’t get even close to the podium. But we worked on it, gave it the love we thought it needed, and at last released the final version shown above.&lt;/p&gt;

&lt;p&gt;Demos are digital art creations at the crossroad of short films, music videos and video games. Although they present a non interactive experience, often music driven, like a music video does, they are rendered in real-time like video games are.&lt;/p&gt;
&lt;p&gt;64kB intros, 64k for short, are like demos but with an added arbitrary limitation on the size: &lt;strong&gt;they must fit entirely within a single binary file of no more than 65536 bytes&lt;/strong&gt;. No extra assets, no network, no extra libraries: the usual rule is that it should run on a freshly installed Windows PC with up to date drivers.&lt;/p&gt;
&lt;p&gt;But how big is that exactly? Here are some comparison points.&lt;br/&gt;In a 64kB file, you could store either:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;400ms of wave sound with CD quality, or&lt;/li&gt;
&lt;li&gt;3s of mp3 at 192kbps, or&lt;/li&gt;
&lt;li&gt;A 200×100 RGB .bmp image, or&lt;/li&gt;
&lt;li&gt;A JPEG picture of medium size, medium quality, like this 800×450 screenshot from the intro:&lt;/li&gt;
&lt;/ul&gt;&lt;div id=&quot;attachment_657&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-research-vessel-800x450-64k.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-657&quot; title=&quot;64kB screenshot of H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-research-vessel-800x450-64k.jpg&quot; alt=&quot;64kB screenshot&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-research-vessel-800x450-64k.jpg 800w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-research-vessel-800x450-64k-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-research-vessel-800x450-64k-355x200.jpg 355w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;A 65595 bytes JPEG image, 59 bytes over the 64kB limit. :)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Yes, you’ve read that right: &lt;em&gt;that video embedded at the beginning of this post, fits entirely within a single file that takes no more space than a just a screenshot from the video itself.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When you see these numbers, it seems complicated to fit in the binary all the images and sounds that surely must be necessary. We talked previously about &lt;a href=&quot;http://www.ctrl-alt-test.fr/?p=494&quot;&gt;some of the compromises we make&lt;/a&gt; and &lt;a href=&quot;http://www.ctrl-alt-test.fr/?p=535&quot;&gt;some of the tricks we use&lt;/a&gt; in order to make everything fit within such a small size. But that is not enough.&lt;/p&gt;
&lt;p&gt;In fact, because of these extreme constraints, usual techniques and tools cannot be used. We wrote our own toolchain instead, a task that is an interesting challenge in itself: we create textures, 3D models, animations, camera paths, music, etc. thanks to algorithms, procedural generation and compression. We’ll talk about those very soon.&lt;/p&gt;

&lt;p&gt;Here is an overview of how those 64kB are spent:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Music: 12.4kB&lt;/li&gt;
&lt;li&gt;Meshes: 12.5kB&lt;/li&gt;
&lt;li&gt;Textures: 4.8kB&lt;/li&gt;
&lt;li&gt;Camera data: 1.3kB&lt;/li&gt;
&lt;li&gt;Shaders: 6.2kB, from 5k lines of code&lt;/li&gt;
&lt;li&gt;Engine: 12.9kB, from 20k lines of code&lt;/li&gt;
&lt;li&gt;Intro itself: 12k lines of code&lt;/li&gt;
&lt;li&gt;Time spent: hours, maybe over a thousand of them&lt;/li&gt;
&lt;/ul&gt;&lt;div id=&quot;attachment_651&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-repartition.png&quot;&gt;&lt;img class=&quot;size-full wp-image-651&quot; title=&quot;Repartition of the binary space usage in H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-repartition.png&quot; alt=&quot;Repartition of the binary space usage&quot; width=&quot;600&quot; height=&quot;430&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-repartition.png 600w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-repartition-300x215.png 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-repartition-279x200.png 279w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;This chart shows how the 64kB are used by the different type of content, after compression.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;attachment_647&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-size.png&quot;&gt;&lt;img class=&quot;size-full wp-image-647&quot; title=&quot;Evolution of the binary size for H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-size.png&quot; alt=&quot;Evolution of the binary size&quot; width=&quot;600&quot; height=&quot;399&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-size.png 600w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-Binary-size-300x200.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;This chart shows how the binary size (excluding ~2kB of depacker) evolved until the final release.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Having agreed that the central theme was a submerged city, one of the early questions was: how was this city going to look? Where was it located, why was it submerged, what was its architecture? One simple answer addressed all these points: it could be the legendary lost city of &lt;a href=&quot;https://en.wikipedia.org/wiki/Atlantis&quot;&gt;Atlantis&lt;/a&gt; itself. This would also explain and justify the emergence: by its divine nature (a literal deus ex machina). And thus it was so decided.&lt;/p&gt;
&lt;div id=&quot;attachment_567&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/atlantis-tower-1000x707.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-567&quot; title=&quot;Concept art of Atlantis&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/atlantis-tower-1000x707.jpg&quot; alt=&quot;Concept art of Atlantis&quot; width=&quot;600&quot; height=&quot;424&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/atlantis-tower-1000x707.jpg 1000w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/atlantis-tower-1000x707-300x212.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/atlantis-tower-1000x707-282x200.jpg 282w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;An early concept art for the emerged city. The artworks shown in this article were created by Benoît Molenda.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Two books guided our design decisions: &lt;a href=&quot;https://en.wikipedia.org/wiki/Timaeus_(dialogue)&quot;&gt;&lt;em&gt;Timaeus&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Critias_(dialogue)&quot;&gt;&lt;em&gt;Critias&lt;/em&gt;&lt;/a&gt;, in which Plato describes Atlantis and its fate. In &lt;em&gt;Critias&lt;/em&gt; in particular, he details the structure of the city, its colors, its abundance of the precious orichalcum (which became an essential element in the temple scene), its circular shape, and the main temple dedicated to Poseidon and Cleito. Since Plato apparently based his description on countries he knew, a mix of Greek, Egyptian and Babylonian styles, we decided to stick with these.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_stairs_1000x707.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-594&quot; title=&quot;Concept art of city details&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_stairs_1000x707-300x212.jpg&quot; alt=&quot;Concept art of city details&quot; width=&quot;300&quot; height=&quot;212&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_stairs_1000x707-300x212.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_stairs_1000x707-282x200.jpg 282w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_stairs_1000x707.jpg 1000w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_cliff_1000x707.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-593&quot; title=&quot;Concept art of other city details&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_cliff_1000x707-300x212.jpg&quot; alt=&quot;Concept art of other city details&quot; width=&quot;300&quot; height=&quot;212&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_cliff_1000x707-300x212.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_cliff_1000x707-282x200.jpg 282w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_cliff_1000x707.jpg 1000w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Without proper knowledge of the topic though, creating convincing antique architecture seemed challenging. Instead, we decided to reproduce existing buildings:&lt;/p&gt;
&lt;p&gt;Searching reference material for the Artemision turned out to be an unexpected, enriching experience. Originally, we were only looking for photographs, schemes or maps for reference. But when we learned about the name “&lt;a href=&quot;https://en.wikipedia.org/wiki/John_Turtle_Wood&quot;&gt;John Turtle Wood&lt;/a&gt;”, things took a greater depth. Wood was the very person in charge of the searches and ultimate discovery of the temple location. Hoping that his name would yield better results than merely “Artemision”, we followed up, and we immediately found the book he wrote in 1877, in which he reports not only descriptions and drawings of the temple, but also his eleven years journey to find the lost site, his negotiations with the British Museum to stay funded, his relations with the local workers and the diplomacy involved before randomly digging holes.&lt;/p&gt;
&lt;p&gt;Those books were essential to the design decision but above all, reading them brought us, as individuals, so much value from making this project.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Plan.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-608&quot; title=&quot;Temple of Diana - Plan&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Plan-209x300.jpg&quot; alt=&quot;Temple of Diana - Plan&quot; width=&quot;209&quot; height=&quot;300&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Plan-209x300.jpg 209w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Plan-713x1024.jpg 713w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Plan-139x200.jpg 139w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Plan.jpg 1115w&quot; sizes=&quot;(max-width: 209px) 100vw, 209px&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/artemision-WIP-mesh.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-615&quot; title=&quot;Work in progress Artemision mesh for H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/artemision-WIP-mesh.jpg&quot; alt=&quot;Work in progress Artemision mesh&quot; width=&quot;366&quot; height=&quot;301&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-609&quot; title=&quot;Temple of Diana - Transverse section&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section-300x209.jpg&quot; alt=&quot;Temple of Diana - Transverse section&quot; width=&quot;300&quot; height=&quot;209&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section-300x209.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section-1024x714.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section-286x200.jpg 286w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section.jpg 1600w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Longitudinal-section.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-610&quot; title=&quot;Temple of Diana - Longitudinal section&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Longitudinal-section-300x214.jpg&quot; alt=&quot;Temple of Diana - Longitudinal section&quot; width=&quot;262&quot; height=&quot;211&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And by the way, how is the roof supposed to look like? Some representations, including Wood’s, have a hole in it and some do not; there is apparently some controversy. We decided to go with an open roof model, allowing us to reveal the interior of the temple with a beam of light. The illustrations above show the floor plan and the cross sections, from the book &lt;a href=&quot;https://archive.org/details/discoveriesateph00wood&quot;&gt;&lt;em&gt;Discoveries at Ephesus&lt;/em&gt;&lt;/a&gt;, compared to our work in progress model of the temple.&lt;/p&gt;

&lt;p&gt;We knew from the beginning that the appearance of water would be crucial to this intro. So we spent a lot of time on it, starting with watching reference material to understand the essential elements of underwater look. You might have guessed inspiration from James Cameron’s &lt;a href=&quot;http://www.imdb.com/title/tt0096754/&quot;&gt;&lt;em&gt;The Abyss&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;http://www.imdb.com/title/tt0120338/&quot;&gt;&lt;em&gt;Titanic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.futuremark.com/benchmarks/3dmark11&quot;&gt;3DMark 11&lt;/a&gt;, or Ridley Scott’s &lt;a href=&quot;http://www.imdb.com/title/tt0083658/&quot;&gt;&lt;em&gt;Blade Runner&lt;/em&gt;&lt;/a&gt; for lighting.&lt;/p&gt;
&lt;p&gt;Getting the right look wasn’t about implementing and turning on some epic &lt;em&gt;&lt;strong&gt;MakeBeautifulWater()&lt;/strong&gt;&lt;/em&gt; function. Instead, it was the combination of a series of effects that, when refined, would eventually trick us, the viewer, into accepting the illusion and feeling “This is it, we’re underwater!”. But one mistake, and the deception would collapse; a lesson we learned too late, when comments after the initial release pointed out where the illusion disappeared.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_orange_surface_1000x707.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-599&quot; title=&quot;Concept art of the launch scene&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_orange_surface_1000x707-300x212.jpg&quot; alt=&quot;Concept art of the launch scene&quot; width=&quot;300&quot; height=&quot;212&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_orange_surface_1000x707-300x212.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_orange_surface_1000x707-282x200.jpg 282w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_orange_surface_1000x707.jpg 1000w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_purple_city_1000x707.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-600&quot; title=&quot;Concept art of the underwater scenery&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_purple_city_1000x707-300x212.jpg&quot; alt=&quot;Concept art of the underwater scenery&quot; width=&quot;300&quot; height=&quot;212&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_purple_city_1000x707-300x212.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_purple_city_1000x707-282x200.jpg 282w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H_concept_art_purple_city_1000x707.jpg 1000w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As illustrated above we also explored different non-realistic and sometimes extreme palettes, but we didn’t know how to achieve that look so we kept a classic color scheme in the end.&lt;/p&gt;
&lt;h2&gt;The water surface&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-obelisk-emergence-1600x900.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-636&quot; title=&quot;Obelisk emergence scene in H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-obelisk-emergence-1600x900-1024x576.jpg&quot; alt=&quot;Obelisk emergence scene&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-obelisk-emergence-1600x900-1024x576.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-obelisk-emergence-1600x900-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-obelisk-emergence-1600x900-355x200.jpg 355w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-obelisk-emergence-1600x900.jpg 1600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rendering of the water surface assumes a flat plane reflection. Reflection and refraction are first rendered to separate textures, using cameras on one side and the other of the water plane. In the main pass, the water surface is rendered as a mesh with a material that combines reflection and refraction based on the normal and the view vector. The trick is to offset the texture coordinates based on the water surface normal in screen space. This technique is classic and well documented.&lt;/p&gt;
&lt;p&gt;It works well at a medium scale like during the boat scene, but at a larger scale like in the final emergence scene, the result looks artificial. To make it believable, an artistic trick we used was to apply a Gaussian blur to the intermediate textures. Blurring the refraction texture gives a murky look to the water, and a greater sense of depth. Blurring the reflection texture helps make the sea look more choppy. Moreover, applying more blur in the vertical direction imitates the vertical trails expected from a water surface.&lt;/p&gt;
&lt;div id=&quot;attachment_603&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-temple-1600x900.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-603&quot; title=&quot;Emergence scene&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-temple-1600x900-1024x576.jpg&quot; alt=&quot;Emergence scene&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-temple-1600x900-1024x576.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-temple-1600x900-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-temple-1600x900-355x200.jpg 355w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-temple-1600x900.jpg 1600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;A blurred image of the temple is reflected on the water surface.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The animation is done using simple &lt;a href=&quot;http://developer.download.nvidia.com/books/HTML/gpugems/gpugems_ch01.html&quot;&gt;Gerstner waves&lt;/a&gt; in the vertex shader, adding 8 of them with random directions and amplitude (within a given range). Smaller scale details are done in the fragment shader, including 16 more wave functions. A fake back-scattering effect based on normal and height brightens the tip of the waves, visible in the image above as small turquoise patches. During the launch scene, a few additional effects are added, like this rain drop shader.&lt;/p&gt;

&lt;h2&gt;Volumetric lighting&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;“How to make shafts of light for the submersible?”&lt;/em&gt; was one of the early technical questions. Maybe a translucent billboard with a beautiful shader could work? One day, we started experimenting with naive ray marching through a medium. We observed with delight that even in an early crude rendering test, and despite coder colors and the lack of a decent phase function, the volumetric lighting was immediately convincing. At that point, that initial billboard idea disappeared, never to be heard of ever again.&lt;/p&gt;
&lt;p&gt;With this simple technique, effects we didn’t even dare think of where already baked in. As we added the phase function and played with it, it started to &lt;em&gt;feel&lt;/em&gt; like the real deal. This opened a lot of possibilities from a cinematography point of view. But then there was performance.&lt;/p&gt;
&lt;div id=&quot;attachment_638&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-poseidon-sleeping-1600x900.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-638&quot; title=&quot;Temple scene in H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-poseidon-sleeping-1600x900-1024x576.jpg&quot; alt=&quot;Temple scene&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-poseidon-sleeping-1600x900-1024x576.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-poseidon-sleeping-1600x900-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-poseidon-sleeping-1600x900-355x200.jpg 355w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-poseidon-sleeping-1600x900.jpg 1600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Light shafts give this scene a look inspired by the film Blade Runner.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It was time to turn that prototype into a real effect, so we documented ourselves, read &lt;a href=&quot;https://web.archive.org/web/20151117025338/http://sebastien.hillaire.free.fr/index.php?option=com_content&amp;amp;view=article&amp;amp;id=72&amp;amp;Itemid=106&quot;&gt;Sébastien Hillaire’s tutorial&lt;/a&gt;, his &lt;a href=&quot;https://www.slideshare.net/DICEStudio/physically-based-and-unified-volumetric-rendering-in-frostbite&quot;&gt;DICE presentation&lt;/a&gt;, and other approaches like the &lt;a href=&quot;https://software.intel.com/en-us/articles/ivb-atmospheric-light-scattering&quot;&gt;epipolar coordinates ones&lt;/a&gt;. In the end we settled with a simpler technique close to the one used in &lt;a href=&quot;https://www.guerrilla-games.com/read/taking-killzone-shadow-fall-image-quality-into-the-next-generation-1&quot;&gt;Killzone Shadow Fall&lt;/a&gt; (&lt;a href=&quot;https://www.youtube.com/watch?v=0MilN7jKK9c&quot;&gt;video here&lt;/a&gt;) with a few variations. The effect is done in one full screen shader at half resolution:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;On each pixel, a ray is cast, and its intersections with each light cone are solved analytically.&lt;br/&gt;The math is &lt;a href=&quot;http://lousodrome.net/blog/light/2017/01/03/intersection-of-a-ray-and-a-cone/&quot;&gt;described here&lt;/a&gt; (now guess on what occasion the article was written in the first place ;-) ). In terms of performance, it would probably be more efficient to use a light volume bounding mesh, but for a 64k it sounded simpler to use an analytic approach. Obviously, rays only go as far as the depth in the depth buffer.&lt;/li&gt;
&lt;li&gt;In case the ray intersects, the volume inside the cone is then ray marched.&lt;br/&gt;The number of steps is limited for performance reason, and they are randomly offset to remove banding. This is a typical case of trading banding for noise, visually less questionable.&lt;/li&gt;
&lt;li&gt;At each step, the shadow map corresponding to the light is fetched, and light contribution is accumulated according to a simple &lt;a href=&quot;http://www.oceanopticsbook.info/view/scattering/the_henyeygreenstein_phase_function&quot;&gt;&lt;em&gt;Henyey – Greenstein&lt;/em&gt; phase function&lt;/a&gt;.&lt;br/&gt;Unlike epipolar coordinates based approaches, using this technique it is possible to have heterogeneous medium density, which adds more variety, but we didn’t implement such an effect.&lt;/li&gt;
&lt;li&gt;The resulting image is upsampled using a two passes &lt;a href=&quot;https://computergraphics.stackexchange.com/questions/3652/what-is-bilateral-upsampling&quot;&gt;bilateral&lt;/a&gt; Gaussian filter and added on top of the main render buffer. Unlike Sébastien’s tutorial, we don’t use temporal reprojection; we just use a high enough number of steps to reduce visible artifacts (8 steps in low quality settings, 32 steps in high quality settings).&lt;/li&gt;
&lt;/ol&gt;&lt;div id=&quot;attachment_586&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-throne-1600x900.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-586&quot; title=&quot;Altar scene&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-throne-1600x900-1024x576.jpg&quot; alt=&quot;Altar scene&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-throne-1600x900-1024x576.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-throne-1600x900-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-throne-1600x900-355x200.jpg 355w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-throne-1600x900.jpg 1600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Volumetric lighting makes it possible to give a mood and a distinctive cinematic look that would be difficult otherwise.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Light absorption&lt;/h2&gt;
&lt;p&gt;An immediately recognizable aspect of an underwater image is absorption. As objects get distant, they become less and less visible, their colors fading into the background, until they disappear completely. Similarly, the volume affected by light sources is reduced as light is quickly absorbed by the water medium.&lt;/p&gt;

&lt;p&gt;This effect has great potential for cinematography, and modelling it is simple. It is done with two steps in the shader. A first step applies a simple absorption function to the light intensity when accumulating the lights affecting an object, therefore modifying the light color and intensity when it reaches surfaces. A second step applies the same absorption function to the final color of the object itself, thus modifying the perceived color depending on the distance from the camera.&lt;/p&gt;
&lt;p&gt;The code roughly follows this logic:&lt;/p&gt;
&lt;pre&gt;
&lt;strong&gt;vec3 lightAbsorption = pow(mediumColor, vec3(mediumDensity * lightDistance));&lt;/strong&gt;
&lt;strong&gt;vec3 lightIntensity = distanceAttenuation * lightColor * lightAbsorption;&lt;/strong&gt;

&lt;strong&gt;vec3 surfaceAbsorption = pow(mediumColor, vec3(mediumDensity * surfaceDistance));&lt;/strong&gt;
&lt;strong&gt;vec3 surfaceColor = LightEquation(E, N, material) * lightIntensity * surfaceAbsorption;&lt;/strong&gt;
&lt;/pre&gt;
&lt;div id=&quot;attachment_632&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/absorption-test.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-632&quot; title=&quot;Light absorption test for H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/absorption-test.jpg&quot; alt=&quot;Light absorption test&quot; width=&quot;600&quot; height=&quot;464&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/absorption-test.jpg 1026w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/absorption-test-300x232.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/absorption-test-1024x793.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/absorption-test-258x200.jpg 258w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Test of light absorption in the water medium. Notice how color is affected by the distance from the camera and the distance from the light sources.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Adding vegetation&lt;/h2&gt;
&lt;p&gt;Seaweeds were an element we weren’t certain we could use. When reviewing the typical features of an underwater scenery, they were sitting among the top elements in the wish list, but their implementation seemed risky. Organic elements like that can be difficult to get right, and getting them wrong could break immersion. They would need to have a believable shape, be well integrated in their environment, and they might even require some subsurface scattering shading model.&lt;/p&gt;
&lt;p&gt;One day though, we felt inspired to experiment. Starting from a cube, scaling it, and putting a random number of them on a spiral around an imaginary trunk: from far enough it could pass as a long plant with many small branches. After adding a lot of noise to deform the model it was already starting to look half decent.&lt;/p&gt;
&lt;div id=&quot;attachment_680&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/vegetation-test.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-680&quot; title=&quot;Vegetation early test for H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/vegetation-test-1024x600.jpg&quot; alt=&quot;Vegetation early test&quot; width=&quot;600&quot; height=&quot;352&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/vegetation-test-1024x600.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/vegetation-test-300x176.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/vegetation-test-340x200.jpg 340w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;A test shot with a few sparse plants.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;However as we tried adding those plants to a scene, we realized the performance tanked rapidly with the number of objects. This limited way too much the number of them we could put for the image to look convincing. It turns out our new unoptimized engine was already hitting a first bottleneck. So we implemented a crude ad hoc &lt;a href=&quot;https://fgiesen.wordpress.com/2010/10/17/view-frustum-culling/&quot;&gt;frustum culling&lt;/a&gt; at the last minute (in the final version a proper culling is used :) ), allowing the dense bushes visible in the demo.&lt;/p&gt;
&lt;p&gt;With appropriate density and sizes (patches with normal distribution), and the details taken care of by the dim lighting, it was starting to look interesting. Experimenting more, we tried to animate them: a noise function to modulate the intensity of an imaginary underwater stream, an inverse exponential function to make the plants bend, and a sinus so their tip would swirl in the stream. Doodling some more, we stumbled upon the money shot: &lt;a href=&quot;https://www.youtube.com/watch?v=27PN1SsXbjM&amp;amp;t=1m20s&quot;&gt;the submersible casting a light through the bushes&lt;/a&gt;, drawing shadow patterns on the seafloor as it passed off camera.&lt;/p&gt;
&lt;div id=&quot;attachment_589&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-seaweeds-1600x900.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-589&quot; title=&quot;Underwater vegetation&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-seaweeds-1600x900-1024x576.jpg&quot; alt=&quot;Underwater vegetation&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-seaweeds-1600x900-1024x576.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-seaweeds-1600x900-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-seaweeds-1600x900-355x200.jpg 355w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-seaweeds-1600x900.jpg 1600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;The vegetation casting shadow patterns on the seafloor.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Giving volume with particles&lt;/h2&gt;
&lt;p&gt;Particles are the final subtle touch. Pay close attention to any real underwater footage and you will notice all sorts of suspended matter. Stop paying attention and it disappears. We tuned particles to be barely noticeable, preventing them from getting in the way. Yet they give a sense of volume filled with a tangible medium, and help sell the look.&lt;/p&gt;
&lt;p&gt;The technical side is fairly straightforward: in Immersion, particles are just instanced quads with a translucent material. The rendering order problem due to translucency was simply avoided by setting the position along one axis according to the instance id. By doing so, they are always drawn in the correct order along that axis. The particles volume then just has to be oriented properly for each shot. In fact, in many shots this is not even done at all, since the size of the particles and the darkness of the scene made noticeable artifacts rare enough.&lt;/p&gt;
&lt;div id=&quot;attachment_642&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-viaduct-discovery-1600x900.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-642&quot; title=&quot;Viaduct discovery scene in H - Immersion&quot; src=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-viaduct-discovery-1600x900-1024x576.jpg&quot; alt=&quot;Viaduct discovery scene in&quot; width=&quot;600&quot; height=&quot;337&quot; srcset=&quot;http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-viaduct-discovery-1600x900-1024x576.jpg 1024w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-viaduct-discovery-1600x900-300x168.jpg 300w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-viaduct-discovery-1600x900-355x200.jpg 355w, http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/H-viaduct-discovery-1600x900.jpg 1600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;In this shot, particles provide depth cues and a sense of density as the submersible descends.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;How to fit a high-quality music in around 16kB? This problem is not new, and most 64kB intros written after &lt;a href=&quot;http://www.pouet.net/prod.php?which=1221&quot;&gt;.the .product&lt;/a&gt; in 2000 use the same concepts. The original series of articles is old, but still relevant: &lt;a href=&quot;https://conspiracy.hu/articles/&quot;&gt;The Workings of FR-08’s Sound System&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In short, the idea is that we need the music sheet and a list of instruments. Each instrument is a function generating a sound procedurally (see for example &lt;a href=&quot;https://en.wikipedia.org/wiki/Subtractive_synthesis&quot;&gt;Subtractive synthesis&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Physical_modelling_synthesis&quot;&gt;Physical modelling synthesis&lt;/a&gt;). The music sheet represents the list of notes and effects to apply. It is stored in a format similar to midi, with some changes to reduce the size. During the execution of the program, the music is generated.&lt;/p&gt;
&lt;p&gt;The synth has also a plugin version (&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_Studio_Technology&quot;&gt;VSTi&lt;/a&gt;) that the musician can use from his favorite tool. Once the music is composed, the musician clicks on a button, which will export all the data to a file. We embed the data in the demo.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/MPVNZr_PgUc&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;When the demo is run, it starts a thread to generates the music in a giant buffer. The synth is CPU intensive and is not guaranteed to be real-time. This is why we start the thread before the beginning of the demo, while the textures and other data are generated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dropkickmonk3y&quot;&gt;Daniel Lindholm&lt;/a&gt; composed the music, using the synth 64klang created by Dominik Ries.&lt;/p&gt;

&lt;p&gt;Iteration time is one of the most critical aspects of the workflow when making a demo. In fact, this is true of many creative processes. Iteration time is king. &lt;strong&gt;The faster you can iterate, the more you can experiment, the more variations you can explore, the more you can refine your vision and increase the overall quality.&lt;/strong&gt; So we want to eliminate as much as possible all the obstacles, all the pauses, all the little frictions in the creation process. Ideally, we want to be able to change anything, any time, and see the result immediately, as a continuous feedback while we are still making the change.&lt;/p&gt;
&lt;p&gt;A possible solution, &lt;a href=&quot;http://peisik.untergrund.net/engines/&quot;&gt;used by many demo groups&lt;/a&gt;, is to build an editor and create all the content inside the editor. We didn’t. Our initial approach was to write C++ code and do everything inside Visual C++. Over time, we developed a number of techniques to improve the workflow and reduce iteration time.&lt;/p&gt;
&lt;h2&gt;Hot reload all the data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If there was only one single advice to take away from this article, it would be this:&lt;/strong&gt; make all your data hot reloadable. All of it. Make it so you can detect when the data is changed, load the new data when that happen, and update the state of your program accordingly.&lt;/p&gt;
&lt;p&gt;One by one, we have made all our data hot loadable. The shaders, the camera, the editing, all the curves that depend on time, etc. In practice, we generally have an editor and the demo running on the side. Whenever we modify a file, the changes are immediately visible in the demo.&lt;/p&gt;
&lt;p&gt;In a project as small as a demo this is fairly simple to implement. Our engine keeps track of where the data comes from, and a small function checks regularly if the timestamps of the corresponding files have changed. If they do, it triggers a reload of the corresponding data.&lt;/p&gt;
&lt;p&gt;It might be significantly more involved in a bigger project where such changes are made difficult by complex dependencies and legacy design. But the impact it has on production cannot be overstated, so it is well worth the effort.&lt;/p&gt;
&lt;h2&gt;Tweakable values&lt;/h2&gt;
&lt;p&gt;Reloading data is all well and good, but what about the code itself? This is more complicated and we have approached this problem step by step.&lt;/p&gt;
&lt;p&gt;The first step was a clever trick that allows to change the constant literals. &lt;a href=&quot;https://www.gamedev.net/articles/programming/general-and-gameplay-programming/tweakable-constants-r2731/&quot;&gt;Joel Davis described it in a post&lt;/a&gt;: a short macro that turns a constant into a variable with a piece of code that detects when the source file is modified, and updates the variable accordingly. Obviously in the final binary, this additional code is absent and only the constant is left. The compiler is therefore able to do all optimizations (for example when the constant is set to 0).&lt;/p&gt;
&lt;p&gt;This trick is limited but it is really simple and can be integrated in the code in a matter of minutes. Moreover, although it is only meant to tweak constants, it can still be used for debugging purposes to modify a code path or toggle features with conditions like &lt;em&gt;&lt;strong&gt;if(_TV(1))&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;C++ recompilation&lt;/h2&gt;
&lt;p&gt;Finally our most recent update in our quest to make the code more malleable has been the inclusion of the tool &lt;a href=&quot;https://github.com/RuntimeCompiledCPlusPlus/RuntimeCompiledCPlusPlus&quot;&gt;&lt;em&gt;Runtime Compiled C++&lt;/em&gt;&lt;/a&gt; in our codebase. By compiling the code as a dynamic library and loading it, as well as doing a bit of serialization juggling, it allows to make changes to that code and see the result at runtime, without restarting the program or, in this case, the demo.&lt;/p&gt;
&lt;p&gt;This is not perfect yet: the API is intrusive and constrains the design (classes have to derive from an interface), and compiling and reloading the code still take a few seconds. Yet the ability to make changes to the code logic inside the demo and see the result in situation enables a great deal of creativity. At the moment only our texture and mesh generators benefit from it, but in the future we want to extend it to the entirety of the “content” code.&lt;/p&gt;

&lt;p&gt;Here ends the first part of what will be a series of articles on the techniques used in H – Immersion. We’d like to thank &lt;a href=&quot;https://twitter.com/Atrix256&quot;&gt;Alan Wolfe&lt;/a&gt; for proof reading; you can check his many &lt;a href=&quot;https://blog.demofox.org/&quot;&gt;technical articles on his blog&lt;/a&gt;. In the next parts we will present in more details how the textures and the meshes are created.&lt;/p&gt;
&lt;p&gt;Until then, feel free to ask any question or share your own experience.&lt;/p&gt;
</description>
<pubDate>Sun, 15 Apr 2018 13:41:20 +0000</pubDate>
<dc:creator>kemenaran</dc:creator>
<og:type>article</og:type>
<og:title>A dive into the making of Immersion - Ctrl-Alt-Test</og:title>
<og:description>At last. Last December, we finally finished it. This video here is our last production, a 4 minute animation called “Immersion”. To be more precise, it’s a capture of what is usually referred to as a 64k intro. But more … Continue reading →</og:description>
<og:url>http://www.ctrl-alt-test.fr/2018/a-dive-into-the-making-of-immersion/</og:url>
<og:image>http://www.ctrl-alt-test.fr/wp-content/uploads/2018/12/Temple-of-Diana-Transverse-section.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.ctrl-alt-test.fr/2018/a-dive-into-the-making-of-immersion/</dc:identifier>
</item>
<item>
<title>Vipassana for Hackers [pdf]</title>
<link>https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf</link>
<guid isPermaLink="true" >https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://assets-cdn.github.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; href=&quot;https://assets-cdn.github.com/assets/frameworks-592c4aa40e940d1b0607a3cf272916ff.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; href=&quot;https://assets-cdn.github.com/assets/github-96ebb1551fc5dba84c6d2a0fa7b1cfcf.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; href=&quot;https://assets-cdn.github.com/assets/site-348211d27070b0d7bb5d31b1ac3d265b.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;vipassana-for-hackers/vipassana-for-hackers.pdf at master · deobald/vipassana-for-hackers · GitHub&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;GitHub is where people build software. More than 27 million people use GitHub to discover, fork, and contribute to over 80 million projects.&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://avatars2.githubusercontent.com/u/20282?s=400&amp;amp;v=4&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;deobald/vipassana-for-hackers&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/deobald/vipassana-for-hackers&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;vipassana-for-hackers - A document version of my &amp;quot;Vipassana for Hackers&amp;quot; talk&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://assets-cdn.github.com/&quot;/&gt;&lt;meta name=&quot;pjax-timeout&quot; content=&quot;1000&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;EA65:3B2B:3058BD1:5C9132E:5AD3E7D8&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_source&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;google-analytics&quot; content=&quot;UA-3769691-2&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-request_id&quot; content=&quot;EA65:3B2B:3058BD1:5C9132E:5AD3E7D8&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-region_edge&quot; content=&quot;iad&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-region_render&quot; content=&quot;iad&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;/blob/show&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta class=&quot;js-ga-set&quot; name=&quot;dimension1&quot; content=&quot;Logged Out&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;js-proxy-site-detection-payload&quot; content=&quot;YzQ0YjUxNTlhMzhmZjcxZWU5MDc1YzJmNjBkMGViOWM4YmFlMDFkMTQwMDUyMWYzYTg0NzA1OTQ5MWRiZmI0Y3x7InJlbW90ZV9hZGRyZXNzIjoiNzIuMjAxLjU3LjI2IiwicmVxdWVzdF9pZCI6IkVBNjU6M0IyQjozMDU4QkQxOjVDOTEzMkU6NUFEM0U3RDgiLCJ0aW1lc3RhbXAiOjE1MjM4MzY4ODgsImhvc3QiOiJnaXRodWIuY29tIn0=&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_INSIGHTS,MARKETPLACE_SELF_SERVE,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;2f16152420f0b4709f607b175567854c7eed444a&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;402da7acb22ff2e9e7f63736b021d40d&quot;/&gt;&lt;link href=&quot;https://github.com/deobald/vipassana-for-hackers/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to vipassana-for-hackers:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;vipassana-for-hackers - A document version of my &amp;quot;Vipassana for Hackers&amp;quot; talk&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/deobald/vipassana-for-hackers git https://github.com/deobald/vipassana-for-hackers.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;20282&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;deobald&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;106292821&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;deobald/vipassana-for-hackers&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;106292821&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;deobald/vipassana-for-hackers&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot; content=&quot;false&quot;/&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://assets-cdn.github.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; class=&quot;js-site-favicon&quot; href=&quot;https://assets-cdn.github.com/favicon.ico&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;meta name=&quot;u2f-support&quot; content=&quot;true&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;3&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-blob&quot; id=&quot;readabilityBody&quot; readability=&quot;48.274223034735&quot;&gt;



&lt;div role=&quot;main&quot; class=&quot;application-main&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
&lt;div id=&quot;js-repo-pjax-container&quot; data-pjax-container=&quot;&quot;&gt;

&lt;div class=&quot;container new-discussion-timeline experiment-repo-nav&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;&lt;a class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot; href=&quot;https://github.com/deobald/vipassana-for-hackers/blob/a4af6f810fd3135d3b4775bb9d92bb0f3a5e79ea/vipassana-for-hackers.pdf&quot;&gt;Permalink&lt;/a&gt; 

&lt;p&gt;Fetching contributors…&lt;/p&gt;
&lt;div class=&quot;commit-tease-contributors&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;loader-loading float-left&quot; src=&quot;https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif&quot; width=&quot;16&quot; height=&quot;16&quot;/&gt;&lt;span class=&quot;loader-error&quot;&gt;Cannot retrieve contributors at this time&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;file&quot;&gt;

&lt;div itemprop=&quot;text&quot; class=&quot;blob-wrapper data type-text&quot;&gt;
&lt;div class=&quot;render-wrapper&quot; readability=&quot;7.6291390728477&quot;&gt;
&lt;div class=&quot;render-container is-render-pending js-render-target&quot; data-identity=&quot;fecc9a72-ee48-40a6-862a-37f7e285751f&quot; data-host=&quot;https://render.githubusercontent.com&quot; data-type=&quot;pdf&quot; readability=&quot;11.920529801325&quot;&gt;&lt;img class=&quot;octospinner&quot; alt=&quot;&quot; src=&quot;https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif&quot; width=&quot;64&quot; height=&quot;64&quot;/&gt;&lt;div class=&quot;render-viewer-error&quot; readability=&quot;6.4444444444444&quot;&gt;Sorry, something went wrong. &lt;a href=&quot;https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf&quot;&gt;Reload?&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Sorry, we cannot display this file.&lt;/p&gt;
&lt;p&gt;Sorry, this file is invalid so it cannot be displayed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;button type=&quot;button&quot; data-facebox=&quot;#jump-to-line&quot; data-facebox-class=&quot;linejump&quot; data-hotkey=&quot;l&quot; class=&quot;d-none&quot;&gt;Jump to Line&lt;/button&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can't perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none&quot;&gt;&lt;span class=&quot;signed-in-tab-flash&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;signed-out-tab-flash&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;


&lt;p&gt;Press h to open a hovercard with more details.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Sun, 15 Apr 2018 10:03:43 +0000</pubDate>
<dc:creator>hargup</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/20282?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>deobald/vipassana-for-hackers</og:title>
<og:url>https://github.com/deobald/vipassana-for-hackers</og:url>
<og:description>vipassana-for-hackers - A document version of my &quot;Vipassana for Hackers&quot; talk</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/deobald/vipassana-for-hackers/blob/master/vipassana-for-hackers.pdf</dc:identifier>
</item>
<item>
<title>H&amp;R Block and Intuit Lobbying Against Simpler Tax Filing (2017)</title>
<link>https://www.propublica.org/article/filing-taxes-could-be-free-simple-hr-block-intuit-lobbying-against-it#</link>
<guid isPermaLink="true" >https://www.propublica.org/article/filing-taxes-could-be-free-simple-hr-block-intuit-lobbying-against-it#</guid>
<description>&lt;p&gt;Here’s how preparing your taxes could work: You sit down, review a prefilled filing from the government. If it’s accurate, you sign it. If it’s not, you fix it or ignore it altogether and prepare your return yourself. It’s your choice. You might not have to pay for an accountant, or fiddle for hours with complex software. It could all be over in minutes.&lt;/p&gt;
&lt;p&gt;It’s already like that in parts of Europe. And it would not be particularly difficult to give U.S. taxpayers the same option. After all, the government already gets earnings information from employers.&lt;/p&gt;
&lt;p&gt;But as ProPublica has detailed &lt;a href=&quot;https://www.propublica.org/article/how-the-maker-of-turbotax-fought-free-simple-tax-filing&quot;&gt;again&lt;/a&gt; and &lt;a href=&quot;https://www.propublica.org/article/turbotax-maker-linked-to-grassroots-campaign-against-free-simple-tax-filing&quot;&gt;again&lt;/a&gt;, Intuit — the makers of TurboTax — and H&amp;amp;R Block have lobbied for years to derail any move toward such a system. And they continued in 2016.&lt;/p&gt;
&lt;p&gt;Intuit spent &lt;a href=&quot;https://www.opensecrets.org/lobby/clientsum.php?id=D000026667&quot;&gt;more than $2 million&lt;/a&gt; lobbying last year, much of it spent on legislation that would permanently bar the government from offering taxpayers prefilled returns. H&amp;amp;R Block &lt;a href=&quot;https://www.opensecrets.org/orgs/lobby.php?id=D000022016&quot;&gt;spent $3 million&lt;/a&gt;, also directing some of their efforts towards the bill. Among the 60 co-sponsors of the bipartisan bill: then congressman and now Health and Human Services Secretary Tom Price.&lt;/p&gt;
&lt;p&gt;The bill, called the Free File Act of 2016, looks on the surface to be consumer-friendly. It makes permanent a public-private partnership in which 13 private tax preparation companies — called the “Free File Alliance” — have offered free online tax filings to lower- and middle-income families. The Free File Alliance include both Intuit and H&amp;amp;R Block.&lt;/p&gt;
&lt;p&gt;But the legislation would also permanently bar the IRS from offering its own free alternative.&lt;/p&gt;
&lt;p&gt;Intuit has repeatedly warned investors about the prospect of government-prepared returns. “We anticipate that governmental encroachment at both the federal and state levels may present a continued competitive threat to our business for the foreseeable future,” Intuit &lt;a href=&quot;http://d18rn0p25nwr6d.cloudfront.net/CIK-0000896878/3951ce1d-50d0-40fb-af50-f3d51d410b6e.pdf&quot;&gt;said in its latest corporate filings&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sen. Elizabeth Warren, D-Mass., offered a bill last year that would have actually allowed the government to start offering prefill tax returns. While Intuit did not lobby against Warren’s bill — presumably because the legislation had little chance of success — tax giant H&amp;amp;R Block &lt;a href=&quot;https://www.opensecrets.org/orgs/lobby.php?id=D000022016&quot;&gt;did&lt;/a&gt;. (H&amp;amp;R Block did not respond to a request for comment.)&lt;/p&gt;
&lt;p&gt;Neither Warren’s bill nor the Free File Act made it out of committee.&lt;/p&gt;
&lt;p&gt;Very few of those eligible for the industry’s no-charge filing program actually use it, perhaps because the system is confusing and pushes people toward paid products.&lt;/p&gt;
&lt;p&gt;While the Free File Alliance says 70 percent of U.S. taxpayers can use the service, less than 2 percent of all individual tax returns were filed through the program in last year, &lt;a href=&quot;https://taxpayeradvocate.irs.gov/Media/Default/Documents/2016-ARC/ARC16_Volume1.pdf&quot;&gt;according to&lt;/a&gt; a National Taxpayer Advocate’s report to Congress.&lt;/p&gt;
&lt;p&gt;“Let’s call the so-called Free File Alliance what it really is — a front for tax prep companies who use it as a gateway to sell expensive products no one would even need if we’d just made it easier for people to pay their taxes,” said Warren in a statement to ProPublica. Warren’s office put out a &lt;a href=&quot;https://www.warren.senate.gov/files/documents/Tax_Maze_Report.pdf&quot;&gt;report&lt;/a&gt; on the issue last year that repeatedly cited our coverage.&lt;/p&gt;
&lt;p&gt;In an emailed statement the Free File Alliance’s executive director, Tim Hugo, said that the alliance does not automatically push paid products to those that use the Free File program but the taxpayer does “have the option of ‘opting in’ to receive additional information and offers from the tax preparation company they have selected.”&lt;/p&gt;
&lt;p&gt;He said that the lack of awareness of the program is “unfortunate,” and placed blame on the IRS. While the tax agency previously had a large budget to advertise the Free File program, “today that budget is $0, making it difficult to reach the general public,” he said.&lt;/p&gt;
&lt;p&gt;In response to Warren’s bill, the Free File Alliance &lt;a href=&quot;https://www.freefilealliance.org/news/press-releases/free-file-program-tax-filing-simplification-act-would-create-a-conflict-of-interest-end-a-free-program-that-s-working-for-taxpayers/&quot;&gt;warned in press release&lt;/a&gt; that allowing the IRS to prep returns would create “a tremendous and potentially harmful conflict of interest for the American people by enshrining the roles of tax preparer, tax collector, tax auditor and tax enforcer in one entity.”&lt;/p&gt;
&lt;p&gt;Hugo is also a state legislator in Virginia, which canceled its own cost-free system of tax filing in 2010 and replaced it with a &lt;a href=&quot;http://leg1.state.va.us/cgi-bin/legp504.exe?101+ful+HB1349&quot;&gt;“Free File” bill&lt;/a&gt; connecting taxpayers to private companies. Hugo serves on the committee that greenlighted the legislation. Hugo said he saw no conflict of interest here, as the Free File program he represents is federal, not state, and he recused himself from voting in the committee and on the floor.&lt;/p&gt;
&lt;p&gt;Joseph Bankman, a law professor in tax law at Stanford Law School said arguments about government overreach are false. Participation is voluntary and actually gives taxpayers the upper hand, forcing the government to “show its hand.”&lt;/p&gt;
&lt;p&gt;“Now you know what the government knows,” Bankman said, who added that there are multiple ways taxpayers could benefit. “If there’s a mistake that goes in your favor, maybe you don’t call attention to it.” Also, everyone would receive the returns — including the millions of Americans who are due tax refunds but don’t get them because they don’t file. In 2012 alone, &lt;a href=&quot;https://www.irs.gov/uac/newsroom/irs-has-refunds-totaling-950-million-dollars-for-people-who-have-not-filed-a-2012-federal-income-tax-return&quot;&gt;the IRS said&lt;/a&gt; more than 1 million Americans did not receive their refunds — amounting to $950 million — because they did not file.&lt;/p&gt;
&lt;p&gt;The authors of the federal Free File bill have repeatedly voiced fears of big-government interference.&lt;/p&gt;
&lt;div class=&quot;callout&quot; readability=&quot;7.1936758893281&quot;&gt;

&lt;p&gt;Intuit, producer of the top-selling tax software, has opposed letting the government do your taxes for free — even though it could save time and headaches for millions of filers. &lt;a href=&quot;https://www.propublica.org/article/how-the-maker-of-turbotax-fought-free-simple-tax-filing&quot;&gt;Read the story.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In an opinion piece for The Daily Caller and &lt;a href=&quot;https://roskam.house.gov/media-center/speeches/its-time-to-codify-the-free-file-program&quot;&gt;on his site&lt;/a&gt;, Rep. Peter Roskam, R-Ill., said “making the tax collector also the tax preparer creates an inherent conflict of interest while forcing citizens to relinquish control of their taxes to the government.”&lt;/p&gt;
&lt;p&gt;Since the 2008 election cycle, Roskam &lt;a href=&quot;http://maplight.org/us-congress/contributions?s=1&amp;amp;politician=689&amp;amp;office_party=Senate%2CHouse%2CDemocrat%2CRepublican%2CIndependent&amp;amp;election=2008%2C2010%2C2012%2C2014%2C2016&amp;amp;string=intuit&amp;amp;business_sector=any&amp;amp;business_industry=any&amp;amp;source=All&quot;&gt;has taken in&lt;/a&gt; more than $32,000 in donations from Intuit’s political action committee and Intuit employees. &lt;a href=&quot;http://maplight.org/us-congress/contributions?s=1&amp;amp;politician=689&amp;amp;office_party=Senate%2CHouse%2CDemocrat%2CRepublican%2CIndependent&amp;amp;election=2008%2C2010%2C2012%2C2014%2C2016&amp;amp;string=H%26R%20Block&amp;amp;business_sector=any&amp;amp;business_industry=any&amp;amp;source=All&quot;&gt;He received&lt;/a&gt; a far smaller amount, $2,500, from H&amp;amp;R Block — all for the 2016 election cycle. Roskam’s office did not return a request for comment.&lt;/p&gt;
&lt;p&gt;HHS Secretary Price &lt;a href=&quot;http://maplight.org/us-congress/contributions?s=1&amp;amp;politician=632&amp;amp;office_party=Senate%2CHouse%2CDemocrat%2CRepublican%2CIndependent&amp;amp;election=2008%2C2010%2C2012%2C2014%2C2016&amp;amp;string=intuit&amp;amp;business_sector=any&amp;amp;business_industry=any&amp;amp;source=All&quot;&gt;received only modest donations&lt;/a&gt; from Intuit, $3,500 since 2008 — $2,500 of which came six days after the Free File Act of 2016 was announced. &lt;a href=&quot;http://maplight.org/us-congress/contributions?s=1&amp;amp;politician=632&amp;amp;office_party=Senate%2CHouse%2CDemocrat%2CRepublican%2CIndependent&amp;amp;election=2008%2C2010%2C2012%2C2014%2C2016&amp;amp;string=H%26R%20Block&amp;amp;business_sector=any&amp;amp;business_industry=any&amp;amp;source=All&quot;&gt;He received&lt;/a&gt; $2,000 total from H&amp;amp;R Block. (Price’s office did not respond to a request for comment.)&lt;/p&gt;
&lt;p&gt;The bill’s Democrat co-author, Ron Kind, from Wisconsin, &lt;a href=&quot;http://maplight.org/us-congress/contributions?s=1&amp;amp;politician=319&amp;amp;office_party=Senate%2CHouse%2CDemocrat%2CRepublican%2CIndependent&amp;amp;election=2002%2C2004%2C2006%2C2008%2C2010%2C2012%2C2014%2C2016&amp;amp;string=intuit&amp;amp;business_sector=any&amp;amp;business_industry=a&quot;&gt;has taken in&lt;/a&gt; more than $29,000 from Intuit and its employees since 2008. &lt;a href=&quot;http://maplight.org/us-congress/contributions?s=1&amp;amp;politician=319&amp;amp;office_party=Senate%2CHouse%2CDemocrat%2CRepublican%2CIndependent&amp;amp;election=2008%2C2010%2C2012%2C2014%2C2016&amp;amp;string=H%26R%20Block&amp;amp;business_sector=any&amp;amp;business_industry=any&amp;amp;source=All&quot;&gt;He received&lt;/a&gt; $3,000 from H&amp;amp;R Block.&lt;/p&gt;
&lt;p&gt;In a statement, Kind said he is “open to working with anyone” to find ways for “hardworking Wisconsin families” to file their taxes with ease. “At the same time, I want to make sure that Wisconsinites can access programs, like Free File, that they have come to depend on.”&lt;/p&gt;
&lt;p&gt;When asked for details on how many Wisconsinites actually rely on the program, given that few of those who qualify for it actually use it, a spokesperson for Kind did not respond.&lt;/p&gt;
</description>
<pubDate>Sun, 15 Apr 2018 05:55:12 +0000</pubDate>
<dc:creator>bajsejohannes</dc:creator>
<og:type>website</og:type>
<og:url>https://www.propublica.org/article/filing-taxes-could-be-free-simple-hr-block-intuit-lobbying-against-it</og:url>
<og:title>Filing Taxes Could Be Free and Simple. But H&amp;R Block and Intuit Are Still Lobbying Against It. — ProPublica</og:title>
<og:description>The makers of TurboTax and other online systems spent millions lobbying last year, much of it directed toward a bill that would permanently bar the government from offering taxpayers prefilled filings.</og:description>
<og:image>https://assets.propublica.org/legacy/images/ngen/gypsy_og_image/20170320-tax-filing-1200x630.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.propublica.org/article/filing-taxes-could-be-free-simple-hr-block-intuit-lobbying-against-it</dc:identifier>
</item>
<item>
<title>Jupyter, Mathematica, and the Future of the Research Paper</title>
<link>https://paulromer.net/jupyter-mathematica-and-the-future-of-the-research-paper/</link>
<guid isPermaLink="true" >https://paulromer.net/jupyter-mathematica-and-the-future-of-the-research-paper/</guid>
<description>&lt;p&gt;The Atlantic has a great &lt;a href=&quot;https://www.theatlantic.com/science/archive/2018/04/the-scientific-paper-is-obsolete/556676/&quot;&gt;article&lt;/a&gt; on new ways to share research results. Its three parts make three points:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A graphical user interface (GUI) can facilitate better technical writing.&lt;/li&gt;
&lt;li&gt;Wolfram’s proprietary notebook showcased innovative technology, but decades after its introduction, still has few users.&lt;/li&gt;
&lt;li&gt;Jupyter is a new open-source alternative that is well on the way to becoming a standard for exchanging research results.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Each is spot on. I had to learn the hard way why so many kept their distance from Mathematica. Now, I’m much more productive with Jupyter. I’m experimenting with, and excited about, its potential as a way to write up research results.&lt;/p&gt;
&lt;h2&gt;The open question&lt;/h2&gt;
&lt;p&gt;The article asks why Jupyter succeed where Mathematica failed. The obvious contrast is between the proprietary world of Wolfram and the open-source model of the software ecosystem that Jupyter mobilizes.&lt;/p&gt;
&lt;p&gt;The Mathematica developers claim that the hierarchy afforded by the proprietary model is a better way to organize innovation. To their credit, Mathematica did open up a huge technical lead in the 1990s. (Pay no attention to the preposterous suggestion that it is still the technological leader.) There are, of course, many offsetting examples of visionaries who succeeded by mobilizing an open-source community. Still, Mathematica’s early lead offers some support for the claim that from the perspective of software engineering, the proprietary model may sometimes have its advantages.&lt;/p&gt;
&lt;h2&gt;The difference that matters&lt;/h2&gt;
&lt;p&gt;This technical engineering dimension is not the only one we should use to compare the proprietary and open models. There is an independent social dimension, where the metrics assess the interactions between people. Does it increase trust? Does it increase the importance that people attach to a reputation for integrity?&lt;/p&gt;
&lt;p&gt;It is along this social dimension that open source unambiguously dominates the proprietary model. Moreover, at a time when trust and truth are in retreat, the social dimension is the one that matters.&lt;/p&gt;
&lt;p&gt;Jupyter rewards transparency; Mathematica rationalizes secrecy. Jupyter encourages individual integrity; Mathematica lets individuals hide behind corporate evasion. Jupyter exemplifies the social systems that emerged from the Scientific Revolution and the Enlightenment, systems that make it possible for people to cooperate by committing to objective truth; Mathematica exemplifies the horde of new Vandals whose pursuit of private gain threatens a far greater pubic loss–the collapse of social systems that took centuries to build.&lt;/p&gt;
&lt;p&gt;Membership in an open source community is like membership in the community of science. There is a straightforward process for finding a true answer to any question. People disagree in public conversations. They must explain clearly and listen to those who response with equal clarity. Members of the community pay more attention to those who have been right in the past, and to those who enhance their reputation for integrity by admitting in public when they are wrong. They shun those who mislead. There is no court of final appeal. The only recourse is to the facts.&lt;/p&gt;
&lt;p&gt;It’s a messy process but it works, the only one in all of human history that ever has. No other has ever achieved consensus at scale without recourse to coercion.&lt;/p&gt;
&lt;p&gt;In science, anyone can experiment. In open source, anyone can access the facts of the code. Linus Torvalds may supervise a hierarchy that decides what goes into the Linux kernel, but anyone can see what’s there. Because the communities of science and open source accept facts as the ultimate source of truth and use the same public system for resolving disagreements about the facts, they foster the same norms of trust grounded in individual integrity.&lt;/p&gt;
&lt;h2&gt;The answer to the question and the lesson we should learn&lt;/h2&gt;
&lt;p&gt;So here is my conjecture about the question the article poses. Mathematica failed, despite technical accomplishments, because the norms of its developers clashed so obviously with the norms of its intended users. Jupyter is succeeding because the norms of the community that is developing it are aligned with the norms of its users.&lt;/p&gt;
&lt;p&gt;This answer does not give me much comfort. If Steven Wolfram’s personality had made him just a bit better at faking both sincere apologies and sincere promises to do better, things might have turned out differently. The clash might not have been apparent to users until it was too late.&lt;/p&gt;
&lt;p&gt;The take-away lessons are not to be seduced by promises of shiny technology from some proprietary initiative, even one that seems to have no strings attached; to ignore the personality of the leader of the proprietary effort; to go with the non-proprietary alternative that is fully committed to the open model; and if it doesn’t exist, create it.&lt;/p&gt;
&lt;p&gt;Which reminds me. If you are a Julia enthusiast, how do you suppose the &lt;a href=&quot;https://www.crunchbase.com/organization/julia-computing#section-overview&quot;&gt;investors&lt;/a&gt; in this new language plan to make their big score?&lt;/p&gt;
&lt;h2&gt;My experience with Mathematica&lt;/h2&gt;
&lt;p&gt;In 2015, I tried to share some research results in a Mathematica notebook. I knew that Wolfram’s proprietary business model made it difficult for anyone to check many of the assertions it made. I anticipated neither the dishonesty that this would facilitate nor the cost in wasted time that it would impose.&lt;/p&gt;
&lt;p&gt;Then, I still clung to the belief that for a for-profit corporation, the risk of damage to its reputation would keep dishonesty in check, just as it did for a person. I interpreted examples of corporate dishonesty the same way that I interpreted instances of &lt;a href=&quot;https://www.thecut.com/2015/05/how-a-grad-student-uncovered-a-huge-fraud.html&quot;&gt;scientific fraud,&lt;/a&gt; as unrepresentative exceptions. I was slow to recognize that under the proprietary software model, dishonesty isn’t a bug; it’s a feature.&lt;/p&gt;
&lt;p&gt;I’ve been revising my expectations, but it’s so hard to keep up. I can remember a time when “You opted-in” meant “We tricked you fair and square.” Now it’s little more than a short-hand for the Bart Simpson defense, “I didn’t do it, no one saw me do it, you can’t prove anything!” I even remember how people once accepted the common law principle that a contract is not complete if its terms and conditions are unclear.&lt;/p&gt;
&lt;p&gt;So back in 2015, full of naive optimism, I set out to correct something that was wrong in a published paper. (Yes, &lt;a href=&quot;https://xkcd.com/386/&quot;&gt;I know&lt;/a&gt;. It captures the point I am trying to make, that the publications of science are different from content of the internet, which poses a threat that we have been too slow to appreciate.) I needed to present some symbolic calculations to prove that the steady-state approximation that the paper relied on was fatally flawed, and some numerical results, summarized in graphs, which showed that the error it caused was important.&lt;/p&gt;
&lt;p&gt;On technical grounds, the Mathematica notebook was the perfect vehicle. It let me interleave typeset text and math with tables and figures that summarized the numerical calculations, and do so in a way that made it easy for anyone to replicate my results. My plan was to distribute a PDF of the static output from one run of the notebook and to invite anyone who wanted to replicate its results to download the notebook and run it using the required Wolfram software.&lt;/p&gt;
&lt;p&gt;Now, in my defense, I have to explain that I had used the Mathematica REPL (read, evaluate, print loop) on code and never had any reason to write paragraphs of typeset text as notes to myself. The REPL is quick only if it prints to the screen, so I had rarely tried to print to PDF. (I did save individual graphs as PDFs and this worked just fine.)&lt;/p&gt;
&lt;p&gt;This meant that when I embarked on the production of a document that I could share with others, I had not paid any attention to the typography of the typeset text and math in the PDFs that Mathematica generates. As I wrote, the screen version of the notebook interface lived up to its promise; the typeset text and math looked good. But when I tried to print to PDF, I discovered that the built-in article styles had typography that was bad, absurdly bad, so bad that someone must have worked at making it bad. I tried to fix a print style, but gave up. Combinatorial explosion easily overwhelms trial and error via a GUI. I extracted barely acceptable PDF output by making small changes to a screen style and cut my losses.&lt;/p&gt;
&lt;p&gt;Wolfram made it hard to share a readable PDF version of a notebook because it wanted someone like me to distribute content in its proprietary file format, the CDF. It offered a free player, analogous to Adobe’s PDF reader, albeit one that required a 1.3 gigabyte download. To keep PDF output from leaking out of Mathematica’s walled garden, this player, like the full Mathematica application, was geared only to on-screen display. The tell that this was an intentional, hidden part of Wolfram’s strategy was that the same people who had been so responsive to other questions when I explored the possibility of using notebooks to share research results, went silent when I asked how to print a PDF with reasonable typography. They knew how. This was how they converted notebooks into articles for their in-house &lt;em&gt;Mathematica Journal&lt;/em&gt;. It must surely be how Steven Wolfram produced his books.&lt;/p&gt;
&lt;p&gt;Wolfram knew how to do what I wanted to do. It did not me to be able to do it. It pretended, dishonestly, that I would be able to, and refused, dishonestly, to admit that they did not want me to be able to do it.&lt;/p&gt;
&lt;h2&gt;I’m happy with Jupyter&lt;/h2&gt;
&lt;p&gt;I stopped using Mathematica and gave up on notebooks, so it was only recently that I discovered how easy it is to use the Jupyter notebook to as a front end for Python libraries. It offers the best REPL I’ve ever used. It does a better job of delivering what Theodore Gray had in mind when he designed the Mathematica notebook. It lets me get quick feedback, via text or graphics, about what happens when I select a line of code and run it.&lt;/p&gt;
&lt;p&gt;Python libraries let me replicate everything I wanted to do with Mathematica: Matplotlib for graphics, SymPy for symbolic math, NumPy and SciPy for numerical calculations, Pandas for data, and NLTK for natural language processing. Jupyter makes it easy to use Latex to display typeset math. With Matplotlib, Latex works even in the label text for graphs. (I have not yet tried the major update, JupyterLab, which is still in beta testing.)&lt;/p&gt;
&lt;p&gt;I’m more productive. I’m having fun. On both counts, it helps to be able to get an honest answer when I have a question.&lt;/p&gt;
&lt;h2&gt;I’m frightened by the Vandals&lt;/h2&gt;
&lt;p&gt;In the larger contest between open and proprietary models, Mathematica versus Jupyter would be a draw if the only concern were their technical accomplishments. In the 1990s, Mathematica opened up an undeniable lead. Now, Jupyter is the unambiguous technical leader.&lt;/p&gt;
&lt;p&gt;The tie-breaker is social, not technical. The more I learn about the open source community, the more I trust its members. The more I learn about proprietary software, the more I worry that objective truth might perish from the earth.&lt;/p&gt;
</description>
<pubDate>Sun, 15 Apr 2018 02:03:43 +0000</pubDate>
<dc:creator>bachmeier</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://paulromer.net/jupyter-mathematica-and-the-future-of-the-research-paper/</dc:identifier>
</item>
<item>
<title>What Erlang Taught Me About Distributed Systems</title>
<link>https://blog.kenforthewin.com/what-erlang-taught-me-about-distributed-systems/</link>
<guid isPermaLink="true" >https://blog.kenforthewin.com/what-erlang-taught-me-about-distributed-systems/</guid>
<description>&lt;p&gt;Learning Erlang, and the OTP framework in particular, has given me a better understanding of distributed systems and their fundamental building blocks. Before this, my experience with distributed systems was solely in the realm of Kubernetes, which we use at work for deploying scalable, distributed web services.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Erlang-OTP-Action-Martin-Logan/dp/1933988789/ref=as_li_ss_il?ie=UTF8&amp;amp;qid=1523746571&amp;amp;sr=8-1&amp;amp;keywords=erlang+and+otp+in+action&amp;amp;dpID=51hiUgdU90L&amp;amp;preST=_SX218_BO1,204,203,200_QL40_&amp;amp;dpSrc=srch&amp;amp;linkCode=li1&amp;amp;tag=dron05d-20&amp;amp;linkId=a574bcbfab19e27b79ab5d57b0f5438f&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1933988789&amp;amp;Format=_SL110_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=dron05d-20&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was introduced to Erlang through Elixir. The Phoenix framework leverages Elixir to build performant, functional web applications and it often comes up in the Rails community as a better-performing alternative to Ruby. Elixir depends on the decades of development behind the Erlang VM and in many ways is just syntactic sugar on top of Erlang/OTP. For that reason I wanted to get a better understanding of the underlying technologies so I picked up the book you see above, &lt;a href=&quot;https://www.amazon.com/Erlang-OTP-Action-Martin-Logan/dp/1933988789/ref=as_li_ss_il?ie=UTF8&amp;amp;qid=1523746571&amp;amp;sr=8-1&amp;amp;keywords=erlang+and+otp+in+action&amp;amp;dpID=51hiUgdU90L&amp;amp;preST=_SX218_BO1,204,203,200_QL40_&amp;amp;dpSrc=srch&amp;amp;linkCode=li1&amp;amp;tag=dron05d-20&amp;amp;linkId=a574bcbfab19e27b79ab5d57b0f5438f&quot;&gt;Erlang And OTP In Action&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;buildingblocksofadistributedsystem&quot;&gt;Building Blocks of a Distributed System&lt;/h2&gt;
&lt;p&gt;In Erlang one can take distributed computing for granted. To start off, all code within Erlang runs in processes. You can look at a process in Erlang and Elixir as a basic building block of the language much like one might view a class within an object-oriented language. An application is thus a tree of interconnected processes. Because processes are so native to Erlang, all of these individual processes can automatically be spread across the available cores of the system running them. And because processes are each isolated environments which depend on a built-in system of message passing, the Erlang environment can treat a distributed network of systems the same way it treats a single one. This may sound like magic, but in reality it is leveraging the work that experts have put into building possibly the most scalable environment currently available for development.&lt;/p&gt;
&lt;p&gt;Although Kubernetes may immediately seem to solve a very different problem than Erlang (for one, Kubernetes isn't a programming language), there are some important similarities when it comes to the structure of its distributed implementation. Much like Erlang uses the basic building block of a process, Kubernetes uses the container, or more generally the pod, as a base. Every node in a kube cluster can run one or more pods, just the same way that every node in an Erlang cluster can run one or more processes.&lt;/p&gt;
&lt;h2 id=&quot;comparingapis&quot;&gt;Comparing APIs&lt;/h2&gt;
&lt;p&gt;If we want to discuss implementation details it would be helpful to introduce OTP. OTP is a built-in framework within Erlang for building applications. Building on top of the process-based system, OTP (Open Telecom Platform) offers a further abstraction known as a GenServer. GenServer adds message sending and receiving, storage, TCP, and a ton of other functionality to a process, allowing you to spin up a server that reacts to input and performs useful functions very quickly. Furthermore, OTP adds the concept of a supervisor, a parent process that manages the lifecycle of the child GenServers. In cases where a child process fails unexpectedly, the supervisor can restart that individual process without having it affect the other process environments.&lt;/p&gt;
&lt;p&gt;Kubernetes leverages many of the concepts we just discussed. To name a few, Kubernetes has an ApiServer running on the master which acts as the supervisor for its cluster. Like OTP, this API will ensure that the pods which are running are healthy based on their underlying deployment (very similar to a child specification in Erlang). And if a pod goes down unexpectedly, it will be restarted based on the restart strategy; same with OTP!&lt;/p&gt;
&lt;p&gt;To wrap up, it's evident that much of the work that went into Erlang has inspired the work of Kubernetes. You can look at Kubernetes as a language-agnostic implementation of the same kind of distributed system that's found in the Erlang environment. It's inspiring to see the way open source projects have built, incremented on and in many cases directly inspired each other over the years.&lt;/p&gt;
</description>
<pubDate>Sun, 15 Apr 2018 00:47:21 +0000</pubDate>
<dc:creator>kenforthewin</dc:creator>
<og:type>article</og:type>
<og:title>What Erlang Taught Me About Distributed Systems</og:title>
<og:description>Learning Erlang, and the OTP framework in particular, has given me a better understanding of distributed systems and their fundamental building blocks. Before this, my experience with distributed systems was solely in the realm of Kubernetes, which we use at work for deploying scalable, distributed web services. I was introduced</og:description>
<og:url>https://blog.kenforthewin.com/what-erlang-taught-me-about-distributed-systems/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.kenforthewin.com/what-erlang-taught-me-about-distributed-systems/</dc:identifier>
</item>
<item>
<title>My Favorite PostgreSQL Queries and Why They Matter</title>
<link>https://severalnines.com/blog/my-favorite-postgresql-queries-and-why-they-matter</link>
<guid isPermaLink="true" >https://severalnines.com/blog/my-favorite-postgresql-queries-and-why-they-matter</guid>
<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;
&lt;div class=&quot;field-items&quot;&gt;
&lt;div class=&quot;field-item even&quot;&gt;
&lt;div class=&quot;image image_right w_border&quot;&gt;
&lt;div class=&quot;image_inner&quot;&gt;&lt;img src=&quot;https://severalnines.com/sites/default/files/postgresql_dba_19.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Databases, tables, normalization, and a solid backup plan allow us to store and maintain data.&lt;/p&gt;
&lt;p&gt;Those combined best practices, in turn, afford us interaction with that data. In today's data-driven world, data is valuable. Not only valuable, data is oftentimes critical to end-user solutions provided by products and services. Extracting insight, answering questions, and meaningful metrics from data by way of querying and data manipulation is an integral component of SQL in general.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://severalnines.com/product/clustercontrol/for_postgresql&quot;&gt;PostgreSQL&lt;/a&gt; is no different.&lt;/p&gt;
&lt;p&gt;This foundational crux is critical for success in any data-driven aspect.&lt;/p&gt;
&lt;p&gt;Below, I present a combination of 8 differing queries or types of queries I have found interesting and engaging to explore, study, learn, or otherwise manipulate data sets.&lt;/p&gt;
&lt;p&gt;They are not listed in any order of importance.&lt;/p&gt;
&lt;p&gt;Most will probably be familiar old friends. Perhaps some will become new acquaintances.&lt;/p&gt;
&lt;p&gt;Sample tables and data used are not as important as the actual construction of the queries themselves and what each query returns, offers, or provides. Many of them are mock and derived for demonstration purposes and should not be taken literally in their values.&lt;/p&gt;
&lt;h2&gt;1. Left join, mind any nulls on the right...&lt;/h2&gt;
&lt;p&gt;Suppose in this example, we have a running sale of two months and are getting a total of both combined.&lt;/p&gt;
&lt;p&gt;Yet, for some reason, the second month did not pull its weight and we want to target what days month one picked up the slack.&lt;/p&gt;
&lt;p&gt;These sales are represented as tables payment and fake_month for this demonstration.&lt;/p&gt;
&lt;p&gt;To note:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We will only check for totals greater than 2000.&lt;/li&gt;
&lt;li&gt;We will limit the output to just 10 rows.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To start, we have this Common Table Expression (CTE) '&lt;em&gt;generating&lt;/em&gt;' the fake_month table for us, and query that follows.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; WITH fake_month AS(
SELECT setup::date
FROM generate_series('2007-02-01', '2007-02-28', INTERVAL '1 day') AS setup
)
SELECT date_part('day', p.payment_date)::INT AS legit,
SUM(p.amount),
date_part('day', fk.setup)::INT AS fake
FROM payment AS p
LEFT JOIN fake_month AS fk
ON date_part('day', fk.setup)::INT = date_part('day', p.payment_date)::INT
GROUP BY legit, fake
HAVING SUM(p.amount) &amp;gt; 2000
LIMIT 10;
legit | sum | fake
-------+---------+------
1 | 2808.24 | 1
2 | 2550.05 | 2
6 | 2077.14 | 6
8 | 2227.84 | 8
9 | 2067.86 | 9
17 | 3630.33 | 17
18 | 3977.74 | 18
19 | 3908.59 | 19
20 | 3888.98 | 20
21 | 3786.14 | 21
(10 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Looks as if both months contributed there. So is this solved?&lt;/p&gt;
&lt;p&gt;Before we consider this solved, let's visit the &lt;span&gt;ORDER BY&lt;/span&gt; clause.&lt;/p&gt;
&lt;p&gt;Of course, you can &lt;span&gt;ORDER BY ASC&lt;/span&gt; or &lt;span&gt;DESC&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;However, you can also &lt;span&gt;ORDER BY NULLS&lt;/span&gt; first or last and that changes things up a bit.&lt;/p&gt;
&lt;p&gt;Let's rewrite this query and use &lt;span&gt;ORDER BY NULLS&lt;/span&gt; first on the legit column.&lt;/p&gt;
&lt;p&gt;For brevity, I'll remove the CTE from the output, just know it is still there and being used.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;SELECT date_part('day', p.payment_date)::INT AS legit,
SUM(p.amount),
date_part('day', fk.setup)::INT AS fake
FROM payment AS p
LEFT JOIN fake_month AS fk
ON date_part('day', fk.setup)::INT = date_part('day', p.payment_date)::INT
GROUP BY legit, fake
HAVING SUM(p.amount) &amp;gt; 2000
ORDER BY legit NULLS first
LIMIT 10;
legit | sum | fake
-------+---------+------
1 | 2808.24 | 1
2 | 2550.05 | 2
6 | 2077.14 | 6
8 | 2227.84 | 8
9 | 2067.86 | 9
17 | 3630.33 | 17
18 | 3977.74 | 18
19 | 3908.59 | 19
20 | 3888.98 | 20
21 | 3786.14 | 21
(10 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;No difference there at all.&lt;/p&gt;
&lt;p&gt;What if we &lt;span&gt;ORDER BY NULLS&lt;/span&gt; first on the fake column? The one on the &lt;em&gt;right&lt;/em&gt; side of the JOIN?&lt;/p&gt;
&lt;p&gt;Let's see.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;SELECT date_part('day', p.payment_date)::INT AS legit,
SUM(p.amount),
date_part('day', fk.setup)::INT AS fake
FROM payment AS p
LEFT JOIN fake_month AS fk
ON date_part('day', fk.setup)::INT = date_part('day', p.payment_date)::INT
GROUP BY legit, fake
HAVING SUM(p.amount) &amp;gt; 2000
ORDER BY fake NULLS first
LIMIT 10;
legit | sum | fake
-------+---------+------
29 | 2717.60 |
30 | 5723.89 |
1 | 2808.24 | 1
2 | 2550.05 | 2
6 | 2077.14 | 6
8 | 2227.84 | 8
9 | 2067.86 | 9
17 | 3630.33 | 17
18 | 3977.74 | 18
19 | 3908.59 | 19
(10 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now we are getting somewhere. We can see for days 29 &amp;amp; 30, the &lt;span&gt;fake&lt;/span&gt; column has been ordered from the top of the results set.&lt;/p&gt;
&lt;p&gt;Due to &lt;span&gt;ORDER BY fake NULLS first&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;This solves our question, to what days 'sale 2' slacked off.&lt;/p&gt;
&lt;p&gt;Are you wondering...&lt;/p&gt;
&lt;p&gt;&quot;&lt;em&gt;Can we just filter with WHERE fake IS NULL?&lt;/em&gt;&quot;&lt;/p&gt;
&lt;p&gt;Like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;SELECT date_part('day', p.payment_date)::INT AS legit,
SUM(p.amount),
date_part('day', fk.setup)::INT AS fake
FROM payment AS p
LEFT JOIN fake_month AS fk
ON date_part('day', fk.setup)::INT = date_part('day', p.payment_date)::INT
WHERE date_part('day', fk.setup) IS NULL
GROUP BY legit, fake
HAVING SUM(p.amount) &amp;gt; 2000
LIMIT 10;
legit | sum | fake
-------+---------+------
29 | 2717.60 |
30 | 5723.89 |
(2 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yes that works. So why not just use that query instead? Why it matters?&lt;/p&gt;
&lt;p&gt;I feel using &lt;span&gt;LEFT JOIN&lt;/span&gt; and &lt;span&gt;ORDER BY NULLS first&lt;/span&gt; for the table on the right side of the &lt;span&gt;JOIN&lt;/span&gt;, is a great way to explore unfamiliar tables and data sets.&lt;/p&gt;
&lt;p&gt;By confirming what, if any, data is ‘&lt;em&gt;missing&lt;/em&gt;’ on that side of the join condition first; enhances clarity and awareness, allowing you to then filter out the results set with the &lt;span&gt;WHERE &amp;lt;column_name&amp;gt; IS NULL&lt;/span&gt; clause, finalizing things up.&lt;/p&gt;
&lt;p&gt;Of course, familiarity with the tables and datasets could potentially eliminate the need for the &lt;span&gt;LEFT JOIN&lt;/span&gt; presented here.&lt;/p&gt;
&lt;p&gt;It's a worthy query for anyone utilizing PostgreSQL to at least try, during exploration.&lt;/p&gt;
&lt;h2&gt;2. String Concatenation&lt;/h2&gt;
&lt;p&gt;Concatenation, the joining or appending of two strings, provides a presentation option for results sets. Many '&lt;em&gt;things&lt;/em&gt;' can be concatenated.&lt;/p&gt;
&lt;p&gt;However, as noted in the documentation, the string concatenation operator ('&lt;span&gt;||&lt;/span&gt;') accepts non-string input, as long as one is a string.&lt;/p&gt;
&lt;p&gt;Let' see some examples with the below queries:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT 2||' times'||' 2 equals: '|| 2*2;
?column?
---------------------
2 times 2 equals: 4
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can see, numbers and strings all can be concatenated together as mentioned above.&lt;/p&gt;
&lt;p&gt;The '&lt;span&gt;||&lt;/span&gt;' operator is but one of those available in PostgreSQL.&lt;/p&gt;
&lt;p&gt;The &lt;span&gt;concat()&lt;/span&gt; function accepts multiple arguments, concatenating them all on return.&lt;/p&gt;
&lt;p&gt;Here's an example of that function in action:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT concat('Josh ','Otwell') AS first_name;
first_name
-------------
Josh Otwell
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can pass in more than two arguments if desired:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT concat('Josh',' ','Otwell') AS first_name;
first_name
-------------
Josh Otwell
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's note something real quick with these next examples:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT CONCAT('Josh',NULL,'Otwell') AS first_name;
first_name
------------
JoshOtwell
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT 'Josh '||NULL||'Otwell' AS first_name;
first_name
------------
(1 row)
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT NULL||'Josh '||'Otwell' AS first_name;
first_name
------------
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT CONCAT(NULL,'Josh','Otwell') AS first_name;
first_name
------------
JoshOtwell
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Observe that the &lt;span&gt;concat()&lt;/span&gt; function ignores &lt;span&gt;NULL&lt;/span&gt; no matter where placed in the list of parameters, while the string concatenation operator does not.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;NULL&lt;/span&gt; is returned if present anywhere in the string to concatenate.&lt;/p&gt;
&lt;p&gt;Just be aware of that.&lt;/p&gt;
&lt;p&gt;Instead of manually including within the string to be concatenated, PostgreSQL also includes a &lt;span&gt;concat_ws()&lt;/span&gt; function that accepts a string separator as the first parameter.&lt;/p&gt;
&lt;p&gt;We will visit it with these queries:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT concat_ws('-',333,454,1919) AS cell_num;
cell_num
--------------
333-454-1919
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT concat_ws(' ','Josh','Otwell') AS first_name;
first_name
-------------
Josh Otwell
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;concat_ws()&lt;/span&gt; accepts either numbers or strings as arguments and as stated above, uses the first argument as the separator.&lt;/p&gt;
&lt;p&gt;How does &lt;span&gt;concat_ws()&lt;/span&gt; treat &lt;span&gt;NULL&lt;/span&gt;?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT concat_ws('-',333,NULL,1919) AS cell_num;
cell_num
----------
333-1919
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;postgres=&amp;gt; SELECT concat_ws(NULL,333,454,1919) AS cell_num;
cell_num
----------
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;NULL&lt;/span&gt; is ignored unless it is the separator argument given to &lt;span&gt;concat_ws()&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Then, all arguments are ignored and &lt;span&gt;NULL&lt;/span&gt; is returned instead.&lt;/p&gt;
&lt;p&gt;Concatenation is cool...&lt;/p&gt;
&lt;p&gt;Now that we have an idea of how concatenation works, let's look at a couple of examples of it.&lt;/p&gt;
&lt;p&gt;Back to the mock DVD rental database&lt;/p&gt;
&lt;p&gt;Suppose we need to compile a list of customers first and last names, along with their email address to send out a memo for updating their account.&lt;/p&gt;
&lt;p&gt;I will limit the output to just 10 rows for brevity's sake, but still demonstrating the &lt;span&gt;||&lt;/span&gt; operator.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; SELECT first_name||' '||last_name||'''s email address is: '||email AS name_and_email
FROM customer
LIMIT 10;
name_and_email
--------------------------------------------------------------------------
Jared Ely's email address is: jared.ely@sakilacustomer.org
Mary Smith's email address is: mary.smith@sakilacustomer.org
Patricia Johnson's email address is: patricia.johnson@sakilacustomer.org
Linda Williams's email address is: linda.williams@sakilacustomer.org
Barbara Jones's email address is: barbara.jones@sakilacustomer.org
Elizabeth Brown's email address is: elizabeth.brown@sakilacustomer.org
Jennifer Davis's email address is: jennifer.davis@sakilacustomer.org
Maria Miller's email address is: maria.miller@sakilacustomer.org
Susan Wilson's email address is: susan.wilson@sakilacustomer.org
Margaret Moore's email address is: margaret.moore@sakilacustomer.org
(10 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice we had to escape the single quote used with apostrophe s, using an additional single quote to show possession of the email address for each customer.&lt;/p&gt;
&lt;p&gt;Why you should know?&lt;/p&gt;
&lt;p&gt;There may be times when concatenating data presents you with better insight and understanding into the data set you are working with. Along with reporting options, concatenating shared datasets with others' could potentially make them (the data) more readable and digestible.&lt;/p&gt;
&lt;h2&gt;3. Supplying &lt;span&gt;IN&lt;/span&gt; values list with Subquery's&lt;/h2&gt;
&lt;p&gt;A Subquery has numerous powerful uses. Of those, providing an &lt;span&gt;IN&lt;/span&gt; list of values to check for membership is a common one.&lt;/p&gt;
&lt;p&gt;Here's a quick use.&lt;/p&gt;
&lt;p&gt;Suppose we have customer and payments tables in a mock DVD rental store and want to reward our top five highest spending customers who rented movies during the days of April 10 - 13.&lt;/p&gt;
&lt;p&gt;Imagine that's a special target period. So if the customer spent more than $30, we want to acknowledge them.&lt;/p&gt;
&lt;p&gt;Bear in mind, there are other available options for solving this type of question (i.e., joins, capturing results from multiple selects, etc...), yet, sub-queries can handle it as well.&lt;/p&gt;
&lt;p&gt;We will start out with the whole shebang here. This complete query returns everything we want for this particular question.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; SELECT first_name, last_name, email
FROM customer
WHERE customer_id IN (
SELECT customer_id FROM (
SELECT DISTINCT customer_id, SUM(amount)
FROM payment
WHERE extract(month from payment_date) = 4
AND extract(day from payment_date) BETWEEN 10 AND 13
GROUP BY customer_id
HAVING SUM(amount) &amp;gt; 30
ORDER BY SUM(amount) DESC
LIMIT 5) AS top_five);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This example actually contains nested subquery's, one of which is a Derived Table.&lt;/p&gt;
&lt;p&gt;Let's start by drilling into the innermost subquery, that Derived Table.&lt;/p&gt;
&lt;p&gt;This subquery is a standalone &lt;span&gt;SELECT&lt;/span&gt; statement all its own, returning a &lt;span&gt;customer_id&lt;/span&gt; and a &lt;span&gt;SUM()&lt;/span&gt; on the &lt;span&gt;amount&lt;/span&gt; column.&lt;/p&gt;
&lt;p&gt;Only those customers meeting the criteria checked by the &lt;span&gt;WHERE&lt;/span&gt; and &lt;span&gt;HAVING&lt;/span&gt; clauses make the cut, being further thinned out with &lt;span&gt;LIMIT 5&lt;/span&gt;;&lt;/p&gt;
&lt;p&gt;Why the next subquery you ask?&lt;/p&gt;
&lt;p&gt;Can we not just use the &lt;span&gt;WHERE customer_id IN&lt;/span&gt; portion of the outermost &lt;span&gt;SELECT&lt;/span&gt; here?&lt;/p&gt;
&lt;p&gt;Let's see with a hands-on approach.&lt;/p&gt;
&lt;p&gt;I will remove the &lt;span&gt;AS top_five&lt;/span&gt; from the subquery and try the outermost query with it now:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; SELECT first_name, last_name, email
FROM customer
WHERE customer_id IN
(SELECT DISTINCT customer_id, SUM(amount)
FROM payment
WHERE extract(month from payment_date) = 4
AND extract(day from payment_date) BETWEEN 10 AND 13
GROUP BY customer_id
HAVING SUM(amount) &amp;gt; 30
ORDER BY SUM(amount) DESC
LIMIT 5);
ERROR: subquery has too many columns
LINE 3: WHERE customer_id IN (&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here, &lt;span&gt;IN&lt;/span&gt; membership is being tested with only the &lt;span&gt;customer_id&lt;/span&gt; column, yet the Derived Table returns two columns and PostgreSQL lets us know.&lt;/p&gt;
&lt;p&gt;One remedy is to use another subquery. Selecting only the &lt;span&gt;customer_id&lt;/span&gt; from the Derived Table results set, creates the next inner nested subquery.&lt;/p&gt;
&lt;p&gt;Now the &lt;span&gt;IN&lt;/span&gt; predicate contains multiple rows of one column's values to check membership against the &lt;span&gt;WHERE&lt;/span&gt; clause for &lt;span&gt;customer_id&lt;/span&gt; to make the final results set.&lt;/p&gt;
&lt;p&gt;Why it matters?&lt;/p&gt;
&lt;p&gt;Utilizing subquery's in this manner is powerful due to the fact of the number of values that could potentially be tested with the &lt;span&gt;IN()&lt;/span&gt; predicate.&lt;/p&gt;
&lt;p&gt;Imagine if there were a 100? Or more?&lt;/p&gt;
&lt;p&gt;'&lt;em&gt;Hard-coding&lt;/em&gt;' all of them in the &lt;span&gt;IN()&lt;/span&gt; list could become problematic and error-prone as the volume of values increases.&lt;/p&gt;
&lt;h2&gt;4. &lt;span&gt;generate_series()&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;This set returning function, is handy and super fun to use and explore. I have used &lt;span&gt;generate_series()&lt;/span&gt; in above examples, but it deserves a talk of its own. Focusing more on the function and capabilities.&lt;/p&gt;
&lt;p&gt;I find &lt;span&gt;generate_series()&lt;/span&gt; useful for comparative queries where some, or all data is missing.&lt;/p&gt;
&lt;p&gt;Or only partial data is available at the time I am exploring. One handy use is populating tables with '&lt;em&gt;dummy data&lt;/em&gt;'.&lt;/p&gt;
&lt;p&gt;To start, we will create a simple table:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; CREATE TABLE tbl_1(
trial(&amp;gt; tb_id SERIAL PRIMARY KEY,
trial(&amp;gt; some_day DATE,
trial(&amp;gt; an_amt NUMERIC(4,2));
CREATE TABLE&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then use &lt;span&gt;generate_series()&lt;/span&gt; as the &lt;span&gt;VALUES&lt;/span&gt; for our &lt;span&gt;INSERT&lt;/span&gt; statement:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; INSERT INTO tbl_1(some_day, an_amt)
VALUES(
generate_series('2018-04-01','2018-04-15',INTERVAL '1 day'),
generate_series(2.43, 34.20, 1.03));
INSERT 0 31&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then create a second table&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; CREATE TABLE tbl_2(
tb2_id SERIAL PRIMARY KEY,
some_day2 DATE,
an_amt2 NUMERIC(4,2));
CREATE TABLE&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Also, populate it using &lt;span&gt;generate_series()&lt;/span&gt; in the &lt;span&gt;INSERT&lt;/span&gt; statement:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; INSERT INTO tbl_2(some_day2, an_amt2)
VALUES(
generate_series('2018-05-16','2018-05-31',INTERVAL '1 day'),
generate_series(15.43, 31., 1.03));
INSERT 0 16&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Why it matters?&lt;/p&gt;
&lt;p&gt;To reiterate, &lt;span&gt;generate_series()&lt;/span&gt; is so useful for creating mock or practice data.&lt;/p&gt;
&lt;p&gt;I have found mimicking month or day ranges for comparison is exceptional with &lt;span&gt;generate_series()&lt;/span&gt;. Refer to section 1 and the CTE there, demonstrates this use.&lt;/p&gt;
&lt;p&gt;Creating a set of complete data with &lt;span&gt;generate_series()&lt;/span&gt; and using to compare against stored data to determine if any data is missing holds great value as well.&lt;/p&gt;
&lt;h2&gt;5. Query's with the &lt;span&gt;COUNT()&lt;/span&gt; aggregate function.&lt;/h2&gt;
&lt;p&gt;This simple, yet effective aggregate function should be in anyone's arsenal. Especially when exploring tables or data sets for the first time.&lt;/p&gt;
&lt;p&gt;I mean, do you really want to '&lt;em&gt;SELECT everything&lt;/em&gt;' from a table with 1M rows?&lt;/p&gt;
&lt;p&gt;Determine with &lt;span&gt;COUNT(*)&lt;/span&gt; how many records are present before you load up.&lt;/p&gt;
&lt;p&gt;Let's find out how many rows the film table has in this mock DVD rental table:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; SELECT COUNT(*)
dvdrental-&amp;gt; FROM film;
count
-------
1000
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While not quite as extensive as 1M+ rows, I'm sure you see the usefulness.&lt;/p&gt;
&lt;p&gt;To return the number of specific rows, &lt;span&gt;COUNT(*)&lt;/span&gt; can be filtered with a &lt;span&gt;WHERE&lt;/span&gt; clause.&lt;/p&gt;
&lt;p&gt;Let's see how many films have a 'G' rating:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; SELECT COUNT(*)
dvdrental-&amp;gt; FROM film
dvdrental-&amp;gt; WHERE rating = 'G';
count
-------
178
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There is another form of &lt;span&gt;COUNT()&lt;/span&gt; to be aware of. &lt;em&gt;COUNT(some_expression)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The differences between them are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;COUNT(*)&lt;/span&gt; returns the total of all input rows (including &lt;span&gt;NULLS&lt;/span&gt; and duplicates).&lt;/li&gt;
&lt;li&gt;&lt;span&gt;COUNT(&lt;em&gt;some_expression&lt;/em&gt;)&lt;/span&gt; counts the number of non-NULL input rows.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When used in conjunction with the &lt;span&gt;DISTINCT&lt;/span&gt; keyword, &lt;span&gt;COUNT()&lt;/span&gt; will eliminate duplicate entries and return only unique values.&lt;/p&gt;
&lt;p&gt;Let's see that in action using &lt;span&gt;COUNT()&lt;/span&gt; with &lt;span&gt;DISTINCT&lt;/span&gt; to determine how many unique types of ratings are present:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;dvdrental=&amp;gt; SELECT COUNT(DISTINCT rating) FROM film;
count
-------
5
(1 row)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With this query, we know there are 5 types of ratings.&lt;/p&gt;
&lt;p&gt;Why it matters?&lt;/p&gt;
&lt;p&gt;Depending on what is being tracked or targeted, knowing how many of something exists can be important. Therefore, utilizing &lt;span&gt;COUNT(*)&lt;/span&gt; or &lt;span&gt;COUNT(&lt;em&gt;some_expression&lt;/em&gt;)&lt;/span&gt; assists with these types of challenges.&lt;/p&gt;
&lt;p&gt;Just remember &lt;span&gt;COUNT(*)&lt;/span&gt; does not ignore &lt;span&gt;NULL&lt;/span&gt;. All rows, duplicate and &lt;span&gt;NULL&lt;/span&gt; values included, are returned as part of the final number.&lt;/p&gt;
&lt;h2&gt;6. &lt;span&gt;UPDATE&lt;/span&gt; multiple rows with a &lt;span&gt;CASE&lt;/span&gt; expression.&lt;/h2&gt;
&lt;p&gt;Suppose we have this table:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; SELECT * FROM reward_members;
rm_id | expense_amt | member_status
-------+-------------+---------------
1 | 1245.33 | gold
2 | 1300.49 | gold
3 | 900.20 | bronze
4 | 2534.44 | platinum
5 | 600.19 | bronze
6 | 1001.55 | silver
7 | 1097.99 | silver
8 | 3033.33 | platinum
(8 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We need to rename the &lt;span&gt;member_status&lt;/span&gt; column and add '&lt;em&gt;group&lt;/em&gt;' to the end of the current name present for each record.&lt;/p&gt;
&lt;p&gt;For starters, multiple individual &lt;span&gt;UPDATE&lt;/span&gt; statements will accomplish this no problem.&lt;/p&gt;
&lt;p&gt;But, so can a single &lt;span&gt;CASE&lt;/span&gt; expression.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; UPDATE reward_members
SET member_status = (
CASE member_status
WHEN 'gold' THEN 'gold_group'
WHEN 'bronze' THEN 'bronze_group'
WHEN 'platinum' THEN 'platinum_group'
WHEN 'silver' THEN 'silver_group'
END
)
WHERE member_status IN ('gold', 'bronze','platinum', 'silver');
UPDATE 8&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's query the table again to see the changes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; SELECT * FROM reward_members;
rm_id | expense_amt | member_status
-------+-------------+----------------
1 | 1245.33 | gold_group
2 | 1300.49 | gold_group
3 | 900.20 | bronze_group
4 | 2534.44 | platinum_group
5 | 600.19 | bronze_group
6 | 1001.55 | silver_group
7 | 1097.99 | silver_group
8 | 3033.33 | platinum_group
(8 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All update were successful.&lt;/p&gt;
&lt;p&gt;Why it matters?&lt;/p&gt;
&lt;p&gt;You can imagine how many round trips this would take to the server if multiple individual &lt;span&gt;UPDATE&lt;/span&gt; statements had been run. In truth, only 4 for this example. But still, the potential for many is always there.&lt;/p&gt;
&lt;p&gt;Yet, using an &lt;span&gt;UPDATE&lt;/span&gt; with &lt;span&gt;CASE&lt;/span&gt; expression, we are sending only one query instead.&lt;/p&gt;
&lt;h2&gt;7. &lt;span&gt;COPY&lt;/span&gt; and &lt;span&gt;\copy&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;PostgreSQL provides &lt;span&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/static/sql-copy.html&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;COPY&lt;/a&gt;&lt;/span&gt;, a command for exporting data between files and tables.&lt;/p&gt;
&lt;p&gt;Be sure and visit the provided link to see the abundant number of options available with COPY.&lt;/p&gt;
&lt;p&gt;An important note concerning &lt;span&gt;COPY&lt;/span&gt;. &lt;span&gt;SUPERUSER&lt;/span&gt; role privilege is required to execute this command.&lt;/p&gt;
&lt;p&gt;The psql meta-command &lt;span&gt;\copy&lt;/span&gt; is an alternative for those users not deemed this role attribute. We will visit that command in turn shortly.&lt;/p&gt;
&lt;p&gt;First, let's run a &lt;span&gt;COPY&lt;/span&gt; command to export certain columns to a CSV file on the local machine.&lt;/p&gt;
&lt;p&gt;Assume we have this query result to for export:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=# SELECT expense_amt, member_status
trial-# FROM reward_members
trial-# WHERE member_status = 'gold_group';
expense_amt | member_status
-------------+---------------
1245.33 | gold_group
1300.49 | gold_group
(2 rows)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With &lt;span&gt;COPY&lt;/span&gt;, we can use that &lt;span&gt;SELECT&lt;/span&gt; statement to complete this export.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=# COPY (SELECT expense_amt, member_status
FROM reward_members
WHERE member_status = 'gold_group')
TO '/home/linux_user_here/awards_to_honor.csv'
DELIMITER ','
CSV HEADER;
COPY 2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;*Note: Per the documentation, the query must be within parenthesis.&lt;/p&gt;
&lt;p&gt;Let's now check the contents of that file:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ cat awards_to_honor.csv
expense_amt,member_status
1245.33,gold_group
1300.49,gold_group&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can see the first line contains the &lt;span&gt;HEADER&lt;/span&gt; (which are the column names) and both lines have the &lt;span&gt;expense_amt&lt;/span&gt; and &lt;span&gt;member_status&lt;/span&gt; data for both columns returned from the &lt;span&gt;WHERE&lt;/span&gt; clause filter.&lt;/p&gt;
&lt;p&gt;Another important caveat I discovered from executing the above &lt;span&gt;COPY&lt;/span&gt; command.&lt;/p&gt;
&lt;p&gt;The user must have privileges to write to the file at the OS level.&lt;/p&gt;
&lt;p&gt;In my case, fixed with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo chown postgres awards_to_honor.csv&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can avoid this issue by instead writing to a system file the current user has access to such as &lt;span&gt;/tmp&lt;/span&gt; (shown below.)&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=# COPY (SELECT expense_amt, member_status
FROM reward_members
WHERE member_status = 'gold_group')
TO '/tmp/awards_to_honor.csv'
DELIMITER ','
CSV HEADER;
COPY 2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, one of my test roles without the &lt;span&gt;SUPERUSER&lt;/span&gt; attribute, ran into problems writing to the &lt;span&gt;/tmp&lt;/span&gt; file.&lt;/p&gt;
&lt;p&gt;See below for confirmation:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=# SET role log_user; -- changing from postgres user to log_user
SET&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now attempting the same &lt;span&gt;COPY&lt;/span&gt; command, writing to the &lt;span&gt;/tmp&lt;/span&gt; folder&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; COPY (SELECT expense_amt, member_status
FROM reward_members
WHERE member_status = 'gold_group')
TO '/tmp/awards_to_honor2.csv'
DELIMITER ','
CSV HEADER;
ERROR: must be superuser to COPY to or from a file
HINT: Anyone can COPY to stdout or from stdin. psql's \copy command also works for anyone.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Perhaps a better measure, as suggested in the HINT:, for roles without the &lt;span&gt;SUPERUSER&lt;/span&gt; attribute, is the psql &lt;span&gt;\copy&lt;/span&gt; meta-command.&lt;/p&gt;
&lt;p&gt;Let's carry-out a similar type of command with &lt;span&gt;\copy&lt;/span&gt; instead using the same role, without the need for that &lt;span&gt;SUPERUSER&lt;/span&gt; attribute.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; \copy (SELECT expense_amt, member_status
FROM reward_members
WHERE member_status = 'silver_group')
TO '/home/linux_user_here/more_awards.csv'
DELIMITER ','
CSV HEADER;
COPY 2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;No problems there.&lt;/p&gt;
&lt;p&gt;And the files' contents,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;$ cat more_awards.csv
expense_amt,member_status
1001.55,silver_group
1097.99,silver_group&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Also works for the &lt;span&gt;/tmp&lt;/span&gt; folder:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; \copy (SELECT expense_amt, member_status
FROM reward_members
WHERE member_status = 'silver_group')
TO '/tmp/more_awards.csv'
DELIMITER ','
CSV HEADER;
COPY 2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Same contents present in the written file as well:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; \! cat /tmp/more_awards.csv
expense_amt,member_status
1001.55,silver_group
1097.99,silver_group&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Why it matters?&lt;/p&gt;
&lt;p&gt;Importing data into PostgreSQL via files is a surefire bulk upload method. Although all are not covered in this blog post, &lt;span&gt;COPY&lt;/span&gt; and &lt;span&gt;\copy&lt;/span&gt; both, offer several options for working with different file formats and extensions.&lt;/p&gt;
&lt;p&gt;On the same token, exporting data from tables, or specific columns is easily handled with both of these commands as well.&lt;/p&gt;
&lt;h2&gt;8. psql &lt;span&gt;\help&lt;/span&gt; meta-command&lt;/h2&gt;
&lt;p&gt;You're in a psql command-line session. Curious about the &lt;span&gt;CREATE INDEX&lt;/span&gt; command syntax?&lt;/p&gt;
&lt;p&gt;No need and going to a browser or another document.&lt;/p&gt;
&lt;p&gt;Try this instead:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;trial=&amp;gt; \help CREATE INDEX
Command: CREATE INDEX
Description: define a new index
Syntax:
CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ [ IF NOT EXISTS ] name ] ON table_name [ USING method ]
( { column_name | ( expression ) } [ COLLATE collation ] [ opclass ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )
[ WITH ( storage_parameter = value [, ... ] ) ]
[ TABLESPACE tablespace_name ]
[ WHERE predicate ]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To know what help text is available, you can run &lt;span&gt;\help&lt;/span&gt; by itself and get a list of available options.&lt;/p&gt;
&lt;p&gt;I won't list them all out here, just know that option is available.&lt;/p&gt;
&lt;p&gt;Why it matters?&lt;/p&gt;

&lt;p&gt;The fact this meta-command is super easy to use, powerful, and convenient are enough pros to mention it here. It's saved me tons of time spent searching throughout other documentation. And of course, being a newbie, I use it quite often!&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is not an exhaustive list. Nor the '&lt;em&gt;be all end all&lt;/em&gt;' of queries and data manipulation.&lt;/p&gt;
&lt;p&gt;Only my take on those that pique my interest and speak to me as I continue to learn and grow into a SQL Developer role. I hope through this blog post, you will find use cases for the above queries and commands, implementing those where you see fit.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 14 Apr 2018 23:41:20 +0000</pubDate>
<dc:creator>grzm</dc:creator>
<og:type>article</og:type>
<og:url>https://severalnines.com/blog/my-favorite-postgresql-queries-and-why-they-matter</og:url>
<og:title>My Favorite PostgreSQL Queries and Why They Matter</og:title>
<og:description>In today's data-driven world, data is valuable. Extracting insight, answering questions, and meaningful metrics from data by way of querying and data manipulation is an integral component of SQL in general. This blog presents a combination of 8 interesting, differing PostgreSQL queries or types of queries to explore, study, learn, or otherwise manipulate data sets.</og:description>
<og:image>https://severalnines.com/sites/default/files/postgresql_dba_19.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://severalnines.com/blog/my-favorite-postgresql-queries-and-why-they-matter</dc:identifier>
</item>
<item>
<title>Soviet-Era Industrial Design</title>
<link>https://www.atlasobscura.com/articles/soviet-design-history?utm_medium=atlas-page&amp;utm_source=twitter</link>
<guid isPermaLink="true" >https://www.atlasobscura.com/articles/soviet-design-history?utm_medium=atlas-page&amp;utm_source=twitter</guid>
<description>&lt;p class=&quot;item-body-text-graf&quot;&gt;&lt;span class=&quot;section-start-text&quot;&gt;From domestic appliances to clothing&lt;/span&gt; to children’s toys, everyday items from Soviet life are the subject of the new book &lt;a href=&quot;http://www.phaidon.com/store/design/designed-in-the-ussr-1950-1989-9780714875576/&quot;&gt;&lt;em&gt;Designed in the USSR: 1950 - 1989&lt;/em&gt;&lt;/a&gt;. It’s a comprehensive look at a momentous four decades, in which otherwise mundane products often had an additional purpose: to replicate items from the West, or to promote Soviet achievements.&lt;/p&gt;&lt;p class=&quot;item-body-text-graf&quot;&gt;The Saturnas vacuum cleaner did both. Entirely spherical and encircled by a beige-colored ring, it was released in 1962, the year after the cosmonaut Yuri Gagarin became the first human being to travel into outer space. This mini-planet cleared dust from the floor, while its form reminded its user of the USSR’s space capabilities. It was also based on an existing American product, Hoover’s Constellation vacuum cleaner, which was released in 1955.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Saturnas vacuum cleaner, manufactured by the Welding Equipment Plant, 1962-70s.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54192&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/54192/image.jpg&quot;/&gt;Saturnas vacuum cleaner, manufactured by the Welding Equipment Plant, 1962-70s.
&lt;p class=&quot;item-body-text-graf&quot;&gt;“There were ‘sample product rooms,’ where Western examples of industrial products were displayed, often serving as prototypes for their Soviet equivalents,” writes Alexandra Sankova in the book’s introduction. Sankova is the director of the &lt;a href=&quot;http://moscowdesignmuseum.ru/en/&quot;&gt;Moscow Design Museum&lt;/a&gt;, which first displayed these items in an exhibition in 2012. For her, the Soviet era from the 1950s onwards was an important period of design history, “when function and utility were the driving forces behind ideas but remarkable examples of innovation and creativity still flourished.”&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Yet in the context of the Soviet system, such creativity was not always celebrated. “There existed a veritable army of professional designers who were mentioned only on pay slips and industrial certificates,” writes Sankova. “Instead, manufacturers employed so-called ‘artistic engineers’ who were responsible for the visual appearance of their products.”&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Some of the products featured in the book have since become iconic, such as the Nevalyaskha roly-poly dolls that righted themselves to an upright position. Others remained as prototypes, such as the Belka A50 compact car, which had a stub-nosed front and a bubble-shaped roof. And some have enjoyed a second life in post-USSR Russia: cosplayers have been known &lt;a href=&quot;https://books.google.com/books?id=3ipjJ4-N2ToC&amp;amp;pg=PA90&amp;amp;dq=saturnas+hoover&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0ahUKEwjora7BgbDaAhXnUN8KHQImANQQ6AEIJzAA#v=onepage&amp;amp;q=saturnas%20hoover&amp;amp;f=false&quot;&gt;to use&lt;/a&gt; the top half of a Saturnas vacuum cleaner as medieval helmets. &lt;em&gt;Atlas Obscura&lt;/em&gt; has a selection of images from the book.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Belka A50 (Squirrel) compact car project, prototype designed by Yuri Dolmatovsky, Vladimir Aryamov, Zeyvang K, K. Korzinkin and A. Oksentevich, 1955-56.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54194&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/54194/image.jpg&quot;/&gt;Belka A50 (Squirrel) compact car project, prototype designed by Yuri Dolmatovsky, Vladimir Aryamov, Zeyvang K, K. Korzinkin and A. Oksentevich, 1955-56. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Atmosfera portable transistor radio, 1959-61.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54185&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/54185/image.jpg&quot;/&gt;Atmosfera portable transistor radio, 1959-61. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Anton, Masha and Grib Nevalyashka roly-poly dolls, 1956-70s. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54187&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/54187/image.jpg&quot;/&gt;Anton, Masha and Grib Nevalyashka roly-poly dolls, 1956-70s. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Sewing supplies box, 1970–80s.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54186&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/54186/image.jpg&quot;/&gt;Sewing supplies box, 1970–80s. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Rozhki pasta packaging, manufactured by the Rostov Pasta Factory, 1980s. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54191&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/54191/image.jpg&quot;/&gt;Rozhki pasta packaging, manufactured by the Rostov Pasta Factory, 1980s. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;&amp;lt;em&amp;gt;Young People, Go to the Textile Industry!&amp;lt;/em&amp;gt; Social awareness poster designed by Miron Lukyanov, 1970s.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54184&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/54184/image.jpg&quot;/&gt;&lt;em&gt;Young People, Go to the Textile Industry!&lt;/em&gt; Social awareness poster designed by Miron Lukyanov, 1970s. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Moskva (Moscow) cigar packaging, manufactured by the Pogar Cigarette and Cigar Factory, 1958-60s.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54193&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/54193/image.jpg&quot;/&gt;Moskva (Moscow) cigar packaging, manufactured by the Pogar Cigarette and Cigar Factory, 1958-60s. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Vilia camera manufactured by the Belorussian Optical-Mechanical Association, 1974-85.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54190&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/54190/image.jpg&quot;/&gt;Vilia camera manufactured by the Belorussian Optical-Mechanical Association, 1974-85. &lt;img class=&quot;article-image with-structured-caption image-outlined lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;The cover for &amp;lt;em&amp;gt;Designed in the USSR: 1950-1989&amp;lt;/em&amp;gt;.&quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-54447&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/54447/image.jpg&quot;/&gt;The cover for &lt;em&gt;Designed in the USSR: 1950-1989&lt;/em&gt;.</description>
<pubDate>Sat, 14 Apr 2018 21:33:54 +0000</pubDate>
<dc:creator>how-about-this</dc:creator>
<og:title>The Overlooked Wonders of Soviet-Era Industrial Design</og:title>
<og:url>http://www.atlasobscura.com/articles/soviet-design-history</og:url>
<og:image>https://assets.atlasobscura.com/media/W1siZiIsInVwbG9hZHMvYXNzZXRzLzRiOWIxZmYzODU5MGYyNTIxZF8wNTUgU3B1dGtuaWsuanBnIl0sWyJwIiwiY29udmVydCIsIi1xdWFsaXR5IDgxIC1hdXRvLW9yaWVudCJdLFsicCIsInRodW1iIiwiNjAweD4iXV0/055%20Sputknik.jpg</og:image>
<og:description>Space-themed vacuum cleaners, and more.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.atlasobscura.com/articles/soviet-design-history</dc:identifier>
</item>
<item>
<title>Ask HN: What is your favourite tech talk?</title>
<link>https://news.ycombinator.com/item?id=16838460</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=16838460</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;16839366&quot; readability=&quot;2.399299474606&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840132&quot; readability=&quot;0.85714285714286&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840718&quot; readability=&quot;3.581881533101&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7909407665505&quot;&gt;&lt;tr readability=&quot;3.581881533101&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.581881533101&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8653846153846&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Rich Hickey is great. I remember his Simplicity Matters keynote at Rails Conf 2012. So clear and insightful.&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  https://www.youtube.com/watch?v=rI8tNMsozo0
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Being able to explain a complex topic to diverse audiences is not easy to do. Rich does it very well.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841568&quot; readability=&quot;0.25352112676056&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16845184&quot; readability=&quot;1&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840430&quot; readability=&quot;0.45652173913043&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840424&quot; readability=&quot;7.1489361702128&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.5744680851064&quot;&gt;&lt;tr readability=&quot;7.1489361702128&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The first time I watched Simple Made Easy, I didn't like it, even though I'd written quite a few situated programs in my day. A year later, I'd learned Clojure and re-watched it, and it all made so much sense. It's now one of my favorite tech talks.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841683&quot; readability=&quot;0.77083333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840645&quot; readability=&quot;4.6308724832215&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3154362416107&quot;&gt;&lt;tr readability=&quot;4.6308724832215&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c88&quot;&gt;Gerry Sussman talk is awesome and reflects very well the currently state of computer programming. It's a shame. The worse part: there is people around us with a lot of pride ABOUT DON'T KNOWING TO COMPUTE BUT STILL DOING [INNEFICIENT] THINGS. (sorry for the caps, good bye)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16844080&quot; readability=&quot;2.4161073825503&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2080536912752&quot;&gt;&lt;tr readability=&quot;2.4161073825503&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I hope I found We Really Don't Know How to Compute: Gerry Sussman talk with better resolution and camera on the board&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839937&quot; readability=&quot;3.9166666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839539&quot; readability=&quot;1.6363636363636&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839971&quot; readability=&quot;1.9360465116279&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840182&quot; readability=&quot;2.0958904109589&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16843980&quot; readability=&quot;1.3012048192771&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839463&quot; readability=&quot;9.836231884058&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.918115942029&quot;&gt;&lt;tr readability=&quot;9.836231884058&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.648550724638&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;30.664714494876&quot;&gt;&lt;span class=&quot;c00&quot;&gt;These three had a big impact on me:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Geoff Hinton, The Next Generation of Neural Networks (2007): &lt;a href=&quot;https://www.youtube.com/watch?v=AyzOUbkUf3M&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=AyzOUbkUf3M&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;While the exact approach described there didn't end up being necessary (restricted Boltzmann machines), all the summaries of the competition results made me realize machine image and voice recognition was going to accelerate massively and rival humans in many areas in the very near term.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;----&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Cracking the neural code: Speaking the language of the brain with optics (2009): &lt;a href=&quot;https://www.youtube.com/watch?v=5SLdSbp6VjM&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=5SLdSbp6VjM&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This one made me realize how gene manipulation would be a near term thing and how big of an impact it would have. They used mostly old techniques but all the in situ modifications of cells in mammals were something I hadn't been aware were possible to that degree. One of the guys from his lab, Feng Zhang, went on to be one of the major forces behind CRISPR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;----&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Breakthrough in Nuclear Fusion? - Prof. Dennis Whyte (2016): &lt;a href=&quot;https://www.youtube.com/watch?v=KkpqA8yG9T4&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=KkpqA8yG9T4&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;New design for a tokamak fusion reactor, made much cheaper by new super conductors that use liquid nitrogen instead of helium/etc. and which have more structural strength by being bound into a metallic ribbon. This one made me really optimistic (it hasn't been borne out like the others yet, but they recently raised $50 million). &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839989&quot; readability=&quot;5.6850828729282&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8425414364641&quot;&gt;&lt;tr readability=&quot;5.6850828729282&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.2790055248619&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.305882352941&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I wasn't going to bother commenting on this topic, but when I read the title I instantly thought of&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Geoff Hinton, The Next Generation of Neural Networks (2007): &lt;a href=&quot;https://www.youtube.com/watch?v=AyzOUbkUf3M&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=AyzOUbkUf3M&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I watched that talk probably 10 times after it first came out and wrote some visual basic stuff to try and replicate his results. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839551&quot; readability=&quot;11.857451403888&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.9287257019438&quot;&gt;&lt;tr readability=&quot;11.857451403888&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.671706263499&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;20.926130099228&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Prof. Harold Thrimbleby, “Designing IT to Make Healthcare Safer” (2014): &lt;a href=&quot;https://www.youtube.com/watch?v=_XJbwN6EZ4I&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=_XJbwN6EZ4I&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It might not sound like much from the title, but it's really worth a watch. Thrimbleby talks about UX (captivatingly, even though I'm not usually particularly interested in it) and the many, many bad examples within healthcare tech that leads, directly, to people dying—such as his mother. He also has some really interesting points about tires at one point. I'm not sure if I'm selling it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;These two are also really good: Steve Rambam, “You've Lost Privacy, Now They're Taking Anonymity” (2014): &lt;a href=&quot;https://www.youtube.com/watch?v=dNZrq2iK87k&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=dNZrq2iK87k&lt;/a&gt; Lepht Anonym, “Cybernetics for the Masses” (2010): &lt;a href=&quot;https://www.youtube.com/watch?v=APOAmxFEMkQ&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=APOAmxFEMkQ&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;And this one always makes me chuckle: Bryan Lunduke, “Linux is Freaking Weird” (2016): &lt;a href=&quot;https://www.youtube.com/watch?v=xPbAXKMCDkY&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=xPbAXKMCDkY&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839129&quot; readability=&quot;1.4901960784314&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840403&quot; readability=&quot;1.1578947368421&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839803&quot; readability=&quot;3.2470119521912&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840291&quot; readability=&quot;3.6&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840727&quot; readability=&quot;22.611389236546&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.305694618273&quot;&gt;&lt;tr readability=&quot;22.611389236546&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.662077596996&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;38.876111817027&quot;&gt;&lt;span class=&quot;c00&quot;&gt;That transaction talk is really good, thank you. I can now finally name the effect that I had noticed but had trouble explaining and referring to, write skews.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It's interesting that he doesn't mention phantom reads as the difference between repeatable read/snapshot isolation, and serializable, which is what other sources tend to do.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Snapshot isolation always seemed to me like cheating the intended meaning of repeatable read, insofar as some databases refer to their snapshot isolation level as repeatable read.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;That is, in the strictest sense, if you read a row twice, you get the same value with snapshot isolation, but you don't actually know that the value will be the same when you commit, which as I understand is a case of a write skew.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;In fact, if one thinks of the definition of these levels in terms of locking semantics, one would expect a repeatable read to have the same meaning as obtaining a read lock on the row you read, which I understand would prevent at least some types of write skew, since no modification would be possible on that row, because it would need a write lock. There could still be hazards related to phantom reads (and possibly other effects), such as making a decision based on a computed aggregate that can change if new rows are inserted. Still, this meaning of repeatable reads would already provide a useful isolation level for various cases, except that it doesn't work with snapshot isolation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I have a suspicion that applications out there made incorrect assumptions as to the actual isolation provided by the DB they use. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16842121&quot; readability=&quot;4.7245762711864&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3622881355932&quot;&gt;&lt;tr readability=&quot;4.7245762711864&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.1419491525424&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.866369710468&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Meta-comment regarding the videos posted on this thread:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It’s concerning to me that 90%+ of these videos are hosted by a single entity. The significance to me (and I assume many others here) is a cultural one. These videos relflect on our livelihoods and our day-to-day interests and pursuits.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;My advice is to not get complacent about always having access to this content. Use youtube-dl and keep a local backup of what’s important to you. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16843353&quot; readability=&quot;1.468085106383&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16843291&quot; readability=&quot;13.544863459038&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7724317295189&quot;&gt;&lt;tr readability=&quot;13.544863459038&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.609882964889&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;22.846050870147&quot;&gt;&lt;span class=&quot;c73&quot;&gt;I'm not sure why you're singling out YouTube here. YouTube is the main go to place for videos on the web, so it shouldn't be surprising that most of the videos posted here are hosted by YouTube.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c73&quot;&gt;Concerning, maybe, but the same could be said of a lot of other centralized mediums (such as Medium, WordPress, even HN threads itself).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c73&quot;&gt;When you rely on someone else to host your stuff, you always run the risk of it disappearing. Important stuff should always be backed up, whether it's video stored on YouTube or an amazing blog post on medium.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c73&quot;&gt;If YouTube disappeared tomorrow and all these videos disappeared, I'm sure within a week or month, people will have reuploaded many of the really great talks posted in this thread on some other site. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839608&quot; readability=&quot;7.4890052356021&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.744502617801&quot;&gt;&lt;tr readability=&quot;7.4890052356021&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.4251308900524&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.16631130064&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The most inspiring talk a I have ever seen:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Clasp: Common Lisp using LLVM and C++ for Molecular Metaprogramming.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;ABSTRACT&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This talk describes our unique approach to constructing large, atomically precise molecules (called &quot;Molecular Lego&quot; or &quot;spiroligomers&quot;) that could act as new therapeutics, new catalysts (molecules that make new chemical reactions happen faster) and ultimately to construct atomically precise molecular devices. Then I describe Clasp and CANDO, a new implementation of the powerful language Common Lisp. Clasp is a Common Lisp compiler that uses LLVM to generate fast machine code and it interoperates with C++. CANDO is a molecular design tool that uses Clasp as its programming language. Together I believe that these are the hardware (molecules) and the software (the CANDO/Clasp compiler) that will enable the development of sophisticated molecular nanotechnology.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://m.youtube.com/watch?v=8X69_42Mj-g&quot; rel=&quot;nofollow&quot;&gt;https://m.youtube.com/watch?v=8X69_42Mj-g&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839364&quot; readability=&quot;2.0152671755725&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839984&quot; readability=&quot;1.4566473988439&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840714&quot; readability=&quot;2.3956834532374&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840789&quot; readability=&quot;3.0990990990991&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16845432&quot; readability=&quot;1.6229508196721&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839245&quot; readability=&quot;4.7432432432432&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839103&quot; readability=&quot;0.68817204301075&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16845263&quot; readability=&quot;2.1125541125541&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839529&quot; readability=&quot;5.7044198895028&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8522099447514&quot;&gt;&lt;tr readability=&quot;5.7044198895028&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.7044198895028&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.17008797654&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&quot;Fork Yeah! The Rise and Development of illumos&quot; by Bryan Cantrill&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-zRN7XLCRhc&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=-zRN7XLCRhc&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;He starts with a nice history of SunOS and Solaris, goes into open source, then midway through (33:00) he goes into a brutally honest rant against Oracle. Even better is that Oracle was one of the sponsors of the conference. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841426&quot; readability=&quot;7.1929824561404&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.5964912280702&quot;&gt;&lt;tr readability=&quot;7.1929824561404&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.9451754385965&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.7596153846154&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I cut my unix teeth in the early '90s, on SunOS, and Cantrill really keeps the history relevant.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But truly, his Oracle rant was one for the ages. And this from me where our system RDBMS is Oracle, sigh. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840437&quot; readability=&quot;1.4666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841469&quot; readability=&quot;1.3076923076923&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839182&quot; readability=&quot;1.0673076923077&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839832&quot; readability=&quot;3.2066115702479&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.603305785124&quot;&gt;&lt;tr readability=&quot;3.2066115702479&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;This one is great, gives a lot of little gotchas for Ruby and Javascript in a humorous format.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839666&quot; readability=&quot;0.8695652173913&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840657&quot; readability=&quot;3.1544502617801&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840708&quot; readability=&quot;2.3057851239669&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839152&quot; readability=&quot;2.3809523809524&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839199&quot; readability=&quot;2.7560975609756&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839349&quot; readability=&quot;4.8268156424581&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.4134078212291&quot;&gt;&lt;tr readability=&quot;4.8268156424581&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.4245810055866&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.562874251497&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I find Runar Bjarnason's talks to be interesting; one of my favourites is 'Constraints Liberate, Liberties Constrain':&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=GqmsQeSzMdw&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=GqmsQeSzMdw&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The essence of it is that constraints actually allow for easier composition and more modularity. It had a real impact on the way I think about the design of systems. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839619&quot; readability=&quot;2.04375&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16843422&quot; readability=&quot;3.8053691275168&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839253&quot; readability=&quot;1.7551020408163&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839091&quot; readability=&quot;1.4634146341463&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839389&quot; readability=&quot;6.6634382566586&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.3317191283293&quot;&gt;&lt;tr readability=&quot;6.6634382566586&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.4140435835351&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.523076923077&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Bryan Cantrill's USENIX talk - Fork Yeah! The Rise and Development of illumos: &lt;a href=&quot;https://www.youtube.com/watch?v=-zRN7XLCRhc&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=-zRN7XLCRhc&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;He gives a history of SunOS, Solaris, and OpenSolaris up to the Oracle acquisition, and then onto post acquisition and the creation of illumos. It's a brilliant talk and a must-watch for any Unix enthusiast or historian. Bryan is an incredibly engaging speaker. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839840&quot; readability=&quot;2.7491408934708&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16838888&quot; readability=&quot;3.4080717488789&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839457&quot; readability=&quot;1.0188679245283&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840184&quot; readability=&quot;1.6478873239437&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840642&quot; readability=&quot;1.0196078431373&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839599&quot; readability=&quot;1.9899497487437&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840629&quot; readability=&quot;1.0754716981132&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840965&quot; readability=&quot;2.6031746031746&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.3015873015873&quot;&gt;&lt;tr readability=&quot;2.6031746031746&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;i rewatch this one now and then just to hear Joe Armstrong speak of another author's complex compiler code and the singular comment &quot; and now for the tricky bit&quot;&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839166&quot; readability=&quot;3.8533834586466&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841371&quot; readability=&quot;4.6396396396396&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839667&quot; readability=&quot;1.7894736842105&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840892&quot; readability=&quot;5.1680672268908&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.5840336134454&quot;&gt;&lt;tr readability=&quot;5.1680672268908&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.8760504201681&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.2694877505568&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Watching this now. It's great. Thanks! Not only are there some nice restatements of powerful high-level insights in to network effects in general (which I am considering with respect to physical logistics requirements in our current business), but some great historical tidbits too.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The resounding rejection of packet switching by period communications experts at &lt;a href=&quot;https://youtu.be/8Z685OF-PS8?t=21m0s&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/8Z685OF-PS8?t=21m0s&lt;/a&gt; is awesome. Oh how the mighty have fallen! &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840247&quot; readability=&quot;2.4736842105263&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2368421052632&quot;&gt;&lt;tr readability=&quot;2.4736842105263&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I watched this talk ages ago and throughly enjoyed it. Thank you for reminding me about it.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16838610&quot; readability=&quot;3.825&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840671&quot; readability=&quot;1.3243243243243&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840621&quot; readability=&quot;1.5728155339806&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841190&quot; readability=&quot;5.613535173642&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840747&quot; readability=&quot;12.520401337793&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.2602006688963&quot;&gt;&lt;tr readability=&quot;12.520401337793&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.122073578595&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;39.98638529612&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Finally made an account to post in this thread.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I'm rather early in my career doing mostly Ruby, Python and JavaScript things. As you might expect, I consume mainly Ruby, Python and JavaScript related talks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The first two talks that really blew my mind are:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- K Lars Lohn's PyCon Keynote from 2016: &lt;a href=&quot;https://www.youtube.com/watch?v=bSfe5M_zG2s&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=bSfe5M_zG2s&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- Jim Weirich's (RIP) &quot;Y Not&quot; talk from RubyConf 2012: &lt;a href=&quot;https://www.youtube.com/watch?v=FITJMJjASUs&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=FITJMJjASUs&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;There are many other presenters who I have a good opinion of:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- Raymond Hettinger: his presentation/teaching style is something I'd like to model my own after, also he gave the first talk on writing proper threaded/concurrent python that I was able to understand and make use of.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- Brandon Rhoades: another speaker with a presentation style that I've found easy to follow, also he takes a little shot at the dd utility about 18 minutes into &lt;a href=&quot;https://www.youtube.com/watch?v=z9Hmys8ojno&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=z9Hmys8ojno&lt;/a&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- Sandi Metz: I started out in Python land and moved to Ruby land, where I was introduced to Sandi's talks. She doesn't talk about incredibly complex topics, but she's got insight into some really basic things that's helpful to new people who can't see the forest through the trees.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- Robert Martin: I gather that his OO principles are not universally revered, but I find his talks useful.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- Gary Bernhardt: his talks are interesting and entertaining in ways that most are not&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The list goes on, but I can't think of them all right now. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839563&quot; readability=&quot;2.2054054054054&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841048&quot; readability=&quot;5.7719714964371&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839184&quot; readability=&quot;1.6666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16844288&quot; readability=&quot;1.96875&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839957&quot; readability=&quot;1.1914893617021&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839279&quot; readability=&quot;4.6741573033708&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16838949&quot; readability=&quot;3.3802816901408&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840321&quot; readability=&quot;3.7412587412587&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841467&quot; readability=&quot;4.8467336683417&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.4233668341709&quot;&gt;&lt;tr readability=&quot;4.8467336683417&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.0778894472362&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;15.714838709677&quot;&gt;&lt;span class=&quot;c00&quot;&gt;John Carmack is an absolutely brilliant speaker. Conversational, captivating and effortlessly natural. I could listen to him talk all day about the most arcane bits of graphics development which i'll never understand but am fascinated by regardless.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;His QuakeCon talks are particularly good.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;QuakeCon 2011 - &lt;a href=&quot;https://www.youtube.com/watch?v=4zgYG-_ha28&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=4zgYG-_ha28&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;QuakeCon 2012 - &lt;a href=&quot;https://www.youtube.com/watch?v=wt-iVFxgFWk&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=wt-iVFxgFWk&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I like his talks because he's always interested by what he's doing and it tends to make me interested again in code.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Linus Torvalds is another surprisingly good speaker. His talk on git - one of the dryest possible topics - was very interesting. There's not many other people I'd sit and listen to talk about SCM.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=4XpnKHJAok8&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=4XpnKHJAok8&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839697&quot; readability=&quot;1.3846153846154&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840628&quot; readability=&quot;1.0982142857143&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839176&quot; readability=&quot;1.921875&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839792&quot; readability=&quot;3.7871853546911&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16843100&quot; readability=&quot;2.0564971751412&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840609&quot; readability=&quot;1.656&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841389&quot; readability=&quot;0.79166666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839352&quot; readability=&quot;2.9372937293729&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840197&quot; readability=&quot;1.8897637795276&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839575&quot; readability=&quot;0.73469387755102&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840795&quot; readability=&quot;3.2753623188406&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6376811594203&quot;&gt;&lt;tr readability=&quot;3.2753623188406&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Garrett has had a huge impact on how I write code, even when I can’t use Erlang. His insights are so useful.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839531&quot; readability=&quot;2.8764478764479&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840195&quot; readability=&quot;5.7482117310443&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8741058655222&quot;&gt;&lt;tr readability=&quot;5.7482117310443&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.3905579399142&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;14.237188872621&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The White Hat’s Dilemma, by Alex Stamos: &lt;a href=&quot;https://www.youtube.com/watch?v=eEeHTQHTSgE&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=eEeHTQHTSgE&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Stamos has been in the news recently for quitting as CSO at Facebook. Before that he quit as CSO at Yahoo after the government scanning scandal (&lt;a href=&quot;https://www.reuters.com/article/us-yahoo-nsa-exclusive/exclusive-yahoo-secretly-scanned-customer-emails-for-u-s-intelligence-sources-idUSKCN1241YT&quot; rel=&quot;nofollow&quot;&gt;https://www.reuters.com/article/us-yahoo-nsa-exclusive/exclu...&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This talk took place before he started at Yahoo. In the latter half he goes over a number of potential moral quandaries and how ethically to respond to them. One matches the later Yahoo incident almost exactly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The overall point is that it’s important to consider these scenarios beforehand, because it’s easier to do the wrong thing if you have to make decisions on the fly. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839710&quot; readability=&quot;4.6013513513514&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841350&quot; readability=&quot;2.0555555555556&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839379&quot; readability=&quot;3.6776859504132&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841317&quot; readability=&quot;1.7391304347826&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16842353&quot; readability=&quot;1.5555555555556&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840079&quot; readability=&quot;1.8323353293413&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840966&quot; readability=&quot;2.3174603174603&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840969&quot; readability=&quot;3.2758620689655&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839354&quot; readability=&quot;4&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Anything by Bryan Cantrill (Joyent, prev Sun) or Arthur Bergman (Fastly, prev Wikia).&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840929&quot; readability=&quot;4.8279883381924&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.4139941690962&quot;&gt;&lt;tr readability=&quot;4.8279883381924&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.2303206997085&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.211180124224&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Uniting Church and State: OO and FP Together by Noel Welsh&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;If you are interested in functional programing this little gem has some great insights into how to translate between data and behavior correctly. Not quite the level of Rich Hickey or Philip Wadler, but very good.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=IO5MD62dQbI&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=IO5MD62dQbI&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839673&quot; readability=&quot;1.125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840290&quot; readability=&quot;2.2784810126582&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841186&quot; readability=&quot;2.9421487603306&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839614&quot; readability=&quot;1.03125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840636&quot; readability=&quot;4.5993031358885&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840901&quot; readability=&quot;4.6641509433962&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839392&quot; readability=&quot;7.8827586206897&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.9413793103448&quot;&gt;&lt;tr readability=&quot;7.8827586206897&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.5689655172414&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.941463414634&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Not a proper tech talk, but hearing Ben Chestnut talk about the early days and growth of MailChimp stuck with me.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://vimeo.com/34081566&quot; rel=&quot;nofollow&quot;&gt;https://vimeo.com/34081566&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Bootstrapped to over half a billion dollars in revenue. Worth many multiples of that. Built it Atlanta, not a startup city. B2B, but with a more creative ethos than most VC-backed startups in SF. Just an extraordinary story, well worth the hour it takes to watch. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841623&quot; readability=&quot;2.2368421052632&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841621&quot; readability=&quot;1.5496688741722&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839799&quot; readability=&quot;6.0732394366197&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.0366197183099&quot;&gt;&lt;tr readability=&quot;6.0732394366197&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.0732394366197&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.734513274336&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Worse is better!! — &lt;a href=&quot;https://youtu.be/X45YY97FmL4&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/X45YY97FmL4&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Genius.com CEO gives talk about how the worst possible thing you can think of, is in fact the best thing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I like this video because I tend to get stuck in my own head, or get carried away on useless features/ideas that don't really contribute to the overall progress of the product. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840041&quot; readability=&quot;5.7723577235772&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16843704&quot; readability=&quot;0.75&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841410&quot; readability=&quot;2.0833333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839558&quot; readability=&quot;5.8032258064516&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.9016129032258&quot;&gt;&lt;tr readability=&quot;5.8032258064516&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.1451612903226&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.96875&quot;&gt;&lt;span class=&quot;c00&quot;&gt;It may not be so &quot;wow&quot; now, but at the time it happened the Photosynth TED talk with Notre Dame blew my mind and has stuck with me &lt;a href=&quot;https://youtu.be/M-8k8GEGZPM&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/M-8k8GEGZPM&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Remember at the time of this talk things like Google Maps were still very new, and nowhere near this level of performance. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840970&quot; readability=&quot;0.9047619047619&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16842590&quot; readability=&quot;3.390243902439&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840933&quot; readability=&quot;1.8579545454545&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839951&quot; readability=&quot;3.2380952380952&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16844224&quot; readability=&quot;1.1666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16841397&quot; readability=&quot;2.3829787234043&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839378&quot; readability=&quot;4.089552238806&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839321&quot; readability=&quot;3.5903083700441&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840865&quot; readability=&quot;1.1596638655462&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839745&quot; readability=&quot;1.1739130434783&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839473&quot; readability=&quot;1.5588235294118&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840656&quot; readability=&quot;1.7578125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16840798&quot; readability=&quot;0.97959183673469&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839596&quot; readability=&quot;1.2894736842105&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839777&quot; readability=&quot;1.436974789916&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839882&quot; readability=&quot;1.2321428571429&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839862&quot; readability=&quot;7.6434108527132&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8217054263566&quot;&gt;&lt;tr readability=&quot;7.6434108527132&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.0765503875969&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;17.818548387097&quot;&gt;&lt;span class=&quot;c00&quot;&gt;beside the nostaligia alan kay talks about sketchpad, sutherland and all that;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;one of my top talks is dan friedman + will byrd doing evalo in minikanren.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;similarly there's an old talk by sean parent about reversible computing while he was at Adobe R&amp;amp;D (kinda like relational programming of friedman and byrd, except, in cpp)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I also greatly enjoy anything chuck moore on forth / ga144&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;And recently the talk about the values of APL&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Oh and Gary Bernhardt. Wat and the unix chainsaw. beautiful. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16839660&quot; readability=&quot;5.750656167979&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8753280839895&quot;&gt;&lt;tr readability=&quot;5.750656167979&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.9829396325459&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.783933518006&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Same question from October 2016:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12637239&quot; rel=&quot;nofollow&quot;&gt;https://news.ycombinator.com/item?id=12637239&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Ask HN: What's your favorite tech talk?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;848 points by mngutterman on Oct 4, 2016 | hide | past | web | un-favorite | 255 comments&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Simply put, what are your favorite talks or trainings? It could by a one-off lecture about a specific concept or a series of talks about a languag &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Sat, 14 Apr 2018 17:51:26 +0000</pubDate>
<dc:creator>ratpik</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=16838460</dc:identifier>
</item>
<item>
<title>Assumptions about how children learn to read have been disproven by research</title>
<link>https://www.theatlantic.com/amp/article/557915?single_page=true</link>
<guid isPermaLink="true" >https://www.theatlantic.com/amp/article/557915?single_page=true</guid>
<description>&lt;aside readability=&quot;0.94939759036145&quot;&gt;
&lt;/aside&gt;&lt;section id=&quot;article-section-1&quot; readability=&quot;44.37&quot;&gt;&lt;p&gt;Every two years, education-policy wonks gear up for what has become a time-honored ritual: the release of the Nation’s Report Card. Officially known as the National Assessment of Educational Progress, or NAEP, the data reflect the results of reading and math tests administered to a sample of students across the country. Experts generally consider the tests rigorous and highly reliable—and the scores basically stagnant.&lt;/p&gt;
&lt;p&gt;Math scores have been flat since 2009 and reading scores since 1998, with just a third or so of students performing at a level the NAEP defines as “proficient.” Performance gaps between lower-income students and their more affluent peers, among other demographic discrepancies, have remained stubbornly wide.&lt;/p&gt;
&lt;p&gt;Among the likely culprits for the stalled progress in math scores: &lt;a href=&quot;https://www.achieve.org/publications/naep-math-out-step-states&quot;&gt;a misalignment&lt;/a&gt; between what the NAEP tests and what state standards require teachers to cover at specific grade levels. But what’s the reason for the utter lack of progress in reading scores?&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-2&quot; readability=&quot;58.600235849057&quot;&gt;&lt;p&gt;On Tuesday, a panel of experts in Washington, D.C., convened by the federally appointed officials who oversee the NAEP concluded that the root of the problem is the &lt;em&gt;way&lt;/em&gt; schools teach reading. The current instructional approach, they agreed, is based on assumptions about how children learn that have been disproven by research over the last several decades—research that the education world has largely failed to heed.&lt;/p&gt;
&lt;p&gt;The long-standing view &lt;a href=&quot;http://edex.s3-us-west-2.amazonaws.com/publication/pdfs/EDHirsch-Report-Papers-Final.pdf&quot;&gt;has been&lt;/a&gt; that the first several years of elementary school should be devoted to basic reading skills. History, science, and the arts can wait. After all, the argument goes, if kids haven’t learned to read—a task that is &lt;a href=&quot;https://www.nsba.org/sites/default/files/reports/NSBA_CPE_Early_Literacy_Layout_2015.pdf&quot;&gt;theoretically accomplished by third grade&lt;/a&gt;—how will they be able to gain knowledge about those subjects through their own reading?&lt;/p&gt;
&lt;p&gt;The federal No Child Left Behind legislation, enacted in 2001, only intensified the focus on reading. The statute required states to administer annual reading and math tests to students in grades three through eight and once in high school, and attached hefty consequences if schools failed to boost scores. The law that replaced No Child Left Behind—the Every Student Succeeds Act, enacted in 2015—has eased the consequences but &lt;a href=&quot;https://www.edweek.org/ew/articles/2017/11/15/are-states-changing-course-on-teacher-evaluation.html&quot;&gt;has hardly weakened&lt;/a&gt; the emphasis on testing.&lt;/p&gt;
&lt;p&gt;What is tested, some &lt;a href=&quot;http://blogs.edweek.org/teachers/living-in-dialogue/2011/07/complex_thinking_is_not_tested.html&quot;&gt;educators say&lt;/a&gt;, gets taught—and what isn’t doesn’t. Since 2001, the curriculum in many elementary schools &lt;a href=&quot;http://www.ascd.org/publications/educational_leadership/mar11/vol68/num06/High-Stakes_Testing_Narrows_the_Curriculum.aspx&quot;&gt;has narrowed&lt;/a&gt; to little more than a steady diet of reading and math. And when test scores fail to rise after third grade—as they often do, especially in high-poverty schools—subjects like history and science may continue to be relegated to the far back burner through middle school.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-3&quot; readability=&quot;56&quot;&gt;&lt;p&gt;To some extent, it does make sense to focus on reading skills in the early years. One component of reading is, like math, primarily a set of skills: the part that involves decoding, or making connections between sounds and the letters that represent them.&lt;/p&gt;
&lt;p&gt;But educators have also treated the other component of reading—comprehension—as a set of skills, when in fact it depends primarily on what readers already know. In countries that specify the content to be taught at each grade level, standardized tests can test students on what they’ve learned in school. But in the United States, where schools are all teaching different content, test designers give students passages on a variety of topics that may have nothing to do with what they’ve learned in school—life in the Arctic, for example, or the disappearance of Amelia Earhart. The tests then ask questions designed to assess comprehension: &lt;em&gt;What’s the main idea of the passage? What inferences can you make?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On a daily basis, teachers have their students practice skills and strategies like “finding the main idea” or “making inferences.” And teachers select books that match the given skill rather than because of the text’s content. Rarely do the topics connect: Students might read a book about bridges one day, zebras the next, and clouds the day after that.&lt;/p&gt;
&lt;p&gt;Cognitive scientists have known for decades that simply mastering comprehension skills doesn’t ensure a young student will be able to apply them to whatever texts they’re confronted with on standardized tests and in their studies later in life.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-4&quot; readability=&quot;60.676527084134&quot;&gt;&lt;p&gt;One of those cognitive scientists spoke on the Tuesday panel: Daniel Willingham, a psychology professor at the University of Virginia who &lt;a href=&quot;https://www.theatlantic.com/education/archive/2014/07/how-to-kick-start-summer-reading/373737/&quot;&gt;writes&lt;/a&gt; about the science behind reading comprehension. Willingham explained that whether or not readers understand a text depends far more on how much &lt;a href=&quot;https://www.nytimes.com/2017/11/25/opinion/sunday/how-to-get-your-mind-to-read.html&quot;&gt;background knowledge and vocabulary&lt;/a&gt; they have relating to the topic than on how much they’ve practiced comprehension skills. That’s because writers leave out a lot of information that they assume readers will know. If they put all the information in, their writing would be tedious.&lt;/p&gt;
&lt;p&gt;But if readers can’t supply the missing information, they have a hard time making sense of the text. If students arrive at high school &lt;a href=&quot;https://www.npr.org/sections/theprotojournalist/2014/11/18/364675234/who-won-the-civil-war-tough-question&quot;&gt;without knowing who won the Civil War&lt;/a&gt; they’ll have a hard time understanding a textbook passage about Reconstruction.&lt;/p&gt;
&lt;p&gt;Students from less educated families are usually the ones who are most handicapped by gaps in knowledge. Another panelist—Ian Rowe, who heads a network of charter schools serving low-income students in New York—provided a real-life example during his remarks. A sixth-grader at one of his schools was frustrated that a passage on a reading test she’d taken kept repeating a word she didn’t understand: &lt;em&gt;roog-bye&lt;/em&gt;. The unfamiliar word made it hard for her to understand the passage. When Rowe asked her to spell the word, it turned out to be &lt;em&gt;rugby.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The implication is clear. The best way to boost students’ reading comprehension is to expand their knowledge and vocabulary by teaching them history, science, literature, and the arts, using curricula that that guide kids through a logical sequence from one year to the next: for example, Native Americans and Columbus in kindergarten; the colonial era and the American Revolution in first grade; the War of 1812 and the Civil War in second grade, and so on. That approach enables children to make sense of what they’re learning, and the repetition of concepts and vocabulary in different contexts makes it more likely they’ll retain information. Not to mention that learning content like this can be a lot more engaging for both students and teachers than the endless practice of illusory skills.&lt;/p&gt;
&lt;aside class=&quot;callout-placeholder&quot; data-source=&quot;curated&quot;/&gt;&lt;p&gt;Another panelist—Timothy Shanahan, an emeritus professor at the University of Illinois and the author or editor of over 200 publications on literacy—went on to debunk &lt;a href=&quot;https://www.rand.org/pubs/research_reports/RR1773.html&quot;&gt;a popular approach&lt;/a&gt; that goes hand in hand with teaching comprehension skills: To help students practice their “skills,” teachers give them texts at their supposed individual reading levels rather than the level of the grade they’re in.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-5&quot; readability=&quot;47.775743707094&quot;&gt;&lt;p&gt;According to Shanahan, &lt;a href=&quot;http://shanahanonliteracy.com/blog/the-instructional-level-concept-revisited-teaching-with-complex-text#sthash.kNFa1zLD.dpbs&quot;&gt;no evidence&lt;/a&gt; backs up that practice. In fact, Shanahan said, recent research &lt;a href=&quot;https://www.ernweb.com/educational-research-articles/frustration-level-materials-increase-reading-achievement/&quot;&gt;indicates&lt;/a&gt; that students actually learn more from reading texts &lt;a href=&quot;http://shanahanonliteracy.com/blog/new-evidence-on-teaching-reading-at-frustration-levels#sthash.kveZFyKo.dpbs&quot;&gt;that are considered too difficult for them&lt;/a&gt;—in other words, those with more than a handful of words and concepts a student doesn't understand. What struggling students need is guidance from a teacher in how to make sense of texts designed for kids at their respective grade levels—the kinds of texts those kids may otherwise see only on standardized tests, when they have to grapple with them on their own.&lt;/p&gt;
&lt;p&gt;That view was endorsed by Marilyn Jager Adams, a cognitive and developmental psychologist who is a visiting scholar at Brown University. “Giving children easier texts when they’re weaker readers,” she said during the panel discussion, “serves to deny them the very language and information they need to catch up and move on.”&lt;/p&gt;
&lt;p&gt;The failure to build children’s knowledge in elementary school helps explain the gap between the reading scores of students from wealthier families and those of their lower-income peers—a gap that &lt;a href=&quot;http://cepa.stanford.edu/content/widening-academic-achievement-gap-between-rich-and-poor-new-evidence-and-possible&quot;&gt;has been expanding&lt;/a&gt;. More affluent students may not learn much in elementary school, but compared to their disadvantaged peers their parents tend to be more educated and have the money to provide knowledge-boosting perks like tutoring and trips to Europe. As a result, those wealthy children &lt;a href=&quot;http://cepa.stanford.edu/content/widening-academic-achievement-gap-between-rich-and-poor-new-evidence-and-possible&quot;&gt;are far more likely&lt;/a&gt; to acquire knowledge outside of school. Poorer kids with less-educated parents tend to rely on school to acquire the kind of knowledge that is needed to succeed academically—and because their schools &lt;a href=&quot;http://neatoday.org/2014/09/02/the-testing-obsession-and-the-disappearing-curriculum-2/&quot;&gt;often focus exclusively on reading and math&lt;/a&gt;, in an effort to raise low test scores, they’re less likely to acquire it there.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-6&quot; readability=&quot;50.536964980545&quot;&gt;&lt;p&gt;The bottom line is that policymakers and advocates who have pushed for more testing in part as a way to narrow the gap between rich and poor have undermined their own efforts. They have created a system that incentivizes teachers to withhold the very thing that could accomplish both objectives: knowledge. All students suffer under this system, but the neediest suffer the most.&lt;/p&gt;
&lt;p&gt;The NAEP is a valuable educational barometer, but it’s important to understand that while standardized tests can identify a problem, they can’t provide the answer to it.&lt;/p&gt;
&lt;p&gt;While some elementary teachers have embraced the approach advocated by the NAEP panel, it’s clear that most have been trained to in methods that aren’t supported by research, and that many are resistant to change. The University of Illinois’s Shanahan noted that when he speaks to teachers around the country, they’re aghast at the idea of giving struggling readers grade-level books—even when their state’s literacy standards call for doing so.&lt;/p&gt;
&lt;p&gt;Still, schools in some parts of the country are embracing the kinds of insights offered by the panelists. Louisiana has not only created its own curriculum but &lt;a href=&quot;http://thehill.com/opinion/education/381285-states-dont-measure-what-kids-actually-know-that-needs-to-change&quot;&gt;has also asked&lt;/a&gt; the federal government for permission to give tests based on that curriculum rather than passages on a variety of randomly selected topics. If that movement spreads, the National Assessment of Educational Progress may finally live up to its name and the American education system may at last be able to unlock the untold potential of millions of students.&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Sat, 14 Apr 2018 13:33:59 +0000</pubDate>
<dc:creator>dsr12</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theatlantic.com/amp/article/557915/?single_page=true</dc:identifier>
</item>
</channel>
</rss>