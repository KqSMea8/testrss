<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Why Use OpenStreetMap Instead of Google Maps?</title>
<link>https://www.openstreetmap.org/user/jbelien/diary/44356</link>
<guid isPermaLink="true" >https://www.openstreetmap.org/user/jbelien/diary/44356</guid>
<description>&lt;p&gt;Cet article est également disponible en français : &lt;a href=&quot;http://www.openstreetmap.org/user/jbelien/diary/44358&quot; rel=&quot;nofollow&quot;&gt;http://www.openstreetmap.org/user/jbelien/diary/44358&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Article written for &lt;a href=&quot;http://2018.opensummerofcode.be/&quot; rel=&quot;nofollow&quot;&gt;open Summer of code 2018&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;First of all, there is absolutely not doubt about the fact Google Maps is a good product and the Google Maps tools (API, JavaScript library, ...) work quite well and are easy to setup &lt;strong&gt;but&lt;/strong&gt; ...&lt;/p&gt;
&lt;h2&gt;Google is in charge&lt;/h2&gt;
&lt;p&gt;When Google Maps started more than 10 years ago, everything was completely free to use. These last few months that has changed drastically.&lt;br/&gt;The first decision made by Google was to limit the free number of requests per day. It didn't really impact the small users that were still under the limit but some big players decided to switch to other solution like OpenStreetMap (for instance Foursquare and Pinterest).&lt;br/&gt;The latest change (June 2018) has much more impact : Google decided to reduce the limit of free requests (25000 map display per day to 28000 per month - that's around 1000 map display per day, so 25 times less) but also made it mandatory to give your credit card number even if you do not go over the free limit !&lt;/p&gt;
&lt;p&gt;Impact on Belgian Prime Minister website :&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://jbelien.be/assets/images/2018-07-14-switch-to-osm-1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Money is definitely an issue but worst, Google can decide what's displayed or hidden or highlighted and how it is displayed. What if Google decide to &quot;hide&quot; or &quot;highlight&quot; certain kind of shops for instance ; even worse, what if they decide to draw the border between countries wherever they want. All of this could quickly lead to ethical issues !&lt;/p&gt;
&lt;p&gt;Long story short, you have absolutely &lt;strong&gt;no&lt;/strong&gt; control about this, Google can change the term of use of their service when they want how they want and it will most probably not be in your advantage !&lt;/p&gt;
&lt;h2&gt;Why OpenStreetMap ?&lt;/h2&gt;
&lt;blockquote readability=&quot;10.366336633663&quot;&gt;
&lt;p&gt;OpenStreetMap is a free, editable map of the whole world that is being built by volunteers largely from scratch and released with an open-content license.&lt;/p&gt;
&lt;p&gt;The OpenStreetMap License allows free (or almost free) access to our map images and all of our underlying map data. The project aims to promote new and interesting uses of this data.&lt;/p&gt;
&lt;p&gt;-- Source: &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/About_OpenStreetMap&quot; rel=&quot;nofollow&quot;&gt;https://wiki.openstreetmap.org/wiki/About_OpenStreetMap&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OpenStreetMap use is free as in &lt;em&gt;free beer&lt;/em&gt; but also as in &lt;em&gt;free speech&lt;/em&gt; !&lt;br/&gt;Everyone can contribute and everyone can use it ! &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot; rel=&quot;nofollow&quot;&gt;OpenStreetMap is open data&lt;/a&gt; ! Whether you're a developer, a scientist, an activist, a cartographer, ..., you can use OpenStreetMap database to fulfil your need.&lt;/p&gt;
&lt;h3&gt;You have access to the data&lt;/h3&gt;
&lt;p&gt;Google Maps doesn't give you access to the data behind the map (and that's the case for most proprietary solutions) but you have full access to the OpenStreetMap database !&lt;/p&gt;
&lt;p&gt;Access to the data means you can build a map that suits &lt;strong&gt;you&lt;/strong&gt; and not depend on decisions made by the map provider.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://openwhatevermap.xyz/&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://jbelien.be/assets/images/2018-07-14-switch-to-osm-2.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need some information, just download it ! Let's say you need all the buildings from Brussels for a research project, or you want to find the nearest ATM, or you want all the information from the country you're in vacation and you need it offline, ... ; those are all simple queries ! OpenStreetMap database is open !&lt;/p&gt;
&lt;p&gt;OpenStreetMap covers the whole world with the same mapping rules so it's really easy to switch from local to global !&lt;/p&gt;
&lt;p&gt;If you see that something is wrong in the map, just fix it, or notify the community and we'll fix it ! Fixing the map will not only benefit one big player but everyone in the world. OpenStreetMap is made by citizens just like you.&lt;/p&gt;
&lt;h3&gt;Power of the community&lt;/h3&gt;
&lt;p&gt;Thanks to hundreds of thousand contributors all over the world OpenStreetMap is probably the most up-to-date and complete map of the world.&lt;/p&gt;
&lt;p&gt;When the city center of Brussels became officially accessible for pedestrian only, the update was immediately made in OpenStreetMap the day it became official ; same thing for the recent mobility changes in Ghent. Google Maps of course also made the change but it took a few weeks, sometimes months ... and that can lead to some issues (navigation, ...).&lt;/p&gt;
&lt;p&gt;Third world countries are also a great example of the power of the community : humanitarian organization (like Doctors Without Borders, Red Cross, ...) often need maps to be able to prepare and coordinate their actions on the field. It usually costs a lot to buy maps from those regions (if there is a map available) so they made the switch to OpenStreetMap. They call us on a regular basis to ask the community to map part of the world where they have to take actions.&lt;/p&gt;
&lt;p&gt;Example of difference between OpenStreetMap and Google Maps in Kathmandu : &lt;a href=&quot;https://tools.geofabrik.de/mc/#14/27.5092/85.3607&amp;amp;num=2&amp;amp;mt0=mapnik&amp;amp;mt1=google-map&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://jbelien.be/assets/images/2018-07-14-switch-to-osm-3.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;That's nice but let's get technical ...&lt;/h3&gt;
&lt;p&gt;Many libraries and tools are already using OpenStreetMap data.&lt;/p&gt;
&lt;p&gt;You're looking for a &lt;strong&gt;baselayer&lt;/strong&gt;, there are so much options available depending on your needs (standard basemap, basemap focused on cycling, on accessibility, ...). Have a look at the list available on the wiki : &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Tiles#Servers&quot; rel=&quot;nofollow&quot;&gt;https://wiki.openstreetmap.org/wiki/Tiles#Servers&lt;/a&gt; and if you want to play with Vector Tiles, have a look at &lt;a href=&quot;https://openmaptiles.org/&quot; rel=&quot;nofollow&quot;&gt;https://openmaptiles.org/&lt;/a&gt;.&lt;br/&gt;OpenStreetMap Belgium also provides its own baselayers covering Belgium and surroundings : &lt;a href=&quot;https://tile.openstreetmap.be/&quot; rel=&quot;nofollow&quot;&gt;https://tile.openstreetmap.be/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You're looking for a &lt;strong&gt;geocoding API&lt;/strong&gt;, have a look at Nominatim : &lt;a href=&quot;https://nominatim.openstreetmap.org/&quot; rel=&quot;nofollow&quot;&gt;https://nominatim.openstreetmap.org/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You're looking for a &lt;strong&gt;routing algorithm&lt;/strong&gt;, check OSRM (&lt;a href=&quot;http://project-osrm.org/&quot; rel=&quot;nofollow&quot;&gt;http://project-osrm.org/&lt;/a&gt;), GraphHopper (&lt;a href=&quot;https://www.graphhopper.com/&quot; rel=&quot;nofollow&quot;&gt;https://www.graphhopper.com/&lt;/a&gt;), Itinero (&lt;a href=&quot;http://www.itinero.tech/&quot; rel=&quot;nofollow&quot;&gt;http://www.itinero.tech/&lt;/a&gt;), ...&lt;/p&gt;
&lt;p&gt;Everything that's possible with Google Maps is possible with OpenStreetMap and (almost) as easy to use and set up !&lt;/p&gt;
&lt;p&gt;You can find more information on &lt;a href=&quot;https://switch2osm.org/&quot; rel=&quot;nofollow&quot;&gt;https://switch2osm.org/&lt;/a&gt; !&lt;/p&gt;
&lt;p&gt;You can also have a look at all the great libraries made by Mapbox : &lt;a href=&quot;https://www.mapbox.com/help/how-web-apps-work/&quot; rel=&quot;nofollow&quot;&gt;https://www.mapbox.com/help/how-web-apps-work/&lt;/a&gt;&lt;br/&gt;That's probably the easiest way to switch from Google Maps to OpenStreetMap : Mapbox libraries and API allow you to have all the function provided by Google Maps (basemap - you can even style your own -, directions, geocoding, ...) and are all based on OpenStreetMap data. Most of Mapbox products are &lt;a href=&quot;https://github.com/mapbox&quot; rel=&quot;nofollow&quot;&gt;open-source&lt;/a&gt; but some services and functions come with a downside, you'll have to pay if you go over the request limits.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Some more reading (and sources used for this article) :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In English:&lt;/p&gt;
&lt;p&gt;In French :&lt;/p&gt;
</description>
<pubDate>Sat, 14 Jul 2018 18:47:09 +0000</pubDate>
<dc:creator>tdurden</dc:creator>
<og:title>jbelien's diary | Why use OpenStreetMap instead of Google Maps ? | OpenStreetMap</og:title>
<og:type>website</og:type>
<og:image>https://www.openstreetmap.org/assets/osm_logo_256-cde84d7490f0863c7a0b0d0a420834ebd467c1214318167d0f9a39f25a44d6bd.png</og:image>
<og:url>https://www.openstreetmap.org/user/jbelien/diary/44356</og:url>
<og:description>OpenStreetMap is a map of the world, created by people like you and free to use under an open license.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.openstreetmap.org/user/jbelien/diary/44356</dc:identifier>
</item>
<item>
<title>Show HN: Router7 – A pure-Go implementation of a small home internet router</title>
<link>https://github.com/rtr7/router7</link>
<guid isPermaLink="true" >https://github.com/rtr7/router7</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/rtr7/router7&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/5da4de4212dab843599aea4cc105b1e116071553/68747470733a2f2f7472617669732d63692e6f72672f727472372f726f75746572372e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/rtr7/router7.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://godoc.org/github.com/rtr7/router7/cmd&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/54bff0d0acedcbb2efd7bb34d22c450312b706b4/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f727472372f726f75746572372f636d643f7374617475732e737667&quot; alt=&quot;GoDoc&quot; data-canonical-src=&quot;https://godoc.org/github.com/rtr7/router7/cmd?status.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/rtr7/router7&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/7ee6c3b428fbefc186fb1ceb48b05b70d1d545ed/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f727472372f726f7574657237&quot; alt=&quot;Go Report Card&quot; data-canonical-src=&quot;https://goreportcard.com/badge/github.com/rtr7/router7&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;router7 is a pure-Go implementation of a small home internet router. It comes with all the services required to make a &lt;a href=&quot;https://www.init7.net/en/internet/fiber7/&quot; rel=&quot;nofollow&quot;&gt;fiber7 internet connection&lt;/a&gt; work (DHCPv4, DHCPv6, DNS, etc.).&lt;/p&gt;
&lt;p&gt;Note that this project should be considered a (working!) tech demo. Feature requests will likely not be implemented, and see &lt;a href=&quot;https://github.com/rtr7/router7/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for details about which contributions are welcome.&lt;/p&gt;
&lt;h2&gt;Motivation&lt;/h2&gt;
&lt;p&gt;Before starting router7, I was using the &lt;a href=&quot;https://omnia.turris.cz/en/&quot; rel=&quot;nofollow&quot;&gt;Turris Omnia&lt;/a&gt; router running OpenWrt. That worked fine up until May 2018, when an automated update pulled in a new version of &lt;a href=&quot;https://git.openwrt.org/?p=project/odhcp6c.git;a=shortlog&quot; rel=&quot;nofollow&quot;&gt;odhcp6c&lt;/a&gt;, OpenWrt’s DHCPv6 client. That version is incompatible with fiber7’s DHCP server setup (I think there are shortcomings on both sides).&lt;/p&gt;
&lt;p&gt;It was not only quicker to develop my own router than to wait for either side to resolve the issue, but it was also a lot of fun and allowed me to really tailor my router to my needs, experimenting with a bunch of interesting ideas I had.&lt;/p&gt;
&lt;h2&gt;Project goals&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Maximize internet connectivity: retain the most recent DHCP configuration across reboots and even after its expiration (chances are the DHCP server will be back before the configuration stops working).&lt;/li&gt;
&lt;li&gt;Unit/integration tests use fiber7 packet capture files to minimize the chance of software changes breaking my connectivity.&lt;/li&gt;
&lt;li&gt;Safe and quick updates
&lt;ul&gt;&lt;li&gt;Auto-rollback of updates which result in loss of connectivity: the diagnostics daemon assesses connectivity state, the update tool reads it and rolls back faulty updates.&lt;/li&gt;
&lt;li&gt;Thanks to kexec, updates translate into merely 13s of internet connectivity loss.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Easy debugging
&lt;ul&gt;&lt;li&gt;Configuration-related network packets (e.g. DHCP, IPv6 neighbor/router advertisements) are stored in a ring buffer which can be streamed into &lt;a href=&quot;https://www.wireshark.org/&quot; rel=&quot;nofollow&quot;&gt;Wireshark&lt;/a&gt;, allowing for live and retro-active debugging.&lt;/li&gt;
&lt;li&gt;The diagnostics daemon performs common diagnostic steps (ping, traceroute, …) for you.&lt;/li&gt;
&lt;li&gt;All state in the system is stored as human-readable JSON within the &lt;code&gt;/perm&lt;/code&gt; partition and can be modified.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Hardware&lt;/h2&gt;
&lt;p&gt;The reference hardware platform is the &lt;a href=&quot;https://pcengines.ch/apu2c4.htm&quot; rel=&quot;nofollow&quot;&gt;PC Engines™ apu2c4&lt;/a&gt; system board. It features a 1 GHz quad core amd64 CPU, 4 GB of RAM, 3 Ethernet ports and a DB9 serial port. It conveniently supports PXE boot, the schematics and bootloader sources are available. I recommend the &lt;a href=&quot;https://pcengines.ch/msata16g.htm&quot; rel=&quot;nofollow&quot;&gt;msata16g&lt;/a&gt; SSD module for reliable persistent storage and the &lt;a href=&quot;https://pcengines.ch/usbcom1a.htm&quot; rel=&quot;nofollow&quot;&gt;usbcom1a&lt;/a&gt; serial adapter if you don’t have one already.&lt;/p&gt;
&lt;p&gt;Other hardware might work, too, but is not tested.&lt;/p&gt;
&lt;h3&gt;Teensy rebootor&lt;/h3&gt;
&lt;p&gt;The cheap and widely-available &lt;a href=&quot;https://www.pjrc.com/store/teensypp.html&quot; rel=&quot;nofollow&quot;&gt;Teensy++ USB development board&lt;/a&gt; comes with a firmware called rebootor, which is used by the &lt;a href=&quot;https://www.pjrc.com/teensy/loader_cli.html&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;teensy_loader_cli&lt;/code&gt;&lt;/a&gt; program to perform hard resets.&lt;/p&gt;
&lt;p&gt;This setup can be used to programmatically reset the apu2c4 (from &lt;code&gt;rtr7-recover&lt;/code&gt;) by connecting the Teensy++ to the &lt;a href=&quot;http://pcengines.ch/pdf/apu2.pdf&quot; rel=&quot;nofollow&quot;&gt;apu2c4’s reset pins&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;connect the Teensy++’s &lt;code&gt;GND&lt;/code&gt; pin to the apu2c4 J2’s pin 4 (&lt;code&gt;GND&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;connect the Teensy++’s &lt;code&gt;B7&lt;/code&gt; pin to the apu2c4 J2’s pin 5 (&lt;code&gt;3.3V&lt;/code&gt;, resets when pulled to &lt;code&gt;GND&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can find a working rebootor firmware .hex file at &lt;a href=&quot;https://github.com/PaulStoffregen/teensy_loader_cli/issues/38&quot;&gt;https://github.com/PaulStoffregen/teensy_loader_cli/issues/38&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Architecture&lt;/h2&gt;
&lt;p&gt;router7 is based on &lt;a href=&quot;https://gokrazy.org/&quot; rel=&quot;nofollow&quot;&gt;gokrazy&lt;/a&gt;: it is an appliance which gets packed into a hard disk image, containing a FAT partition with the kernel, a read-only SquashFS partition for the root file system and an ext4 partition for permanent data.&lt;/p&gt;
&lt;p&gt;The individual services can be found in &lt;a href=&quot;https://godoc.org/github.com/rtr7/router7/cmd&quot; rel=&quot;nofollow&quot;&gt;github.com/rtr7/router7/cmd&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Each service runs in a separate process.&lt;/li&gt;
&lt;li&gt;Services communicate with each other by persisting state files. E.g., &lt;code&gt;cmd/dhcp4&lt;/code&gt; writes &lt;code&gt;/perm/dhcp4/wire/lease.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A service notifies other services about state changes by sending them signal &lt;code&gt;SIGUSR1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Configuration files&lt;/h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Consumer(s)&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/interfaces.json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;netconfigd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set IP/MAC addresses of &lt;code&gt;uplink0&lt;/code&gt; and &lt;code&gt;lan0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/portforwardings.json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;netconfigd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Configure nftables port forwarding rules&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/dhcp6/duid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set DHCP Unique Identifier (DUID) for obtaining static leases&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;State files&lt;/h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Producer&lt;/th&gt;
&lt;th&gt;Consumer(s)&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/dhcp4/wire/ack&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;last DHCPACK packet for renewals across restarts&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/dhcp4/wire/lease.json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;netconfigd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Obtained DHCPv4 lease&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/dhcp6/wire/lease.json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;netconfigd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Obtained DHCPv6 lease&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;/perm/dhcp4d/leases.json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp4d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp4d&lt;/code&gt;, &lt;code&gt;dnsd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;DHCPv4 leases handed out (including hostnames)&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Available ports&lt;/h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Port&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;public&amp;gt;:8053&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dnsd&lt;/code&gt; metrics (forwarded requests)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;public&amp;gt;:8066&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;netconfigd&lt;/code&gt; metrics (nftables counters)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:80&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;gokrazy web interface&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:67&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcp4d&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:58&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;radvd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:53&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dnsd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:8077&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;backupd&lt;/code&gt; (serve backup.tar.gz)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:7733&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;diagd&lt;/code&gt; (perform diagnostics)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;lt;private&amp;gt;:5022&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;captured&lt;/code&gt; (serve captured packets)&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Here’s an example of the diagd output:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rtr7/router7/raw/master/2018-07-14-diagd.png&quot;&gt;&lt;img src=&quot;https://github.com/rtr7/router7/raw/master/2018-07-14-diagd.png&quot; width=&quot;800&quot; alt=&quot;diagd output&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here’s an example of the metrics when scraped with &lt;a href=&quot;https://prometheus.io/&quot; rel=&quot;nofollow&quot;&gt;Prometheus&lt;/a&gt; and displayed in &lt;a href=&quot;https://grafana.com/&quot; rel=&quot;nofollow&quot;&gt;Grafana&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rtr7/router7/raw/master/2018-07-14-grafana.png&quot;&gt;&lt;img src=&quot;https://github.com/rtr7/router7/raw/master/2018-07-14-grafana.png&quot; width=&quot;800&quot; alt=&quot;metrics in grafana&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Connect your serial adapter (&lt;a href=&quot;https://pcengines.ch/usbcom1a.htm&quot; rel=&quot;nofollow&quot;&gt;usbcom1a&lt;/a&gt; works well if you don’t have one already) to the apu2c4 and start a program to use it, e.g. &lt;code&gt;screen /dev/ttyUSB0 115200&lt;/code&gt;. Then, power on the apu2c4 and configure it to do PXE boot:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Press &lt;code&gt;F10&lt;/code&gt; to enter the boot menu&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;3&lt;/code&gt; to enter setup&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;n&lt;/code&gt; to enable network boot&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;c&lt;/code&gt; to move mSATA to the top of the boot order&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;e&lt;/code&gt; to move iPXE to the top of the boot order&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;s&lt;/code&gt; to save configuration and exit&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Connect a network cable on &lt;code&gt;net0&lt;/code&gt;, the port closest to the serial console port:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rtr7/router7/raw/master/devsetup.jpg&quot;&gt;&lt;img src=&quot;https://github.com/rtr7/router7/raw/master/devsetup.jpg&quot; width=&quot;800&quot; alt=&quot;router7 development setup&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next, build a router7 image:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;go get -u github.com/gokrazy/tools/cmd/gokr-packer
go get -u -d github.com/rtr7/router7
mkdir /tmp/recovery
GOARCH=amd64 gokr-packer \
        -hostname=router7 \
        -overwrite_boot=/tmp/recovery/boot.img \
        -overwrite_mbr=/tmp/recovery/mbr.img \
        -overwrite_root=/tmp/recovery/root.img \
        -kernel_package=github.com/rtr7/kernel \
        -firmware_package=github.com/rtr7/kernel \
        -gokrazy_pkgs=github.com/gokrazy/gokrazy/cmd/ntp \
        -serial_console=ttyS0,115200n8 \
        github.com/rtr7/router7/cmd/...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;rtr7-recover -boot=/tmp/recovery/boot.img -mbr=/tmp/recovery/mbr.img -root=/tmp/recovery/root.img&lt;/code&gt; to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;trigger a reset if a Teensy with the rebootor firmware is attached&lt;/li&gt;
&lt;li&gt;serve a DHCP lease to all clients which request PXE boot (i.e., your apu2c4)&lt;/li&gt;
&lt;li&gt;serve via TFTP:
&lt;ul&gt;&lt;li&gt;the PXELINUX bootloader&lt;/li&gt;
&lt;li&gt;the router7 kernel&lt;/li&gt;
&lt;li&gt;an initrd archive containing the rtr7-recovery-init program and mke2fs&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;serve via HTTP the boot and root images&lt;/li&gt;
&lt;li&gt;optionally serve via HTTP a backup.tar.gz image containing files for /perm (e.g. for moving to new hardware, rolling back corrupted state, or recovering from a disk failure)&lt;/li&gt;
&lt;li&gt;exit once the router successfully wrote the images to disk&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Updates&lt;/h3&gt;
&lt;p&gt;Run e.g. &lt;code&gt;rtr7-safe-update -updates_dir=$HOME/router7/updates&lt;/code&gt; to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;verify the router currently has connectivity, abort the update otherwise&lt;/li&gt;
&lt;li&gt;download a backup archive of &lt;code&gt;/perm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;build a new image&lt;/li&gt;
&lt;li&gt;update the router&lt;/li&gt;
&lt;li&gt;wait until the router restored connectivity, roll back the update using &lt;code&gt;rtr7-recover&lt;/code&gt; otherwise&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The update step uses kexec to reduce the downtime to approximately 15 seconds.&lt;/p&gt;
&lt;h3&gt;Manual Recovery&lt;/h3&gt;
&lt;p&gt;Given &lt;code&gt;rtr7-safe-update&lt;/code&gt;’s safeguards, manual recovery should rarely be required.&lt;/p&gt;
&lt;p&gt;To manually roll back to an older image, invoke &lt;code&gt;rtr7-safe-update&lt;/code&gt; via the &lt;code&gt;recover.bash&lt;/code&gt; script in the image directory underneath &lt;code&gt;-updates_dir&lt;/code&gt;, e.g.:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% cd ~/router7/updates/2018-07-03T17:33:52+02:00
% ./recover.bash
&lt;/code&gt;
&lt;/pre&gt;&lt;/article&gt;</description>
<pubDate>Sat, 14 Jul 2018 12:35:16 +0000</pubDate>
<dc:creator>secure</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/39711869?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>rtr7/router7</og:title>
<og:url>https://github.com/rtr7/router7</og:url>
<og:description>router7 - pure-Go small home internet router</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/rtr7/router7</dc:identifier>
</item>
<item>
<title>The Great Apple Keyboard Cover-Up</title>
<link>https://ifixit.org/blog/10279/apple-macbook-keyboard-cover-up/</link>
<guid isPermaLink="true" >https://ifixit.org/blog/10279/apple-macbook-keyboard-cover-up/</guid>
<description>&lt;div class=&quot;copy clearfix&quot; readability=&quot;44.94997281131&quot;&gt;
&lt;p&gt;&lt;span&gt;BREAKING (July 13, 2018): Here’s an inflammatory take for you: Apple’s new quieter keyboard is actually a silent scheme to fix their keyboard&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/10229/macbook-pro-keyboard/&quot;&gt;&lt;span&gt;reliability issues&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. We’re in the middle of tearing down the newest MacBook Pro, but we’re too excited to hold this particular bit of news back:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Apple has cocooned their butterfly switches in a thin, silicone barrier.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;https://d3nevzfk7ii3be.cloudfront.net/igi/QKdxJs6wFaLuwSMW.medium&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;The 2018 MacBook Pro features a thin rubberized layer under its keycaps, covering the second-generation butterfly mechanism.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This flexible enclosure is quite obviously an ingress-proofing measure to cover up the mechanism from the daily onslaught of microscopic dust. Not—to our eyes—a silencing measure. In fact, Apple has a&lt;/span&gt; &lt;a href=&quot;http://pdfaiw.uspto.gov/.aiw?docid=20180068808&quot;&gt;&lt;span&gt;patent for this exact tech&lt;/span&gt;&lt;/a&gt;&lt;span&gt; designed to “prevent and/or alleviate contaminant ingress.”&lt;/span&gt;&lt;a href=&quot;http://pdfaiw.uspto.gov/.aiw?docid=20180068808&amp;amp;SectionNum=1&amp;amp;IDKey=F0B1C5BB130C&amp;amp;HomeUrl=http://appft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1%252526Sect2=HITOFF%252526d=PG01%252526p=1%252526u=%2525252Fnetahtml%2525252FPTO%2525252Fsrchnum.html%252526r=1%25252&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;https://d3nevzfk7ii3be.cloudfront.net/igi/sI2W6BnJOgKPAKkZ&quot; alt=&quot;&quot; width=&quot;900&quot; height=&quot;426&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here’s the really good part: I can tell you it’s there, but I can’t definitively prove it’s a reliability fix. After all,&lt;/span&gt; &lt;a href=&quot;https://www.theverge.com/2018/7/12/17563640/apple-macbook-pro-touchbar-2018-intel-processor-siri-true-tone&quot;&gt;&lt;span&gt;Apple told The Verge&lt;/span&gt;&lt;/a&gt; &lt;span&gt;that “this new third-generation keyboard wasn’t designed to solve those [dust] issues.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Apple is in the middle of several&lt;/span&gt; &lt;a href=&quot;https://9to5mac.com/2018/06/04/macbook-pro-keyboard-lawsuits-2/&quot;&gt;&lt;span&gt;class-action lawsuits&lt;/span&gt;&lt;/a&gt; &lt;span&gt;for the failure of their keyboards, so of course they can’t just come out and say, “Hey, we fixed it!” That says there&lt;/span&gt; &lt;em&gt;&lt;span&gt;was&lt;/span&gt;&lt;/em&gt; &lt;span&gt;a problem to begin with. But you’ve heard that clever analysis from&lt;/span&gt; &lt;a href=&quot;https://daringfireball.net/2018/07/new_macbook_pros&quot;&gt;&lt;span&gt;John Gruber&lt;/span&gt;&lt;/a&gt; &lt;span&gt;already. I’m just here to posit: the advertised boost in quietude is a&lt;/span&gt; &lt;em&gt;&lt;span&gt;side-effect&lt;/span&gt;&lt;/em&gt; &lt;span&gt;of this rubbery membrane. The quiet angle is, quite literally, a cover up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Tune in next week as we put this membrane through its dust-proofing paces, tear down the rest of the device, and speculate whether this really is a feature—or a secret bug fix impacting millions of consumers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here’s our video summary of the story so far.&lt;br/&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/2tbVDV1xdQI&quot; width=&quot;899&quot; height=&quot;500&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Image Credit: *FIG. 3D from &lt;a href=&quot;http://pdfaiw.uspto.gov/.aiw?docid=20180068808&amp;amp;SectionNum=1&amp;amp;IDKey=F0B1C5BB130C&amp;amp;HomeUrl=http://appft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1%252526Sect2=HITOFF%252526d=PG01%252526p=1%252526u=%2525252Fnetahtml%2525252FPTO%2525252Fsrchnum.html%252526r=1%25252&quot;&gt;uspto.gov&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;ul class=&quot;next-prev-post-nav&quot;&gt;&lt;li&gt;&lt;small&gt;Previous Post&lt;/small&gt; &lt;a href=&quot;https://ifixit.org/blog/10263/dare-to-repair-contest-winners/&quot; rel=&quot;prev&quot;&gt;Dare to Repair Contest Winners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;author-container&quot;&gt;
&lt;div class=&quot;author-content&quot; readability=&quot;29.545454545455&quot;&gt;
&lt;div class=&quot;author-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://secure.gravatar.com/avatar/fe2aff4d1a29fe85dc1643d5d9b9c864?s=100&amp;amp;d=blank&amp;amp;r=pg&quot; srcset=&quot;https://secure.gravatar.com/avatar/fe2aff4d1a29fe85dc1643d5d9b9c864?s=200&amp;amp;d=blank&amp;amp;r=pg 2x&quot; class=&quot;avatar avatar-100 photo&quot; height=&quot;100&quot; width=&quot;100&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;author-body&quot; readability=&quot;31.818181818182&quot;&gt;
&lt;h3 class=&quot;author-name&quot;&gt;&lt;a href=&quot;https://ifixit.org/blog/author/samantha/&quot; title=&quot;Posts by Sam Lionheart&quot; rel=&quot;author&quot;&gt;Sam Lionheart&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;author-bio&quot;&gt;Samantha Lionheart is a content curator and guide photo guru at iFixit. She enjoys tea, cats, and thinking too much about movies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Sat, 14 Jul 2018 01:01:32 +0000</pubDate>
<dc:creator>shritesh</dc:creator>
<og:title>The Great Apple Keyboard Cover-Up</og:title>
<og:description></og:description>
<og:url>https://ifixit.org/blog/10279/apple-macbook-keyboard-cover-up/</og:url>
<og:image>https://d3nevzfk7ii3be.cloudfront.net/igi/QKdxJs6wFaLuwSMW.medium</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ifixit.org/blog/10279/apple-macbook-keyboard-cover-up/</dc:identifier>
</item>
<item>
<title>Air Gapping a MacBook Air: The Great BCM15700A2 Mystery</title>
<link>https://tech.firstlook.media/macbook-air-broadcom-bcm15700a2-mystery</link>
<guid isPermaLink="true" >https://tech.firstlook.media/macbook-air-broadcom-bcm15700a2-mystery</guid>
<description>&lt;p&gt;As we fact-checked our previous post – “&lt;a href=&quot;https://tech.firstlook.media/air-gapping-part-one&quot;&gt;Air Gapping for Fun and Non-Profit&lt;/a&gt;” – we noticed that the &lt;a href=&quot;https://www.ifixit.com/Teardown/MacBook+Air+13-Inch+Early+2015+Teardown/38266#s86828&quot;&gt;iFixit MacBook Air 13&quot; Early 2015 Teardown&lt;/a&gt; pointed out a “wireless networking chipset” integrated into the underside of the Air’s main logic board. The chip was identified as a “Broadcom BCM15700A2”.&lt;/p&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;

&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://thenib.imgix.net/usq/13f6faca-f908-499c-b119-21f2c43d1131/6e975b09-26b9-4478-a23a-44b921f44288.jpeg?auto=compress,format&amp;amp;cs=srgb&amp;amp;_=d421f193ce747afbc3ba1f5bc94b81bc&quot; class=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;span&gt;Broadcom BCM15700A2 on the from MacBook Air logic board&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;iFixit had never steered us wrong when we followed their hardware repair instructions in the past, so we deemed this information reliable and immediately raised some critical questions: Is there a wireless chipset soldered onto the MacBook Air’s logic board that we didn’t know about? If so, is it not actually possible to properly air gap a MacBook Air?&lt;/p&gt;
&lt;p&gt;To answer these questions, we looked to the Internet for other mentions of &lt;a href=&quot;https://duckduckgo.com/?q=BCM15700A2&quot;&gt;BCM15700A2&lt;/a&gt;. We found there was no general consensus about the chip’s function – only mixed signals from various sources:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The iFixit teardown linked to a &lt;a href=&quot;https://www.reddit.com/r/networking/comments/1u1iql/potential_compatibility_issue_between_apple_2013/&quot;&gt;reddit post&lt;/a&gt; claiming that the chip was causing a networking problem between the Airs and Microsoft Active Directory&lt;/li&gt;
&lt;li&gt;We found several listings for the chip on eBay, so we emailed a seller and asked about the chip’s functionality. They replied promptly: “I guess it’s [a] Radio Network Controller”. ( The chip’s function even seemed to be a mystery to the seller! )&lt;/li&gt;
&lt;li&gt;And we found a “&lt;a href=&quot;https://mpetroff.net/2015/10/macbook-webcam-teardown/&quot;&gt;MacBook Webcam Teardown&lt;/a&gt;” by Matthew Petroff that said the chipset could be connected to the webcam processor, but he also wrote: “The camera board connects directly to the &lt;a href=&quot;https://www.ifixit.com/Teardown/MacBook+Air+11-Inch+Mid+2013+Teardown/15078#s49179&quot;&gt;main logic board&lt;/a&gt;, which just so happens to contain &lt;em&gt;a Broadcom BCM15700A2 chip that no one seems to know the purpose of&lt;/em&gt;” (emphasis added). Petroff goes on to say, “As the part number contains the camera controller’s PCIe bus ID, it is very likely the chip in question, particularly since there are no other mysterious Broadcom chips on the logic board.” This was encouraging, but not definitive, so we continued our investigation looking for additional web cam references.&lt;/li&gt;
&lt;li&gt;We found &lt;a href=&quot;https://github.com/patjak/bcwc_pcie&quot;&gt;a repo on GitHub&lt;/a&gt; that is a “Reverse engineered Linux driver for the FacetimeHD (Broadcom 1570) PCIe webcam”&lt;/li&gt;
&lt;li&gt;We found a blog post by Chris Jones titled “&lt;a href=&quot;https://chrisrjones.com/articles/How-to-get-the-broadcom-pci-1570-web-cam-working-in-Linux-using-qemu-with-OS-X-VM&quot;&gt;How to get the broadcom pci 1570 web cam working in Linux using qemu with OS X VM&lt;/a&gt;&quot;&lt;/li&gt;
&lt;li&gt;But we didn’t find any mention of the chip using Broadcom’s own &lt;a href=&quot;https://www.broadcom.com/site-search&quot;&gt;product search tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The information we found was pointing to the mystery chip being an innocuous camera controller, but there were enough mixed signals that we felt we needed to take matters into our own hands and definitively determine the chip’s function.&lt;/p&gt;
&lt;h3&gt;Hardware Testing for Noobs&lt;/h3&gt;
&lt;p&gt;Our first step in testing was asking the system what Broadcom chips it knew about. To do this, we booted the machine into &lt;a href=&quot;https://docs.kali.org/downloading/kali-linux-live-usb-install&quot;&gt;Kali Linux using a “live” USB stick&lt;/a&gt; and we ran &lt;span&gt;lspci&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.die.net/man/8/lspci&quot;&gt;lspci&lt;/a&gt; is part if of the &lt;a href=&quot;https://github.com/pciutils/pciutils&quot;&gt;pciutils&lt;/a&gt; package and “is a utility for displaying information about PCI buses in the system and devices connected to them”.&lt;/p&gt;
&lt;p&gt;Our first run gave us the following:&lt;/p&gt;
&lt;pre&gt;
root@kali:~# lspci | grep Broadcom
02:00.0 Multimedia controller: Broadcom Limited 720p Facetime HD Camera
03:00.0 Network controller: Broadcom Limited BCM4360 802.11ac Wireless Network Adapter (rev 03)
&lt;/pre&gt;
&lt;p&gt;We then removed the wireless card ( as we did in the &lt;a href=&quot;https://www.youtube.com/watch?v=h5lxvSLu7Jw&quot;&gt;video&lt;/a&gt; from part one! ) and re-ran &lt;span&gt;lspci&lt;/span&gt;:&lt;/p&gt;
&lt;pre&gt;
root@kali:~# lspci | grep Broadcom
02:00.0 Multimedia controller: Broadcom Limited 720p Facetime HD Camera
&lt;/pre&gt;
&lt;p&gt;This output made sense so we continued by unplugging the camera ribbon from the logic board and re-running &lt;span&gt;lspci&lt;/span&gt; again. There was no change in the output:&lt;/p&gt;
&lt;pre&gt;
root@kali:~# lspci | grep Broadcom
02:00.0 Multimedia controller: Broadcom Limited 720p Facetime HD Camera
&lt;/pre&gt;
&lt;p&gt;This made sense because there’s not much room around the camera in the bezel of the MacBook Air and it would be reasonable to have the camera controller on the logic board away from the camera itself.&lt;/p&gt;
&lt;p&gt;But after this step we realized that we needed to physically remove the chip from the board if we were going to fully determine that the BCM15700A2 is the same as the “Broadcom Limited 720p Facetime HD Camera” – and is in-fact a multimedia controller and &lt;em&gt;not&lt;/em&gt; a wireless networking device.&lt;/p&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;

&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://thenib.imgix.net/usq/6171654f-46ed-482a-848a-f86ca98884a2/dfe03942-4820-464a-b8e6-18038bca3c52.jpeg?auto=compress,format&amp;amp;cs=srgb&amp;amp;_=57b5b4e3deba93348148f66cfdfa5f1a&quot; class=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;span&gt;MacBook Air internals with wireless card removed and camera cable disconnected; A defective SSD was previously removed.&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;Calling in the Professionals&lt;/h3&gt;
&lt;p&gt;We took out the Air’s logic board to see if we could pry the chip off with a screwdriver. We quickly decided this was a bad idea. We also considered “disabling” the chip by drilling a few holes through it with a Dremel tool or by melting it a bit with a soldering iron. Both of those ideas felt too destructive, though – even if they would have been fun to try!&lt;/p&gt;
&lt;p&gt;A colleague suggested that a nearby mobile phone repair shop might have a good heat gun and be willing to help us desolder the chip. This sounded reasonable, so I ventured to the streets of New York City to seek the help of some professionals!&lt;/p&gt;
&lt;p&gt;I was optimistic walking up 5th Avenue clutching the board safely sheltered from the elements in an anti-static bag, but within thirty minutes, I had been turned away from two different repair shops and was starting to feel discouraged.&lt;/p&gt;
&lt;p&gt;I reached out to our IT team to see if they had suggestions, and after some bargaining and the calling in of a favor, they managed to convince a friend at another nearby computer repair shop to help us out.&lt;/p&gt;
&lt;p&gt;I dropped the board off with the technicians and a few hours later they emailed to say they had removed the chip!&lt;/p&gt;
&lt;p&gt;We’re not sure exactly what the technicians did to remove the chip – heat gun, maybe? – but it came off cleanly and you wouldn’t notice it was missing unless you were specifically looking for it on the board.&lt;/p&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;

&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://thenib.imgix.net/usq/0f65e224-8de1-47fa-a329-272695697d10/e6be4eb3-9e16-426f-b077-04427c45f7ed.jpeg?auto=compress,format&amp;amp;cs=srgb&amp;amp;_=db3c72572f3816a434687ced905e6491&quot; class=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;span&gt;Broadcom BCM15700A2 desoldered from MacBook Air logic board&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;Mystery Solved&lt;/h3&gt;
&lt;p&gt;Once we put the now modified board back in the Air, we ran &lt;span&gt;lspci&lt;/span&gt; again and got:&lt;/p&gt;
&lt;pre&gt;
root@kali:~# lspci | grep Broadcom
&lt;/pre&gt;
&lt;p&gt;Eureka! The “Broadcom Limited 720p Facetime HD Camera” device was no longer listed. As we hoped!&lt;/p&gt;
&lt;p&gt;To be thorough, and setting our joy aside, we reconnected the camera cable and re-inserted the wifi card. We ran &lt;span&gt;lspci&lt;/span&gt; one more time and got:&lt;/p&gt;
&lt;pre&gt;
root@kali:~# lspci | grep Broadcom
03:00.0 Network controller: Broadcom Limited BCM4360 802.11ac Wireless Network Adapter (rev 03)
&lt;/pre&gt;
&lt;p&gt;This was exactly what we were hoping we’d see! The wireless network adapter was back now that the wireless card was re-inserted, but mystery Broadcom chip was still absent.&lt;/p&gt;
&lt;p&gt;To make sure we really covered all our bases, we booted to macOS from an external recovery disk to see if the camera and/or the Wi-Fi were working:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Wi-Fi worked with the wireless card inserted, and then stopped working when we removed it again. We found no problems using Wi-Fi with the BCM15700A2 removed&lt;/li&gt;
&lt;li&gt;The camera was no longer working at all. In fact, macOS’s Photo Booth reported “No Camera Available”&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;

&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://thenib.imgix.net/usq/a3dbb774-f1b2-4d42-bbb3-7113582335ba/64e347a3-2368-4f6c-880e-e29fd7914592.png?auto=compress,format&amp;amp;cs=srgb&amp;amp;_=51d934d118af1a4dbad7ba4d2955d83e&quot; class=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;span&gt;macOS Photo Booth reporting “No Camera Available” after desoldering the Broadcom BCM15700A2&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We are confident to say that the Broadcom BCM15700A2 chipset on the MacBook Air 2015 logic board is a multimedia controller, and not a wireless network controller as a few sites say.&lt;/p&gt;
&lt;p&gt;We hope this post helps others interested in air gapping or MacBook Air internals correctly identify the chip, and avoid turning the misidentification into a &lt;a href=&quot;https://www.nytimes.com/2000/01/01/us/c-a-correction-welcome-to-51254-000005.html&quot;&gt;self-perpetuating error&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And most importantly, we hope this post is a reminder that you should never trust what you read on the Internet – maybe not even this post….&lt;/p&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;

&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://thenib.imgix.net/usq/c2735a11-e39e-4cbd-8c72-752d41915c6b/296a7670-7404-4182-b2f2-50e99a97d5d0.jpeg?auto=compress,format&amp;amp;cs=srgb&amp;amp;_=8aba712dfe239e631f1c4d32ca0c5c11&quot; class=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;span&gt;Removed wireless card and desoldered Broadcom BCM15700A2 from MacBook Air&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 14 Jul 2018 00:09:29 +0000</pubDate>
<dc:creator>jeffo_rulez</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tech.firstlook.media/macbook-air-broadcom-bcm15700a2-mystery</dc:identifier>
</item>
<item>
<title>Stencila: An open source office suite for reproducible research</title>
<link>https://stenci.la/</link>
<guid isPermaLink="true" >https://stenci.la/</guid>
<description>&lt;p&gt;The calls for research to be transparent and reproducible have never been louder. But today's tools for reproducible research can be intimidating - especially if you're not a coder. Stencila make reproducible research more accessible with the intuitive word processor and spreadsheet interfaces that you and your colleagues are already used to.&lt;/p&gt;
</description>
<pubDate>Fri, 13 Jul 2018 20:30:43 +0000</pubDate>
<dc:creator>muraiki</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://stenci.la/</dc:identifier>
</item>
<item>
<title>Amazon’s share of the US e-commerce market is now 49%</title>
<link>https://techcrunch.com/2018/07/13/amazons-share-of-the-us-e-commerce-market-is-now-49-or-5-of-all-retail-spend/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/07/13/amazons-share-of-the-us-e-commerce-market-is-now-49-or-5-of-all-retail-spend/</guid>
<description>&lt;p&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://www.crunchbase.com/organization/amazon/&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;amazon&quot;&gt;Amazon&lt;/a&gt; has already been in the crosshairs of the White House when it comes to &lt;a href=&quot;https://www.nytimes.com/2018/05/03/business/amazon-the-elephant-in-the-antitrust-room.html&quot;&gt;threats&lt;/a&gt; of antitrust investigations, and while some say this is simply Trumpian bluster that has a &lt;a href=&quot;https://www.nytimes.com/2018/05/03/business/amazon-the-elephant-in-the-antitrust-room.html&quot;&gt;slim chance&lt;/a&gt; of going anywhere, some new numbers out from the researchers at &lt;a href=&quot;http://emarketer.com&quot;&gt;eMarketer&lt;/a&gt; could prove to be a fan to the flames.&lt;/p&gt;
&lt;p&gt;Amazon is set to clear $258.22 billion in US retail sales in 2018, according to eMarketer’s figures, which will work out to 49.1 percent of &lt;em&gt;all&lt;/em&gt; online retail spend in the country, and 5 percent of all retail sales.&lt;/p&gt;
&lt;p&gt;It started as an online bookstore, but today Amazon is a behemoth in all areas of e-commerce, fuelled by a strong Marketplace network of third-party sellers, an ever-expanding range of goods from groceries to fashion, and a very popular loyalty program in the form of Prime.&lt;/p&gt;
&lt;p&gt;Now, it is fast approaching a tipping point where more people will be spending money online with Amazon, than with all other retailers — combined. Amazon’s next-closest competitor, eBay, a very, very distant second at 6.6 percent, and Apple in third at 3.9 percent. Walmart, the world’s biggest retailer when counting physical stores, has yet to really hit the right note in e-commerce and comes in behind Apple with 3.7 percent of online sales in the US.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;vertical CToWUd a6T&quot; tabindex=&quot;0&quot; src=&quot;https://ci4.googleusercontent.com/proxy/-PgHRaD0RNJP5Hhc5s3ahdXC9QvNKKslptI01GPA-NGOw4sezOr_irA70Eq8twzHdkDkuoXWxb7iF_IM4chlz6WyOsRdoSmIn-7giMfCCg5V0YM4M5uYX0I3uRL-McaPCeKkEun9WM5y6Q5-jGR1oj7bxPGvtrdSTjQES17D0L2GgWVqxGujhcvqcwIiKP8lvROjpn4kosty7oIKSDibR_emQsc22rDqo9PhojqcIFdBE3A2A0FHwofEi4cC=s0-d-e1-ft#http://sentpressrelease.com/pressrelease/image/258076/ZU1hcmtldGVyX1RvcF8xMF9VU19Db21wYW5pZXNfUmFua2VkX2J5X1JldGFpbF9FY29tbWVyY2VfU2FsZXNfU2hhcmVfMjAxOF8yMzk0NDcuanBn&quot; width=&quot;450&quot; height=&quot;617&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The figures — which eMarketer says are estimates “based on an analysis of quantitative and qualitative data from research firms, government agencies, media firms and public companies, plus interviews with top executives at publishers, ad buyers and agencies” — are also remarkable not because of their size, but because of Amazon’s pace has not slowed down. Its sales are up 29.2 percent versus a year ago, when it commanded 43 percent of all e-commerce retail sales.&lt;/p&gt;
&lt;p&gt;The rocket ship for Amazon’s growth at the moment is its Marketplace — the platform where Amazon allows third-party sellers to use its retail and (if they choose) logistics infrastructure to sell and deliver items to Amazon shoppers. It’s currently accounting for 68 percent of all retail sales, working out to nearly $176 billion, versus 32 percent for Amazon’s direct sales, and eMarketer projects that by the end of this year, Marketplace’s share will be more than double that of Amazon’s own sales (it’s already about double).&lt;/p&gt;
&lt;p&gt;It’s no wonder that so many other online commerce businesses are chasing the marketplace model, which essentially creates transactions on two fronts for the platform operator, thereby improving margins that might be cut by not selling items directly.&lt;/p&gt;
&lt;p&gt;“The continued growth of Amazon’s Marketplace makes sense on a number of levels,” eMarketer principal analyst Andrew Lipsman notes in the eMarketer report. “More buyers transacting more often on Amazon will naturally attract third-party sellers. But because third-party transactions are also more profitable, Amazon has every incentive to make the process as seamless as possible for those selling on the platform.”&lt;/p&gt;
&lt;p&gt;In terms of popular categories, consumer electronics and tech continue to be the leading product category: eMarketer projects sales of $65.82 billion, around one-fourth of all turnover. Second will be apparel and accessories, which will pull in $39.88 billion of sales. Third in 2018 are health, personal care and beauty with $16 billion. Fourth is food and beverage at a distant $4.75 billion.&lt;/p&gt;
&lt;p&gt;All of these are already up by 38 percent or more over a year ago (see the full table below), but what’s perhaps most notable is how Amazon has been investing in being a direct player in each of the categories as well.&lt;/p&gt;
&lt;p&gt;In tech, it has its Kindles and Fire tablets, Fire TV, and of course its huge hit Alexa-powered Echo devices, among many other products. Apparel is being pushed heavily in the company’s private-label efforts. Amazon just the other week announced that it was acquiring online drug seller PillPack for $1 billion, which will be a major lever in its wider health products and services strategy. And lastly, there is Amazon’s acquisition of Whole Foods and its much wider play around meal kits and its server-free physical shops. The physical aspect, eMarketer believes, will play a strong role in Amazon’s growth in this category.&lt;/p&gt;
&lt;p&gt;“Amazon’s strategy for food and beverage is no different, in some respects, than it was for books—dominate the category,” eMarketer senior analyst Patricia Orsini notes in the report. “However, e-commerce in the grocery sector is a challenge. Share of online sales in this category is low because most people, for a host of reasons, prefer to buy food in brick-and-mortar stores. Amazon has an advantage because its shopper base is comfortable with shopping online. Along with insights gathered about Whole Foods shoppers, Amazon probably has the best chance of converting in-store grocery buyers to online grocery buyers.”&lt;/p&gt;
&lt;p&gt;All of these will not just boost Amazon’s own direct sales but help create an environment for people to come to Amazon to buy either these at price-busting rates, or other-brand alternatives.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;CToWUd a6T&quot; tabindex=&quot;0&quot; src=&quot;https://ci6.googleusercontent.com/proxy/O0Qa10BEiSJFTprTb0QMxoc7Dh5m7WazqibPgNyiZdE76tWvOaRIxxvfk3eXYOiAtS0q8VrO5at6RJ_4IuBWAN_qnyumtzY4oRUXueEtt0iRhLi2E9DRKUmlc8yB-fX_g_xhrY10orQbiI0_YgjEBvxxSxw64fN6Unir9g7fGfcjYtcHsI-wNY4sRYjdESI2NzyQOILXUma3KtqoXoVAzcks9LAJ3E-bSLsU1WW5_zXXeveDf9A_aWG5bXNJLE8vzfVDSgVIumG4=s0-d-e1-ft#http://sentpressrelease.com/pressrelease/image/258076/ZU1hcmtldGVyX1VTX0FtYXpvbl9SZXRhaWxfRWNvbW1lcmNlX1NhbGVzX2Zvcl9TZWxlY3RfUHJvZHVjdF9DYXRlZ29yaWVzXzIwMTYtMjAxOV8yMzkyNDYuanBn&quot; width=&quot;450&quot; height=&quot;393&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So far, people think that it is unlikely that Amazon would stand an antitrust investigation because e-commerce is still a small part of all commerce (as evidenced by the five percent of all retail sales figure), and Amazon would argue that in the world of “omnicommerce” it’s still just a bit player. However, Amazon’s dominance is clear when considering e-commerce alone.&lt;/p&gt;
</description>
<pubDate>Fri, 13 Jul 2018 17:55:27 +0000</pubDate>
<dc:creator>base</dc:creator>
<og:title>Amazon’s share of the US e-commerce market is now 49%, or 5% of all retail spend</og:title>
<og:description>Amazon has already been in the crosshairs of the White House when it comes to threats of antitrust investigations, and while some say this is simply Trumpian bluster that has a slim chance of going anywhere, some new numbers out from the researchers at eMarketer could prove to be a fan to the flame…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/04/gettyimages-696675012.jpg?w=600</og:image>
<og:url>http://social.techcrunch.com/2018/07/13/amazons-share-of-the-us-e-commerce-market-is-now-49-or-5-of-all-retail-spend/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/07/13/amazons-share-of-the-us-e-commerce-market-is-now-49-or-5-of-all-retail-spend/</dc:identifier>
</item>
<item>
<title>XARs: An efficient system for self-contained executables</title>
<link>https://code.fb.com/data-infrastructure/xars-a-more-efficient-open-source-system-for-self-contained-executables/</link>
<guid isPermaLink="true" >https://code.fb.com/data-infrastructure/xars-a-more-efficient-open-source-system-for-self-contained-executables/</guid>
<description>&lt;p&gt;Distributing large pieces of software to thousands of machines with a wide variety of configurations can pose a significant operational challenge, requiring a process to identify and copy precisely the right combination of dependent libraries and data files for each device. To make this faster, more robust, and more efficient, we have developed and deployed XARs, or e&lt;strong&gt;X&lt;/strong&gt;ecutable &lt;strong&gt;AR&lt;/strong&gt;chives, a system for distributing self-contained executables that encapsulate both data and code dependencies. Our research has demonstrated that XARs can deliver as intended when deployed across large networks. We are pleased to share XAR with the open source community via &lt;a href=&quot;https://github.com/facebookincubator/xar/&quot;&gt;GitHub&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/p/xar&quot;&gt;PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;XARs are single, highly compressed files containing all necessary executable dependencies. They execute with the same speed as natively installed applications and are designed to be the fastest way to distribute and execute large Python applications while maintaining maximum compatibility with the existing open source Python ecosystem. XARs can be run from anywhere on the filesystem, and they remove the need for virtual environments as well as worries about modules installed as part of the operating system. Executables simply work, and dependencies are isolated from the machine the system is running on. This creates a performant, hermetically compressed executable for Python packages. In sum, XARs are designed to serve a wide variety of use cases and to perform faster than all other self-contained executable distribution approaches.&lt;/p&gt;
&lt;p&gt;XARs can be used to deploy Python virtual environments, bundle Node.js applications, and even Lua tools. This can result in efficiency wins from lowered overhead for many types of Python tools, reduced size of the binaries deployed, and offer a more reliable production environment for Python tooling.&lt;/p&gt;
&lt;h2&gt;The road to XARs&lt;/h2&gt;
&lt;p&gt;XARs represent an evolution of Facebook’s work to create an optimal system to distribute a single executable that is independent of the operating system’s libraries. Statically linked binaries that minimize dependency management difficulties work well for C++ executables, but languages like Python, JavaScript, and even Lua present a different challenge: How do you place source code and data (such as SSL certificates or shared libraries) inside a single executable? What do you do about the dependencies the tool might have on modules installed on the host operating system?&lt;/p&gt;
&lt;p&gt;Initially, we used PARs (Python archives) that were similar to SHARs (shell archives). Every time an executable was run, it would decompress itself into a temporary directory, execute, and finish. However, this approach had inefficiencies, such as repeatedly decompressing files, and other shortcomings, such as leaving potentially hundreds of megabytes of now-unused files to clean up.&lt;/p&gt;
&lt;p&gt;Over time, we evolved that solution to be more efficient, through an approach similar to that of &lt;a href=&quot;https://pex.readthedocs.io/en/stable/&quot;&gt;PEX files&lt;/a&gt;: decompressing once, reusing the decompressed files, and then sharing common files between multiple PARs. After years of making this more efficient through various optimizations, we decided on a new approach and created XARs.&lt;/p&gt;
&lt;h2&gt;How XARs differ from other self-contained executables&lt;/h2&gt;
&lt;p&gt;XARs are self-contained executables that carry data and code (both native and interpreted), much like PARs and PEX files (which are self-contained Python virtual environments). Unlike PARs, however, XARs do not require explicit decompression. Instead, XARs are slightly modified &lt;a href=&quot;https://en.wikipedia.org/wiki/SquashFS&quot;&gt;squashfs&lt;/a&gt; files (see below for technical details) that mount themselves when executed and unmount after an idle timeout. They could almost be thought of as a self-executing container without the virtualization. By using the squashfs format, we not only distribute data in a far more compressed format than with a PAR (zip) file, but we also decompress on demand only the portions we need. Thanks to this architecture, XARs have nearly zero overhead in production and can be used just as native scripts or executables would be.&lt;/p&gt;
&lt;p&gt;XARs, like PARs, also have advantages for interpreted languages like Python. By collecting a Python script, associated data, and all native and Python dependencies, we achieve a &lt;em&gt;hermetic&lt;/em&gt; binary that can run anywhere in our infrastructure, regardless of operating system or packages already installed. In fact, this works for many Python tools as well as for JavaScript (Node.js), Lua tooling, and bundling multiple C++ executables and data files together, yielding a single archive that is smaller and can be moved as a single unit.&lt;/p&gt;
&lt;p&gt;This approach grants XARs many advantages over PARs, PEXs, and other similar options:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;More modules “just work” because they carry data and handle imports like normal directories. (Even with &lt;code&gt;zipimport&lt;/code&gt;, some modules fail, and not every library uses &lt;code&gt;pkg_resources&lt;/code&gt; properly.)&lt;/li&gt;
&lt;li&gt;Tools and services see faster start times, since they don’t need to write the contents of the PAR file to disk.&lt;/li&gt;
&lt;li&gt;Different invocations reuse the same mount point with data cached efficiently by the kernel.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;XARs achieve these performance gains by using a novel on-demand FUSE-based filesystem.&lt;/p&gt;
&lt;h2&gt;Measuring performance benefits&lt;/h2&gt;
&lt;p&gt;Optimizing performance (both space and execution time) was a key design goal for XARs. We ran benchmark tests with open source tools to compare PEX, XAR, and native installs on the following metrics:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Size:&lt;/strong&gt; file size, in bytes, of the executable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cold start time:&lt;/strong&gt; time taken when we have nothing mounted or extracted&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hot start time:&lt;/strong&gt; time taken when we have extracted cache or mounted XAR squashfs&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Results:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-9531&quot; src=&quot;https://code.fb.com/wp-content/uploads/2018/07/37013200_225182741649994_7449686775674437632_n.png?w=640&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;358&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The results show that both file size (with &lt;a href=&quot;https://code.fb.com/core-data/smaller-and-faster-data-compression-with-zstandard/&quot;&gt;zstd compression&lt;/a&gt;) and start times improve with XARs. This is an improvement when shipping to large number of servers, especially with short-running executables, such as small data collection scripts on web servers or interactive command line tools.&lt;/p&gt;
&lt;h2&gt;Sample usage&lt;/h2&gt;
&lt;p&gt;Facebook has created a &lt;strong&gt;bdist_xar&lt;/strong&gt; plugin for &lt;em&gt;setup.py&lt;/em&gt;, much like the &lt;strong&gt;wheel&lt;/strong&gt; module.&lt;br/&gt;To create a XAR, install the PyPI &lt;strong&gt;xar&lt;/strong&gt; module and run setup.py:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;pip install xar 
python3 path/to/setup.py bdist_xar&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Ubuntu 18.04&lt;/h2&gt;
&lt;p&gt;Ubuntu comes with Python 3.6.5 today and is an excellent distribution to run Python 3 applications. Here is a quick-start example for using a XAR to run the &lt;code&gt;black&lt;/code&gt; PyPI module on Ubuntu 18.04.&lt;/p&gt;
&lt;p&gt;1. Install XAR deps.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo apt install cmake g++ git libfuse-dev libz-dev python3-pip python3-venv squashfs-tools&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2. Today, we have to build squashfuse from source, as Ubuntu’s version does not contain &lt;code&gt;squashfuse_ll&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;wget &lt;a href=&quot;https://github.com/vasi/squashfuse/releases/download/0.1.103/squashfuse-0.1.103.tar.gz&quot;&gt;https://github.com/vasi/squashfuse/releases/download/0.1.103/squashfuse-0.1.103.tar.gz&lt;/a&gt;
tar xvzf squashfuse-0.1.103.tar.gz &amp;amp;&amp;amp; cd squashfuse-0.1.103 
./configure --prefix=/usr &amp;amp;&amp;amp; make
sudo make install&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3. Clone the XAR repo.&lt;/p&gt;
&lt;pre&gt;
git clone &lt;a href=&quot;https://github.com/facebookincubator/xar.git&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; data-lynx-mode=&quot;hover&quot; data-lynx-uri=&quot;https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Ffacebookincubator%2Fxar.git&amp;amp;h=AT0sb9-fbpeQWYCZPqWDCCa5r0R0A22LLMYV9N9NqdPbp3ORXKVoPQi4iAsIf9mOksys8cJygELkwUEeyZxnA991A9rCcbRSNgmP7xABh0sYvcaI5VcyjnBr0EC7UNQFUXTmt1kVyA&quot;&gt;https://github.com/facebookincubator/xar.git&lt;/a&gt; &amp;amp;&amp;amp; cd xar
&lt;/pre&gt;
&lt;p&gt;4. Build.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build &amp;amp;&amp;amp; cmake .. &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;5. Make the base XAR mountpoint.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo mkdir /mnt/xarfuse &amp;amp;&amp;amp; sudo chmod 01777 /mnt/xarfuse&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;6. Create a virtualenv + install xar &lt;code&gt;setup.py&lt;/code&gt; plugin.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd ..  # root dir of xar repo
python3 -m venv /tmp/xar
python3 -m pip install --upgrade pip
/tmp/xar/bin/pip install .
Successfully installed wheel-0.31.1 xar-18.6.11&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;7. Clone + install &lt;strong&gt;black&lt;/strong&gt; to the virtualenv.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd ..
git clone https://github.com/ambv/black.git &amp;amp;&amp;amp; cd black
/tmp/xar/bin/pip install .&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;8. Build a XAR of black.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/tmp/xar/bin/python3 setup.py bdist_xar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;9. Test XAR executable.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;dist/black.xar --help&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;macos 10.13+&lt;/h2&gt;
&lt;p&gt;MacOS does not ship with a native FUSE filesystem. Instead, we use &lt;strong&gt;&lt;a href=&quot;https://osxfuse.github.io/&quot;&gt;FUSE for macOS&lt;/a&gt;&lt;/strong&gt; to mount user-space filesystems. Like above, let’s set up a vanilla macOS 10.13.4 install to run the &lt;code&gt;black&lt;/code&gt; PyPI module as a XAR.&lt;/p&gt;
&lt;p&gt;1. Ensure that you have FUSE for macOS installed.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;brew cask install osxfuse&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2. Install XAR.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;brew tap facebook/homebrew-fb
brew install xar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3. Make the base XAR mountpoint.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo mkdir /mnt/xarfuse &amp;amp;&amp;amp; sudo chmod 01777 /mnt/xarfuse&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4. Create a Virtualenv + Install xar &lt;code&gt;setup.py&lt;/code&gt; plugin.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone &lt;a href=&quot;https://github.com/facebookincubator/xar.git&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; data-lynx-mode=&quot;hover&quot; data-lynx-uri=&quot;https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Ffacebookincubator%2Fxar.git&amp;amp;h=AT0sb9-fbpeQWYCZPqWDCCa5r0R0A22LLMYV9N9NqdPbp3ORXKVoPQi4iAsIf9mOksys8cJygELkwUEeyZxnA991A9rCcbRSNgmP7xABh0sYvcaI5VcyjnBr0EC7UNQFUXTmt1kVyA&quot;&gt;https://github.com/facebookincubator/xar.git&lt;/a&gt; &amp;amp;&amp;amp; cd xar
python3 -m venv /tmp/xar
python3 -m pip install --upgrade pip
/tmp/xar/bin/pip install .
Successfully installed wheel-0.31.1 xar-18.7.11
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;5. Clone + install &lt;strong&gt;black&lt;/strong&gt; to the virtualenv.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd ..
git clone https://github.com/ambv/black.git &amp;amp;&amp;amp; cd black
/tmp/xar/bin/pip install .&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;6. Build a XAR of black.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/tmp/xar/bin/python3 setup.py bdist_xar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;7. Test XAR executable.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;dist/black.xar --help&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Additional technical details&lt;/h2&gt;
&lt;p&gt;How &lt;em&gt;exactly&lt;/em&gt; do XARs work? A XAR is a simple combination of a few primitives:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A four-kilobyte preamble that is a shebang pointing to a helper executable (&lt;code&gt;#!/usr/bin/env xarexec_fuse&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A helper, &lt;code&gt;xarexec_fuse&lt;/code&gt;, that knows how to read the XAR file, mount it if necessary, and execute the Python (or Lua or …) script inside&lt;/li&gt;
&lt;li&gt;A FUSE filesystem, &lt;code&gt;squashfuse_ll&lt;/code&gt;, that is responsible for making the squashfs file look like a normal directory of files (and, by using FUSE, XARs don’t require root to run and can run on OS X).&lt;/li&gt;
&lt;li&gt;(optional) Since squashfs supports &lt;a href=&quot;https://github.com/facebook/zstd&quot;&gt;Zstandard compression&lt;/a&gt; (another Facebook open source offering), we can achieve far better compression ratios and faster decompression speed than zlib-based zip files can.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Combining those primitives gives us XAR. In addition to being responsible for the mounted filesystem, &lt;code&gt;squashfuse_ll&lt;/code&gt; will also unmount and exit if the contents of the filesystem aren’t accessed, allowing XARs to clean themselves up without intervention.&lt;/p&gt;
&lt;p&gt;It is worth noting that nothing in XAR is Python specific. In fact, it’s even possible to create create a XAR file containing a native C or C++ executable, and the result is a smaller file on disk. It is also possible to use any scripting language, even bash, and deliver data alongside code.&lt;/p&gt;
&lt;h2&gt;What comes next&lt;/h2&gt;
&lt;p&gt;The path that brought Facebook to XARs was spread over years of iteration, experimentation, and optimization. We’re not done yet; we’re always working to make XARs even more efficient and have plans for improving the efficiency of &lt;code&gt;squashfuse_ll&lt;/code&gt;. Additionally, while focused initially on Python, as mentioned above, XARs have found other use cases for other languages, and we are excited to continue expanding the languages and use cases.&lt;/p&gt;
&lt;p&gt;We are excited to share XARs with the community and look forward to seeing how you use and help us improve them. PRs and suggestions are welcome!&lt;/p&gt;

</description>
<pubDate>Fri, 13 Jul 2018 16:02:43 +0000</pubDate>
<dc:creator>terrelln</dc:creator>
<og:title>XARs: An efficient system for self-contained executables</og:title>
<og:description>Facebook Open Source</og:description>
<og:type>article</og:type>
<og:image>https://code.fb.com/wp-content/uploads/2018/07/xar_hero3.jpg?w=640</og:image>
<og:url>https://code.fb.com/data-infrastructure/xars-a-more-efficient-open-source-system-for-self-contained-executables/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://code.fb.com/data-infrastructure/xars-a-more-efficient-open-source-system-for-self-contained-executables/</dc:identifier>
</item>
<item>
<title>Microsoft Urges Congress to Regulate Use of Facial Recognition</title>
<link>https://www.nytimes.com/2018/07/13/technology/microsoft-facial-recognition.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/07/13/technology/microsoft-facial-recognition.html</guid>
<description>&lt;div readability=&quot;41.506849315068&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;29.298952457695&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Microsoft on Friday became the first tech giant to join a growing &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.icrac.net/open-letter-to-amazon-against-police-and-government-use-of-rekognition/&quot; title=&quot;Academics letter to Amazon.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;call for regulations&lt;/a&gt; to limit the use of facial recognition technology.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In a lengthy blog post about the potential uses and abuses of facial recognition, Bradford L. Smith, the company’s president, compared the technology to products like medicines and cars that are highly regulated, and he urged Congress to study it and oversee its use.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;“We live in a nation of laws, and the government needs to play an important role in regulating facial recognition technology,” &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://news.microsoft.com/exec/brad-smith/&quot; title=&quot;Mr. Smith's bio.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Mr. Smith&lt;/a&gt; wrote. He added: “A world with vigorous regulation of products that are useful but potentially troubling is better than a world devoid of legal standards.”&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Tech giants rarely advocate regulation of their innovations, and Mr. Smith’s unusual entreaty illustrates how powerful technologies involving artificial intelligence — including facial recognition — have set off a contentious battle among tech executives. These technologies have the potential to remake industries. They could also reduce workers’ job prospects or result in unequal opportunities for consumers, leading some to argue that the products are too risky for tech companies to deploy without government oversight.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;37.5&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;20&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Mr. Smith’s appeal also comes as Silicon Valley is facing withering scrutiny from lawmakers and privacy experts. Several companies have been harshly criticized in recent months for their role in spreading false information during the 2016 election, and exploiting users’ personal data. In response, some businesses, like Facebook, have expressed more openness to regulation of practices like political advertising.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;With many of its rivals under fire, Microsoft has aggressively tried to position itself as the moral compass of the industry. Company executives have been outspoken about safeguarding users’ privacy as well as warning about the potential discriminatory effects of using automated algorithm to make important decisions like hiring.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;35.5&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;16&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Now that facial recognition has become a new lightning rod for critics, Microsoft is taking the lead in calling for some regulatory restraint.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;The powerful technology can be used to identify people in photos or video feeds without their knowledge or permission. Proponents see it as a potentially important tool for identifying criminals, but civil liberties experts have warned that the technology could enable mass surveillance, hindering people’s ability to freely attend political protests or go about their day-to-day lives in anonymity.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;40.844540853218&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;32.853217642805&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In April, privacy groups &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://epic.org/foia/ftc/facebook/EPIC-v-FTC-Complaint.pdf&quot; title=&quot;The complaint&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;filed a complaint&lt;/a&gt; with the Federal Trade Commission saying that Facebook had turned on new face-matching services &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/07/09/technology/facebook-facial-recognition-privacy.html&quot; title=&quot;Times' story on the topic.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;without obtaining appropriate permission&lt;/a&gt; of users. Facebook has denied the groups’ accusations.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In May, the American Civil Liberties Union and other civil rights groups &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/05/22/technology/amazon-facial-recognition.html&quot; title=&quot;Times' story on the topic&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;asked Amazon to stop selling&lt;/a&gt; its face-matching service, Rekognition, to law enforcement agencies. (The New York Times recently used Amazon’s services to help identify attendees at the &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/05/19/world/europe/royal-wedding-live.html&quot; title=&quot;&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;royal wedding of Prince Harry and Meghan Markle&lt;/a&gt;.)&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In calling for government oversight of facial recognition, Microsoft may be trying to get ahead of any new state efforts to tightly regulate the technology. Mr. Smith, the company’s president, suggested that governments around the world examine both law enforcement and commercial uses of the technology.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;“Should law enforcement use of facial recognition be subject to human oversight and controls?” he wrote. “Should the law require that companies obtain prior consent before collecting individuals’ images for facial recognition?”&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In the European Union, many of these questions have already been settled.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;A tough &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/04/08/technology/a-tough-task-for-facebook-european-type-privacy-for-all.html&quot; title=&quot;Times' story on the law.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;new data protection law&lt;/a&gt; there generally prohibits companies from collecting the biometric data needed for facial recognition without first obtaining users’ specific consent. Illinois has similar restrictions.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;32.563440860215&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;11.664516129032&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In his blog post, Mr. Smith said Congress should appoint a commission to study the issue and make recommendations on potential regulations. The Federal Trade Commission has already examined facial recognition, recommending in &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.ftc.gov/news-events/press-releases/2012/10/ftc-recommends-best-practices-companies-use-facial-recognition&quot; title=&quot;FTC information on the report&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;a 2012 report&lt;/a&gt; that certain companies “provide consumers with an easy-to-use choice not to have their biometric data collected and used for facial recognition.” But Congress never took up those recommendations and enacted them into law.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;50.096755833808&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;49.169038133182&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Civil liberties and privacy advocates said they both welcomed and felt wary of Microsoft’s push for government regulation, questioning how committed the company was to strong user privacy controls.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In May, for instance, Satya Nadella, Microsoft’s chief executive, said at a company developer conference that privacy was a “human right.” Yet in June, Microsoft &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://cal-access.sos.ca.gov/Campaign/Committees/Detail.aspx?id=1401518&amp;amp;view=late1&quot; title=&quot;The Campaign finance disclosure form.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;donated $195,000&lt;/a&gt; to an effort to defeat a consumer privacy bill in California.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;“People have a right to go about their lives without having their faces scanned in secret — by companies or the government,” said &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.law.georgetown.edu/faculty/alvaro-bedoya/&quot; title=&quot;Professor Bedoya's bio&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Alvaro Bedoya&lt;/a&gt;, director of the Center on Privacy &amp;amp; Technology at Georgetown Law, who has &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.perpetuallineup.org&quot; title=&quot;Georgetown Law study on police use of the technology&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;studied facial recognition&lt;/a&gt;. “Will Microsoft agree that companies should never scan your face without your permission? Will it agree that government face scans should be tightly controlled and in some cases banned?”&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;April Isenhower, a spokeswoman for Microsoft, said that the company had long been committed to privacy, including pushing for a national consumer privacy law in the United States since 2005.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Tech companies are spreading facial recognition in part because it provides a powerful way for them to connect consumers’ online and real lives.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Over the last few years, Amazon, Apple, Facebook, Google and Microsoft have each filed face recognition patents. Last year, Apple introduced Face ID, a service that enables iPhone X owners to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.slate.com/blogs/future_tense/2017/09/12/the_iphone_x_s_face_id_is_a_major_privacy_concern.html&quot; title=&quot;Slate story on the topic.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;unlock their phones with their face&lt;/a&gt;. Many Windows laptops have a similar feature.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Earlier this year, Google’s Art &amp;amp; Culture app created a craze after it added a feature that could match users’ selfies with similar faces in well-known paintings. Google also recently introduced a camera, called &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://store.google.com/us/product/google_clips?hl=en-US&quot; title=&quot;Google marketing site for the product&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Clips, with facial recognition&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;50.110889110889&quot;&gt;
&lt;div class=&quot;css-1h6whtw&quot; readability=&quot;46.705294705295&quot;&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;In addition to using facial recognition for its own consumer services, Microsoft — like Amazon — also sells the software to others.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Microsoft markets technology that can detect faces in photos, as well as facial features like hair color, and emotions like anger or disgust, according to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://azure.microsoft.com/en-us/services/cognitive-services/face/?v=18.05&quot; title=&quot;The site&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;its website&lt;/a&gt;. It also sells facial recognition software that “enables you to search, identify, and match faces in your private repository of up to one million people,” the site said. Uber has used the technology to verify drivers’ identities, according to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://customers.microsoft.com/en-us/story/uber&quot; title=&quot;Microsoft marketing material&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Microsoft marketing materials&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Mr. Smith wrote in the blog post that Microsoft was examining its own development and marketing of the technology.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;&lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/02/09/technology/facial-recognition-race-artificial-intelligence.html&quot; title=&quot;Times' story on the topic.&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;A recent study&lt;/a&gt; led by an M.I.T. researcher found that facial recognition software from Microsoft and IBM was much more accurate in identifying white men than darker-skinned females. Mr. Smith said the company was working to improve the accuracy of its facial recognition and to reduce the potential for bias.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;He also said Microsoft had rejected facial recognition requests from certain customers “where we’ve concluded that there are greater human rights risks,” and that the company was committed to “establishing a transparent set of principles” for the technology.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Microsoft employees recently protested the company’s contract with Immigration and Customs Enforcement, the federal agency that has been involved in the separation of migrant children from their families at the border. In his blog post, Mr. Smith wrote that the company’s contract with that agency “isn’t being used for facial recognition” or to separate families.&lt;/p&gt;
&lt;p class=&quot;css-1i0edl6 e2kc3sl0&quot;&gt;Ms. Isenhower, the Microsoft spokeswoman, declined to answer questions about whether the company provided facial recognition services to other government agencies or whether it had put any specific restrictions on its customers’ use of the technology. She also declined to discuss the company’s position on consumer consent for facial recognition.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-14jsv4e&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;25.666666666667&quot;&gt;

&lt;div class=&quot;css-3glrhn&quot; readability=&quot;7.21875&quot;&gt;A version of this article appears in print on , on Page B1 of the New York edition with the headline: Microsoft Urges Rules for Facial Recognition&lt;span&gt;. &lt;a href=&quot;http://www.nytreprints.com/&quot;&gt;Order Reprints&lt;/a&gt; | &lt;a href=&quot;http://www.nytimes.com/pages/todayspaper/index.html&quot;&gt;Today’s Paper&lt;/a&gt; | &lt;a href=&quot;https://www.nytimes.com/subscriptions/Multiproduct/lp8HYKU.html?campaignId=48JQY&quot;&gt;Subscribe&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;

&lt;/div&gt;</description>
<pubDate>Fri, 13 Jul 2018 15:51:55 +0000</pubDate>
<dc:creator>doener</dc:creator>
<og:url>https://www.nytimes.com/2018/07/13/technology/microsoft-facial-recognition.html</og:url>
<og:type>article</og:type>
<og:title>Microsoft Urges Congress to Regulate Use of Facial Recognition</og:title>
<og:image>https://static01.nyt.com/images/2018/07/14/business/14MICROSOFT-3/14MICROSOFT-3-facebookJumbo-v4.jpg</og:image>
<og:description>Amid a growing call for governments to rein in the use of the technology, Microsoft became the first tech giant to join the chorus.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/07/13/technology/microsoft-facial-recognition.html</dc:identifier>
</item>
<item>
<title>Dhall – A Distributed, Safe Configuration Language</title>
<link>https://github.com/dhall-lang/dhall-lang</link>
<guid isPermaLink="true" >https://github.com/dhall-lang/dhall-lang</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/dhall-lang/dhall-lang/blob/master/img/dhall-logo.png&quot;&gt;&lt;img src=&quot;https://github.com/dhall-lang/dhall-lang/raw/master/img/dhall-logo.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dhall is a programmable configuration language that is not Turing-complete&lt;/p&gt;
&lt;p&gt;You can think of Dhall as: JSON + functions + types + imports&lt;/p&gt;
&lt;h2&gt;Table of contents&lt;/h2&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;The easiest way to get started experimenting with Dhall is to install the &lt;code&gt;dhall-to-json&lt;/code&gt; and/or &lt;code&gt;dhall-to-yaml&lt;/code&gt; executables, which enable you to generate JSON and YAML, respectively, on the command line. Platform- and runtime-specific installation instructions can be found in &lt;a href=&quot;https://github.com/dhall-lang/dhall-lang/wiki/Getting-started%3A-Generate-JSON-or-YAML&quot;&gt;the Dhall wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Case study&lt;/h2&gt;
&lt;p&gt;Expand the details below for an example motivating the use of Dhall:&lt;/p&gt;
&lt;details&gt;Detailed example of using Dhall
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The following examples require at least version &lt;code&gt;1.14.0&lt;/code&gt; of &lt;a href=&quot;https://github.com/dhall-lang/dhall-haskell&quot;&gt;the interpreter&lt;/a&gt;.&lt;br/&gt;For an example compatible with an older version you might want to refer to an &lt;a href=&quot;https://github.com/dhall-lang/dhall-lang/blob/1b74481c87b3ed83ecd613420c11de92335652a3/README.md&quot;&gt;older revision&lt;/a&gt; of this document.&lt;br/&gt;For more details about the migration between versions, check &lt;a href=&quot;https://github.com/dhall-lang/dhall-lang/wiki/Migration%3A-Swapped-syntax-for-Natural-numbers-and-Integers&quot;&gt;this wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's motivate Dhall by considering the following JSON configuration representing Haskell package metadata (wrapped to 80 columns):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-json&quot;&gt;
&lt;pre&gt;
[
    {
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;author&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;license&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Copyright 2017 Gabriel Gonzalez&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;Redistribution and use in&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; source and binary forms, with or without&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;modification, are permitted provided &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;that the following conditions are met:&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;1. Redistributions of source code must&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; retain the above copyright notice, this&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   list of conditions and the followin&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;g disclaimer.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;2. Redistributions in binary form must reproduce the above copy&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;right notice,&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   this list of conditions and the following disclaimer in the do&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;cumentation&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   and/or other materials provided with the distribution.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;3. Nei&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ther the name of the copyright holder nor the names of its contributors&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   may &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;be used to endorse or promote products derived from this software without&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   sp&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ecific prior written permission.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT H&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;OLDERS AND CONTRIBUTORS &lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; AND&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;ANY EXPRESS OR IMPLIED WARRANTIES, INCLUD&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ING, BUT NOT LIMITED TO, THE IMPLIED&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;WARRANTIES OF MERCHANTABILITY AND FITNESS &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;FOR A PARTICULAR PURPOSE ARE&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; OR CONTRIBUTORS BE LIABLE&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMP&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;LARY, OR CONSEQUENTIAL&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF S&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;UBSTITUTE GOODS OR&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRU&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;PTION) HOWEVER&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRI&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;CT LIABILITY,&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OU&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;T OF THE USE&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAG&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;E.&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    },
    {
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;author&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;license&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Copyright 2012 Michael Snoyman&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;Permission is hereby grant&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ed, free of charge, to any person obtaining a copy of this software and associat&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ed documentation files (the &lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;Software&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;), to deal in the Software without restr&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;iction, including without limitation the rights to use, copy, modify, merge, pub&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;lish, distribute, sublicense, and/or sell copies of the Software, and to permit &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;persons to whom the Software is furnished to do so, subject to the following con&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ditions:&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;The above copyright notice and this permission notice shall be inclu&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ded in all copies or substantial portions of the Software.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;THE SOFTWARE IS PR&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;OVIDED &lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BU&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;T NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PUR&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;POSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRA&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;CT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE O&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;R THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    },
    {
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;author&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;license&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Copyright 2012 Simon Marlow&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;Redistribution and use in sou&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;rce and binary forms, with or without&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;modification, are permitted provided that&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; the following conditions are met:&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;1. Redistributions of source code must ret&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ain the above copyright notice, this&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   list of conditions and the following di&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;sclaimer.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;2. Redistributions in binary form must reproduce the above copyrigh&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;t notice,&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   this list of conditions and the following disclaimer in the docume&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ntation&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   and/or other materials provided with the distribution.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;3. Neither&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; the name of the copyright holder nor the names of its contributors&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   may be u&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;sed to endorse or promote products derived from this software without&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;   specif&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ic prior written permission.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDE&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;RS AND CONTRIBUTORS &lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; AND&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; BUT NOT LIMITED TO, THE IMPLIED&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;WARRANTIES OF MERCHANTABILITY AND FITNESS FOR &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;A PARTICULAR PURPOSE ARE&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;CONTRIBUTORS BE LIABLE&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;, OR CONSEQUENTIAL&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBST&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ITUTE GOODS OR&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTIO&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;N) HOWEVER&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT L&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;IABILITY,&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; THE USE&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    },
    {
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;author&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;license&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Copyright 2010 John Milikin&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;Permission is hereby granted,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; free of charge, to any person obtaining a copy of this software and associated &lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;documentation files (the &lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;Software&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;), to deal in the Software without restrict&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ion, including without limitation the rights to use, copy, modify, merge, publis&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;h, distribute, sublicense, and/or sell copies of the Software, and to permit per&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;sons to whom the Software is furnished to do so, subject to the following condit&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;ions:&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;The above copyright notice and this permission notice shall be included&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; in all copies or substantial portions of the Software.&lt;span class=&quot;pl-cce&quot;&gt;\n\n&lt;/span&gt;THE SOFTWARE IS PROVI&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;DED &lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT N&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;OT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOS&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;E AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIA&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;BLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt; TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR T&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;HE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;How can I make the above configuration file easier to read and edit?&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The above configuration file is difficult to read because of the large license texts formatted as long uninterrupted lines. We can make the configuration more readable by converting the JSON configuration file to a Dhall configuration file, which supports multi-line string literals (like YAML):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; example0.dhall&lt;/span&gt;

[   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Gabriel&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Gonzalez&lt;/span&gt;

            &lt;span class=&quot;pl-ent&quot;&gt;Redistribution&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; use &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; source &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; binary forms, with &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; without
            modification, are permitted provided that the following conditions are met&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;

            &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; source code must retain the above copyright notice, this
               list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;

            &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; binary form must reproduce the above copyright notice,
               this list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; the documentation
               &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; other materials provided with the distribution&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;

            &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Neither&lt;/span&gt; the name &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the copyright holder nor the names &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; its contributors
               may be used to endorse &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; promote products derived from this software without
               specific prior written permission&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;

            &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ARE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;DISCLAIMED&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INDIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCIDENTAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;SPECIAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXEMPLARY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONSEQUENTIAL&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;PROCUREMENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUBSTITUTE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;GOODS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SERVICES&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;LOSS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DATA&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROFITS&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUSINESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;INTERRUPTION&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;HOWEVER&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;CAUSED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THEORY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;STRICT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NEGLIGENCE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WAY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EVEN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ADVISED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;POSSIBILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUCH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DAMAGE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Michael&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Snoyman&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;Permission&lt;/span&gt; is hereby granted, free &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; charge, to &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; person obtaining a copy &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt;
            this software &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; associated documentation files (the &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Software&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;), to deal &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;
            the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; without restriction, including without limitation the rights to
            use, copy, modify, merge, publish, distribute, sublicense, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; sell copies
            &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; to permit persons to whom the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; is furnished to &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
            so, subject to the following conditions&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;The&lt;/span&gt; above copyright notice &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; this permission notice shall be included &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;all&lt;/span&gt;
            copies &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; substantial portions &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WITHOUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;KIND&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NONINFRINGEMENT&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;AUTHORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CLAIM&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ACTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FROM&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONNECTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DEALINGS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Simon&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Marlow&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;Redistribution&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; use &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; source &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; binary forms, with &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; without
            modification, are permitted provided that the following conditions are met&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;
            
            &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; source code must retain the above copyright notice, this
               list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
            
            &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; binary form must reproduce the above copyright notice,
               this list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; the documentation
               &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; other materials provided with the distribution&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
            
            &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Neither&lt;/span&gt; the name &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the copyright holder nor the names &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; its contributors
               may be used to endorse &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; promote products derived from this software without
               specific prior written permission&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ARE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;DISCLAIMED&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INDIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCIDENTAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;SPECIAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXEMPLARY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONSEQUENTIAL&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;PROCUREMENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUBSTITUTE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;GOODS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SERVICES&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;LOSS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DATA&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROFITS&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUSINESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;INTERRUPTION&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;HOWEVER&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;CAUSED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THEORY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;STRICT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NEGLIGENCE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WAY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EVEN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ADVISED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;POSSIBILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUCH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DAMAGE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;John&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Milikin&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;Permission&lt;/span&gt; is hereby granted, free &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; charge, to &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; person obtaining a copy &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt;
            this software &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; associated documentation files (the &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Software&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;), to deal &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;
            the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; without restriction, including without limitation the rights to
            use, copy, modify, merge, publish, distribute, sublicense, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; sell copies
            &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; to permit persons to whom the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; is furnished to &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
            so, subject to the following conditions&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;The&lt;/span&gt; above copyright notice &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; this permission notice shall be included &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;all&lt;/span&gt;
            copies &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; substantial portions &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WITHOUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;KIND&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NONINFRINGEMENT&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;AUTHORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CLAIM&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ACTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FROM&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONNECTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DEALINGS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... which we can always convert back to the original JSON configuration by running:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ dhall-to-json --pretty &amp;lt;&amp;lt;&amp;lt; 'example0.dhall'
[
    {
        &quot;name&quot;: &quot;dhall&quot;,
        &quot;author&quot;: &quot;Gabriel Gonzalez&quot;,
        &quot;license&quot;: &quot;Copyright 2017 Gabriel Gonzalez\n\nRedistribution and us...&quot;
    },
    {
        &quot;name&quot;: &quot;conduit&quot;,
        &quot;author&quot;: &quot;Michael Snoyman&quot;,
        &quot;license&quot;: &quot;Copyright 2012 Michael Snoyman\n\nPermission is hereby g...&quot;
    },
    {
        &quot;name&quot;: &quot;async&quot;,
        &quot;author&quot;: &quot;Simon Marlow&quot;,
        &quot;license&quot;: &quot;Copyright 2012 Simon Marlow\n\nRedistribution and use in...&quot;
    },
    {
        &quot;name&quot;: &quot;system-filepath&quot;,
        &quot;author&quot;: &quot;John Milikin&quot;,
        &quot;license&quot;: &quot;Copyright 2010 John Milikin\n\nPermission is hereby gran...&quot;
    }
]
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;I still can't tell at a glance which license is which&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We could add comments with the name of each license (since Dhall, unlike JSON, supports comments):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
[   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; BSD 3-Clause&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Gabriel&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Gonzalez&lt;/span&gt;

            &lt;span class=&quot;pl-ent&quot;&gt;Redistribution&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; use &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; source &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; binary forms, with &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; without
            &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EVEN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ADVISED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;POSSIBILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUCH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DAMAGE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; MIT&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Michael&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Snoyman&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;Permission&lt;/span&gt; is hereby granted, free &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; charge, to &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; person obtaining a copy &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt;
            &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; BSD 3-Clause&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Simon&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Marlow&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;Redistribution&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; use &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; source &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; binary forms, with &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; without
            &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EVEN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ADVISED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;POSSIBILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUCH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DAMAGE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; MIT&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;John&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Milikin&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;Permission&lt;/span&gt; is hereby granted, free &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; charge, to &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; person obtaining a copy &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt;
            &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
    }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... or we could define named functions to build each type of license, like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; example1.dhall&lt;/span&gt;

    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;Clause&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; }) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;show&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year} &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author}
    
            &lt;span class=&quot;pl-ent&quot;&gt;Redistribution&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; use &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; source &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; binary forms, with &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; without
            modification, are permitted provided that the following conditions are met&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;
    
            &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; source code must retain the above copyright notice, this
               list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
    
            &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; binary form must reproduce the above copyright notice,
               this list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; the documentation
               &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; other materials provided with the distribution&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
    
            &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Neither&lt;/span&gt; the name &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the copyright holder nor the names &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; its contributors
               may be used to endorse &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; promote products derived from this software without
               specific prior written permission&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
    
            &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ARE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;DISCLAIMED&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INDIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCIDENTAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;SPECIAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXEMPLARY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONSEQUENTIAL&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;PROCUREMENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUBSTITUTE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;GOODS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SERVICES&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;LOSS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DATA&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROFITS&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUSINESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;INTERRUPTION&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;HOWEVER&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;CAUSED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THEORY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;STRICT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NEGLIGENCE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WAY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EVEN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ADVISED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;POSSIBILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUCH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DAMAGE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MIT&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; }) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; ''
            &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;show&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year} &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author}
            
            &lt;span class=&quot;pl-ent&quot;&gt;Permission&lt;/span&gt; is hereby granted, free &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; charge, to &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; person obtaining a copy &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt;
            this software &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; associated documentation files (the &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Software&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;), to deal &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;
            the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; without restriction, including without limitation the rights to
            use, copy, modify, merge, publish, distribute, sublicense, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; sell copies
            &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; to permit persons to whom the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; is furnished to &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
            so, subject to the following conditions&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;The&lt;/span&gt; above copyright notice &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; this permission notice shall be included &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;all&lt;/span&gt;
            copies &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; substantial portions &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
            
            &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WITHOUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;KIND&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NONINFRINGEMENT&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;AUTHORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CLAIM&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ACTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FROM&lt;/span&gt;,
            &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONNECTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DEALINGS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
            &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
        ''
 
&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  [   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;Clause&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
        }
    ,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MIT&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
        }
    ,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;Clause&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
        }
    ,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MIT&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
        }
    ]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can easily tell at a glance which license each package uses without the use of comments&lt;/p&gt;
&lt;p&gt;Dhall supports anonymous functions using the following syntax:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
λ(inputName &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; inputType) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; output
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  The name of the function input is &quot;args&quot;, short for &quot;arguments&quot;
  ↓
λ(args : { year : Natural, author : Text }) → ...
         ↑
         &quot;args&quot; is a record with two fields named &quot;year&quot; and &quot;author&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;I can't type Unicode characters like &lt;code&gt;'λ'&lt;/code&gt; and &lt;code&gt;'→'&lt;/code&gt;&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dhall supports ASCII equivalents of all Unicode characters, such as &lt;code&gt;\&lt;/code&gt; instead of &lt;code&gt;λ&lt;/code&gt; and &lt;code&gt;-&amp;gt;&lt;/code&gt; instead of &lt;code&gt;→&lt;/code&gt;. However, this tutorial will use Unicode everywhere because it's prettier.&lt;/p&gt;
&lt;p&gt;If you would like to try to type Unicode characters, you can follow these instructions for various platforms:&lt;/p&gt;
&lt;p&gt;The Unicode code points for the above symbols are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;λ (U+03BB)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;→ (U+2192)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;The license text is still too distracting. Could we move it out of this configuration into another file?&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can move anything in Dhall (values, functions, types) into separate files and they can refer to each other by their relative or absolute paths. For example, we can factor out the &lt;code&gt;MIT&lt;/code&gt; and &lt;code&gt;BSD-3-Clause&lt;/code&gt; functions out into separate files, like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; BSD-3-Clause.dhall&lt;/span&gt;

λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; }) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; ''
    &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;show&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year} &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author}

    &lt;span class=&quot;pl-ent&quot;&gt;Redistribution&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; use &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; source &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; binary forms, with &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; without
    modification, are permitted provided that the following conditions are met&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; source code must retain the above copyright notice, this
       list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;

    &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Redistributions&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; binary form must reproduce the above copyright notice,
       this list &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; conditions &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; the following disclaimer &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; the documentation
       &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; other materials provided with the distribution&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;

    &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Neither&lt;/span&gt; the name &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the copyright holder nor the names &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; its contributors
       may be used to endorse &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; promote products derived from this software without
       specific prior written permission&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;

    &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ARE&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;DISCLAIMED&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRIBUTORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INDIRECT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCIDENTAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;SPECIAL&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXEMPLARY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONSEQUENTIAL&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;PROCUREMENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUBSTITUTE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;GOODS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;SERVICES&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;LOSS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DATA&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROFITS&lt;/span&gt;; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUSINESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;INTERRUPTION&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;HOWEVER&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;CAUSED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THEORY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;STRICT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;,
    &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; (&lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NEGLIGENCE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;) &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WAY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EVEN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ADVISED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;POSSIBILITY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SUCH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DAMAGE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
''
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; MIT.dhall&lt;/span&gt;

λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; }) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; ''
    &lt;span class=&quot;pl-ent&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{&lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;show&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year} &lt;span class=&quot;pl-k&quot;&gt;$&lt;/span&gt;{args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author}
    
    &lt;span class=&quot;pl-ent&quot;&gt;Permission&lt;/span&gt; is hereby granted, free &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; charge, to &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; person obtaining a copy &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt;
    this software &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; associated documentation files (the &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Software&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;), to deal &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;
    the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; sell copies
    &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; to permit persons to whom the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt; is furnished to &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
    so, subject to the following conditions&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;
    
    &lt;span class=&quot;pl-ent&quot;&gt;The&lt;/span&gt; above copyright notice &lt;span class=&quot;pl-c1&quot;&gt;and&lt;/span&gt; this permission notice shall be included &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;all&lt;/span&gt;
    copies &lt;span class=&quot;pl-c1&quot;&gt;or&lt;/span&gt; substantial portions &lt;span class=&quot;pl-k&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;pl-ent&quot;&gt;Software&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
    
    &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PROVIDED&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS IS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WITHOUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;KIND&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;EXPRESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;IMPLIED&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;INCLUDING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIMITED&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WARRANTIES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;MERCHANTABILITY&lt;/span&gt;,
    &lt;span class=&quot;pl-ent&quot;&gt;FITNESS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PARTICULAR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;PURPOSE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NONINFRINGEMENT&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;EVENT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SHALL&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;AUTHORS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;COPYRIGHT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;HOLDERS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;LIABLE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CLAIM&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;DAMAGES&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;LIABILITY&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;WHETHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;AN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;ACTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONTRACT&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;TORT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHERWISE&lt;/span&gt;, &lt;span class=&quot;pl-ent&quot;&gt;ARISING&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;FROM&lt;/span&gt;,
    &lt;span class=&quot;pl-ent&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;CONNECTION&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;OTHER&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;DEALINGS&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;THE&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;
''
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and then refer to these files within our original configuration:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; example2.dhall&lt;/span&gt;

[   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
    }
,   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; }
    }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Files containing Dhall expressions don't have to end with a &lt;code&gt;.dhall&lt;/code&gt; file extension. This is purely a convention&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;There's still some duplication: there is an unspoken invariant that the package author has to match the license author&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can automate that away, too:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; example3.dhall&lt;/span&gt;

    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; makePackage &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;
        λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {   name        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
                 ,   author      &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
                 ,   year        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;
                 ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; } &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
                 }
        )
    &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt;   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;name
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;makeLicense { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author }
        }

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  [   makePackage {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt;
                    ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall
                    }
    ,   makePackage {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;
                    ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall
                    }
    ,   makePackage {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;
                    ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall
                    }
    ,   makePackage {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt;
                    ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall
                    }
    ]
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;Still too much duplication. I plan on adding a lot more entries and I don't want to type &lt;code&gt;makePackage&lt;/code&gt; for every entry in the list&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dhall provides a Prelude of utilities to automate common tasks. For example, the Prelude provides a &lt;code&gt;map&lt;/code&gt; function that transforms every element of the list with the same function (such as &lt;code&gt;makePackage&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; example4.dhall&lt;/span&gt;

    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; https&lt;span class=&quot;pl-k&quot;&gt;://&lt;/span&gt;raw&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;githubusercontent&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;dhall&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;lang&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;35&lt;/span&gt;deff0d41f2bf86c42089c6ca16665537f54d75&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; makePackage &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;
        λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {   name        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
                 ,   author      &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
                 ,   year        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;
                 ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; } &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
                 }
        )
    &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt;   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;name
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;makeLicense { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author }
        }

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt;

    {   name        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
    ,   author      &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
    ,   year        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;
    ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; } &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
    }

    {   name    &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
    ,   author  &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
    ,   license &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
    }

    makePackage

    [   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall
        }
    ,   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall
        }
    ,   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall
        }
    ,   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall
        }
    ]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can import functions, values, and types from URLs the same way that you import them from paths and this is how Dhall distributes the Prelude&lt;/p&gt;
&lt;p&gt;Every function from the Prelude has documentation, examples, and a type signature:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ curl https://raw.githubusercontent.com/dhall-lang/Prelude/35deff0d41f2bf86c42089c6ca16665537f54d75/List/map
{-
Tranform a list by applying a &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;to&lt;/span&gt; each element

Examples:

./map Natural Bool Natural/even ([2, 3, 5] &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; List Natural)
= [True, False, False] &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; List Bool

./map Natural Bool Natural/even ([] &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; List Natural)
= [] &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; List Bool
-}
&lt;span class=&quot;pl-c1&quot;&gt;let&lt;/span&gt; map &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; ∀(a &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type) → ∀(b &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type) → (a → b) → List a → List b
    =   λ(a &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type)
    →   λ(b &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type)
    →   λ(f &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; a → b)
    →   λ(xs &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; List a)
    →   List/build
        b
        (   λ(list &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type)
        →   λ(cons &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; b → list → list)
        →   List/fold a xs list (λ(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; a) → cons (f x))
        )

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  map
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The type signature for &lt;code&gt;map&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;∀&lt;/span&gt;(a &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;∀&lt;/span&gt;(b &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; (a &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; b) &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;List&lt;/span&gt; a &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;List&lt;/span&gt; b
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... says that &lt;code&gt;map&lt;/code&gt; takes four arguments:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The first argument is the element type of the input list&lt;/li&gt;
&lt;li&gt;The second argument is the element type of the output list&lt;/li&gt;
&lt;li&gt;The third argument is the function to apply to each element of the list&lt;/li&gt;
&lt;li&gt;The fourth argument is the input list&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;... and the result is the output list&lt;/p&gt;
&lt;p&gt;You can browse the latest version of the Prelude online by visiting:&lt;/p&gt;
&lt;p&gt;You can also import functions from the latest version of the Prelude using the following convenience domain:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; http&lt;span class=&quot;pl-k&quot;&gt;://&lt;/span&gt;prelude&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;dhall&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;lang&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;org&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... although be cautious when doing so since this URL is mutable and you can't guarantee that you get the same result every time.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/dhall-lang/dhall-lang#standard-library&quot;&gt;Standard Library&lt;/a&gt; section for more ways to get the Prelude.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;These types are still long and repetitive. One type shows up twice in the source code&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can import types just like anything else in Dhall:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; Input.dhall&lt;/span&gt;
{   name        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
,   author      &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
,   year        &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;
,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { year &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Natural&lt;/span&gt;, author &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt; } &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; Output.dhall&lt;/span&gt;
{   name    &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
,   author  &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
,   license &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Text&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; example5.dhall&lt;/span&gt;

    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; https&lt;span class=&quot;pl-k&quot;&gt;://&lt;/span&gt;raw&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;githubusercontent&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;dhall&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;lang&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;35&lt;/span&gt;deff0d41f2bf86c42089c6ca16665537f54d75&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; makePackage &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;
        λ(args &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Input.&lt;/span&gt;dhall)
    &lt;span class=&quot;pl-k&quot;&gt;→&lt;/span&gt;   {   name    &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;name
        ,   author  &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author
        ,   license &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;makeLicense { year &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;year, author &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;author }
        }

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Input.&lt;/span&gt;dhall &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Output.&lt;/span&gt;dhall makePackage

    [   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Gabriel Gonzalez&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2017&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall
        }
    ,   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;conduit&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Michael Snoyman&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall
        }
    ,   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Simon Marlow&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2012&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-ent&quot;&gt;BSD&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Clause.&lt;/span&gt;dhall
        }
    ,   {   name        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;system-filepath&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   author      &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John Milikin&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        ,   year        &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2010&lt;/span&gt;
        ,   makeLicense &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;MIT.&lt;/span&gt;dhall
        }
    ]
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;Why doesn't Dhall use JSON-like syntax?&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;JSON isn't the only file format that Dhall supports. For example, we can convert our Dhall configuration to YAML:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall-to-yaml &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/tmp/test/example3&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
- name: dhall
  author: Gabriel Gonzalez
  license: &lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    Copyright 2017 Gabriel Gonzalez&lt;/span&gt;


&lt;span class=&quot;pl-s&quot;&gt;    Redistribution and use in source and binary forms, with or without modification,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    ...&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
- name: conduit
  author: Michael Snoyman
  license: &lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    Copyright 2012 Michael Snoyman&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    Permission is hereby granted, free of charge, to any person obtaining a copy of&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    ...&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
- name: async
  author: Simon Marlow
  license: &lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    Copyright 2012 Simon Marlow&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    Redistribution and use in source and binary forms, with or without modification,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    ...&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
- name: system-filepath
  author: John Milikin
  license: &lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    Copyright 2010 John Milikin&lt;/span&gt;


&lt;span class=&quot;pl-s&quot;&gt;    Permission is hereby granted, free of charge, to any person obtaining a copy of&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    ...&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... or read our Dhall configuration directly into some programming languages (like Haskell) without going through a JSON intermediate:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
{-# &lt;span class=&quot;pl-k&quot;&gt;LANGUAGE&lt;/span&gt; DeriveAnyClass    #-}
{-# &lt;span class=&quot;pl-k&quot;&gt;LANGUAGE&lt;/span&gt; DeriveGeneric     #-}
{-# &lt;span class=&quot;pl-k&quot;&gt;LANGUAGE&lt;/span&gt; OverloadedStrings #-}

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Dhall&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Package&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Package&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;name&lt;/span&gt;    &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Text&lt;/span&gt;
    , &lt;span class=&quot;pl-e&quot;&gt;author&lt;/span&gt;  &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Text&lt;/span&gt;
    , &lt;span class=&quot;pl-e&quot;&gt;license&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Text&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;pl-e&quot;&gt;Generic&lt;/span&gt;, &lt;span class=&quot;pl-e&quot;&gt;Interpret&lt;/span&gt;, &lt;span class=&quot;pl-e&quot;&gt;Show&lt;/span&gt;)

&lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;IO&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;
main &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
    packages &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;-&lt;/span&gt; input auto &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;./example.dhall&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; (packages &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Package&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;Why not just always go through a JSON intermediate? Every language already supports JSON&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can load more exotic things into the language (like functions) if the language integrates directly with Dhall:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
{-# &lt;span class=&quot;pl-k&quot;&gt;LANGUAGE&lt;/span&gt; OverloadedStrings #-}

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Dhall&lt;/span&gt;

&lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;IO&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;
main &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
    twice &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;-&lt;/span&gt; input auto &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;λ(x : Integer) → [x, x]&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;IO&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;)
    &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; (twice &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;--&lt;/span&gt; prints: &quot;[5,5]&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and other features, too, like unions&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; &lt;em&gt;&quot;What's a union?&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;At this point you should read the &lt;a href=&quot;https://hackage.haskell.org/package/dhall/docs/Dhall-Tutorial.html&quot; rel=&quot;nofollow&quot;&gt;language manual&lt;/a&gt; ☺&lt;/p&gt;
&lt;p&gt;Or you can continue reading to learn about Dhall's feature set&lt;/p&gt;
&lt;/details&gt;&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Total - Evaluation always terminates and never hangs or infinitely loops&lt;/li&gt;
&lt;li&gt;Safe - Evaluation never crashes or throws exceptions&lt;/li&gt;
&lt;li&gt;Distributed - Expressions can reference other expressions by URL or path&lt;/li&gt;
&lt;li&gt;Strongly normalizing - All expressions (even functions) have a normal form&lt;/li&gt;
&lt;li&gt;Statically typed - Configurations can be validated ahead-of-time&lt;/li&gt;
&lt;li&gt;Strongly typed - No coercions, casts or subtyping&lt;/li&gt;
&lt;li&gt;Built-in data types - Includes lists, anonymous records and anonymous unions&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The Dhall language originated as a Haskell-specific configuration file format and is expanding to support more languages and file formats. Consequently, the Haskell package for Dhall still hosts the official tutorial and language manual:&lt;/p&gt;
&lt;p&gt;... which will eventually become a language-agnostic tutorial&lt;/p&gt;
&lt;p&gt;You can also read about the original motivation behind the language here:&lt;/p&gt;
&lt;p&gt;Finally, we have a cheatsheet for a very condensed overview and quick lookup:&lt;/p&gt;
&lt;h2&gt;Standard Library&lt;/h2&gt;
&lt;p&gt;Dhall's Standard Library is called &lt;code&gt;Prelude&lt;/code&gt;. It implements various utilities to work with the builtin types. Where to find it:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dhall-lang/Prelude&quot;&gt;Github repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://prelude.dhall-lang.org/&quot; rel=&quot;nofollow&quot;&gt;Mirror on IPFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/interpreters/dhall/default.nix&quot;&gt;Nix&lt;/a&gt;: both &lt;code&gt;dhall&lt;/code&gt; and &lt;code&gt;dhall.prelude&lt;/code&gt; derivations are built, install the &lt;code&gt;Prelude&lt;/code&gt; with e.g. &lt;code&gt;nix-env -iA nixpkgs.dhall.prelude&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;You can use Dhall in one of three ways:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Interpreter:&lt;/strong&gt; You can install a language-independent command-line program that can import, type-check and evaluate Dhall expressions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Language binding:&lt;/strong&gt; You can use a language-specific library to load Dhall configuration files directly into your programs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compilers:&lt;/strong&gt; You can compile Dhall expressions to several common configuration file formats using command-line utilities&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I recommend the following progression for adopting Dhall:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Install the interpreter to learn more about the language&lt;/li&gt;
&lt;li&gt;If you like what you see, then:
&lt;ul&gt;&lt;li&gt;If your preferred programming language supports Dhall:
&lt;ul&gt;&lt;li&gt;Use the language binding to configure your programs using Dhall&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If your language does not yet support Dhall
&lt;ul&gt;&lt;li&gt;Compile Dhall to a supported configuration format (such as JSON)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The following sections tour each of these use cases in more detail&lt;/p&gt;
&lt;h3&gt;Interpreter&lt;/h3&gt;
&lt;p&gt;You can install a Dhall interpreter that can type-check and evaluate Dhall expressions from the command line. You can use this interpreter to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Learn how the language works:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;True &amp;amp;&amp;amp; False&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
Bool

False
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first line of output shows the inferred type of an expression:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;List/length&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
∀(a &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type) → List a → Natural

List/length
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second line of output shows the fully evaluated normal form of an expression:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;λ(x : Text) → let y = True in if y != False then x else &quot;?&quot;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
∀(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text) → Text

λ(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text) → x
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Validate a configuration file ahead of time against a schema:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat config
{ foo = List/length Natural [2, 3, 5], bar = True &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; False }
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat schema
{ foo &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Natural, bar &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Bool }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dhall lets you import expressions and types by their path:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;./config : ./schema&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
{ bar &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Bool, foo &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Natural }

{ bar = False, foo = 3 }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Schema validation is the same thing as a type annotation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Detect type errors:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;λ(x : Integer) → x &amp;amp;&amp;amp; True&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

Use &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dhall --explain&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; detailed errors

Error: ❰&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;❱ only works on ❰Bool❱s

x &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; True

(stdin):1:18
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can ask the type checker to go into more detail using the &lt;code&gt;--explain&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall --explain &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;λ(x : Integer) → x &amp;amp;&amp;amp; True&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;


x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Integer

Error: ❰&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;❱ only works on ❰Bool❱s

Explanation: The ❰&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;❱ operator expects two arguments that have &lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; ❰Bool❱
                                                                                
For example, this is a valid use of ❰&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;❱:                           
                                                                                
                                                                                
    ┌───────────────┐                                                           
    │ True &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; False │                                               
    └───────────────┘                                                           
                                                                                
                                                                                
You provided this argument:                                                     
                                                                                
↳ x                                                                
                                                                                
... which does not have &lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; ❰Bool❱ but instead has type:                       
                                                                                
↳ Integer                                                                

────────────────────────────────────────────────────────────────────────────────

x &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; True

(stdin):1:18
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resolve remote expressions:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://raw.githubusercontent.com/dhall-lang/Prelude/35deff0d41f2bf86c42089c6ca16665537f54d75/List/replicate&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

∀(n &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Natural) → ∀(a &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type) → ∀(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; a) → List a

λ(n &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Natural) → λ(a &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type) → λ(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; a) → List/build a (λ(list &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Type) → λ(cons &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; a → list → list) → Natural/fold n list (cons x))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can import arbitrary expressions by URL. In fact, the Dhall Prelude is hosted on GitHub to be imported in this way:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Reduce an expression to normal form:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat ./example
    &lt;span class=&quot;pl-c1&quot;&gt;let&lt;/span&gt; replicate = https://raw.githubusercontent.com/dhall-lang/Prelude/35deff0d41f2bf86c42089c6ca16665537f54d75/List/replicate

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;let&lt;/span&gt; exclaim = λ(t &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text) → t ++ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;  λ(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text) → replicate 3 Text (exclaim x)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can reduce functions to normal form, even when they haven't been applied to all of their arguments&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;./example&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
∀(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text) → List Text

λ(x &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text) → [x ++ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, x ++ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, x ++ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;] &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; List Text
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The normal form is equivalent to the original program except stripped of all imports and indirection&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Learn more:&lt;/p&gt;
&lt;h3&gt;Language Bindings&lt;/h3&gt;
&lt;p&gt;You can use Dhall to configure programs written in other languages. This is the most common use case for Dhall: a type-safe and non-Turing-complete configuration language&lt;/p&gt;
&lt;p&gt;Dhall currently supports two complete language bindings:&lt;/p&gt;
&lt;p&gt;... and two additional language bindings in progress:&lt;/p&gt;
&lt;h4&gt;Haskell&lt;/h4&gt;
&lt;p&gt;You can load Dhall expressions into Haskell using the &lt;code&gt;input&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; input auto &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;True &amp;amp;&amp;amp; False' :: IO Bool&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The compiler validates the expression against the expected type:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; input auto &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;IO&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;pl-ent&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Expression&lt;/span&gt; doesn't match annotation

&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Bool&lt;/span&gt;

(input)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even marshall some Dhall functions into Haskell:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; twice &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;-&lt;/span&gt; input auto &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;λ(x : Integer) → [x, x]&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;IO&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;-&amp;gt;&lt;/span&gt; [&lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;])
&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; twice &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;
[&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also decode Dhall expressions into Haskell types that derive &lt;code&gt;Generic&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-haskell&quot;&gt;
&lt;pre&gt;
{-# &lt;span class=&quot;pl-k&quot;&gt;LANGUAGE&lt;/span&gt; DeriveGeneric     #-}
{-# &lt;span class=&quot;pl-k&quot;&gt;LANGUAGE&lt;/span&gt; OverloadedStrings #-}

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Dhall&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Natural&lt;/span&gt;, &lt;span class=&quot;pl-e&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;Double&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;pl-e&quot;&gt;Generic&lt;/span&gt;, &lt;span class=&quot;pl-e&quot;&gt;Show&lt;/span&gt;)

&lt;span class=&quot;pl-k&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Interpret&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Example&lt;/span&gt;

&lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;IO&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;
main &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
    x &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;-&lt;/span&gt; input auto &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;./config&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; (x &lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Example&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... which reads in this configuration file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat ./config
{ foo = 1
, bar = [3.0, 4.0, 5.0]
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and prints the configuration:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ ./example
Example {foo = 1, bar = [3.0,4.0,5.0]}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Learn more:&lt;/p&gt;
&lt;h4&gt;Nix&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;nixpkgs&lt;/code&gt; provides a &lt;code&gt;dhallToNix&lt;/code&gt; utility which you can use to translate a Dhall expression to the corresponding Nix expression. This lets you carve out a typed and total subset of Nix&lt;/p&gt;
&lt;p&gt;For example, this Dhall expression:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-nix&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;pl-e&quot;&gt;pkgs&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&amp;lt;nixpkgs&amp;gt;&lt;/span&gt; { };

&lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;pl-v&quot;&gt;pkgs&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;dhallToNix&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;''&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    { foo = λ(x : Bool) → [x, x]&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    , bar = Natural/even 2&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    , baz = https://raw.githubusercontent.com/dhall-lang/Prelude/35deff0d41f2bf86c42089c6ca16665537f54d75/Text/concat&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;  &lt;span class=&quot;pl-pds&quot;&gt;''&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... translates to this Nix expression&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-nix&quot;&gt;
&lt;pre&gt;
{ &lt;span class=&quot;pl-e&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt; : [ &lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt; ];
  &lt;span class=&quot;pl-e&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;;
  &lt;span class=&quot;pl-e&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;xs&lt;/span&gt;:
    (&lt;span class=&quot;pl-smi&quot;&gt;t&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;xs&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;t&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;cons&lt;/span&gt;:
      &lt;span class=&quot;pl-c1&quot;&gt;builtins&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;foldl'&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;ys&lt;/span&gt;: &lt;span class=&quot;pl-v&quot;&gt;f&lt;/span&gt; (&lt;span class=&quot;pl-v&quot;&gt;cons&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;ys&lt;/span&gt;)) (&lt;span class=&quot;pl-smi&quot;&gt;ys&lt;/span&gt;: &lt;span class=&quot;pl-v&quot;&gt;ys&lt;/span&gt;) &lt;span class=&quot;pl-v&quot;&gt;xs&lt;/span&gt;
    ) {} &lt;span class=&quot;pl-v&quot;&gt;xs&lt;/span&gt; {} (&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;y&lt;/span&gt;) &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Learn more:&lt;/p&gt;
&lt;h3&gt;Compilers&lt;/h3&gt;
&lt;p&gt;You can compile Dhall expressions to other configuration formats, such as:&lt;/p&gt;
&lt;p&gt;These compilers can only translate a subset of Dhall to these other formats. For example, you cannot translate Dhall functions to JSON&lt;/p&gt;
&lt;h4&gt;JSON and YAML&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;dhall-to-json&lt;/code&gt; executable lets you compile Dhall expressions to JSON:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall-to-json &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ foo = 1, bar = True, baz = [1, 2, 3] }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
{&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;:1,&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;baz&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;:[1,2,3],&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;bar&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;:true}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;YAML is already a superset of JSON, but the &lt;code&gt;dhall-to-yaml&lt;/code&gt; executable lets you compile Dhall expressions to idiomatic YAML syntax, too:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dhall-to-yaml &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ foo = 1, bar = True, baz = [1, 2, 3] }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
foo: 1
baz:
- 1
- 2
- 3
bar: &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some configuration file formats are supersets of JSON such as the &lt;a href=&quot;https://github.com/hashicorp/hcl&quot;&gt;HashiCorp configuration language&lt;/a&gt; (Used to configure &lt;code&gt;terraform&lt;/code&gt;) so you can compile Dhall expressions to these configuration file formats, too.&lt;/p&gt;
&lt;p&gt;Learn more:&lt;/p&gt;
&lt;h4&gt;Bash&lt;/h4&gt;
&lt;p&gt;You can also compile Dhall expressions to either Bash expressions:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall-to-bash &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;List/length Bool [True, False]&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... or Bash declarations:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall-to-bash --declare FOO &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ bar = 1, baz = &quot;ABC&quot; }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; -r -A FOO=([bar]=1 [baz]=ABC)
$ &lt;span class=&quot;pl-c1&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;dhall-to-bash --declare FOO &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ bar = 1, baz = &quot;ABC&quot; }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
$ &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;${FOO[bar]}&lt;/span&gt;
1
$ &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;${FOO[baz]}&lt;/span&gt;
ABC
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Learn more:&lt;/p&gt;
&lt;h4&gt;Text&lt;/h4&gt;
&lt;p&gt;You can also use the &lt;code&gt;dhall-to-text&lt;/code&gt; executable as a template engine&lt;/p&gt;
&lt;p&gt;For example, given this template:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat function
    λ(record &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; { name        &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Text
               , value       &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Double
               , taxed_value &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Double
               , in_ca       &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; Bool
               }
     ) → &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
Hello &lt;span class=&quot;pl-smi&quot;&gt;${record.name}&lt;/span&gt;
You have just won &lt;span class=&quot;pl-smi&quot;&gt;${Double&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;show record.value}&lt;/span&gt; dollars&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;${ if record.in_ca&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;   then &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Well, &lt;span class=&quot;pl-smi&quot;&gt;${Double&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;show record.taxed_value}&lt;/span&gt; dollars, after taxes&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;   else &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt; }&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and this payload:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat value
{ name        = &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Chris&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
, value       = 10000.0
, taxed_value = 6000.0
, in_ca       = True
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... you can apply the template to the payload and render the result using the &lt;code&gt;dhall-to-text&lt;/code&gt; executable:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ dhall-to-text &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;./function ./value&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
Hello Chris
You have just won 10000.0 dollars&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;
Well, 6000.0 dollars, after taxes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Learn more:&lt;/p&gt;
&lt;h2&gt;Design philosophy&lt;/h2&gt;
&lt;p&gt;Programming languages are all about design tradeoffs and the Dhall language uses the following guiding principles (in order of descending priority) that help navigate those tradeoffs:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Polish&lt;/p&gt;
&lt;p&gt;The language should delight users. Error messages should be fantastic, execution should be snappy, documentation should be excellent, and everything should &quot;just work&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simplicity&lt;/p&gt;
&lt;p&gt;When in doubt, cut it out. Every configuration language needs bindings to multiple programming languages, and the more complex the configuration language the more difficult to create new bindings. Let the host language that you bind to compensate for any missing features from Dhall.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Beginner-friendliness&lt;/p&gt;
&lt;p&gt;Dhall needs to be a language that anybody can learn in a day and debug with little to no assistance from others. Otherwise people can't recommend Dhall to their team with confidence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Robustness&lt;/p&gt;
&lt;p&gt;A configuration language needs to be rock solid. The last thing a person wants to debug is their configuration file. The language should never hang or crash. Ever.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistency&lt;/p&gt;
&lt;p&gt;There should only be one way to do something. Users should be able to instantly discern whether or not something is possible within the Dhall language or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The Dhall configuration language is also designed to negate many of the common objections to programmable configuration files, such as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Config files shouldn't be Turing complete&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dhall is not Turing-complete. Evaluation always terminates, no exceptions&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Configuration languages become unreadable due to abstraction and indirection&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Every Dhall configuration file can be reduced to a normal form which eliminates all abstraction and indirection&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Users will go crazy with syntax and user-defined constructs&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dhall is a very minimal programming language. For example: you cannot even compare strings for equality. The language also forbids many other common operations in order to force users to keep things simple&lt;/p&gt;
&lt;p&gt;The biggest issue with using Dhall as a configuration language is that there are currently only Haskell bindings. If you would like to contribute bindings to another language then go for it, otherwise I will do my best to contribute them as time permits.&lt;/p&gt;
&lt;h2&gt;Development status&lt;/h2&gt;
&lt;p&gt;I am beginning to author a formal language standard for Dhall to help with porting Dhall to other languages. If you would like to assist with either standardizing the language or creating new bindings just let me know through the issue tracker.&lt;/p&gt;
&lt;h2&gt;Name&lt;/h2&gt;
&lt;p&gt;The language is named after a &lt;a href=&quot;http://torment.wikia.com/wiki/Dhall&quot; rel=&quot;nofollow&quot;&gt;Dustman from the game Planescape: Torment&lt;/a&gt; who belongs to a faction obsessed with death (termination). The logo represents his quill and inkwell&lt;/p&gt;
&lt;p&gt;The name rhymes with &quot;tall&quot;/&quot;call&quot;/&quot;hall&quot; (i.e. &quot;dɔl&quot; for a US speaker or &quot;dɔːl&quot; for a UK speaker using the International Phonetic Alphabet).&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Fri, 13 Jul 2018 15:16:04 +0000</pubDate>
<dc:creator>KirinDave</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/31601797?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>dhall-lang/dhall-lang</og:title>
<og:url>https://github.com/dhall-lang/dhall-lang</og:url>
<og:description>dhall-lang - A configuration language guaranteed to terminate</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/dhall-lang/dhall-lang</dc:identifier>
</item>
<item>
<title>‘Find Your Passion’ Is Awful Advice</title>
<link>https://www.theatlantic.com/science/archive/2018/07/find-your-passion-is-terrible-advice/564932/?single_page=true</link>
<guid isPermaLink="true" >https://www.theatlantic.com/science/archive/2018/07/find-your-passion-is-terrible-advice/564932/?single_page=true</guid>
<description>&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-0&quot;&gt;&lt;p&gt;Carol Dweck, a psychology professor at Stanford University, remembers asking an undergraduate seminar recently, “How many of you are waiting to find your passion?”&lt;/p&gt;
&lt;p&gt;“Almost all of them raised their hand and got dreamy looks in their eyes,” she told me. They talked about it “like a tidal wave would sweep over them,” he said. &lt;em&gt;Sploosh. Huzzah! It’s accounting!&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;Would they have unlimited motivation for their passion? They nodded solemnly.&lt;/p&gt;
&lt;p&gt;“I hate to burst your balloon,” she said, “but it doesn’t usually happen that way.”&lt;/p&gt;
&lt;p&gt;What Dweck asked her students is a common refrain in American society. The term “Follow your passion” &lt;a href=&quot;http://journals.sagepub.com/doi/abs/10.1177/0146167215596988?journalCode=pspc&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'0',r'564932'&quot;&gt;has increased&lt;/a&gt; ninefold in English books since 1990. “Find something you love to do and you’ll never have to work a day in your life” is another college-counseling standby of &lt;a href=&quot;https://quoteinvestigator.com/2014/09/02/job-love/&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'1',r'564932'&quot;&gt;unknown provenance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But according to Dweck and others, that advice is steering people wrong.&lt;/p&gt;
&lt;p&gt;“What are the consequences of that?” asked Paul O’Keefe, an assistant professor of psychology at Yale—NUS College. “That means that if you do something that feels like work, it means you don’t love it.” He gave me the example of a student who jumps from lab to lab, trying to find one whose research topic feels like her passion. “It’s this idea that if I’m not completely overwhelmed by emotion when I walk into a lab, then it won’t be my passion or my interest.”&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-1&quot;&gt;&lt;p&gt;That’s why he and two co-authors—Dweck and Greg Walton of Stanford—recently performed a study that suggests it might be time to change the way we think about our interests. Passions aren’t “found,” they argue. They’re developed.&lt;/p&gt;

&lt;p&gt;In a &lt;a href=&quot;http://mindsets-and-motivation-lab.commons.yale-nus.edu.sg/wp-content/uploads/sites/39/2018/06/PSCI-15-2069-PubMed.pdf&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'2',r'564932'&quot;&gt;paper that is forthcoming in &lt;em&gt;Psychological Science&lt;/em&gt;&lt;/a&gt;, the authors delineate the difference between the two mind-sets. One is a “fixed theory of interests”—the idea that core interests are there from birth, just waiting to be discovered—and the other is a “growth theory,” the idea that interests are something anyone can cultivate over time.&lt;/p&gt;

&lt;p&gt;To examine how these different mind-sets affect our pursuit of different topics, the authors performed a series of studies on college students—a group that’s frequently advised to find their passion in the form of a major or career path.&lt;/p&gt;
&lt;p&gt;First, students answered a survey that would categorize them as either “techy”—slang for interested in math and science—or “fuzzy,” meaning interested in the arts or humanities. They also filled out a survey determining how much they agreed with the idea that people’s core interests don’t change over time. They then read an article that mismatched their interests—a piece on the future of algorithms for the fuzzies, and a piece on Derrida for the techies. The more the participants endorsed a “fixed” theory of interests, the less interested they were in the article that mismatched their aforementioned identity as a techy or fuzzy.&lt;/p&gt;
&lt;p&gt;The authors then repeated a similar procedure, but they had students read first about either the fixed theory of interests or the growth theory. Again, those who learned that interests are fixed throughout a person’s life were less captivated by an article that mismatched their interests.&lt;/p&gt;

&lt;p&gt;The authors believe this could mean that students who have fixed theories of interest might forgo interesting lectures or opportunities because they don’t align with their previously stated passions. Or that they might overlook ways that other disciplines can intersect with their own.&lt;/p&gt;
&lt;p&gt;“If passions are things found fully formed, and your job is to look around the world for your passion—it’s a crazy thought,” Walton told me. “It doesn’t reflect the way I or my students experience school, where you go to a class and have a lecture or a conversation, and you think, &lt;em&gt;That’s interesting&lt;/em&gt;. It’s through a process of investment and development that you develop an abiding passion in a field.”&lt;/p&gt;
&lt;p&gt;Another reason not to buy into the fixed theory is that it can cause people to give up too easily. If something becomes difficult, it’s easy to assume that it simply must not have been your passion, after all. In one portion of this study, the students who thought interests were fixed were also less likely to think that pursuing a passion would be difficult at times. Instead, they thought it would provide “endless motivation.”&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-2&quot;&gt;
&lt;p&gt;Dweck, one of the paper’s authors, has previously studied different types of mind-sets as they relate to intelligence. People who have a growth mind-set about their own intelligence tend to be less afraid of failure, &lt;a href=&quot;https://en.wikipedia.org/wiki/Carol_Dweck#Mindset&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'3',r'564932'&quot;&gt;according to her research&lt;/a&gt;, because they believe smarts are cultivated, not inherent. Interests are related to, but distinct from, abilities, the study authors told me: You can be interested in something but not very good at it. “I’ve been playing guitar for 25 years, but I can’t say that my abilities have gotten that much better in the past 10 years,” O’Keefe said.&lt;/p&gt;
&lt;p&gt;Dweck told me that “find your passion” has a laudable history. “Before that, people were saying, ‘Find your genius,’ and that was so intimidating. It implied that only people who were really brilliant at something could succeed,” she said. “‘Find your passion’ felt more democratic. Everybody can have an interest.” But this study suggests that even the idea of finding your “true” interest can intimidate people and keep them from digging further into a field.&lt;/p&gt;

&lt;p&gt;The authors also had students learn about either fixed or growth theory and then exposed them to a new interest: Astronomy. First, they had them watch a video made by &lt;em&gt;The Guardian&lt;/em&gt; for a general audience about Stephen Hawking’s ideas. It was easy to understand and entertaining. Then the authors had the students read a highly technical, challenging article in the academic journal &lt;em&gt;Science&lt;/em&gt; about black holes. Despite saying just moments ago, after viewing the video, that they were fascinated by black holes, the students who were exposed to the fixed theory of interests said they were no longer interested in black holes after reading the difficult &lt;em&gt;Science&lt;/em&gt; article. In other words, when you’re told that your interests are somehow ingrained, you give up on new interests as soon as the going gets tough.&lt;/p&gt;
&lt;p&gt;This study was a preregistered replication, meaning the authors stated at the outset what their hypothesis and methods would be. This process is meant to prevent &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_dredging&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'4',r'564932'&quot;&gt;p-hacking&lt;/a&gt;, a shady data practice that has cast a shadow over many psychology studies in recent years.&lt;/p&gt;

&lt;p&gt;K. Ann Renninger, a professor at Swarthmore College who was not involved with the study, has researched the development of interests and said that “neuroscience has confirmed that interests can be supported to develop.” In other words, with the right help, most people can get interested in almost anything. Before the age of 8, she said, kids will try anything. Between the ages of 8 and 12, they start to compare themselves with others and become insecure if they’re not as good as their peers at something. That’s when educators have to start to find new ways to keep them interested in certain subjects.&lt;/p&gt;
&lt;p&gt;Though the authors didn’t examine adults, they told me their findings could apply to an older population as well. For example, people’s interest in parenthood tends to escalate rapidly once they have a real, crying baby in their house. “You could not know the first thing about cancer, but if your mother gets cancer, you’re going to be an expert in it pretty darn quick,” O’Keefe said.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;l-article__section s-cms-content&quot; itemprop=&quot;articleBody&quot; id=&quot;article-section-3&quot;&gt;&lt;p&gt;A &lt;a href=&quot;http://journals.sagepub.com/doi/abs/10.1177/0146167215596988?journalCode=pspc&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'5',r'564932'&quot;&gt;different study&lt;/a&gt; done on adults’ views toward passions suggests that people who think passions are found tend to pick jobs that fit them well from the outset. They prioritize enjoyment over good pay. People who think passions are developed, meanwhile, prioritize other goals over immediate enjoyment at work, and they “grow to fit their vocations better over time,” the authors of that study write. “In conclusion,” they add, “people who have not found their perfect fit in a career can take heart—there is more than one way to attain passion for work.”&lt;/p&gt;

&lt;p&gt;How to cultivate a “growth” mind-set in the young, future-psychology-experiment subjects of America? If you’re a parent, you can avoid dropping new hobbies as soon as they become difficult. (Your kids might take note if you do, O’Keefe said.)&lt;/p&gt;
&lt;p&gt;Beyond that, there’s not a clear way to develop a growth mind-set about interests, other than knowing that it’s a valid way to think, and that your passion might still be around the corner.&lt;/p&gt;
&lt;p&gt;“We’re just trying to pull the veil back on the hidden implications of things like, ‘find your passion,’” Walton said. “Is that really how things work? A little bit of knowledge is power.”&lt;/p&gt;
&lt;section class=&quot;c-letters-cta&quot;&gt;&lt;p class=&quot;c-letters-cta__text&quot;&gt;We want to hear what you think. &lt;a href=&quot;https://www.theatlantic.com/contact/letters/&quot; class=&quot;c-letters-cta__link&quot;&gt;Submit a letter&lt;/a&gt; to the editor or write to letters@theatlantic.com.&lt;/p&gt;
&lt;/section&gt;

&lt;address id=&quot;article-writer-0&quot; class=&quot;c-article-writer lazyload&quot; data-author-id=&quot;5095&quot; data-omni-click=&quot;r'article',r'',d,r'olga-khazan',@href&quot; data-include=&quot;css:https://cdn.theatlantic.com/assets/static/b/frontend/dist/theatlantic/css/components/article-writer.ccce81ff6d92.css&quot; itemprop=&quot;author&quot; itemtype=&quot;https://schema.org/Person&quot; itemscope=&quot;&quot;/&gt;
&lt;div class=&quot;c-article-writer__image&quot; itemprop=&quot;image&quot; itemtype=&quot;http://schema.org/ImageObject&quot; itemscope=&quot;&quot;&gt;


&lt;a class=&quot;o-media__object&quot; href=&quot;https://www.theatlantic.com/author/olga-khazan/&quot; title=&quot;Olga Khazan's writer page&quot; data-omni-click=&quot;inherit&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;c-article-writer__img o-media__img&quot; src=&quot;https://cdn.theatlantic.com/assets/media/None/smaller_bw_edited/200.jpg?mod=1522336568&quot; alt=&quot;&quot; itemprop=&quot;contentUrl&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;c-article-writer__img o-media__img lazyload&quot; data-src=&quot;https://cdn.theatlantic.com/assets/media/None/smaller_bw_edited/200.jpg?mod=1522336568&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;c-article-writer__content&quot;&gt;
&lt;div class=&quot;c-article-writer__bio&quot; itemprop=&quot;description&quot;&gt;&lt;a href=&quot;https://www.theatlantic.com/author/olga-khazan/&quot; class=&quot;author-link&quot; data-omni-click=&quot;inherit&quot;&gt;Olga Khazan&lt;/a&gt; is a staff writer at &lt;em&gt;The Atlantic&lt;/em&gt;.&lt;/div&gt;
&lt;div class=&quot;c-article-writer__social&quot;&gt;&lt;a class=&quot;c-article-writer__social-link&quot; href=&quot;https://facebook.com/olgakhazanwriting&quot; data-omni-click=&quot;r'article',r'',d,r'article-writer-facebook',r'olga-khazan',r'564932'&quot; itemprop=&quot;sameAs&quot; title=&quot;Olga Khazan's Facebook Profile&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;c-article-writer__social-link-name&quot;&gt;Facebook&lt;/span&gt;&lt;/a&gt; &lt;a class=&quot;c-article-writer__social-link&quot; href=&quot;https://twitter.com/olgakhazan&quot; data-omni-click=&quot;r'article',r'',d,r'article-writer-twitter',r'olga-khazan',r'564932'&quot; itemprop=&quot;sameAs&quot; title=&quot;Olga Khazan's Twitter Profile&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;c-article-writer__social-link-name&quot;&gt;Twitter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;</description>
<pubDate>Fri, 13 Jul 2018 14:17:39 +0000</pubDate>
<dc:creator>theothermkn</dc:creator>
<og:title>‘Find Your Passion’ Is Awful Advice</og:title>
<og:type>article</og:type>
<og:url>https://www.theatlantic.com/science/archive/2018/07/find-your-passion-is-terrible-advice/564932/</og:url>
<og:image>https://cdn.theatlantic.com/assets/media/img/mt/2018/07/RTR1MQDL/facebook.jpg?1531338209</og:image>
<og:description>A major new study questions the common wisdom about how we should choose our careers.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theatlantic.com/science/archive/2018/07/find-your-passion-is-terrible-advice/564932/?single_page=true</dc:identifier>
</item>
</channel>
</rss>