<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Reflecting on Haskell in 2017</title>
<link>http://www.stephendiehl.com/posts/haskell_2018.html</link>
<guid isPermaLink="true" >http://www.stephendiehl.com/posts/haskell_2018.html</guid>
<description>&lt;p&gt;Alas, another year has come and gone. It feels like just yesterday I was writing the last reflection blog post on my flight back to Boston for Christmas. I’ve spent most of the last year traveling and working in Europe, meeting a lot of new Haskellers and putting a lot of faces to names.&lt;/p&gt;
&lt;p&gt;Haskell has had a great year and 2017 was defined by vast quantities of new code, including 14,000 new &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=language%3Ahaskell+created%3A%3E2017-01-01&amp;amp;type=&quot;&gt;Haskell projects&lt;/a&gt; on Github . The amount of writing this year was voluminous and my list of interesting work is eight times as large as last year. At least seven new companies came into existence and many existing firms unexpectedly dropped large open source Haskell projects into the public sphere. Driven by a lot of software catastrophes, the intersection of security, software correctness and formal methods have been become quite an active area of investment and research across both industry and academia. It’s really never been an easier and more exciting time to be programming professionally in the world’s most advanced (yet usable) statically typed language.&lt;/p&gt;
&lt;p&gt;Per what I guess is now a tradition, I will write my end of year retrospective on my highlights of what happened in the Haskell scene in retrospect.&lt;/p&gt;
&lt;h4 id=&quot;writing&quot;&gt;Writing&lt;/h4&gt;
&lt;p&gt;The amount of Haskell writing this year was vast and it’s impossible to enumerate all of the excellent writing that occurred. Some of the truly exceptional bits that were drafted in 2017 included:&lt;/p&gt;
&lt;h4 id=&quot;books-courses&quot;&gt;Books &amp;amp; Courses&lt;/h4&gt;
&lt;p&gt;Vladislav Zavialov and Artyom Kazak set out to write a book on the netherlands of Intermediate Haskell development, a mythical place that we all seemingly pass through but never speak of again. The project is intuitively called &lt;a href=&quot;https://intermediatehaskell.com/&quot;&gt;Intermediate Haskell&lt;/a&gt; and is slated to be released in 2018&lt;/p&gt;
&lt;p&gt;Bartosz Milewski finished writing &lt;a href=&quot;https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/&quot;&gt;Category Theory for Programmers&lt;/a&gt; which is freely available and also generated as &lt;a href=&quot;https://github.com/hmemcpy/milewski-ctfp-pdf/releases/download/v0.4/category-theory-for-programmers.pdf&quot;&gt;PDF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Brent Yorgey drafted a new course for teaching introduction to Computer Science using Haskell at &lt;a href=&quot;http://ozark.hendrix.edu/~yorgey/360/f16/&quot;&gt;Hendrix University&lt;/a&gt;. Dmitry Kovanikov and Arseniy Seroka also drafted a course for a wide variety of &lt;a href=&quot;https://github.com/jagajaga/FP-Course-ITMO&quot;&gt;intermediate to advanced Haskell topics&lt;/a&gt; at ITMO university. Some of which are in Russian but nevertheless большое спасибо!&lt;/p&gt;
&lt;h4 id=&quot;ghc&quot;&gt;GHC&lt;/h4&gt;
&lt;p&gt;The Glorious Glasgow Haskell Compiler had it’s 8.2 release, and landed to much rejoicing. Major features such as unboxed sum types landed as planned in GHC 8.2. There were many longstanding issues that were closed and many miscellaneous fixes contributed in 2017. For instance GHC now uses alternative linkers such as &lt;code&gt;ld.gold&lt;/code&gt; or &lt;code&gt;ld.lld&lt;/code&gt; instead of the system default ld.&lt;/p&gt;
&lt;p&gt;Semigroup is now a &lt;a href=&quot;https://prime.haskell.org/wiki/Libraries/Proposals/SemigroupMonoid&quot;&gt;superclass of Monoid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There was quite a bit of work on GHC &lt;a href=&quot;https://medium.com/@zw3rk&quot;&gt;cross compilation&lt;/a&gt; to ARM. The new build system &lt;a href=&quot;https://github.com/snowleopard/hadrian&quot;&gt;Hadrian&lt;/a&gt; has been in work for the past three years, has was finally been merged into the GHC tree.&lt;/p&gt;
&lt;p&gt;The DevOps Group has officially started and is being funded to help maintain the infrastructure used to host Haskell packages and build GHC. The general push of the group has been toward using hosted CI services, Appveyor and CircleCI and a greater use of more transparent platforms such as Github for GHC development.&lt;/p&gt;
&lt;p&gt;There is work on a major refactor of the AST types to use the new &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/ImplementingTreesThatGrow&quot;&gt;Trees that Grow&lt;/a&gt; research to allow GHC API user to extend the AST for their own purposes. Eventually this may allow the split of the AST types out of the ghc package, allowing tooling authors, Template Haskell users, and the compiler itself to use the same AST representation.&lt;/p&gt;
&lt;p&gt;GHC is partially accepting pull requests on &lt;a href=&quot;https://github.com/ghc/ghc/pull/14&quot;&gt;Github&lt;/a&gt; although most of the development still occurs on the mailing list and Phabricator.&lt;/p&gt;
&lt;p&gt;There was significant engineering effort to allow GHC to produce &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/DeterministicBuilds&quot;&gt;deterministic build artifacts&lt;/a&gt; to play nicely with caching reproducible build systems such as Buck and Bazel. Previously the emitted &lt;code&gt;.hi&lt;/code&gt; files would contain non-deterministic data such as hashes, timestamps and unique name supply counts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GHC 8.2 added wonderful new colorful error messages with caret diagnostics for syntax and type errors:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.stephendiehl.com/images/ghc_errors.jpg&quot; alt=&quot;Colorful errors GHC 8.2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Compact Regions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Support for ‘Compact Regions’ landed in GHC 8.2. Compact regions are manually allocated regions where the data allocated inside it are compacted and not traversed by the GC. This is amenable for long-lived data structures that are resident in memory without mutation frequently occurring.&lt;/p&gt;
&lt;p&gt;The interface can be accessed through the &lt;a href=&quot;https://hackage.haskell.org/package/ghc-compact&quot;&gt;ghc-compact&lt;/a&gt; modules and used to create compact malloc’d memory.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Control.DeepSeq&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Control.Exception&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.ByteString.Char8&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Data.Compact&lt;/span&gt;

main &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; compact (B.pack [&lt;span class=&quot;ch&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;'c'&lt;/span&gt;])&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/shlevy/ghc/tree/f1dfce1cb2a823696d6d3a9ea41c2bc73d949f12/libraries/compact/tests&quot;&gt;test suite&lt;/a&gt; inside GHC maintains the best illustrations of its use for complex non-traditional data structures.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Type.Reflection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GHC added a new more expressive Typeable mechanism using the &lt;a href=&quot;https://downloads.haskell.org/~ghc/master/libraries/base/base/Type-Reflection.html&quot;&gt;&lt;code&gt;Type.Reflection&lt;/code&gt;&lt;/a&gt; module. &lt;code&gt;typeRep&lt;/code&gt; can be applied with explicit type applications to arrows and functions can checked for type-level equality after application.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;λ&lt;span class=&quot;fu&quot;&gt;&amp;gt;&lt;/span&gt; typeRep &lt;span class=&quot;fu&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;)
(&lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ch&quot;&gt;'LiftedRep '&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;LiftedRep&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;λ&lt;span class=&quot;fu&quot;&gt;&amp;gt;&lt;/span&gt; typeRep &lt;span class=&quot;fu&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;fu&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;App&lt;/span&gt; (typeRep &lt;span class=&quot;fu&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt;) (typeRep &lt;span class=&quot;fu&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;)
&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Coercible&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not new to GHC 8.2 although the base library now exposes the &lt;code&gt;Coercible&lt;/code&gt; constraints allowing polymorphism over types which have the same runtime representations to be safely coerced at runtime. This can also be extended to polymorphic functions which take a compile-time proof of the equivalence of two runtime data layouts.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Data.Coerce&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Meters&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Meters&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Num&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Feet&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Feet&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Num&lt;/span&gt;)

&lt;span class=&quot;ot&quot;&gt;f ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Coercible&lt;/span&gt; a b, &lt;span class=&quot;dt&quot;&gt;Num&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b
f x y &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; coerce x &lt;span class=&quot;fu&quot;&gt;+&lt;/span&gt; y&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;λ&lt;span class=&quot;fu&quot;&gt;&amp;gt;&lt;/span&gt; f (&lt;span class=&quot;dt&quot;&gt;Meters&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;
λ&lt;span class=&quot;fu&quot;&gt;&amp;gt;&lt;/span&gt; f (&lt;span class=&quot;dt&quot;&gt;Feet&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;
λ&lt;span class=&quot;fu&quot;&gt;&amp;gt;&lt;/span&gt; f &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Feet&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)
&lt;span class=&quot;dt&quot;&gt;Feet&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt; &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GHC tracks the usage (i.e. role) of type variables used as parameters as either &lt;code&gt;nominal&lt;/code&gt; &lt;code&gt;representational&lt;/code&gt; or &lt;code&gt;phantom&lt;/code&gt; allowing types that differ only in a phantom type of nominal parameters to be safely coerced.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Join Points&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Luke Maurer and Simon Peyton Jones merged new work on &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/SequentCore&quot;&gt;join points&lt;/a&gt; which modifies GHC Core to optimize for join points in code. In Core, a &lt;em&gt;join point&lt;/em&gt; is a specially tagged function whose only occurrences are saturated tail calls. In the actual GHC Core AST, a join point is simple bit of metadata indicated by &lt;code&gt;IdDetails&lt;/code&gt; of the binder.&lt;/p&gt;
&lt;p&gt;Simon Peyton Jones presented the keynote at Haskell Exchange on his collaboration on &lt;a href=&quot;https://skillsmatter.com/skillscasts/9182-keynote-compiling-without-continuations&quot;&gt;Compiling without Continuation&lt;/a&gt; which present the ideas and core optimizations that are allowed by the new join points.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deriving Strategies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In GHC 8.0 there were two alternative methods for automatic deriving of typeclass instances, using &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; and &lt;code&gt;DeriveAnyClass&lt;/code&gt;. In addition there was also the wired-in deriving mechanisms for &lt;code&gt;Show&lt;/code&gt;, &lt;code&gt;Read&lt;/code&gt;, etc that were hardcoded into the compiler. These all used the same syntax and would conflict if multiple pragmas were enabled in a module.&lt;/p&gt;
&lt;p&gt;The addition of &lt;code&gt;DerivingStrategies&lt;/code&gt; allows us to disambiguate which deriving mechanism to use for a specific instance generation.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Meters&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Meters&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; stock    (&lt;span class=&quot;dt&quot;&gt;Read&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)
  &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt;  (&lt;span class=&quot;dt&quot;&gt;Num&lt;/span&gt;)
  &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; anyclass (&lt;span class=&quot;dt&quot;&gt;ToJSON&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;FromJSON&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;backpack&quot;&gt;Backpack&lt;/h4&gt;
&lt;p&gt;Edward Yang finished his PhD thesis on Backpack which was integrated in the GHC tree. The new branch adds support &lt;code&gt;.bkp files&lt;/code&gt;, which specify abstract interfaces which can be instantiated in modules and used to construct Haskell modules which work polymorphically across multiple module instantiations.&lt;/p&gt;
&lt;p&gt;For example an abstract string type can be written which operates over a module parameter `Str``:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;unit abstract&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;str &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
    signature &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;        len ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;AStr&lt;/span&gt; (alen) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt;

&lt;span class=&quot;ot&quot;&gt;        alen ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;
        alen &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; len&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can create (contrived) instantiations of this module for lists of ints and chars which expose a polymorphic length function over both.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;unit str&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;string &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;

&lt;span class=&quot;ot&quot;&gt;        len ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;
        len &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; length

unit str&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;list &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;]

&lt;span class=&quot;ot&quot;&gt;        len ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;
        len &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; length&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The modules can then be opened as speific namespaces with the exported functions able to be called over both module types.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;unit main &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
    dependency abstract&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;str[&lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt;str&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;string&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt;] (&lt;span class=&quot;dt&quot;&gt;AStr&lt;/span&gt; as &lt;span class=&quot;dt&quot;&gt;AStr.Int&lt;/span&gt;)
    dependency abstract&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;str[&lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt;str&lt;span class=&quot;fu&quot;&gt;-&lt;/span&gt;list&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Str&lt;/span&gt;] (&lt;span class=&quot;dt&quot;&gt;AStr&lt;/span&gt; as &lt;span class=&quot;dt&quot;&gt;AStr.String&lt;/span&gt;)

    &lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Main&lt;/span&gt; (main) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;import qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;AStr.Int&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;import qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;AStr.String&lt;/span&gt;

&lt;span class=&quot;ot&quot;&gt;        main ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ()
        main &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;
            print &lt;span class=&quot;fu&quot;&gt;$&lt;/span&gt; AbstractStr.String.alen &lt;span class=&quot;st&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;
            print &lt;span class=&quot;fu&quot;&gt;$&lt;/span&gt; AbstractStr.Int.alen [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the latest GHC this can be compiled with the &lt;code&gt;--backpack&lt;/code&gt; which generates the sum of all the &lt;code&gt;hi&lt;/code&gt; files specified in the &lt;code&gt;.bkp&lt;/code&gt; file and resolves values at link-time.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;stack&lt;/span&gt; exec -- ghc --backpack example.bkp&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the functionality exists today, I’m not aware of any large projects using Backpack. Bolting this functionality onto an ecosystem that has spent a decade routing around many of the problems this system aims to solve, poses a huge engineering cost and may take a while to crystallize.&lt;/p&gt;
&lt;h4 id=&quot;summer-of-haskell&quot;&gt;Summer of Haskell&lt;/h4&gt;
&lt;p&gt;Google lacked vision this year and did not sponsor the Haskell Organization for Summer of Code. But the program proceeded regardless with private sponsorship from industrial users. Fifteen students were paired with mentors and many successful projects and &lt;a href=&quot;https://summer.haskell.org/news/2017-09-15-final-results.html&quot;&gt;collaborations resulted&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;llvm&quot;&gt;LLVM&lt;/h4&gt;
&lt;p&gt;The LLVM bindings for Haskell saw quite a bit of work this year and were forked into a new organization &lt;a href=&quot;https://www.github.com/llvm-hs&quot;&gt;llvm-hs&lt;/a&gt; and added support for LLVM 4.0 - 5.1:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/llvm-hs/llvm-hs/tree/llvm-5/llvm-hs&quot;&gt;llvm-hs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/llvm-hs/llvm-hs/tree/llvm-5/llvm-hs-pure&quot;&gt;llvm-hs-pure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/llvm-hs/llvm-hs-pretty/&quot;&gt;llvm-hs-pretty&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In a collaboration with Joachim Breitner and myself at Zurihac a type-safe LLVM library which embeds the semantics of LLVM instructions into the Haskell &lt;a href=&quot;https://github.com/llvm-hs/llvm-hs-typed&quot;&gt;type-system&lt;/a&gt; was written.&lt;/p&gt;
&lt;p&gt;Siddharth Bhat started work on an STG to LLVM backend &lt;a href=&quot;https://pixel-druid.com/blog/announcing-simplexhc/&quot;&gt;simplehxc&lt;/a&gt; before doing a rewrite in C++.&lt;/p&gt;
&lt;p&gt;Moritz Angermann has been continuing to develop a Haskell library for emitting and reading &lt;a href=&quot;https://github.com/angerman/data-bitcode-llvm&quot;&gt;LLVM Bitcode format&lt;/a&gt; as well as work on the &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/10074&quot;&gt;llvm-ng&lt;/a&gt; backend which is a major rewrite of the GHC LLVM code generator.&lt;/p&gt;
&lt;h4 id=&quot;linear-types&quot;&gt;Linear Types&lt;/h4&gt;
&lt;p&gt;Arnaud Spiwack prototyped a &lt;a href=&quot;https://github.com/tweag/linear-types&quot;&gt;extension of GHC&lt;/a&gt; which augments the type system with linear types. &lt;a href=&quot;http://edsko.net/2017/01/08/linearity-in-haskell/&quot;&gt;Edsko de Vries&lt;/a&gt; wrote a detailed blog post about the nature of linearity and it’s uses.&lt;/p&gt;
&lt;p&gt;The proposal extends the typing of functions to include linearity constraints on arrows, enforcing that variables or references are created and consumed with constrained reference counts. This allows us to statically enforce reference borrowing and allocations in the typechecker potentially allowing us to enforce lifetime constraints on closures and eliminating long-lived memory from being used with constructed unbounded lifetimes, thereby eliminating garbage collection for some Haskell functions.&lt;/p&gt;
&lt;p&gt;For instance use of the linear arrow &lt;code&gt;(a -&amp;gt;. b)&lt;/code&gt; can enrich the existing raw memory access functions enforcing the matching of allocation and free commands statically. The multiplicity of usage is either &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;ω&lt;/code&gt; and the linear arrow is syntatic sugar for unit multiplicity are aliases for &lt;code&gt;(:'1 -&amp;gt;)&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span class=&quot;ot&quot;&gt;malloc ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Storable&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Ptr&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Unrestricted&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Unrestricted&lt;/span&gt; b
read&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Storable&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Ptr&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Ptr&lt;/span&gt; a, a)
&lt;span class=&quot;ot&quot;&gt;free ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Ptr&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; ()&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;New abstractions such as movable, consumable and dupable references can be constructed out of existing class hierarchies and enriched with static linearity checks:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Consumable&lt;/span&gt; a &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;  consume ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; ()

&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Consumable&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Dupable&lt;/span&gt; a &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;  dup ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; (a, a)

&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Dupable&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Movable&lt;/span&gt; a &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;  move ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Unrestricted&lt;/span&gt; a

&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Dupable&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Dupable&lt;/span&gt; [a] &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
  dup [] &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; ([], [])
  dup (a&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;l) &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; shuffle (dup a) (dup l)
    &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;      shuffle ::&lt;/span&gt; (a, a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; ([a], [a]) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; ([a], [a])
      shuffle (a, a') (l, l') &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; (a&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;l, a'&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;l')

&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Consumable&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Consumable&lt;/span&gt; [a] &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;
  consume [] &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; ()
  consume (a&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;l) &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; consume a &lt;span class=&quot;ot&quot;&gt;`lseq`&lt;/span&gt; consume l&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As part of the Summer of Haskell Edvard Hübinette used linear types to construct a safer stream processing library which can enforce resource consumption statically &lt;a href=&quot;https://github.com/m0ar/safe-streaming&quot;&gt;using linearity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is considerable debate &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/pull/91&quot;&gt;about the proposal&lt;/a&gt; and the nature of integration of linear types into GHC. With some community involvement these patches could be integrated quite quickly in GHC.&lt;/p&gt;
&lt;h4 id=&quot;liquidhaskell&quot;&gt;LiquidHaskell&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://ucsd-progsys.github.io/liquidhaskell-blog/&quot;&gt;LiquidHaskell&lt;/a&gt; the large suite of tools for adding refinement types to GHC Haskell continued development and became considerably more polished. At HaskellExchange several companies were using it in anger in production. For example, we can enforce statically the lists given at compile-time statically cannot contain certain values by constructing a proposition function in a (subset) of Haskell which can refine other definitions:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;measure&lt;span class=&quot;ot&quot;&gt; hasZero ::&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Prop&lt;/span&gt;
hasZero [] &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; false
hasZero (x&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;xs) &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; x &lt;span class=&quot;fu&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;||&lt;/span&gt; (hasZero xs)

&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;HasZero&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; {v &lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;] &lt;span class=&quot;fu&quot;&gt;|&lt;/span&gt; (hasZero v)}

&lt;span class=&quot;co&quot;&gt;-- Accepted&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;xs ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;HasZero&lt;/span&gt;
xs &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]

&lt;span class=&quot;co&quot;&gt;-- Rejected&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;ys ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;HasZero&lt;/span&gt;
ys &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be used to &lt;a href=&quot;https://github.com/ucsd-progsys/liquidhaskell/blob/develop/include/Data/Maybe.spec&quot;&gt;statically enforce&lt;/a&gt; that logic that consumes only a Just value can provably only be called with a &lt;code&gt;Just&lt;/code&gt; with a &lt;code&gt;isJust&lt;/code&gt; measure:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;measure&lt;span class=&quot;ot&quot;&gt; isJust ::&lt;/span&gt; forall a&lt;span class=&quot;fu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Maybe.Maybe&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;
isJust (&lt;span class=&quot;dt&quot;&gt;Data.Maybe.Just&lt;/span&gt; x)  &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; true 
isJust (&lt;span class=&quot;dt&quot;&gt;Data.Maybe.Nothing&lt;/span&gt;) &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; false &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This year saw the addition of inductive predicates allowing more complex properties about non-arithmetic refinements to be checked. Including properties about lists&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;measure&lt;span class=&quot;ot&quot;&gt; len ::&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;
len [] &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
len (x&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;xs) &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;+&lt;/span&gt; (len xs)

&lt;span class=&quot;co&quot;&gt;-- Spec for Data.List exports refined types which can be statically refined with&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;-- length constraints.&lt;/span&gt;
[]&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; {v&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;[a]&lt;span class=&quot;fu&quot;&gt;|&lt;/span&gt; len v &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;}
&lt;span class=&quot;ot&quot;&gt;(:) ::&lt;/span&gt; _ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; xs&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; {v&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;[a]&lt;span class=&quot;fu&quot;&gt;|&lt;/span&gt; len v &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;+&lt;/span&gt; len xs}

&lt;span class=&quot;ot&quot;&gt;append ::&lt;/span&gt; xs&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;[a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; ys&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;[a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; {v&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;[a]&lt;span class=&quot;fu&quot;&gt;|&lt;/span&gt; len v &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; len xs &lt;span class=&quot;fu&quot;&gt;+&lt;/span&gt; len ys}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The full library of specifications is now quite extensive and adding &lt;a href=&quot;https://github.com/ucsd-progsys/liquidhaskell/blob/develop/include&quot;&gt;LiquidHaskell&lt;/a&gt; to an existing codebase is pretty seamelss&lt;/p&gt;
&lt;h4 id=&quot;foundation&quot;&gt;Foundation&lt;/h4&gt;
&lt;p&gt;Foundation is an alternative Prelude informed by modern design practices and data structures. It ships a much more sensible and efficient packed array of UTF8 points as it’s default &lt;a href=&quot;https://hackage.haskell.org/package/foundation-0.0.17/docs/Foundation-String.html&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type. Rethinks the &lt;code&gt;Num&lt;/code&gt; &lt;a href=&quot;https://hackage.haskell.org/package/foundation-0.0.17/docs/Foundation-Numerical.html&quot;&gt;numerical tower&lt;/a&gt; , and statically distinguishes &lt;a href=&quot;https://hackage.haskell.org/package/foundation-0.0.17/docs/Foundation.html#t:Partial&quot;&gt;partial functions&lt;/a&gt;. Also has fledgling documentation beyond just&lt;/p&gt;
&lt;p&gt;Last year Foundation was a bit early, but this year at Zurihac several companies in London reported using it fully in production as a full industrial focused Prelude.&lt;/p&gt;
&lt;h4 id=&quot;editor-tooling&quot;&gt;Editor Tooling&lt;/h4&gt;
&lt;p&gt;Editor integration improved, adding best in modern tooling to most of the common editors:&lt;/p&gt;
&lt;table&gt;&lt;colgroup&gt;&lt;col width=&quot;24%&quot;/&gt;&lt;col width=&quot;75%&quot;/&gt;&lt;/colgroup&gt;&lt;thead/&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td align=&quot;left&quot;&gt;
&lt;p&gt;&lt;strong&gt;Atom&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;left&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://atom.io/packages/ide-haskell&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td align=&quot;left&quot;&gt;
&lt;p&gt;&lt;strong&gt;Emacs&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;left&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://commercialhaskell.github.io/intero/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td align=&quot;left&quot;&gt;
&lt;p&gt;&lt;strong&gt;IntelliJ&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;left&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://plugins.jetbrains.com/plugin/8258-intellij-haskell&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td align=&quot;left&quot;&gt;
&lt;p&gt;&lt;strong&gt;VSCode&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;left&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://marketplace.visualstudio.com/items?itemName=Vans.haskero&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td align=&quot;left&quot;&gt;
&lt;p&gt;&lt;strong&gt;Sublime&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;left&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://packagecontrol.io/packages/SublimeHaskell&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Monica Lent wrote a lovely post on the state of art in &lt;a href=&quot;http://monicalent.com/blog/2017/11/19/haskell-in-vim/&quot;&gt;Vim and Haskell integration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Rik van der Kleij has done an impressive amount of work adapting the IntellJ IDE to &lt;a href=&quot;https://github.com/rikvdkleij/intellij-haskell&quot;&gt;work with Haskell&lt;/a&gt;. Including a custom parser handling all of the syntax extensions, name lookup, Intero integration and integration with haskell-tools refactoring framework.&lt;/p&gt;
&lt;p&gt;Development on the &lt;a href=&quot;https://github.com/haskell/haskell-ide-engine&quot;&gt;haskell-ide-engine&lt;/a&gt; has picked up again in the last few months.&lt;/p&gt;
&lt;h4 id=&quot;formal-methods&quot;&gt;Formal Methods&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://deepspec.org/page/Research/&quot;&gt;DeepSpec&lt;/a&gt;, a collaboration between MIT, UPenn, Princeton and Yale, is working on a network of specification that span many compilers, languages and intermediate representations with the goal of achieving full functional correctness of software and hardware. Both Haskell and LLVM are part of this network of specifications. The group has successfully written a new formal calculus describing the GHC core language and proved it type sound in Coq. The project is called &lt;a href=&quot;https://github.com/sweirich/corespec&quot;&gt;corespec&lt;/a&gt; and is described in the paper “A Specification for Dependent Types in Haskell”.&lt;/p&gt;
&lt;p&gt;In addition the group also published a paper “Total Haskell is Reasonable Coq” and provided a utlity &lt;a href=&quot;https://github.com/antalsz/hs-to-coq&quot;&gt;hs-to-coq&lt;/a&gt; which converts haskell code to equivalent Coq code.&lt;/p&gt;
&lt;p&gt;The Galois group started &lt;a href=&quot;https://github.com/GaloisInc/cryptol-semantics&quot;&gt;formalizing the semantics&lt;/a&gt; of Cryptol, a compiler for high-assurance cryptographic protocols which is itself written in Haskell.&lt;/p&gt;
&lt;p&gt;Michael Burge wrote a cheeky article about extracting a specification for a &lt;a href=&quot;http://www.michaelburge.us/2017/08/25/writing-a-formally-verified-porn-browser-in-coq.html&quot;&gt;“domain specific” browser&lt;/a&gt; from Coq into Haskell.&lt;/p&gt;
&lt;h4 id=&quot;pragma-proliferation-prelude&quot;&gt;Pragma Proliferation &amp;amp; Prelude&lt;/h4&gt;
&lt;p&gt;Writing Haskell is almost trivial in practice. You just start with the magic fifty line &lt;code&gt;{-# LANGUAGE ... #-}&lt;/code&gt; incantation to fast-forward to 2017, then add 150 libraries that you’ve blessed by trial and error to your cabal file, and then just write down a single type signature whose inhabitant is &lt;code&gt;Refl&lt;/code&gt; to your program. In fact if your program is longer than your import list you’re clearly doing Haskell all wrong.&lt;/p&gt;
&lt;p&gt;In all seriousness, Haskell is not the small language it once was in 1998, it’s reach spans many industries, hobbyists, academia and many classes of people with different incentives and whose ideas about the future of the language are mutually incompatible. Realistically the reason why the Prelude and extension situation aren’t going to change anytime soon is that no one person or company has the economic means to champion such a change. It would be enormously expensive and any solution will never satisfy everyone’s concerns and desires. &lt;em&gt;Consensus is expensive&lt;/em&gt;, while making everything opt-in is relatively cheap. This is ultimately the equilibrium we’ve converged on and barring some large sea change the language is going to remain in this equilibrium.&lt;/p&gt;
&lt;h4 id=&quot;haskell-survey&quot;&gt;Haskell Survey&lt;/h4&gt;
&lt;p&gt;Taylor Fausak conducted an &lt;a href=&quot;http://taylor.fausak.me/2017/11/15/2017-state-of-haskell-survey-results/&quot;&gt;unofficial survey&lt;/a&gt; of Haskell users with some surprising results about widespread use of Haskell. Surprisingly there are reportedly 100 or more people who maintain 100,000 or more lines of Haskell code. Not so surprisingly most people have migrated to Stack while vim and emacs are the editors of choice.&lt;/p&gt;
&lt;p&gt;While the majority of respondents are satisfied with Haskell the language the response are somewhat mixed the quality of libraries and the bulk of respondents reported Haskell libraries being &lt;em&gt;undocumented&lt;/em&gt; , &lt;em&gt;hard to use&lt;/em&gt; &lt;em&gt;hard to find&lt;/em&gt;, and don’t &lt;em&gt;integrate well&lt;/em&gt;.&lt;/p&gt;
&lt;h4 id=&quot;projects&quot;&gt;Projects&lt;/h4&gt;
&lt;p&gt;Idris, the experimental dependently typed language, reached 1.0 release and became one of the larger languages which is itself written in Haskell.&lt;/p&gt;
&lt;p&gt;The most prolific Haskell library Pandoc released its version 2.0.&lt;/p&gt;
&lt;p&gt;Several other groups published new compilers in the Haksell-family of languages. Intel finally open sourced the &lt;a href=&quot;https://github.com/IntelLabs/flrc&quot;&gt;Intell Haskell compiler&lt;/a&gt; which was a research project in more optimal compilation techniques. Morgan Stanley also released &lt;a href=&quot;http://lambda-the-ultimate.org/node/5452&quot;&gt;Hobbes&lt;/a&gt; a Haskell-like language used internally at the bank featuring several novel extensions to row-types and C++ FFI integration. A prototype Haskell compiler was also written in &lt;a href=&quot;https://github.com/Marwes/haskell-compiler&quot;&gt;Rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The SMT solver integration library SBV saw a major rewrite of it’s internal and it’s old &lt;a href=&quot;https://hackage.haskell.org/package/sbv-7.3/docs/Data-SBV-Control.html&quot;&gt;tactics system&lt;/a&gt;. The library is heavily used in various projects as an interface to Z3 and CVC4 solvers.&lt;/p&gt;
&lt;p&gt;Uber released a library for parsing and analysis of Vertica, Hive, and Presto &lt;a href=&quot;https://github.com/uber/queryparser&quot;&gt;SQL queries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Wire released the &lt;a href=&quot;https://github.com/wireapp/wire-server&quot;&gt;backend service&lt;/a&gt; to their commercial offering.&lt;/p&gt;
&lt;p&gt;The Advanced Telematic Systems group in Berlin released a Quickcheck family library for doing for property testing of models about &lt;a href=&quot;https://github.com/advancedtelematic/quickcheck-state-machine&quot;&gt;state machines&lt;/a&gt;. Bose also released Smudge a tool for doing developemtn and &lt;a href=&quot;https://github.com/Bose/Smudge&quot;&gt;analysis of large state machines&lt;/a&gt; for hardware testing.&lt;/p&gt;
&lt;p&gt;Florian Knupfer released a new high-performance HTML &lt;a href=&quot;https://github.com/knupfer/type-of-html&quot;&gt;combinator library&lt;/a&gt; for templating.&lt;/p&gt;
&lt;p&gt;Galois continued with HalVM unikernel continued development this year, and several &lt;a href=&quot;https://github.com/GaloisInc/HaLVM/wiki/Using-Docker-and-the-HaLVM&quot;&gt;HalVM Docker Imagaes&lt;/a&gt; were published allowing a very convenient way to write and test code against HalVM.&lt;/p&gt;
&lt;p&gt;Facebook released a Haskell string parsing library &lt;a href=&quot;https://github.com/facebook/duckling&quot;&gt;duckling&lt;/a&gt; which parses human input into a restricted set of semantically tagged data. Facebook also prototyped a technique for hot-swapping &lt;a href=&quot;https://simonmar.github.io/posts/2017-10-17-hotswapping-haskell.html&quot;&gt;Haskell code at runtime&lt;/a&gt; using clever GHC API trickery.&lt;/p&gt;
&lt;p&gt;Adjoint released &lt;a href=&quot;https://github.com/adjoint-io/uplink&quot;&gt;Uplink&lt;/a&gt;, a distributed ledger for secure multiparty workflows in financial markets.&lt;/p&gt;
&lt;p&gt;Chris Done released &lt;a href=&quot;https://github.com/chrisdone/vado&quot;&gt;vado&lt;/a&gt; a browser engine written in Haskell.&lt;/p&gt;
&lt;p&gt;Jonas Carpay released &lt;a href=&quot;https://github.com/jonascarpay/apecs&quot;&gt;apecs&lt;/a&gt; an entity component system for game development in Haskell.&lt;/p&gt;
&lt;p&gt;Csaba Hruska continued work on a &lt;a href=&quot;https://github.com/csabahruska/grin&quot;&gt;GRIN compiler&lt;/a&gt; and code generator, an alternative core language for compiling lazy functional languages based on the work by Urban Boquist.&lt;/p&gt;
&lt;p&gt;Dima Szamozvancev released &lt;a href=&quot;https://github.com/DimaSamoz&quot;&gt;mezzo&lt;/a&gt; a library and embedded domain-specific language for music description that can enforce rules of compositionality of music statically and prevent bad music from being unleashed on the world.&lt;/p&gt;
&lt;p&gt;Conal Elliot and John Wiegley advanced a novel set of ideas on &lt;a href=&quot;https://github.com/conal/concat&quot;&gt;Compiling with Categories&lt;/a&gt; which allows the bidirectional representation of Haskell functions as categorical structures. Although currently implemented as a GHC typechecker extension it is a promising research area.&lt;/p&gt;
&lt;p&gt;Harry Clarke published a paper on &lt;a href=&quot;https://www.cs.kent.ac.uk/people/staff/dao7/publ/reprinter2017.pdf&quot;&gt;Generics Layout-Preserving Refactoring&lt;/a&gt; using a &lt;a href=&quot;https://github.com/camfort/reprinter&quot;&gt;reprinter&lt;/a&gt;. i.e. a tool which takes a syntax tree, the original source file, and produces an updated source file which preserves secondary notation. This can be used to build tools like haskell-tools for arbitrary languages and write complicated refactoring suites.&lt;/p&gt;
&lt;p&gt;Joachim Breitner contributed a prolific amount of open source projects including a new technique (ghc-proofs) for proving the equivalence of Haskell programs using a GHC plugin, (veggies) a verified simple LLVM code generator for GHC, and (inspection-testing) new technique for verifying properties of Core.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/nomeata/veggies&quot;&gt;veggies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nomeata/ghc-proofs&quot;&gt;ghc-proofs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nomeata/inspection-testing&quot;&gt;inspecction-testing&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The &lt;a href=&quot;https://www.youtube.com/watch?v=jcL4bp4FMUw&amp;amp;feature=youtu.be&quot;&gt;ghc-proofs plugin&lt;/a&gt; allows us to embed equation and relations into our Haskell module and potentially allow GHC to prove them correct by doing symbolic evaluation and evaluating them as far as possible and checking the equational relations of the equations sides. Right now it works for contrived and simple examples, but is quite a interesting approach that may yield further fruit.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode haskell&quot;&gt;
&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span class=&quot;ot&quot;&gt;{-# OPTIONS_GHC -O -fplugin GHC.Proof.Plugin #-}&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Simple&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;GHC.Proof&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Data.Maybe&lt;/span&gt;

my_proof1 &lt;span class=&quot;fu&quot;&gt;=&lt;/span&gt; (\f x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; isNothing (fmap f x))
        &lt;span class=&quot;fu&quot;&gt;===&lt;/span&gt; (\f x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; isNothing x)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;ghc&lt;/span&gt; Simple.hs
[&lt;span class=&quot;kw&quot;&gt;1&lt;/span&gt; of 1] Compiling Simple           ( Simple.hs, Simple.o )
&lt;span class=&quot;kw&quot;&gt;GHC.Proof&lt;/span&gt;: Proving my_proof1 …
&lt;span class=&quot;kw&quot;&gt;GHC.Proof&lt;/span&gt; proved 1 equalities&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;haddock&quot;&gt;Haddock&lt;/h4&gt;
&lt;p&gt;Haddock is creaking at the seams. Most large Haskell projects (GHC, Stack, Agda, Cabal, Idris, etc) no longer use it for documentation. The codebase is dated and long standing issue like dealing with reexported modules are still open.&lt;/p&gt;
&lt;p&gt;There is a large vacuum for a better solution to emerge and compatibility with RestructuredText would allow easy migration of existing documentation.&lt;/p&gt;
&lt;h4 id=&quot;databases&quot;&gt;Databases&lt;/h4&gt;
&lt;p&gt;This year saw two new approaches to Haskell database integration:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/valderman/selda&quot;&gt;Selda&lt;/a&gt; - A library interacting with relational databases inspired by LINQ and Opaleye.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/morphismtech/squeal&quot;&gt;Squeal&lt;/a&gt; - A deep embedding of PostgreSQL in Haskell using generics-sop.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This still remains an area in the ecosystem where many solutions end up needlessly falling back to TemplateHaskell to generate data structures and typically tend to be a pain point. Both these libraries use generics and advanced type system features to statically enforce well-formed SQL query construction.&lt;/p&gt;
&lt;h4 id=&quot;data-science-numerical-computing&quot;&gt;Data Science &amp;amp; Numerical Computing&lt;/h4&gt;
&lt;p&gt;Chris Doran presented a concise interpretation of Geometric Algebra, a generalization of linear algebra in terms of graded algebra &lt;a href=&quot;https://github.com/ga/Haskell/blob/master/GABlade.hs&quot;&gt;written in Haskell&lt;/a&gt;. A talk on this project was presented at the &lt;a href=&quot;https://skillsmatter.com/conferences/8522-haskell-exchange-2017#program&quot;&gt;Haskell Exchange&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At ZuriHac several people expressed interest in forming a &lt;a href=&quot;https://github.com/DataHaskell/&quot;&gt;Data Haskell&lt;/a&gt; organization to work on advancing the state of Haskell libraries for data science and macing learning. There is considerable interest of the constructing the right abstractions for a well-typed dataframe library.&lt;/p&gt;
&lt;p&gt;Tom Nielson is furiously working on a &lt;a href=&quot;https://github.com/diffusionkinetics/open&quot;&gt;suite&lt;/a&gt; of of projects, mostly related to data science, machine learning and statistics in Haskell.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/Accelerate&quot;&gt;Accelerate project&lt;/a&gt; has been seeing a lot of development work recently and now has support for latest versions of LLVM and CUDA through llvm-hs project.&lt;/p&gt;
&lt;p&gt;A group at the University of Gothenburg released &lt;a href=&quot;https://github.com/GU-CLASP/TypedFlow&quot;&gt;TypedFlow&lt;/a&gt; a statically typed higher-order frontend to TensorFlow.&lt;/p&gt;
&lt;h4 id=&quot;eta&quot;&gt;Eta&lt;/h4&gt;
&lt;p&gt;Typelead continued working on a Java Virtual Machine backend to GHC called &lt;a href=&quot;http://eta-lang.org/&quot;&gt;Eta&lt;/a&gt;. The project has seen considerable amount of person-hours invested in compatibility and the firm has raised capital to pursue the project as a &lt;a href=&quot;https://www.crunchbase.com/organization/typelead&quot;&gt;commercial venture&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project does seem to be diverging from the Haskell mainline language in both syntax and semantics which raises some interesting questions about viability. Although the Haskell language standard seems to be stuck and not moving forward, so there’s an interesting conundrum faced by those trying to build on top of GHC in the long run.&lt;/p&gt;
&lt;h4 id=&quot;webassembly&quot;&gt;WebAssembly&lt;/h4&gt;
&lt;p&gt;WebAssembly has been released and is supported by all major browsers as of December 2017. This is been piquing the interest of quite a few Haskellers (including myself) who have been looking for a saner way to interact with browsers than the ugly hack of ejecting hundreds of thousands of lines of generated Javascript source. WebAssembly in either standalone projects or as a target from GHC’s intermediate form STG to the browser offers an interesting path forward.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/haskell-wasm/&quot;&gt;Haskell WASM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebGHC&quot;&gt;WebGHC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/neuromancer42/ministgwasm&quot;&gt;ministgwasm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/forest-lang/core&quot;&gt;forest-lang&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;industry&quot;&gt;Industry&lt;/h4&gt;
&lt;p&gt;An incomplete list of non-consulting companies who are actively using Haskell or have published Haskell open sources libraries follows:&lt;/p&gt;
&lt;table&gt;&lt;colgroup&gt;&lt;col width=&quot;28%&quot;/&gt;&lt;/colgroup&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Standard Chartered&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Galois&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Intel&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Target&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Uber&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Vente Privee&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;FrontRow&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;NStack&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Morgan Stanley&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Takt&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Fugue&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Habito&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Asahi Net&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Sentenai&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;IOHK&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Awake Networks&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Facebook&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Adjoint&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;DigitalAsset&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;AlphaSheets&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Channable&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;SlamData&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Wire&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;JP Morgan&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Bose&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;There are four consulting companies also supporting Haskell in industry.&lt;/p&gt;
&lt;table&gt;&lt;colgroup&gt;&lt;col width=&quot;28%&quot;/&gt;&lt;/colgroup&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;Well-Typed&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Tweag&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;left&quot;&gt;FP Complete&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;left&quot;&gt;Obsidian Systems&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4 id=&quot;conferences&quot;&gt;Conferences&lt;/h4&gt;
&lt;p&gt;Both the &lt;a href=&quot;https://www.flickr.com/photos/skillsmatter/sets/72157686979473651/&quot;&gt;Haskell Exchange&lt;/a&gt; and ZuriHac conference had record attendance this year. Haskell was well-represented in many interdisciplinary conferences include StrangeLoop, CurryOn, LambdaDays, LambdaConf, and YOW.&lt;/p&gt;
&lt;p&gt;Most of the videos are freely available online.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/conferences/8522-haskell-exchange-2017&quot;&gt;Haskell Exchange Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC0pEknZxL7Q1j0Ok8qImWdQ/videos&quot;&gt;ComposeConf Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KzqNQMpRbac&amp;amp;list=PLOvRW_utVPVkoZ5GuodkejFU8MiH6_SB7&quot;&gt;ZuriHac Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MmbleUgU2Rg&amp;amp;list=PLnqUlCo055hW7kU-SBQEhC_87etA5Gqlq&quot;&gt;ICFP Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;http://www.stephendiehl.com/images/zurihac.jpg&quot; alt=&quot;Haskellers by the lake in Rapperswil, Switzerland&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In 2018 I have plans to visit Zurich, Sydney, Budapest, Amsterdam, San Francisco, Paris, Copenhagen and Tokyo this year. Hopefully I get to meet more Haskellers and share some ideas about the future of our beautiful language. Until then, Merry Christmas and Happy New Haskell Year.&lt;/p&gt;
</description>
<pubDate>Mon, 04 Dec 2017 03:29:19 +0000</pubDate>
<dc:creator>setra</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.stephendiehl.com/posts/haskell_2018.html</dc:identifier>
</item>
<item>
<title>Nations agree to ban fishing in Arctic Ocean for at least 16 years</title>
<link>http://www.sciencemag.org/news/2017/12/nations-agree-ban-fishing-arctic-ocean-least-16-years</link>
<guid isPermaLink="true" >http://www.sciencemag.org/news/2017/12/nations-agree-ban-fishing-arctic-ocean-least-16-years</guid>
<description>&lt;div class=&quot;entity entity-paragraphs-item paragraphs-item-image&quot; readability=&quot;6.4473684210526&quot;&gt;&lt;img sizes=&quot;&quot; src=&quot;http://www.sciencemag.org/sites/default/files/styles/inline__450w__no_aspect/public/arctic%20sea%20ice.jpg?itok=ugifr1SJ&quot; srcset=&quot;http://www.sciencemag.org/sites/default/files/styles/inline__450w__no_aspect/public/arctic%20sea%20ice.jpg?itok=ugifr1SJ 1w, http://www.sciencemag.org/sites/default/files/styles/inline__699w__no_aspect/public/arctic%20sea%20ice.jpg?itok=m78RS_6I 700w&quot;/&gt;&lt;div class=&quot;caption&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Declining summer sea ice could open the Arctic Ocean to commercial fishing.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;header class=&quot;article__header article__header--inline&quot; readability=&quot;25.902912621359&quot;&gt;
&lt;p class=&quot;byline byline--article&quot;&gt;By &lt;a href=&quot;http://www.sciencemag.org/author/hannah-hoag&quot;&gt;Hannah Hoag&lt;/a&gt;&lt;time&gt;Dec. 1, 2017 , 1:30 PM&lt;/time&gt;&lt;/p&gt;
&lt;/header&gt;&lt;p&gt;Nine nations and the European Union have reached a deal to place the central Arctic Ocean (CAO) off-limits to commercial fishers for at least the next 16 years. The pact, announced yesterday, will give scientists time to understand the region’s marine ecology—and the potential impacts of climate change—before fishing becomes widespread.&lt;/p&gt;
&lt;p&gt;“There is no other high seas area where we’ve decided to do the science first,” says Scott Highleyman, vice president of conservation policy and programs at the Ocean Conservancy in Washington, D.C., who also served on the U.S. delegation to the negotiations. “It’s a great example of putting the precautionary principle into action.”&lt;/p&gt;
&lt;p&gt;The deal to protect 2.8 million square kilometers of international waters in the Arctic was reached after six meetings spread over 2 years. It includes not just nations with coastal claims in the Arctic, but nations such as China, Japan, and South Korea with fishing fleets interested in operating in the region.&lt;/p&gt;
&lt;p&gt;Thus far, thick ice and uncertain fish stocks have kept commercial fishing vessels out of the CAO, but the region is becoming increasingly accessible because of rapid loss of summer sea ice. In recent summers, as much as 40% of the CAO has been open water, mostly north of Alaska and Russia, over the Chukchi Plateau.&lt;/p&gt;
&lt;p&gt;As the summer sea ice becomes thinner and its edge retreats northward, more sunlight is penetrating the water, increasing production of plankton, the base of the Arctic food web. These sun-fed plankton are gobbled up by Arctic cod, which in turn are hunted by animals higher up the food chain, including seals, polar bears, and humans. Some parts of the Arctic Ocean’s adjacent seas, such as the Barents Sea (off the northern coasts of Russia and Norway), saw steep increases in primary production in 2016, approaching 35% above the 2003–15 average.&lt;/p&gt;
&lt;p&gt;Under international law, these high seas are open to anyone. In the absence of an agreement, fishing there would not be illegal, but it would be unregulated—and some researchers, environmental groups, and policymakers fear it could harm the fragile and rapidly changing marine ecosystem. In the late 1980s, fishing trawlers from Japan, China, and elsewhere crowded the international waters in the Bering Strait between Russia and the United States and removed millions of tons of pollock. By the early 1990s, the pollock population had crashed. It has still not recovered.&lt;/p&gt;
&lt;p&gt;In 2012, approximately 2000 scientists called for a fishing moratorium in the CAO to prevent a similar catastrophe. Their efforts were a success: By 2015, Canada, Denmark (representing Greenland), Norway, Russia, and the United States—the nations with Arctic coastlines—vowed to bar their own fishing vessels from the area.&lt;/p&gt;
&lt;p&gt;But that left the Arctic open to large global fishing fleets. Delegations from Japan, China, South Korea, Iceland, and the European Union joined discussion later that year to negotiate a new agreement. In December 2016, before he left office, then-President Barack Obama and Canadian Prime Minister Justin Trudeau affirmed their commitment to a legally binding agreement to prevent unregulated fishing in the CAO.&lt;/p&gt;
&lt;p&gt;“The delegations saw the wisdom in waiting [to start commercial fishing] until there was enough science and management in place,” says Ambassador David Balton of the U.S. Department of State in Washington, D.C., who has chaired the negotiations since 2015. The deal will stand for 16 years and be automatically renewed every 5 years, unless a country objects or until science-based fisheries quota and rules are put in place.&lt;/p&gt;
&lt;p&gt;In addition to closing the area to fishing, the delegations have agreed to a joint program of scientific research and monitoring to identify species, their abundance, existing predator-prey relationships, and the pressures they face, including climate change.&lt;/p&gt;
&lt;p&gt;For now, accessing the CAO to do research requires significant icebreaking capacity, says Peter Harrison, an Arctic policy and fisheries expert at Queen’s University in Kingston, Canada, and former deputy minister of Canada’s Department of Fisheries and Oceans. Whereas the United States and Canada have struggled to maintain and grow their icebreaking fleet, other signatories, including China, have that capacity.&lt;/p&gt;
&lt;p&gt;Harrison argues for the creation of a new multinational science organization focused on the CAO. It would determine the science priorities, share and analyze the data collected, and provide advice on the state of the CAO fish stocks. “If you say commercial fishing will not take place until the there is sufficient science, going forward, the science will play a very significant role,” he says.&lt;/p&gt;
</description>
<pubDate>Mon, 04 Dec 2017 02:15:56 +0000</pubDate>
<dc:creator>jonbaer</dc:creator>
<og:type>article</og:type>
<og:url>http://www.sciencemag.org/news/2017/12/nations-agree-ban-fishing-arctic-ocean-least-16-years</og:url>
<og:title>Nations agree to ban fishing in Arctic Ocean for at least 16 years</og:title>
<og:description>Landmark pact designed to allow time to develop science-based management</og:description>
<og:image>http://www.sciencemag.org/sites/default/files/styles/article_main_large/public/arctic%20sea%20ice.jpg?itok=VQv5ihVi</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.sciencemag.org/news/2017/12/nations-agree-ban-fishing-arctic-ocean-least-16-years</dc:identifier>
</item>
<item>
<title>What happens when patients find out how good their doctors are? (2004)</title>
<link>https://www.newyorker.com/magazine/2004/12/06/the-bell-curve</link>
<guid isPermaLink="true" >https://www.newyorker.com/magazine/2004/12/06/the-bell-curve</guid>
<description>&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;155&quot; readability=&quot;134&quot;&gt;
&lt;p data-reactid=&quot;156&quot;&gt;Every illness is a story, and Annie Page’s began with the kinds of small, unexceptional details that mean nothing until seen in hindsight. Like the fact that, when she was a baby, her father sometimes called her Little Potato Chip, because her skin tasted salty when he kissed her. Or that Annie’s mother noticed that her breathing was sometimes a little wheezy, though the pediatrician heard nothing through his stethoscope.&lt;/p&gt;
&lt;p data-reactid=&quot;160&quot;&gt;The detail that finally mattered was Annie’s size. For a while, Annie’s fine-boned petiteness seemed to be just a family trait. Her sister, Lauryn, four years older, had always been at the bottom end of the pediatrician’s growth chart for girls her age. By the time Annie was three years old, however, she had fallen off the chart. She stood an acceptable thirty-four inches tall but weighed only twenty-three pounds—less than ninety-eight per cent of girls her age. She did not look malnourished, but she didn’t look quite healthy, either.&lt;/p&gt;
&lt;p data-reactid=&quot;162&quot;&gt;“Failure to thrive” is what it’s called, and there can be scores of explanations: pituitary disorders, hypothyroidism, genetic defects in metabolism, inflammatorybowel disease, lead poisoning, H.I.V., tapeworm infection. In textbooks, the complete list is at least a page long. Annie’s doctor did a thorough workup. Then, at four o’clock on July 27, 1997—“I’ll never forget that day,” her mother, Honor, says—the pediatrician called the Pages at home with the results of a sweat test.&lt;/p&gt;
&lt;p data-reactid=&quot;164&quot;&gt;It’s a strange little test. The skin on the inside surface of a child’s forearm is cleaned and dried. Two small gauze pads are applied—one soaked with pilocarpine, a medicine that makes skin sweat, and the other with a salt solution. Electrodes are hooked up. Then a mild electric current is turned on for five minutes, driving the pilocarpine into the skin. A reddened, sweaty area about an inch in diameter appears on the skin, and a collection pad of dry filter paper is taped over it to absorb the sweat for half an hour. A technician then measures the concentration of chloride in the pad.&lt;/p&gt;
&lt;p data-reactid=&quot;166&quot;&gt;Over the phone, the doctor told Honor that her daughter’s chloride level was far higher than normal. Honor is a hospital pharmacist, and she had come across children with abnormal results like this. “All I knew was that it meant she was going to die,” she said quietly when I visited the Pages’ home, in the Cincinnati suburb of Loveland. The test showed that Annie had cystic fibrosis.&lt;/p&gt;
&lt;p data-reactid=&quot;168&quot;&gt;Cystic fibrosis is a genetic disease. Only a thousand American children per year are diagnosed as having it. Some ten million people in the United States carry the defective gene, but the disorder is recessive: a child will develop the condition only if both parents are carriers and both pass on a copy. The gene—which was discovered, in 1989, sitting out on the long arm of chromosome No. 7—produces a mutant protein that interferes with cells’ ability to manage chloride. This is what makes sweat from people with CF so salty. (Salt is sodium chloride, after all.) The chloride defect thickens secretions throughout the body, turning them dry and gluey. In the ducts of the pancreas, the flow of digestive enzymes becomes blocked, making a child less and less able to absorb food. This was why Annie had all but stopped growing. The effects on the lungs, however, are what make the disease lethal. Thickened mucus slowly fills the small airways and hardens, shrinking lung capacity. Over time, the disease leaves a child with the equivalent of just one functioning lung. Then half a lung. Then none at all.&lt;/p&gt;
&lt;p data-reactid=&quot;170&quot;&gt;The one overwhelming thought in the minds of Honor and Don Page was: We need to get to Children’s. Cincinnati Children’s Hospital is among the most respected pediatric hospitals in the country. It was where Albert Sabin invented the oral polio vaccine. The chapter on cystic fibrosis in the “Nelson Textbook of Pediatrics”—the bible of the specialty—was written by one of the hospital’s pediatricians. The Pages called and were given an appointment for the next morning.&lt;/p&gt;
&lt;p data-reactid=&quot;172&quot;&gt;“We were there for hours, meeting with all the different members of the team,” Honor recalled. “They took Annie’s blood pressure, measured her oxygen saturation, did some other tests. Then they put us in a room, and the pediatrician sat down with us. He was very kind, but frank, too. He said, ‘Do you understand it’s a genetic disease? That it’s nothing you did, nothing you can catch?’ He told us the median survival for patients was thirty years. In Annie’s lifetime, he said, we could see that go to forty. For him, he was sharing a great accomplishment in CF care. And the news was better than our worst fears. But only forty! That’s not what we wanted to hear.”&lt;/p&gt;
&lt;p data-reactid=&quot;174&quot;&gt;The team members reviewed the treatments. The Pages were told that they would have to give Annie pancreatic-enzyme pills with the first bite of every meal. They would have to give her supplemental vitamins. They also had to add calories wherever they could—putting tablespoons of butter on everything, giving her ice cream whenever she wanted, and then putting chocolate sauce on it.&lt;/p&gt;
&lt;p data-reactid=&quot;176&quot;&gt;A respiratory therapist explained that they would need to do manual chest therapy at least twice a day, half-hour sessions in which they would strike—“percuss”—their daughter’s torso with a cupped hand at each of fourteen specific locations on the front, back, and sides in order to loosen the thick secretions and help her to cough them up. They were given prescriptions for inhaled medicines. The doctor told them that Annie would need to come back once every three months for extended checkups. And then they went home to start their new life. They had been told almost everything they needed to know in order to give Annie her best chance to live as long as possible.&lt;/p&gt;
&lt;p data-reactid=&quot;180&quot;&gt;The one thing that the clinicians failed to tell them, however, was that Cincinnati Children’s was not, as the Pages supposed, among the country’s best centers for children with cystic fibrosis. According to data from that year, it was, at best, an average program. This was no small matter. In 1997, patients at an average center were living to be just over thirty years old; patients at the top center typically lived to be forty-six. By some measures, Cincinnati was well below average. The best predictor of a CF patient’s life expectancy is his or her lung function. At Cincinnati, lung function for patients under the age of twelve—children like Annie—was in the bottom twenty-five per cent of the country’s CF patients. And the doctors there knew it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;182&quot; readability=&quot;32&quot;&gt;
&lt;p data-reactid=&quot;183&quot;&gt;It used to be assumed that differences among hospitals or doctors in a particular specialty were generally insignificant. If you plotted a graph showing the results of all the centers treating cystic fibrosis—or any other disease, for that matter—people expected that the curve would look something like a shark fin, with most places clustered around the very best outcomes. But the evidence has begun to indicate otherwise. What you tend to find is a bell curve: a handful of teams with disturbingly poor outcomes for their patients, a handful with remarkably good results, and a great undistinguished middle.&lt;/p&gt;
&lt;p data-reactid=&quot;185&quot;&gt;In ordinary hernia operations, the chances of recurrence are one in ten for surgeons at the unhappy end of the spectrum, one in twenty for those in the middle majority, and under one in five hundred for a handful. A Scottish study of patients with treatable colon cancer found that the ten-year survival rate ranged from a high of sixty-three per cent to a low of twenty per cent, depending on the surgeon. For heartbypass patients, even at hospitals with a good volume of experience, risk-adjusted death rates in New York vary from five per cent to under one per cent—and only a very few hospitals are down near the one-per-cent mortality rate.&lt;/p&gt;
&lt;p data-reactid=&quot;187&quot;&gt;It is distressing for doctors to have to acknowledge the bell curve. It belies the promise that we make to patients who become seriously ill: that they can count on the medical system to give them their very best chance at life. It also contradicts the belief nearly all of us have that we are doing our job as well as it can be done. But evidence of the bell curve is starting to trickle out, to doctors and patients alike, and we are only beginning to find out what happens when it does.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;189&quot; readability=&quot;60&quot;&gt;
&lt;p data-reactid=&quot;190&quot;&gt;In medicine, we are used to confronting failure; all doctors have unforeseen deaths and complications. What we’re not used to is comparing our records of success and failure with those of our peers. I am a surgeon in a department that is, our members like to believe, one of the best in the country. But the truth is that we have had no reliable evidence about whether we’re as good as we think we are. Baseball teams have win-loss records. Businesses have quarterly earnings reports. What about doctors?&lt;/p&gt;
&lt;p data-reactid=&quot;192&quot;&gt;There is a company on the Web called HealthGrades, which for $7.95 will give you a report card on any physician you choose. Recently, I requested the company’s report cards on me and several of my colleagues. They don’t tell you that much. You will learn, for instance, that I am in fact certified in my specialty, have no criminal convictions, have not been fired from any hospital, have not had my license suspended or revoked, and have not been disciplined. This is no doubt useful to know. But it sets the bar a tad low, doesn’t it?&lt;/p&gt;
&lt;p data-reactid=&quot;194&quot;&gt;In recent years, there have been numerous efforts to measure how various hospitals and doctors perform. No one has found the task easy. One difficulty has been figuring out what to measure. For six years, from 1986 to 1992, the federal government released an annual report that came to be known as the Death List, which ranked all the hospitals in the country by their death rate for elderly and disabled patients on Medicare. The spread was alarmingly wide, and the Death List made headlines the first year it came out. But the rankings proved to be almost useless. Death among the elderly or disabled mostly has to do with how old or sick they are to begin with, and the statisticians could never quite work out how to apportion blame between nature and doctors. Volatility in the numbers was one sign of the trouble. Hospitals’ rankings varied widely from one year to the next based on a handful of random deaths. It was unclear what kind of changes would improve their performance (other than sending their sickest patients to other hospitals). Pretty soon the public simply ignored the rankings.&lt;/p&gt;
&lt;p data-reactid=&quot;196&quot;&gt;Even with younger patients, death rates are a poor metric for how doctors do. After all, very few young patients die, and when they do it’s rarely a surprise; most already have metastatic cancer or horrendous injuries or the like. What one really wants to know is how we perform in typical circumstances. After I’ve done an appendectomy, how long does it take for my patients to fully recover? After I’ve taken out a thyroid cancer, how often do my patients have serious avoidable complications? How do my results compare with those of other surgeons?&lt;/p&gt;
&lt;p data-reactid=&quot;200&quot;&gt;Getting this kind of data can be difficult. Medicine still relies heavily on paper records, so to collect information you have to send people to either scour the charts or track the patients themselves, both of which are expensive and laborious propositions. Recent privacy regulations have made the task still harder. Yet it is being done. The country’s veterans’ hospitals have all now brought in staff who do nothing but record and compare surgeons’ complication rates and death rates. Fourteen teaching hospitals, including my own, have recently joined together to do the same. California, New Jersey, New York, and Pennsylvania have been collecting and reporting data on every cardiac surgeon in their states for several years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;202&quot; readability=&quot;70&quot;&gt;
&lt;p data-reactid=&quot;203&quot;&gt;One small field in medicine has been far ahead of most others in measuring the performance of its practitioners: cystic-fibrosis care. For forty years, the Cystic Fibrosis Foundation has gathered detailed data from the country’s cystic-fibrosis treatment centers. It did not begin doing so because it was more enlightened than everyone else. It did so because, in the nineteen-sixties, a pediatrician from Cleveland named LeRoy Matthews was driving people in the field crazy.&lt;/p&gt;
&lt;p data-reactid=&quot;205&quot;&gt;Matthews had started a cystic-fibrosis treatment program as a young pulmonary specialist at Babies and Children’s Hospital, in Cleveland, in 1957, and within a few years was claiming to have an annual mortality rate that was less than two per cent. To anyone treating CF at the time, it was a preposterous assertion. National mortality rates for the disease were estimated to be higher than twenty per cent a year, and the average patient died by the age of three. Yet here was Matthews saying that he and his colleagues could stop the disease from doing serious harm for years. “How long [our patients] will live remains to be seen, but I expect most of them to come to my funeral,” he told one conference of physicians.&lt;/p&gt;
&lt;p data-reactid=&quot;207&quot;&gt;In 1964, the Cystic Fibrosis Foundation gave a University of Minnesota pediatrician named Warren Warwick a budget of ten thousand dollars to collect reports on every patient treated at the thirty-one CF centers in the United States that year—data that would test Matthews’s claim. Several months later, he had the results: the median estimated age at death for patients in Matthews’s center was twenty-one years, seven times the age of patients treated elsewhere. He had not had a single death among patients younger than six in at least five years.&lt;/p&gt;
&lt;p data-reactid=&quot;209&quot;&gt;Unlike pediatricians elsewhere, Matthews viewed CF as a cumulative disease and provided aggressive treatment long before his patients became sick. He made his patients sleep each night in a plastic tent filled with a continuous, aerosolized water mist so dense you could barely see through it. This thinned the tenacious mucus that clogged their airways and enabled them to cough it up. Like British pediatricians, he also had family members clap on the children’s chests daily to help loosen the mucus. After Warwick’s report came out, Matthews’s treatment quickly became the standard in this country. The American Thoracic Society endorsed his approach, and Warwick’s data registry on treatment centers proved to be so useful that the Cystic Fibrosis Foundation has continued it ever since.&lt;/p&gt;
&lt;p data-reactid=&quot;211&quot;&gt;Looking at the data over time is both fascinating and disturbing. By 1966, mortality from CF nationally had dropped so much that the average life expectancy of CF patients had already reached ten years. By 1972, it was eighteen years—a rapid and remarkable transformation. At the same time, though, Matthews’s center had got even better. The foundation has never identified individual centers in its data; to insure participation, it has guaranteed anonymity. But Matthews’s center published its results. By the early nineteen-seventies, ninety-five per cent of patients who had gone there before severe lung disease set in were living past their eighteenth birthday. There was a bell curve, and the spread had narrowed a little. Yet every time the average moved up Matthews and a few others somehow managed to stay ahead of the pack. In 2003, life expectancy with CF had risen to thirty-three years nationally, but at the best center it was more than forty-seven. Experts have become as leery of life-expectancy calculations as they are of hospital death rates, but other measures tell the same story. For example, at the median center, lung function for patients with CF—the best predictor of survival—is about three-quarters of what it is for people without CF. At the top centers, the average lung function of patients is indistinguishable from that of children who do not have CF.&lt;/p&gt;
&lt;p data-reactid=&quot;213&quot;&gt;What makes the situation especially puzzling is that our system for CF care is far more sophisticated than that for most diseases. The hundred and seventeen CF centers across the country are all ultra-specialized, undergo a rigorous certification process, and have lots of experience in caring for people with CF. They all follow the same detailed guidelines for CF treatment. They all participate in research trials to figure out new and better treatments. You would think, therefore, that their results would be much the same. Yet the differences are enormous. Patients have not known this. So what happens when they find out?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;217&quot; readability=&quot;187&quot;&gt;
&lt;p data-reactid=&quot;218&quot;&gt;In the winter of 2001, the Pages and twenty other families were invited by their doctors at Cincinnati Children’s to a meeting about the CF program there. Annie was seven years old now, a lively, brown-haired second grader. She was still not growing enough, and a simple cold could be hellish for her, but her lung function had been stable. The families gathered in a large conference room at the hospital. After a brief introduction, the doctors started flashing PowerPoint slides on a screen: here is how the top programs do on nutrition and respiratory performance, and here is how Cincinnati does. It was a kind of experiment in openness. The doctors were nervous. Some were opposed to having the meeting at all. But hospital leaders had insisted on going ahead. The reason was Don Berwick.&lt;/p&gt;
&lt;p data-reactid=&quot;220&quot;&gt;Berwick runs a small, nonprofit organization in Boston called the Institute for Healthcare Improvement. The institute provided multimillion-dollar grants to hospitals that were willing to try his ideas for improving medicine. Cincinnati’s CF program won one of the grants. And among Berwick’s key stipulations was that recipients had to open up their information to their patients—to “go naked,” as one doctor put it.&lt;/p&gt;
&lt;p data-reactid=&quot;222&quot;&gt;Berwick, a former pediatrician, is an unusual figure in medicine. In 2002, the industry publication &lt;em data-reactid=&quot;224&quot;&gt;Modern Healthcare&lt;/em&gt; listed him as the third most powerful person in American health care. Unlike the others on the list, he is powerful not because of the position he holds. (The Secretary of Health and Human Services, Tommy Thompson, was No. 1, and the head of Medicare and Medicaid was No. 2.) He is powerful because of how he thinks.&lt;/p&gt;
&lt;p data-reactid=&quot;227&quot;&gt;In December, 1999, at a health-care conference, Berwick gave a forty-minute speech distilling his ideas about the failings of American health care. Five years on, people are still talking about the speech. The video of it circulated like samizdat. (That was how I saw it: on a grainy, overplayed tape, about a year later.) A booklet with the transcript was sent to thousands of doctors around the country. Berwick is middle-aged, soft-spoken, and unprepossessing, and he knows how to use his apparent ordinariness to his advantage. He began his speech with a gripping story about a 1949 Montana forest fire that engulfed a parachute brigade of firefighters. Panicking, they ran, trying to make it up a seventy-six-per-cent grade and over a crest to safety. But their commander, a man named Wag Dodge, saw that it wasn’t going to work. So he stopped, took out some matches, and set the tall dry grass ahead of him on fire. The new blaze caught and rapidly spread up the slope. He stepped into the middle of the burned-out area it left behind, lay down, and called out to his crew to join him. He had invented what came to be called an “escape fire,” and it later became a standard part of Forest Service fire training. His men, however, either thought he was crazy or never heard his calls, and they ran past him. All but two were caught by the inferno and perished. Inside his escape fire, Dodge survived virtually unharmed.&lt;/p&gt;
&lt;p data-reactid=&quot;229&quot;&gt;As Berwick explained, the organization had unravelled. The men had lost their ability to think coherently, to act together, to recognize that a lifesaving idea might be possible. This is what happens to all flawed organizations in a disaster, and, he argued, that’s what is happening in modern health care. To fix medicine, Berwick maintained, we need to do two things: measure ourselves and be more open about what we are doing. This meant routinely comparing the performance of doctors and hospitals, looking at everything from complication rates to how often a drug ordered for a patient is delivered correctly and on time. And, he insisted, hospitals should give patients total access to the information. “ ‘No secrets’ is the new rule in my escape fire,” he said. He argued that openness would drive improvement, if simply through embarrassment. It would make it clear that the well-being and convenience of patients, not doctors, were paramount. It would also serve a fundamental moral good, because people should be able to learn about anything that affects their lives.&lt;/p&gt;
&lt;p data-reactid=&quot;231&quot;&gt;Berwick’s institute was given serious money from the Robert Wood Johnson Foundation to offer those who used his ideas. And so the doctors, nurses, and social workers of Cincinnati Children’s stood uncertainly before a crowd of patients’ families in that hospital conference room, told them how poorly the program’s results ranked, and announced a plan for doing better. Surprisingly, not a single family chose to leave the program.&lt;/p&gt;
&lt;p data-reactid=&quot;233&quot;&gt;“We thought about it after that meeting,” Ralph Blackwelder told me. He and his wife, Tracey, have eight children, four of whom have CF. “We thought maybe we should move. We could sell my business here and start a business somewhere else. We were thinking, Why would I want my kids to be seen here, with inferior care? I want the very best people to be helping my children.” But he and Tracey were impressed that the team had told them the truth. No one at Cincinnati Children’s had made any excuses, and everyone appeared desperate to do better. The Blackwelders had known these people for years. The program’s nutritionist, Terri Schindler, had a child of her own in the program. Their pulmonary specialist, Barbara Chini, had been smart, attentive, loving—taking their late-night phone calls, seeing the children through terrible crises, instituting new therapies as they became available. The program director, Jim Acton, made a personal promise that there would soon be no better treatment center in the world.&lt;/p&gt;
&lt;p data-reactid=&quot;237&quot;&gt;Honor Page was alarmed when she saw the numbers. Like the Blackwelders, the Pages had a close relationship with the team at Children’s, but the news tested their loyalty. Acton announced the formation of several committees that would work to improve the program’s results. Each committee, he said, had to have at least one parent on it. This is unusual; hospitals seldom allow patients and families on internal-review committees. So, rather than walk away, Honor decided to sign up for the committee that would reëxamine the science behind patients’ care.&lt;/p&gt;
&lt;p data-reactid=&quot;239&quot;&gt;Her committee was puzzled that the center’s results were not better. Not only had the center followed national guidelines for CF; two of its physicians had helped write them. They wanted to visit the top centers, but no one knew which those were. Although the Cystic Fibrosis Foundation’s annual reports displayed the individual results for each of the country’s hundred and seventeen centers, no names were attached. Doctors put in a call and sent e-mails to the foundation, asking for the names of the top five, but to no avail.&lt;/p&gt;
&lt;p data-reactid=&quot;241&quot;&gt;Several months later, in early 2002, Don Berwick visited the Cincinnati program. He was impressed by its seriousness, and by the intense involvement of the families, but he was incredulous when he learned that the committee couldn’t get the names of the top programs from the foundation. He called the foundation’s executive vice-president for medical affairs, Preston Campbell. “I was probably a bit self-righteous,” Berwick says. “I said, ‘How could you do this?’ And he said, ‘You don’t understand our world.’ ” This was the first Campbell had heard about the requests, and he reacted with instinctive caution. The centers, he tried to explain, give their data voluntarily. The reason they have done so for forty years is that they have trusted that it would be kept confidential. Once the centers lost that faith, they might no longer report solid, honest information tracking how different treatments are working, how many patients there are, and how well they do.&lt;/p&gt;
&lt;p data-reactid=&quot;243&quot;&gt;Campbell is a deliberate and thoughtful man, a pediatric pulmonologist who has devoted his career to cystic-fibrosis patients. The discussion with Berwick had left him uneasy. The Cystic Fibrosis Foundation had always been dedicated to the value of research; by investing in bench science, it had helped decode the gene for cystic fibrosis, produce two new drugs approved for patients, and generate more than a dozen other drugs that are currently being tested. Its investments in tracking patient care had produced scores of valuable studies. But what do you do when the research shows that patients are getting care of widely different quality?&lt;/p&gt;
&lt;p data-reactid=&quot;245&quot;&gt;A couple of weeks after Berwick’s phone call, Campbell released the names of the top five centers to Cincinnati. The episode convinced Campbell and others in the foundation that they needed to join the drive toward greater transparency, rather than just react. The foundation announced a goal of making the outcomes of every center publicly available. But it has yet to come close to doing so. It’s a measure of the discomfort with this issue in the cystic-fibrosis world that Campbell asked me not to print the names of the top five. “We’re not ready,” he says. “It’d be throwing grease on the slope.” So far, only a few of the nation’s CF treatment centers are committed to going public.&lt;/p&gt;
&lt;p data-reactid=&quot;247&quot;&gt;Still, after travelling to one of the top five centers for a look, I found I could not avoid naming the center I saw—no obscuring physicians’ identities or glossing over details. There was simply no way to explain what a great center did without the particulars. The people from Cincinnati found this, too. Within months of learning which the top five centers were, they’d spoken to each and then visited what they considered to be the very best one, the Minnesota Cystic Fibrosis Center, at Fairview-University Children’s Hospital, in Minneapolis. I went first to Cincinnati, and then to Minneapolis for comparison.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;249&quot; readability=&quot;58&quot;&gt;
&lt;p data-reactid=&quot;250&quot;&gt;What I saw in Cincinnati both impressed me and, given its ranking, surprised me. The CF staff was skilled, energetic, and dedicated. They had just completed a flu-vaccination campaign that had reached more than ninety per cent of their patients. Patients were being sent questionnaires before their clinic visits so that the team would be better prepared for the questions they would have and the services (such as X-rays, tests, and specialist consultations) they would need. Before patients went home, the doctors gave them a written summary of their visit and a complete copy of their record, something that I had never thought to do in my own practice.&lt;/p&gt;
&lt;p data-reactid=&quot;252&quot;&gt;I joined Cori Daines, one of the seven CF-care specialists, in her clinic one morning. Among the patients we saw was Alyssa. She was fifteen years old, freckled, skinny, with nails painted loud red, straight sandy-blond hair tied in a ponytail, a soda in one hand, legs crossed, foot bouncing constantly. Every few minutes, she gave a short, throaty cough. Her parents sat to one side. All the questions were directed to her. How had she been doing? How was school going? Any breathing difficulties? Trouble keeping up with her calories? Her answers were monosyllabic at first. But Daines had known Alyssa for years, and slowly she opened up. Things had mostly been going all right, she said. She had been sticking with her treatment regimen—twice-a-day manual chest therapy by one of her parents, inhaled medications using a nebulizer immediately afterward, and vitamins. Her lung function had been measured that morning, and it was sixty-seven per cent of normal—slightly down from her usual eighty per cent. Her cough had got a little worse the day before, and this was thought to be the reason for the dip. Daines was concerned about stomach pains that Alyssa had been having for several months. The pains came on unpredictably, Alyssa said—before meals, after meals, in the middle of the night. They were sharp, and persisted for up to a couple of hours. Examinations, tests, and X-rays had found no abnormalities, but she’d stayed home from school for the past five weeks. Her parents, exasperated because she seemed fine most of the time, wondered if the pain could be just in her head. Daines wasn’t sure. She asked a staff nurse to check in with Alyssa at home, arranged for a consultation with a gastroenterologist and with a pain specialist, and scheduled an earlier return visit than the usual three months.&lt;/p&gt;
&lt;p data-reactid=&quot;256&quot;&gt;This was, it seemed to me, real medicine: untidy, human, but practiced carefully and conscientiously—as well as anyone could ask for. Then I went to Minneapolis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;258&quot; readability=&quot;148&quot;&gt;
&lt;p data-reactid=&quot;259&quot;&gt;The director of Fairview-University Children’s Hospital’s cystic-fibrosis center for almost forty years has been none other than Warren Warwick, the pediatrician who had conducted the study of LeRoy Matthews’s suspiciously high success rate. Ever since then, Warwick has made a study of what it takes to do better than everyone else. The secret, he insists, is simple, and he learned it from Matthews: you do whatever you can to keep your patients’ lungs as open as possible. Patients with CF at Fairview got the same things that patients everywhere did—some nebulized treatments to loosen secretions and unclog passageways (a kind of mist tent in a mouth pipe), antibiotics, and a good thumping on their chests every day. Yet, somehow, everything he did was different.&lt;/p&gt;
&lt;p data-reactid=&quot;261&quot;&gt;In the clinic one afternoon, I joined him as he saw a seventeen-year-old high-school senior named Janelle, who had been diagnosed with CF at the age of six and had been under his care ever since. She had come for her routine three-month checkup. She wore dyed-black hair to her shoulder blades, black Avril Lavigne eyeliner, four earrings in each ear, two more in an eyebrow, and a stud in her tongue. Warwick is seventy-six years old, tall, stooped, and frumpy-looking, with a well-worn tweed jacket, liver spots dotting his skin, wispy gray hair—by all appearances, a doddering, mid-century academic. He stood in front of Janelle for a moment, hands on his hips, looking her over, and then he said, “So, Janelle, what have you been doing to make us the best CF program in the country?”&lt;/p&gt;
&lt;p data-reactid=&quot;263&quot;&gt;“It’s not easy, you know,” she said.&lt;/p&gt;
&lt;p data-reactid=&quot;265&quot;&gt;They bantered. She was doing fine. School was going well. Warwick pulled out her latest lung-function measurements. There’d been a slight dip, as there was with Alyssa. Three months earlier, Janelle had been at a hundred and nine per cent (she was actually doing better than normal); now she was at around ninety per cent. Ninety per cent was still pretty good, and some ups and downs in the numbers are to be expected. But this was not the way Warwick saw the results.&lt;/p&gt;
&lt;p data-reactid=&quot;267&quot;&gt;He knitted his eyebrows. “Why did they go down?” he asked.&lt;/p&gt;
&lt;p data-reactid=&quot;269&quot;&gt;Janelle shrugged.&lt;/p&gt;
&lt;p data-reactid=&quot;271&quot;&gt;Any cough lately? No. Colds? No. Fevers? No. Was she sure she’d been taking her treatments regularly? Yes, of course. Every day? Yes. Did she ever miss treatments? Sure. Everyone does once in a while. How often is once in a while?&lt;/p&gt;
&lt;p data-reactid=&quot;273&quot;&gt;Then, slowly, Warwick got a different story out of her: in the past few months, it turned out, she’d barely been taking her treatments at all.&lt;/p&gt;
&lt;p data-reactid=&quot;275&quot;&gt;He pressed on. “Why aren’t you taking your treatments?” He appeared neither surprised nor angry. He seemed genuinely curious, as if he’d never run across this interesting situation before.&lt;/p&gt;
&lt;p data-reactid=&quot;277&quot;&gt;“I don’t know.”&lt;/p&gt;
&lt;p data-reactid=&quot;279&quot;&gt;He kept pushing. “What keeps you from doing your treatments?”&lt;/p&gt;
&lt;p data-reactid=&quot;281&quot;&gt;“I don’t know.”&lt;/p&gt;
&lt;p data-reactid=&quot;283&quot;&gt;“Up here”—he pointed at his own head—“what’s going on?”&lt;/p&gt;
&lt;p data-reactid=&quot;285&quot;&gt;“&lt;em data-reactid=&quot;287&quot;&gt;I don&lt;/em&gt;’&lt;em data-reactid=&quot;290&quot;&gt;t know&lt;/em&gt;,” she said.&lt;/p&gt;
&lt;p data-reactid=&quot;293&quot;&gt;He paused for a moment. And then he began speaking to me, taking a new tack. “The thing about patients with CF is that they’re good scientists,” he said. “They always experiment. We have to help them interpret what they experience as they experiment. So they stop doing their treatments. And what happens? &lt;em data-reactid=&quot;295&quot;&gt;They don’t get sick&lt;/em&gt;. Therefore, they conclude, Dr. Warwick is nuts.”&lt;/p&gt;
&lt;p data-reactid=&quot;298&quot;&gt;“Let’s look at the numbers,” he said to me, ignoring Janelle. He went to a little blackboard he had on the wall. It appeared to be well used. “A person’s daily risk of getting a bad lung illness with CF is 0.5 per cent.” He wrote the number down. Janelle rolled her eyes. She began tapping her foot. “The daily risk of getting a bad lung illness with CF &lt;em data-reactid=&quot;302&quot;&gt;plus treatment&lt;/em&gt; is 0.05 per cent,” he went on, and he wrote that number down. “So when you experiment you’re looking at the difference between a 99.95-per-cent chance of staying well and a 99.5-per-cent chance of staying well. Seems hardly any difference, right? On any given day, you have basically a one-hundred-per-cent chance of being well. But”—he paused and took a step toward me—“it is a &lt;em data-reactid=&quot;305&quot;&gt;big&lt;/em&gt; difference.” He chalked out the calculations. “Sum it up over a year, and it is the difference between an eighty-three-per-cent chance of making it through 2004 without getting sick and only a sixteen-per-cent chance.”&lt;/p&gt;
&lt;p data-reactid=&quot;308&quot;&gt;He turned to Janelle. “How do you stay well all your life? How do you become a geriatric patient?” he asked her. Her foot finally stopped tapping. “I can’t promise you anything. I can only tell you the odds.”&lt;/p&gt;
&lt;p data-reactid=&quot;310&quot;&gt;In this short speech was the core of Warwick’s world view. He believed that excellence came from seeing, on a daily basis, the difference between being 99.5-per-cent successful and being 99.95-per-cent successful. Many activities are like that, of course: catching fly balls, manufacturing microchips, delivering overnight packages. Medicine’s only distinction is that lives are lost in those slim margins.&lt;/p&gt;
&lt;p data-reactid=&quot;312&quot;&gt;And so he went to work on finding that margin for Janelle. Eventually, he figured out that she had a new boyfriend. She had a new job, too, and was working nights. The boyfriend had his own apartment, and she was either there or at a friend’s house most of the time, so she rarely made it home to take her treatments. At school, new rules required her to go to the school nurse for each dose of medicine during the day. So she skipped going. “It’s such a pain,” she said. He learned that there were some medicines she took and some she didn’t. One she took because it was the only thing that she felt actually made a difference. She took her vitamins, too. (“Why your vitamins?” “Because they’re cool.”) The rest she ignored.&lt;/p&gt;
&lt;p data-reactid=&quot;314&quot;&gt;Warwick proposed a deal. Janelle would go home for a breathing treatment every day after school, and get her best friend to hold her to it. She’d also keep key medications in her bag or her pocket at school and take them on her own. (“The nurse won’t let me.” “Don’t tell her,” he said, and deftly turned taking care of herself into an act of rebellion.) So far, Janelle was O.K. with this. But there was one other thing, he said: she’d have to come to the hospital for a few days of therapy to recover the lost ground. She stared at him.&lt;/p&gt;
&lt;p data-reactid=&quot;316&quot;&gt;“Today?”&lt;/p&gt;
&lt;p data-reactid=&quot;318&quot;&gt;“Yes, today.”&lt;/p&gt;
&lt;p data-reactid=&quot;320&quot;&gt;“How about tomorrow?”&lt;/p&gt;
&lt;p data-reactid=&quot;322&quot;&gt;“We’ve failed, Janelle,” he said. “It’s important to acknowledge when we’ve failed.”&lt;/p&gt;
&lt;p data-reactid=&quot;324&quot;&gt;With that, she began to cry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;326&quot; readability=&quot;103&quot;&gt;
&lt;p data-reactid=&quot;327&quot;&gt;Warwick’s combination of focus, aggressiveness, and inventiveness is what makes him extraordinary. He thinks hard about his patients, he pushes them, and he does not hesitate to improvise. Twenty years ago, while he was listening to a church choir and mulling over how he might examine his patients better, he came up with a new stethoscope—a stereo-stethoscope, he calls it. It has two bells dangling from it, and, because of a built-in sound delay, transmits lung sounds in stereo. He had an engineer make it for him. Listening to Janelle with the instrument, he put one bell on the right side of her chest and the other on her left side, and insisted that he could systematically localize how individual lobes of her lungs sounded.&lt;/p&gt;
&lt;p data-reactid=&quot;329&quot;&gt;He invented a new cough. It wasn’t enough that his patients actively cough up their sputum. He wanted a deeper, better cough, and later, in his office, Warwick made another patient practice his cough. The patient stretched his arms upward, yawned, pinched his nose, bent down as far as he could, let the pressure build up, and then, straightening, blasted everything out. (“Again!” Warwick encouraged him. “Harder!”)&lt;/p&gt;
&lt;p data-reactid=&quot;331&quot;&gt;He produced his most far-reaching invention almost two decades ago—a mechanized, chest-thumping vest for patients to wear. The chief difficulty for people with CF is sticking with the laborious daily regimen of care, particularly the manual chest therapy. It requires another person’s help. It requires conscientiousness, making sure to bang on each of the fourteen locations on a patient’s chest. And it requires consistency, doing this twice a day, every day, year after year. Warwick had become fascinated by studies showing that inflating and deflating a blood-pressure cuff around a dog’s chest could mobilize its lung secretions, and in the mid-nineteen-eighties he created what is now known as the Vest. It looks like a black flak jacket with two vacuum hoses coming out of the sides. These are hooked up to a compressor that shoots quick blasts of air in and out of the vest at high frequencies. (I talked to a patient while he had one of these on. He vibrated like a car on a back road.) Studies eventually showed that Warwick’s device was at least as effective as manual chest therapy, and was used far more consistently. Today, forty-five thousand patients with CF and other lung diseases use the technology.&lt;/p&gt;
&lt;p data-reactid=&quot;333&quot;&gt;Like most medical clinics, the Minnesota Cystic Fibrosis Center has several physicians and many more staff members. Warwick established a weekly meeting to review everyone’s care for their patients, and he insists on a degree of uniformity that clinicians usually find intolerable. Some chafe. He can have, as one of the doctors put it, “somewhat of an absence of, um, collegial respect for different care plans.” And although he stepped down as director of the center in 1999, to let a protégé, Carlos Milla, take over, he remains its guiding spirit. He and his colleagues aren’t content if their patients’ lung function is eighty per cent of normal, or even ninety per cent. They aim for a hundred per cent—or better. Almost ten per cent of the children at his center get supplemental feedings through a latex tube surgically inserted into their stomachs, simply because, by Warwick’s standards, they were not gaining enough weight. There’s no published research showing that you need to do this. But not a single child or teen-ager at the center has died in years. Its oldest patient is now sixty-four.&lt;/p&gt;
&lt;p data-reactid=&quot;337&quot;&gt;The buzzword for clinicians these days is “evidence-based practice”—good doctors are supposed to follow research findings rather than their own intuition or ad-hoc experimentation. Yet Warwick is almost contemptuous of established findings. National clinical guidelines for care are, he says, “a record of the past, and little more—they should have an expiration date.” I accompanied him as he visited another of his patients, Scott Pieper. When Pieper came to Fairview, at the age of thirty-two, he had lost at least eighty per cent of his lung capacity. He was too weak and short of breath to take a walk, let alone work, and he wasn’t expected to last a year. That was fourteen years ago.&lt;/p&gt;
&lt;p data-reactid=&quot;339&quot;&gt;“Some days, I think, This is it—I’m not going to make it,” Pieper told me. “But other times I think, I’m going to make sixty, seventy, maybe more.” For the past several months, Warwick had Pieper trying a new idea—wearing his vest not only for two daily thirty-minute sessions but also while napping for two hours in the middle of the day. Falling asleep in that shuddering thing took some getting used to. But Pieper was soon able to take up bowling, his first regular activity in years. He joined a two-night-a-week league. He couldn’t go four games, and his score always dropped in the third game, but he’d worked his average up to 177. “Any ideas about what we could do so you could last for that extra game, Scott?” Warwick asked. Well, Pieper said, he’d noticed that in the cold—anything below fifty degrees—and when humidity was below fifty per cent, he did better. Warwick suggested doing an extra hour in the vest on warm or humid days and on every game day. Pieper said he’d try it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;341&quot; readability=&quot;40&quot;&gt;
&lt;p data-reactid=&quot;342&quot;&gt;We are used to thinking that a doctor’s ability depends mainly on science and skill. The lesson from Minneapolis is that these may be the easiest parts of care. Even doctors with great knowledge and technical skill can have mediocre results; more nebulous factors like aggressiveness and consistency and ingenuity can matter enormously. In Cincinnati and in Minneapolis, the doctors are equally capable and well versed in the data on CF. But if Annie Page—who has had no breathing problems or major setbacks—were in Minneapolis she would almost certainly have had a feeding tube in her stomach and Warwick’s team hounding her to figure out ways to make her breathing even better than normal.&lt;/p&gt;
&lt;p data-reactid=&quot;344&quot;&gt;Don Berwick believes that the subtleties of medical decision-making can be identified and learned. The lessons are hidden. But if we open the book on physicians’ results, the lessons will be exposed. And if we are genuinely curious about how the best achieve their results, he believes they will spread.&lt;/p&gt;
&lt;p data-reactid=&quot;346&quot;&gt;The Cincinnati CF team has already begun tracking the nutrition and lung function of individual patients the way Warwick does, and is getting more aggressive in improving the results in these areas, too. Yet you have to wonder whether it is possible to replicate people like Warwick, with their intense drive and constant experimenting. In the two years since the Cystic Fibrosis Foundation began bringing together centers willing to share their data, certain patterns have begun to emerge, according to Bruce Marshall, the head of quality improvement for the foundation. All the centers appear to have made significant progress. None, however, have progressed more than centers like Fairview.&lt;/p&gt;
&lt;p data-reactid=&quot;348&quot;&gt;“You look at the rates of improvement in different quartiles, and it’s the centers in the top quartile that are improving fastest,” Marshall says. “They are at risk of breaking away.” What the best may have, above all, is a capacity to learn and adapt—and to do so faster than everyone else.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak__sectionBreak___1ppA7&quot; data-reactid=&quot;350&quot; readability=&quot;100&quot;&gt;
&lt;p data-reactid=&quot;351&quot;&gt;Once we acknowledge that, no matter how much we improve our average, the bell curve isn’t going away, we’re left with all sorts of questions. Will being in the bottom half be used against doctors in lawsuits? Will we be expected to tell our patients how we score? Will our patients leave us? Will those at the bottom be paid less than those at the top? The answer to all these questions is likely yes.&lt;/p&gt;
&lt;p data-reactid=&quot;353&quot;&gt;Recently, there has been a lot of discussion, for example, about “paying for quality.” (No one ever says “docking for mediocrity,” but it amounts to the same thing.) Congress has discussed the idea in hearings. Insurers like Aetna and the Blue Cross-Blue Shield companies are introducing it across the country. Already, Medicare has decided not to pay surgeons for intestinal transplantation operations unless they achieve a predefined success rate. Not surprisingly, this makes doctors anxious. I recently sat in on a presentation of the concept to an audience of doctors. By the end, some in the crowd were practically shouting with indignation: We’re going to be paid according to our &lt;em data-reactid=&quot;357&quot;&gt;grades&lt;/em&gt;? Who is doing the grading? For God’s sake, how?&lt;/p&gt;
&lt;p data-reactid=&quot;360&quot;&gt;We in medicine are not the only ones being graded nowadays. Firemen, C.E.O.s, and salesmen are. Even teachers are being graded, and, in some places, being paid accordingly. Yet we all feel uneasy about being judged by such grades. They never seem to measure the right things. They don’t take into account circumstances beyond our control. They are misused; they are unfair. Still, the simple facts remain: there is a bell curve in all human activities, and the differences you measure usually matter.&lt;/p&gt;
&lt;p data-reactid=&quot;362&quot;&gt;I asked Honor Page what she would do if, after all her efforts and the efforts of the doctors and nurses at Cincinnati Children’s Hospital to insure that “there was no place better in the world” to receive cystic-fibrosis care, their comparative performance still rated as resoundingly average.&lt;/p&gt;
&lt;p data-reactid=&quot;364&quot;&gt;“I can’t believe that’s possible,” she told me. The staff have worked so hard, she said, that she could not imagine they would fail.&lt;/p&gt;
&lt;p data-reactid=&quot;366&quot;&gt;After I pressed her, though, she told me, “I don’t think I’d settle for Cincinnati if it remains just average.” Then she thought about it some more. Would she really move Annie away from people who had been so devoted all these years, just because of the numbers? Well, maybe. But, at the same time, she wanted me to understand that their effort counted for more than she was able to express.&lt;/p&gt;
&lt;p data-reactid=&quot;368&quot;&gt;I do not have to consider these matters for very long before I start thinking about where I would stand on a bell curve for the operations I do. I have chosen to specialize (in surgery for endocrine tumors), so I would hope that my statistics prove to be better than those of surgeons who only occasionally do the kind of surgery I do. But am I up in Warwickian territory? Do I have to answer this question?&lt;/p&gt;
&lt;p data-reactid=&quot;370&quot;&gt;The hardest question for anyone who takes responsibility for what he or she does is, What if I turn out to be average? If we took all the surgeons at my level of experience, compared our results, and found that I am one of the worst, the answer would be easy: I’d turn in my scalpel. But what if I were a C? Working as I do in a city that’s mobbed with surgeons, how could I justify putting patients under the knife? I could tell myself, Someone’s got to be average. If the bell curve is a fact, then so is the reality that most doctors are going to be average. There is no shame in being one of them, right?&lt;/p&gt;
&lt;p data-reactid=&quot;372&quot;&gt;Except, of course, there is. Somehow, what troubles people isn’t so much being average as settling for it. Everyone knows that averageness is, for most of us, our fate. And in certain matters—looks, money, tennis—we would do well to accept this. But in your surgeon, your child’s pediatrician, your police department, your local high school? When the stakes are our lives and the lives of our children, we expect averageness to be resisted. And so I push to make myself the best. If I’m not the best already, I believe wholeheartedly that I will be. And you expect that of me, too. Whatever the next round of numbers may say. ♦&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 04 Dec 2017 00:23:45 +0000</pubDate>
<dc:creator>adenadel</dc:creator>
<og:image>https://media.newyorker.com/photos/59092ff36552fa0be682ac93/16:9/w_1200,h_630,c_limit/041206_r13710.jpg</og:image>
<og:title>How Good Is My Doctor?</og:title>
<og:description>The difference in effectiveness between treatment centers can be enormous. Historically, patients haven’t known this. So what happens when they find out?</og:description>
<og:url>https://www.newyorker.com/magazine/2004/12/06/the-bell-curve</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.newyorker.com/magazine/2004/12/06/the-bell-curve</dc:identifier>
</item>
<item>
<title>CVS Is Said to Agree to Buy Aetna</title>
<link>https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html</guid>
<description>&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;193&quot; data-total-count=&quot;2109&quot; id=&quot;story-continues-3&quot;&gt;On Sunday, the two companies emphasized their ability to transform CVS’s 10,000 pharmacy and clinic locations into community-based sites of care that would be far less expensive for patients.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;146&quot; data-total-count=&quot;2255&quot;&gt;“We think of it as creating a new front door to health care in America,” CVS Health’s chief executive, Larry J. Merlo, said in an interview.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;285&quot; data-total-count=&quot;2540&quot;&gt;The merger would establish a new way of delivering care, with nurses, pharmacists and others available to counsel people about their diabetes or do the lab work necessary to diagnose a condition, Mr. Merlo said. “We know we can make health care more affordable and less expensive.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;159&quot; data-total-count=&quot;2699&quot;&gt;Mark T. Bertolini, Aetna’s chief executive, said that by using CVS’s locations, the company can provide people with a better way of accessing medical care.&lt;/p&gt;
&lt;span class=&quot;visually-hidden&quot;&gt;Photo&lt;/span&gt;
&lt;div class=&quot;image&quot;&gt;&lt;img src=&quot;https://static01.nyt.com/images/2017/12/04/business/db-cvs-web2/db-cvs-web2-master675.jpg&quot; alt=&quot;&quot; class=&quot;media-viewer-candidate&quot; data-mediaviewer-src=&quot;https://static01.nyt.com/images/2017/12/04/business/db-cvs-web2/db-cvs-web2-superJumbo.jpg&quot; data-mediaviewer-caption=&quot;CVS operates 10,000 pharmacy and clinic locations, which Aetna could use to provide care directly to customers.&quot; data-mediaviewer-credit=&quot;Mario Anzuoni/Reuters&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2017/12/04/business/db-cvs-web2/db-cvs-web2-master675.jpg&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;caption-text&quot;&gt;CVS operates 10,000 pharmacy and clinic locations, which Aetna could use to provide care directly to customers.&lt;/span&gt; &lt;span class=&quot;credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;&lt;span class=&quot;visually-hidden&quot;&gt;Credit&lt;/span&gt; Mario Anzuoni/Reuters&lt;/span&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;128&quot; data-total-count=&quot;2827&quot;&gt;“It’s in their community. It’s in their home,” he said. He added, “CVS has the draw. People trust their pharmacist.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;220&quot; data-total-count=&quot;3047&quot;&gt;It is the development of community-based clinics — capable of delivering care with the technology and health information available from both parties — that could prove to be the biggest change brought about the deal.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;295&quot; data-total-count=&quot;3342&quot;&gt;The hope would be that consumers would not only be able to see savings by going to a retail store to treat a sore throat but also have better oversight of a chronic illness, such as diabetes or heart disease. They could get advice on how to lose weight, or undergo tests to monitor their health.&lt;/p&gt;
&lt;div id=&quot;story-ad-2&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html#story-continues-4&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;152&quot; data-total-count=&quot;3494&quot; id=&quot;story-continues-4&quot;&gt;“If they can drive the adoption of the care delivery model, that’s a big deal,” said Ana Gupte, a senior health care analyst for Leerink Partners.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;440&quot; data-total-count=&quot;3934&quot;&gt;The merger agreement came as another factor weighs on the minds of all in the health care industry: Amazon, which has been &lt;a href=&quot;https://www.nytimes.com/2017/10/27/technology/amazon-pharmacy-drugs.html?dlbk&quot;&gt;rumored to be preparing&lt;/a&gt; for an entry into the pharmacy business. Jeff Bezos, the Amazon chief executive, and his e-commerce juggernaut have already overturned many industries: book buying, retail shopping, groceries and Hollywood, using fierce customer loyalty and enormous reach as cudgels against incumbent players.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;335&quot; data-total-count=&quot;4269&quot;&gt;But CVS and Aetna have had a business partnership dating back seven years, and have steadily converged into similar visions of how the health care industry was evolving. Conversations about a deeper bond eventually crystallized into deal talks within the last two months, according to a person with direct knowledge of the discussions.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;144&quot; data-total-count=&quot;4413&quot;&gt;Although neither chief executive mentioned Amazon by name, both said that what they were creating was a compelling opportunity in and of itself.&lt;/p&gt;


&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;130&quot; data-total-count=&quot;4543&quot;&gt;“Chasing our competitors has never been a solution,” Mr. Bertolini said. He added, “Our competitors will do what they do.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;456&quot; data-total-count=&quot;4999&quot;&gt;Many companies are &lt;a href=&quot;https://www.nytimes.com/2017/11/26/health/health-care-hospitals-insurers.html?rref=collection%2Fsectioncollection%2Fhealth&amp;amp;action=click&amp;amp;contentCollection=health&amp;amp;region=rank&amp;amp;module=package&amp;amp;version=highlights&amp;amp;contentPlacement=7&amp;amp;pgtype=sectionfront&quot;&gt;seeking shelter in the arms of their former adversaries&lt;/a&gt;, with well-known medical groups like the Cleveland Clinic joining with Oscar Health, an insurer. With federal officials blocking traditional mergers — like &lt;a href=&quot;https://www.nytimes.com/2017/02/08/business/dealbook/anthems-blue-cross-cigna-deal.html&quot;&gt;the megadeal that featured Anthem and Cigna, the nation’s largest insurers&lt;/a&gt;, and one involving Aetna and its rival Humana — companies are looking at combinations that take them beyond their traditional lines of business.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;433&quot; data-total-count=&quot;5432&quot;&gt;Many analysts view the combination of CVS and Aetna as a defensive move by the companies. CVS Health, which also recently &lt;a href=&quot;https://www.nytimes.com/2017/10/18/health/anthem-cvs-pharmacy.html&quot;&gt;signed an agreement with Anthem&lt;/a&gt; to help the insurer start its own internal pharmacy benefit manager, is looking to protect its business with Aetna as it fends off rivals like UnitedHealth Group’s OptumRx and others. Aetna, foiled in its attempt to buy Humana, is searching for new ways to expand its business.&lt;/p&gt;
&lt;span class=&quot;visually-hidden&quot;&gt;Photo&lt;/span&gt;
&lt;div class=&quot;image&quot;&gt;&lt;img src=&quot;https://static01.nyt.com/images/2017/12/04/business/db-cvs-web3/db-cvs-web3-master675.jpg&quot; alt=&quot;&quot; class=&quot;media-viewer-candidate&quot; data-mediaviewer-src=&quot;https://static01.nyt.com/images/2017/12/04/business/db-cvs-web3/db-cvs-web3-superJumbo.jpg&quot; data-mediaviewer-caption=&quot;CVS and Aetna have had a business partnership dating back seven years, and have steadily converged into similar visions of how the health care industry was evolving.&quot; data-mediaviewer-credit=&quot;Bill Sikes/Associated Press&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2017/12/04/business/db-cvs-web3/db-cvs-web3-master675.jpg&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;caption-text&quot;&gt;CVS and Aetna have had a business partnership dating back seven years, and have steadily converged into similar visions of how the health care industry was evolving.&lt;/span&gt; &lt;span class=&quot;credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;&lt;span class=&quot;visually-hidden&quot;&gt;Credit&lt;/span&gt; Bill Sikes/Associated Press&lt;/span&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;398&quot; data-total-count=&quot;5830&quot;&gt;The merger could also fundamentally reshape the business of overseeing drug coverage for insurers, an industry that is dominated by three large players and that has &lt;a href=&quot;https://www.nytimes.com/2017/05/29/health/drug-lobbyists-battle-cry-over-prices-blame-the-others.html&quot;&gt;increasingly come under scrutiny&lt;/a&gt; over the past year as public anger over high drug prices has expanded beyond the usual culprits — most notably the pharmaceutical industry — to lesser-known players like pharmacy benefit managers.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;330&quot; data-total-count=&quot;6160&quot;&gt;Under the terms of the deal, CVS will pay about $207 a share, based on Friday’s closing prices. Roughly $145 a share of that would be in cash, with the remainder in newly issued CVS stock. The deal is expected to close in the second half of next year, subject to approval by shareholders of both companies as well as regulators.&lt;/p&gt;
&lt;div id=&quot;story-ad-3&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html#story-continues-5&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;182&quot; data-total-count=&quot;6342&quot; id=&quot;story-continues-5&quot;&gt;Antitrust approval has become an interesting question in the Trump administration, which bankers and lawyers had thought would be more tolerant of consolidation than its predecessor.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;358&quot; data-total-count=&quot;6700&quot;&gt;A combination of a drugstore company and an insurer is considered less problematic than a merger of two players in the same business, which could reduce competition and hurt consumers. Such concerns ultimately sank Aetna’s efforts to buy Humana, and Anthem’s push to buy Cigna, when the Obama administration signaled its opposition to such consolidation.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;351&quot; data-total-count=&quot;7051&quot;&gt;CVS’s proposed takeover of Aetna is a so-called vertical merger, combining companies in two different industries. But while such deals have traditionally met little opposition in Washington, &lt;a href=&quot;https://www.nytimes.com/2017/11/20/business/dealbook/att-time-warner-merger.html&quot;&gt;the Justice Department has sued&lt;/a&gt; to block AT&amp;amp;T’s $85.4 billion takeover of Time Warner on the grounds that it would create too powerful of a content company.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;171&quot; data-total-count=&quot;7222&quot;&gt;Both CVS and Aetna played down the prospects of regulators moving to block their deal. The breakup fee for the transaction is not especially large, reflecting that belief.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;186&quot; data-total-count=&quot;7408&quot;&gt;Mr. Bertolini asserted that the companies would not raise prices for consumers. “It doesn’t make sense for us to charge people more when we want more people in the store,” he said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;285&quot; data-total-count=&quot;7693&quot;&gt;But analysts and other merger experts warn that the deal could be blocked by federal antitrust officials who worry that it could lessen competition. One area of focus may be Medicare; both companies are significant players in offering prescription drug plans to Medicare beneficiaries.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;152&quot; data-total-count=&quot;7845&quot;&gt;While the companies said they want to lower costs, CVS also makes money on rebates from drug makers and on filling prescriptions through its pharmacies.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;293&quot; data-total-count=&quot;8138&quot;&gt;David A. Balto, an antitrust lawyer who has been sharply critical of combinations among insurers and pharmacy benefit managers, said that he was wary of having retailers in charge of people’s health. He argued that doctors may be in a better position to treat illness than retail executives.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;61&quot; data-total-count=&quot;8199&quot;&gt;“Who do you want to run the health care system?” he said.&lt;/p&gt;
&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html#whats-next&quot;&gt;Continue reading the main story&lt;/a&gt;</description>
<pubDate>Sun, 03 Dec 2017 19:24:27 +0000</pubDate>
<dc:creator>jdpedrie</dc:creator>
<og:url>https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html</og:url>
<og:type>article</og:type>
<og:title>CVS to Buy Aetna for $69 Billion in a Deal That May Reshape the Health Industry</og:title>
<og:description>The deal would combine CVS’s pharmacy and clinic business with a giant insurance company. The combination could lead to lower prices — or fewer choices — for consumers.</og:description>
<og:image>https://static01.nyt.com/images/2017/12/01/business/01DB-CVS2/01DB-CVS2-facebookJumbo.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2017/12/03/business/dealbook/cvs-is-said-to-agree-to-buy-aetna-reshaping-health-care-industry.html</dc:identifier>
</item>
<item>
<title>Redoing all my home networking</title>
<link>https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/</link>
<guid isPermaLink="true" >https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/</guid>
<description>&lt;p&gt;Sunday, December 3, 2017&lt;/p&gt;
&lt;p&gt;I always have some random side project I am working on, whether it is making the &lt;a href=&quot;https://drive.google.com/open?id=17Hml1iFqdXElxOcrh9caQSC5px5mDgaS015Vhaz42ZY&quot;&gt;world’s most over engineered desktop OS all running in containers&lt;/a&gt; or updating all my Makefiles to be the definition of glittering beauty.&lt;/p&gt;
&lt;p&gt;This post is going to go over I how I recently redid all my home networking and ultimately how I got to here:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;8.0892857142857&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;ssh-ed into my dev NUC from a Pixelbook 39,000 feet, authenticated from an ssh key on a yubikey, the future is dope AF&lt;/p&gt;
— jessie frazelle (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/933155384419897344?ref_src=twsrc%5Etfw&quot;&gt;November 22, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;I used &lt;a href=&quot;https://unifi-sdn.ubnt.com/&quot;&gt;Unifi&lt;/a&gt; for everything and this is what I got:&lt;/p&gt;
&lt;p&gt;It was so good looking when it arrived.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;5.1533742331288&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;My network is about to get real… fast!!!&lt;/p&gt;&lt;p&gt;This switch is (dare I say it) sexy as hell. &lt;a href=&quot;https://t.co/fmaLkW2AFB&quot;&gt;pic.twitter.com/fmaLkW2AFB&lt;/a&gt;&lt;/p&gt;
— jessie frazelle (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/931304322100539395?ref_src=twsrc%5Etfw&quot;&gt;November 16, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;I love fun side projects so obviously I set it all up right away. You need a “controller” to have the nice Unifi UI. You can buy a cloud key but I wanted to run the controller in container just like &lt;a href=&quot;http://blog.dustinkirkland.com/2016/12/unifi-controller-in-lxd.html&quot;&gt;Dustin Kirkland&lt;/a&gt;. So I set about writing a Dockerfile for the controller and it is now at &lt;a href=&quot;https://github.com/jessfraz/dockerfiles/blob/master/unifi/Dockerfile&quot;&gt;r.j3ss.co/unifi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can run it with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;docker run -d --restart always \
    -v /etc/localtime:/etc/localtime:ro \
    --name unifi \
    --volume path/to/where/you/want/your/data:/config \
    -p 3478:3478/udp \
    -p 10001:10001/udp \
    -p 8080:8080 \
    -p 8081:8081 \
    -p 8443:8443 \
    -p 8843:8843 \
    -p 8880:8880 \
    r.j3ss.co/unifi
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The web UI is at https://{ip}:8443. To adopt an access point, and get it to show up in the software you will need to ssh into the AP and run:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;ssh &lt;a href=&quot;https://blog.jessfraz.com/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;671205091327&quot;&gt;[email protected]&lt;/a&gt;$AP-IP mca-cli set-inform http://$address:8080/inform
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then I went crazy and made sure everything that needed to talk to each other was on the same subnet and everything else was isolated into it’s own subnet. I used VLANs to do this.&lt;/p&gt;
&lt;p&gt;Also be careful not to subnet yourself into a hole ;)&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;4.2543859649123&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;me just now: &quot;this was my fear! sub-netting myself into a hole!&quot;&lt;/p&gt;
— jessie frazelle (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/936253292556050433?ref_src=twsrc%5Etfw&quot;&gt;November 30, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;The best thing about these APs are they are Power over Ethernet! One cord, one cord!!!&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;4.1826923076923&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&amp;lt;naughty-by-nature&amp;gt;You down wit' PoE?&amp;lt;/naughty-by-nature&amp;gt;&lt;/p&gt;
— Dan McDonald (@kebesays) &lt;a href=&quot;https://twitter.com/kebesays/status/931306201014513665?ref_src=twsrc%5Etfw&quot;&gt;November 16, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;nucs&quot;&gt;NUCs&lt;/h3&gt;
&lt;p&gt;I have a bunch of Intel NUCs thanks to &lt;a href=&quot;https://twitter.com/carolynvs&quot;&gt;Carolyn Van Slyck&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/jbeda&quot;&gt;Joe Beda&lt;/a&gt; for their thought leadership… my wallet is not happy with you two. Also check out &lt;a href=&quot;http://carolynvanslyck.com/blog/2017/10/my-little-cluster/&quot;&gt;Carolyn’s post on her NUC setup&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;4.3333333333333&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;They have LEDs on the front that change color. There is a kernel driver for them.&lt;/p&gt;
— Joe Beda (@jbeda) &lt;a href=&quot;https://twitter.com/jbeda/status/920672603177607168?ref_src=twsrc%5Etfw&quot;&gt;October 18, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;I hooked them all into my Switch (&lt;strong&gt;glorious&lt;/strong&gt;) and into their own subnet. Then I went about setting up SSH for all of them.&lt;/p&gt;
&lt;p&gt;I use Yubikeys for authentication to GitHub and literally everything else where that is possible so I made a bot to sync any new ssh keys added to my GitHub to the authorized keys on my server. It lives at &lt;a href=&quot;https://github.com/jessfraz/sshb0t&quot;&gt;github.com/jessfraz/sshb0t&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would &lt;strong&gt;ONLY&lt;/strong&gt; recommend doing that if you have two factor auth turned on so you ensure no one else but you can access your account. And honestly if someone gets into my GitHub account I am going to have wayyyy worse issues that them getting into my NUCs.&lt;/p&gt;
&lt;p&gt;I have ssh keys on Yubikeys that I set up. There is a &lt;a href=&quot;https://github.com/drduh/YubiKey-Guide&quot;&gt;really great guide to doing this on GitHub&lt;/a&gt; so I am not going to repeat it.&lt;/p&gt;
&lt;p&gt;I have dockerfiles for all the Yubikey tools you need to set it up in my &lt;a href=&quot;https://github.com/jessfraz/dockerfiles&quot;&gt;dockerfiles repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example you can jump into a container with &lt;code&gt;ykman&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;docker run --rm -it \
    -v /etc/localtime:/etc/localtime:ro \
    --device /dev/usb \
    --device /dev/bus/usb \
    --name ykman \
    r.j3ss.co/ykman bash
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This works for all the other docker images like &lt;code&gt;ykpersonalize&lt;/code&gt; etc. If you get stuck all the commands are in my dotfile aliases at &lt;a href=&quot;https://github.com/jessfraz/dotfiles/blob/master/.dockerfunc&quot;&gt;github.com/jessfraz/dotfiles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I like to require “touch to authenticate”. You can do this with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;# for every ssh connection
ykman openpgp touch aut on

# for signing
ykman openpgp touch sig on

# for encrypting
ykman openpgp touch enc on
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For the Chromebook Pixelbook ssh client authentication you just need the Smart Card reader extension and you are good to go! You can find the guide on that from the &lt;a href=&quot;https://chromium.googlesource.com/apps/libapps/+/master/nassh/doc/hardware-keys.md&quot;&gt;Chromium Docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let me just answer the most common question I get… No, I don’t use Crouton on my Chromebooks I just ssh to the cloud or to my home lab. I like things clean and minimal if you have not noticed already.&lt;/p&gt;
&lt;p&gt;Okay so that’s all for now. I’ll do another deep dive into the rest of my infrastructure when I’m not overwhelmed with how much there is…&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;6.5868055555556&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;There’s so much:&lt;br/&gt;- scripts for setting up ssh on yubikeys&lt;br/&gt;- unifi setup&lt;br/&gt;- nuc provisioning&lt;br/&gt;- auto updates &amp;amp; maintenance&lt;br/&gt;- build infrastructure for all my images etc&lt;br/&gt;- security of all the things&lt;br/&gt;- cameras&lt;br/&gt;- keeping all laptops up to date&lt;/p&gt;
— jessie frazelle (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/935667037145305088?ref_src=twsrc%5Etfw&quot;&gt;November 29, 2017&lt;/a&gt;&lt;/blockquote&gt;
</description>
<pubDate>Sun, 03 Dec 2017 18:50:05 +0000</pubDate>
<dc:creator>msh</dc:creator>
<og:title>Home Lab is the Dopest Lab</og:title>
<og:url>https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/</og:url>
<og:image>/img/share.png</og:image>
<og:description>How I set up my home lab to be my very own cloud.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/</dc:identifier>
</item>
<item>
<title>How Stripe Designs Websites</title>
<link>https://www.leejamesrobinson.com/blog/how-stripe-designs-beautiful-websites/</link>
<guid isPermaLink="true" >https://www.leejamesrobinson.com/blog/how-stripe-designs-beautiful-websites/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/banner.png&quot; alt=&quot;Stripe Logo&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Have you ever visited a website and been completely in awe of the elegance and simplicity of its design? For me, that website is &lt;a href=&quot;https://stripe.com/&quot;&gt;Stripe&lt;/a&gt;. Stripe is a company that allows people and businesses to accept payments online and in mobile apps. That doesn’t sound like a company that would have an exquisite website design, but look at how Stripe describes themselves on their about page.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;We think that building an internet business is a problem rooted in code and design, not finance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rather than making design an afterthought, it’s treated as a first-class citizen at Stripe. You can almost feel the hours of work spent iterating over designs and making minor tweaks when viewing the website’s pages. In this article, I’m going to break down how Stripe creates these beautiful designs and give some tips and tricks to web designers and developers alike.&lt;/p&gt;
&lt;h3 id=&quot;the-design&quot;&gt;The Design&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/website.png&quot; alt=&quot;Stripe Website&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Pictured above is the design for Stripe’s main landing page. At first glance, here’s what really sticks out to me:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Crisp typography&lt;/li&gt;
&lt;li&gt;Stunning color palette&lt;/li&gt;
&lt;li&gt;High-quality images&lt;/li&gt;
&lt;li&gt;Bold call-to-action buttons&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Let’s start with the first observation: the font.&lt;/p&gt;
&lt;h3 id=&quot;typography&quot;&gt;Typography&lt;/h3&gt;
&lt;p&gt;Stripe uses a font called &lt;a href=&quot;https://www.fontshop.com/families/camphor&quot;&gt;Camphor&lt;/a&gt;. It’s a modern, uncluttered, sans serif font designed by Nick Job in 2010. It &lt;em&gt;really&lt;/em&gt; shines here and looks great in a variety of weights.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/camphor.png&quot; alt=&quot;Camphor Font&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Typography is arguably the most important part of your design since it’s the medium for your content. Stripe does an excellent job of using different weights and colors to provide adequate contrast. This draws your attention to the things that matter most.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/typography.png&quot; alt=&quot;Typography Example&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Let’s see how we can make our font as crisp and clear as possible. First, we’ll define our font family to be Camphor along with some fallback fonts. &lt;strong&gt;Note:&lt;/strong&gt; Camphor is not free and should be purchased if you’re planning to use it in production. However, I did find a &lt;a href=&quot;https://gist.github.com/bdno86/d1f49b6f533df3f832b39d6cc3194303&quot;&gt;gist containing the font&lt;/a&gt; which you can mess around with.&lt;/p&gt;
&lt;p&gt;We can utilize the &lt;code&gt;text-rendering&lt;/code&gt; CSS property to allow us to choose quality over speed, as well as some vendor specific properties to make our font sharper. &lt;strong&gt;Note:&lt;/strong&gt; These should work for Chrome, Safari, and Firefox on Mac.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;font-family&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Camphor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Open&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Sans&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Segoe&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;UI&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;sans-serif&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;text-rendering&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;optimizeLegibility&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;-webkit-&lt;/span&gt;&lt;span&gt;font-smoothing&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;antialiased&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;-moz-&lt;/span&gt;&lt;span&gt;osx-font-smoothing&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;grayscale&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;example&quot;&gt;Example&lt;/h4&gt;
&lt;p&gt;In this example, I apply &lt;code&gt;-webkit-font-smoothing&lt;/code&gt; followed by &lt;code&gt;text-rendering&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/css-example.gif&quot; alt=&quot;CSS Example&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Okay, so we have a solid font. Let’s use it on some buttons!&lt;/p&gt;
&lt;h3 id=&quot;user-experience-ux&quot;&gt;User Experience (UX)&lt;/h3&gt;
&lt;p&gt;Indicating a visual response when hovering over items like buttons and links provides a great user experience. In the example below, you’ll notice the buttons shift &lt;em&gt;slightly&lt;/em&gt; up when hovered and change colors to a lighter shade of purple. The box-shadow also becomes a bit more intense.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/buttons.gif&quot; alt=&quot;Buttons Example&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;15&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;hover&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;#7795f8&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;translateY&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;-1&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;box-shadow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;7&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;14&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;rgba&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;93&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;.1&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;rgba&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;.08&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This really makes it feel like the button is meant to be clicked. It’s a wonderful experience. You can view code to recreate the buttons &lt;a href=&quot;https://codepen.io/leerob/pen/bYQRpB&quot;&gt;here&lt;/a&gt; on CodePen.&lt;/p&gt;
&lt;h3 id=&quot;color-palette&quot;&gt;Color Palette&lt;/h3&gt;
&lt;p&gt;I personally love the color palette of Stripe’s website. It’s bright and grabs your attention with some nice accent colors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/color-palette.png&quot; alt=&quot;Color Palette&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;utilizing-svgs&quot;&gt;Utilizing SVGs&lt;/h3&gt;
&lt;p&gt;Something else that really stuck out to me was how high quality their images looked. This is because they use SVG (&lt;a href=&quot;https://svgontheweb.com/&quot;&gt;Scalable Vector Graphic&lt;/a&gt;) images instead of normal &lt;code&gt;.png&lt;/code&gt; or &lt;code&gt;.jpg&lt;/code&gt; files whenever possible. This has a multitude of benefits.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Smaller file sizes&lt;/li&gt;
&lt;li&gt;Allows the ability to animate the image using CSS&lt;/li&gt;
&lt;li&gt;Looks crisp on any size display from mobile to desktop&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;That tablet displayed on the home screen? Yeah, that’s a &lt;code&gt;.svg&lt;/code&gt; that’s been scaled and rotated. Here’s the &lt;code&gt;.svg&lt;/code&gt; file from Stripe’s website. Notice how when you zoom in the quality remains clear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/salesforce.svg&quot; alt=&quot;SVG Example&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;animations&quot;&gt;Animations&lt;/h3&gt;
&lt;p&gt;Animations are the extra polish on top of an already beautiful design. Throughout all of Stripe’s pages, you’ll find a variety of animations like the ones shown below. Some are more subtle than others, but each serves a purpose.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/spinning-animation.gif&quot; alt=&quot;Animation Example&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Here’s another example that I really like.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.leejamesrobinson.com/img/stripe/animation-example.gif&quot; alt=&quot;Another Animation Example&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If you’ve never worked with CSS animations, I wrote a quick article showing how to &lt;a href=&quot;https://www.leejamesrobinson.com/blog/learning-css-animations-by-example&quot;&gt;learn them by example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a more detailed look into creating animations, I &lt;strong&gt;highly recommend&lt;/strong&gt; &lt;a href=&quot;https://stripe.com/blog/connect-front-end-experience&quot;&gt;this blog post&lt;/a&gt; by Stripe’s own Benjamin De Cock breaking down the front-end experience of their product &lt;a href=&quot;https://stripe.com/connect&quot;&gt;Connect&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;Hopefully this article gave you some insight into how Stripe designs their websites and inspired you to create something of your own! Here’s three main points to leave you with.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Typography choices are critical&lt;/li&gt;
&lt;li&gt;Don’t underestimate the value of good UX&lt;/li&gt;
&lt;li&gt;Use SVG images whenever possible&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Cheers! 🍻&lt;/p&gt;
&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;
</description>
<pubDate>Sun, 03 Dec 2017 16:37:39 +0000</pubDate>
<dc:creator>leerob</dc:creator>
<og:title>How Stripe Designs Beautiful Websites - Lee Robinson</og:title>
<og:description>Examining the tips and tricks used to make Stripe's website design a notch above the rest.</og:description>
<og:url>https://www.leejamesrobinson.com/blog/how-stripe-designs-beautiful-websites/</og:url>
<og:type>article</og:type>
<og:image>http://www.leejamesrobinson.com/img/stripe/banner.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.leejamesrobinson.com/blog/how-stripe-designs-beautiful-websites/</dc:identifier>
</item>
<item>
<title>How to respond when you are asked for an estimate?</title>
<link>https://softwareengineering.stackexchange.com/questions/648/how-to-respond-when-you-are-asked-for-an-estimate</link>
<guid isPermaLink="true" >https://softwareengineering.stackexchange.com/questions/648/how-to-respond-when-you-are-asked-for-an-estimate</guid>
<description>&lt;p&gt;Some advice from the dark side from one who learned the hard way.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;The requirements are unclear. Nobody has done an in depth analysis of all the implications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Don't do an estimate at this point. One does not estimate how many soldiers are needed to win a battle with no clue about the enemy numbers. The estimate is made after scouting. This is unless you already fought this enemy.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;The new feature will probably break some assumptions you made in your code and you start thinking immediately of all the things you might have to refactor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is your responsibility to factor in unless you expect others to have the expertise about this area.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;You have other things to do from past assignments and you will have to come up with an estimate that takes that other work into account.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Same as above, even for unanticipated work that's created by a slob team mate next to you with a near non-existent test procedure which causes your code to glitch out that you can't perfectly predict in advance. It's a weather forecast.&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;The 'done' definition is probably unclear: When will it be done? 'Done' as in just finished coding it, or 'done' as in &quot;the users are using it&quot;?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Understand the user-end requirement here, think like a user. Don't do what your peers do if they estimate something to be &quot;done&quot; just because some basic functionality with a barebones workflow that no user can possibly tolerate is what they consider to be &lt;em&gt;&quot;done&quot;&lt;/em&gt;. Think of it from the user standpoint, because that's all the client you're making the estimate for will typically understand. Estimate towards the complete user-end requirements, not towards the barebone technical requirements. And realize that your clients asking for estimates will be totally inaccurate here about how they word things and understand the technical aspects of what you say.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;No matter how conscious you are of all these things, sometimes your &quot;programmer's pride&quot; makes you give/accept shorter times than you originally suppose it might take. Specially when you feel the pressure of deadlines and management expectations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Don't do this! You sound like a self-motivated hard worker and possibly one who gives in easily to coercion.&lt;/p&gt;
&lt;p&gt;The problem here is this: let's say you and Joe made time estimates for the same task (but between two separate employees, unaware of both estimates at one time). You estimate valiantly, &lt;em&gt;&quot;one week&quot;&lt;/em&gt;. It's okay you think, you'll work over 100+ hours a week, unpaid overtime. Now you're three days late.&lt;/p&gt;
&lt;p&gt;Meanwhile, Joe estimates 5 months. You think this is ridiculous, you think you can pull this off in one week. How much does Joe work? 10 hours a week? ... except he finishes on time in exactly 5 months.&lt;/p&gt;
&lt;p&gt;Guess who gets perceived as the jackass? That's right, you. Joe seems like a great worker, you seem unreliable now. It doesn't matter so much that you might have achieved an even better result in ~7% of the time that Joe took. What matters is that you were 3 days off from a one week estimate.&lt;/p&gt;
&lt;p&gt;Never err on the side of the tighter estimate. Err on the side of the looser estimate. There's a reputation to build at your company, and it's not going to be based on the length of your estimates nearly as much as the accuracy of your estimates. It's easy to be accurate with an estimate that's too long, you just get more time to work on the problem and solve it better. An estimate that's too short leaves no breathing room at all, you either meet it desperately or you're screwed.&lt;/p&gt;
</description>
<pubDate>Sun, 03 Dec 2017 13:24:56 +0000</pubDate>
<dc:creator>lainon</dc:creator>
<og:type>website</og:type>
<og:image>https://cdn.sstatic.net/Sites/softwareengineering/img/apple-touch-icon@2.png?v=1ef7363febba</og:image>
<og:title>How to respond when you are asked for an estimate?</og:title>
<og:description>We, as programmers, are constantly being asked 'How long will it take'? And you know, the situation is almost always like this: The requirements are unclear. Nobody has done an in depth analysis ...</og:description>
<og:url>https://softwareengineering.stackexchange.com/questions/648/how-to-respond-when-you-are-asked-for-an-estimate</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://softwareengineering.stackexchange.com/questions/648/how-to-respond-when-you-are-asked-for-an-estimate</dc:identifier>
</item>
<item>
<title>A Generation Lost in the Bazaar (2012)</title>
<link>http://queue.acm.org/detail.cfm?id=2349257</link>
<guid isPermaLink="true" >http://queue.acm.org/detail.cfm?id=2349257</guid>
<description>&lt;div class=&quot;navbar&quot; readability=&quot;1.2631578947368&quot;&gt;

&lt;a href=&quot;http://queue.acm.org/&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/acmqueue_logo.gif&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;a href=&quot;http://queue.acm.org/app/&quot; target=&quot;_new&quot;&gt;&lt;img src=&quot;http://queue.acm.org/app/2017_09-10_lrg.png&quot; with=&quot;90&quot; height=&quot;120&quot; alt=&quot;September/October issue of acmqueue&quot;/&gt;&lt;/a&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://queue.acm.org/app/&quot;&gt;The September/October issue of acmqueue is out now&lt;/a&gt;&lt;/strong&gt;&lt;br clear=&quot;all&quot;/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;br/&gt;&lt;h3&gt;&lt;a href=&quot;http://queue.acm.org/listing.cfm?typefilter=Thebikeshed&amp;amp;sort=publication_date&amp;amp;order=desc&amp;amp;qc_type=Thebikeshed&amp;amp;article_type=&amp;amp;item_topic=all&amp;amp;filter_type=topic&amp;amp;page_title=The%20Bikeshed&amp;amp;filter=all&quot;&gt;The Bike Shed&lt;/a&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a href=&quot;http://queue.acm.org/listing.cfm?item_topic=Development&amp;amp;qc_type=theme_list&amp;amp;filter=Development&amp;amp;page_title=Development&amp;amp;order=desc&quot;&gt;Development&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;   &lt;a href=&quot;http://dl.acm.org/ft_gateway.cfm?id=2349257&amp;amp;ftid=1275264&amp;amp;dwn=1&quot;&gt;&lt;img src=&quot;http://queue.acm.org/img/icon_pdf.png&quot; alt=&quot;Download PDF version of this article&quot;/&gt; PDF&lt;/a&gt;&lt;/p&gt;
&lt;label&gt;August 15, 2012&lt;br/&gt;&lt;strong&gt;&lt;a class=&quot;descriptor&quot; href=&quot;http://queue.acm.org/issuedetail.cfm?issue=2346916&quot;&gt;Volume 10, issue 8&lt;/a&gt;&lt;/strong&gt;&lt;/label&gt;

&lt;h2&gt;Quality happens only when someone is responsible for it.&lt;/h2&gt;
&lt;br/&gt;&lt;h3&gt;Poul-Henning Kamp&lt;/h3&gt;
&lt;p&gt;Thirteen years ago, Eric Raymond's book &lt;em&gt;The Cathedral and the Bazaar&lt;/em&gt; (O'Reilly Media, 2001) redefined our vocabulary and all but promised an end to the waterfall model and big software companies, thanks to the new grass-roots open source software development movement. I found the book thought provoking, but it did not convince me. On the other hand, being deeply involved in open source, I couldn't help but think that it would be nice if he was right.&lt;/p&gt;
&lt;p&gt;The book I brought to the beach house this summer is also thought provoking, much more so than Raymond's (which it even mentions rather positively): Frederick P. Brooks's &lt;em&gt;The Design of Design&lt;/em&gt; (Addison-Wesley Professional, 2010). As much as I find myself nodding in agreement and as much as I enjoy Brooks's command of language and subject matter, the book also makes me sad and disappointed.&lt;/p&gt;
&lt;p&gt;Thirteen years ago also marks the apogee of the dot-com euphoria, where every teenager was a Web programmer and every college dropout had a Web startup. I had genuine fun trying to teach some of those greenhorns about the good old-fashioned tricks of the trade—test-restoring backups, scripting operating-system installs, version control, etc. Hindsight, of course, is 20/20 (i.e., events may have been less fun than you remember), and there is no escaping that the entire dot-com era was a disaster for IT/CS in general and for software quality and Unix in particular.&lt;/p&gt;
&lt;p&gt;I have not seen any competent analysis of how much bigger the IT industry became during the dot-com years. My own estimate is that—counted in the kinds of jobs that would until then have been behind the locked steel doors of the IT department—our trade grew by two orders of magnitude, or if you prefer, by more than 10,000 percent.&lt;/p&gt;
&lt;p&gt;Getting hooked on computers is easy—almost anybody can make a program work, just as almost anybody can nail two pieces of wood together in a few tries. The trouble is that the market for two pieces of wood nailed together—inexpertly—is fairly small outside of the &quot;proud grandfather&quot; segment, and getting from there to a decent set of chairs or fitted cupboards takes talent, practice, and education. The extra 9,900 percent had neither practice nor education when they arrived in our trade, and before they ever had the chance to acquire it, the party was over and most of them were out of a job. I will charitably assume that those who managed to hang on were the most talented and most skilled, but even then there is no escaping that as IT professionals they mostly sucked because of their lack of ballast.&lt;/p&gt;
&lt;p&gt;The bazaar meme advocated by Raymond, &quot;Just hack it,&quot; as opposed to the carefully designed cathedrals of the pre-dot-com years, unfortunately did, not die with the dot-com madness, and today Unix is rapidly sinking under its weight.&lt;/p&gt;
&lt;p&gt;I updated my laptop. I have been running the development version of FreeBSD for 18 years straight now, and compiling even my Spartan work environment from source code takes a full day, because it involves trying to make sense and architecture out of Raymond's anarchistic software bazaar.&lt;/p&gt;
&lt;p&gt;At the top level, the FreeBSD ports collection is an attempt to create a map of the bazaar that makes it easy for FreeBSD users to find what they need. In practice this map consists, right now, of 22,198 files that give a summary description of each stall in the bazaar—a couple of lines telling you roughly what that stall offers and where you can read more about it. Also included are 23,214 Makefiles that tell you what to do with the software you find in each stall. These Makefiles also try to inform you of the choices you should consider, which options to choose, and what would be sensible defaults for them. The map also conveniently comes with 24,400 patch files to smooth over the lack of craftsmanship of many of the wares offered, but, generally, it is lack of portability that creates a need for these patch files.&lt;/p&gt;
&lt;p&gt;Finally, the map helpfully tells you that if you want to have www/firefox, you will first need to get devel/nspr, security/nss, databases/sqlite3, and so on. Once you look up those in the map and find their dependencies, and recursively look up their dependencies, you will have a shopping list of the 122 packages you will need before you can get to www/firefox.&lt;/p&gt;
&lt;p&gt;Modularity and code reuse are, of course, A Good Thing. Even in the most trivially simple case, however, the CS/IT dogma of code reuse is totally foreign in the bazaar: the software in the FreeBSD ports collection contains at least 1,342 copied and pasted cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;If that resistance/ignorance of code reuse had resulted in self-contained and independent packages of software, the price of the code duplication might actually have been a good tradeoff for ease of package management. But that was not the case: the packages form a tangled web of haphazard dependencies that results in much code duplication and waste.&lt;/p&gt;
&lt;p&gt;Here is one example of an ironic piece of waste: Sam Leffler's graphics/libtiff is one of the 122 packages on the road to www/firefox, yet the resulting Firefox browser does not render TIFF images. For reasons I have not tried to uncover, 10 of the 122 packages need Perl and seven need Python; one of them, devel/glib20, needs both languages for reasons I cannot even imagine.&lt;/p&gt;
&lt;p&gt;Further down the shopping list are repeated applications of the Peter Principle, the idea that in an organization where promotion is based on achievement, success, and merit, that organization's members will eventually be promoted beyond their level of ability. The principle is commonly phrased, &quot;Employees tend to rise to their level of incompetence.&quot; Applying the principle to software, you will find that you need three different versions of the make program, a macroprocessor, an assembler, and many other interesting packages. At the bottom of the food chain, so to speak, is libtool, which tries to hide the fact that there is no standardized way to build a shared library in Unix. Instead of standardizing how to do that across all Unixen—something that would take just a single flag to the &lt;tt&gt;ld(1)&lt;/tt&gt; command—the Peter Principle was applied and made it libtool's job instead. The Peter Principle is indeed strong in this case—the source code for devel/libtool weighs in at 414,740 lines. Half that line count is test cases, which in principle is commendable, but in practice it is just the Peter Principle at work: the tests elaborately explore the functionality of the complex solution for a problem that should not exist in the first place. Even more maddening is that 31,085 of those lines are in a single unreadably ugly shell script called configure. The idea is that the configure script performs approximately 200 automated tests, so that the user is not burdened with configuring libtool manually. This is a horribly bad idea, already much criticized back in the 1980s when it appeared, as it allows source code to pretend to be portable behind the veneer of the configure script, rather than actually having the quality of portability to begin with. It is a travesty that the configure idea survived.&lt;/p&gt;
&lt;p&gt;The 1980s saw very different Unix implementations: Cray-1s with their 24-bit pointers, Amdahl UTS mainframe Unix, a multitude of more or less competently executed SysV+BSD mashups from the minicomputer makers, the almost—but not quite—Unix shims from vendors such as Data General, and even the genuine Unix clone Coherent from the paint company Mark Williams.&lt;/p&gt;
&lt;p&gt;The configure scripts back then were written by hand and did things like figure out if this was most like a BSD- or a SysV-style Unix, and then copied one or the other Makefile and maybe also a .h file into place. Later the configure scripts became more ambitious, and as an almost predictable application of the Peter Principle, rather than standardize Unix to eliminate the need for them, somebody wrote a program, autoconf, to write the configure scripts.&lt;/p&gt;
&lt;p&gt;Today's Unix/Posix-like operating systems, even including IBM's z/OS mainframe version, as seen with 1980 eyes are identical; yet the 31,085 lines of configure for libtool still check if &lt;tt&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/tt&gt; and &lt;tt&gt;&amp;lt;stdlib.h&amp;gt;&lt;/tt&gt; exist, even though the Unixen, which lacked them, had neither sufficient memory to execute libtool nor disks big enough for its 16-MB source code.&lt;/p&gt;
&lt;p&gt;How did that happen?&lt;/p&gt;
&lt;p&gt;Well, autoconf, for reasons that have never made sense, was written in the obscure M4 macro language, which means that the actual tests look like this:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;## Whether `make' supports order-only prerequisites.&lt;br/&gt;AC_CACHE_CHECK([whether ${MAKE-make} supports order-only prerequisites],&lt;br/&gt;  [lt_cv_make_order_only],&lt;br/&gt;  [mkdir conftest.dir&lt;br/&gt;   cd conftest.dir&lt;br/&gt;   touch b&lt;br/&gt;   touch a&lt;br/&gt;cat &amp;gt;confmk &amp;lt;&amp;lt; 'END'&lt;br/&gt;a: b | c&lt;br/&gt;a b c:&lt;br/&gt;       touch $[]@&lt;br/&gt;END&lt;br/&gt;  touch c&lt;br/&gt;  if ${MAKE-make} -s -q -f confmk &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then&lt;br/&gt;    lt_cv_make_order_only=yes&lt;br/&gt;  else&lt;br/&gt;    lt_cv_make_order_only=no&lt;br/&gt;  fi&lt;br/&gt;  cd ..&lt;br/&gt;  rm -rf conftest.dir&lt;br/&gt;])&lt;br/&gt;if test $lt_cv_make_order_only = yes; then&lt;br/&gt;  ORDER='|'&lt;br/&gt;else&lt;br/&gt;  ORDER=''&lt;br/&gt;fi&lt;br/&gt;AC_SUBST([ORDER])&lt;br/&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Needless to say, this is more than most programmers would ever want to put up with, even if they had the skill, so the input files for autoconf happen by copy and paste, often hiding behind increasingly bloated standard macros covering &quot;standard tests&quot; such as those mentioned earlier, which look for compatibility problems not seen in the past 20 years.&lt;/p&gt;
&lt;p&gt;This is probably also why libtool's configure probes no fewer than 26 different names for the Fortran compiler my system does not have, and then spends another 26 tests to find out if each of these nonexistent Fortran compilers supports the -g option.&lt;/p&gt;
&lt;p&gt;That is the sorry reality of the bazaar Raymond praised in his book: a pile of old festering hacks, endlessly copied and pasted by a clueless generation of IT &quot;professionals&quot; who wouldn't recognize sound IT architecture if you hit them over the head with it. It is hard to believe today, but under this embarrassing mess lies the ruins of the beautiful cathedral of Unix, deservedly famous for its simplicity of design, its economy of features, and its elegance of execution. (&lt;em&gt;Sic transit gloria mundi&lt;/em&gt;, etc.)&lt;/p&gt;
&lt;p&gt;One of Brooks's many excellent points is that quality happens only if somebody has the responsibility for it, and that &quot;somebody&quot; can be no more than one single person—with an exception for a dynamic duo. I am surprised that Brooks does not cite Unix as an example of this claim, since we can pinpoint with almost surgical precision the moment that Unix started to fragment: in the early 1990s when AT&amp;amp;T spun off Unix to commercialize it, thereby robbing it of its architects.&lt;/p&gt;
&lt;p&gt;More than once in recent years, others have reached the same conclusion as Brooks. Some have tried to impose a kind of sanity, or even to lay down the law formally in the form of technical standards, hoping to bring order and structure to the bazaar. So far they have all failed spectacularly, because the generation of lost dot-com &lt;em&gt;wunderkinder&lt;/em&gt; in the bazaar has never seen a cathedral and therefore cannot even imagine why you would want one in the first place, much less what it should look like. It is a sad irony, indeed, that those who most need to read it may find &lt;em&gt;The Design of Design&lt;/em&gt; entirely incomprehensible. But to anyone who has ever wondered whether using m4 macros to configure autoconf to write a shell script to look for 26 Fortran compilers in order to build a Web browser was a bit of a detour, Brooks offers well-reasoned hope that there can be a better way.&lt;/p&gt;
&lt;p&gt;LOVE IT, HATE IT? LET US KNOW&lt;/p&gt;
&lt;p&gt;feedback@queue.acm.org&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Poul-Henning Kamp&lt;/strong&gt; (&lt;a href=&quot;mailto:phk@FreeBSD.org&quot; target=&quot;_blank&quot;&gt;phk@FreeBSD.org&lt;/a&gt;) has programmed computers for 26 years and is the inspiration behind &lt;a href=&quot;http://bikeshed.org/&quot; target=&quot;_blank&quot;&gt;bikeshed.org&lt;/a&gt;. His software has been widely adopted as under-the-hood building blocks in both open source and commercial products. His most recent project is the Varnish HTTP accelerator, which is used to speed up large Web sites such as Facebook.&lt;/p&gt;
&lt;p&gt;© 2012 ACM 1542-7730/12/0800 $10.00&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;floatLeft&quot; src=&quot;http://queue.acm.org/img/q%20stamp_small.jpg&quot; width=&quot;26&quot; height=&quot;45&quot; alt=&quot;acmqueue&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Originally published in Queue vol. 10, no. 8&lt;/em&gt;—&lt;br/&gt;see this item in the &lt;a href=&quot;http://portal.acm.org/citation.cfm?id=2349257&quot;&gt;ACM Digital Library&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;ACMQueue&quot;&gt;Tweet&lt;/a&gt; 


&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;
Related:
&lt;p&gt;&lt;span&gt;Alvaro Videla&lt;/span&gt; - &lt;a href=&quot;http://queue.acm.org/detail.cfm?id=3127495&quot;&gt;&lt;strong&gt;Metaphors We Compute By&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Code is a story that explains how to solve a particular problem.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ivar Jacobson, Ian Spence, Pan-Wei Ng&lt;/span&gt; - &lt;a href=&quot;http://queue.acm.org/detail.cfm?id=3123501&quot;&gt;&lt;strong&gt;Is There a Single Method for the Internet of Things?&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Essence can keep software development for the IoT from becoming unwieldy.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ivar Jacobson, Ian Spence, Ed Seidewitz&lt;/span&gt; - &lt;a href=&quot;http://queue.acm.org/detail.cfm?id=3012428&quot;&gt;&lt;strong&gt;Industrial Scale Agile - from Craft to Engineering&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Essence is instrumental in moving software development toward a true engineering discipline.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Andre Medeiros&lt;/span&gt; - &lt;a href=&quot;http://queue.acm.org/detail.cfm?id=2971330&quot;&gt;&lt;strong&gt;Dynamics of Change: Why Reactivity Matters&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Tame the dynamics of change by centralizing each concern in its own module.&lt;/p&gt;
&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;(newest first)&lt;/p&gt;
&lt;blockquote readability=&quot;3.0508474576271&quot;&gt;
&lt;p&gt;&lt;strong&gt;Displaying 10 most recent comments. &lt;a href=&quot;http://queue.acm.org/fullcomments.cfm?id=2349257&quot;&gt;Read the full list here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;author&quot;&gt;Don Hopkins | Sun, 03 Dec 2017 17:33:39 UTC&lt;/p&gt;
Gnu Autoconf is the epitome of FUBAR Bazaar.
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;ToneLoc | Wed, 28 Sep 2016 11:18:26 UTC&lt;/p&gt;
Andrew Punch comments &quot; If the author doesn't like the FreeBSD way there are plenty of other Linux and FreeBSD distributions. &quot;
&lt;p&gt;Something tells me the author knows this, thanks for the laugh.&lt;/p&gt;
&lt;p&gt;another good laugh from &quot;whatever&quot; &quot;Oh, you wrote some crappy code to speed up Facebook?&quot;&lt;/p&gt;
&lt;p&gt;Great article, funny comments. Glad to be here.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Anton Gerasimov | Wed, 10 Aug 2016 13:09:21 UTC&lt;/p&gt;
Sound legit, but we've seen Plan9 and Inferno which were build in a cathederal fashion by first-class architects (some of them from Unix team also). I'm not discussing architectural decisions but generally, in terms of popularity both were failures. It seems that while designs of GNU/Linux and FreeBSD systems (taken as a whole) are somewhat suboptimal they're just &quot;good enough&quot;, i.e. nobody has managed to build something so much better, that benefits of better architecture overweight benefits of bazaar organization.
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;peter | Tue, 09 Aug 2016 22:03:49 UTC&lt;/p&gt;
I think Poul was having a bad day choosing the colour of his bike shed and had a bit of rant.
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Tim | Tue, 09 Aug 2016 02:24:17 UTC&lt;/p&gt;
Fred Brooks is that author that everybody says they read and look up to, but I have not anywhere in the world found a software team that's willing to put into practice what he preached, so many decades ago.
&lt;p&gt;I think it would be a fantastic recruiting tool. It'd work on me. &quot;Have you read Fred Brooks? Do you wish your software team were as well run as a surgical team? Come work with us! We actually do all that stuff that everybody else ignores.&quot;&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Andrew Punch | Tue, 09 Aug 2016 00:42:10 UTC&lt;/p&gt;
If only there was some kind of software that would manage packages - we could call it a package manager!
&lt;p&gt;If the author doesn't like the FreeBSD way there are plenty of other Linux and FreeBSD distributions.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;sciolist | Wed, 10 Jun 2015 17:40:02 UTC&lt;/p&gt;
Democracy is based on the assumption that a million men are wiser than one man. Hows that again? I missed something.
&lt;p&gt;Autocracy is based on the assumption that one man is wiser than a million men. Lets play that over again, too. Who decides?&lt;/p&gt;
&lt;p&gt;-RAH&lt;/p&gt;
&lt;p&gt;So I guess it comes down to which side of this argument you take. Where your bias lies, in other words. I think the key through the horns of the dilemma is being able to communicate about the things you care about; being able to admit you might, possibly, have been wrong, or even worse, right about something; being able to make the singular contribution that only you can make in the context of what might be best for the group you are working for or with. The assumption here, of course, is that everyone is always striving to be the best person that they can be. Constantly striving and discerning how they can make the best out of the situation for everyone.&lt;/p&gt;
&lt;p&gt;But we're lazy. And greedy. And willful. And deceitful. And noble. And brilliant. And humble. And industrious. Welcome to the Human Condition. We keep trying to define normative behaviors (&quot;should&quot; or &quot;ought&quot; things) in terms of an either/or model. Maybe we should re-think that. Maybe it should be an &quot;and&quot; model. In this case it doesn't matter much since this is basically a blog post. But at the very least, let's be civil about it, whatever the personal bias you have on the matter. Ad hominem attacks just don't help anyone and tend to move focus away from the point at hand and into the cults of personality and rhetoric. So STFU 'whatever'.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;whatever | Mon, 12 Jan 2015 01:40:08 UTC&lt;/p&gt;
Igor: He's not going to write a line of code to address it, because he's just a bitch--not a problem solver.
&lt;p&gt;Yet arrogant tight ass pretends that he's superior to others while lamenting that the world isn't perfect. There are few things worse than snobby coders, which is what you are. You're nothing special. You haven't contributed anything that matters. Oh, you wrote some crappy code to speed up Facebook? Wow, you're really important. You're as replaceable as the people you're criticizing, and you're just as much of a code monkey as they are.&lt;/p&gt;
&lt;p&gt;Coding is just like anything else humans do. It's a big mess. You can't clean it up without tearing it down, and nobody wants to lose 20 years of functionality that's been built because some crybaby can't handle reality. People like you are a dime a dozen and tend not to be the people who actually get things done.&lt;/p&gt;
&lt;p&gt;Deal with it.&quot;&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Igor | Sat, 10 Jan 2015 00:50:35 UTC&lt;/p&gt;
The author might be completely right (I don't have as many years of experience, haven't seen the UNIX in the 80's or early 90's), but I think that the solution is to fix code instead of complaining. Hacks are not going anywhere. autoconf is bad? libtool is bad? Start a project to rewrite it, dedicate some FreeBSD resources to make it better, or hell - rewrite it yourself. I would love to help, but I am a hack at writing code (IT professional with scripting).
&lt;p&gt;What is definitely right is that software in general is more and more bloated and eats more and more resources. The aforementioned elegance is gone. I attribute a lot of this however to using higher and higher languages, not caring about resources.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;gbonehead | Wed, 31 Dec 2014 18:49:47 UTC&lt;/p&gt;
Ah, the UNIX-HATERS Handbook is being reincarned! :)
&lt;p&gt;http://www.amazon.com/UNIX-Haters-Handbook-UNIX-Haters--line/dp/1568842031&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;blockquote readability=&quot;3.0508474576271&quot;&gt;
&lt;p&gt;&lt;strong&gt;Displaying 10 most recent comments. &lt;a href=&quot;http://queue.acm.org/fullcomments.cfm?id=2349257&quot;&gt;Read the full list here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;p&gt;&lt;a href=&quot;http://queue.acm.org/detail.cfm?id=2349257#&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/logo_acm.gif&quot;/&gt;&lt;/a&gt;&lt;br/&gt;© 2017 ACM, Inc. All Rights Reserved.&lt;/p&gt;
</description>
<pubDate>Sun, 03 Dec 2017 10:10:58 +0000</pubDate>
<dc:creator>rendx</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://queue.acm.org/detail.cfm?id=2349257</dc:identifier>
</item>
<item>
<title>Postmortem: Every Frame a Painting</title>
<link>https://medium.com/@tonyszhou/postmortem-1b338537fabc</link>
<guid isPermaLink="true" >https://medium.com/@tonyszhou/postmortem-1b338537fabc</guid>
<description>&lt;h3 name=&quot;bb39&quot; id=&quot;bb39&quot; class=&quot;graf graf--h3 graf--leading&quot;&gt;PART IV: UNACKNOWLEDGED TRUTHS&lt;/h3&gt;
&lt;p name=&quot;cba9&quot; id=&quot;cba9&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;We feel there are a lot of misconceptions or ideas that people believe about making stuff on the Internet. Here’s the truth, as we see it.&lt;/p&gt;
&lt;p name=&quot;7076&quot; id=&quot;7076&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf-after--p&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;10&lt;/span&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TAYLOR)&lt;/em&gt;&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Work with a partner&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;5445&quot; id=&quot;5445&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There’s a common myth in the arts — the lone genius, usually a man, creating everything by himself. For the most part, neither of us has found it to be completely true. Look up most cases of a lone genius, and you’ll find a footnote about some unacknowledged helper.&lt;/p&gt;
&lt;p name=&quot;c2b9&quot; id=&quot;c2b9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Here’s how we work: Tony usually researches, writes and edits alone. But I do everything else: I edit every draft, watch every version, watch all the clips, do the flash cards, and build the thesis. I am the first and last audience that sees everything before it goes out. And the closest description we’ve ever come up with is that he is the editor, and I am the editor’s editor.&lt;/p&gt;
&lt;p name=&quot;3b68&quot; id=&quot;3b68&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If you look at the picture below, you’ll see Tony edited version 1 of the Chuck Jones video by himself. Then we worked together for 7 days to create version 7 (the final). The yellow boxes are the only parts that stayed the same, and even those sections got moved around.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*1SQVsZ5ooG6IKTkh-L-jAQ.jpeg&quot; data-width=&quot;2435&quot; data-height=&quot;1400&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*1SQVsZ5ooG6IKTkh-L-jAQ.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*1SQVsZ5ooG6IKTkh-L-jAQ.jpeg&quot;/&gt;&lt;/div&gt;
A fair example of Tony’s first draft of the edit vs our mutual final draft
&lt;p name=&quot;2beb&quot; id=&quot;2beb&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;But most of all throughout this process, I’m a sounding board. Tony and I often build a thesis by arguing the points with each other. Except for a handful of videos, that has basically been our process for three years. We’re not saying that this system will work for everyone, but having two sets of eyes has worked really well for us.&lt;/p&gt;
&lt;p name=&quot;3a06&quot; id=&quot;3a06&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf-after--p&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;11&lt;/span&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TONY)&lt;/em&gt;&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;There is no such thing as free content on the Internet&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;3118&quot; id=&quot;3118&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Everything costs something to make. If a person is putting out content for free, that means they’re not getting paid for their time.&lt;/p&gt;
&lt;p name=&quot;16b2&quot; id=&quot;16b2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Video essays cost money to make. There’s the cost of the research, the writing, the assembling of materials, the editing. It adds up to hours and hours of work for something that takes minutes to consume. My average just for &lt;em class=&quot;markup--em markup--p-em&quot;&gt;editing&lt;/em&gt; (not anything else) is about 8 hours of editing for every 1 minute of video essay. So the 9-minute Jackie Chan video was around 72 hours of editing. It was probably at least double for research and writing.&lt;/p&gt;

Probably around 200 hours of work. Still a favorite, though.
&lt;p name=&quot;29d4&quot; id=&quot;29d4&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;With Patreon donations, Every Frame a Painting was eventually able to break even. But from April 2014 until December 2015, we were making video essays at a loss. We were never in danger of not making the rent, but it got pretty financially stressful on several occasions.&lt;/p&gt;
&lt;p name=&quot;1982&quot; id=&quot;1982&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf-after--p&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;12&lt;/span&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TONY)&lt;/em&gt;&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Nobody can cheat the triangle&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;33a6&quot; id=&quot;33a6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Everyone who works in filmmaking knows the triangle: Faster, Cheaper, Better. Pick two. A film can be made fast and cheap, but it won’t be good. Or you can make it fast and good, but it won’t be cheap. Or it can be cheap and good, but it won’t happen fast.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*eLNwfRu04uBswfpbGpZu7A.png&quot; data-width=&quot;300&quot; data-height=&quot;288&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*eLNwfRu04uBswfpbGpZu7A.png&quot;/&gt;&lt;/div&gt;
The famous triangle/Venn diagram
&lt;p name=&quot;03f5&quot; id=&quot;03f5&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Every Frame a Painting was made after we came home from our day jobs and paid our bills. That kept it cheap. We also tried really hard to make it good. Which ultimately meant we had to sacrifice “fast.”&lt;/p&gt;
&lt;p name=&quot;75a6&quot; id=&quot;75a6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The big danger for future video essayists is that large websites have started moving away from the written word and towards video, which is completely unsustainable. Video is just too expensive and time-consuming to make.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*-Ee3OeJFeeOj4g0vvJDRGw.jpeg&quot; data-width=&quot;500&quot; data-height=&quot;386&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*-Ee3OeJFeeOj4g0vvJDRGw.jpeg&quot;/&gt;&lt;/div&gt;
All of this is accurate
&lt;p name=&quot;e952&quot; id=&quot;e952&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TAYLOR)&lt;/em&gt; Unfortunately, no matter how hard you try, nobody can cheat this triangle. And sooner or later, all of these large sites will bleed money, at which point some executive will say “We need to make our content both faster AND cheaper!”&lt;/p&gt;
&lt;p name=&quot;2e5a&quot; id=&quot;2e5a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This is why we encourage every person who wants to make something on the Internet to understand the value of independence. This is not about artistic integrity or even money. We kept Every Frame a Painting independent because as long as we could control this triangle, we could control the end result.&lt;/p&gt;
&lt;p name=&quot;24b1&quot; id=&quot;24b1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We didn’t care about cheap or fast, we cared about it being &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;good&lt;/strong&gt;. If we found a company willing to pay for it to happen fast, we’d work fast (full disclosure: we eventually found two, &lt;a href=&quot;https://www.criterion.com/films/28880-tampopo&quot; data-href=&quot;https://www.criterion.com/films/28880-tampopo&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Criterion&lt;/a&gt; and &lt;a href=&quot;https://www.filmstruck.com/us/&quot; data-href=&quot;https://www.filmstruck.com/us/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;FilmStruck&lt;/a&gt;). If nobody was willing to pay, then we worked slow.&lt;/p&gt;
&lt;p name=&quot;aecd&quot; id=&quot;aecd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But if we sold the channel to another company, or partnered with some network, then we would no longer control the triangle. And guess which of these three things would get sacrificed first?&lt;/p&gt;
&lt;p name=&quot;b5de&quot; id=&quot;b5de&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf-after--p&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;13&lt;/span&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TONY)&lt;/em&gt;&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Know thyself and thy audience&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;48f1&quot; id=&quot;48f1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Nothing really prepares you for the experience of suddenly having “an audience” on the Internet. The experience is different for every person, but I suspect the two major feelings are the same: there’s that initial dopamine rush of “Oh my God somebody likes me” followed by that creeping fear of “I better not fuck this up.”&lt;/p&gt;
&lt;p name=&quot;24d0&quot; id=&quot;24d0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;George Orwell has this great quote:&lt;/p&gt;
&lt;blockquote name=&quot;cb29&quot; id=&quot;cb29&quot; class=&quot;graf graf--pullquote graf-after--p&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;What people always demand of a popular novelist is that he shall write the same book over and over again, forgetting that a man who would write the same book twice could not even write it once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;0d7c&quot; id=&quot;0d7c&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;The Internet, and YouTube in particular, is a massive echo chamber of people asking you to write the same book over and over again. For your own sanity, you need to keep those voices at arm’s length. But because of that combination of dopamine and fear, it seems as though a lot of people end up leaning into what the audience wants.&lt;/p&gt;
&lt;p name=&quot;40a5&quot; id=&quot;40a5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We’re not asking you to ignore the audience completely; it’s more about setting clear boundaries between you and them.&lt;/p&gt;
&lt;p name=&quot;085d&quot; id=&quot;085d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;My belief is that if you give the audience &lt;em class=&quot;markup--em markup--p-em&quot;&gt;exactly&lt;/em&gt; what they ask for every time, they will probably enjoy it, but on some level they’ll lose respect for you. Hell, you’ll lose respect for yourself.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*fR17KDreh9YGTCUyuqYkAg.jpeg&quot; data-width=&quot;627&quot; data-height=&quot;237&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*fR17KDreh9YGTCUyuqYkAg.jpeg&quot;/&gt;&lt;/div&gt;
This tweet, however, did make me very happy. Baby, I got a stew.
&lt;p name=&quot;2fdf&quot; id=&quot;2fdf&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TAYLOR)&lt;/em&gt; And I believe that there is a balance that can be found, but you and the audience should be equally as passionate about the idea. The key is nuance.&lt;/p&gt;
&lt;p name=&quot;65aa&quot; id=&quot;65aa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So with Every Frame a Painting, we made it clear that we would not accept requests; we came up with all the ideas and set up boundaries. Not everybody needs to set the same boundaries we did, but you need to have something.&lt;/p&gt;
&lt;p name=&quot;39e6&quot; id=&quot;39e6&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf-after--p&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;14&lt;/span&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TAYLOR)&lt;/em&gt;&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Success can be scarier than failure&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;f484&quot; id=&quot;f484&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The idea of failure is always scary. Nobody wants to fail, especially not in front of other people. But this script you’re reading is a failure.&lt;/p&gt;
&lt;p name=&quot;b134&quot; id=&quot;b134&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The reason we‘re putting it out there isn’t as an act of bravery or anything; we just wanted to be honest. Failure is a fact of life — certainly a fact of any life in the arts. It’s the only way we’ve ever learned anything.&lt;/p&gt;
&lt;p name=&quot;f87b&quot; id=&quot;f87b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TONY)&lt;/em&gt; For us, Every Frame a Painting ended up being both a personal and a professional success. But over time, I felt trapped by what we’d created — and also trapped by that success.&lt;/p&gt;
&lt;p name=&quot;061a&quot; id=&quot;061a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Every time I mentioned some film, I’d hear, “are you gonna make a video about it?” Every time I started writing something, even for my own amusement, a voice in the back of my head would say “how do I make this accessible to my audience?” I stopped experimenting in my editing, mostly because it was too far outside the margins of what I was making on YouTube.&lt;/p&gt;
&lt;p name=&quot;ff40&quot; id=&quot;ff40&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It wasn’t even fun making jokes on Twitter anymore, because they got taken at face value:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*BiKwmYp8uZKH2wvbb_8wTA.jpeg&quot; data-width=&quot;638&quot; data-height=&quot;1287&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*BiKwmYp8uZKH2wvbb_8wTA.jpeg&quot;/&gt;&lt;/div&gt;
Reaction to a joke I made on Twitter
&lt;p name=&quot;f10c&quot; id=&quot;f10c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;I’d been a working video editor since I was 19 years old. I’d spent three years of my personal time editing video essays. And now I could barely stand to look at my own work. Eventually, the solution became clear: go do something else.&lt;/p&gt;
&lt;p name=&quot;5a8b&quot; id=&quot;5a8b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(TAYLOR)&lt;/em&gt; Whenever Tony got really down like this, I would remind him of a clip that we both love, from the Studio Ghibli documentary “The Kingdom of Dreams and Madness.” It’s a moment when Hayao Miyazaki is trying to draw a specific airplane. And for some reason, he cannot do it.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*C1_0IjukCNXbGX8gvx2zhQ.jpeg&quot; data-width=&quot;582&quot; data-height=&quot;325&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*C1_0IjukCNXbGX8gvx2zhQ.jpeg&quot;/&gt;&lt;/div&gt;
From “The Kingdom of Dreams and Madness” (2014)
&lt;p name=&quot;c89c&quot; id=&quot;c89c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;For days and days, he keeps trying to draw this plane, but nothing meets his satisfaction. Eventually, he realizes that he’s spent too much time on it. So he hands the plane off to another animator, and he moves on to something else.&lt;/p&gt;
&lt;p name=&quot;5568&quot; id=&quot;5568&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;For me and for Tony, this clip is extremely reassuring. If Miyazaki — the world’s greatest living animator — can admit defeat after trying his best, then it’s okay for everyone else. If he can let go, then so can we.&lt;/p&gt;
</description>
<pubDate>Sun, 03 Dec 2017 09:26:17 +0000</pubDate>
<dc:creator>19870213</dc:creator>
<og:title>Postmortem: Every Frame a Painting – Tony Zhou – Medium</og:title>
<og:url>https://medium.com/@tonyszhou/postmortem-1b338537fabc</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*zYZdxBTRRLpwWu46_1Qy8w.jpeg</og:image>
<og:description>Every Frame a Painting is officially dead. Nothing sinister; we just decided to end it.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@tonyszhou/postmortem-1b338537fabc</dc:identifier>
</item>
<item>
<title>Taking Children Seriously</title>
<link>http://fallibleideas.com/taking-children-seriously</link>
<guid isPermaLink="true" >http://fallibleideas.com/taking-children-seriously</guid>
<description>&lt;p&gt;&lt;strong&gt;Taking Children Seriously&lt;/strong&gt; (TCS) is a rational, non-coercive philosophy of parenting and learning which says:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The main goal of parenting is to help children &lt;em&gt;learn&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Punishing&lt;/em&gt; doesn’t help with &lt;em&gt;learning&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reason&lt;/em&gt; helps &lt;em&gt;everyone&lt;/em&gt; win.&lt;/li&gt;
&lt;li&gt;Ignorance isn’t stupidity.&lt;/li&gt;
&lt;li&gt;Children aren’t fragile.&lt;/li&gt;
&lt;li&gt;Obedience and rules are bad.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;TCS is easy to misunderstand because it involves a change in perspective. Don’t confuse it with any parenting styles you’ve seen before. It isn’t about being strict or lenient, gentle or harsh, controlling or hands-off. TCS helps families &lt;em&gt;interact in win/win ways&lt;/em&gt; instead of choosing between either the parent or the child getting his way. It doesn’t fit into the usual categories like permissive or authoritarian. TCS isn’t a middle ground between those categories either.&lt;/p&gt;
&lt;h2&gt;Why Taking Children Seriously?&lt;/h2&gt;
&lt;p&gt;There’s millions of different opinions on how to parent. How’d TCS come up with these claims? Why are they better than alternatives?&lt;/p&gt;
&lt;p&gt;TCS is a &lt;em&gt;rational philosophy&lt;/em&gt;. That’s unrelated to the way you’ve probably seen some parents try to “reason” with kids. They’re trying to disguise their orders to &lt;em&gt;sound&lt;/em&gt; more gentle, and trying to avoid saying “no” (the answer is still “no”, they just avoid &lt;em&gt;saying&lt;/em&gt; it, which is confusing).&lt;/p&gt;
&lt;p&gt;Most approaches to parenting start with some beliefs about how to treat children &lt;em&gt;first&lt;/em&gt; (e.g. be strict or be gentle), and then make up biased justifications &lt;em&gt;second&lt;/em&gt;. This contrasts with the &lt;em&gt;rational&lt;/em&gt; approach: being open-minded and genuinely considering multiple different views. Do you want reasoning to help you find the truth? Or do you assume you’re right and just use reasoning to try to convince other people?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fallibleideas.com/reason&quot;&gt;Reason&lt;/a&gt; is wonderful. Reason means if you see a &lt;a href=&quot;http://fallibleideas.com/problems&quot;&gt;problem&lt;/a&gt; with something, of any kind, then there’s a &lt;a href=&quot;http://fallibleideas.com/solutions&quot;&gt;solution&lt;/a&gt;. Don’t accept something you think is bad. When something &lt;em&gt;appears bad&lt;/em&gt; to you, either it can be &lt;em&gt;improved&lt;/em&gt; or you can learn why it’s &lt;em&gt;actually good&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;TCS didn’t start with assumptions about parenting. It didn’t begin with an agenda like having or avoiding firm boundaries. TCS started with the philosophy of &lt;a href=&quot;http://fallibleliving.com/thinkers/popper&quot;&gt;Karl Popper&lt;/a&gt;, &lt;em&gt;Critical Rationalism&lt;/em&gt; (&lt;strong&gt;CR&lt;/strong&gt;), which explains how learning works and how to think rationally.&lt;/p&gt;
&lt;p&gt;TCS had a simple insight. Parenting is mostly about learning. Kids are born ignorant and need to learn a million things. So let’s take a rational philosophy, which explains how learning works, and &lt;a href=&quot;http://fallibleideas.com/parenting-and-reason&quot;&gt;use reason&lt;/a&gt; to figure out how parents can best help their children learn.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CR&lt;/strong&gt; has stood up to all arguments from philosophers so far, and explains errors in every other philosophy that it competes with. It’s preeminent. It stands alone, on a pinnacle. So it’s worth taking seriously.&lt;/p&gt;
&lt;h2&gt;What does &lt;em&gt;Critical Rationalism&lt;/em&gt; tell us? Highlights:&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Learning works by &lt;em&gt;brainstorming&lt;/em&gt; ideas, looking for &lt;em&gt;mistakes&lt;/em&gt;, and making &lt;em&gt;improvements&lt;/em&gt;. (Popper calls this &lt;a href=&quot;https://www.amazon.com/Conjectures-Refutations-Scientific-Knowledge-Routledge/dp/0415285941/?tag=curi04-20&quot;&gt;Conjectures and Refutations&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;This learning process is &lt;a href=&quot;http://fallibleideas.com/evolution-and-knowledge&quot;&gt;evolution&lt;/a&gt;. &lt;a href=&quot;https://www.amazon.com/Objective-Knowledge-Evolutionary-Karl-Popper/dp/0198750242/?tag=curi04-20&quot;&gt;Literally&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Learning is &lt;a href=&quot;https://www.amazon.com/Life-Problem-Solving-Karl-Popper/dp/0415249929/?tag=curi04-20&quot;&gt;problem solving&lt;/a&gt; – figuring out ideas that improve something, help with something, or are useful.&lt;/li&gt;
&lt;li&gt;Everyone makes lots of &lt;a href=&quot;http://fallibleideas.com/fallibility&quot;&gt;mistakes&lt;/a&gt;, even when confident.&lt;/li&gt;
&lt;li&gt;You can’t think for someone else. People have to understand things for themselves.&lt;/li&gt;
&lt;li&gt;There is one &lt;a href=&quot;http://fallibleideas.com/objective-truth&quot;&gt;objective truth&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Life isn’t a tangle of &lt;a href=&quot;http://curi.us/1261-xx&quot;&gt;conflicts of interest&lt;/a&gt; making us fight.&lt;/li&gt;
&lt;li&gt;Judge an idea by whether it solves a problem, not by its source.&lt;/li&gt;
&lt;li&gt;Authority can’t settle &lt;a href=&quot;http://curi.us/1595-rationally-resolving-conflicts-of-ideas&quot;&gt;disagreements&lt;/a&gt;. You can listen to an expert if you want to, but don’t accept ideas you think are wrong.&lt;/li&gt;
&lt;li&gt;Be &lt;a href=&quot;https://www.amazon.com/Open-Society-Its-Enemies-ebook/dp/B00C791JIO/?tag=curi04-20&quot;&gt;tolerant&lt;/a&gt; and patient about &lt;a href=&quot;https://www.amazon.com/Myth-Framework-Defence-Science-Rationality/dp/0415135559/?tag=curi04-20&quot;&gt;different perspectives&lt;/a&gt;, different cultures, and ideas you disagree with.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Now watch how the ideas of &lt;strong&gt;CR&lt;/strong&gt; are used as we discuss TCS. They come up throughout.&lt;/p&gt;
&lt;h2&gt;Help Children Learn&lt;/h2&gt;
&lt;p&gt;Life is all about learning. And children especially need to learn because they aren’t born knowing anything.&lt;/p&gt;
&lt;p&gt;Better ideas let you make wiser decisions, accomplish goals, and solve problems. Learning is how you get great ideas. (&lt;strong&gt;CR&lt;/strong&gt; talks all about the value of ideas, how to use them, and how to get them. It’s really helpful!)&lt;/p&gt;
&lt;p&gt;We know from &lt;strong&gt;CR&lt;/strong&gt; that people have to think of their own ideas. You can tell someone an idea, but understanding it isn’t automatic. They still have to do their own thinking and figure it out for themselves.&lt;/p&gt;
&lt;p&gt;Parents should keep in mind that &lt;em&gt;children have an ongoing learning process&lt;/em&gt;, and parents should do all they can to &lt;em&gt;help with it&lt;/em&gt;. What does that look like?&lt;/p&gt;
&lt;p&gt;If your child challenges or questions you, that doesn’t mean he doesn’t believe you. Arguing isn’t disrespect either. Look at it in terms of learning. He’s sharing his thought process. There’s something he doesn’t understand yet. He needs more information to help him learn.&lt;/p&gt;
&lt;p&gt;When explaining, try not to repeat yourself. If your child isn’t getting something, he needs some different information to understand. His learning process is stuck. Explain it in a different way or simplify.&lt;/p&gt;
&lt;p&gt;When you share an idea, your child will try to understand it. This isn’t automatic. He has to go through a learning process. And you know a lot of relevant things he doesn’t. You didn’t tell him &lt;em&gt;everything&lt;/em&gt; you know (which would take forever). Try to understand what he’s missing and share additional information.&lt;/p&gt;
&lt;p&gt;Kids ask for lots of things. Parents sometimes try to decide between saying “yes” or “no”. They can give in – and then get frustrated their kid is demanding too much stuff. Or they can put their foot down – and upset their kid. It works better to try to understand what your kid is thinking. Ask questions. He might not even want what he asked for, or have no idea what it costs (in money or in time and effort). Kids often &lt;a href=&quot;http://fallibleideas.com/communication-is-hard&quot;&gt;communicate&lt;/a&gt; badly. If you figure out what your kid actually wants then you can know getting it for him will be really worthwhile, or you can suggest a better idea than what he asked for, or you can give him useful advice about why it’s not the best thing to get. (E.g. he asked for something that won’t actually do what he has in mind, or there’s a cheaper or easier way to get what he wants). &lt;em&gt;A request can be a learning experience&lt;/em&gt; as you work with your kid to figure out the best way to handle it (and often that means teaching him something he didn’t realize).&lt;/p&gt;
&lt;p&gt;If your child wants to do something, it’s probably part of his learning process. Children learn when they play with toys, use the computer, make noise, and &lt;em&gt;everything&lt;/em&gt;. Ask him about why he’s interested in it, talk about what he’s learning, and figure out how you can help.&lt;/p&gt;
&lt;p&gt;Learning isn’t just for school subjects (and schools aren’t very good at helping people learn – but that’s another story). Getting better at a computer game is &lt;em&gt;learning&lt;/em&gt; ideas about it. Figuring out a new way to play with dolls is &lt;em&gt;learning&lt;/em&gt;. Getting better at sports involves &lt;em&gt;learning&lt;/em&gt; new strategies and new ways to practice. Learning is everywhere in life, and learning about anything is valuable.&lt;/p&gt;
&lt;p&gt;Even learning about an &lt;em&gt;unimportant&lt;/em&gt; activity has benefits. If your kid is doing the activity, he’ll have a better time if he’s good at it. Any learning is good practice for how to learn. Learning one idea often leads to more ideas, and some will be useful for other activities. (&lt;strong&gt;CR&lt;/strong&gt; explains how and why ideas connect together.)&lt;/p&gt;
&lt;p&gt;If you understand the details of how learning happens, you can be more helpful to your child’s learning. Fortunately, we know those details from &lt;strong&gt;CR&lt;/strong&gt;. I’ll talk about them in the next section.&lt;/p&gt;
&lt;h2&gt;Ignorance Isn’t Stupidity&lt;/h2&gt;
&lt;p&gt;Children are born ignorant. They don’t know English. They don’t know about football, sex or beer. They can’t do addition or walk. They don’t understand how to be polite or get along with people. They don’t even know what clothes are.&lt;/p&gt;
&lt;p&gt;Children are also born capable of thinking. They learn fast. They learn so much in their first few years! They’re actually really &lt;em&gt;good at learning&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Children learn by a process of trial and error. Little kids don’t get everything right at first. They make lots of mistakes in their head that you never see. And plenty more mistakes you do see. They pronounce words wrong. They fall over. They spill things. Later on they read words incorrectly, add things up wrong, and mistakenly believe you that Santa Claus is real.&lt;/p&gt;
&lt;p&gt;Trial and error is the process of &lt;strong&gt;CR&lt;/strong&gt;. Everyone does it. Brainstorm ideas, try them out, look for errors, make some improvements, and do it again. Some of the trials are done in your head (you imagine how an idea would work out) and some are done in the real world. Kids do both (you just don’t see all the ideas they brainstorm and reject mentally). We know from &lt;strong&gt;CR&lt;/strong&gt; that trial and error is the &lt;em&gt;only&lt;/em&gt; way learning is possible, so kids must be doing it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can communicate with children&lt;/em&gt; about their learning. Children are ignorant but that doesn’t mean they’re stupid. They are capable of brainstorming and seeing some ideas don’t work. And you can share information they didn’t have. Don’t just humor or lecture children. Try to understand their thought process and help them with it.&lt;/p&gt;
&lt;p&gt;Don’t think of your child as stupid. A good explanation for a child would seem reasonable to your adult friend, not condescending or disrespectful. Think about how an adult would react before you say something to your child; if it’d be offensive, don’t say it.&lt;/p&gt;
&lt;p&gt;People think kids are &lt;em&gt;so gullible&lt;/em&gt; they have to keep away “influences” like TV and the wrong friends. But they also think kids are &lt;em&gt;so stubborn&lt;/em&gt; they won’t listen to their parents. That doesn’t make much sense. Which one is it?&lt;/p&gt;
&lt;p&gt;Kids aren’t especially gullible &lt;em&gt;or&lt;/em&gt; stubborn. They accept what makes sense to them (and make plenty of mistakes). Some parents treat kids like they’re stupid instead of helping them understand things. That’s a reason children can prefer TV and friends, which are usually respectful of children’s intelligence and opinions. (Also, if your kid is really stubborn about one point, sometimes it’s because you’re actually wrong, and that’s why your point doesn’t make sense to him. Parents make mistakes too.)&lt;/p&gt;
&lt;p&gt;Think of your child like a visiting foreigner. He has a different perspective. He doesn’t act like the friends you usually hang out with. He’s ignorant of your customs. But he’s not stupid. So be patient, be tolerant, and help him learn about your country. (You’ll also learn some things from him.)&lt;/p&gt;
&lt;h2&gt;Children Aren’t Fragile&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Some parents view their children as weak, helpless and fragile.&lt;/em&gt; Every time their child gets a scratch or faces any conflict, they think it’s a disaster. They expect their child to be scared of rollercoasters, cry when he falls, and find challenges upsetting. They offer &lt;a href=&quot;http://fallibleideas.com/emotions&quot;&gt;emotional&lt;/a&gt; comfort to help him cope, and try to avoid telling him he’s wrong.&lt;/p&gt;
&lt;p&gt;Children usually learn to look at life the way their parents do. They pick up on their parents’ attitudes and perspectives. Worried parents can accidentally teach their children to be scared of life.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CR&lt;/strong&gt; explains that problems are part of life. Problems aren’t a bad thing to fear. They’re natural and good. Remember to see problems as areas where improvement is possible.&lt;/p&gt;
&lt;p&gt;Finding and solving problems is how people learn and grow. Children are capable learners. They can try things and succeed, step by step, and become confident about their ability to deal with the world. Sometimes they make mistakes and fail, too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CR&lt;/strong&gt; explains that learning involves improving on one’s mistakes. Don’t pretend a child’s bad idea is good. Don’t humor him. Communicating about mistakes and problems is a &lt;em&gt;necessary&lt;/em&gt; part of learning improved ideas. Sharing criticism is really useful. Otherwise children would have to figure out all their mistakes themselves. They can learn faster if their parents help them understand some mistakes.&lt;/p&gt;
&lt;p&gt;As we know from &lt;strong&gt;CR&lt;/strong&gt;, learning involves &lt;em&gt;brainstorming&lt;/em&gt;, and &lt;em&gt;finding&lt;/em&gt; and &lt;em&gt;improving mistakes&lt;/em&gt;. Suggest ideas to your child to help with brainstorming. Help him find mistakes by explaining some you find. Then help him solve the problem and improve – no harm done! Finding out about mistakes helps him get a better life by fixing the problems those mistakes were causing.&lt;/p&gt;
&lt;p&gt;Children aren’t born too fragile to go through the learning process. It doesn’t have to hurt or be scary. Having a positive attitude will help it go more smoothly. (Being scared of criticism is actually something people usually learn later because people can be really mean about mistakes.)&lt;/p&gt;
&lt;p&gt;Tell your child how learning works (in simple terms, not how a &lt;strong&gt;CR&lt;/strong&gt; book would say it). Tell him that disagreements and failures help find problems. Tell him learning works by having a bunch of ideas, trying some out, finding some don’t work, and coming up with better ideas. Don’t tell him learning feels bad – it doesn’t have to.&lt;/p&gt;
&lt;p&gt;Show him that &lt;a href=&quot;http://curi.us/1583-conflict-criticism-learning-reason&quot;&gt;conflicts can be resolved&lt;/a&gt; and &lt;a href=&quot;http://curi.us/1587-all-problems-are-soluble&quot;&gt;solving problems&lt;/a&gt; is not just possible but wonderful. Live it yourself so your child has a good example. (If that’s hard for you, learning more about &lt;strong&gt;CR&lt;/strong&gt; and TCS will help.)&lt;/p&gt;
&lt;h2&gt;Obedience Is Bad&lt;/h2&gt;
&lt;p&gt;Some parents make a bunch of rules and want their kid to “listen” to whatever they say. They try to be strict, enforce “discipline”, punish their child’s mistakes, and set clear “boundaries”. This is about &lt;em&gt;obedience&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Demanding obedience prevents children from learning&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Children need to ask questions to learn. Most questions aren’t meant to challenge your authority or argue you’re wrong. Children usually ask questions because they don’t understand, not to “backtalk”. They need more information. They’re confused and looking for help. They want to know your perspective.&lt;/p&gt;
&lt;p&gt;Instead of blaming your kid for “not listening”, recognize that children get confused frequently and don’t know what you want. And sometimes they disagree. Ask what he’s thinking. If he has a reason he disagrees, help him find some mistakes in it and understand the issue better. (Though sometimes he will be right.)&lt;/p&gt;
&lt;p&gt;If your kid asks a question you don’t know the answer to, there’s no shame in that. Show him how to handle the situation. Google it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punishments teach children to fear making mistakes&lt;/em&gt;. But as we know from &lt;strong&gt;CR&lt;/strong&gt;, making mistakes is part of learning. Everyone makes mistakes and improving on them is how we make progress. So punishments are harmful to learning. The lesson punishments teach is to try to please the parent to avoid more punishments, &lt;em&gt;not&lt;/em&gt; how to learn good ideas. Punishments also teach kids to hide mistakes.&lt;/p&gt;
&lt;p&gt;When you tell a child reasons, the focus should be to &lt;em&gt;help him learn&lt;/em&gt;, not to try to get him to do what you said. Obedience is just temporary, but learning has lasting value. Kids need to learn ideas, not learn their place.&lt;/p&gt;
&lt;h2&gt;Rules&lt;/h2&gt;
&lt;p&gt;Parents make rules for two main reasons:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Some parents think rules are good and necessary.&lt;/li&gt;
&lt;li&gt;Some parents are struggling and trying to cope.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Rules make children do stuff even though they don’t &lt;em&gt;understand&lt;/em&gt; it or don’t agree with it. Rules encourage &lt;em&gt;obedience&lt;/em&gt; instead of &lt;em&gt;trial and error learning&lt;/em&gt;. Rules don’t help learning or explain ideas, they get in the way. Rules communicate that understanding and thinking aren’t important in life: “just do as you’re told”.&lt;/p&gt;
&lt;p&gt;Some parents are having a hard time. They sacrifice for their children and give so much. They want some rules to keep things under control. But rules can’t create good family relationships. Cooperative learning and problem solving is the only win/win approach.&lt;/p&gt;
&lt;p&gt;And &lt;em&gt;don’t sacrifice yourself&lt;/em&gt;. Self-sacrifice is never the answer. Problem solving needs to go both ways. Parents have problems too, not just children. We know from &lt;strong&gt;CR&lt;/strong&gt; that all problems can be solved, so no one has to lose (there are &lt;a href=&quot;http://curi.us/1587-all-problems-are-soluble&quot;&gt;details&lt;/a&gt; you can &lt;a href=&quot;https://www.amazon.com/dp/0670022756?tag=curi04-20&quot;&gt;learn&lt;/a&gt;). In life, &lt;a href=&quot;http://fallibleideas.com/pursuit-of-happiness&quot;&gt;happiness is possible&lt;/a&gt;. It may be tough but it is &lt;em&gt;possible&lt;/em&gt; for things to get better if you learn some new ideas. You can work on that one step at a time.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Parenting generally goes pretty smoothly when you and your child agree. You do what you both agree on. It’s what you do when you &lt;em&gt;disagree&lt;/em&gt; that determines what kind of parent you are. Do you try to hide disagreements because you believe your child is fragile? Do you put your foot down? Or do you try to cooperate with your child to figure out the truth of the matter, solve problems, and understand more about the world?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fallibleideas.com/parenting-and-fallibility&quot;&gt;Parents aren’t always right&lt;/a&gt;. Kids are complicated and you’re not going to correctly understand everything they say, do or want. Lots of family conflicts are due to mutual misunderstanding. The best way to handle that is to focus on learning together. And remember, if your child magically listened to everything you said, then there’d be no progress in the world. Children have to go their own way sometimes, and have some new ideas, for them to have a &lt;em&gt;better&lt;/em&gt; life than you instead of just the same life.&lt;/p&gt;
&lt;p&gt;Children’t aren’t always right. Not even close! They need to find out about mistakes they make so they can learn better. Children aren’t too fragile to be told about mistakes. They aren’t too stupid to receive help understanding what they got wrong. And obedience won’t help them understand more.&lt;/p&gt;
&lt;p&gt;Learning is wonderful. Disagreements and mistakes don’t have to hurt. Present the learning process positively instead of teaching children to be fragile. And help your child understand things himself instead of teaching him to be obedient. Children have a lot to learn, but there’s nothing stopping them from learning it – besides bad ideas about learning.&lt;/p&gt;
&lt;p&gt;Using &lt;em&gt;Critical Rationalism&lt;/em&gt;, the leading philosophy of learning, we know that &lt;em&gt;all&lt;/em&gt; learning works by the same process. So you can use lots of these ideas when dealing with your friends, coworkers, or anyone. Understanding learning better will help your parenting and the rest of your life too.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fallibleideas.com/parenting-problems&quot;&gt;Parenting is hard&lt;/a&gt;. Thinking about it carefully, using reason, helps a lot. If you want to do a &lt;em&gt;great&lt;/em&gt; job, parenting is worth studying.&lt;/p&gt;
&lt;h2&gt;Interested In Taking Children Seriously?&lt;/h2&gt;
&lt;p&gt;Sign up for my &lt;a href=&quot;http://fallibleideas.com/newsletter&quot;&gt;email newsletter&lt;/a&gt; to get updates, news and resources about TCS.&lt;/p&gt;
&lt;p&gt;Some of these ideas will sound weird at first (but that doesn’t mean they’re false). However, &lt;a href=&quot;http://fallibleideas.com/parenting-and-tradition&quot;&gt;TCS is more traditional than it sounds&lt;/a&gt;. It actually fits with a lot of ideas you already believe. &lt;a href=&quot;http://fallibleideas.com/parenting-and-tradition&quot;&gt;Click here&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;Ask some questions at the &lt;a href=&quot;http://fallibleideas.com/discussion-info&quot;&gt;discussion group&lt;/a&gt; or start &lt;a href=&quot;http://web.archive.org/web/20030603214744/http://www.tcs.ac/Articles/index.html&quot;&gt;reading&lt;/a&gt;. There’s &lt;a href=&quot;https://groups.google.com/forum/#!forum/taking-children-seriously&quot;&gt;lots&lt;/a&gt; and &lt;a href=&quot;http://curi.us/archives/list_category/61&quot;&gt;lots&lt;/a&gt; of &lt;a href=&quot;http://curi.us/1540-taking-children-seriously&quot;&gt;writing&lt;/a&gt; available about &lt;a href=&quot;http://www.takingchildrenseriously.com&quot;&gt;TCS&lt;/a&gt; and by &lt;a href=&quot;https://www.amazon.com/s/?url=field-keywords=karl+popper&amp;amp;tag=curi04-20&quot;&gt;Popper&lt;/a&gt;. And there were a bunch of links in this essay that you could go back and click on after you &lt;a href=&quot;http://fallibleideas.com/newsletter&quot;&gt;sign up for the newsletter&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Acknowledgements:&lt;/strong&gt; TCS philosophy was originally created, around 1994, primarily by David Deutsch, with help from Sarah Lawrence and Kolya Wolf.&lt;/p&gt;
</description>
<pubDate>Sun, 03 Dec 2017 08:50:33 +0000</pubDate>
<dc:creator>monort</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://fallibleideas.com/taking-children-seriously</dc:identifier>
</item>
</channel>
</rss>