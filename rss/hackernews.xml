<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Migrating to Python 3 with pleasure</title>
<link>http://github.com/arogozhnikov/python3_with_pleasure</link>
<guid isPermaLink="true" >http://github.com/arogozhnikov/python3_with_pleasure</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;h2&gt;A short guide on features of Python 3 for data scientists&lt;/h2&gt;
&lt;p&gt;Python became a mainstream language for machine learning and other scientific fields that heavily operate with data; it boasts various deep learning frameworks and well-established set of tools for data processing and visualization.&lt;/p&gt;
&lt;p&gt;However, Python ecosystem co-exists in Python 2 and Python 3, and Python 2 is still used among data scientists. By the end of 2019 the scientific stack will &lt;a href=&quot;http://www.python3statement.org&quot; rel=&quot;nofollow&quot;&gt;stop supporting Python2&lt;/a&gt;. As for numpy, after 2018 any new feature releases will only support &lt;a href=&quot;https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst&quot;&gt;Python3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To make the transition less frustrating, I've collected a bunch of Python 3 features that you may find useful.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/9936046c7d691a3f6d74c2873e483332b7a0b20e/68747470733a2f2f75706c6f6164732e746f7074616c2e696f2f626c6f672f696d6167652f39323231362f746f7074616c2d626c6f672d696d6167652d313435373631383635393437322d62653266333830666533616164343133333334323765636435613165633563352e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9936046c7d691a3f6d74c2873e483332b7a0b20e/68747470733a2f2f75706c6f6164732e746f7074616c2e696f2f626c6f672f696d6167652f39323231362f746f7074616c2d626c6f672d696d6167652d313435373631383635393437322d62653266333830666533616164343133333334323765636435613165633563352e6a7067&quot; width=&quot;400&quot; data-canonical-src=&quot;https://uploads.toptal.io/blog/image/92216/toptal-blog-image-1457618659472-be2f380fe3aad41333427ecd5a1ec5c5.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image from &lt;a href=&quot;https://www.toptal.com/python/python-3-is-it-worth-the-switch&quot; rel=&quot;nofollow&quot;&gt;Dario Bertini post (toptal)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Better paths handling with &lt;code&gt;pathlib&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pathlib&lt;/code&gt; is a default module in python3, that helps you to avoid tons of &lt;code&gt;os.path.join&lt;/code&gt;s:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Path

dataset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;wiki_images&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
datasets_root &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Path(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/to/datasets/&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)

train_path &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; datasets_root &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; dataset &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;train&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
test_path &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; datasets_root &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; dataset &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;test&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; image_path &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; train_path.iterdir():
    &lt;span class=&quot;pl-k&quot;&gt;with&lt;/span&gt; image_path.open() &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; f: &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; note, open is a method of Path object&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; do something with an image&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Previously it was always tempting to use string concatenation (concise, but obviously bad), now with &lt;code&gt;pathlib&lt;/code&gt; the code is safe, concise, and readable.&lt;/p&gt;
&lt;p&gt;Also &lt;code&gt;pathlib.Path&lt;/code&gt; has a bunch of methods and properties, that every python novice previously had to google:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
p.exists()
p.is_dir()
p.parts
p.with_name(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sibling.png&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; only change the name, but keep the folder&lt;/span&gt;
p.with_suffix(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; only change the extension, but keep the folder and the name&lt;/span&gt;
p.chmod(mode)
p.rmdir()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pathlib&lt;/code&gt; should save you lots of time, please see &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html&quot; rel=&quot;nofollow&quot;&gt;docs&lt;/a&gt; and &lt;a href=&quot;https://pymotw.com/3/pathlib/&quot; rel=&quot;nofollow&quot;&gt;reference&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2&gt;Type hinting is now part of the language&lt;/h2&gt;
&lt;p&gt;Example of type hinting in pycharm:&lt;br/&gt;&lt;a href=&quot;https://github.com/arogozhnikov/python3_with_pleasure/blob/master/images/pycharm-type-hinting.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/arogozhnikov/python3_with_pleasure/raw/master/images/pycharm-type-hinting.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python is not just a language for small scripts anymore, data pipelines these days include numerous steps each involving different frameworks (and sometimes very different logic).&lt;/p&gt;
&lt;p&gt;Type hinting was introduced to help with growing complexity of programs, so machines could help with code verification. Previously different modules used custom ways to point &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/type-hinting-in-pycharm.html#legacy&quot; rel=&quot;nofollow&quot;&gt;types in doctrings&lt;/a&gt; (Hint: pycharm can convert old docstrings to fresh typehinting).&lt;/p&gt;
&lt;p&gt;As a simple example, the following code may work with different types of data (that's what we like about python data stack).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;repeat_each_entry&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;):
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&quot;&quot;&lt;/span&gt; Each entry in the data is doubled&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;blah blah nobody reads the documentation till the end&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    &lt;span class=&quot;pl-pds&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;
    index &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; numpy.repeat(numpy.arange(&lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(data)), &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;)
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; data[index]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code e.g. works for &lt;code&gt;numpy.array&lt;/code&gt; (incl. multidimensional ones), &lt;code&gt;astropy.Table&lt;/code&gt; and &lt;code&gt;astropy.Column&lt;/code&gt;, &lt;code&gt;bcolz&lt;/code&gt;, &lt;code&gt;cupy&lt;/code&gt;, &lt;code&gt;mxnet.ndarray&lt;/code&gt; and others.&lt;/p&gt;
&lt;p&gt;This code will work for &lt;code&gt;pandas.Series&lt;/code&gt;, but in the wrong way:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
repeat_each_entry(pandas.Series(&lt;span class=&quot;pl-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;pl-v&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;])) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; returns Series with Nones inside&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was two lines of code. Imagine how unpredictable behavior of a complex system, because just one function may misbehave. Stating explicitly which types a method expects is very helpful in large systems, this will warn you if a function was passed unexpected arguments.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;repeat_each_entry&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;: Union[numpy.ndarray, bcolz.carray]):
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a significant codebase, hinting tools like &lt;a href=&quot;http://mypy.readthedocs.io&quot; rel=&quot;nofollow&quot;&gt;MyPy&lt;/a&gt; are likely to become part of your continuous integration pipeline. A webinar &lt;a href=&quot;https://www.youtube.com/watch?v=JqBCFfiE11g&quot; rel=&quot;nofollow&quot;&gt;&quot;Putting Type Hints to Work&quot;&lt;/a&gt; by Daniel Pyrathon is good for a brief introduction.&lt;/p&gt;
&lt;p&gt;Sidenote: unfortunately, hinting is not yet powerful enough to provide fine-grained typing for ndarrays/tensors, but &lt;a href=&quot;https://github.com/numpy/numpy/issues/7370&quot;&gt;maybe we'll have it once&lt;/a&gt;, and this will be a great feature for DS.&lt;/p&gt;
&lt;h2&gt;Type hinting → type checking in runtime&lt;/h2&gt;
&lt;p&gt;By default, function annotations do not influence how your code is working, but merely help you to point code intentions.&lt;/p&gt;
&lt;p&gt;However, you can enforce type checking in runtime with tools like ... &lt;a href=&quot;https://github.com/RussBaz/enforce&quot;&gt;enforce&lt;/a&gt;, this can help you in debugging (there are many cases when type hinting is not working).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;@enforce.runtime_validation&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;text&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;str&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;:
    &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(text)

foo(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Hi&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; ok&lt;/span&gt;
foo(&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;)    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; fails&lt;/span&gt;


&lt;span class=&quot;pl-en&quot;&gt;@enforce.runtime_validation&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;any2&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;: List[&lt;span class=&quot;pl-c1&quot;&gt;bool&lt;/span&gt;]) -&amp;gt; &lt;span class=&quot;pl-c1&quot;&gt;bool&lt;/span&gt;:
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt;(x)

&lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; ([&lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; True&lt;/span&gt;
any2([&lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; True&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; ([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;False&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; True&lt;/span&gt;
any2([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;False&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; fails&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; ([&lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; False&lt;/span&gt;
any2([&lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; fails&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Other usages of function annotations&lt;/h2&gt;
&lt;p&gt;As mentioned before, annotations do not influence code execution, but rather provide some meta-information, and you can use it as you wish.&lt;/p&gt;
&lt;p&gt;For instance, measurement units are a common pain in scientific areas, &lt;code&gt;astropy&lt;/code&gt; package &lt;a href=&quot;http://docs.astropy.org/en/stable/units/quantity.html#functions-that-accept-quantities&quot; rel=&quot;nofollow&quot;&gt;provides a simple decorator&lt;/a&gt; to control units of input quantities and convert output to required units&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; astropy &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; units &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; u
&lt;span class=&quot;pl-en&quot;&gt;@u.quantity_input&lt;/span&gt;()
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;frequency&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;speed&lt;/span&gt;: u.meter &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; u.s, &lt;span class=&quot;pl-smi&quot;&gt;wavelength&lt;/span&gt;: u.m) -&amp;gt; u.terahertz:
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; speed &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; wavelength

frequency(&lt;span class=&quot;pl-v&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;300_000&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; u.km &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; u.s, &lt;span class=&quot;pl-v&quot;&gt;wavelength&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;555&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; u.nm)
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; output: 540.5405405405404 THz, frequency of green visible light&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you're processing tabular scientific data in python (not necessarily astronomical), you should give &lt;code&gt;astropy&lt;/code&gt; a shot.&lt;/p&gt;
&lt;p&gt;You can also define your application-specific decorators to perform control / conversion of inputs and output in the same manner.&lt;/p&gt;
&lt;h2&gt;Matrix multiplication with @&lt;/h2&gt;
&lt;p&gt;Let's implement one of the simplest ML models — a linear regression with l2 regularization (a.k.a. ridge regression):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; l2-regularized linear regression: || AX - b ||^2 + alpha * ||x||^2 -&amp;gt; min&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
X &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; np.linalg.inv(np.dot(A.T, A) &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; alpha &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; np.eye(A.shape[&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;])).dot(A.T.dot(b))
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
X &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; np.linalg.inv(A.T &lt;span class=&quot;pl-k&quot;&gt;@&lt;/span&gt; A &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; alpha &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; np.eye(A.shape[&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;])) &lt;span class=&quot;pl-k&quot;&gt;@&lt;/span&gt; (A.T &lt;span class=&quot;pl-k&quot;&gt;@&lt;/span&gt; b)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code with &lt;code&gt;@&lt;/code&gt; becomes more readable and more translatable between deep learning frameworks: same code &lt;code&gt;X @ W + b[None, :]&lt;/code&gt; for a single layer of perceptron works in &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;cupy&lt;/code&gt;, &lt;code&gt;pytorch&lt;/code&gt;, &lt;code&gt;tensorflow&lt;/code&gt; (and other frameworks that operate with tensors).&lt;/p&gt;
&lt;h2&gt;Globbing with &lt;code&gt;**&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Recursive folder globbing is not easy in Python 2, even though the &lt;a href=&quot;https://github.com/miracle2k/python-glob2&quot;&gt;glob2&lt;/a&gt; custom module exists that overcomes this. A recursive flag is supported since Python 3.5:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; glob

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
found_images &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; \
    glob.glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) \
  &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; glob.glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/*/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) \
  &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; glob.glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/*/*/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) \
  &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; glob.glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/*/*/*/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) \
  &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; glob.glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/*/*/*/*/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
found_images &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; glob.glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/**/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;True&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A better option is to use &lt;code&gt;pathlib&lt;/code&gt; in python3 (minus one import!):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
found_images &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; pathlib.Path(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/path/&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).glob(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;**/*.jpg&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Print is a function now&lt;/h2&gt;
&lt;p&gt;Yes, code now has these annoying parentheses, but there are some advantages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;simple syntax for using file descriptor:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;sys.stderr, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;critical error&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;      &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;critical error&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;sys.stderr)  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printing tab-aligned tables without &lt;code&gt;str.join&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;array, &lt;span class=&quot;pl-v&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-cce&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(batch, epoch, loss, accuracy, time, &lt;span class=&quot;pl-v&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-cce&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hacky suppressing / redirection of printing output:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
_print &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; store the original print function&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;args&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;kargs&lt;/span&gt;):
    &lt;span class=&quot;pl-k&quot;&gt;pass&lt;/span&gt;  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; do something useful, e.g. store output to some file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In jupyter it is desirable to log each output to a separate file (to track what's happening after you got disconnected), so you can override &lt;code&gt;print&lt;/code&gt; now.&lt;/p&gt;
&lt;p&gt;Below you can see a context manager that temporarily overrides behavior of print:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;@contextlib.contextmanager&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;replace_print&lt;/span&gt;():
    &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; builtins
    _print &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; saving old print function&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; or use some other function here&lt;/span&gt;
    builtins.print &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;args&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;kwargs&lt;/span&gt;: _print(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;new printing&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;args, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;kwargs)
    &lt;span class=&quot;pl-k&quot;&gt;yield&lt;/span&gt;
    builtins.print &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; _print

&lt;span class=&quot;pl-k&quot;&gt;with&lt;/span&gt; replace_print():
    &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;code here will invoke other &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; function&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is &lt;em&gt;not&lt;/em&gt; a recommended approach, but a small dirty hack that is now possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;print&lt;/code&gt; can participate in list comprehensions and other language constructs&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; process(x) &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; is_valid(x) &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;invalid item: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, x)
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Underscores in Numeric Literal (Thousands Seperator)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0515/&quot; title=&quot;PEP-515&quot; rel=&quot;nofollow&quot;&gt;PEP-515&lt;/a&gt; introduced underscores in Numeric Literals. In Python3, underscores can be used to group digits visually in integral, floating-point, and complex number literals.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; grouping decimal numbers by thousands&lt;/span&gt;
one_million &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1_000_000&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; grouping hexadecimal addresses by words&lt;/span&gt;
addr &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;0x&lt;/span&gt;CAFE_F00D&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; grouping bits into nibbles in a binary literal&lt;/span&gt;
flags &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;0b&lt;/span&gt;_0011_1111_0100_1110&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; same, for string conversions&lt;/span&gt;
flags &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;0b_1111_0000&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;f-strings for simple and reliable formatting&lt;/h2&gt;
&lt;p&gt;The default formatting system provides a flexibility that is not required in data experiments. The resulting code is either too verbose or too fragile towards any changes.&lt;/p&gt;
&lt;p&gt;Quite typically data scientists outputs some logging information iteratively in a fixed format. It is common to have a code like:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{batch&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;}&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;{epoch&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;}&lt;/span&gt; / &lt;span class=&quot;pl-c1&quot;&gt;{total_epochs&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;}&lt;/span&gt;  accuracy: &lt;span class=&quot;pl-c1&quot;&gt;{acc_mean&lt;span class=&quot;pl-k&quot;&gt;:0.4f&lt;/span&gt;}&lt;/span&gt;±&lt;span class=&quot;pl-c1&quot;&gt;{acc_std&lt;span class=&quot;pl-k&quot;&gt;:0.4f&lt;/span&gt;}&lt;/span&gt; time: &lt;span class=&quot;pl-c1&quot;&gt;{avg_time&lt;span class=&quot;pl-k&quot;&gt;:3.2f&lt;/span&gt;}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;.format(
    &lt;span class=&quot;pl-v&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;batch, &lt;span class=&quot;pl-v&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;epoch, &lt;span class=&quot;pl-v&quot;&gt;total_epochs&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;total_epochs,
    &lt;span class=&quot;pl-v&quot;&gt;acc_mean&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;numpy.mean(accuracies), &lt;span class=&quot;pl-v&quot;&gt;acc_std&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;numpy.std(accuracies),
    &lt;span class=&quot;pl-v&quot;&gt;avg_time&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;time &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(data_batch)
))

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2 (too error-prone during fast modifications, please avoid):&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;}&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;{&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;}&lt;/span&gt; / &lt;span class=&quot;pl-c1&quot;&gt;{&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;}&lt;/span&gt;  accuracy: &lt;span class=&quot;pl-c1&quot;&gt;{&lt;span class=&quot;pl-k&quot;&gt;:0.4f&lt;/span&gt;}&lt;/span&gt;±&lt;span class=&quot;pl-c1&quot;&gt;{&lt;span class=&quot;pl-k&quot;&gt;:0.4f&lt;/span&gt;}&lt;/span&gt; time: &lt;span class=&quot;pl-c1&quot;&gt;{&lt;span class=&quot;pl-k&quot;&gt;:3.2f&lt;/span&gt;}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;.format(
    batch, epoch, total_epochs, numpy.mean(accuracies), numpy.std(accuracies),
    time &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(data_batch)
))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;120  12 / 300  accuracy: 0.8180±0.4649 time: 56.60
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;f-strings&lt;/strong&gt; aka formatted string literals were introduced in Python 3.6:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3.6+&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;batch&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;epoch&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt; / &lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;total_epochs&lt;span class=&quot;pl-k&quot;&gt;:3&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;  accuracy: &lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;numpy.mean(accuracies)&lt;span class=&quot;pl-k&quot;&gt;:0.4f&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;±&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;numpy.std(accuracies)&lt;span class=&quot;pl-k&quot;&gt;:0.4f&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt; time: &lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;{&lt;/span&gt;time &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(data_batch)&lt;span class=&quot;pl-k&quot;&gt;:3.2f&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Explicit difference between 'true division' and 'integer division'&lt;/h2&gt;
&lt;p&gt;For data science this is definitely a handy change (but not for system programming, I believe)&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
data &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; pandas.read_csv(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;timing.csv&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
velocity &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; data[&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;distance&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt; data[&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;time&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Results in Python 2 depend on whether 'time' and 'distance' (e.g. measured in meters and seconds) are stored as integers. In Python 3, the result is correct in both cases, because the result of division is float.&lt;/p&gt;
&lt;p&gt;Another case is integer division, which is now an explicit operation:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
n_gifts &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; money &lt;span class=&quot;pl-k&quot;&gt;//&lt;/span&gt; gift_price  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; correct for int and float arguments&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, that this applies both to built-in types and to custom types provided by data packages (e.g. &lt;code&gt;numpy&lt;/code&gt; or &lt;code&gt;pandas&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;Strict ordering&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; All these comparisons are illegal in Python 3&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;3&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;
(&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; (&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;)
(&lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; [&lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;]

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; False in both Python 2 and Python 3&lt;/span&gt;
(&lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; [&lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;prevents from occasional sorting of instances of different types
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;sorted&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;1&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;])  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; invalid for Python 3, in Python 2 returns [2, 3, '1']&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;helps to spot some problems that arise when processing raw data&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sidenote: proper check for None is (in both Python versions)&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; a &lt;span class=&quot;pl-k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;:
  &lt;span class=&quot;pl-k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; a: &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; WRONG check for None&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Unicode for NLP&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
s &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;您好&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(s))
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(s[:&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Python 2: &lt;code&gt;6\n��&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Python 3: &lt;code&gt;2\n您好&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;x = u'со'
x += 'co' # ok
x += 'со' # fail
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Python 2 fails, Python 3 works as expected (because I've used russian letters in strings).&lt;/p&gt;
&lt;p&gt;In Python 3 &lt;code&gt;str&lt;/code&gt;s are unicode strings, and it is more convenient for NLP processing of non-english texts.&lt;/p&gt;
&lt;p&gt;There are other funny things, for instance:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2: True&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;         &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2: False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Counter
Counter(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Möbelstück&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;Python 2: &lt;code&gt;Counter({'\xc3': 2, 'b': 1, 'e': 1, 'c': 1, 'k': 1, 'M': 1, 'l': 1, 's': 1, 't': 1, '\xb6': 1, '\xbc': 1})&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Python 3: &lt;code&gt;Counter({'M': 1, 'ö': 1, 'b': 1, 'e': 1, 'l': 1, 's': 1, 't': 1, 'ü': 1, 'c': 1, 'k': 1})&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can handle all of this in Python 2 properly, but Python 3 is more friendly.&lt;/p&gt;
&lt;h2&gt;Preserving order of dictionaries and **kwargs&lt;/h2&gt;
&lt;p&gt;In CPython 3.6+ dicts behave like &lt;code&gt;OrderedDict&lt;/code&gt; by default (and &lt;a href=&quot;https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6&quot; rel=&quot;nofollow&quot;&gt;this is guaranteed in Python 3.7+&lt;/a&gt;). This preserves order during dict comprehensions (and other operations, e.g. during json serialization/deserialization)&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; json
x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; {&lt;span class=&quot;pl-c1&quot;&gt;str&lt;/span&gt;(i):i &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;)}
json.loads(json.dumps(x))
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
{&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;1&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;0&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;3&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;2&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;4&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;}
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
{&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;0&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;1&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;2&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;3&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;4&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Same applies to &lt;code&gt;**kwargs&lt;/code&gt; (in Python 3.6+), they're kept in the same order as they appear in parameters. Order is crucial when it comes to data pipelines, previously we had to write it in a cumbersome manner:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from torch import nn

# Python 2
model = nn.Sequential(OrderedDict([
          ('conv1', nn.Conv2d(1,20,5)),
          ('relu1', nn.ReLU()),
          ('conv2', nn.Conv2d(20,64,5)),
          ('relu2', nn.ReLU())
        ]))

# Python 3.6+, how it *can* be done, not supported right now in pytorch
model = nn.Sequential(
    conv1=nn.Conv2d(1,20,5),
    relu1=nn.ReLU(),
    conv2=nn.Conv2d(20,64,5),
    relu2=nn.ReLU())
)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Did you notice? Uniqueness of names is also checked automatically.&lt;/p&gt;
&lt;h2&gt;Iterable unpacking&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; handy when amount of additional stored info may vary between experiments, but the same code can be used in all cases&lt;/span&gt;
model_paramteres, optimizer_parameters, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;other_params &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; load(checkpoint_name)

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; picking two last values from a sequence&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;prev, next_to_last, last &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; values_history

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; This also works with any iterables, so if you have a function that yields e.g. qualities,&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; below is a simple way to take only last two values from a list&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;prev, next_to_last, last &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; iter_train(args)
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Default pickle engine provides better compression for arrays&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; cPickle &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; pickle
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; numpy
&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(pickle.dumps(numpy.random.normal(&lt;span class=&quot;pl-v&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[&lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;])))
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; result: 23691675&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; pickle
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; numpy
&lt;span class=&quot;pl-c1&quot;&gt;len&lt;/span&gt;(pickle.dumps(numpy.random.normal(&lt;span class=&quot;pl-v&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;[&lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;])))
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; result: 8000162&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Three times less space. And it is &lt;em&gt;much&lt;/em&gt; faster. Actually similar compression (but not speed) is achievable with &lt;code&gt;protocol=2&lt;/code&gt; parameter, but users typically ignore this option (or simply are not aware of it).&lt;/p&gt;
&lt;h2&gt;Safer comprehensions&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
labels &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;initial_value&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
predictions &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [model.predict(data) &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; data, labels &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; dataset]

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; labels are overwritten in Python 2&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; labels are not affected by comprehension in Python 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Super, simply super()&lt;/h2&gt;
&lt;p&gt;Python 2 &lt;code&gt;super(...)&lt;/code&gt; was a frequent source of mistakes in code.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MySubClass&lt;/span&gt;(&lt;span class=&quot;pl-e&quot;&gt;MySuperClass&lt;/span&gt;):
    &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;options&lt;/span&gt;):
        &lt;span class=&quot;pl-c1&quot;&gt;super&lt;/span&gt;(MySubClass, &lt;span class=&quot;pl-c1&quot;&gt;self&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;subclass&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;options)

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MySubClass&lt;/span&gt;(&lt;span class=&quot;pl-e&quot;&gt;MySuperClass&lt;/span&gt;):
    &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;options&lt;/span&gt;):
        &lt;span class=&quot;pl-c1&quot;&gt;super&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;subclass&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;options)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More on &lt;code&gt;super&lt;/code&gt; and method resolution order on &lt;a href=&quot;https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods&quot; rel=&quot;nofollow&quot;&gt;stackoverflow&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Better IDE suggestions with variable annotations&lt;/h2&gt;
&lt;p&gt;The most enjoyable thing about programming in languages like Java, C# and alike is that IDE can make very good suggestions, because type of each identifier is known before executing a program.&lt;/p&gt;
&lt;p&gt;In python this is hard to achieve, but annotations will help you&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;write your expectations in a clear form&lt;/li&gt;
&lt;li&gt;and get good suggestions from IDE&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/arogozhnikov/python3_with_pleasure/blob/master/images/variable_annotations.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/arogozhnikov/python3_with_pleasure/raw/master/images/variable_annotations.png&quot;/&gt;&lt;/a&gt;&lt;br/&gt;This is an example of PyCharm suggestions with variable annotations. This works even in situations when functions you use are not annotated (e.g. due to backward compatibility).&lt;/p&gt;
&lt;h2&gt;Multiple unpacking&lt;/h2&gt;
&lt;p&gt;Here is how you merge two dicts now:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;dict&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;)
y &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;dict&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;)
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3.5+&lt;/span&gt;
z &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; {&lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;x, &lt;span class=&quot;pl-k&quot;&gt;**&lt;/span&gt;y}
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; z = {'a': 1, 'b': 3, 'd': 4}, note that value for `b` is taken from the latter dict.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression&quot; rel=&quot;nofollow&quot;&gt;this thread at StackOverflow&lt;/a&gt; for a comparison with Python 2.&lt;/p&gt;
&lt;p&gt;The same approach also works for lists, tuples, and sets (&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; are any iterables):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
[&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;a, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;b, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;c] &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; list, concatenating&lt;/span&gt;
(&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;a, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;b, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;c) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; tuple, concatenating&lt;/span&gt;
{&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;a, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;b, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;c} &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; set, union&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Functions also &lt;a href=&quot;https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448&quot; rel=&quot;nofollow&quot;&gt;support this&lt;/a&gt; for &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Python 3.5+
do_something(**{**default_settings, **custom_settings})

# Also possible, this code also checks there is no intersection between keys of dictionaries
do_something(**first_args, **second_args)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Future-proof APIs with keyword-only arguments&lt;/h2&gt;
&lt;p&gt;Let's consider this snippet&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
model &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; sklearn.svm.SVC(&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;poly&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0.5&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviously, an author of this code didn't get the Python style of coding yet (most probably, just jumped from cpp or rust). Unfortunately, this is not just question of taste, because changing the order of arguments (adding/deleting) in &lt;code&gt;SVC&lt;/code&gt; will break this code. In particular, &lt;code&gt;sklearn&lt;/code&gt; does some reordering/renaming from time to time of numerous algorithm parameters to provide consistent API. Each such refactoring may drive to broken code.&lt;/p&gt;
&lt;p&gt;In Python 3, library authors may demand explicitly named parameters by using &lt;code&gt;*&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class SVC(BaseSVC):
    def __init__(self, *, C=1.0, kernel='rbf', degree=3, gamma='auto', coef0=0.0, ... )
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;users have to specify names of parameters &lt;code&gt;sklearn.svm.SVC(C=2, kernel='poly', degree=2, gamma=4, coef0=0.5)&lt;/code&gt; now&lt;/li&gt;
&lt;li&gt;this mechanism provides a great combination of reliability and flexibility of APIs&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Minor: constants in &lt;code&gt;math&lt;/code&gt; module&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3&lt;/span&gt;
math.inf &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; 'largest' number&lt;/span&gt;
math.nan &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; not a number&lt;/span&gt;

max_quality &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;math.inf  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; no more magic initial values!&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; model &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; trained_models:
    max_quality &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;max&lt;/span&gt;(max_quality, compute_quality(model, data))
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Minor: single integer type&lt;/h2&gt;
&lt;p&gt;Python 2 provides two basic integer types, which are &lt;code&gt;int&lt;/code&gt; (64-bit signed integer) and &lt;code&gt;long&lt;/code&gt; for long arithmetics (quite confusing after C++).&lt;/p&gt;
&lt;p&gt;Python 3 has a single type &lt;code&gt;int&lt;/code&gt;, which incorporates long arithmetics.&lt;/p&gt;
&lt;p&gt;Here is how you check that value is integer:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;isinstance(x, numbers.Integral) # Python 2, the canonical way
isinstance(x, (long, int))      # Python 2
isinstance(x, int)              # Python 3, easier to remember
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Other stuff&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Enum&lt;/code&gt;s are theoretically useful, but
&lt;ul&gt;&lt;li&gt;string-typing is already widely adopted in the python data stack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Enum&lt;/code&gt;s don't seem to interplay with numpy and categorical from pandas&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;coroutines also &lt;em&gt;sound&lt;/em&gt; very promising for data pipelining (see &lt;a href=&quot;http://www.dabeaz.com/coroutines/Coroutines.pdf&quot; rel=&quot;nofollow&quot;&gt;slides&lt;/a&gt; by David Beazley), but I don't see their adoption in the wild.&lt;/li&gt;
&lt;li&gt;Python 3 has &lt;a href=&quot;https://www.python.org/dev/peps/pep-0384/&quot; rel=&quot;nofollow&quot;&gt;stable ABI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3 supports unicode identifies (so &lt;code&gt;ω = Δφ / Δt&lt;/code&gt; is ok), but you'd &lt;a href=&quot;https://stackoverflow.com/a/29855176/498892&quot; rel=&quot;nofollow&quot;&gt;better use good old ASCII names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;some libraries e.g. &lt;a href=&quot;https://github.com/jupyterhub/jupyterhub&quot;&gt;jupyterhub&lt;/a&gt; (jupyter in cloud), django and fresh ipython only support Python 3, so features that sound useless for you are useful for libraries you'll probably want to use once.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Problems for code migration specific for data science (and how to resolve those)&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;support for nested arguments &lt;a href=&quot;https://www.python.org/dev/peps/pep-3113/&quot; rel=&quot;nofollow&quot;&gt;was dropped&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;map(lambda x, (y, z): x, z, dict.items())
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, it is still perfectly working with different comprehensions:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
{x:z &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; x, (y, z) &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; d.items()}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In general, comprehensions are also better 'translatable' between Python 2 and 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;.keys()&lt;/code&gt;, &lt;code&gt;.values()&lt;/code&gt;, &lt;code&gt;.items()&lt;/code&gt;, etc. return iterators, not lists. Main problems with iterators are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;no trivial slicing&lt;/li&gt;
&lt;li&gt;can't be iterated twice&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Almost all of the problems are resolved by converting result to list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;see &lt;a href=&quot;https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/&quot; rel=&quot;nofollow&quot;&gt;Python FAQ: How do I port to Python 3?&lt;/a&gt; when in trouble&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Main problems for teaching machine learning and data science with python&lt;/h3&gt;
&lt;p&gt;Course authors should spend time in the first lectures to explain what is an iterator, why it can't be sliced / concatenated / multiplied / iterated twice like a string (and how to deal with it).&lt;/p&gt;
&lt;p&gt;I think most course authors would be happy to avoid these details, but now it is hardly possible.&lt;/p&gt;

&lt;p&gt;Python 2 and Python 3 have co-existed for almost 10 years, but we &lt;em&gt;should&lt;/em&gt; move to Python 3.&lt;/p&gt;
&lt;p&gt;Research and production code should become a bit shorter, more readable, and significantly safer after moving to Python 3-only codebase.&lt;/p&gt;
&lt;p&gt;Right now most libraries support both Python versions. And I can't wait for the bright moment when packages drop support for Python 2 and enjoy new language features.&lt;/p&gt;
&lt;p&gt;Following migrations are promised to be smoother: &lt;a href=&quot;https://snarky.ca/why-python-3-exists/&quot; rel=&quot;nofollow&quot;&gt;&quot;we will never do this kind of backwards-incompatible change again&quot;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;h3&gt;License&lt;/h3&gt;
&lt;p&gt;This text was published by &lt;a href=&quot;https://arogozhnikov.github.io/about/&quot; rel=&quot;nofollow&quot;&gt;Alex Rogozhnikov&lt;/a&gt; under &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot; rel=&quot;nofollow&quot;&gt;CC BY-SA 3.0 License&lt;/a&gt; (excluding images).&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Sun, 04 Feb 2018 21:00:04 +0000</pubDate>
<dc:creator>arogozhnikov</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/6318811?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>arogozhnikov/python3_with_pleasure</og:title>
<og:url>https://github.com/arogozhnikov/python3_with_pleasure</og:url>
<og:description>python3_with_pleasure - A short guide on features of Python 3</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/arogozhnikov/python3_with_pleasure</dc:identifier>
</item>
<item>
<title>Donkey Kong scoreboard strips high score claim</title>
<link>https://arstechnica.com/gaming/2018/02/donkey-kong-scoreboard-strips-billy-mitchells-high-score-claims/</link>
<guid isPermaLink="true" >https://arstechnica.com/gaming/2018/02/donkey-kong-scoreboard-strips-billy-mitchells-high-score-claims/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/mitchell-800x600.jpg&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/mitchell.jpg&quot; class=&quot;enlarge-link&quot; data-height=&quot;900&quot; data-width=&quot;1200&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; Mitchell rides an oversized &lt;em&gt;Donkey Kong&lt;/em&gt; machine in the recent Citrus Bowl parade.&lt;/div&gt;&lt;aside id=&quot;social-left&quot;&gt;&lt;a title=&quot;93 posters participating, including story author.&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/gaming/2018/02/donkey-kong-scoreboard-strips-billy-mitchells-high-score-claims/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-before&quot;&gt;reader comments&lt;/span&gt; &lt;span class=&quot;comment-count-number&quot;&gt;135&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;&lt;span&gt;Share this story&lt;/span&gt;    &lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;&lt;strong&gt;Update (Feb. 4, 2018):&lt;/strong&gt; &lt;a href=&quot;https://arstechnica.com/gaming/2016/05/is-this-the-worlds-first-perfect-game-of-donkey-kong/&quot;&gt;Former &lt;em&gt;Donkey Kong&lt;/em&gt; world record holder Wes Copeland&lt;/a&gt; has &lt;a href=&quot;https://twitter.com/wescopeland_/status/959533103457894400&quot;&gt;presented new statistical evidence&lt;/a&gt; that he says suggests Mitchell's 1.05 million point game was patched together from multiple emulated plays. Drawing data from &lt;a href=&quot;http://kongtrackr.herokuapp.com/#/game/-K125oy5q-Cwth6eJ_jM/summary&quot;&gt;the KongTrackr analysis app&lt;/a&gt;, Copeland says Mitchell's run derives a significantly higher-than-average ratio of points from smashing enemies with the hammer.&lt;/p&gt;
&lt;p&gt;Since the points derived from those enemy smashes are assigned semi-randomly (&lt;a href=&quot;http://www.classicarcadegaming.com/forums/index.php?topic=4164.0&quot;&gt;as detailed here&lt;/a&gt;), Copeland &lt;a href=&quot;https://twitter.com/wescopeland_/status/959533103457894400&quot;&gt;says&lt;/a&gt; such a statistically divergent performance &quot;is evidence of splicing. Billy replayed the boards over and over until he got the right smash RNG [random number generation] to lock in his pace.&quot; Copeland &lt;a href=&quot;https://twitter.com/wescopeland_/status/959976531161477120&quot;&gt;adds&lt;/a&gt; that it's &quot;extremely unlikely&quot; such a performance could happen due to pure chance in a single run. While this statistical evidence is still a bit circumstantial, it certainly takes on added weight when combined with the evidence of MAME play presented below.&lt;/p&gt;
&lt;p&gt;Amid all this unfolding drama, Robbie Lakeman managed to &lt;a href=&quot;http://donkeykongforum.com/index.php?topic=2056.0&quot;&gt;beat his own &lt;em&gt;Donkey Kong&lt;/em&gt; world record&lt;/a&gt; in &lt;a href=&quot;https://www.twitch.tv/videos/225148030&quot;&gt;a livestreamed performance on Friday&lt;/a&gt;. Lakeman surpassed a December mark of 1,230,100 by scoring 1,247,700 points.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Original story&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Billy Mitchell has been a polarizing figure in the tight-knit world of classic video game high scores since well before he appeared as Steve Wiebe's antagonist in &lt;a href=&quot;http://www.imdb.com/title/tt0923752/&quot;&gt;the 2007 documentary &lt;em&gt;The King of Kong: A Fistful of Quarters&lt;/em&gt;&lt;/a&gt;. But the Mitchell doubters got some strong new support on Friday as the &lt;em&gt;Donkey Kong&lt;/em&gt; Forum—a popular clearinghouse for tracking performance in the game—removed Mitchell's best claimed scores from its high-score list.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;http://donkeykongforum.com/index.php?topic=2055.0&quot;&gt;a detailed post on the &lt;em&gt;Donkey Kong&lt;/em&gt; Forum&lt;/a&gt; justifying the decision, moderator and scoreboard maintainer Jeremy &quot;Xelnia&quot; Young cites video evidence to suggest that three 1,000,000+ point scores presented by Mitchell were actually set using emulation rather than actual arcade hardware, as Mitchell claimed.&lt;/p&gt;
&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/mamedk.gif&quot; width=&quot;224&quot; height=&quot;256&quot; alt=&quot;Footage captured from MAME version 0.115 shows the stage being built in whole chunks.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;Footage captured from MAME version 0.115 shows the stage being built in whole chunks.&lt;/div&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/dfdk.gif&quot; class=&quot;enlarge&quot; data-height=&quot;540&quot; data-width=&quot;960&quot; alt=&quot;Direct-feed footage captured by Chris Gleed shows how an actual &amp;lt;em&amp;gt;Donkey Kong&amp;lt;/em&amp;gt; cabinet renders a new stage (click for animation).&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/dfdk-300x169.gif&quot; width=&quot;300&quot; height=&quot;169&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/dfdk-640x360.gif 2x&quot; alt=&quot;Direct-feed footage captured by Chris Gleed shows how an actual &amp;lt;em&amp;gt;Donkey Kong&amp;lt;/em&amp;gt; cabinet renders a new stage (click for animation).&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/dfdk.gif&quot; class=&quot;enlarge-link&quot; data-height=&quot;540&quot; data-width=&quot;960&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; Direct-feed footage captured by Chris Gleed shows how an actual &lt;em&gt;Donkey Kong&lt;/em&gt; cabinet renders a new stage (click for animation).&lt;/div&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/W5HiUgi-1.gif&quot; class=&quot;enlarge&quot; data-height=&quot;720&quot; data-width=&quot;480&quot; alt=&quot;Footage from Billy Mitchell's 1.05 million point claim seems to resemble the MAME footage (click for animation).&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/W5HiUgi-1-300x450.gif&quot; width=&quot;300&quot; height=&quot;450&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/W5HiUgi-1.gif 2x&quot; alt=&quot;Footage from Billy Mitchell's 1.05 million point claim seems to resemble the MAME footage (click for animation).&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/02/W5HiUgi-1.gif&quot; class=&quot;enlarge-link&quot; data-height=&quot;720&quot; data-width=&quot;480&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; Footage from Billy Mitchell's 1.05 million point claim seems to resemble the MAME footage (click for animation).&lt;/div&gt;
&lt;p&gt;While a real &lt;em&gt;Donkey Kong&lt;/em&gt; cabinet generates and displays game scenes in a &quot;sliding door&quot; effect, sliding from one side to the other, old versions of the Multiple Arcade Machine Emulator (MAME) instead build entire chunks of a level at once and then display them as a complete screen buffer (with slight differences as MAME has been updated over the years). The difference is noticeable in slow-motion, frame-by-frame analysis of the transitions between &lt;em&gt;Donkey Kong&lt;/em&gt; levels. In the analysis, a new stage is first built in pieces after the &quot;How High Can You Get?&quot; interludes.&lt;/p&gt;
&lt;p&gt;Comparing slow-motion footage of Mitchell's videos with those from MAME and authentic cabinets, Young writes, &quot;show that each of the &lt;em&gt;Donkey Kong&lt;/em&gt; world record direct-feed recordings presented by Billy Mitchell and verified by TG were generated in MAME and not by original &lt;em&gt;Donkey Kong&lt;/em&gt; hardware.&quot;&lt;/p&gt;
&lt;h2&gt;“The preponderance of evidence”&lt;/h2&gt;
&lt;p&gt;The difference between a MAME-set record and one set on an authentic &lt;em&gt;Donkey Kong&lt;/em&gt; printed circuit board isn't academic. Besides &lt;a href=&quot;http://www.twingalaxies.com/showthread.php/118168-Donkey-Kong-MAME-ROM-vs-Arcade-question&quot;&gt;important differences in timing and controls&lt;/a&gt; between the two, MAME allows players to easily record and replay inputs to piece together a record-breaking run from multiple attempts. While there's no direct evidence that Mitchell did this kind of rerecording, presenting a MAME run as actual arcade gameplay would certainly introduce the possibility of such cheating.&lt;/p&gt;
&lt;p&gt;Young cites other reasons to doubt Mitchell's score submissions. While Mitchell claims all of his 1M+ point scores came from &quot;direct feed&quot; off an actual &lt;em&gt;Donkey Kong&lt;/em&gt; cabinet, setting up such a direct output from the ancient arcade hardware requires an incredibly complex setup, as &lt;a href=&quot;http://donkeykongforum.com/index.php?topic=1413.0&quot;&gt;laid out by &lt;em&gt;Donkey Kong&lt;/em&gt; streamer Chris Gleed&lt;/a&gt;. This is why most &lt;em&gt;Donkey Kong&lt;/em&gt; scores are confirmed in front of a live audience or using a video camera pointed at the screen, which can also have the benefit of showing the player at the cabinet at the same time.&lt;/p&gt;
&lt;p&gt;There is no such footage of Mitchell actually at the controls of a real machine during his three claimed 1M+ point games, including the infamous &quot;surprise&quot; footage presented in a climactic scene in &lt;em&gt;The King of Kong&lt;/em&gt;. What's more, there are some significant questions regarding the circumstances under which each score was supposedly created.&lt;/p&gt;
&lt;p&gt;A screen recording of Mitchell's highest claimed &lt;em&gt;DK&lt;/em&gt; score of 1.062 million points was only shown publicly &lt;a href=&quot;https://www.youtube.com/watch?v=7y15Y6xrpXY&amp;amp;feature=youtu.be&quot;&gt;at a short press conference event&lt;/a&gt; put on by the International Video Game Hall of Fame. The authenticity of that record is mainly propped up by testimony of Todd Rogers, who was &lt;a href=&quot;http://www.twingalaxies.com/feed_details.php/104/twin-galaxies-dragster-dispute-concludes-with-banning-of-todd-rogers/5&quot;&gt;recently banned from gaming high-score board Twin Galaxies&lt;/a&gt; after evidence he had lied about a long-standing &lt;em&gt;Dragster&lt;/em&gt; record on the Atari 2600.&lt;/p&gt;
&lt;p&gt;&quot;Scores already on the board are &lt;em&gt;always&lt;/em&gt; subject to review, and if the preponderance of evidence is against [one score], than the score should be removed, even if no single bit of evidence is a 'smoking gun,'&quot; Young writes in the &lt;em&gt;Donkey Kong&lt;/em&gt; Forum post. &quot;In my view, we have reached that point with Billy Mitchell.&quot;&lt;/p&gt;
&lt;h2&gt;Fall of a giant?&lt;/h2&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;
Mitchell's various gaming achievements, braggadocious style, and signature American flag tie have made him one of the most recognizable (&lt;a href=&quot;https://arstechnica.com/gaming/2015/11/court-king-of-kongs-billy-mitchell-isnt-an-exploding-floating-cartoon-head/&quot;&gt;and parodied&lt;/a&gt;) professional gamers for years before esports were even a real thing. His biggest claim to fame in the gaming community remains &lt;a href=&quot;http://www.funspotnh.com/-Articles/pc-billymitchell.htm&quot;&gt;playing the first perfect game of &lt;em&gt;Pac-Man&lt;/em&gt;&lt;/a&gt;, an undisputed record which he achieved in 1999. But &lt;em&gt;Donkey Kong&lt;/em&gt; has become a big part of his public persona in recent years, including &lt;a href=&quot;https://twitter.com/socceracad/status/947168046405341184&quot;&gt;a ride on a giant Donkey Kong machine in December's Citrus Bowl parade&lt;/a&gt;.
&lt;p&gt;While Mitchell's &lt;em&gt;Donkey Kong&lt;/em&gt; scores were impressive at the time he claimed them, they've since been surpassed in video-verified runs by numerous players. Mitchell's highest claimed score only ranked at No. 20 on the &lt;em&gt;Donkey Kong&lt;/em&gt; Forum rankings before being removed. As it stands, Mitchell's highest confirmed score—an impressive 933,900-point performance achieved in front of multiple witnesses at Midwest Gaming Classic in 2004—is the 47th highest score listed on the site.&lt;/p&gt;
&lt;p&gt;Mitchell has not responded to a request for comment from Ars Technica. Twin Galaxies—a long-standing video game high-score authority recognized by the Guinness Book of World Records—&lt;a href=&quot;http://www.twingalaxies.com/showthread.php/176004-Dispute-Jeremy-Young-Arcade-Donkey-Kong-Points-Hammer-Allowed-Player-Billy-L-Mitchell-Score-1-062-800?p=946666&amp;amp;viewfull=1#post946666&quot;&gt;responded via a forum post&lt;/a&gt; by commissioner Dave Hawksett. He wrote that &quot;Time will be needed for Twin Galaxies to fully review this evidence. We will do this thoroughly and impartially. In the meantime we will continue to observe this discussion by experts in our community.&quot;&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;
Incidentally, Wes Copeland's 1.218 million-point &lt;em&gt;Donkey Kong&lt;/em&gt; game—referred to by some as &lt;a href=&quot;https://arstechnica.com/gaming/2016/05/is-this-the-worlds-first-perfect-game-of-donkey-kong/&quot;&gt;a perfect game of &lt;em&gt;Donkey Kong&lt;/em&gt;&lt;/a&gt; when it was achieved as a new high score in 2016—was surpassed in December with &lt;a href=&quot;http://donkeykongforum.com/index.php?topic=2056.msg33435;topicseen#msg33435&quot;&gt;a 1.23 million-point game from Robbie Lakeman&lt;/a&gt;. Both of those amazing scores have direct video evidence showing the players performing on actual arcade cabinets, yet another way they seem to be in a different class from those of the storied Billy Mitchell.</description>
<pubDate>Sun, 04 Feb 2018 20:01:18 +0000</pubDate>
<dc:creator>sanj</dc:creator>
<og:url>https://arstechnica.com/gaming/2018/02/donkey-kong-scoreboard-strips-billy-mitchells-high-score-claims/</og:url>
<og:title>Donkey Kong scoreboard strips Billy Mitchell’s high score claims [Updated]</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2018/02/mitchell-760x380.jpg</og:image>
<og:description>Frame-by-frame video analysis suggests records were actually set using emulator</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/gaming/2018/02/donkey-kong-scoreboard-strips-billy-mitchells-high-score-claims/</dc:identifier>
</item>
<item>
<title>Early Facebook and Google Employees Form a Center for Humane Technology</title>
<link>https://www.nytimes.com/2018/02/04/technology/early-facebook-google-employees-fight-tech.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/02/04/technology/early-facebook-google-employees-fight-tech.html</guid>
<description>&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;213&quot; data-total-count=&quot;1919&quot; id=&quot;story-continues-3&quot;&gt;“The largest supercomputers in the world are inside of two companies — Google and Facebook — and where are we pointing them?” Mr. Harris said. “We’re pointing them at people’s brains, at children.”&lt;/p&gt;


&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;337&quot; data-total-count=&quot;2256&quot;&gt;Silicon Valley executives for years positioned their companies as tight-knit families and rarely spoke publicly against one another. That has changed. Chamath Palihapitiya, a venture capitalist who was an early employee at Facebook, said in November that the social network was “&lt;a href=&quot;https://www.theverge.com/2017/12/11/16761016/former-facebook-exec-ripping-apart-society&quot;&gt;ripping apart the social fabric of how society works&lt;/a&gt;.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;522&quot; data-total-count=&quot;2778&quot;&gt;The new Center for Humane Technology includes an unprecedented alliance of former employees of some of today’s biggest tech companies. Apart from Mr. Harris, the center includes Sandy Parakilas, a former Facebook operations manager; Lynn Fox, a former Apple and Google communications executive; Dave Morin, a former Facebook executive; Justin Rosenstein, who created Facebook’s Like button and is a co-founder of Asana; Roger McNamee, an early investor in Facebook; and Renée DiResta, &lt;a href=&quot;https://www.nytimes.com/2017/11/12/technology/social-media-disinformation.html&quot;&gt;a technologist who studies bots&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;354&quot; data-total-count=&quot;3132&quot;&gt;The group expects its numbers to grow. Its first project to reform the industry will be to introduce a Ledger of Harms — a website aimed at guiding rank-and-file engineers who are concerned about what they are being asked to build. The site will include data on the health effects of different technologies and ways to make products that are healthier.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;522&quot; data-total-count=&quot;3654&quot;&gt;Jim Steyer, chief executive and founder of Common Sense, said the Truth About Tech campaign was modeled on antismoking drives and focused on children because of their vulnerability. That may sway tech chief executives to change, he said. Already, Apple’s chief executive, Timothy D. Cook, told The Guardian last month that &lt;a href=&quot;https://www.theguardian.com/technology/2018/jan/19/tim-cook-i-dont-want-my-nephew-on-a-social-network&quot;&gt;he would not let his nephew on social media&lt;/a&gt;, while the Facebook investor Sean Parker also recently said of the social network that “&lt;a href=&quot;https://www.theverge.com/2017/11/9/16627724/sean-parker-facebook-childrens-brains-feedback-loop&quot;&gt;God only knows what it’s doing to our children’s brains&lt;/a&gt;.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;91&quot; data-total-count=&quot;3745&quot;&gt;Mr. Steyer said, “You see a degree of hypocrisy with all these guys in Silicon Valley.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;447&quot; data-total-count=&quot;4192&quot;&gt;The new group also plans to begin lobbying for laws to curtail the power of big tech companies. It will initially focus on two pieces of legislation: a bill being introduced by Senator Edward J. Markey, Democrat of Massachusetts, that would commission research on technology’s impact on children’s health, and a bill in California by State Senator Bob Hertzberg, a Democrat, which would prohibit the use of digital bots without identification.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;148&quot; data-total-count=&quot;4340&quot;&gt;Mr. McNamee said he had joined the Center for Humane Technology because he was horrified by what he had helped enable as an early Facebook investor.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;153&quot; data-total-count=&quot;4493&quot;&gt;“Facebook appeals to your lizard brain — primarily fear and anger,” he said. “And with smartphones, they’ve got you for every waking moment.”&lt;/p&gt;
&lt;div id=&quot;story-ad-2&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2018/02/04/technology/early-facebook-google-employees-fight-tech.html#story-continues-4&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;85&quot; data-total-count=&quot;4578&quot; id=&quot;story-continues-4&quot;&gt;He said the people who made these products could stop them before they did more harm.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;73&quot; data-total-count=&quot;4651&quot;&gt;“This is an opportunity for me to correct a wrong,” Mr. McNamee said.&lt;/p&gt;
&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2018/02/04/technology/early-facebook-google-employees-fight-tech.html#whats-next&quot;&gt;Continue reading the main story&lt;/a&gt;</description>
<pubDate>Sun, 04 Feb 2018 18:56:49 +0000</pubDate>
<dc:creator>stanleydrew</dc:creator>
<og:url>https://www.nytimes.com/2018/02/04/technology/early-facebook-google-employees-fight-tech.html</og:url>
<og:type>article</og:type>
<og:title>Early Facebook and Google Employees Form Coalition to Fight What They Built</og:title>
<og:description>A group of Silicon Valley technologists plans to call attention to the dangers of tech, including working on an ad campaign aimed at 55,000 public schools.</og:description>
<og:image>https://static01.nyt.com/images/2018/02/03/business/05TECHTRUTH/05TECHTRUTH-facebookJumbo.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/02/04/technology/early-facebook-google-employees-fight-tech.html</dc:identifier>
</item>
<item>
<title>RustBelt: securing the foundations of the Rust programming language</title>
<link>https://dl.acm.org/citation.cfm?doid=3177123.3158154</link>
<guid isPermaLink="true" >https://dl.acm.org/citation.cfm?doid=3177123.3158154</guid>
<description>&lt;td class=&quot;small-link-text&quot; readability=&quot;2.6042553191489&quot;&gt;
&lt;div id=&quot;divmain&quot; readability=&quot;4.5574468085106&quot;&gt;

&lt;table class=&quot;medium-text&quot; readability=&quot;4.0801354401806&quot;&gt;&lt;colgroup&gt;&lt;col /&gt;&lt;/colgroup&gt;&lt;tr readability=&quot;8.1602708803612&quot;&gt;&lt;td&gt;
&lt;table class=&quot;medium-text&quot; readability=&quot;0.46551724137931&quot;&gt;&lt;col /&gt;&lt;col /&gt;&lt;tr readability=&quot;0.93103448275862&quot;&gt;&lt;td&gt;Full Text:&lt;/td&gt;
&lt;td&gt;&lt;a name=&quot;FullTextPDF&quot; title=&quot;FullText PDF&quot; href=&quot;https://dl.acm.org/ft_gateway.cfm?id=3158154&amp;amp;ftid=1937016&amp;amp;dwn=1&amp;amp;CFID=5067691&amp;amp;CFTOKEN=3f51178eef975941-F1DA9B12-9A78-F84C-CC89A256CD577688&quot; target=&quot;_blank&quot; id=&quot;FullTextPDF&quot;&gt;&lt;img src=&quot;https://dl.acm.org/imagetypes/pdf_logo.gif&quot; alt=&quot;PDF&quot; class=&quot;fulltext_lnk&quot; border=&quot;0&quot; /&gt;PDF&lt;/a&gt;
&lt;div&gt;see &lt;a href=&quot;https://dl.acm.org/citation.cfm?id=3158154&amp;amp;picked=formats&quot; title=&quot;Source Materials Tab&quot;&gt;source materials&lt;/a&gt; below for &lt;a href=&quot;https://dl.acm.org/citation.cfm?id=3158154&amp;amp;picked=formats&quot; title=&quot;Source Materials Tab&quot;&gt;more options&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;table class=&quot;medium-text&quot; readability=&quot;0.14545454545455&quot;&gt;&lt;col /&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;Authors:&lt;/td&gt;
&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;a href=&quot;https://dl.acm.org/author_page.cfm?id=99658672987&amp;amp;coll=DL&amp;amp;dl=ACM&amp;amp;trk=0&quot; title=&quot;Author Profile Page&quot; target=&quot;_self&quot;&gt;Ralf Jung&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&quot;bottom&quot;&gt;&lt;a href=&quot;https://dl.acm.org/inst_page.cfm?id=60002485&quot; title=&quot;Institutional Profile Page&quot;&gt;&lt;small&gt;MPI-SWS, Germany&lt;/small&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;a href=&quot;https://dl.acm.org/author_page.cfm?id=81502766398&amp;amp;coll=DL&amp;amp;dl=ACM&amp;amp;trk=0&quot; title=&quot;Author Profile Page&quot; target=&quot;_self&quot;&gt;Jacques-Henri Jourdan&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&quot;bottom&quot;&gt;&lt;a href=&quot;https://dl.acm.org/inst_page.cfm?id=60002485&quot; title=&quot;Institutional Profile Page&quot;&gt;&lt;small&gt;MPI-SWS, Germany&lt;/small&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.05&quot;&gt;&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;a href=&quot;https://dl.acm.org/author_page.cfm?id=81488669469&amp;amp;coll=DL&amp;amp;dl=ACM&amp;amp;trk=0&quot; title=&quot;Author Profile Page&quot; target=&quot;_self&quot;&gt;Robbert Krebbers&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&quot;bottom&quot;&gt;&lt;a href=&quot;https://dl.acm.org/inst_page.cfm?id=60006288&quot; title=&quot;Institutional Profile Page&quot;&gt;&lt;small&gt;Delft University of Technology, Netherlands&lt;/small&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; nowrap=&quot;nowrap&quot;&gt;&lt;a href=&quot;https://dl.acm.org/author_page.cfm?id=81100381796&amp;amp;coll=DL&amp;amp;dl=ACM&amp;amp;trk=0&quot; title=&quot;Author Profile Page&quot; target=&quot;_self&quot;&gt;Derek Dreyer&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&quot;bottom&quot;&gt;&lt;a href=&quot;https://dl.acm.org/inst_page.cfm?id=60002485&quot; title=&quot;Institutional Profile Page&quot;&gt;&lt;small&gt;MPI-SWS, Germany&lt;/small&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;td rowspan=&quot;20&quot;&gt;
&lt;table border=&quot;0&quot; class=&quot;medium-text&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; readability=&quot;3.5963302752294&quot;&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://dl.acm.org/images/apdf.jpg&quot; title=&quot;RustBelt: securing the foundations of the rust programming language&quot; width=&quot;60&quot; height=&quot;90&quot; alt=&quot;RustBelt: securing the foundations of the rust programming language&quot; border=&quot;0&quot; /&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot; nowrap=&quot;nowrap&quot;&gt;&lt;img src=&quot;https://dl.acm.org/images/ACM_mini.jpg&quot; title=&quot;Published by ACM&quot; alt=&quot;Published by ACM&quot; /&gt; 2017 Article&lt;br /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; valign=&quot;baseline&quot;&gt;&lt;a href=&quot;javascript:ColdFusion.Window.show('theexplaination');ColdFusion.navigate('explain.cfm?expid=13','theexplaination');&quot; title=&quot;Artifact Review and Badging: explained&quot;&gt;Artifacts&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;baseline&quot;&gt;&lt;img src=&quot;https://dl.acm.org/images/artifacts_evaluated_functional_dl.jpg&quot; alt=&quot;Artifacts Evaluated - Functional&quot; /&gt;  Artifacts Evaluated - Functional&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; valign=&quot;baseline&quot;&gt;&lt;img src=&quot;https://dl.acm.org/images/artifacts_available_dl.jpg&quot; alt=&quot;Artifacts Available&quot; /&gt;  Artifacts Available&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; valign=&quot;baseline&quot;&gt;&lt;img src=&quot;https://dl.acm.org/img/stats.jpg&quot; alt=&quot;Bibliometrics Data&quot; /&gt;  &lt;a href=&quot;javascript:ColdFusion.Window.show('theexplaination');ColdFusion.navigate('explain.cfm?expid=1','theexplaination');&quot; title=&quot;Bibliometrics: explained&quot;&gt;Bibliometrics&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;small-text&quot; colspan=&quot;2&quot; valign=&quot;top&quot;&gt;· Citation Count: 0&lt;br /&gt;· Downloads (cumulative): 2,962&lt;br /&gt;· Downloads (12 Months): 2,962&lt;br /&gt;· Downloads (6 Weeks): 2,962&lt;br /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;table border=&quot;0&quot; class=&quot;medium-text&quot; cellpadding=&quot;2&quot; cellspacing=&quot;0&quot; readability=&quot;2.3160621761658&quot;&gt;&lt;tr valign=&quot;top&quot; readability=&quot;4.6321243523316&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; class=&quot;medium-text&quot; cellpadding=&quot;1&quot; cellspacing=&quot;0&quot; readability=&quot;3.0880829015544&quot;&gt;&lt;tr valign=&quot;top&quot;&gt;&lt;td rowspan=&quot;20&quot; nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Published in:&lt;br /&gt;&lt;a href=&quot;http://pacmpl.acm.org/&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://portalparts.acm.org/3180000/3177123/cover/cover_full.jpg&quot; height=&quot;102&quot; width=&quot;69&quot; alt=&quot;Cover Image&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr valign=&quot;top&quot;&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;· Journal&lt;/td&gt;
&lt;/tr&gt;&lt;tr valign=&quot;top&quot; readability=&quot;1.7454545454545&quot;&gt;&lt;td&gt;Proceedings of the ACM on Programming Languages  &lt;a href=&quot;https://dl.acm.org/citation.cfm?id=J1568&amp;amp;picked=prox&quot; target=&quot;_self&quot; class=&quot;small-link-text&quot;&gt;archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr valign=&quot;top&quot; readability=&quot;3.9444444444444&quot;&gt;&lt;td&gt;Volume 2 Issue POPL, January 2018&lt;br /&gt;Article No. 66&lt;br /&gt;&lt;a href=&quot;https://www.acm.org/publications&quot; class=&quot;small-link-text&quot; title=&quot;ACM&quot;&gt;ACM&lt;/a&gt; &lt;span class=&quot;small-link-text&quot;&gt;New York, NY&lt;/span&gt;&lt;span class=&quot;small-link-text&quot;&gt;, USA&lt;/span&gt;&lt;br /&gt;&lt;a href=&quot;https://dl.acm.org/citation.cfm?id=3177123&amp;amp;picked=prox&quot; target=&quot;_self&quot; class=&quot;small-link-text&quot;&gt;table of contents&lt;/a&gt; &lt;span&gt;doi&amp;gt;&lt;a href=&quot;https://doi.org/10.1145/3158154&quot; target=&quot;_self&quot; class=&quot;small-link-text&quot;&gt;10.1145/3158154&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/div&gt;
&lt;/td&gt;&lt;td class=&quot;small-link-text&quot;&gt;
&lt;div id=&quot;divtools&quot;&gt;

&lt;ul title=&quot;Tools and Resources&quot;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;https://dl.acm.org/rightslink.cfm?id=3158154&amp;amp;parent_id=3177123&quot; class=&quot;small-link-text&quot; title=&quot;Request Permissions&quot; target=&quot;_blank&quot;&gt;Request Permissions&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class=&quot;small-link-text&quot;&gt;TOC Service:&lt;/span&gt; &lt;img src=&quot;https://dl.acm.org/images/blanks.gif&quot; border=&quot;0&quot; alt=&quot;Spacer Image reserves space for checkmark when TOC Service is updated&quot; name=&quot;saved&quot; id=&quot;saved&quot; /&gt;&lt;/span&gt;
&lt;ul&gt;&lt;li&gt;&lt;br /&gt;&lt;img src=&quot;https://dl.acm.org/img/email_small.gif&quot; alt=&quot;Toc Alert via Email&quot; border=&quot;0&quot; hspace=&quot;3&quot; /&gt;&lt;a href=&quot;https://dl.acm.org/citation.cfm?doid=3177123.3158154#&quot; onclick=&quot;window.alert('To use this Feature, you must login with your personal ACM Web Account.');&quot; class=&quot;small-link-text&quot;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://dl.acm.org/img/rss_small.gif&quot; alt=&quot;Toc Alert via Email&quot; border=&quot;0&quot; hspace=&quot;3&quot; /&gt;&lt;a href=&quot;https://dl.acm.org/citation.cfm?doid=3177123.3158154#&quot; onclick=&quot;window.alert('To use this Feature, you must login with your personal ACM Web Account.');&quot; class=&quot;small-link-text&quot;&gt;RSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&quot;https://dl.acm.org/citation.cfm?doid=3177123.3158154#&quot; onclick=&quot;window.alert('To use this Feature, you must login with your personal ACM Web Account.');&quot; class=&quot;small-link-text&quot;&gt;Save to Binder&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class=&quot;small-link-text&quot;&gt;Export Formats:&lt;/span&gt;&lt;/span&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;javascript:ColdFusion.Window.show('theformats');ColdFusion.navigate('exportformats.cfm?id=3158154&amp;amp;expformat=bibtex','theformats');&quot; class=&quot;small-link-text&quot;&gt;BibTeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:ColdFusion.Window.show('theformats');ColdFusion.navigate('exportformats.cfm?id=3158154&amp;amp;expformat=endnotes','theformats');&quot; class=&quot;small-link-text&quot;&gt;EndNote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:ColdFusion.Window.show('theformats');ColdFusion.navigate('exportformats.cfm?id=3158154&amp;amp;expformat=acmref','theformats');&quot; class=&quot;small-link-text&quot;&gt;ACM Ref&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;small-link-text&quot;&gt;Share:&lt;/p&gt;
&lt;p&gt;      &lt;span class=&quot;addthis_separator&quot;&gt;|&lt;/span&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;medium-text&quot;&gt;&lt;a href=&quot;javascript:ColdFusion.Window.show('theexplaination');ColdFusion.navigate('explain.cfm?expid=2','theexplaination');&quot; title=&quot;Tags: explained&quot;&gt;&lt;strong&gt;Author Tags&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;javascript:%20void(0);&quot; onclick=&quot;toggleAuthorKeys();&quot; title=&quot;Expand Author Tags&quot;&gt;&lt;img id=&quot;expandcollapseauthortags&quot; class=&quot;expand-collapse&quot; src=&quot;https://dl.acm.org/images/expand.png&quot; width=&quot;40px&quot; alt=&quot;Expand Author Tags&quot; name=&quot;expandcollapseauthortags&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/td&gt;
</description>
<pubDate>Sun, 04 Feb 2018 12:49:34 +0000</pubDate>
<dc:creator>based2</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://dl.acm.org/citation.cfm?doid=3177123.3158154</dc:identifier>
</item>
<item>
<title>A pessimistic vision of India’s looming environmental and economic collapse</title>
<link>https://thewire.in/217773/india-systematic-destruction/</link>
<guid isPermaLink="true" >https://thewire.in/217773/india-systematic-destruction/</guid>
<description>&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-official sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;h3&gt;A startlingly pessimistic vision of India’s looming environmental and economic collapse – aired by a senior business leader – deserves our urgent attention.&lt;/h3&gt;
&lt;div id=&quot;attachment_217806&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;img data-attachment-id=&quot;217806&quot; data-permalink=&quot;https://thewire.in/217773/india-systematic-destruction/nuclear-explosion/&quot; data-orig-file=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191930/nuclear-explosion.jpg?fit=1200%2C750&amp;amp;ssl=1&quot; data-orig-size=&quot;1200,750&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;nuclear-explosion&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191930/nuclear-explosion.jpg?fit=300%2C188&amp;amp;ssl=1&quot; data-large-file=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191930/nuclear-explosion.jpg?fit=1024%2C640&amp;amp;ssl=1&quot; class=&quot;size-full wp-image-217806&quot; src=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191930/nuclear-explosion.jpg?resize=1160%2C725&amp;amp;ssl=1&quot; alt=&quot;&quot; width=&quot;1160&quot; height=&quot;725&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Raghu Raman put forward a starkly apocalyptic vision of the country’s future. Credit: File photo&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;p1&quot;&gt;Recently, writing against the backdrop of the unprecedented spike in Delhi’s air pollution, Raghu Raman, the president of Reliance Industries’ risk, security &amp;amp; new ventures division and former CEO of India’s National Intelligence Grid (NATGRID), &lt;span class=&quot;s1&quot;&gt;put forward&lt;/span&gt; a starkly apocalyptic vision of the country’s future:&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p class=&quot;p1&quot;&gt;India is sitting on several time bombs. Climate change, toxic environments, burgeoning aspirations, jobless growth, crumbling infrastructure and of course, pollution being just a few of them. The current models of social consumption and growth are simply unsustainable. More importantly, not only are these issues interlinked but in most cases, have reached a gridlock wherein no single component can be solved in isolation without impacting stakeholders affected by other problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p1&quot;&gt;In the article titled ‘&lt;a href=&quot;https://thewire.in/196791/india-environment-self-destruction-collapse-jared-diamond/&quot; title=&quot;India's is Hurtling Down A Path of Self-Destruction'&quot;&gt;India’s is Hurtling Down A Path of Self-Destruction’&lt;/a&gt;, Raman makes his case by drawing from the work of the Pulitzer Prize-winning anthropologist Jared Diamond’s study of Easter Island, the Pacific Island society that supposedly collapsed owing to over-exploitation of natural resources. He concludes that the gridlock-like situation makes collapse inevitable, because:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p class=&quot;p2&quot;&gt;… that’s what collapsing societies do. They hurtle down the path of self-destruction in pursuit of short-term disastrous objectives in unison, even while they realise the looming catastrophe as individuals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p2&quot;&gt;Raman’s short piece, well worth reading in full, is a remarkable statement; both on account of its unyieldingly pessimistic outlook and the fact that it comes from a senior executive of India’s leading corporation. It should have made the headlines; but except for some murmurs in social media, it drew no response even from the pink papers – otherwise overly attentive to the pronouncements of business leaders.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;strong&gt;Are we &lt;em&gt;really&lt;/em&gt; doomed?&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;Raman’s analysis is not without its problems. Diamond’s work on Easter Island, for example, has been &lt;a href=&quot;https://theconversation.com/the-truth-about-easter-island-a-sustainable-society-has-been-falsely-blamed-for-its-own-demise-85563&quot; target=&quot;_blank&quot; title=&quot;rejected by&quot;&gt;&lt;span class=&quot;s1&quot;&gt;rejected by&lt;/span&gt;&lt;/a&gt; experts who have researched the phenomenon, who trace the origins of such interpretations to the West’s colonial imagination. But that’s a quibble; what should really concern us is Raman’s main thesis.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;So, are we doomed as a country? Just how valid are Raman’s claims, which also extend to the rest of the world? Consider these facts:&lt;/p&gt;
&lt;ul&gt;&lt;li class=&quot;li3&quot;&gt;In the summer of 2016, temperatures in parts of western India exceeded 50 degrees celsius, with Phalodi in Rajasthan setting &lt;a href=&quot;http://www.independent.co.uk/news/world/asia/india-s-roads-melt-as-record-breaking-heat-wave-continues-a7044146.html&quot; target=&quot;_blank&quot; title=&quot;a new record&quot;&gt;&lt;span class=&quot;s2&quot;&gt;a new record&lt;/span&gt;&lt;/a&gt; for the country at a scorching 51 degrees celsius. In Gujarat’s Valsad, people were forced to abandon their sandals while crossing roads, because they got stuck on the melting tar. In the last four years, heat waves killed more than &lt;a href=&quot;http://www.hindustantimes.com/india-news/heatwave-in-india-claim-4-620-lives-in-four-years/story-yDAJTaroKEUBio6uEeTcgN.html&quot; target=&quot;_blank&quot; title=&quot;4,600 Indians&quot;&gt;&lt;span class=&quot;s2&quot;&gt;4,600 Indians&lt;/span&gt;&lt;/a&gt;, the overwhelming bulk of them working class people in Andhra Pradesh and Telangana.&lt;/li&gt;
&lt;li&gt;Farmers in South Asia are expected to use between 80 and 200% more water by 2050. Yet, Indian farmers are drawing water from the Upper Ganges aquifer (large underground deposit of water) at &lt;a href=&quot;http://www.readcube.com/articles/10.1038/nature21403&quot; target=&quot;_blank&quot; title=&quot;50 times&quot;&gt;&lt;span class=&quot;s2&quot;&gt;50 times&lt;/span&gt;&lt;/a&gt; its recharge rate. A &lt;a href=&quot;https://www.nasa.gov/jpl/grace/study-third-of-big-groundwater-basins-in-distress/&quot; target=&quot;_blank&quot; title=&quot;NASA study&quot;&gt;&lt;span class=&quot;s2&quot;&gt;NASA study&lt;/span&gt;&lt;/a&gt; in 2009 identified a third of the world’s major aquifers to be in distress, with the Indus basin – which includes Punjab and Haryana, India’s granaries – ranked the second-most over-stressed.&lt;/li&gt;
&lt;li class=&quot;li3&quot;&gt;The UN estimates &lt;a href=&quot;http://liquid-investments.com/six-million-hectares-of-additional-farmland-needed-2/&quot; target=&quot;_blank&quot; title=&quot;6 million hectares&quot;&gt;&lt;span class=&quot;s2&quot;&gt;6 million hectares&lt;/span&gt;&lt;/a&gt; (14.8 million acres) of new farmland is needed globally every year to keep up with food demand; instead, we are &lt;a href=&quot;https://reliefweb.int/report/world/high-price-desertification-23-hectares-land-minute&quot; target=&quot;_blank&quot; title=&quot;losing 12 million hectares&quot;&gt;&lt;span class=&quot;s2&quot;&gt;losing 12 million hectares&lt;/span&gt;&lt;/a&gt; a year through soil degradation. In India alone, a whopping &lt;a href=&quot;http://www.thehindubusinessline.com/opinion/a-desert-storm-is-engulfing-india/article8949236.ece&quot; target=&quot;_blank&quot; title=&quot;25%&quot;&gt;&lt;span class=&quot;s2&quot;&gt;25%&lt;/span&gt;&lt;/a&gt; (82 million hectares) of total land (329 mn ha) is undergoing desertification while 32% (105 mn ha) is facing degradation.&lt;/li&gt;
&lt;li class=&quot;li3&quot;&gt;Scientists are keeping a &lt;a href=&quot;https://grist.org/article/antarctica-doomsday-glaciers-could-flood-coastal-cities/&quot; target=&quot;_blank&quot; title=&quot;close watch&quot;&gt;&lt;span class=&quot;s1&quot;&gt;close watch&lt;/span&gt;&lt;/a&gt; on two little known glaciers in Pine Island Bay, Antarctica, which are &lt;span class=&quot;s1&quot;&gt;so huge&lt;/span&gt; that “they act as a plug holding back enough ice to pour 11 feet of sea-level rise into the world’s oceans — an amount that would submerge every coastal city on the planet.” If global warming continues to accelerate as it is doing now, those two glaciers could melt in as much as 20 to 50 years – much too sooner than humanity can adapt.&lt;/li&gt;
&lt;li class=&quot;li3&quot;&gt;Globally, between 1990 and 2015, we lost the equivalent of 1,000 football fields’ worth of forests &lt;em&gt;per hour&lt;/em&gt;, according to &lt;a href=&quot;https://blogs.worldbank.org/opendata/five-forest-figures-international-day-forests&quot; target=&quot;_blank&quot; title=&quot;the World Bank&quot;&gt;&lt;span class=&quot;s2&quot;&gt;the World Bank&lt;/span&gt;&lt;/a&gt;. The &lt;em&gt;&lt;a href=&quot;http://www.hindustantimes.com/india/india-lost-original-forests-70-times-delhi-s-area-in-14-years/story-OoM8EaCwbi06FVgQFyfaRN.html&quot; target=&quot;_blank&quot; title=&quot;Hindustan Times&quot;&gt;&lt;span class=&quot;s2&quot;&gt;Hindustan Times&lt;/span&gt;&lt;/a&gt;&lt;/em&gt; says India alone may have lost close to 10.6 million hectares in just 14 years – between 1999 to 2013. Deforestation increases soil erosion, affects rainfall patterns and river flows, apart from destroying wildlife habitats.&lt;/li&gt;
&lt;/ul&gt;&lt;div id=&quot;attachment_217805&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;35&quot;&gt;&lt;img data-attachment-id=&quot;217805&quot; data-permalink=&quot;https://thewire.in/217773/india-systematic-destruction/deforestation-india-reuters/&quot; data-orig-file=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191737/deforestation-India-Reuters.jpg?fit=800%2C480&amp;amp;ssl=1&quot; data-orig-size=&quot;800,480&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;deforestation-India-Reuters&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191737/deforestation-India-Reuters.jpg?fit=300%2C180&amp;amp;ssl=1&quot; data-large-file=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191737/deforestation-India-Reuters.jpg?fit=800%2C480&amp;amp;ssl=1&quot; class=&quot;size-full wp-image-217805&quot; src=&quot;https://i1.wp.com/cdn.thewire.in/wp-content/uploads/2018/01/25191737/deforestation-India-Reuters.jpg?resize=800%2C480&amp;amp;ssl=1&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;480&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Between 1990 and 2015, we lost the equivalent of 1,000 football fields’ worth of forests &lt;em&gt;per hour&lt;/em&gt;. Credit: Reuters&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;p1&quot;&gt;These figures merely skim the surface of a crisis – more accurately, a set of interlinked crises – that is of truly earth-shaking proportions. The crises are not merely ‘environmental’ – after all, the fate of humanity is inextricably linked to that of nature.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;As the trends above show, these crises are not future events either. And w&lt;span class=&quot;s1&quot;&gt;orse, on almost every one of these fronts, the trends are not only accelerating, but show no sign of abating. Every year, we are breaching more and more &lt;a href=&quot;http://www.stockholmresilience.org/research/planetary-boundaries/planetary-boundaries/about-the-research/the-nine-planetary-boundaries.html&quot; target=&quot;_blank&quot; title=&quot;planetary boundaries&quot;&gt;&lt;span class=&quot;s2&quot;&gt;planetary boundaries&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;, which can be seen as the earth’s health indicators, pushing our natural systems further towards a terminal state.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;Among the many crises that are converging on the 21&lt;sup&gt;st&lt;/sup&gt; century, climate change stands out for being the most &lt;a href=&quot;http://nymag.com/daily/intelligencer/2017/07/climate-change-earth-too-hot-for-humans.html&quot; target=&quot;_blank&quot; title=&quot;urgent and far-reaching&quot;&gt;&lt;span class=&quot;s1&quot;&gt;urgent and far-reaching&lt;/span&gt;&lt;/a&gt; in its impact. A phenomenon primarily attributed to the burning of fossil fuels, it brings with it a host of inter-related challenges – shifting rainfall patterns, megadroughts and floods, sea level rise, acidification of oceans, and so on – any &lt;em&gt;one&lt;/em&gt; of which would qualify as a major global crisis.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;Of late, the warnings have reached fever pitch. In November 2017, the Union of Concerned Scientists issued a dire ‘&lt;a href=&quot;http://www.independent.co.uk/environment/letter-to-humanity-warning-climate-change-global-warming-scientists-union-concerned-a8052481.html&quot; target=&quot;_blank&quot; title=&quot;second warning&quot;&gt;&lt;span class=&quot;s1&quot;&gt;second warning&lt;/span&gt;&lt;/a&gt;’ about “the existential threat of runaway consumption of limited resources,” signed by 15,000 scientists from 184 countries, including many Nobel laureates.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;In short, we are well past the stage where such concerns about our collective future can be dismissed as ‘alarmism’.&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;strong&gt;Industrial civilisation as a ‘nine-day wonder’&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;The &lt;a href=&quot;https://www.theguardian.com/books/2016/apr/15/neoliberalism-ideology-problem-george-monbiot&quot; target=&quot;_blank&quot; title=&quot;main driver&quot;&gt;&lt;span class=&quot;s2&quot;&gt;main driver&lt;/span&gt;&lt;/a&gt; of the 21&lt;sup&gt;st&lt;/sup&gt; century’s converging crises is the global industrial-capitalist system, and the pernicious ideology of perpetual, exponential economic growth that governs it. In 2016, in an &lt;a href=&quot;https://blogs.timesofindia.indiatimes.com/toi-edit-page/infinite-growth-in-a-finite-world-hopium-economics-has-given-us-deeply-in-debt-individuals-businesses-and-nations/&quot; target=&quot;_blank&quot; title=&quot;op-ed piece&quot;&gt;op-ed piece&lt;/a&gt; in the &lt;em&gt;The Times of India&lt;/em&gt;, international banker turned author Satyajit Das laid out in jargon-free terms how this came to be:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s3&quot;&gt;Economic growth is a central assumption to political and economic systems…&lt;/span&gt; &lt;span class=&quot;s4&quot;&gt;But strong growth is not normal, being a recent phenomenon over the last two centuries… It was based upon the profligate use of mispriced natural resources such as oil, water and soil. It relied on allowing unsustainable degradation of the environment.&lt;/span&gt; &lt;span class=&quot;s3&quot;&gt;The human race refuses to accept that it is not possible to have infinite growth and improvement in living standards in a finite world. &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p1&quot;&gt;Exploitation and inequality is innate to the industrial-capitalist system; a fact well-known at least since the time of Marx. But the question of its environmental impacts and viability has received far less attention, historically speaking. Interestingly, chief among those who sounded the early warnings about modern industrial civilization were a bunch of illustrious Indians: &lt;a href=&quot;http://www.tonu.org/tag/robbery-of-the-soil/&quot; target=&quot;_blank&quot; title=&quot;Tagore&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Tagore&lt;/span&gt;&lt;/a&gt;, &lt;a href=&quot;https://scroll.in/article/826426/defying-capitalism-and-socialism-kumarappa-and-gandhi-had-imagined-a-decentralised-indian-economy&quot; target=&quot;_blank&quot; title=&quot;Gandhi and J.C. Kumarappa&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Gandhi and J.C. Kumarappa&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;In 1909, in his characteristically homespun manner, Gandhi had described industrial civilisation as a &lt;a href=&quot;https://thewire.in/66777/gandhi-was-perfectly-sensible-to-call-industrial-civilisation-a-nine-days-wonder-mark-lindley/&quot; title=&quot;&quot; nine-day=&quot;&quot;&gt;&lt;span class=&quot;s2&quot;&gt;“nine-day wonder”&lt;/span&gt;&lt;/a&gt;. Today, this deeply unfashionable view has returned with a vengeance, and Gandhi and Kumarappa are now seen as beacons by those who are seeking alternatives to the present system.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;In fact, there is rich irony in the fact that it took more than half a century for Gandhi’s warning to echo through the halls of the scientific establishment. That came in the form of a 1972 study, which sought to simulate the consequences of unchecked economic growth. The results, published in a report titled ‘&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Limits_to_Growth&quot; target=&quot;_blank&quot; title=&quot;The Limits to Growth&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&lt;em&gt;The Limits to Growth&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;,’ implied that industrial societies were thoroughly unsustainable and headed towards collapse, if they didn’t change course. Predictably, its findings were duly ignored.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;Today, however, many analysts believe that we have finally hit the ‘limits to growth’ predicted in the study 45 years ago. Their painstaking research &lt;span class=&quot;s1&quot;&gt;connects the ongoing global economic slowdown to underlying resource constraints. (Some of these analyses can be read &lt;a href=&quot;https://ourfiniteworld.com/2013/03/29/how-resource-limits-lead-to-financial-collapse/&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;here&lt;/a&gt;&lt;/span&gt;, &lt;a href=&quot;http://richardheinberg.com/220-peak-everything&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt; and &lt;a href=&quot;http://cassandralegacy.blogspot.in/2013/09/mineral-resources-and-limits-to-growth.html&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt;). Closer home, researchers at The Energy Resources Institute (TERI) have issued a &lt;a href=&quot;https://thewire.in/12382/curbing-consumption-is-the-only-way-out-to-avoid-climate-change/&quot; title=&quot;similar warning&quot;&gt;&lt;span class=&quot;s1&quot;&gt;similar warning&lt;/span&gt;&lt;/a&gt; for India: curbing economic growth and consumption is the only way to avoid a catastrophe.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;Primarily, there are three reasons why long-term economic growth is not viable:&lt;/p&gt;
&lt;ol class=&quot;ol1&quot;&gt;&lt;li class=&quot;li1&quot;&gt;The ‘pie’ is shrinking; the non-renewable resources – metals, minerals and fossil fuels – which hi-tech industrial societies depend on are increasingly scarce and inaccessible (See &lt;a href=&quot;http://donellameadows.org/archives/a-synopsis-limits-to-growth-the-30-year-update/&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s5&quot;&gt;here&lt;/span&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.worldscientific.com/worldscibooks/10.1142/7323&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s5&quot;&gt;here&lt;/span&gt;&lt;/a&gt; and &lt;a href=&quot;http://wildancestors.blogspot.in/2013/07/scarcity.html&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt;).&lt;/li&gt;
&lt;li class=&quot;li1&quot;&gt;There is greater competition for these shrinking resources – once monopolised by the West – as the rest of the world apes the western economic model; which means that with time, fewer and fewer of these will be available for each.&lt;/li&gt;
&lt;li class=&quot;li1&quot;&gt;The catastrophic environmental impacts of economic growth – climate change, deforestation, pollution and toxicity, etc – are putting in place new and more urgent limits on the production and consumption of these resources.&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;p1&quot;&gt;The&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt; conclusion is as inescapable as it was expected. The planet simply lacks the capacity to support the economic utopia promised to everyone by the champions of growth. However, to continue espousing this model knowing it has thrown planetary systems off-kilter – as India’s elite decision-makers do – is beyond myopic; it’s lunatic.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;But, as even the most casual survey of the ‘rich lists’ show, it’s a lunacy that has served its proponents only too well.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;strong&gt;A feast of vultures&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;em&gt;A Feast of Vultures&lt;/em&gt;: that’s the title of a &lt;a href=&quot;http://www.livemint.com/Leisure/2TIvyIJAi68p4EtUVwyijL/Book-review-A-Feast-Of-Vultures.html&quot; target=&quot;_blank&quot; title=&quot;recent book&quot;&gt;&lt;span class=&quot;s1&quot;&gt;recent book&lt;/span&gt;&lt;/a&gt; by the investigative journalist Josy Joseph. It documents from the inside the spectacular corruption and economic feeding frenzy that followed when India threw open its resources to private players in the name of ‘economic reforms’. It’s no coincidence that the same period has seen the wealth of India’s neo-rich soar to previously unimagined heights.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;According to the charity &lt;a href=&quot;https://thewire.in/216160/richest-1-cornered-73-wealth-generated-india-2017-oxfam-survey/&quot; title=&quot;Oxfam's annual report&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Oxfam’s annual report&lt;/span&gt;&lt;/a&gt; on inequality, India’s richest 1% cornered 73% of the wealth generated in the country in 2017. Meanwhile, 67 crore Indians comprising the population’s poorest half saw their wealth rise by just 1%. The study estimates that to earn what a top paid executive in a leading Indian firm earns in a year, it will take a minimum wage labourer in rural India an astounding 941 years.&lt;/p&gt;
&lt;hr/&gt;&lt;h3&gt;Also read: &lt;a href=&quot;https://thewire.in/216160/richest-1-cornered-73-wealth-generated-india-2017-oxfam-survey/&quot; title=&quot;Richest 1% Cornered 73% of Wealth Generated in India in 2017: Oxfam Survey&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Richest 1% Cornered 73% of Wealth Generated in India in 2017: Oxfam Survey&lt;/a&gt;&lt;/h3&gt;
&lt;hr/&gt;&lt;p class=&quot;p1&quot;&gt;These grim figures are very much in tune with global trends: 82% of the wealth generated last year worldwide was cornered by the top 1%, while 3.7 billion people that account for the poorest half of population saw no increase in their wealth at all.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;Number one among India’s super-rich is Mukesh Ambani, the owner of Reliance Industries; as of this year, the world’s &lt;a href=&quot;http://www.livemint.com/Companies/wPa7m4ZN1knkekIFTgqvuO/RIL-worlds-3rd-largest-energy-firm-Platts-rankings.html&quot; target=&quot;_blank&quot; title=&quot;third largest&quot;&gt;&lt;span class=&quot;s1&quot;&gt;third largest&lt;/span&gt;&lt;/a&gt; fossil fuel company. His family is not only &lt;a href=&quot;http://www.thehindu.com/news/national/mukesh-ambani-family-tops-forbes-list-of-asias-richest-families-pip-lees/article20465328.ece&quot; target=&quot;_blank&quot; title=&quot;Asia’s wealthiest&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Asia’s wealthiest&lt;/span&gt;&lt;/a&gt;, their net worth rose by $19 billion this year to reach $44.8 billion. Based as it is on the performance of the Reliance empire, the family’s net worth is now close to the Gross Domestic Product (GDP) of the state of Punjab ($ 47 billion), one of India’s richest and home to almost three crore people.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;The wealth it added to its stash in the last year alone is greater than the GDP of Uttarakhand ($18 billion). As the 2017 &lt;em&gt;Forbes&lt;/em&gt; ‘India’s &lt;a href=&quot;https://www.forbes.com/india-billionaires/%2312a9ee84643b&quot; target=&quot;_blank&quot; title=&quot;100 richest&quot;&gt;&lt;span class=&quot;s1&quot;&gt;100 richest&lt;/span&gt;&lt;/a&gt;’ list shows, the fortunes of other tycoons too are growing at a similarly heady rate.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;strong&gt;‘The ideology of the cancer cell’&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Large parts of these vast fortunes piled up by India’s own band of &lt;a href=&quot;https://www.theglobeandmail.com/report-on-business/rob-commentary/india-struggles-through-its-own-era-of-robber-barons/article4252238/&quot; target=&quot;_blank&quot; title=&quot;robber barons&quot;&gt;robber barons&lt;/a&gt; can be directly traced to the &lt;a href=&quot;http://www.thehindubusinessline.com/opinion/the-great-environment-scam/article5075991.ece&quot; target=&quot;_blank&quot; title=&quot;ongoing fire sale&quot;&gt;ongoing fire sale&lt;/a&gt; of the country’s natural resources and a whole range of not-so-visible subsidies they receive from the government – from heavy tax rebates to land secured at throwaway prices to bad-debts written-off.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;While this process of state-enabled plunder is concealed from the public eye through elaborate bureaucratic skulduggery, the modus operandi itself remains devilishly simple: Collude with the state to transfer publicly owned resources into one’s own hands at a pittance; privatise the profits; and ‘socialise’ the costs – ie, the loss of homes and livelihoods, depleted resources, polluted air, water and soil.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;And yet, this process that enriches the few at the cost of the many, while permanently destroying the country’s environmental fabric, is roundly cheered by our self-declared patriots and a section of the metropolitan pundit class. What is, as a matter of fact, one of history’s most outrageous examples of forced wealth transfer, is perversely celebrated as ‘wealth creation’, and its chief beneficiaries glorified as ‘nation builders’.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;But, violent and exploitative as it has been, the true scale of the criminality of these policies are becoming evident only now, in the age of climate change. Today, alarming events like Delhi’s air pollution spike show that those accumulated ‘socialised’ costs are coming back to bite us, just as saner voices had always warned they will.&lt;/p&gt;
&lt;div readability=&quot;11.5&quot;&gt;In fact, India’s situation is rapidly approaching that of China, whose wrong-headed political and economic policies are an inspiration for our elites and middle classes. Three decades of rapid growth has thrust that nation into what has been described as a ‘&lt;a href=&quot;https://thewire.in/196791/india-environment-self-destruction-collapse-jared-diamond/&quot; title=&quot;communist-capitalist ecological apocalyspe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-saferedirecturl=&quot;https://www.google.com/url?hl=en&amp;amp;q=https://thewire.in/196791/india-environment-self-destruction-collapse-jared-diamond/&amp;amp;source=gmail&amp;amp;ust=1517036021999000&amp;amp;usg=AFQjCNENQcELk9CP2GU5aeQYjE-ATJ_hrQ&quot;&gt;communist-capitalist ecological apocalyspe&lt;/a&gt;‘ which now threatens to undo its economic achievements.&lt;/div&gt;
&lt;p class=&quot;p2&quot;&gt;The idea of infinite economic growth on a finite planet is a mathematical impossibility. Indeed, as the American author Edward Abbey had warned, “Growth for the sake of growth is the ideology of the cancer cell.” And yet, this delusional and ultimately suicidal ideology is now an article of faith for most Indians, thanks to a cynical and self-serving elite who have systematically injected it into society via the media, advertising, and educational institutions.&lt;br/&gt;&lt;strong&gt;&lt;br/&gt;“We have met the enemy and he is us”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In a manner reminiscent of that famous Vietnam war-era cartoon, Raman too arrives at the same, inexorable conclusion. Channeling Diamond, he makes what must be the most singular admission ever to be made by an Indian corporate leader.&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p class=&quot;p2&quot;&gt;“…one of the main reasons why even sophisticated societies fall into this suicidal spiral is the conflict between the short-term interests of decision-making elites and the long-term interests of society as a whole, especially if the elites are able to insulate themselves from the consequences of their actions. And that is how many decision makers have behaved over centuries across the world, including in India.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p2&quot;&gt;That extraordinary statement, coming from an ‘elite decision-maker’, is the closest we have got to a confession from an insider as to what has really been going in the country over the last few decades. In many ways, it confirms what the critics, from Medha Patkar to the Maoists, have always charged India’s development model with: that it’s violent and unjust, skewed in favour of the privileged few, and ecologically disastrous.&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;It shines new light on the mindset that promises bullet trains and ‘smart cities’ while neglecting public health and malnutrition; the pursuit of heartless policies calculated to keep agriculture economically unviable, &lt;a href=&quot;http://www.catchnews.com/pov/total-recall-how-the-match-is-fixed-against-indian-farmers-1432731942.html&quot; target=&quot;_blank&quot; title=&quot;driving the rural poor&quot;&gt;&lt;span class=&quot;s1&quot;&gt;driving the rural poor&lt;/span&gt;&lt;/a&gt; wholesale into the cities to serve as cheap fodder for India’s ‘economic miracle’; and the permanent destruction of million-year-old mountains, forests and rivers to create a ‘nine-day’ industrial wonder.&lt;/p&gt;
&lt;p&gt;Ironically, these policies are being enacted in the name of poverty reduction and ‘development’, which is flatly contradicted by the government’s own data. In the period from 2004-2005 to 2015-2016, tax concessions given by the Indian government to corporations amounted to an incredible &lt;a href=&quot;http://www.dnaindia.com/analysis/column-sinkhole-in-the-tax-landscape-2566886&quot; target=&quot;_blank&quot; title=&quot;Rs 50 lakh crore&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Rs 50 lakh crore&lt;/span&gt;&lt;/a&gt; – a sum that could have made India’s poverty history. Bear in mind that this astronomical figure is just &lt;em&gt;one&lt;/em&gt; form of ‘invisible’ subsidies given to corporations, and that too for a mere 12-year period. Given this, it’s hard to avoid the conclusion: the Indian public has been duped.&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;That’s why Raghu Raman’s statement ought to immediately revive the debate about the direction of India’s development. A debate that was virtually shut down after the ’90s, when the component elements of the system – the famous ‘pillars of democracy’ – closed ranks to form a consensus that we needed growth at any cost.&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;&lt;strong&gt;System&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt; change, not climate change&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p2&quot;&gt;This is a not call for return to 20&lt;sup&gt;th&lt;/sup&gt; century-style socialism, which is perhaps irredeemably caught up in the logic of industrialism. We need to need to find another way – rather, ways – and hundreds of experiments and models along these lines already abound (See &lt;a href=&quot;https://systemchangenotclimatechange.org/ecosocialism&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt;, &lt;a href=&quot;https://transitionnetwork.org/&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt;, &lt;a href=&quot;http://evonomics.com/will-replace-outdated-left-right-economic-thinking-commons-paradigm/&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt;, &lt;a href=&quot;https://theconversation.com/buen-vivir-south-americas-rethinking-of-the-future-we-want-44507&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.theguardian.com/commentisfree/2017/apr/12/doughnut-growth-economics-book-economic-model&quot; target=&quot;_blank&quot; title=&quot;here&quot;&gt;&lt;span class=&quot;s1&quot;&gt;here&lt;/span&gt;&lt;/a&gt; for starters).&lt;/p&gt;
&lt;p&gt;This is not a matter of choice either. Our collective survival depends on how soon – whether – we correct course, while ensuring a modicum of economic security for everyone and avoiding large-scale conflict. This is the central challenge of the 21&lt;sup&gt;st&lt;/sup&gt; century not just for India, but for every nation on the planet.&lt;/p&gt;
&lt;p&gt;Returning sanity to our economic models necessarily involves devolving power and redistributing wealth. That’s why this change can never come from our elite decision-makers, but only from ordinary citizens. Raghu Raman’s startling statement has served the memo to the people of India on the fate that awaits them, if they are to leave things in the hands of the elites and their short-term interests.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.theguardian.com/environment/2017/mar/08/how-climate-change-battles-are-increasingly-being-fought-and-won-in-court&quot; target=&quot;_blank&quot; title=&quot;wave of climate lawsuits&quot;&gt;&lt;span class=&quot;s1&quot;&gt;wave of climate lawsuits&lt;/span&gt;&lt;/a&gt;, calls for &lt;a href=&quot;http://www.motherjones.com/environment/2009/12/bolivia-paying-rain/&quot; target=&quot;_blank&quot; title=&quot;climate reparations&quot;&gt;&lt;span class=&quot;s1&quot;&gt;climate reparations&lt;/span&gt;&lt;/a&gt; and increasingly successful fossil fuel &lt;a href=&quot;http://www.resilience.org/stories/2017-12-14/how-bill-mckibbens-radical-idea-of-fossil-fuel-divestment-transformed-the-climate-debate/&quot; target=&quot;_blank&quot; title=&quot;divestment campaigns&quot;&gt;&lt;span class=&quot;s1&quot;&gt;divestment campaigns&lt;/span&gt;&lt;/a&gt; show that such a course correction may have begun already. Last week, the city of &lt;a href=&quot;https://www.theguardian.com/us-news/2018/jan/11/new-york-city-fossil-fuel-divestment-spur-global-movement&quot; target=&quot;_blank&quot; title=&quot;New York announced&quot;&gt;&lt;span class=&quot;s1&quot;&gt;New York announced&lt;/span&gt;&lt;/a&gt; that it will divest pension funds worth $5 billion from fossil fuel companies, apart from filing lawsuits against them for creating global warming. No doubt, these changes only scratch the surface of problem. But, hopefully, they are precursors of much more radical changes to come.&lt;/p&gt;
&lt;p&gt;Just as well. Because, as &lt;span class=&quot;s1&quot;&gt;the author Derrick Jensen&lt;/span&gt; says, for way too long a time, “We have been too kind to those who are killing the planet. We have been inexcusably, unforgivably, insanely kind.”&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://thewire.in/author/sjose/&quot; title=&quot;Sajai Jose&quot;&gt;Sajai Jose&lt;/a&gt; is a member of&lt;/em&gt; &lt;a href=&quot;https://www.ecologise.in/&quot; target=&quot;_blank&quot; title=&quot;Ecologise&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&lt;em&gt;Ecologise&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;em&gt;, a collective with a shared interest in understanding the 21&lt;sup&gt;st&lt;/sup&gt; century’s converging crises and exploring alternative pathways&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-official sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3 class=&quot;jp-relatedposts-headline&quot;&gt;&lt;em&gt;What to read next:&lt;/em&gt;&lt;/h3&gt;
&lt;/p&gt;
&lt;div class=&quot;taxonomies&quot; readability=&quot;7.8926174496644&quot;&gt;
&lt;p class=&quot;tax-categories taxonomy&quot;&gt;Categories: &lt;a href=&quot;https://thewire.in/category/economy/agriculture/&quot; rel=&quot;category tag&quot;&gt;Agriculture&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/category/economy/&quot; rel=&quot;category tag&quot;&gt;Economy&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/category/environment-2/&quot; rel=&quot;category tag&quot;&gt;Environment&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/category/featured/&quot; rel=&quot;category tag&quot;&gt;Featured&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;tax-tags taxonomy&quot;&gt;Tagged as: &lt;a href=&quot;https://thewire.in/tag/a-feast-of-vultures/&quot; rel=&quot;tag&quot;&gt;A Feast of Vultures&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/agriculture/&quot; rel=&quot;tag&quot;&gt;agriculture&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/climate-change/&quot; rel=&quot;tag&quot;&gt;climate change&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/deforestation/&quot; rel=&quot;tag&quot;&gt;deforestation&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/droughts-india/&quot; rel=&quot;tag&quot;&gt;droughts India&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/economic-growth/&quot; rel=&quot;tag&quot;&gt;economic growth&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/gandhi/&quot; rel=&quot;tag&quot;&gt;Gandhi&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/global-economic-slowdown/&quot; rel=&quot;tag&quot;&gt;global economic slowdown&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/granaries/&quot; rel=&quot;tag&quot;&gt;granaries&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/heat/&quot; rel=&quot;tag&quot;&gt;heat&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/india/&quot; rel=&quot;tag&quot;&gt;India&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/india-economy/&quot; rel=&quot;tag&quot;&gt;India economy&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/india-gdp/&quot; rel=&quot;tag&quot;&gt;India GDP&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/josy-joseph/&quot; rel=&quot;tag&quot;&gt;Josy Joseph&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/kumarappa/&quot; rel=&quot;tag&quot;&gt;Kumarappa&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/mukesh-ambani/&quot; rel=&quot;tag&quot;&gt;Mukesh Ambani&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/natgrid/&quot; rel=&quot;tag&quot;&gt;Natgrid&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/oxfam-report/&quot; rel=&quot;tag&quot;&gt;Oxfam report&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/pollution/&quot; rel=&quot;tag&quot;&gt;Pollution&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/raghu-raman/&quot; rel=&quot;tag&quot;&gt;Raghu Raman&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/rajasthan/&quot; rel=&quot;tag&quot;&gt;Rajasthan&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/reliance-industries/&quot; rel=&quot;tag&quot;&gt;Reliance Industries&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/reliance-industries-risk/&quot; rel=&quot;tag&quot;&gt;Reliance Industries’ Risk&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/sea-level/&quot; rel=&quot;tag&quot;&gt;Sea Level&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/temperature/&quot; rel=&quot;tag&quot;&gt;temperature&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/teri/&quot; rel=&quot;tag&quot;&gt;TERI&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/un/&quot; rel=&quot;tag&quot;&gt;UN&lt;/a&gt;, &lt;a href=&quot;https://thewire.in/tag/wildlife-habitats/&quot; rel=&quot;tag&quot;&gt;wildlife habitats&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Sun, 04 Feb 2018 07:13:27 +0000</pubDate>
<dc:creator>Santosh83</dc:creator>
<og:type>article</og:type>
<og:title>Debate: India Is Not 'Self-Destructing', It’s Being Destroyed Systematically - The Wire</og:title>
<og:description>A startlingly pessimistic vision of India’s looming environmental and economic collapse – aired by a senior business leader – deserves our urgent attention.</og:description>
<og:url>https://thewire.in/217773/india-systematic-destruction/</og:url>
<og:image>https://cdn.thewire.in/wp-content/uploads/2018/01/25191930/nuclear-explosion.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://thewire.in/217773/india-systematic-destruction/</dc:identifier>
</item>
<item>
<title>Best practices for user account, authorization and password management</title>
<link>https://cloudplatform.googleblog.com/2018/01/12-best-practices-for-user-account.html</link>
<guid isPermaLink="true" >https://cloudplatform.googleblog.com/2018/01/12-best-practices-for-user-account.html</guid>
<description>&lt;noscript&gt;
&lt;p&gt;&lt;span class=&quot;byline-author&quot;&gt;By Ian Maddox, GCP Solutions Architect&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Account management, authorization and password management can be tricky. For many developers, account management is a dark corner that doesn't get enough attention. For product managers and customers, the resulting experience often falls short of expectations.&lt;/p&gt;&lt;p&gt;Fortunately, &lt;a href=&quot;https://cloud.google.com/&quot; target=&quot;_blank&quot;&gt;Google Cloud Platform&lt;/a&gt; (GCP) brings several tools to help you make good decisions around the creation, secure handling and authentication of user accounts (in this context, anyone who identifies themselves to your system &lt;span&gt;—&lt;/span&gt; customers or internal users). Whether you're responsible for a website hosted in &lt;a href=&quot;https://cloud.google.com/kubernetes-engine/&quot; target=&quot;_blank&quot;&gt;Google Kubernetes Engine&lt;/a&gt;, an API on &lt;a href=&quot;https://cloud.google.com/apigee-api-management/&quot; target=&quot;_blank&quot;&gt;Apigee&lt;/a&gt;, an app using &lt;a href=&quot;https://firebase.google.com/&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt; or other service with authenticated users, this post will lay out the best practices to ensure you have a safe, scalable, usable account authentication system.&lt;/p&gt;
&lt;h3&gt;1. Hash those passwords&lt;/h3&gt;
&lt;br/&gt;My most important rule for account management is to safely store sensitive user information, including their password. You must treat this data as sacred and handle it appropriately.&lt;p&gt;Do not store plaintext passwords under any circumstances. Your service should instead store a cryptographically strong hash of the password that cannot be reversed &lt;span&gt;—&lt;/span&gt; created with, for example, PBKDF2, SHA3, Scrypt, or Bcrypt. The hash should be &lt;a href=&quot;https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet#Use_a_cryptographically_strong_credential-specific_salt&quot; target=&quot;_blank&quot;&gt;salted&lt;/a&gt; with a value unique to that specific login credential. Do not use deprecated hashing technologies such as MD5, SHA1 and under no circumstances should you use reversible encryption or &lt;a href=&quot;https://www.schneier.com/blog/archives/2011/04/schneiers_law.html&quot; target=&quot;_blank&quot;&gt;try to invent your own hashing algorithm&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;You should design your system assuming it will be compromised eventually. Ask yourself &quot;If my database were exfiltrated today, would my users' safety and security be in peril on my service or other services they use? What can we do to mitigate the potential for damage in the event of a leak?&quot;&lt;/p&gt;&lt;p&gt;Another point: If you could possibly produce a user's password in plaintext at any time outside of immediately after them providing it to you, there's a problem with your implementation.&lt;/p&gt;&lt;h3&gt;2. Allow for third-party identity providers if possible&lt;/h3&gt;
&lt;br/&gt;Third-party identity providers enable you to rely on a trusted external service to authenticate a user's identity. Google, Facebook and Twitter are commonly used providers.&lt;p&gt;You can implement external identity providers alongside your existing internal authentication system using a platform such as &lt;a href=&quot;https://firebase.google.com/docs/auth/&quot; target=&quot;_blank&quot;&gt;Firebase Auth&lt;/a&gt;. There are a number of benefits that come with Firebase Auth, including simpler administration, smaller attack surface and a multi-platform SDK. We'll touch on more benefits throughout this list. See our &lt;a href=&quot;https://firebase.google.com/docs/auth/case-studies/&quot; target=&quot;_blank&quot;&gt;case studies&lt;/a&gt; on companies that were able to integrate Firebase Auth in as little as one day.&lt;/p&gt;&lt;h3&gt;3. Separate the concept of user identity and user account&lt;/h3&gt;
&lt;br/&gt;Your users are not an email address. They're not a phone number. They're not the unique ID provided by an OAUTH response. Your users are the culmination of their unique, personalized data and experience within your service. A well designed user management system has low coupling and high cohesion between different parts of a user's profile.&lt;p&gt;Keeping the concepts of user account and credentials separate will greatly simplify the process of implementing third-party identity providers, allowing users to change their username and linking multiple identities to a single user account. In practical terms, it may be helpful to have an internal global identifier for every user and link their profile and authentication identity via that ID as opposed to piling it all in a single record.&lt;/p&gt;&lt;h3&gt;4. Allow multiple identities to link to a single user account&lt;/h3&gt;
&lt;br/&gt;A user who authenticates to your service using their &lt;a href=&quot;https://firebase.google.com/docs/auth/web/password-auth&quot; target=&quot;_blank&quot;&gt;username and password&lt;/a&gt; one week might choose &lt;a href=&quot;https://firebase.google.com/docs/auth/web/google-signin&quot; target=&quot;_blank&quot;&gt;Google Sign-In&lt;/a&gt; the next without understanding that this could create a duplicate account. Similarly, a user may have very good reason to link multiple email addresses to your service. If you properly separated user identity and authentication, it will be a simple process to &lt;a href=&quot;https://firebase.google.com/docs/auth/web/account-linking&quot; target=&quot;_blank&quot;&gt;link several identities&lt;/a&gt; to a single user.&lt;p&gt;Your backend will need to account for the possibility that a user gets part or all the way through the signup process before they realize they're using a new third-party identity not linked to their existing account in your system. This is most simply achieved by asking the user to provide a common identifying detail, such as email address, phone or username. If that data matches an existing user in your system, require them to also authenticate with a known identity provider and link the new ID to their existing account.&lt;/p&gt;&lt;h3&gt;5. Don't block long or complex passwords&lt;/h3&gt;
&lt;br/&gt;NIST has recently updated guidelines on &lt;a href=&quot;https://pages.nist.gov/800-63-3/sp800-63b.html#appendix-astrength-of-memorized-secrets&quot; target=&quot;_blank&quot;&gt;password complexity and strength&lt;/a&gt;. Since you are (or will be very soon) using a strong cryptographic hash for password storage, a lot of problems are solved for you. Hashes will always produce a fixed-length output no matter the input length, so your users should be able to use passwords as long as they like. If you must cap password length, only do so based on the maximum POST size allowable by your servers. This is commonly well above 1MB. Seriously.&lt;p&gt;Your hashed passwords will be comprised of a small selection of known ASCII characters. If not, you can easily convert a binary hash to &lt;a href=&quot;https://en.wikipedia.org/wiki/Base64&quot; target=&quot;_blank&quot;&gt;Base64&lt;/a&gt;. With that in mind, you should allow your users to use literally any characters they wish in their password. If someone wants a password made of &lt;a href=&quot;https://en.wikipedia.org/wiki/Klingon_alphabets&quot; target=&quot;_blank&quot;&gt;Klingon&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Emoji#Unicode_blocks&quot; target=&quot;_blank&quot;&gt;Emoji&lt;/a&gt; and control characters with whitespace on both ends, you should have no technical reason to deny them.&lt;/p&gt;&lt;h3&gt;6. Don't impose unreasonable rules for usernames&lt;/h3&gt;
&lt;br/&gt;It's not unreasonable for a site or service to require usernames longer than two or three characters, block hidden characters and prevent whitespace at the beginning and end of a username. However, some sites go overboard with requirements such as a minimum length of eight characters or by blocking any characters outside of 7-bit ASCII letters and numbers.&lt;p&gt;A site with tight restrictions on usernames may offer some shortcuts to developers, but it does so at the expense of users and extreme cases will drive some users away.&lt;/p&gt;&lt;p&gt;There are some cases where the best approach is to assign usernames. If that's the case for your service, ensure the assigned username is user-friendly insofar as they need to recall and communicate it. Alphanumeric IDs should avoid visually ambiguous symbols such as &quot;Il1O0.&quot; You're also advised to perform a dictionary scan on any randomly generated string to ensure there are no unintended messages embedded in the username. These same guidelines apply to auto-generated passwords.&lt;/p&gt;&lt;h3&gt;7. Allow users to change their username&lt;/h3&gt;
&lt;br/&gt;It's surprisingly common in legacy systems or any platform that provides email accounts not to allow users to change their username. There are &lt;a href=&quot;https://www.computerworld.com/article/2838283/facebook-yahoo-prevent-use-of-recycled-email-addresses-to-hijack-accounts.html&quot; target=&quot;_blank&quot;&gt;very good reasons&lt;/a&gt; not to automatically release usernames for reuse, but long-term users of your system will eventually come up with a good reason to use a different username and they likely won't want to create a new account.&lt;p&gt;You can honor your users' desire to change their usernames by allowing aliases and letting your users choose the primary alias. You can apply any business rules you need on top of this functionality. Some orgs might only allow one username change per year or prevent a user from displaying anything but their primary username. Email providers might ensure users are thoroughly informed of the risks before detaching an old username from their account or perhaps forbid unlinking old usernames entirely.&lt;/p&gt;&lt;p&gt;Choose the right rules for your platform, but make sure they allow your users to grow and change over time.&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;8. Let your users delete their accounts&lt;/h3&gt;
&lt;br/&gt;A surprising number of services have no self-service means for a user to delete their account and associated data. There are a number of good reasons for a user to close an account permanently and delete all personal data. These concerns need to be balanced against your security and compliance needs, but most regulated environments provide specific guidelines on data retention. A common solution to avoid compliance and hacking concerns is to let users schedule their account for automatic future deletion.&lt;p&gt;In some circumstances, you may be &lt;a href=&quot;http://ec.europa.eu/justice/data-protection/files/factsheets/factsheet_data_protection_en.pdf&quot; target=&quot;_blank&quot;&gt;legally required to comply&lt;/a&gt; with a user's request to delete their data in a timely manner. You also greatly increase your exposure in the event of a data breach where the data from &quot;closed&quot; accounts is leaked.&lt;/p&gt;&lt;h3&gt;9. Make a conscious decision on session length&lt;/h3&gt;
&lt;br/&gt;An often overlooked aspect of security and authentication is &lt;a href=&quot;https://firebase.google.com/docs/auth/web/auth-state-persistence&quot; target=&quot;_blank&quot;&gt;session length&lt;/a&gt;. Google puts a lot of effort into &lt;a href=&quot;https://support.google.com/accounts/answer/7162782?co=GENIE.Platform%3DAndroid&amp;amp;hl=en&quot; target=&quot;_blank&quot;&gt;ensuring users are who they say they are&lt;/a&gt; and will double-check based on certain events or behaviors. Users can take steps to &lt;a href=&quot;https://support.google.com/accounts/answer/7519408?hl=en&amp;amp;ref_topic=7189123&quot; target=&quot;_blank&quot;&gt;increase their security even further&lt;/a&gt;.&lt;p&gt;Your service may have good reason to keep a session open indefinitely for non-critical analytics purposes, but there should be &lt;a href=&quot;https://pages.nist.gov/800-63-3/sp800-63b.html#aal1reauth&quot; target=&quot;_blank&quot;&gt;thresholds&lt;/a&gt; after which you ask for password, 2nd factor or other user verification.&lt;/p&gt;&lt;p&gt;Consider how long a user should be able to be inactive before re-authenticating. Verify user identity in all active sessions if someone performs a password reset. Prompt for authentication or 2nd factor if a user changes core aspects of their profile or when they're performing a sensitive action. Consider whether it makes sense to disallow logging in from more than one device or location at a time.&lt;/p&gt;&lt;p&gt;When your service does expire a user session or require re-authentication, prompt the user in real-time or provide a mechanism to preserve any activity they have unsaved since they were last authenticated. It's very frustrating for a user to fill out a long form, submit it some time later and find out all their input has been lost and they must log in again.&lt;/p&gt;&lt;h3&gt;10. Use 2-Step Verification&lt;/h3&gt;
&lt;br/&gt;Consider the practical impact on a user of having their account stolen when choosing from &lt;a href=&quot;https://www.google.com/landing/2step/&quot; target=&quot;_blank&quot;&gt;2-Step Verification&lt;/a&gt; (also known as 2-factor authorization or just 2FA) methods. SMS 2FA auth has been &lt;a href=&quot;https://pages.nist.gov/800-63-3/sp800-63b.html&quot; target=&quot;_blank&quot;&gt;deprecated by NIST&lt;/a&gt; due to multiple weaknesses, however, it may be the most secure option your users will accept for what they consider a trivial service. Offer the most secure 2FA auth you reasonably can. Enabling third-party identity providers and piggybacking on their 2FA is a simple means to boost your security without great expense or effort.&lt;h3&gt;11. Make user IDs case insensitive&lt;/h3&gt;
&lt;br/&gt;Your users don't care and may not even remember the exact case of their username. Usernames should be fully case-insensitive. It's trivial to store usernames and email addresses in all lowercase and transform any input to lowercase before comparing.&lt;p&gt;Smartphones represent an ever-increasing percentage of user devices. Most of them offer autocorrect and automatic capitalization of plain-text fields. Preventing this behavior at the UI level might not be desirable or completely effective, and your service should be robust enough to handle an email address or username that was unintentionally auto-capitalized.&lt;/p&gt;&lt;h3&gt;12. Build a secure auth system&lt;/h3&gt;
&lt;br/&gt;If you're using a service like Firebase Auth, a lot of security concerns are handled for you automatically. However, your service will always need to be engineered properly to prevent abuse. Core considerations include implementing a &lt;a href=&quot;https://firebase.google.com/docs/auth/web/manage-users#send_a_password_reset_email&quot; target=&quot;_blank&quot;&gt;password reset&lt;/a&gt; instead of password retrieval, detailed account activity logging, rate limiting login attempts, locking out accounts after too many unsuccessful login attempts and requiring 2-factor authentication for unrecognized devices or accounts that have been idle for extended periods. There are many more aspects to a secure authentication system, so please see the section below for links to more information.&lt;br/&gt;&lt;h3&gt;&lt;br/&gt;Further reading&lt;/h3&gt;
&lt;br/&gt;There are a number of excellent resources available to guide you through the process of developing, updating or migrating your account and authentication management system. I recommend the following as a starting place:&lt;br/&gt;&lt;/noscript&gt;</description>
<pubDate>Sat, 03 Feb 2018 22:40:00 +0000</pubDate>
<dc:creator>mooreds</dc:creator>
<og:title>12 best practices for user account, authorization and password management</og:title>
<og:url>https://cloudplatform.googleblog.com/2018/01/12-best-practices-for-user-account.html</og:url>
<og:type>article</og:type>
<og:description>By Ian Maddox, GCP Solutions Architect Account management, authorization and password management can be tricky. For many developers, accou...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cloudplatform.googleblog.com/2018/01/12-best-practices-for-user-account.html</dc:identifier>
</item>
<item>
<title>“Invisible Electrostatic Wall” at 3M adhesive tape plant (1996)</title>
<link>http://amasci.com/weird/unusual/e-wall.html?utm=email</link>
<guid isPermaLink="true" >http://amasci.com/weird/unusual/e-wall.html?utm=email</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/AskReddit/comments/4jb24s/what_are_some_weird_real_life_xfiles_type/d35db1i/&quot;&gt;echisholm&lt;/a&gt; 5/2016&lt;br/&gt;&lt;em&gt;Have a relative (sort of) who works at a 3M plant. Shit still occasionally happens.&lt;br/&gt;&amp;gt; You can't just say that and go away!! How are you not irresistibly&lt;br/&gt;&amp;gt; interested in that?? I would've interrogated that relative so hard&lt;br/&gt;It just came up in passing at Thanksgiving! I don't really know him that well; he's an in-law. He mentioned being able to throw small washers and bolts at the field and watching them get repelled. People got interested, and so someone came with a voltmeter, and after throwing a couple more, they checked for voltage, and there was a residual charge after they finally caught on on a plastic sheet to prevent immediate grounding. It also had a very slight magnetic field. It's apparently fairly common, but engineering hasn't come up with a solid explanation why.&lt;/em&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ALSO: &lt;a href=&quot;https://www.reddit.com/r/AskReddit/comments/4jb24s/what_are_some_weird_real_life_xfiles_type/d35dxw1/&quot;&gt;dc469&lt;/a&gt; 5/2016&lt;br/&gt;&lt;em&gt;I met this guy at an ESD meeting in austin once. He said the strength of the field maxed out his equipment at a distance so he couldn't get a maximum measurement.&lt;br/&gt;After he published the paper he was contacted by NASA and all the three letter agencies asking for more info. He wanted to experiment around with it but no company had millions to throw into such a project (presumably, the government did). It had to be a pretty narrow window of temperature, pressure, humidity, etc. They kept the garage door open so that's where the insects and sparrows got sucked in (which obviously ruined the product).&lt;br/&gt;He said it was actually known to the technicians for awhile before he experienced it and they just were kinda like &quot;meh&quot;. Eventually they fixed the grounding issue on the machine and the problem never popped up again.&lt;br/&gt;edit: found the ESD website. David Swenson apparently is still with them on their board of directors. http://centxesdassoc.homestead.com/&lt;br/&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;div id=&quot;&quot;&gt;
&lt;p&gt;&lt;span&gt;Problems: coulomb forces would be expected to &lt;em&gt;attract&lt;/em&gt; a person into the &quot;chamber&quot; formed by the PP film, and the attractive force should increase linearly across distance. There should be no &quot;wall&quot; in the center, a discrete wall is repulsive, also nonlinear.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If for some reason a person was repelled from the center of the chamber rather than being attracted, there still should be no &quot;wall,&quot; since the repulsion force should exist over a large distance; it should act like a deep pillow which exerts more and more force as one moves deeper into it. Large fuzzy fields, this is how magnets and iron behave, and this is how e-fields and conductive objects should also behave.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A thought: unspooling of film typically generates a much higher net charge on the long piece of film than on the small surface of the spool. However, since charge is created in pairs, and net charge is conserved, the imbalances of charge &lt;em&gt;must&lt;/em&gt; be equal and opposite. The charge on the entire length of moving film &lt;em&gt;must&lt;/em&gt; be equal in magnitude to the charge on the spool. Yet the charge on the film is very large and is continuously increasing. The limited surface-charge on the spool required that opposite charge is being &lt;em&gt;lost through some unseen path.&lt;/em&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Very probably the spool is spewing out enormous quantities of ionized air with polarity opposite that of the charge on the moving plastic film.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Charged air would be created by discharge in the cleft between film and spool as the film was peeled from the spool. I wonder if film was being peeled from the top of the spool, so that any ionized air created in the cleft would be launched into the &quot;tent-chamber&quot; region? (If it was peeled from the bottom of the spool, the charged air would end up outside the &quot;tent.&quot;) Or, if a corona discharge arises in the cleft between film and spool, perhaps the UV and e-fields of this corona can ionize the air on both sides of the exiting plastic film, and spray the charged air everywhere.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So, if the charged &quot;tent&quot; of film is negative in the above situation, and if a large quantity of positively charged air is being generated by the spool, then perhaps the &quot;invisible wall&quot; is caused by a cloud of suspended air ions held in position by e-fields. Perhaps it's a pressure gradient created by ionized air trapped under the tent by electrostatic attraction. Yet again this effect would be expected to create a diffuse zone of increasing force, not a &quot;wall&quot;, but an &quot;invisible pillow.&quot; Added note: concrete floors behave as conductors (resistors) in this situation. Where megavolts at microamps are involved, the division between insulators and conductors is at 10^6/10^-6 = 1000 gigaohms. Concrete resistivity is in the realm of megohms, so it behaves like a grounded metal sheet.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, a volume of charged air is somewhat analogous to iron filings near a magnet. If a solid sheet of iron filings is held in place by a magnet, then a literal &quot;wall&quot; is created, and this wall will resist penetration by nonferrous objects. If in the above manufacturing plant, a sheet of highly charged air is for some reason being held in place by the fields created by the charged film, then a transparent &quot;wall&quot; made of charged air would come into being. It might produce pressures on surfaces, and resist penetration by human bodies.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My question is this: if the entire situation could be turned on its side, so the &quot;invisible wall&quot; became an &quot;invisible floor&quot;, could a person *&lt;em&gt;stand&lt;/em&gt;* on it? Have we discovered the long-sought &quot;Zero-G waterbed?&quot; :) - B.B.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Sat, 03 Feb 2018 20:27:22 +0000</pubDate>
<dc:creator>sergiotapia</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://amasci.com/weird/unusual/e-wall.html?utm=email</dc:identifier>
</item>
<item>
<title>HiFive – RISC-V-based Linux development board</title>
<link>https://www.sifive.com/products/hifive-unleashed/</link>
<guid isPermaLink="true" >https://www.sifive.com/products/hifive-unleashed/</guid>
<description>&lt;p&gt;SiFive will be hosting our first hackathon March 12-14, 2018 in Portland, Oregon in conjunction with the &lt;a href=&quot;https://events.linuxfoundation.org/events/elc-openiot-north-america-2018/&quot; target=&quot;_blank&quot;&gt;Embedded Linux Conference&lt;/a&gt;! This will be your chance to be the first to get access to the HiFive Unleashed and meet all the key folks working on RISC-V development. Sign up below:&lt;/p&gt;
</description>
<pubDate>Sat, 03 Feb 2018 16:30:50 +0000</pubDate>
<dc:creator>hucker</dc:creator>
<og:url>https://www.sifive.com/products/hifive-unleashed/</og:url>
<og:title>HiFive Unleashed</og:title>
<og:description>SiFive is the first fabless semiconductor company to build customized silicon based on the free and open RISC-V instruction set architecture.</og:description>
<og:image>https://www.sifive.com/assets/images/sifive-social-media-logo-bbdd963502fb760070bf68850711c0a2.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sifive.com/products/hifive-unleashed/</dc:identifier>
</item>
<item>
<title>How Google Chrome’s ad blocker works</title>
<link>https://www.ctrl.blog/entry/chrome-adblocker</link>
<guid isPermaLink="true" >https://www.ctrl.blog/entry/chrome-adblocker</guid>
<description>&lt;p&gt;Google Chrome will begin blocking ads on some websites by default on &lt;time datetime=&quot;2018-02-15&quot;&gt;15th February 2018&lt;/time&gt;. I took a look at Chromium source-code to find out a bit more about how this new ad blocker will work.&lt;/p&gt;
&lt;span id=&quot;more-7231&quot;/&gt;
&lt;p&gt;At the end of &lt;time&gt;2017&lt;/time&gt;, Google Chrome had nearly 55 % of the web browser market share across all devices worldwide, according to StatCounter.&lt;/p&gt;
&lt;p&gt;Google have announced that their Google Chrome web browser will block every ad on websites that are not compliant with the Better Ads Standards by default. Google admits that they’re taking action against the types of web advertisements that annoy people the most in an order to halt the rise in ad blockers that block all forms of advertisements on all websites.&lt;/p&gt;
&lt;p&gt;The Better Ads Standards are a set of rules, one set for desktop and one for mobile, that define unacceptably intrusive, distracting, and annoying advertisement formats. The standards ban ad formats like auto-playing video ads, large ads that stick to the screen when you scroll, and interstitial ads. The standards are created by the Coalition for Better Ads, which includes advertisement industry organizations and companies like Microsoft and Google.&lt;/p&gt;
&lt;section&gt;&lt;h3&gt;Powered by Google Safe Browsing&lt;/h3&gt;
&lt;p&gt;Google Chrome already blocks malware, fraud, phishing, pop-up/under/-redirects, and other unwanted behavior through their Google Safe Browsing service. Chrome checks every website you visit against a list of malicious websites that it periodically downloads from Safe Browsing.&lt;/p&gt;
&lt;p&gt;Google have extended the Safe Browsing service to include a new type of threat called “BETTER_ADS”. Websites that don’t comply with the Better Ads Standards will be labeled as being a threat of this type, and the browser can take actions against them according to user settings. Ad blocking will be enabled by default on desktop and mobile. Users can opt-out of the ad blocker by going to Chrome Settings: Content Settings: Ads and disabling the feature.&lt;/p&gt;
&lt;aside class=&quot;adco adu-in&quot;&gt;&lt;small&gt;Advertisement&lt;/small&gt;&lt;ins class=&quot;adsbygoogle adu-fb adu-fr&quot; data-ad-client=&quot;ca-pub-1835247814769107&quot; data-ad-format=&quot;rectangle&quot; data-ad-slot=&quot;9890932244&quot;/&gt;&lt;/aside&gt;&lt;p&gt;Safe Browsing is built-in to many web browsers including Google Chrome, Mozilla Firefox, and Safari. Not all web browsers block all types of unwanted software or behavior that the Safe Browsing service can identify. At &lt;time datetime=&quot;2018-02-01&quot;&gt;the time of publication&lt;/time&gt;, this new type of threat data isn’t available in the public &lt;abbr title=&quot;Application Programming Interface&quot;&gt;API&lt;/abbr&gt; for Safe Browsing that Google offers to third-party developers. However, Google might offer the list of websites that don’t comply with the Better Ads Standards to other web browsers at some point in the future.&lt;/p&gt;
&lt;p&gt;Which websites end up on the blacklist is entirely at Google’s discression. Google is going through an analyzing websites to determine whether they meet the Better Ads Standards or end up on the blacklist. Google offer website publishers an &lt;a href=&quot;https://www.google.com/webmasters/tools/ad-experience-unverified&quot;&gt;Ad Experiences Report&lt;/a&gt; that identifies whether or not a publisher’s websites are on the list, and what the potential problems with the publisher’s website are.&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;So how is Google actually going to block advertisement on offending websites?&lt;/p&gt;
&lt;section&gt;&lt;h3&gt;EasyList and EasyPrivacy blocklists&lt;/h3&gt;
&lt;p&gt;Google Chrome will periodically download a set of block rules, which consist of two popular ad blocking lists: EasyList (advertisement) and EasyPrivacy (tracking). EasyList and EasyPrivacy is built-in to many popular ad blocking extension including uBlock Origin and AdBlock Plus, as well as in privacy oriented apps and web browsers. Google’s ad blocking capabilities will be on par with the best tools available from day one.&lt;/p&gt;
&lt;p&gt;These lists are used to limit what resources are loaded on websites identified by Safe Browsing as being non-compliant with the Better Ad Standards. Google’s implementation is a bit different from how most extension as blocking is enforced at an earlier stage in the rendering processes than extensions have access to.&lt;/p&gt;
&lt;p&gt;Google appears to be shipping the entirety of EasyList and EasyPrivacy; which includes blocking rules for Google’s own AdSense and DoubleClick advertisement platforms as well as Google Analytics, and other Google services.&lt;/p&gt;
&lt;a href=&quot;https://www.ctrl.blog/entry/chrome-adblocker/chrome-block-ads-desktop-settings&quot; rel=&quot;attachment wp-att-7236&quot;&gt;&lt;img src=&quot;https://www.ctrl.blog/media/chrome-block-ads-desktop-settings-1024x243.png&quot; alt=&quot;Chrome Site Settings for Ads&quot; width=&quot;1024&quot; height=&quot;243&quot; class=&quot;alignnone size-large wp-image-7236&quot; srcset=&quot;https://www.ctrl.blog/media/chrome-block-ads-desktop-settings-1024x243.png 1024w, https://www.ctrl.blog/media/chrome-block-ads-desktop-settings-300x71.png 300w, https://www.ctrl.blog/media/chrome-block-ads-desktop-settings-704x167.png 704w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Chrome’s user-interface permits users to allow ads on a blocklisted website. However, users can’t add their own websites to the blocklist. The user interface on desktop is a bit confusing when it’s referring to “Allow” and “Block” in Site Settings. The actual choices users have are Block-if-on-the-blocklist or Allow.&lt;/p&gt;
&lt;p&gt;I’d personally like to see Google give their users the power to enable the blocklist on a per-website basis themselves. Users who want this level of granular control still have to install a third-party ad blocking extension.&lt;/p&gt;
&lt;p&gt;Power-users can force-update the blocklists manually by going to &lt;kbd&gt;chrome://components&lt;/kbd&gt; and updating the “Subresource Filter Rules” component.&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;h3&gt;Notifications&lt;/h3&gt;
&lt;p&gt;Users will be notified of any blocking action using either a notification in the address field (“the omnibox”) on desktop, or with a notification toolbar on mobile. These work the same as similar pop-ups used for cookie and pop-up blocking.&lt;/p&gt;
&lt;a href=&quot;https://www.ctrl.blog/entry/chrome-adblocker/chrome-blocked-ads-desktop&quot; rel=&quot;attachment wp-att-7233&quot;&gt;&lt;img src=&quot;https://www.ctrl.blog/media/chrome-blocked-ads-desktop-300x193.png&quot; alt=&quot;Chrome UI: blocking ads on desktop&quot; width=&quot;300&quot; height=&quot;193&quot; class=&quot;alignnone size-medium wp-image-7233&quot; srcset=&quot;https://www.ctrl.blog/media/chrome-blocked-ads-desktop-300x193.png 300w, https://www.ctrl.blog/media/chrome-blocked-ads-desktop-617x396.png 617w, https://www.ctrl.blog/media/chrome-blocked-ads-desktop.png 696w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://www.ctrl.blog/entry/chrome-adblocker/chrome-blocked-ads-mobile&quot; rel=&quot;attachment wp-att-7235&quot;&gt;&lt;img src=&quot;https://www.ctrl.blog/media/chrome-blocked-ads-mobile-300x241.png&quot; alt=&quot;Chrome UI: blocking ads on mobile&quot; width=&quot;300&quot; height=&quot;241&quot; class=&quot;alignnone size-medium wp-image-7235&quot; srcset=&quot;https://www.ctrl.blog/media/chrome-blocked-ads-mobile-300x241.png 300w, https://www.ctrl.blog/media/chrome-blocked-ads-mobile-1024x821.png 1024w, https://www.ctrl.blog/media/chrome-blocked-ads-mobile-494x396.png 494w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Ad blocking notification on desktop (first/left) and Android (last/right).&lt;/p&gt;
&lt;p&gt;The notification gives users the option to Allow ads to be loaded and whitelist the current website. The notifications can’t be disabled without disabling the ad blocker.&lt;/p&gt;
&lt;p&gt;To be honest, I don’t believe any user wants to see these notifications. It’s subtle enough on desktop, but the info toolbar on mobile takes up a relatively large part of the available space on the screen. However, notifying users every time Chrome blocks any advertisements makes the system somewhat transparent — even though users frankly won’t care one bit.&lt;/p&gt;
&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;It will be interesting keep an eye on this and see whether Chrome’s new built-in ad blocker will be enough to have any affect on the number of users who install ad blockers. In an ideal situation, the Better Ads Standards will remove enough pain-points for users to accept the remaining ads and don’t be tempted/reminded to install a third-party ad blocker that blocks all online advertising.&lt;/p&gt;
&lt;footer&gt;&lt;h4&gt;Sources&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://chromium.googlesource.com/chromium/src.git/+/2fd18acbc089387f9db59c2b152eb1bea8cd7b76/components/safe_browsing/db/util.h&quot;&gt;safe_browsing/db/util.h&lt;/a&gt;, commit 2fd18acbc0 &lt;time&gt;2018-01-12&lt;/time&gt;,Chromium code repository, Google Git, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromium.googlesource.com/chromium/src.git/+/master/components/safe_browsing/db/v4_get_hash_protocol_manager.cc&quot;&gt;safe_browsing/db/v4_get_hash_protocol_manager.cc&lt;/a&gt;, commit 2fd18acbc0 &lt;time&gt;2018-01-12&lt;/time&gt;,Chromium code repository, Google Git, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gs.statcounter.com/browser-market-share#quarterly-201704-201704-bar&quot;&gt;Browser Market Share Worldwide Q4 2017&lt;/a&gt;, &lt;time&gt;2018-01&lt;/time&gt;, Global statistics, StatCounter&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.betterads.org/coalition-for-better-ads-to-introduce-better-ads-experience-program/&quot;&gt;Coalition for Better Ads to Introduce Better Ads Experience Program&lt;/a&gt;, &lt;time&gt;2017-12-18&lt;/time&gt;, Coalition for Better Ads&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromium.googlesource.com/chromium/src.git/+/ba2d685c04f9b1a228caa4dc0a0c9565b5e093f2/components/subresource_filter/content/browser/content_activation_list_utils.cc&quot;&gt;subresource_filter/content/content_activation_list_utils.cc&lt;/a&gt;, commit ba2d685c04, &lt;time&gt;2017-11-10&lt;/time&gt;, Chromium code repository, Google Git, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/safe-browsing/v4/reference/rest/v4/ThreatType&quot;&gt;ThreatType&lt;/a&gt;, &lt;time&gt;2017-07-31&lt;/time&gt;, Google Safe Browsing Safe Browsing APIs (v4), Google Developers portal, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.blog.google/topics/journalism-news/building-better-web-everyone/&quot;&gt;Building a better web for everyone&lt;/a&gt;, &lt;time&gt;2017-07-01&lt;/time&gt;, Sridhar Ramaswamy, Journalism &amp;amp; News, The Keyword, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5738264052891648&quot;&gt;Stop showing ads on websites that are not compliant with the Better Ads Standards&lt;/a&gt;, &lt;time&gt;2017-06-27&lt;/time&gt;, Chrome Platform Status, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2017/06/improving-advertising-on-web.html&quot;&gt;Improving advertising on the web&lt;/a&gt;, &lt;time&gt;2017-06-01&lt;/time&gt;, Rahul Roy-Chowdhury, Chromium Blog, Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20170329180103/https://www.betterads.org/standards/&quot;&gt;Initial Better Ads Standards: Least preferred ad experiences for desktop web and mobile web&lt;/a&gt;, &lt;time&gt;2017-03&lt;/time&gt;, Coalition for Better Ads&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Disclaimer: This website is funded through the Google AdSense advertisement platform.&lt;/p&gt;
&lt;/footer&gt;</description>
<pubDate>Sat, 03 Feb 2018 13:34:57 +0000</pubDate>
<dc:creator>d2wa</dc:creator>
<og:title>Here’s how Google Chrome’s new ad blocker works</og:title>
<og:description>Google Chrome will soon begin to block ads on some websites by default. I dug up some more information about how it will work.</og:description>
<og:url>https://www.ctrl.blog/entry/chrome-adblocker</og:url>
<og:type>article</og:type>
<og:image>https://www.ctrl.blog/media/chrome-block-intrusive-ads-1072x603.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ctrl.blog/entry/chrome-adblocker</dc:identifier>
</item>
<item>
<title>Video editing with Python</title>
<link>https://github.com/Zulko/moviepy</link>
<guid isPermaLink="true" >https://github.com/Zulko/moviepy</guid>
<description>&lt;h3&gt;README.rst&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;a href=&quot;https://pypi.python.org/pypi/moviepy&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;MoviePy page on the Python Package Index&quot; src=&quot;https://camo.githubusercontent.com/4c376aaa62b9407b6ab16047a23995122a374473/68747470733a2f2f62616467652e667572792e696f2f70792f6d6f76696570792e737667&quot; data-canonical-src=&quot;https://badge.fury.io/py/moviepy.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/movie-py/Lobby&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Discuss MoviePy on Gitter&quot; src=&quot;https://camo.githubusercontent.com/6d464b2e9fd24a88f76d9b10afa0166dc48beeda/68747470733a2f2f6261646765732e6769747465722e696d2f6d6f7669652d70792f6769747465722e706e67&quot; data-canonical-src=&quot;https://badges.gitter.im/movie-py/gitter.png&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/Zulko/moviepy&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Build status on travis-ci&quot; src=&quot;https://camo.githubusercontent.com/3307bbbe926004a5f72e52772aa45076d4beec85/68747470733a2f2f7472617669732d63692e6f72672f5a756c6b6f2f6d6f76696570792e7376673f6272616e63683d6d6173746572&quot; data-canonical-src=&quot;https://travis-ci.org/Zulko/moviepy.svg?branch=master&quot;/&gt;&lt;/a&gt;
&lt;p&gt;MoviePy (full &lt;a href=&quot;http://zulko.github.io/moviepy/&quot; rel=&quot;nofollow&quot;&gt;documentation&lt;/a&gt;) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the &lt;a href=&quot;http://zulko.github.io/moviepy/gallery.html&quot; rel=&quot;nofollow&quot;&gt;gallery&lt;/a&gt; for some examples of use.&lt;/p&gt;
&lt;p&gt;MoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3. Here it is in action in an IPython notebook:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Zulko/moviepy/master/docs/demo_preview.jpeg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;[logo]&quot; src=&quot;https://raw.githubusercontent.com/Zulko/moviepy/master/docs/demo_preview.jpeg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;In this example we open a video file, select the subclip between t=50s and t=60s, add a title at the center of the screen, and write the result to a new file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; moviepy.editor &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;

video &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; VideoFileClip(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;myHolidays.mp4&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).subclip(&lt;span class=&quot;pl-c1&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;pl-c1&quot;&gt;60&lt;/span&gt;)

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Make the text. Many more options are available.&lt;/span&gt;
txt_clip &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ( TextClip(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;My Holidays 2013&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;pl-v&quot;&gt;fontsize&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;70&lt;/span&gt;,&lt;span class=&quot;pl-v&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;white&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
             .set_position(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;center&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
             .set_duration(&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;) )

result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; CompositeVideoClip([video, txt_clip]) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Overlay text on video&lt;/span&gt;
result.write_videofile(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;myHolidays_edited.webm&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;pl-v&quot;&gt;fps&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;25&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Many options...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;MoviePy depends on the Python modules &lt;a href=&quot;http://www.scipy.org/install.html&quot; rel=&quot;nofollow&quot;&gt;Numpy&lt;/a&gt;, &lt;a href=&quot;http://imageio.github.io/&quot; rel=&quot;nofollow&quot;&gt;imageio&lt;/a&gt;, &lt;a href=&quot;https://pypi.python.org/pypi/decorator&quot; rel=&quot;nofollow&quot;&gt;Decorator&lt;/a&gt;, and &lt;a href=&quot;https://github.com/noamraph/tqdm&quot;&gt;tqdm&lt;/a&gt;, which will be automatically installed during MoviePy's installation. The software FFMPEG should be automatically downloaded/installed (by imageio) during your first use of MoviePy (installation will take a few seconds). If you want to use a specific version of FFMPEG, follow the instructions in &lt;code&gt;config_defaults.py&lt;/code&gt;. In case of trouble, provide feedback.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installation by hand:&lt;/strong&gt; download the sources, either from &lt;a href=&quot;https://pypi.python.org/pypi/moviepy&quot; rel=&quot;nofollow&quot;&gt;PyPI&lt;/a&gt; or, if you want the development version, from &lt;a href=&quot;https://github.com/Zulko/moviepy&quot;&gt;GitHub&lt;/a&gt;, unzip everything into one folder, open a terminal and type:&lt;/p&gt;
&lt;pre&gt;
$ (sudo) python setup.py install
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Installation with pip:&lt;/strong&gt; if you have &lt;code&gt;pip&lt;/code&gt; installed, just type this in a terminal:&lt;/p&gt;
&lt;pre&gt;
$ (sudo) pip install moviepy
&lt;/pre&gt;
&lt;p&gt;If you have neither &lt;code&gt;setuptools&lt;/code&gt; nor &lt;code&gt;ez_setup&lt;/code&gt; installed, the command above will fail. In this case type this before installing:&lt;/p&gt;
&lt;pre&gt;
$ (sudo) pip install ez_setup
&lt;/pre&gt;

&lt;h3&gt;Optional but useful dependencies&lt;/h3&gt;
&lt;p&gt;You can install &lt;code&gt;moviepy&lt;/code&gt; with all dependencies via:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ (sudo) pip install moviepy[optional]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot; rel=&quot;nofollow&quot;&gt;ImageMagick&lt;/a&gt; is not strictly required, but needed if you want to incorporate texts. It can also be used as a backend for GIFs, though you can also create GIFs with MoviePy without ImageMagick.&lt;/p&gt;
&lt;p&gt;Once you have installed ImageMagick, it will be automatically detected by MoviePy, &lt;strong&gt;except on Windows!&lt;/strong&gt; Windows users, before installing MoviePy by hand, need to edit &lt;code&gt;moviepy/config_defaults.py&lt;/code&gt; to provide the path to the ImageMagick binary, which is called convert. It should look like this&lt;/p&gt;
&lt;pre&gt;
IMAGEMAGICK_BINARY = &quot;C:\\Program Files\\ImageMagick_VERSION\\convert.exe&quot;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pygame.org/download.shtml&quot; rel=&quot;nofollow&quot;&gt;PyGame&lt;/a&gt; is needed for video and sound previews (not relevant if you intend to work with MoviePy on a server but essential for advanced video editing by hand).&lt;/p&gt;
&lt;p&gt;For advanced image processing, you will need one or several of the following packages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Python Imaging Library (PIL) or, even better, its branch &lt;a href=&quot;http://pillow.readthedocs.org/en/latest/&quot; rel=&quot;nofollow&quot;&gt;Pillow&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.scipy.org/&quot; rel=&quot;nofollow&quot;&gt;Scipy&lt;/a&gt; (for tracking, segmenting, etc.) can be used to resize video clips if PIL and OpenCV are not installed.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scikit-image.org/download.html&quot; rel=&quot;nofollow&quot;&gt;Scikit Image&lt;/a&gt; may be needed for some advanced image manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/opencvlibrary/files/&quot; rel=&quot;nofollow&quot;&gt;OpenCV 2.4.6&lt;/a&gt; or a more recent version (one that provides the package &lt;code&gt;cv2&lt;/code&gt;) may be needed for some advanced image manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://matplotlib.org/&quot; rel=&quot;nofollow&quot;&gt;Matplotlib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Once you have installed it, ImageMagick will be automatically detected by MoviePy, (except for windows users and Ubuntu 16.04LTS users).&lt;/p&gt;
&lt;p&gt;For Windows users, before installing MoviePy by hand, go into the &lt;code&gt;moviepy/config_defaults.py&lt;/code&gt; file and provide the path to the ImageMagick binary called &lt;code&gt;magick&lt;/code&gt;. It should look like this&lt;/p&gt;
&lt;pre&gt;
IMAGEMAGICK_BINARY = &quot;C:\\Program Files\\ImageMagick_VERSION\\magick.exe&quot;
&lt;/pre&gt;
&lt;p&gt;If you are using an older version of ImageMagick, keep in mind the name of the executable is not &lt;code&gt;magick.exe&lt;/code&gt; but &lt;code&gt;convert.exe&lt;/code&gt;. In that case, the IMAGEMAGICK_BINARY property should be &lt;code&gt;C:\\Program Files\\ImageMagick_VERSION\\convert.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For Ubuntu 16.04LTS users, after installing MoviePy on the terminal, IMAGEMAGICK will not be detected by moviepy. This bug can be fixed. Modify the file in this directory: /etc/ImageMagick-6/policy.xml, comment out the statement &amp;lt;!-- &amp;lt;policy domain=&quot;path&quot; rights=&quot;none&quot; pattern=&quot;@*&quot; /&amp;gt; --&amp;gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pygame.org/download.shtml&quot; rel=&quot;nofollow&quot;&gt;PyGame&lt;/a&gt; is needed for video and sound previews (useless if you intend to work with MoviePy on a server but really essential for advanced video editing &lt;em&gt;by hand&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;For instance, using the method &lt;code&gt;clip.resize&lt;/code&gt; requires that at least one of Scipy, PIL, Pillow or OpenCV is installed.&lt;/p&gt;

&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Running build_docs has additional dependencies that require installation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ (sudo) pip install moviepy[docs]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The documentation can be generated and viewed via:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ python setup.py build_docs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can pass additional arguments to the documentation build, such as clean build:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ python setup.py build_docs -E&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More information is available from the &lt;a href=&quot;http://www.sphinx-doc.org/en/master/setuptools.html&quot; rel=&quot;nofollow&quot;&gt;Sphinx&lt;/a&gt; documentation.&lt;/p&gt;

&lt;h2&gt;Running Tests&lt;/h2&gt;
&lt;p&gt;The testing suite can be executed via:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ python setup.py test&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Running the test suite in this manner will install the testing dependencies. If you opt to run the test suite manually, you can install the dependencies via:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ (sudo) pip install moviepy[test]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Contribute&lt;/h2&gt;
&lt;p&gt;MoviePy is open-source software originally written by &lt;a href=&quot;https://github.com/Zulko&quot;&gt;Zulko&lt;/a&gt; and released under the MIT licence. The project is hosted on &lt;a href=&quot;https://github.com/Zulko/moviepy&quot;&gt;GitHub&lt;/a&gt;, where everyone is welcome to contribute, ask for help or simply give feedback.&lt;/p&gt;
&lt;p&gt;You can also discuss the project on &lt;a href=&quot;http://www.reddit.com/r/moviepy/&quot; rel=&quot;nofollow&quot;&gt;Reddit&lt;/a&gt; (preferred over GitHub issues for usage/examples), &lt;a href=&quot;https://gitter.im/movie-py/Lobby&quot; rel=&quot;nofollow&quot;&gt;Gitter&lt;/a&gt; or the mailing list &lt;a href=&quot;mailto:moviepy@librelist.com&quot;&gt;moviepy@librelist.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Maintainers&lt;/h2&gt;
&lt;/article&gt;</description>
<pubDate>Sat, 03 Feb 2018 12:01:41 +0000</pubDate>
<dc:creator>wilsonfiifi</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/1646122?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>Zulko/moviepy</og:title>
<og:url>https://github.com/Zulko/moviepy</og:url>
<og:description>moviepy - Video editing with Python</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/Zulko/moviepy</dc:identifier>
</item>
</channel>
</rss>