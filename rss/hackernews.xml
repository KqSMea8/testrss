<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>$17k/mo selling tiny cinder blocks on the internet</title>
<link>https://www.starterstory.com/mini-materials</link>
<guid isPermaLink="true" >https://www.starterstory.com/mini-materials</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://www.starterstory.com/mini-materials&quot;&gt;https://www.starterstory.com/mini-materials&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16429467&quot;&gt;https://news.ycombinator.com/item?id=16429467&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 253&lt;/p&gt;&lt;p&gt;# Comments: 82&lt;/p&gt;</description>
<pubDate>Wed, 21 Feb 2018 14:02:45 +0000</pubDate>
<dc:creator>patwalls</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.starterstory.com/mini-materials</dc:identifier>
</item>
<item>
<title>Apple Maps vs. Google Maps vs. Waze</title>
<link>https://arturrr.com/2018/02/19/navigation-apps/amp/</link>
<guid isPermaLink="true" >https://arturrr.com/2018/02/19/navigation-apps/amp/</guid>
<description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In early 2017, a conversation with yet another Waze fanboy finally nudged me to start a navigation app experiment. I was skeptical that the Alphabet owned company could meaningfully best its parent’s home grown Google Maps. I was also curious whether Apple Maps had discovered competence since its iOS 6 release.&lt;/p&gt;
&lt;p&gt;I thus set out to answer three questions:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Which navigation app &lt;span class=&quot;amp-wp-inline-61cd676b7bd65a074cc1d867fbbea1de&quot;&gt;estimates&lt;/span&gt; the shortest travel time?&lt;/li&gt;
&lt;li&gt;How does each app over/underestimate travel times?&lt;/li&gt;
&lt;li&gt;Which navigation app actually gets you to your destination most quickly?&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This exercise lasted the majority of 2017 and led me to dread almost any car trip due to the self imposed data gathering tasks that came with it. Nonetheless, my wife and I persevered, and I hope this data serves the community well.&lt;/p&gt;
&lt;h2&gt;Methodology&lt;/h2&gt;
&lt;p&gt;Ideally, I would have tested all routes with two other drivers, each of us departing from an origin simultaneously to follow a different navigation app’s guidance to the destination. This would have resulted in a direct comparison of the apps’ actual performance for all observations. Alas, I lacked two fellow drivers who thought this was a worthwhile endeavor.&lt;/p&gt;
&lt;p&gt;Instead, I recorded 120 observations (i.e. trips) of navigation app estimated and observed performance. For each observation, I randomly selected to follow one of the three navigation apps and recorded:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Which app was randomly selected to follow for each trip&lt;/li&gt;
&lt;li&gt;Estimated driving time for each app (i.e. Apple Maps, Google Maps, and Waze)&lt;/li&gt;
&lt;li&gt;Departure and arrival time&lt;/li&gt;
&lt;li&gt;Traffic conditions (i.e. work commute hours or not)&lt;/li&gt;
&lt;li&gt;Weather conditions (i.e. rain or not)&lt;/li&gt;
&lt;li&gt;Driving type (i.e. &amp;gt;75% city, &amp;gt;75% highway, or mixed)&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;amp-wp-inline-a6ec8840dd8107f0c4f9cbd7d00cece0&quot;&gt;&lt;strong&gt;Sample Data Log&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;I summarize the results with three simple charts:&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Estimated Trip Time: Which navigation app estimates the shortest travel time?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;I first looked at estimated trip time. This considers only the upfront estimate from each app and not how long it actually took to drive the proposed route. For purposes of visualizing the data, I indexed performance of Apple Maps and Waze to that of Google Maps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Relative to Google Maps, Apple Maps estimated trip times were on average 8% longer (i.e worse) and Waze estimates are 3% shorter (i.e. better).&lt;/strong&gt; These results were largely consistent with what I expected given Waze’s a strong following of users who swear it is the best option among navigation apps. If the estimated trip times consistently predicted actual driving time, Waze would be my preferred navigation app and I believe this is as far as most Waze users get in the navigation app decision process.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Average Error: How does each app over/underestimate travel times?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;I next considered average prediction error for each app. For each observation, I calculated the difference between actual observed trip time and estimated trip time, i.e. (Observed Time)/(Estimated Time)-1.&lt;/p&gt;
&lt;p&gt;Average error results were the exact opposite of estimated trip time. &lt;strong&gt;Using Apple Maps, I on average arrived  1% faster than initially estimated, versus 2% slower with Google Maps and &lt;span class=&quot;amp-wp-inline-61cd676b7bd65a074cc1d867fbbea1de&quot;&gt;11% slower&lt;/span&gt; with Waze. &lt;/strong&gt;In other words, Apple sandbags its estimates so that users on average arrive at the predicted time or slightly sooner. Google and Waze are overly optimistic in their predictions and thus their users arrive later than expected.&lt;/p&gt;
&lt;h3&gt;Error Adjusted Estimated Trip Time: Which navigation app actually gets you to your destination most quickly?&lt;/h3&gt;
&lt;p&gt;Finally, I combined estimated trip times with estimation errors to derive error adjusted estimated trip time, i.e. estimate for actual time to get to destination. These results are again indexed to Google Maps for purposes of presentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adjusted for prediction errors, not only does Google Maps outperform its competitors, Waze is actually the worst performing of the three.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Results Summary&lt;/h3&gt;
&lt;p&gt;If you want to get to your destination most quickly, use Google Maps.&lt;/p&gt;
&lt;p&gt;If you want an accurate prediction from your navigation app to help you arrive at your destination on time, use Apple Maps.&lt;/p&gt;
&lt;p&gt;If thinking you’ll get to your destination quickly helps to ease your commuter anxiety, use Waze.&lt;/p&gt;
&lt;h2&gt;Closing Thoughts&lt;/h2&gt;
&lt;p&gt;The performance of the three apps sparks a set of questions regarding incentives and business strategy.&lt;/p&gt;
&lt;p&gt;For Apple, Maps is a basic solution for its average user who wants a maps solution out of the box. Apple Maps does not directly drive ad or subscription revenue for Apple so there is less reason for Apple to incentivize iOS users to use Apple Maps over other solutions. However, Apple does care about user experience, and sandbagging trip time estimates so that users arrive at their destination on time results in a great user experience. Hence, I believe that Apple is intentionally conservative with estimated arrival times.&lt;/p&gt;
&lt;p&gt;At the other extreme, Waze (Alphabet) makes money through ads when you use their app. What better way to get people to use your navigation app than by over-promising short trip times when no one takes the time to record data and realize that you under-deliver? If an unsuspecting user opens Apple Maps and sees a 34-minute route and compares that to 30-minutes in Waze, the deed is done. Now Waze has a life-long customer who doesn’t realize they’ve been hoodwinked and Waze can throw at them stupidly annoying ads.&lt;/p&gt;
&lt;p&gt;“But wait! Waze leads me down super sneaky secret routes that avoid highway traffic jams.” Yea, so… is that a good thing?&lt;/p&gt;
&lt;p&gt;Based on various publications, my experience using Waze, and anecdotes from other drivers, I do believe that Waze guides drivers down more “creative” routes. But the results shared above imply that Waze doesn’t get you to your destination any faster. So, is it better to spend 30-minutes following Waze through suburban neighborhoods and alleys than 27-minutes minutes following Google Maps into a highway traffic jam?&lt;/p&gt;
&lt;p&gt;I think some people will say “yes — when I’m moving I feel like I’m making progress even if I don’t get to my destination any faster!” And I get that. Driving is stressful and the feeling of progress may help alleviate some commute-related anxiety. But is that progress worth wear and tear on your car and road infrastructure, additional accident-prone miles, and increased traffic in kid-filled suburban neighborhoods that results from Waze’s alternative routing?&lt;/p&gt;
&lt;p&gt;Not for me.&lt;/p&gt;
&lt;h2&gt;Appendix: Limitations&lt;/h2&gt;
&lt;p&gt;The high level limitation of this experiment is the “synthetic” way in which I compare app performance by applying average prediction error to estimated travel times. As described above, an ideal experiment would involve three drivers. Furthermore, the results suffer from additional limitations, e.g.:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All routes were taken in the San Francisco Bay Area and thus reflect Bay Area traffic, roads, weather, etc.&lt;/li&gt;
&lt;li&gt;1/3 of the routes were for my specific SF city commute&lt;/li&gt;
&lt;li&gt;Actual route times are heavily dependent on driver (my) behavior, e.g. speed, propensity to pass, use of carpool lanes&lt;/li&gt;
&lt;li&gt;Navigation app routing algorithms constantly evolve, hence this analysis is simply a snapshot in time&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Appendix: Data Highlights&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;All routes taken in San Francisco Bay Area&lt;/li&gt;
&lt;li&gt;120 observations — random number generator used to select app used for each route&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Apple Maps: 41&lt;/li&gt;
&lt;li&gt;Google Maps: 41&lt;/li&gt;
&lt;li&gt;Waze: 38&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Driving time:&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Average: 26 minutes&lt;/li&gt;
&lt;li&gt;Min: 8 minutes&lt;/li&gt;
&lt;li&gt;Max: 1 hour, 15 minutes&lt;/li&gt;
&lt;li&gt;Note: to check whether short routes were somehow skewing results I replicated the analysis above with only routes longer than 20-minutes and found consistent results (i.e. Google Maps performs best on error adjusted-basis)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Observations by driving type:&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;&amp;gt;75% City: 68&lt;/li&gt;
&lt;li&gt;Mixed: 20&lt;/li&gt;
&lt;li&gt;&amp;gt;75% Highway: 32&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Observations by traffic conditions:&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Commute / rush hour: 40&lt;/li&gt;
&lt;li&gt;Non-commute: 80&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Tue, 20 Feb 2018 23:48:16 +0000</pubDate>
<dc:creator>jonathanehrlich</dc:creator>
<og:type>article</og:type>
<og:title>Apple Maps vs. Google Maps vs. Waze</og:title>
<og:url>https://arturrr.com/2018/02/19/navigation-apps/</og:url>
<og:description>In early 2017, a conversation with yet another Waze fanboy finally nudged me to start a navigation app experiment. I was skeptical that the Alphabet owned company could meaningfully best its parent…</og:description>
<og:image>https://arturrr831563189.files.wordpress.com/2018/01/img_2420-e1518998378787.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arturrr.com/2018/02/19/navigation-apps/amp/</dc:identifier>
</item>
<item>
<title>Why is it hard to make friends over 30? (2012)</title>
<link>https://nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html</link>
<guid isPermaLink="true" >https://nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html</guid>
<description>&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;270&quot; data-total-count=&quot;1272&quot; id=&quot;story-continues-3&quot;&gt;Our story is not unusual. In your 30s and 40s, plenty of new people enter your life, through work, children’s play dates and, of course, Facebook. But actual close friends — the kind you make in college, the kind you call in a crisis — those are in shorter supply.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;219&quot; data-total-count=&quot;1491&quot;&gt;As people approach midlife, the days of youthful exploration, when life felt like one big blind date, are fading. Schedules compress, priorities change and people often become pickier in what they want in their friends.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;266&quot; data-total-count=&quot;1757&quot;&gt;No matter how many friends you make, a sense of fatalism can creep in: the period for making B.F.F.’s, the way you did in your teens or early 20s, is pretty much over. It’s time to resign yourself to situational friends: K.O.F.’s (kind of friends) — for now.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;162&quot; data-total-count=&quot;1919&quot;&gt;But often, people realize how much they have neglected to restock their pool of friends only when they encounter a big life event, like a move, say, or a divorce.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;502&quot; data-total-count=&quot;2421&quot;&gt;That thought struck Lisa Degliantoni, an educational fund-raising executive in Chicago, a few months ago when she was planning her 39th birthday party. After a move from New York to Evanston, Ill., she realized that she had 857 Facebook friends and 509 Twitter followers, but still did not know if she could fill her party’s invitation list. “I did an inventory of the phases of my life where I’ve managed to make the most friends, and it was definitely high school and my first job,” she said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;441&quot; data-total-count=&quot;2862&quot;&gt;After a divorce in his 40s, Robert Glover, a psychotherapist in Bellevue, Wash., realized that his roster of friends had quietly atrophied for years as he focused on career and family. “All of a sudden, with your wife out of the picture, you realize you’re lonely,” said Dr. Glover, now 56. “I’d go to salsa lessons. Instead of trying to pick up the women, I’d introduce myself to the men: ‘Hey, let’s go get a drink.’ ”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;288&quot; data-total-count=&quot;3150&quot;&gt;In studies of peer groups, Laura L. Carstensen, a psychology professor who is the director of the &lt;a title=&quot;Center&amp;#x2019;s Web site.&quot; href=&quot;http://longevity.stanford.edu/&quot;&gt;Stanford Center on Longevity&lt;/a&gt; in California, observed that people tended to interact with fewer people as they moved toward midlife, but that they grew closer to the friends they already had.&lt;/p&gt;
&lt;span class=&quot;visually-hidden&quot;&gt;Photo&lt;/span&gt;
&lt;div class=&quot;image&quot;&gt;&lt;img src=&quot;https://static01.nyt.com/images/2012/07/15/fashion/15FRIENDSHIP1/15JPFRIENDSHIP1-popup.jpg&quot; alt=&quot;&quot; class=&quot;media-viewer-candidate&quot; data-mediaviewer-src=&quot;https://static01.nyt.com/images/2012/07/15/fashion/15FRIENDSHIP1/15JPFRIENDSHIP1-superJumbo.jpg&quot; data-mediaviewer-caption=&quot;Lisa Degliantoni has downsized expectations in trying to make new friends. &amp;amp;#8220;I take an extremely efficient approach and seek out like-minded folks to fill very specific needs,&amp;amp;#8221; she said.&quot; data-mediaviewer-credit=&quot;Sally Ryan for The New York Times&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2012/07/15/fashion/15FRIENDSHIP1/15JPFRIENDSHIP1-popup.jpg&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;caption-text&quot;&gt;Lisa Degliantoni has downsized expectations in trying to make new friends. “I take an extremely efficient approach and seek out like-minded folks to fill very specific needs,” she said.&lt;/span&gt; &lt;span class=&quot;credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;&lt;span class=&quot;visually-hidden&quot;&gt;Credit&lt;/span&gt; Sally Ryan for The New York Times&lt;/span&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;458&quot; data-total-count=&quot;3608&quot;&gt;Basically, she suggests, this is because people have an internal alarm clock that goes off at big life events, like turning 30. It reminds them that time horizons are shrinking, so it is a point to pull back on exploration and concentrate on the here and now. “You tend to focus on what is most emotionally important to you,” she said, “so you’re not interested in going to that cocktail party, you’re interested in spending time with your kids.”&lt;/p&gt;
&lt;div id=&quot;story-ad-2&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;http://www.nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html#story-continues-4&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;487&quot; data-total-count=&quot;4095&quot; id=&quot;story-continues-4&quot;&gt;As external conditions change, it becomes tougher to meet the three conditions that sociologists since the 1950s have considered crucial to making close friends: proximity; repeated, unplanned interactions; and a setting that encourages people to let their guard down and confide in each other, said Rebecca G. Adams, a professor of sociology and gerontology at the University of North Carolina at Greensboro. This is why so many people meet their lifelong friends in college, she added.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;462&quot; data-total-count=&quot;4557&quot;&gt;In the professional world, “proximity” is hard to maintain, as work colleagues are reassigned or move on to new jobs. Last year, Erica Rivinoja, a writer on &lt;a title=&quot;Show&amp;#x2019;s Web site.&quot; href=&quot;http://www.nbc.com/up-all-night/&quot;&gt;the NBC series “Up All Night,”&lt;/a&gt; became close with a woman, Jen, when they worked together on a pilot. Almost instantly, they knew each other’s exercise schedules and food preferences. Jen could sense when Ms. Rivinoja needed a jolt of caffeine, and without asking would be there with an iced tea.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;335&quot; data-total-count=&quot;4892&quot;&gt;“But as soon as the pilot was over, it was hard to be as close without that constant day-to-day interaction,” said Ms. Rivinoja, 35. They can occasionally carve out time for a quick gin and tonic, she said, but “there aren’t those long afternoons which bleed into evenings hanging out at the beach and then heading to a bar.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;253&quot; data-total-count=&quot;5145&quot;&gt;The workplace can crackle with competition, so people learn to hide vulnerabilities and quirks from colleagues, Dr. Adams said. Work friendships often take on a transactional feel; it is difficult to say where networking ends and real friendship begins.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;405&quot; data-total-count=&quot;5550&quot;&gt;Differences in professional status and income also complicate matters. “It really does get weird when your friends are making tons more than you, or tons less,” said Adriane Duckworth, a former marketing executive now working as an artist in Hamilton, Ontario. She recently welcomed a promising new couple into her circle of friends, but they quickly turned people off with their obsession with money.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;351&quot; data-total-count=&quot;5901&quot;&gt;“At our wedding, other friends of ours who were seated with them actually complained to us afterward about the couple who was asking everyone how much money they made,” said Ms. Duckworth, 32. “People who made less felt uncomfortable discussing it, and people who made the same or more just felt it was weird to talk about it so nonchalantly.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;357&quot; data-total-count=&quot;6258&quot;&gt;Once people start coupling up, the challenges only increase. Making friends with other couples “is like matchmaking for two,” said &lt;a title=&quot;Baskin&amp;#x2019;s Twitter page.&quot; href=&quot;https://twitter.com/kcbaskin/&quot;&gt;Kara Baskin, a journalist who works in Boston&lt;/a&gt;. “Not only are you worrying about whether the other woman likes you, you’re also worrying if her husband likes you, if your husband likes her, if your husband likes him.”&lt;/p&gt;


&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;426&quot; data-total-count=&quot;6684&quot;&gt;Not long ago, she invited her husband’s new work buddy over for dinner with his wife. But the wife was visibly unimpressed by Ms. Baskin’s half-furnished home (they had just moved in) and thrown-together spaghetti dinner. “It was basically clear that his wife had been cajoled into attending,” said Ms. Baskin, 33. “She settled on to our rickety Ikea kitchen chairs like she was lowering herself into a coal mine.”&lt;/p&gt;
&lt;div id=&quot;story-ad-3&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;http://www.nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html#story-continues-5&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;213&quot; data-total-count=&quot;6897&quot; id=&quot;story-continues-5&quot;&gt;The couple departed quickly after dessert. The next day at work, the husband made an excuse about his wife being tired. “But it was unspoken that we wouldn’t be seeking their company again,” Ms. Baskin said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;426&quot; data-total-count=&quot;7323&quot;&gt;ADDING children to the mix muddles things further. Suddenly, you are surrounded by a new circle of parent friends — but the emotional ties can be tenuous at best, as &lt;a title=&quot;Louis C.K.&amp;#x2019;s Web site.&quot; href=&quot;https://buy.louisck.net/&quot;&gt;the comedian Louis C. K.&lt;/a&gt; related in one stand-up routine: “I spend whole days with people, I’m like, I never would have hung out with you, I didn’t choose you. Our children chose each other. Based on no criteria, by the way. They’re the same size.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;139&quot; data-total-count=&quot;7462&quot;&gt;Even when parent friends develop a bond, the resulting friendships can be fleeting — and subject to the whims of the children themselves.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;329&quot; data-total-count=&quot;7791&quot;&gt;Caryl Lyons, an event planner in Danville, Calif., and her husband found a budding friendship with a parent-friend couple hit a roadblock when their young sons, who had been close friends, drifted apart. When the families planned a barbecue together, her son would say, “Can I have my other friends over?” said Ms. Lyons, 44.&lt;/p&gt;
&lt;span class=&quot;visually-hidden&quot;&gt;Photo&lt;/span&gt;
&lt;div class=&quot;image&quot;&gt;&lt;img src=&quot;https://static01.nyt.com/images/2012/07/15/fashion/15FRIENDSHIP2/15JPFRIENDSHIP2-jumbo.jpg&quot; alt=&quot;&quot; class=&quot;media-viewer-candidate&quot; data-mediaviewer-src=&quot;https://static01.nyt.com/images/2012/07/15/fashion/15FRIENDSHIP2/15JPFRIENDSHIP2-superJumbo.jpg&quot; data-mediaviewer-caption=&quot;Kara Baskin said that being part of a couple presents obstacles in making friends. She described it as &amp;amp;#8220;like matchmaking for two.&amp;amp;#8221;&quot; data-mediaviewer-credit=&quot;Gretchen Ertl for The New York Times&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2012/07/15/fashion/15FRIENDSHIP2/15JPFRIENDSHIP2-jumbo.jpg&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;caption-text&quot;&gt;Kara Baskin said that being part of a couple presents obstacles in making friends. She described it as “like matchmaking for two.”&lt;/span&gt; &lt;span class=&quot;credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;&lt;span class=&quot;visually-hidden&quot;&gt;Credit&lt;/span&gt; Gretchen Ertl for The New York Times&lt;/span&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;489&quot; data-total-count=&quot;8280&quot;&gt;External factors are not the only hurdle. After 30, people often experience internal shifts in how they approach friendship. Self-discovery gives way to self-knowledge, so you become pickier about whom you surround yourself with, said &lt;a title=&quot;Marla Paul&amp;#x2019;s Web site.&quot; href=&quot;http://www.marlapaul.com/&quot;&gt;Marla Paul&lt;/a&gt;, the author of the 2004 book “The Friendship Crisis: Finding, Making, and Keeping Friends When You’re Not a Kid Anymore.” “The bar is higher than when we were younger and were willing to meet almost anyone for a margarita,” she said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;82&quot; data-total-count=&quot;8362&quot;&gt;Manipulators, drama queens, egomaniacs: a lot of them just no longer make the cut.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;369&quot; data-total-count=&quot;8731&quot;&gt;Thayer Prime, a 32-year-old strategy consultant who lives in London, has even developed a playful 100-point scale (100 being “best friend forever”). In her mind, she starts to dock new friend candidates as they begin to display annoying or disloyal behavior. Nine times out of 10, she said, her new friends end up from 30 to 60, or little more than an acquaintance.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;305&quot; data-total-count=&quot;9036&quot;&gt;“You meet someone really nice, but if they don’t return a call, drop to 90, if they don’t return two calls, that’s an immediate 50,” she said. “If they’re late to something in the first month, that’s another 10 off.” (But people can move up the scale with nice behavior, too, she added.)&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;93&quot; data-total-count=&quot;9129&quot;&gt;Having been hardened by experience, many people develop a more fatalistic view of friendship.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;332&quot; data-total-count=&quot;9461&quot;&gt;“When you’re younger, you define what it really means to be friends in a more serious way,” said my screenwriter friend, Brian. (His full name is Brian Koppelman, and he wrote and is a co-director of “&lt;a title=&quot;IMDB profile.&quot; href=&quot;http://www.imdb.com/title/tt1294213/&quot;&gt;Solitary Man&lt;/a&gt;,” a 2010 film starring Michael Douglas about a middle-aged man trying to reconnect with friends and family.)&lt;/p&gt;
&lt;div id=&quot;story-ad-4&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;http://www.nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html#story-continues-6&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;246&quot; data-total-count=&quot;9707&quot; id=&quot;story-continues-6&quot;&gt;“My ideas of friendship were built by ‘The Godfather’ and ‘Diner,’ ” he said. “Your friends were your brothers, and anything but total loyalty at all costs meant excommunication. As you get older, that model becomes unrealistic.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;411&quot; data-total-count=&quot;10118&quot;&gt;By that point, you have been through your share of wearying or failed relationships. You have come to grips with the responsibilities of juggling work, family and existing friends, so you become more wary about making yourself emotionally available to new people. “You’re more keenly aware of the downside,” said Mr. Koppelman, 46. “You’re also more keenly aware of your own capacity to disappoint.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;227&quot; data-total-count=&quot;10345&quot;&gt;“I haven’t really changed my standards for what it means to actually be friends,” he concluded. “It’s just that I use the word ‘friends’ more loosely. Making the real kind, the brother kind, is much harder now.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;377&quot; data-total-count=&quot;10722&quot;&gt;Some, like Ms. Degliantoni, the fund-raising executive, simply downsize their expectations. “I take an extremely efficient approach and seek out like-minded folks to fill very specific needs,” she said of her current strategy. “I have a cocktail friend and a book friend and a parenting friend and several basketball friends and a neighbor friend and a workout friend.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;127&quot; data-total-count=&quot;10849&quot;&gt;“It’s much easier filling in those gaps in my life,” she added, “than doing an exhaustive approach for a new friend.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;82&quot; data-total-count=&quot;10931&quot;&gt;Or, they hit rock bottom and turn back the clock to their breathlessly social 20s.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;444&quot; data-total-count=&quot;11375&quot;&gt;After a move to New York in his 30s, Dave Cervini, a radio station executive, was so lonely that he would walk his cat in Central Park, hoping to stoke conversations. Finding only curious stares, he decided to start the &lt;a title=&quot;Group&amp;#x2019;s Web site.&quot; href=&quot;http://www.newyorksocialnetwork.com/&quot;&gt;New York Social Network&lt;/a&gt;, an activities group for people to find friends by hanging out at Yankees games or wine-tasting mixers. The company now counts 2,000 members, most in their 30s. He considers 200 of them close friends.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;129&quot; data-total-count=&quot;11504&quot;&gt;“It takes courage for people to take the first step,” he said. “Hopefully, I make it easier, having been there myself.” &lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;149&quot; data-total-count=&quot;11653&quot;&gt;In that spirit, I recently called Brian. We joked about our inability to find time to hang out, and made a dinner date at the next available opening.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;28&quot; data-total-count=&quot;11681&quot;&gt;It is three months from now.&lt;/p&gt;
&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;http://www.nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html#whats-next&quot;&gt;Continue reading the main story&lt;/a&gt;</description>
<pubDate>Tue, 20 Feb 2018 22:42:00 +0000</pubDate>
<dc:creator>ValentineC</dc:creator>
<og:url>https://www.nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html</og:url>
<og:type>article</og:type>
<og:title>Why Is It Hard to Make Friends Over 30?</og:title>
<og:description>The period for making B.F.F.’s, the way you did in your teens or early 20s, is pretty much over. It’s time to resign yourself to situational adult friends.</og:description>
<og:image>https://static01.nyt.com/images/2012/07/15/fashion/20120715-FRIENDS-slide-O96T/20120715-FRIENDS-slide-O96T-superJumbo.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.nytimes.com/2012/07/15/fashion/the-challenge-of-making-friends-as-an-adult.html</dc:identifier>
</item>
<item>
<title>FastPhotoStyle from Nvidia</title>
<link>https://github.com/NVIDIA/FastPhotoStyle/blob/master/README.md</link>
<guid isPermaLink="true" >https://github.com/NVIDIA/FastPhotoStyle/blob/master/README.md</guid>
<description>&lt;h2&gt;FastPhotoStyle&lt;/h2&gt;
&lt;h3&gt;License&lt;/h3&gt;
&lt;p&gt;Copyright (C) 2018 NVIDIA Corporation. All rights reserved. Licensed under the CC BY-NC-SA 4.0 license (&lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;About&lt;/h3&gt;
&lt;p&gt;This code repository contains an implementation of our fast photorealistic style transfer algorithm. Given a content photo and a style photo, the code can transfer the style of the style photo to the content photo. The details of the algorithm behind the code is documented in our arxiv paper. Please cite the paper if this code repository is used in your publications.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sites.google.com/site/yijunlimaverick/&quot; rel=&quot;nofollow&quot;&gt;Yijun Li&lt;/a&gt;, &lt;a href=&quot;http://mingyuliu.net/&quot; rel=&quot;nofollow&quot;&gt;Ming-Yu Liu&lt;/a&gt;, &lt;a href=&quot;https://sunshineatnoon.github.io/&quot; rel=&quot;nofollow&quot;&gt;Xueting Li&lt;/a&gt;, &lt;a href=&quot;http://faculty.ucmerced.edu/mhyang/&quot; rel=&quot;nofollow&quot;&gt;Ming-Hsuan Yang&lt;/a&gt;, &lt;a href=&quot;http://jankautz.com/&quot; rel=&quot;nofollow&quot;&gt;Jan Kautz&lt;/a&gt; &quot;&lt;a href=&quot;https://arxiv.org/abs/1802.06474&quot; rel=&quot;nofollow&quot;&gt;A Closed-form Solution to Photorealistic Image Stylization&lt;/a&gt;&quot; arXiv preprint arXiv:1802.06474&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/NVIDIA/FastPhotoStyle/blob/master/alg_in_action.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/NVIDIA/FastPhotoStyle/raw/master/alg_in_action.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Code usage&lt;/h3&gt;
&lt;p&gt;Please check out the &lt;a href=&quot;https://github.com/NVIDIA/FastPhotoStyle/blob/master/USAGE.md&quot;&gt;user manual page&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 20 Feb 2018 22:23:25 +0000</pubDate>
<dc:creator>scraft</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/1728152?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>NVIDIA/FastPhotoStyle</og:title>
<og:url>https://github.com/NVIDIA/FastPhotoStyle</og:url>
<og:description>Contribute to FastPhotoStyle development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/NVIDIA/FastPhotoStyle/blob/master/README.md</dc:identifier>
</item>
<item>
<title>There&amp;#039;s a Persistent Hum in Windsor, Ontario, and No One Knows Why</title>
<link>https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html</guid>
<description>&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;40&quot; data-total-count=&quot;1239&quot; id=&quot;story-continues-3&quot;&gt;Activists have done their own sleuthing.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;232&quot; data-total-count=&quot;1471&quot;&gt;Over six years, Mike Provost of Windsor, who helps run the Facebook page, has amassed more than 4,000 pages of daily observations about the duration, intensity and characteristics of the sound and the weather conditions at the time.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;152&quot; data-total-count=&quot;1623&quot;&gt;He has had to fend off skeptics and theorists who believe that the hum is related to secret tunneling, U.F.O.s or covert government operations, he said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;190&quot; data-total-count=&quot;1813&quot;&gt;Mr. Provost, a retired insurance salesman, said his work was a blend of obsession and hobby. “I’ve got to keep going,” he said in a phone interview. “I’m not going to quit this.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;224&quot; data-total-count=&quot;2037&quot;&gt;The hum is not limited to Windsor, a city of about 220,000 people on the Detroit River. Mr. Provost said he had received reports from McGregor, Ontario, 20 miles to the south, and from east of Cleveland, about 90 miles away.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;274&quot; data-total-count=&quot;2311&quot;&gt;&lt;a href=&quot;http://traceyramsey.ndp.ca/tracey-urges-the-government-to-address-and-provide-answers-on-the-windsor-hum&quot;&gt;Tracey Ramsey&lt;/a&gt;, a member of the Canadian House of Commons, said in a phone interview that she regularly gets calls from constituents about the health effects of the hum. Residents have complained of headaches, sleeplessness, irritability and depression, among other symptoms.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;69&quot; data-total-count=&quot;2380&quot;&gt;“It’s something they are desperate for an answer to,” she said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;81&quot; data-total-count=&quot;2461&quot;&gt;Tracing the noise’s origins is complicated by who hears it, and when and where.&lt;/p&gt;
&lt;div id=&quot;story-ad-2&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html#story-continues-4&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;188&quot; data-total-count=&quot;2649&quot; id=&quot;story-continues-4&quot;&gt;Tim Carpenter, a retired consulting engineer who specialized in geotechnical engineering and machine vibrations and is an administrator of the Facebook page, says not everyone can hear it.&lt;/p&gt;


&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;200&quot; data-total-count=&quot;2849&quot;&gt;“It’s as if you had a fire hose moving back and forth and the people who have the water falling on them hear the noise, and if you’re outside that stream, you don’t hear the noise,” he said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;80&quot; data-total-count=&quot;2929&quot;&gt;Researchers &lt;a href=&quot;http://www.icben.org/2008/PDFs/Cowan.pdf&quot;&gt;have found no trends related to gender or age&lt;/a&gt; for the “hearers.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;287&quot; data-total-count=&quot;3216&quot;&gt;&lt;a href=&quot;https://www.northwell.edu/find-care/find-a-doctor/neurotology/dr-darius-kohan-md-11357083&quot;&gt;Dr. Darius Kohan&lt;/a&gt;, the director of otology and neurotology at Lenox Hill Hospital and Manhattan Eye, Ear and Throat Hospital, said that the low-frequency hum was unlikely to cause long-term hearing damage but that it could be as debilitating as &lt;a href=&quot;https://www.nytimes.com/2015/04/28/science/the-brain-of-a-tinnitus-sufferer.html&quot;&gt;tinnitus&lt;/a&gt;, a persistent ringing in the ears.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;451&quot; data-total-count=&quot;3667&quot;&gt;&lt;a href=&quot;https://www.wpi.edu/people/faculty/sdbarton&quot;&gt;Scott Barton&lt;/a&gt;, an assistant professor of music at &lt;a href=&quot;https://www.wpi.edu/&quot;&gt;Worcester Polytechnic Institute&lt;/a&gt; in Massachusetts, said in a phone interview that &lt;a href=&quot;https://www.strangerdimensions.com/2013/06/21/infrasound-the-fear-frequency/&quot;&gt;infrasound&lt;/a&gt;, which is below 20 hertz, can create a sense of unease because it is unintelligible to human hearing but still detectable. While it is possible to be accustomed to certain noises (the hum of an air-conditioner, for example), this low-frequency noise is challenging because it has been so inconsistent, he said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;351&quot; data-total-count=&quot;4018&quot;&gt;Seeking intervention by government regulators for the hum is difficult because regulations typically address decibel levels that can lead to hearing loss or damage, not those that can affect quality of life, &lt;a href=&quot;https://taubmancollege.umich.edu/architecture/degrees/phd-architecture/research-doctoral-studies/rebecca-smith&quot;&gt;Rebecca Smith&lt;/a&gt;, a sound engineer and doctoral student at the &lt;a href=&quot;https://www.umich.edu/&quot;&gt;University of Michigan&lt;/a&gt; in Ann Arbor, who researches urban noise, wrote in an email.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;161&quot; data-total-count=&quot;4179&quot;&gt;“Think about the sound of a dog barking,” she said. “It doesn’t need to be loud enough to physically damage you to be really annoying and distracting.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;349&quot; data-total-count=&quot;4528&quot;&gt;The University of Windsor report said the hum’s likely source was blast furnace operations on &lt;a href=&quot;http://www.zugislanddocumentary.com/&quot;&gt;Zug Island&lt;/a&gt; on the Detroit River, which is &lt;a href=&quot;http://windsorstar.com/news/local-news/u-s-steel-to-pay-heavy-zug-island-fine-and-plant-trees&quot;&gt;densely packed with manufacturing&lt;/a&gt;. Activists complained that United States Steel, which operates the furnaces, has been uncooperative and secretive. A company spokeswoman did not respond to requests for comment.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;231&quot; data-total-count=&quot;4759&quot;&gt;A principal investigator on the study, Professor Colin Novak, told &lt;a href=&quot;http://www.cbc.ca/news/canada/windsor/mysterious-windsor-hum-traced-to-zug-island-mich-1.2651783&quot;&gt;CBC News&lt;/a&gt; in 2014 that researchers needed more time and cooperation from the American authorities to pinpoint the source. “It’s like chasing a ghost,” he said.&lt;/p&gt;
&lt;div id=&quot;story-ad-3&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html#story-continues-5&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;242&quot; data-total-count=&quot;5001&quot; id=&quot;story-continues-5&quot;&gt;Hums similar to Windsor’s have been reported in at least a dozen communities worldwide, including in Australia, England and Scotland, the study said. In the United States, high-profile hums have been reported in &lt;a href=&quot;https://www.youtube.com/watch?v=qGHe7rdq0Ds&quot;&gt;Taos, N.M.&lt;/a&gt;, and &lt;a href=&quot;http://www.nytimes.com/2002/06/23/us/hum-haunts-indiana-city-its-source-is-a-mystery.html&quot;&gt;Kokomo, Ind&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;194&quot; data-total-count=&quot;5195&quot;&gt;Researchers studied the Taos hum in 1993 but did not pinpoint a source. Karina Armijo, the town’s director of marketing and tourism, said in a telephone interview that complaints had subsided.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;161&quot; data-total-count=&quot;5356&quot;&gt;“I have never heard the Taos hum, but I’ve heard stories of the Taos hum,” she said. “There’s not been a lot of buzz about it in the last few years.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;227&quot; data-total-count=&quot;5583&quot;&gt;A 2003 study in Kokomo by the acoustics and vibration consulting company &lt;a href=&quot;https://www.acentech.com/&quot;&gt;Acentech&lt;/a&gt; prompted two industrial plants to install silencing equipment, providing relief to some residents but not all, &lt;a href=&quot;http://www.icben.org/2008/PDFs/Cowan.pdf&quot;&gt;a 2008 paper about the study said&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;134&quot; data-total-count=&quot;5717&quot;&gt;“In fact, one affected resident had become so disturbed that she moved more than 700 miles away to relieve her symptoms,” it said.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;170&quot; data-total-count=&quot;5887&quot;&gt;Mr. Carpenter said it was possible a major source of the Windsor hum could be eliminated and other mechanical sources would replace it, entering the “heard spectrum.”&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;119&quot; data-total-count=&quot;6006&quot;&gt;“It’s possible that no matter what is done to relieve or attenuate the noise, it might never be enough,” he said.&lt;/p&gt;
&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html#whats-next&quot;&gt;Continue reading the main story&lt;/a&gt;</description>
<pubDate>Tue, 20 Feb 2018 21:28:34 +0000</pubDate>
<dc:creator>fmihaila</dc:creator>
<og:url>https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html</og:url>
<og:type>article</og:type>
<og:title>There’s a Persistent Hum in This Canadian City, and No One Knows Why</og:title>
<og:description>Residents affected by the “Windsor Hum” complain of sleeplessness, depression and headaches. It is one of many mysterious sounds reported throughout the world.</og:description>
<og:image>https://static01.nyt.com/images/2018/01/27/autossell/00xp-Hum/00xp-Hum-facebookJumbo.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/02/19/world/canada/windsor-hum.html</dc:identifier>
</item>
<item>
<title>Show HN: A CSS Keylogger</title>
<link>https://github.com/maxchehab/CSS-Keylogging</link>
<guid isPermaLink="true" >https://github.com/maxchehab/CSS-Keylogging</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Chrome extension and Express server that exploits keylogging abilities of CSS.&lt;/p&gt;
&lt;h2&gt;To use&lt;/h2&gt;
&lt;h3&gt;Setup Chrome extension&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Download repository &lt;code&gt;git clone https://github.com/maxchehab/CSS-Keylogging&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Visit &lt;code&gt;chrome://extensions&lt;/code&gt; in your browser (or open up the Chrome menu by clicking the icon to the far right of the Omnibox: The menu's icon is three horizontal bars. and select Extensions under the More Tools menu to get to the same place).&lt;/li&gt;
&lt;li&gt;Ensure that the Developer mode checkbox in the top right-hand corner is checked.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Load unpacked extension…&lt;/code&gt; to pop up a file-selection dialog.&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;css-keylogger-extension&lt;/code&gt; in the directory which you downloaded this repository.&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Setup Express server&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Haxking l33t passw0rds&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Open a website that uses a controlled component framework such as React. &lt;a href=&quot;https://www.instagram.com/&quot; rel=&quot;nofollow&quot;&gt;https://instagram.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Press the extension &lt;code&gt;C&lt;/code&gt; on the top right of any webpage.&lt;/li&gt;
&lt;li&gt;Type your password.&lt;/li&gt;
&lt;li&gt;Your password should be captured by the express server.&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;How it works&lt;/h2&gt;
&lt;p&gt;This attack is really simple. Utilizing CSS attribute selectors, one can request resources from an external server under the premise of loading a &lt;code&gt;background-image&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, the following css will select all input's with a &lt;code&gt;type&lt;/code&gt; that equals &lt;code&gt;password&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt; that ends with &lt;code&gt;a&lt;/code&gt;. It will then try to load an image from &lt;code&gt;http://localhost:3000/a&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-css&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-ent&quot;&gt;input&lt;/span&gt;[&lt;span class=&quot;pl-e&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;][&lt;span class=&quot;pl-e&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;$=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;] {
  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;background-image&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://localhost:3000/a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using a simple &lt;a href=&quot;https://github.com/maxchehab/CSS-Keylogging/blob/master/build.go&quot;&gt;script&lt;/a&gt; one can create a &lt;a href=&quot;https://github.com/maxchehab/CSS-Keylogging/blob/master/css-keylogger-extension/keylogger.css&quot;&gt;css file&lt;/a&gt; that will send a custom request for every ASCII character.&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Tue, 20 Feb 2018 18:37:56 +0000</pubDate>
<dc:creator>maxchehab</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/13038919?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>maxchehab/CSS-Keylogging</og:title>
<og:url>https://github.com/maxchehab/CSS-Keylogging</og:url>
<og:description>CSS-Keylogging - Chrome extension and Express server that exploits keylogging abilities of CSS.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/maxchehab/CSS-Keylogging</dc:identifier>
</item>
<item>
<title>Go += Package Versioning</title>
<link>https://research.swtch.com/vgo-intro</link>
<guid isPermaLink="true" >https://research.swtch.com/vgo-intro</guid>
<description>&lt;p&gt;We need to add package versioning to Go.&lt;/p&gt;
&lt;p&gt;More precisely, we need to add the concept of package versions to the working vocabulary of both Go developers and our tools, so that they can all be precise when talking to each other about exactly which program should be built, run, or analyzed. The &lt;code&gt;go&lt;/code&gt; command needs to be able to tell developers exactly which versions of which packages are in a particular build, and vice versa.&lt;/p&gt;
&lt;p&gt;Versioning will let us enable reproducible builds, so that if I tell you to try the latest version of my program, I know you're going to get not just the latest version of my code but the exact same versions of all the packages my code depends on, so that you and I will build completely equivalent binaries.&lt;/p&gt;
&lt;p&gt;Versioning will also let us ensure that a program builds exactly the same way tomorrow as it does today. Even when there are newer versions of my dependencies, the &lt;code&gt;go&lt;/code&gt; command shouldn't start using them until asked.&lt;/p&gt;
&lt;p&gt;Although we must add versioning, we also must not remove the best parts of the current &lt;code&gt;go&lt;/code&gt; command: its simplicity, speed, and understandability. Today, many programmers mostly don't pay attention to versioning, and everything mostly works fine. If we get the model and the defaults right, we should be able to add versioning in such a way that programmers &lt;em&gt;still&lt;/em&gt; mostly don't pay attention to versioning, and everything just works better and is easier to understand. Existing workflows should change as little as possible. Releasing new versions should be very easy. In general, version management work must fade to the background, not be a day-to-day concern.&lt;/p&gt;
&lt;p&gt;In short, we need to add package versioning, but we need to do it without breaking &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt;. This post sketches a proposal for doing exactly that, along with a prototype demonstration that you can try today and that hopefully will be the basis for eventual &lt;code&gt;go&lt;/code&gt; command integration. I intend this post to be the start of a productive discussion about what works and what doesn't. Based on that discussion, I will make adjustments to both the proposal and the prototype, and then I will submit an &lt;a href=&quot;https://golang.org/s/proposal&quot;&gt;official Go proposal&lt;/a&gt;, for integration into Go 1.11 as an opt-in feature.&lt;/p&gt;
&lt;p&gt;This proposal keeps the best parts of &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt;, adds reproducible builds, adopts semantic versioning, eliminates vendoring, deprecates GOPATH in favor of a project-based workflow, and provides for a smooth migration from &lt;code&gt;dep&lt;/code&gt; and its predecessors. That said, this proposal is still also in its early stages. If details are not right yet, we will take the time to fix them before the work lands in the main Go distribution.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;Before we look at the proposal, let's look at how we got where we are today. This is maybe a little long, but the history has important lessons for the present and helps to understand why the proposal changes what it does. If you are impatient, feel free to skip ahead to the &lt;a href=&quot;https://research.swtch.com/vgo-intro#proposal&quot;&gt;proposal&lt;/a&gt;, or read the accompanying &lt;a href=&quot;https://research.swtch.com/vgo-tour&quot;&gt;example blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Makefiles, &lt;code&gt;goinstall&lt;/code&gt;, and &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In November 2009, the initial release of Go was a compiler, linker, and some libraries. You had to run &lt;code&gt;6g&lt;/code&gt; and &lt;code&gt;6l&lt;/code&gt; to compile and link your programs, and we included sample makefiles. There was a minimal wrapper &lt;code&gt;gobuild&lt;/code&gt; that could build a single package and write an appropriate makefile, in most cases. There was no established way to share code with other people. We knew more was needed, but we released what we had, planning to do the rest with the community.&lt;/p&gt;
&lt;p&gt;In February 2010, &lt;a href=&quot;https://groups.google.com/d/msg/golang-nuts/8JFwR3ESjjI/cy7qZzN7Lw4J&quot;&gt;we proposed &lt;code&gt;goinstall&lt;/code&gt;&lt;/a&gt;, a new, zero-configuration command for downloading packages from source control repositories like Bitbucket and GitHub. &lt;code&gt;Goinstall&lt;/code&gt; introduced the import path conventions Go developers take for granted today. Because no code at the time followed those conventions, &lt;code&gt;goinstall&lt;/code&gt; at first only worked with packages that imported nothing beyond the standard library. But developers quickly migrated from their own varied naming schemes to the uniform convention we know today, and the set of published Go packages grew into a coherent ecosystem.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Goinstall&lt;/code&gt; also eliminated makefiles and, with them, the complexity of user-defined build variations. While it is occasionally inconvenient to package authors not to be able to generate code during each build, that simplification has been incredibly important to package &lt;em&gt;users&lt;/em&gt;: a user never has to worry about first installing the same set of tools as the package author used before building a package. The simplification has also been crucial to tooling. A makefile is an imperative, step-by-step recipe for compiling a package; reverse-engineering how to apply a different tool, like &lt;code&gt;go&lt;/code&gt; &lt;code&gt;vet&lt;/code&gt; or code completion, to the same package, can be quite difficult. Even getting build dependencies right, so that packages are rebuilt when necessary and only when necessary, is much harder with arbitrary makefiles. Although some people objected at the time that flexibility was being taken away, it is clear in retrospect that the benefits far outweighed the inconvenience.&lt;/p&gt;
&lt;p&gt;In December 2011, as part of preparation for Go 1, &lt;a href=&quot;https://groups.google.com/d/msg/golang-dev/8DNjlySemwI/-1CDvVX6QVcJ&quot;&gt;we introduced the &lt;code&gt;go&lt;/code&gt; command&lt;/a&gt;, which replaced &lt;code&gt;goinstall&lt;/code&gt; with &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the whole, &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; has been transformative, enabling Go developers to share source code and build on each other's work, and enabling tooling by isolating details of the build system inside the &lt;code&gt;go&lt;/code&gt; command. But &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; is missing any concept of versioning. It was clear in the &lt;a href=&quot;https://groups.google.com/d/msg/golang-nuts/8JFwR3ESjjI/cy7qZzN7Lw4J&quot;&gt;very first discussions of &lt;code&gt;goinstall&lt;/code&gt;&lt;/a&gt; that we needed to do something about versioning. Unfortunately, it was not clear, at least to us on the Go team, exactly what to do. When &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; needs a package, it always fetches the latest copy, delegating the download and update operations to version control systems like Git or Mercurial. This ignorance of package versioning has led to at least two significant shortcomings.&lt;/p&gt;
&lt;h3&gt;Versioning and API Stability&lt;/h3&gt;
&lt;p&gt;The first significant shortcoming of &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; is that, without a concept of versioning, it cannot convey to users any expectations about what kinds of changes to expect in a given update.&lt;/p&gt;
&lt;p&gt;In November 2013, Go 1.2 added a FAQ entry about package versioning that gave this basic advice (unchanged as of Go 1.10):&lt;/p&gt;
&lt;blockquote readability=&quot;11.125628140704&quot;&gt;
&lt;p&gt;&lt;em&gt;Packages intended for public use should try to maintain backwards compatibility as they evolve. The &lt;a href=&quot;https://golang.org/doc/go1compat.html&quot;&gt;Go 1 compatibility guidelines&lt;/a&gt; are a good reference here: don't remove exported names, encourage tagged composite literals, and so on. If different functionality is required, add a new name instead of changing an old one. If a complete break is required, create a new package with a new import path.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In March 2014, Gustavo Niemeyer created &lt;a href=&quot;https://gopkg.in/&quot;&gt;&lt;em&gt;gopkg.in&lt;/em&gt;&lt;/a&gt;, advertising “stable APIs for the Go language.” The domain is a version-aware GitHub redirector, allowing import paths like &lt;code&gt;gopkg.in/yaml.v1&lt;/code&gt; and &lt;code&gt;gopkg.in/yaml.v2&lt;/code&gt; to refer to different commits (perhaps on different branches) of a single Git repository. Following semantic versioning, authors are expected to introduce a new major version when making a breaking change, so that later versions of a &lt;code&gt;v1&lt;/code&gt; import path can be expected to be drop-in replacements for earlier ones, while a &lt;code&gt;v2&lt;/code&gt; import path may be a completely different API.&lt;/p&gt;
&lt;p&gt;In August 2015, Dave Cheney filed &lt;a href=&quot;https://github.com/golang/go/issues/12302&quot;&gt;a proposal to adopt semantic versioning&lt;/a&gt;. That prompted an interesting discussion over the next few months, in which everyone seemed to agree that tagging code with semantic versions seemed like a fine idea, but no one knew the next step: what should tools do with these versions?&lt;/p&gt;
&lt;p&gt;Any discussion of semantic versioning inevitably includes counterarguments citing &lt;a href=&quot;http://www.hyrumslaw.com/&quot;&gt;Hyrum's law&lt;/a&gt;, which states:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;With a sufficient number of users of an API, it does not matter what you promise in the contract. All observable behaviors of your system will be depended on by somebody.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While Hyrum's law is empirically true, semantic versioning is still a useful way to frame expectations about the relationships between releases. Updating from 1.2.3 to 1.2.4 should not break your code, while updating from 1.2.3 to 2.0.0 may. If your code stops working after an update to 1.2.4, the author is likely to welcome a bug report and issue a fix in 1.2.5. If your code stops working (or even compiling) after an update to 2.0.0, that change has a much greater chance of being intentional and a correspondingly lesser chance of being fixed to your code's liking in 2.0.1.&lt;/p&gt;
&lt;p&gt;Instead of concluding from Hyrum's law that semantic versioning is impossible, I conclude that builds should be careful to use exactly the same versions of each dependency that the author did, unless forced to do otherwise. That is, builds should default to being as reproducible as possible.&lt;/p&gt;
&lt;h3&gt;Vendoring and Reproducible Builds&lt;/h3&gt;
&lt;p&gt;The second significant shortcoming of &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; is that, without a concept of versioning, it cannot ensure or even express the idea of a reproducible build. There is no way to be sure that your users are compiling the same versions of your code's dependencies that you did. In November 2013, the Go 1.2 FAQ also added this basic advice:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;If you're using an externally supplied package and worry that it might change in unexpected ways, the simplest solution is to copy it to your local repository. (This is the approach Google takes internally.) Store the copy under a new import path that identifies it as a local copy. For example, you might copy &lt;code&gt;&quot;original.com/pkg&quot;&lt;/code&gt; to &lt;code&gt;&quot;you.com/external/original.com/pkg&quot;&lt;/code&gt;. Keith Rarick's &lt;code&gt;goven&lt;/code&gt; is one tool to help automate this process.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Goven&lt;/code&gt;, which Keith Rarick had started in March 2012, copied a dependency into your repository and also updated all the import paths within it to reflect the new location. Modifying the source code of the dependency in this way was necessary to make it build but was also unfortunate. The modifications made it harder to compare against and incorporate newer copies and required updates to other copied code using that dependency.&lt;/p&gt;
&lt;p&gt;In September 2013, &lt;a href=&quot;https://groups.google.com/d/msg/golang-nuts/8NJq6jTIpas/Vpf-KZtVu9MJ&quot;&gt;Keith announced &lt;code&gt;godep&lt;/code&gt;&lt;/a&gt;, “a new tool for freezing package dependencies.” The main advance in &lt;code&gt;godep&lt;/code&gt; was to add what we now understand as Go vendoring—that is, to copy dependencies into the project &lt;em&gt;without&lt;/em&gt; modifying the source files—without direct toolchain support, by setting up GOPATH in a certain way.&lt;/p&gt;
&lt;p&gt;In October 2014, Keith &lt;a href=&quot;https://groups.google.com/forum/#!msg/golang-dev/74zjMON9glU/dGhnoi2IMzsJ&quot;&gt;proposed adding support for the concept of “external packages”&lt;/a&gt; to the Go toolchain, so that tools could better understand projects using that convention. By then, there were multiple efforts similar to &lt;code&gt;godep&lt;/code&gt;. Matt Farina wrote a blog post, “&lt;a href=&quot;https://codeengineered.com/blog/2014/glide-go-package-management/&quot;&gt;Glide in the Sea of Go Package Managers&lt;/a&gt;,” comparing &lt;code&gt;godep&lt;/code&gt; with the newer arrivals, most notably &lt;code&gt;glide&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In April 2015, Dave Cheney &lt;a href=&quot;https://dave.cheney.net/2015/05/12/introducing-gb&quot;&gt;introduced &lt;code&gt;gb&lt;/code&gt;&lt;/a&gt;, a “project-based build tool ... that permits repeatable builds via source vendoring,” again without import rewriting. (Another motivation for &lt;code&gt;gb&lt;/code&gt; was to avoid the requirement that code be stored in specific directories in GOPATH, which is not a good match for many developer workflows.)&lt;/p&gt;
&lt;p&gt;That spring, Jason Buberel surveyed the Go package management landscape to understand what could be done to unify these multiple efforts and avoid duplication and wasted work. His survey made it clear to us on the Go team that the &lt;code&gt;go&lt;/code&gt; command needed direct support for vendoring without import rewriting. At the same time, Daniel Theophanes started a specification for a file format to describe the exact provenance and version of code in a vendor directory. In June 2015, we accepted Keith's proposal as the &lt;a href=&quot;https://golang.org/s/go15vendor&quot;&gt;Go 1.5 vendor experiment&lt;/a&gt;, optional in Go 1.5 and enabled by default in Go 1.6. We encouraged all vendoring tool authors to work with Daniel to adopt a single metadata file format.&lt;/p&gt;
&lt;p&gt;Incorporating the concept of vendoring into the Go toolchain allowed program analysis tools like &lt;code&gt;go&lt;/code&gt; &lt;code&gt;vet&lt;/code&gt; to better understand projects using vendoring, and today there are a dozen or so Go package managers or vendoring tools that manage vendor directories. On the other hand, because these tools all use different metadata file formats, they do not interoperate and cannot easily share information about dependency requirements.&lt;/p&gt;
&lt;p&gt;More fundamentally, vendoring is an incomplete solution to the package versioning problem. It only provides reproducible builds. It does nothing to help understand package versions and decide which version of a package to use. Package managers like &lt;code&gt;glide&lt;/code&gt; and &lt;code&gt;dep&lt;/code&gt; add the concept of versioning onto Go builds implicitly, without direct toolchain support, by setting up the vendor directory a certain way. As a result, the many tools in the Go ecosystem cannot be made properly aware of versions. It's clear that Go needs direct toolchain support for package versions.&lt;/p&gt;
&lt;h3&gt;An Official Package Management Experiment&lt;/h3&gt;
&lt;p&gt;At GopherCon 2016, a group of interested gophers got together on Hack Day (now Community Day) for a &lt;a href=&quot;https://docs.google.com/document/d/1xMJ0c-YxvcgNglzjbALzncs5_Acr0MST29oMf9TkgQI/edit&quot;&gt;wide-ranging discussion of Go package management&lt;/a&gt;. One outcome was the formation of &lt;a href=&quot;https://groups.google.com/d/msg/go-package-management/P8TehVoFLjg/Ni6VRyOjEAAJ&quot;&gt;a committee and an advisory group for package management work&lt;/a&gt;, with a goal of creating a new tool for Go package management. The vision was for that tool to unify and replace the existing ones, but it would still be implemented outside the direct toolchain, using vendor directories. The committee—Andrew Gerrand, Ed Muller, Jessie Frazelle, and Sam Boyer, organized by Peter Bourgon—&lt;a href=&quot;https://docs.google.com/document/d/1qnmjwfMmvSCDaY4jxPmLAccaaUI5FfySNE90gB0pTKQ/edit&quot;&gt;drafted a spec&lt;/a&gt; and then, led by Sam, &lt;a href=&quot;https://github.com/golang/dep&quot;&gt;implemented it as &lt;code&gt;dep&lt;/code&gt;&lt;/a&gt;. For background, see Sam's February 2016 post “&lt;a href=&quot;https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527&quot;&gt;So you want to write a package manager&lt;/a&gt;,” his December 2016 post “&lt;a href=&quot;https://blog.gopheracademy.com/advent-2016/saga-go-dependency-management/&quot;&gt;The Saga of Go Dependency Management&lt;/a&gt;,” and his July 2017 GopherCon talk, “&lt;a href=&quot;https://www.youtube.com/watch?v=5LtMb090AZI&quot;&gt;The New Era of Go Package Management&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Dep&lt;/code&gt; serves many purposes: it is an important improvement over current practice that's usable today, it is an important step toward a solution, and it is also an experiment—we call it an “official experiment”—that helps us learn more about what does and does not work well for Go developers. But &lt;code&gt;dep&lt;/code&gt; is not a direct prototype of the eventual &lt;code&gt;go&lt;/code&gt; command integration of package versioning. It is a powerful, almost arbitrarily flexible way to explore the design space, serving a role like makefiles did when we were grappling with how to build Go programs. But once we understand the design space better and can narrow it down to the few key features that must be supported, it will help the Go ecosystem to remove the other features, to reduce expressiveness, to adopt enforced conventions that make Go code bases more uniform and easier to understand and make tooling easier to build.&lt;/p&gt;
&lt;p&gt;This post is the beginning of the next step after &lt;code&gt;dep&lt;/code&gt;: the first draft of a prototype of the final &lt;code&gt;go&lt;/code&gt; command integration, the package management equivalent of &lt;code&gt;goinstall&lt;/code&gt;. The prototype is a standalone command we call &lt;code&gt;vgo&lt;/code&gt;. It is a drop-in replacement for the &lt;code&gt;go&lt;/code&gt; command, but it adds support for package versioning. This is a new experiment, and we will see what we can learn from it. Like when we introduced &lt;code&gt;goinstall&lt;/code&gt;, some code and projects already work with &lt;code&gt;vgo&lt;/code&gt; today, and other projects will need changes to be made compatible. We will be taking away some control and expressiveness, just as we took away makefiles, in service of simplifying the system and eliminating complexity for users. Generally, we are looking for early adopters to help us experiment with &lt;code&gt;vgo&lt;/code&gt;, so that we can learn as much as possible from users.&lt;/p&gt;
&lt;p&gt;Starting to experiment with &lt;code&gt;vgo&lt;/code&gt; does not mean ending support for &lt;code&gt;dep&lt;/code&gt;. We will keep &lt;code&gt;dep&lt;/code&gt; available until the path to full &lt;code&gt;go&lt;/code&gt; command integration is decided, implemented, and generally available. We will also work to make the eventual transition from &lt;code&gt;dep&lt;/code&gt; to the &lt;code&gt;go&lt;/code&gt; command integration, in whatever form it takes, as smooth as possible. Projects that have not yet converted to &lt;code&gt;dep&lt;/code&gt; can still reap real benefits from doing so. (Note that both &lt;a href=&quot;https://github.com/tools/godep&quot;&gt;&lt;code&gt;godep&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/Masterminds/glide&quot;&gt;&lt;code&gt;glide&lt;/code&gt;&lt;/a&gt; have ended active development and encourage migrating to &lt;code&gt;dep&lt;/code&gt;.) Other projects may wish to move directly to &lt;code&gt;vgo&lt;/code&gt;, if it serves their needs already.&lt;/p&gt;
&lt;h2&gt;Proposal&lt;/h2&gt;
&lt;p&gt;The proposal for adding versioning to the &lt;code&gt;go&lt;/code&gt; command has four steps. First, adopt the &lt;em&gt;import compatibility rule&lt;/em&gt; hinted at by the Go FAQ and gopkg.in; that is, establish the expectation that newer versions of a package with a given import path should be backwards-compatible with older versions. Second, use a simple, new algorithm, known as &lt;em&gt;minimal version selection&lt;/em&gt;, to choose which package versions are used in a given build. Third, introduce the concept of a Go &lt;em&gt;module&lt;/em&gt;, a group of packages versioned as a single unit and that declare the minimum requirements that must be satisfied by their dependencies. Fourth, define how to retrofit all this into the existing &lt;code&gt;go&lt;/code&gt; command, so that basic workflows do not change significantly from today. The rest of this section introduces each of these steps. Other blog posts this week will go into more detail.&lt;/p&gt;
&lt;h3&gt;The Import Compatibility Rule&lt;/h3&gt;
&lt;p&gt;Nearly all pain in package management systems is caused by trying to tame incompatibility. For example, most systems allow package B to declare that it requires package D 6 or later, and then allow package C to declare that it requires D 2, 3, or 4, but not 5 or later. If you are writing package A, and you want to use both B and C, then you are out of luck: there is no one single version of D that can be chosen to build both B and C into A. There is nothing you can do about it: these systems say that what B and C did was acceptable—they effectively encourage it—so you are just stuck.&lt;/p&gt;
&lt;p&gt;Instead of designing a system that inevitably leads to large programs not building, this proposal requires that package authors follow the &lt;em&gt;import compatibility rule&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;If an old package and a new package have the same import path,&lt;br/&gt;the new package must be backwards-compatible with the old package.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rule is a restatement of the suggestion from the Go FAQ, quoted earlier. The quoted FAQ text ended by saying, “If a complete break is required, create a new package with a new import path.” Developers today expect to use semantic versioning to express such a break, so we integrate semantic versioning into our proposal. Specifically, major version 2 and later can be used by including the version in the path, as in:&lt;/p&gt;
&lt;pre&gt;
import &quot;github.com/go-yaml/yaml/v2&quot;
&lt;/pre&gt;
&lt;p&gt;Creating v2.0.0, which in semantic versioning denotes a major break, therefore creates a new package with a new import path, as required by import compatibility. Because each major version has a different import path, a given Go executable might contain one of each major version. This is expected and desirable. It keeps programs building and allows parts of a very large program to update from v1 to v2 independently.&lt;/p&gt;
&lt;p&gt;Expecting authors to follow the import compatibility rule lets us avoid trying to tame incompatibility, making the overall system exponentially simpler and the package ecosystem less fragmented. In practice, of course, despite the best efforts of authors, updates within the same major version do occasionally break users. Therefore, it's important to use an upgrade mechanism that doesn't upgrade too quickly. That brings us to the next step.&lt;/p&gt;
&lt;h3&gt;Minimal Version Selection&lt;/h3&gt;
&lt;p&gt;Nearly all package managers today, including &lt;code&gt;dep&lt;/code&gt; and &lt;code&gt;cargo&lt;/code&gt;, &lt;a href=&quot;https://research.swtch.com/cargo-newest.html&quot;&gt;use the newest allowed version&lt;/a&gt; of packages involved in the build. I believe this is the wrong default, for two important reasons. First, the meaning of “newest allowed version” can change due to external events, namely new versions being published. Maybe tonight someone will introduce a new version of some dependency, and then tomorrow the same sequence of commands you ran today would produce a different result. Second, to override this default, developers spend their time telling the package manager “no, don't use X,” and then the package manager spends its time &lt;a href=&quot;https://research.swtch.com/version-sat&quot;&gt;searching for a way not to use X&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This proposal takes a different approach, which I call &lt;em&gt;minimal version selection&lt;/em&gt;. It defaults to using the &lt;em&gt;oldest&lt;/em&gt; allowed version of every package involved in the build. This decision does not change from today to tomorrow, because no older version will be published. Even better, to override this default, developers spend their time telling the package manager, “no, use at least Y,” and then the package manager can trivially decide which version to use. I call this minimal version selection because the versions chosen are minimal and also because the system as a whole is perhaps also minimal, avoiding nearly all the complexity of existing systems.&lt;/p&gt;
&lt;p&gt;Minimal version selection allows modules to specify only minimum requirements for their dependency modules. It gives well-defined, unique answers for both upgrade and downgrade operations, and those operations are efficient to implement. It also allows the author of the overall module being built to specify dependency versions to exclude, or to specify that a specific dependency version be replaced by a forked copy, either in the local file system or published as its own module. These exclusions and replacements do not apply when the module is being built as a dependency of some other module. This gives users full control over how their own programs build, but not over how other people's programs build.&lt;/p&gt;
&lt;p&gt;Minimal version selection delivers reproducible builds by default, without a lock file.&lt;/p&gt;
&lt;p&gt;Import compatibility is key to minimal version selection's simplicity. Instead of users saying “no, that's too new,” they can only say “no, that's too old.” In that case, the solution is clear: use a (minimally) newer version. And newer versions are agreed to be acceptable replacements for older ones.&lt;/p&gt;
&lt;h3&gt;Defining Go Modules&lt;/h3&gt;
&lt;p&gt;A Go &lt;em&gt;module&lt;/em&gt; is a collection of packages sharing a common import path prefix, known as the module path. The module is the unit of versioning, and module versions are written as semantic version strings. When developing using Git, developers will define a new semantic version of a module by adding a tag to the module's Git repository. Although semantic versions are strongly preferred, referring to specific commits will be supported as well.&lt;/p&gt;
&lt;p&gt;A module defines, in a new file called &lt;code&gt;go.mod&lt;/code&gt;, the minimum version requirements of other modules it depends on. For example, here is a simple &lt;code&gt;go.mod&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;
// My hello, world.

module &quot;rsc.io/hello&quot;

require (
        &quot;golang.org/x/text&quot; v0.0.0-20180208041248-4e4a3210bb54
        &quot;rsc.io/quote&quot; v1.5.2
)
&lt;/pre&gt;
&lt;p&gt;This file defines a module, identified by path &lt;code&gt;rsc.io/hello&lt;/code&gt;, which itself depends on two other modules: &lt;code&gt;golang.org/x/text&lt;/code&gt; and &lt;code&gt;rsc.io/quote&lt;/code&gt;. A build of a module by itself will always use the specific versions of required dependencies listed in the &lt;code&gt;go.mod&lt;/code&gt; file. As part of a larger build, it will only use a newer version if something else in the build requires it.&lt;/p&gt;
&lt;p&gt;Authors will be expected to tag releases with semantic versions, and &lt;code&gt;vgo&lt;/code&gt; encourages using tagged versions, not arbitrary commits. The &lt;code&gt;rsc.io/quote&lt;/code&gt; module, served from &lt;code&gt;github.com/rsc/quote&lt;/code&gt;, has tagged versions, including v1.5.2. The &lt;code&gt;golang.org/x/text&lt;/code&gt; module, however, does not yet provide tagged versions. To name untagged commits, the pseudo-version v0.0.0-&lt;em&gt;yyyymmddhhmmss&lt;/em&gt;-&lt;em&gt;commit&lt;/em&gt; identifies a specific commit made on the given date. In semantic versioning, this string corresponds to a v0.0.0 prerelease, with prerelease identifier &lt;em&gt;yyyymmddhhmmss&lt;/em&gt;-&lt;em&gt;commit&lt;/em&gt;. Semantic versioning precedence rules order such prereleases before v0.0.0 or any later version, and they order prereleases by string comparison. Placing the date first in the pseudo-version syntax ensures that string comparison matches date comparison.&lt;/p&gt;
&lt;p&gt;In addition to requirements, &lt;code&gt;go.mod&lt;/code&gt; files can specify the exclusions and replacements mentioned in the previous section, but again those are only applied when building the module directly, not when building the module as part of a larger program. The &lt;a href=&quot;https://research.swtch.com/vgo-tour&quot;&gt;examples&lt;/a&gt; illustrate all of these.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Goinstall&lt;/code&gt; and old &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; invoke version control tools like &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;hg&lt;/code&gt; directly to download code, leading to many problems, among them fragmentation: users without &lt;code&gt;bzr&lt;/code&gt; cannot download code stored in Bazaar repositories, for example. In contrast, modules are always zip archives served over HTTP. Before, &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; had special cases to choose the version control commands for popular code hosting sites. Now, &lt;code&gt;vgo&lt;/code&gt; has special cases to use those hosting sites' APIs to fetch archives.&lt;/p&gt;
&lt;p&gt;The uniform representation of modules as zip archives makes possible a trivial protocol for and implementation of a module-downloading proxy. Companies or individuals can run proxies for any number of reasons, including security and wanting to be able to work from cached copies in case the originals are removed. With proxies available to ensure availability and &lt;code&gt;go.mod&lt;/code&gt; to define which code to use, &lt;code&gt;vendor&lt;/code&gt; directories are no longer needed.&lt;/p&gt;
&lt;h3&gt;The &lt;code&gt;go&lt;/code&gt; command&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;go&lt;/code&gt; command must be updated to work with modules. One significant change is that ordinary build commands, like &lt;code&gt;go&lt;/code&gt; &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt; &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt; &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;go&lt;/code&gt; &lt;code&gt;test&lt;/code&gt;, will resolve new dependencies on demand, All it takes to use &lt;code&gt;golang.org/x/text&lt;/code&gt; in a brand new module is to add an import to the Go source code and build the code.&lt;/p&gt;
&lt;p&gt;The most significant change, though, is the end of GOPATH as a required place to work on Go code. Because the &lt;code&gt;go.mod&lt;/code&gt; file includes the full module path and also defines the version of every dependency in use, a directory with a &lt;code&gt;go.mod&lt;/code&gt; file marks the root of a directory tree that serves as a self-contained work space, separate from any other such directories. Now you just &lt;code&gt;git&lt;/code&gt; &lt;code&gt;clone&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, and start writing. Anywhere. No GOPATH required.&lt;/p&gt;
&lt;h2&gt;What's Next?&lt;/h2&gt;
&lt;p&gt;I've also posted “&lt;a href=&quot;https://research.swtch.com/vgo&quot;&gt;A Tour of Versioned Go&lt;/a&gt;,” showing what it's like to use &lt;code&gt;vgo&lt;/code&gt;. See that post for how to download and experiment with &lt;code&gt;vgo&lt;/code&gt; today. I'll post more throughout the week to add details that I skipped in this post. I encourage feedback in the comments on this post and the others, and I'll try to watch the Go subreddit and the golang-nuts mailing list too. On Friday I will post a FAQ as the final blog post in the series (at least for now). Next week I will submit a formal Go proposal.&lt;/p&gt;
&lt;p&gt;Please &lt;a href=&quot;https://research.swtch.com/vgo-tour&quot;&gt;try &lt;code&gt;vgo&lt;/code&gt;&lt;/a&gt;. Start tagging versions in your repositories. Create and check in &lt;code&gt;go.mod&lt;/code&gt; files. Note that if run in a repository that has an empty &lt;code&gt;go.mod&lt;/code&gt; but that does have an existing &lt;code&gt;dep&lt;/code&gt;, &lt;code&gt;glide&lt;/code&gt;, &lt;code&gt;glock&lt;/code&gt;, &lt;code&gt;godep&lt;/code&gt;, &lt;code&gt;godeps&lt;/code&gt;, &lt;code&gt;govend&lt;/code&gt;, &lt;code&gt;govendor&lt;/code&gt;, or &lt;code&gt;gvt&lt;/code&gt; configuration file, &lt;code&gt;vgo&lt;/code&gt; will use that to fill in the &lt;code&gt;go.mod&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;I'm excited for Go to take the long-overdue step of adding versions to its working vocabulary. Some of the most common problems that developers run into when using Go are the lack of reproducible builds, &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; ignoring release tags entirely, the inability of GOPATH to comprehend multiple versions of a package, and wanting or needing to work in source directories outside GOPATH. The design proposed here eliminates all these problems, and more.&lt;/p&gt;
&lt;p&gt;Even so, I'm sure there are details that are wrong. I hope our users will help us get this design right by trying the new &lt;code&gt;vgo&lt;/code&gt; prototype and engaging in productive discussions. I would like Go 1.11 to ship with preliminary support for Go modules, as a kind of technology preview, and then I'd like Go 1.12 to ship with official support. In some later release, we'll remove support for the old, unversioned &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt;. That's an aggressive schedule, though, and if getting the functionality right means waiting for later releases, we will.&lt;/p&gt;
&lt;p&gt;I care very much about the transition from old &lt;code&gt;go&lt;/code&gt; &lt;code&gt;get&lt;/code&gt; and the myriad vendoring tools to the new module system. That process is just as important to me as getting the functionality right. If a successful transition means waiting for later releases, we will.&lt;/p&gt;
&lt;p&gt;Thanks to Peter Bourgon, Jess Frazelle, Andrew Gerrand, and Ed Mueller, and Sam Boyer for their work on the package management committee and for many helpful discussions over the past year. Thanks also to Dave Cheney, Gustavo Niemeyer, Keith Rarick, and Daniel Theophanes for key contributions to the story of Go and package versioning. Thanks again to Sam Boyer for creating &lt;code&gt;dep&lt;/code&gt;, and to him and the &lt;code&gt;dep&lt;/code&gt; contributors for all their work on it. Thanks to everyone who has created or worked on the many earlier vendoring tools as well. Finally, thanks to everyone who will help us move this proposal forward, find and fix what's wrong, and add package versioning to Go as smoothly as possible.&lt;/p&gt;
</description>
<pubDate>Tue, 20 Feb 2018 17:17:50 +0000</pubDate>
<dc:creator>bketelsen</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://research.swtch.com/vgo-intro</dc:identifier>
</item>
<item>
<title>The Business of SaaS</title>
<link>https://stripe.com/atlas/guides/business-of-saas</link>
<guid isPermaLink="true" >https://stripe.com/atlas/guides/business-of-saas</guid>
<description>&lt;p&gt;Software-as-a-service (SaaS) is a billing and delivery model for software which is so superior to the traditional method for selling software licenses that it restructures businesses around itself. This has led SaaS businesses to have a distinct body of practice. Unfortunately, many entrepreneurs discover this body of practice the hard way, by making mistakes that have been made before, rather than by spending their mistake budget on newer, better mistakes.&lt;/p&gt;
&lt;p&gt;This shouldn’t include you, so we’ll take you through a whirlwind tour of the state of play of SaaS businesses. You should gain a better understanding of the SaaS business model, be able to anticipate whether to sell your product on a low-touch or high-touch model, and (if you’re already operating a SaaS business) be able to evaluate its health and start improving it.&lt;/p&gt;
&lt;p&gt;If you are a software entrepreneur, and you do not sell mobile applications (which have a separate billing model, imposed by the platforms’ app stores), you should thoroughly understand the business of SaaS. This will let you make better decisions for your product (and company), allow you to see business-threatening problems months or years in advance of them being obvious, and help you in &lt;a href=&quot;https://stripe.com/atlas/guides/pitching&quot;&gt;communicating with investors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt; love SaaS because it “just works.” There is typically nothing to install to access it. Hardware failures and operational errors, which are extraordinarily common among machines which are not maintained by professionals, do not result in meaningful data loss. SaaS companies achieve availability numbers (for example, percent of time where the software is accessible and operating correctly) which materially improve upon the numbers achievable by almost every IT department (and every individual, full-stop).&lt;/p&gt;
&lt;p&gt;SaaS also generally &lt;em&gt;appears&lt;/em&gt; less expensive than software sold on other billing models, which matters for e.g. users who are not sure which software they should adopt over long terms, or who have only a short-term need for the software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Developers&lt;/strong&gt; love SaaS principally because of the delivery model, not the billing model.&lt;/p&gt;
&lt;p&gt;Most SaaS is developed continuously and run on the company’s infrastructure. (There are significant exceptions in SaaS in the enterprise, but the overwhelming majority of B2C and B2B SaaS sold outside the enterprise is accessed over the internet from servers maintained by the software company.)&lt;/p&gt;
&lt;p&gt;Software companies historically have not controlled the environments their code executes in. This is historically a major source of both development friction and customer support cases. All software deployed on customers’ hardware suffers from differences in configurations of systems, interactions with other installed software, and operator error. This has to be both accounted for in development and dealt with as a customer services issue. Companies which sell their software on both SaaS and installable models frequently see 10+ times more support requests per customer from customers who install the software locally.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Businesses and investors&lt;/strong&gt; love SaaS because the economics of SaaS are impossibly attractive relative to selling software licenses. Revenue from SaaS is generally recurring and predictable; this makes cash flows in SaaS businesses impressively predictable, which allows businesses to plan against them and (via investors) trade future cash flows for money in the status quo, which allows them to (generously) fund present growth. This has made SaaS companies into some of the fastest growing software companies in history.&lt;/p&gt;
&lt;h2 id=&quot;saas-sales-models&quot;&gt;SaaS sales models&lt;/h2&gt;
&lt;p&gt;There are, broadly speaking, two ways to sell SaaS. The selling model dictates almost everything else about the SaaS company and the product, to a degree which is shocking to first-time entrepreneurs. One of the classic mistakes in SaaS, which can take years to correct, is a mismatch between a product or market and the selected model to sell it on.&lt;/p&gt;
&lt;p&gt;You will find that the sales model for SaaS defines &lt;em&gt;much&lt;/em&gt; more about a product (and company) than other distinctions, like whether a company sells to customers (B2C) or businesses (B2B), whether it is bootstrapped or riding the VC rocket ship trajectory, or what technology stack it is built on.&lt;/p&gt;

&lt;p&gt;Some products sell themselves.&lt;/p&gt;
&lt;p&gt;Low-touch SaaS is designed for the majority of customers to purchase it without sustained one-on-one interaction with a human being. The primary sales channels are the software’s website, email marketing, and (very frequently) a free trial for the software, with the trial being aggressively optimized to be very, very low-friction to start, onboard, and successfully make sustained use of the SaaS.&lt;/p&gt;
&lt;p&gt;Low-touch products sometimes involve sales teams, but they’re frequently structured as so-called “Customer Success” teams, which are less focused on convincing people to buy the software and more on ensuring that users of the free trial successfully onboard and convert to paying users by the end of their trials.&lt;/p&gt;
&lt;p&gt;Customer support in low-touch products is generally handled primarily in scalable fashions, by optimizing the product to avoid incidents which would require human intervention, by creating educational resources which scale across the customer base, and by using humans as a last-resort. That said, many low-touch companies have &lt;em&gt;excellent&lt;/em&gt; customer support teams. The economics of SaaS depend on the long-term satisfaction of customers, so even a product which expects only one ticket (a countable discrete interaction with a customer) every 20 customer-months might invest comparatively heavily in their CS team.&lt;/p&gt;
&lt;p&gt;Low-touch SaaS is generally sold on a month-to-month subscription with price points clustering around $10 for B2C applications in the $20 to $500 range for B2B. This corresponds to an average contract value (ACV) of approximately $100 to $5k. The term ACV isn’t commonly even used by low-touch SaaS businesses, which typically describe themselves by their monthly price points, but it is important to do comparisons to high-touch SaaS applications.&lt;/p&gt;
&lt;p&gt;If you asked a low-touch SaaS entrepreneur for their most important metric, they would say MRR—monthly recurring revenue.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://basecamp.com&quot;&gt;Basecamp&lt;/a&gt; is the paradigmatic example of a low-touch SaaS business. &lt;a href=&quot;https://atlassian.com&quot;&gt;Atlassian&lt;/a&gt; (which makes JIRA, Trello, Confluence, and several other products) is possibly the publicly-traded company with the most success with the model.&lt;/p&gt;

&lt;p&gt;Some customers need some help in deciding whether or how to adopt certain products.&lt;/p&gt;
&lt;p&gt;High-touch SaaS is designed around there being a human-intensive process to convince businesses to adopt the software, successfully operationalize it, and continue using it.&lt;/p&gt;
&lt;p&gt;The beating heart of the organization is almost always the sales teams, which are often broken down into specialized roles: sales development representatives (SDRs) who find prospects for the software, account executives (AEs) who own the sales process against particular customers, and account managers (AMs) who are responsible for the happiness and continued performance of an individualized portfolio of accounts.&lt;/p&gt;
&lt;p&gt;The sales team is typically supported by marketing, whose primary job is generating a sufficient pipeline of qualified leads for the sales team to evaluate and close.&lt;/p&gt;
&lt;p&gt;There are many truly excellent products sold on the high-touch model, but to a first approximation, engineering and product are generally considered less important in high-touch SaaS businesses than the sales engine is.&lt;/p&gt;
&lt;p&gt;The organization of customer support is highly variable across high-touch SaaS companies; a commonality is that it is generally expected to be heavily utilized. The number of tickets per account per period is expected to be orders of magnitude higher than it is in low-touch SaaS.&lt;/p&gt;
&lt;p&gt;Note that while, in principle, one can make high-touch sales to consumers (for example, insurance has historically been sold primarily through commissioned agents), in SaaS, the overwhelming majority of high-touch businesses sell to businesses (B2B). Within B2B, there is a wide range of expected customer profiles, ACVs (defined variously as average contract value or annual contract value), and deal complexity.&lt;/p&gt;
&lt;p&gt;On the low-end, SaaS sold to “small and medium sized businesses” (SMBs) on a high-touch model generally has an ACV of $6k to $15k, though this can range higher. The exact definition of an SMB varies heavily depending on who you ask; operationally, it is “any business with sufficient sophistication to successfully adopt software which costs $10,000”, which probably excludes your local flower shop but includes a dental practice with 2 partners and 4 employees.&lt;/p&gt;
&lt;p&gt;The high end is usually called “the enterprise” and targets extremely large businesses or governments. True enterprise deals start in the six figures; there is no ceiling. (There is a $70 million ACV customer in &lt;a href=&quot;http://phx.corporate-ir.net/External.File?item=UGFyZW50SUQ9NjYxODU5fENoaWxkSUQ9MzgyOTU1fFR5cGU9MQ==&amp;amp;t=1&quot;&gt;Inovalon’s annual report&lt;/a&gt;, for example.)&lt;/p&gt;
&lt;p&gt;If you asked a high-touch SaaS entrepreneur for their most important metric, they would say ARR—annually recurring revenue. (This is essentially all of the non-churned revenue of the company, minus certain non-recurring items such as one-time setup fees, consulting services, and similar. Since the economics of SaaS are attractive because of growth over time, one-off revenue, particularly comparatively low-margin one-off revenue, is not maximally interesting to entrepreneurs or investors.)&lt;/p&gt;
&lt;p&gt;Salesforce is the paradigmatic example of a high-touch SaaS business, and they literally &lt;a href=&quot;https://www.amazon.com/Predictable-Revenue-Business-Practices-Salesforce-com/dp/0984380213&quot;&gt;wrote the book&lt;/a&gt; on the model. Small high-touch SaaS businesses exist in multitudes, though they’re less visible than low-touch SaaS businesses, principally because visibility is a customer acquisition strategy in low-touch SaaS and not always optimal in high-touch SaaS. For example, there many small SaaS businesses which quietly make six or seven figures a year selling services to a tightly defined vertical.&lt;/p&gt;
&lt;h2 id=&quot;hybrid-sales-approaches&quot;&gt;Hybrid sales approaches&lt;/h2&gt;
&lt;p&gt;There exist companies which successfully run a low-touch and high-touch business with functionally the same product. They are &lt;em&gt;exceedingly&lt;/em&gt; rare relative to SaaS businesses. The most common result of attempting both models simultaneously is that only one of the models receives any traction, and (because these models weave themselves into all operations of the company) it typically strangles the other.&lt;/p&gt;
&lt;p&gt;A more common form of hybridization is adopting certain elements of the other sales model. For example, many low-touch SaaS businesses have customer success teams which, if you squint at them, look almost like inside sales. High-touch companies typically borrow fewer tactics than low-touch companies; the most common one is having a product that the company does not (materially) sell which they distribute in a low-touch fashion for the purpose of lead generation for the product the company actually sells.&lt;/p&gt;

&lt;p&gt;The SaaS model, fundamentally, works by financializing software: instead of selling software as a product with a sticker price, it sells the software as if it were a financial instrument, with a probabilistically forecastable cash flow.&lt;/p&gt;
&lt;p&gt;There are more sophisticated ways to model a SaaS business, but the no-MBA-required version just makes a few simplifying assumptions (like ignoring the time-value of money) and uses high-school math. If you only learn one thing about SaaS, learn this equation; it is the Rosetta Stone to understanding all material facts about a SaaS business.&lt;/p&gt;
&lt;p&gt;The core insight is really simple: one’s revenue, over the long term, is the number of customers times the average lifetime revenue per customer.&lt;/p&gt;
&lt;p&gt;The number of customers you get is a product of two factors: &lt;strong&gt;acquisition&lt;/strong&gt; (how effective you are at attracting the attention of prospects in low-touch SaaS or identifying and getting in front of them in high-touch SaaS) times your &lt;strong&gt;conversion rate&lt;/strong&gt; (the percent of prospects you convert into paying customers.)&lt;/p&gt;
&lt;p&gt;The average lifetime revenue per customer (often called &lt;strong&gt;lifetime value (LTV)&lt;/strong&gt;) is the product of how much they pay you for a particular period (such as one month) and how many periods they persist using your service.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;average revenue per user (ARPU)&lt;/strong&gt; is simply the average revenue for an account over any particular period.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;churn&lt;/strong&gt; is the percent of customers over a given period who do not continue paying for services. For example, if you have 200 customers pay you in January and only 190 of those pay you in February, the churn would be 5%.&lt;/p&gt;
&lt;p&gt;The lifetime of a customer can, with a few simplifiying assumptions, be calculated as the &lt;a href=&quot;https://www.khanacademy.org/math/calculus-home/series-calc/geo-series-calc/v/infinite-geometric-series&quot;&gt;sum of an infinite geometric series&lt;/a&gt;; this works out to simply taking the inverse of churn. A product which loses 5% of its customers per month has an expected customer lifetime of 20 months; if it charges each customer $30 a month, it has an expected lifetime revenue of $600 per new customer signed up.&lt;/p&gt;
&lt;h2 id=&quot;implications-of-the-saas-business-model&quot;&gt;Implications of the SaaS business model&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Improvements to a SaaS business are multiplicatively effective.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A 10% improvement to acquisition (via e.g. better marketing) and a 10% improvement to conversion rate (via e.g. product improvements or more effective sales techniques) sum to a 21% improvement (1.1 * 1.1), not a 20% improvement.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Improvements to a SaaS business are &lt;em&gt;incredibly&lt;/em&gt; leveraged.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because the margins in SaaS are so high, the long-term valuation of a SaaS business is effectively tied to some revenue of its long-term revenues. Thus, a 1% improvement in conversion rates doesn’t simply mean a 1% increase in revenue next month or even over the long term… it implies a 1% increase in &lt;em&gt;enterprise value of the company&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Price is the easiest lever to improve a SaaS business.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Aquisition, conversion, and churn often require major cross-functional efforts to improve. Pricing typically requires replacing a small number with a bigger one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SaaS businesses eventually asymptote.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given fixed acquisition, conversion, and churn, there will be at which one’s business hits a revenue plateau. This is predictable in advance: the number of customers at the plateau is equal to acquisition times conversion divided by churn rate.&lt;/p&gt;
&lt;p&gt;A SaaS business which loses ability to improve acquisition, conversion, or churn will, with almost mathematical certainty, stop growing. A SaaS business which stops growing before it can cover fixed costs (like e.g. salaries for the engineering team) dies ignominiously, &lt;em&gt;even if they did everything right&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SaaS businesses can be capital-intensive to grow.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SaaS businesses have large front-loaded costs to grow, particularly when growing aggressively; marketing and sales dominates the marginal cost per customer and, often, the total expenditures of the company. The marketing and sales costs attributable to a particular customer occur very early in that customer’s lifecycle; the revenue to eventually pay for those costs comes later.&lt;/p&gt;
&lt;p&gt;This means that a SaaS company &lt;a href=&quot;http://www.paulgraham.com/growth.html&quot;&gt;optimizing for growth&lt;/a&gt; will &lt;em&gt;almost always&lt;/em&gt; spend more money in a given period than they collect from customers. The money spent has to come from somewhere. Many SaaS companies choose to fund the growth via selling equity in the companies to investors. SaaS companies are &lt;em&gt;particularly&lt;/em&gt; attractive to investors because the model is very well-understood: create a product, achieve some measure of product-market fit, spend a lot of money on marketing and sales according to a relatively repeatable playbook, and eventually sell one’s stake in the business to someone else (the public markets, an acquirer, or another investor looking for a derisked business with good growth potential).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Margins, to a first approximation, don’t matter.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most businesses care quite a bit about their cost-of-goods-sold (COGS), the cost to satisfy a marginal customer.&lt;/p&gt;
&lt;p&gt;While some platform businesses (like AWS) have material COGS, at the typical SaaS company, the primary source of value is the software and it can be replicated at an extremely low COGS. SaaS companies frequently spend less than 5~10% of their marginal revenue per customer on delivering the underlying service.&lt;/p&gt;
&lt;p&gt;This allows SaaS entrepreneurs to almost ignore every factor of their unit economics except customer acquisition cost (CAC; the marginal spending on marketing and sales per customer added). If they’re quickly growing, the company can ignore every expense that doesn’t scale directly with the number of customers (i.e. engineering costs, general and administrative expenses, etc), on the assumption that growth at a sensible CAC will outrun anything on the expenses side of the ledger.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SaaS businesses take a while to grow.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While tales of so-called “hockeystick” growth curves are common in the press, the representative experience of SaaS companies is that they take a very long time dialing in the product, marketing approaches, and sales approaches before things start to work very well. This has been referred to, memorably, as the &lt;a href=&quot;http://businessofsoftware.org/2013/02/gail-goodman-constant-contact-how-to-negotiate-the-long-slow-saas-ramp-of-death/&quot;&gt;Long Slow SaaS Ramp of Death&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Growth expectations vary widely in the SaaS industry.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bootstrapped SaaS businesses often take 18 months before they’re profitable enough to be competitive with reasonable wages for the founding team. After achieving that point, bootstrapped businesses have a wide range of acceptable outcomes for growth rates; 10~20% year over year growth rates in revenue can produce very, very happy outcomes for all concerned.&lt;/p&gt;
&lt;p&gt;Funded SaaS businesses are designed to trade cash for growth, which means they’re designed to lose a lot of money upfront while perfecting their model; almost no funded SaaS business ever has failed at that goal.&lt;/p&gt;
&lt;p&gt;After they perfect the model, they scale it, which generally results in losing more money, faster. That this is a successful outcome for the business is counterintuitive to many observers of the software industry. If the business can continue growing, there is no size of accumulated deficit that it cannot eventually repay. If growth does not happen, the business fails.&lt;/p&gt;
&lt;p&gt;There exist many lower-stress businesses in life than SaaS companies being managed for aggressive growth; it’s likened to riding a rocket ship, where you burn fuel aggressively to achieve acceleration and, by the way, if anything goes wrong you explode.&lt;/p&gt;
&lt;p&gt;The rule of thumb for growth rate expectations at a successful SaaS company being managed for aggressive growth is 3, 3, 2, 2, 2: starting from a material baseline (e.g. over $1 million in annual recurring revenue (ARR)), the business needs to triple annual revenues for two consecutive years and then double them for three consecutive years. A funded SaaS business which consistently grows by 20% per year early in its life is likely a failure in the eyes of its investors.&lt;/p&gt;

&lt;p&gt;One of the most popular questions for SaaS founders is “Are my numbers any good?”&lt;/p&gt;
&lt;p&gt;This is surprisingly difficult to answer, because of the differences across industries, business models, stages of a company, and goals of founders. In general, though, experienced SaaS entrepreneurs have a few rules of thumb.&lt;/p&gt;
&lt;h2 id=&quot;low-touch-saas-benchmarks&quot;&gt;Low-touch SaaS benchmarks&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Conversion rate:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most low-touch SaaS uses a free trial, with the signup either requiring minimal information &lt;em&gt;or&lt;/em&gt; a credit card that will be billed if the user doesn’t cancel the trial. This decision dominates the character of the free trial: users who sign in to a relatively low-friction trial may not be very serious about evaluating the software and need to affirmatively decide to purchase the software later, while users who provide a credit card number generally have done more up-front research and are, essentially, committing to pay unless they affirmatively declare they are dissatisfied with the product.&lt;/p&gt;
&lt;p&gt;This results in cosmically different conversion rates:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conversion rates of low-touch SaaS trials with credit card not required:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;substantially below 1%: generally evidence of poor product-market fit&lt;/li&gt;
&lt;li&gt;~1%: roughly the baseline for competent execution&lt;/li&gt;
&lt;li&gt;2%+: extremely good&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Conversion rates of low-touch SaaS trials with credit card &lt;em&gt;required&lt;/em&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;substantially below 40%: generally evidence of poor product-market fit&lt;/li&gt;
&lt;li&gt;40%: roughly the baseline for competent execution&lt;/li&gt;
&lt;li&gt;60%: doing well!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In general, requiring a credit card upfront will, on net, increase the number of new paying customers you get (it increases the trial-to-paying-customer conversion rate by more than it decreases the number of trials started). This factor &lt;em&gt;reverses&lt;/em&gt; as a company gets increasingly sophisticated about &lt;strong&gt;activating&lt;/strong&gt; free trial users (ensuring they make meaningful use of the software), typically via better in-product experiences, lifecycle email, and customer success teams.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conversion rate (to trials):&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You should measure your conversion rate between unique page views and trials started, but it isn’t the most actionable metric in your company, and it is difficult to give a good guideline for your expectations driven from this number.&lt;/p&gt;
&lt;p&gt;Conversion rate to the trial is incredibly sensitive to whether you are attracting high-quality visitors or not. Counterintuitively, companies which are better at marketing have &lt;em&gt;lower&lt;/em&gt; conversion rates than companies which are worse at it.&lt;/p&gt;
&lt;p&gt;The companies with better marketing attract many more prospects, including typically a larger percentage and absolute number of prospects who are not a good fit for the offering. Companies that are worse at marketing are only discovered by the cognoscenti of their markets, who tend to be disproportionately good customers; they’re so dissatisfied with the status quo that they’re actively searching for solutions, often intensely, and they’re willing to use a no-name company if it is possibly better than their current situation. The rest of the market might not be actively looking for a solution right now, might be satisfied with going with well-known players or only those who show up prominently on Google, and might not be incentivized to take on vendor risk for dealing with a newer provider.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Churn rates:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In low-touch SaaS, most customers are on month-to-month contracts, and churn rates are quoted monthly. (Selling annual accounts is certainly a good idea, too, both for the upfront cash collected and because they have lower churn rates. When reporting churn, though, typically the impact of them is blended in to produce a monthly number.)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;2%: a very sticky product, with strong product-market fit and substantial investments in reducing involuntary churn&lt;/li&gt;
&lt;li&gt;5%: roughly where you expect to start&lt;/li&gt;
&lt;li&gt;7%: you likely have either low-hanging fruit for preventing voluntary churn or are selling to a difficult market&lt;/li&gt;
&lt;li&gt;10%+: Evidence of very poor product market fit and &lt;strong&gt;an existential threat to the company&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Some markets structurally have higher churn than others: selling to “pro-sumers” or informal businesses such as freelancers exposes oneself to their high rate of exiting the business, which materially impacts churn rates. More established businesses fail far less frequently and have far less need to optimize their cash flows to the last $50.&lt;/p&gt;
&lt;p&gt;Since higher price points preferentially select for better customers, increasing prices is &lt;strong&gt;even more effective than entrepreneurs expect&lt;/strong&gt;: increasing prices by 25% can result in “accidentally” decreasing churn by 20%, simply by changing the mix of customers who buy the product. &lt;strong&gt;This factor leads many, many low-touch SaaS businesses to march “upmarket” over time.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;high-touch-saas-benchmarks&quot;&gt;High-touch SaaS benchmarks&lt;/h2&gt;
&lt;p&gt;High-touch SaaS businesses generally have much, much more heterogeneity with regards to both how they measure their conversion rates (largely due to differences in how they define an “opportunity”) and in their realized conversion rates given similar definitions, due to differences in their industry, sales process, and so forth.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Churn rates&lt;/strong&gt;, though, are closely clustered: roughly 10% &lt;em&gt;annualized churn&lt;/em&gt; is reasonable for companies in their early years. 7% is an excellent churn rate. Note that mediocre high-touch SaaS businesses have materially lower churn rates than even the best low-touch SaaS businesses, structurally.&lt;/p&gt;
&lt;p&gt;High-touch businesses often measure so-called “logo” churn (one business counts as one logo, regardless of how many units at that business use one’s software, how many seats they use, what they are paying, etc) and revenue churn. This is less important in low-touch SaaS, as those churn rates tend to be quite similar.&lt;/p&gt;
&lt;p&gt;Because high-touch SaaS businesses typically price their offerings such that they can increase the amount of revenue over the lifetime of a customer, by selling more seats or by offering additional products or similar, many of them track &lt;strong&gt;net revenue churn&lt;/strong&gt;, which is the difference in revenue per cohort per year. The gold-standard for a high-touch SaaS business is &lt;strong&gt;negative net revenue churn&lt;/strong&gt;: the impact of upgrades, increases in contract size on a year-to-year basis, and cross-selling to existing customers exceeds the revenue impact of customers deciding to terminate (or reduce) their use of the software. (Virtually no low-touch SaaS business achieves net negative churn; their churn rates are too high to outrun.)&lt;/p&gt;

&lt;p&gt;SaaS isn’t just about the metrics. The hardest thing to put a number on early in the lifetime of a SaaS company is called &lt;strong&gt;product/market fit&lt;/strong&gt;, a term &lt;a href=&quot;http://pmarchive.com/guide_to_startups_part4.html&quot;&gt;coined&lt;/a&gt; by Marc Andreessen, which informally means “Have you found a group of people who &lt;em&gt;love&lt;/em&gt; the thing you have built for them?”&lt;/p&gt;
&lt;p&gt;Products which don’t have product/market fit yet are plagued by relatively low conversion rates and high churn rates. Products which achieve product/market fit often accelerate their growth rates materially, have much higher conversion rates, and are generally more pleasant to work on.&lt;/p&gt;
&lt;p&gt;Serial SaaS entrepreneurs often struggle to describe product/market fit other than to say “If you have it you will &lt;em&gt;know&lt;/em&gt; that you have it, and if you have any doubt whether you have it, you do not.” It’s the difference between every sales conversation being you pushing a boulder up a hill and the customer practically pulling your hand off to get your software.&lt;/p&gt;
&lt;p&gt;Many SaaS with product/market fit &lt;strong&gt;did not launch with it&lt;/strong&gt;; it sometimes takes months or years of iterating to get there. The most important theme while iterating is to talk to many, many more customers than feels natural. Low-touch SaaS entrepreneurs can make an excuse to attempt to speak with &lt;em&gt;literally every&lt;/em&gt; person who signs up for a free trial; the economics of this are unsustainable at the price point but &lt;em&gt;running a SaaS company without product/market fit is also unsustainable&lt;/em&gt;, so it’s entirely justified by how much you learn.&lt;/p&gt;
&lt;p&gt;Achieving product/market fit isn’t just a matter of listening to feature requests and building those features. It is also listening closely to the commonalities of your best customers and leaning in on them. This can result in changes to the marketing, messaging, and design of the product to more closely target the needs of the best customers.&lt;/p&gt;
&lt;p&gt;Who are the “best” customers? Generally speaking, they’re the segments (by industry, size, user profile, or similar) where you have high conversion rates, low churn rates, and (almost always) relatively higher ACV. By far the most common change in emphasis of low-touch SaaS businesses is to launch with a product which serves a wide spectrum of users at a wide spectrum of sophistication, and then double-down on one or two niches for their most sophisticated users.&lt;/p&gt;
&lt;p&gt;Stripe Atlas is going to be publishing further guides on finding product/market fit, interviewing users, and optimizing every facet of your online business. If you’d like to hear about them, please give us your email address. If you have any thoughts about what other guides would be useful to your online business, please write us at atlas@stripe.com .&lt;/p&gt;
&lt;aside class=&quot;collect-email-guide&quot;&gt;&lt;div class=&quot;mask-container container-lg&quot;&gt;
&lt;div class=&quot;collect-email-partial&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;intro-copy column&quot; readability=&quot;7&quot;&gt;

&lt;form class=&quot;collect-form&quot; action=&quot;https://stripemail.createsend.com/t/d/s/qhkkid/&quot; readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;input class=&quot;email-field&quot; required=&quot;required&quot; type=&quot;email&quot; name=&quot;cm-qhkkid-qhkkid&quot; spellcheck=&quot;false&quot; placeholder=&quot;Email&quot;/&gt;&lt;button class=&quot;submit-button&quot; type=&quot;submit&quot;&gt;Get updates&lt;/button&gt;&lt;/p&gt;
&lt;p class=&quot;collect-error email&quot;&gt;Please enter your email address.&lt;/p&gt;
&lt;p class=&quot;collect-error connection&quot;&gt;You might have had an internet hiccup. Try again?&lt;/p&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;div class=&quot;collect-success column&quot; readability=&quot;8&quot;&gt;&lt;img class=&quot;icon&quot; src=&quot;https://stripe.com/img/v3/common/success.svg&quot; alt=&quot;Green checkmark&quot;/&gt;&lt;h3 class=&quot;common-BodyTitle&quot;&gt;Thank you!&lt;/h3&gt;
&lt;p class=&quot;common-BodyText&quot;&gt;We sent an email to &lt;/p&gt;
&lt;p class=&quot;common-BodyText&quot;&gt;Check your inbox to confirm your email address and we’ll let you know when we publish our next guide. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;a href=&quot;https://stripe.com/atlas/guides&quot; class=&quot;common-Link common-Link--arrowL&quot;&gt;Back to guides&lt;/a&gt;</description>
<pubDate>Tue, 20 Feb 2018 16:20:32 +0000</pubDate>
<dc:creator>geordilaforge</dc:creator>
<og:title>Stripe Atlas: Software as a Service, as a business</og:title>
<og:url>https://stripe.com/atlas/guides/business-of-saas</og:url>
<og:description>Stripe Atlas’ guide to understanding low-touch and high-touch SaaS businesses</og:description>
<og:image>https://stripe.com/img/v3/atlas/guide/social.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stripe.com/atlas/guides/business-of-saas</dc:identifier>
</item>
<item>
<title>Tesla Model S outsells German luxury flagships in Europe</title>
<link>http://europe.autonews.com/article/20180220/ANE/180219831/tesla-model-s-outsells-german-luxury-flagships-in-europe</link>
<guid isPermaLink="true" >http://europe.autonews.com/article/20180220/ANE/180219831/tesla-model-s-outsells-german-luxury-flagships-in-europe</guid>
<description>&lt;div class=&quot;box_article&quot; readability=&quot;33&quot;&gt;&lt;img src=&quot;http://europe.autonews.com/apps/pbcsi.dll/storyimage/CA/20180220/ANE/180219831/AR/0/Tesla.jpg&amp;amp;MaxW=622&amp;amp;cci_ts=20180221060035&quot; border=&quot;0&quot;/&gt;&lt;p&gt;European sales of the Tesla Model S (shown) outpaced those of the Mercedes S class and BMW 7 series.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;byline&quot;&gt;&lt;a href=&quot;http://europe.autonews.com/staff/Nick-Gibbs&quot; rel=&quot;author&quot;&gt;&lt;strong&gt;Nick Gibbs&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Automotive News Europe&lt;/strong&gt;&lt;br/&gt;&lt;span class=&quot;date&quot;&gt;February 20, 2018 06:01 CET&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Germany's premium brands are under pressure to accelerate their plans for electric cars after Tesla's Model S outsold the luxury flagships of Mercedes-Benz, BMW and Audi in Europe for the first time.&lt;/p&gt;
&lt;p&gt;European sales of the Model S outstripped German premium brands' range-topping sedans including the Mercedes S class and BMW 7 series.&lt;/p&gt;
&lt;p&gt;The Model S has outsold German rivals in the upper-sedan category in the U.S in previous years, but never in Europe.&lt;/p&gt;
&lt;p&gt;&quot;This is an alarm for the traditional automakers such as Mercedes. It says a smaller but smarter brand such as Tesla can beat them at home,&quot; said Felipe Munoz, an analyst with market researchers JATO Dynamics.&lt;/p&gt;
&lt;p&gt;European automakers need to address the electrification faster because customers are showing more and more interest in such vehicles and it seems that the traditional industry &quot;can't deliver on time,&quot; Munoz said.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fightback&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After years of dismissing Tesla, European luxury brands are now preparing to launch full-electric rivals to Tesla's growing lineup.&lt;/p&gt;
&lt;p&gt;Jaguar will unveil its first full-electric model, the I-Pace on March 1 ahead of the car's public debut at the Geneva auto show on March 6. Audi is &lt;a href=&quot;http://europe.autonews.com/article/20180129/ANE/180129814/audi-starts-taking-deposits-for-e-tron-suv&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;taking deposits from potential customers for its new e-tron full-electric SUV in four European markets&lt;/strong&gt;&lt;/a&gt; and will unveil the model in Brussels where it will be built in August. It will also make some e-tron prototypes available for test drives at the Geneva auto show next month, reports said.&lt;/p&gt;
&lt;p&gt;The Jaguar and Audi models will go up against the Tesla Model X in the booming crossover market, rather than compete with the Model S sedan.&lt;/p&gt;
&lt;p&gt;Later this year, Porsche is expected to unveil its Mission E, a performance sedan rival to the Model S, ahead of its sales launch next year. At next month's Geneva show Volkswagen brand will unveil the &lt;a href=&quot;http://europe.autonews.com/article/20180219/ANE/180219744/vw-vizzion-previews-potential-tesla-model-s-rival&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Vizzion concept&lt;/strong&gt;&lt;/a&gt; previewing a sedan flagship for its I.D. electric subbrand that could be a Model S competitor.&lt;/p&gt;
&lt;p&gt;Sales of the Model S in Europe jumped 30 percent to 16,132 last year, according to JATO. Mercedes S class sales grew 3 percent to 13,359. BMW 7 series had sales of 11,735, down 13 percent.&lt;/p&gt;
&lt;p&gt;In the U.S., Model S sales rose 9 percent to 28,800 last year, outselling closest rivals, the Cadillac XTS, whose volume fell 27 percent to 16,275 and the S class, whose sales were down 16 percent to 15,888, according to Automotive News Data Center.&lt;/p&gt;
&lt;p&gt;Tesla is competing strongly in Europe's large premium SUV market with the Model X. Its sales in the region last year were 12,000, about the same as the Porsche Cayenne and nearly 2,000 more than the BMW X6, according to JATO data.&lt;/p&gt;
&lt;p&gt;Tesla is slowly ramping up production of the delayed Model 3, a smaller sedan that will compete with midsize and large premium sedans. The car has gone on sale in the U.S. but no sales were recorded by JATO in Europe last year.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can reach &lt;strong&gt;Nick Gibbs&lt;/strong&gt; at &lt;a href=&quot;mailto:ngibbs@crain.com&quot;&gt;&lt;strong&gt;ngibbs@crain.com&lt;/strong&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;
&lt;hr width=&quot;99%&quot; size=&quot;1&quot; align=&quot;center&quot;/&gt;
advertising&lt;/p&gt;







</description>
<pubDate>Tue, 20 Feb 2018 14:25:38 +0000</pubDate>
<dc:creator>evo_9</dc:creator>
<og:title>Tesla Model S outsells German luxury flagships in Europe</og:title>
<og:description>Germany's premium brands are under pressure to accelerate their plans for electric cars after Tesla's Model S outsold the luxury flagships of Mercedes, BMW and Audi in Europe.</og:description>
<og:image>http://www.autonews.com/apps/pbcsi.dll/storyimage/CA/20180220/ANE/180219831/AR/0/Tesla.jpg</og:image>
<og:type>article</og:type>
<og:url>http://www.autonews.com/article/20180220/ANE/180219831/tesla-model-s-outsells-german-luxury-flagships-in-europe</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://europe.autonews.com/article/20180220/ANE/180219831/tesla-model-s-outsells-german-luxury-flagships-in-europe</dc:identifier>
</item>
<item>
<title>One year of cycling to work</title>
<link>https://hookrace.net/blog/cycling-to-work/</link>
<guid isPermaLink="true" >https://hookrace.net/blog/cycling-to-work/</guid>
<description>&lt;span class=&quot;post-date&quot;&gt;2018-02-20 · &lt;a href=&quot;https://hookrace.net/blog/work/&quot;&gt;Work&lt;/a&gt; · &lt;a href=&quot;https://hookrace.net/blog/frugality/&quot;&gt;Frugality&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;Exactly on this day, one year ago, I came back from a one month long trip to Taiwan, went straight to work from the airport and immediately moved into a new apartment after work. Since then I have cycled to work nearly every day.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://umap.openstreetmap.fr/en/map/one-year-of-cycling-to-work_199573#13/49.3166/8.6605&quot;&gt;Fullscreen&lt;/a&gt; (map made with &lt;a href=&quot;https://umap.openstreetmap.fr/en/&quot;&gt;umap&lt;/a&gt;, routes made with &lt;a href=&quot;https://www.graphhopper.com/&quot;&gt;GraphHopper&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;alternatives-and-motivation&quot;&gt;Alternatives and motivation&lt;/h2&gt;
&lt;p&gt;Previously I lived in Heidelberg, 15 km from work and usually took the train, only cycling to work about once a week. But my new apartment was significantly closer to work, only 6 km, which takes just 15-20 minutes to cycle, so it became much easier to use the bicycle to get to work every day.&lt;/p&gt;
&lt;p&gt;Taking public transportation instead is possible, and takes about 35-40 minutes. I only do that when I want to go to the city straight after work instead of going home first. For me personally public transportation is more useful in combination with the bicycle on longer trips.&lt;/p&gt;
&lt;p&gt;Sometimes I take public transportation to work and just walk back in the evening, which can be great for listening to audiobooks.&lt;/p&gt;
&lt;p&gt;For about a month I had borrowed a car and sometimes used it to go to work. Without traffic the driving would take 12 minutes, but with traffic it’s usually 15-25 minutes. Additionally I have to get a parking spot and walk further to the office, so using a car doesn’t save time compared to cycling.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170414_091754.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170414_091754_small.jpg&quot; alt=&quot;Public transportation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;advantages&quot;&gt;Advantages&lt;/h2&gt;
&lt;p&gt;I remember feeling tired when getting to work early in the morning using public transportation. After all you just keep sitting and standing, never really jump starting the body. While cycling to work I certainly wake up and feel more energetic and focussed when I arrive.&lt;/p&gt;
&lt;p&gt;Having a clear separation of work and private life is important for me, both by using different spaces for each as well as having a strict time separation. So after I get out of work and get onto my bicycle I will still be having work-related thoughts circling in my head. But while cycling I might take a quick stop to write down any insights that I have or tasks that I forgot to finish. Then I can finally shut down and clear my brain from work by enjoying the ride, the views and the physical exercise.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170409_184910-PANO.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170409_184910-PANO_small.jpg&quot; alt=&quot;Stream&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I find the simplicity of cycling for locomotion beautiful. I never have to be stuck in a traffic jam, feeling stressed by moving at a snail’s pace. Even if cycling is slower the feeling of making progress is stronger. I never have to be waiting for a late train, a bus that left too early or be stuck inside of a train while there are problems with the power line. In the worst case I can pick up my bicycle and walk around some obstacle or fix a flat tire in a few minutes. Being outside in nature, at least for half an hour every day, feels good.&lt;/p&gt;
&lt;p&gt;Combined with the gym at work I feel like I’m getting enough sports to be reasonably fit without having to spend much time on it. I regularly get home from work at 17:00 with all work and sports done and can enjoy the rest of the day without any worry.&lt;/p&gt;
&lt;p&gt;When I’m using the bicycle to get to work already, I feel like the barrier to combining this with larger trips is lowered. I occasionally do 40-50 km cycling tours before or after work, depending on the weather and my mood.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170614_172048.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170614_172048_small.jpg&quot; alt=&quot;Longer trip&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;accommodation&quot;&gt;Accommodation&lt;/h2&gt;
&lt;p&gt;At home my bicycle is locked into a room in the basement, making it reasonably secure and still easily accessible. At work we have roofed-over parking spaces for the bicycles with robust metal bars for locking. Some of the cycle racks even have two floors with an easy mechanism for getting your bicycle down from there. When I don’t need my lock I will just leave it there after work for the next day.&lt;/p&gt;
&lt;p&gt;Multiple buildings at work have special showers for cyclists. But to be honest I don’t use them after my usual route to work, for three reasons:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It is cooler in the morning.&lt;/li&gt;
&lt;li&gt;The distance is short enough.&lt;/li&gt;
&lt;li&gt;I cycle slower when going to work in the morning than when going back.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Especially in the summer it is nice to do a two hour cycling trip at 5 am and go straight to work afterwards. Then the showers are a godsend of course.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170404_073617.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170404_073617_small.jpg&quot; alt=&quot;Morning fog&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-journey-is-the-reward&quot;&gt;The journey is the reward&lt;/h2&gt;
&lt;p&gt;Close to my home I have to cross a red light, which is also where I had the only accident in this year. A car driver ignored my right of way and so I had to break hard and ended up sitting on their hood. But luckily that didn’t result in any injuries or damages. (Edit: I have never had an accident involving a car before, so this is probably an outlier.)&lt;/p&gt;
&lt;p&gt;After exiting the industrial area I am riding exclusively on small field roads. Especially in the morning this makes for nice sunrises with fog on parts of the fields. Along the way there is also a fishing lake.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20171018_170639.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20171018_170639_small.jpg&quot; alt=&quot;Fishing lake&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The way tunnels below train tracks, runs over a stream, tunnels below a large street and finally bridges over another large street. This means there are no large intersections where you have to wait or be cautious. In consequence the ride is quite relaxing.&lt;/p&gt;
&lt;p&gt;The only potential stop along the way is a small airfield where planes are occasionally landing and starting. But that’s fun to watch, so I don’t mind waiting for a minute or two.&lt;/p&gt;

&lt;h2 id=&quot;numbers&quot;&gt;Numbers&lt;/h2&gt;
&lt;p&gt;There are about 250 work days in a year in Baden-Württemberg, excluding weekends and public holidays. Of those I was missing for 34 days for vacations, being sick and doing home office. On 11 days I used public transportation, on 5 days a car. That leaves 200 days on which I cycled to work.&lt;/p&gt;
&lt;p&gt;The distance to work is 6 km each way, so in total I cycled 2400 km just to get to work and back. I need 20 minutes to work and 15 minutes back, so 117 hours were spent cycling.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/T-Randonneur_Apex_2x10.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/T-Randonneur_Apex_2x10_small.jpg&quot; alt=&quot;T-Randonneur (mine is in green though)&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had two flat tires, one accident and needed one major part replacement in the entire year. But to be fair I also cycled in my free time and it was the first large replacement my bicycle needed since I started using it 15.000 km ago.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170928_183309.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170928_183309_small.jpg&quot; alt=&quot;New parts&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;animal-nature&quot;&gt;Animal nature&lt;/h2&gt;
&lt;p&gt;On one day in summer I counted the wild animals that I saw on my short trip to work, which included 4 rabbits, 1 deer with fawn, 1 white stork with young in the nest as well as a group of 21 white storks in the fields. A few weeks ago I was happy to see an elusive black stork flying towards the closeby forest for the first time. On another occurence there was a Heron successfully catching a snake.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170602_162849.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170602_162849_small.jpg&quot; alt=&quot;Storks&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apart from wild animals there are of course many people walking their dogs, and the pet home on the way features lots of dogs behind the fence as well as a few cats walking around outside.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20171016_162141.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20171016_162141_small.jpg&quot; alt=&quot;Lazy cats&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;winter-is-coming&quot;&gt;Winter is coming&lt;/h2&gt;
&lt;p&gt;Appropriate clothing is important since cycling exposes you to wind and precipitation.&lt;/p&gt;
&lt;p&gt;In summer a t-shirt and short pants are usually fine. For colder times dual-function pants for office and cycling are great, otherwise jeans also work.&lt;/p&gt;
&lt;p&gt;During rains I certainly don’t want to wear jeans. Then I also need to bring another set of clothes to switch to once I’m in the office. The most important measure for rainy days is to have good timing, since I have flexible work times and the rains are usually not equally strong for hours. Weather forecasts can be remarkably inaccurate though.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20160118_144437.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20160118_144437_small.jpg&quot; alt=&quot;Cycling in snow (photo from 2016)&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I use wind-proof jackets and shoes as well as gloves and a balaclava in winter. Snow and ice are rather rare and not so strong here, so they are not a big issue. The above photo was taken two years ago and that represents about the worst winter conditions I ever had to cycle in.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://hookrace.net/public/cycling/IMG_20170526_183012.jpg&quot;&gt;&lt;img src=&quot;https://hookrace.net/public/cycling/IMG_20170526_183012_small.jpg&quot; alt=&quot;The road ahead&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ll keep cycling to work in the foreseeable future. I don’t think this post is of much use to anyone, but I had fun reflecting my last year of cycling to work. Thanks for reading. Comments on &lt;a href=&quot;https://news.ycombinator.com/item?id=16420271&quot;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 20 Feb 2018 13:52:44 +0000</pubDate>
<dc:creator>def-</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hookrace.net/blog/cycling-to-work/</dc:identifier>
</item>
</channel>
</rss>