<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Downloaded my Facebook data and it has the call history with my partner’s mother</title>
<link>https://twitter.com/dylanmckaynz/status/976369275324678145</link>
<guid isPermaLink="true" >https://twitter.com/dylanmckaynz/status/976369275324678145</guid>
<description>&lt;p&gt;thanks for your work. I just uninstalled the Messenger app (android). My facebook zip had a bunch (not all, but heaps) of my contacts in that file. I don't have the FB app on phone. Not sure how this was gathered. No metadata, call history. Just contacts. insane.&lt;/p&gt;
</description>
<pubDate>Fri, 23 Mar 2018 10:30:57 +0000</pubDate>
<dc:creator>bkfh</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/dylanmckaynz/status/976369275324678145</dc:identifier>
</item>
<item>
<title>With SESTA/FOSTA, lawmakers failed to separate good intentions from bad law</title>
<link>https://www.eff.org//deeplinks/2018/03/how-congress-censored-internet</link>
<guid isPermaLink="true" >https://www.eff.org//deeplinks/2018/03/how-congress-censored-internet</guid>
<description>&lt;h3&gt;&lt;strong&gt;In Passing SESTA/FOSTA, Lawmakers Failed to Separate Their Good Intentions from Bad Law&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Today was a dark day for the Internet.&lt;/p&gt;
&lt;p&gt;The U.S. Senate just voted 97-2 to pass the Allow States and Victims to Fight Online Sex Trafficking Act (FOSTA, &lt;a href=&quot;https://www.congress.gov/bill/115th-congress/house-bill/1865&quot;&gt;H.R. 1865&lt;/a&gt;), a bill that silences online speech by forcing Internet platforms to censor their users. As lobbyists and members of Congress applaud themselves for enacting a law tackling the problem of trafficking, let’s be clear: &lt;a href=&quot;https://www.eff.org/deeplinks/2017/10/sex-trafficking-experts-say-sesta-wrong-solution&quot;&gt;Congress just made trafficking victims less safe&lt;/a&gt;, not more.&lt;/p&gt;
&lt;p&gt;The version of FOSTA that just passed the Senate combined an earlier version of FOSTA (what we call FOSTA 2.0) with the Stop Enabling Sex Traffickers Act (SESTA, &lt;a href=&quot;https://www.congress.gov/bill/115th-congress/senate-bill/1693&quot;&gt;S. 1693&lt;/a&gt;). The history of SESTA/FOSTA—a bad bill that turned into a worse bill and then was rushed through votes in both houses of Congress—is a story about Congress’ failure to see that its good intentions can result in bad law. It’s a story of Congress’ failure to listen to the constituents who’d be most affected by the laws it passed. It’s also the story of some players in the tech sector choosing to settle for compromises and half-wins that will put ordinary people in danger.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Silencing Internet Users Doesn’t Make Us Safer&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;SESTA/FOSTA undermines &lt;a href=&quot;https://www.eff.org/issues/cda230&quot;&gt;Section 230&lt;/a&gt;, the most important law protecting free speech online. Section 230 protects online platforms from liability for some types of speech by their users. Without Section 230, the Internet would look very different. It’s likely that &lt;a href=&quot;https://230matters.com/letter.html&quot;&gt;many of today’s online platforms would never have formed&lt;/a&gt; or received the investment they needed to grow and scale—the risk of litigation would have simply been too high. Similarly, in absence of Section 230 protections, &lt;a href=&quot;https://blog.wikimedia.org/2017/11/09/cda-230-principles-wikipedia/&quot;&gt;noncommercial platforms like Wikipedia&lt;/a&gt; and the Internet Archive likely wouldn’t have been founded given the high level of legal risk involved with hosting third-party content.&lt;/p&gt;
&lt;p class=&quot;pull-quote&quot;&gt;The bill is worded so broadly that it could even be used against platform owners that don’t know that their sites are being used for trafficking.&lt;/p&gt;
&lt;p&gt;Importantly, &lt;a href=&quot;https://www.eff.org/deeplinks/2017/09/stop-sesta-section-230-not-broken&quot;&gt;Section 230 does not shield platforms from liability under federal criminal law&lt;/a&gt;&lt;span&gt;.&lt;/span&gt; Section 230 also doesn’t shield platforms across-the-board from liability under civil law: courts have allowed civil claims against online platforms when a platform directly contributed to unlawful speech. Section 230 strikes a careful balance between enabling the pursuit of justice and promoting free speech and innovation online: platforms can be held responsible for their own actions, and can still host user-generated content without fear of broad legal liability.&lt;/p&gt;
&lt;p&gt;SESTA/FOSTA upends that balance, opening platforms to new criminal and civil liability at the state and federal levels for &lt;a href=&quot;https://www.eff.org/deeplinks/2017/09/stop-sesta-congress-doesnt-understand-how-section-230-works&quot;&gt;their users’ sex trafficking activities&lt;/a&gt;. The platform liability created by new Section 230 carve outs applies &lt;em&gt;retroactively&lt;/em&gt;—meaning the increased liability applies to trafficking that took place before the law passed. &lt;a href=&quot;/files/2018/03/19/doj-sesta.pdf&quot;&gt;The Department of Justice has raised concerns&lt;/a&gt; [.pdf] about this violating the Constitution’s Ex Post Facto Clause, at least for the criminal provisions.&lt;/p&gt;
&lt;p&gt;The bill also expands existing federal criminal law to target online platforms where sex trafficking content appears. The bill is worded so broadly that it could even be used against platform owners that &lt;a href=&quot;https://www.eff.org/deeplinks/2017/09/stop-sesta-amendments-federal-criminal-sex-trafficking-law-sweep-too-broadly&quot;&gt;don’t know that their sites are being used for trafficking&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, SESTA/FOSTA expands federal prostitution law to cover those who use the Internet to “promote or facilitate prostitution.”&lt;/p&gt;
&lt;p class=&quot;pull-quote&quot;&gt;The Internet will become a less inclusive place, something that hurts all of us.&lt;/p&gt;
&lt;p&gt;It’s easy to see the impact that this ramp-up in liability will have on online speech: facing the risk of ruinous litigation, online platforms will have little choice but to become much more restrictive in what sorts of discussion—and what sorts of users—they allow, censoring innocent people in the process.&lt;/p&gt;
&lt;p&gt;What forms that erasure takes will vary from platform to platform. For some, it will mean increasingly restrictive terms of service—banning sexual content, for example, or advertisements for legal escort services. For others, it will mean &lt;a href=&quot;https://www.eff.org/deeplinks/2018/03/how-fosta-will-get-hollywood-filters-theyve-long-wanted&quot;&gt;over-reliance on automated filters&lt;/a&gt; to delete borderline posts. No matter what methods platforms use to mitigate their risk, one thing is certain: when platforms choose to err on the side of censorship, &lt;a href=&quot;https://www.eff.org/deeplinks/2017/09/stop-sesta-whose-voices-will-sesta-silence&quot;&gt;marginalized voices are censored disproportionately&lt;/a&gt;. The Internet will become a less inclusive place, &lt;a href=&quot;https://www.eff.org/deeplinks/2017/10/south-dakota-civil-liberties-groups-urge-senator-thune-put-brakes-sesta&quot;&gt;something that hurts all of us&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Big Tech Companies Don&lt;strong&gt;’&lt;/strong&gt;t Speak for Users&lt;/h3&gt;
&lt;p&gt;SESTA/FOSTA supporters boast that their bill has the support of the technology community, but it’s worth considering what they mean by “technology.” &lt;a href=&quot;https://www.ibm.com/blogs/policy/ibm-letter-sesta-human-trafficking/&quot;&gt;IBM&lt;/a&gt; and &lt;a href=&quot;https://www.portman.senate.gov/public/index.cfm?p=press-releases&amp;amp;id=197B9C12-C83A-4106-A0C4-DFD0DAB7594B&quot;&gt;Oracle&lt;/a&gt;—companies whose business models don’t heavily rely on Section 230—were quick to jump onboard. Next came the Internet Association, a trade association representing the &lt;a href=&quot;https://www.eff.org/deeplinks/2017/11/internet-association-endorses-internet-censorship-bill&quot;&gt;world’s largest Internet companies&lt;/a&gt;, companies that &lt;a href=&quot;https://www.eff.org/deeplinks/2017/09/google-will-survive-sesta-your-startup-might-not&quot;&gt;will certainly be able to survive SESTA&lt;/a&gt; while their smaller competitors struggle to comply with it.&lt;/p&gt;
&lt;p&gt;Those tech companies simply don’t speak for the Internet users who will be silenced under the law. And tragically, the people likely to be censored the most are trafficking victims themselves.&lt;/p&gt;
&lt;h3&gt;SESTA/FOSTA Will Put Trafficking Victims in More Danger&lt;/h3&gt;
&lt;p&gt;Throughout the SESTA/FOSTA debate, the bills’ proponents provided little to no evidence that increased platform liability would do anything to reduce trafficking. On the other hand, the bills’ opponents have presented a great deal of evidence that &lt;a href=&quot;http://blog.ericgoldman.org/archives/2017/08/how-section-230-helps-sex-trafficking-victims-and-sesta-would-hurt-them-guest-blog-post.htm&quot;&gt;shutting down platforms where sexual services are advertised exposes trafficking victims to more danger&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Freedom Network USA—the largest national network of organizations working to reduce trafficking in their communities—&lt;a href=&quot;https://www.eff.org/files/2017/09/18/sestahearing-freedomnetwork.pdf&quot;&gt;spoke out early to express grave concerns&lt;/a&gt; [.pdf] that removing sexual ads from the Internet would also remove the best chance trafficking victims had of being found and helped by organizations like theirs as well as law enforcement agencies.&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;Reforming [Section 230] to include the threat of civil litigation could deter responsible website administrators from trying to identify and report trafficking.&lt;/p&gt;
&lt;p&gt;It is important to note that responsible website administration can make trafficking more visible—which can lead to increased identification. There are many cases of victims being identified online—and little doubt that without this platform, they would have not been identified. Internet sites provide a digital footprint that law enforcement can use to investigate trafficking into the sex trade, and to locate trafficking victims. When websites are shut down, the sex trade is pushed underground and sex trafficking victims are forced into even more dangerous circumstances.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Freedom Network was far from alone. Since SESTA was introduced, &lt;a href=&quot;https://www.eff.org/deeplinks/2017/12/internet-censorship-bills-wouldnt-help-catch-sex-traffickers&quot;&gt;many experts have chimed in to point out the danger that SESTA would put all sex workers in&lt;/a&gt;, including those who are being trafficked. Sex workers themselves have spoken out too, explaining how &lt;a href=&quot;https://theslot.jezebel.com/the-senates-anti-sex-trafficking-bill-is-a-disaster-for-1823704879&quot;&gt;online platforms have literally saved their lives&lt;/a&gt;. &lt;a href=&quot;https://www.eff.org/deeplinks/2017/09/live-blog-senate-commerce-committee-discusses-sesta&quot;&gt;Why didn’t Congress bring those experts&lt;/a&gt; to its &lt;a href=&quot;https://www.eff.org/deeplinks/2017/10/live-blog-house-discusses-section-230&quot;&gt;deliberations on SESTA/FOSTA&lt;/a&gt; over the past year?&lt;/p&gt;
&lt;p&gt;While we can’t speculate on the agendas of the groups behind SESTA, we can study those same groups’ past advocacy work. Given that history, one could be forgiven for thinking that some of these groups see SESTA as a &lt;a href=&quot;https://www.techdirt.com/articles/20170929/01242638309/campaigners-sesta-see-it-as-first-step-to-stomping-out-porn.shtml&quot;&gt;mere stepping stone to banning pornography from the Internet&lt;/a&gt; or &lt;a href=&quot;https://injusticetoday.com/anti-online-trafficking-bills-advance-in-congress-despite-opposition-from-survivors-themselves-e741ea300307&quot;&gt;blurring the legal distinctions&lt;/a&gt; between &lt;a href=&quot;https://twitter.com/melissagira/status/974304760353427456&quot;&gt;sex work and trafficking&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In all of Congress’ deliberations on SESTA, no one spoke to &lt;a href=&quot;https://www.techdirt.com/articles/20180314/00004839422/sex-workers-survivors-raising-alarm-about-sesta-it-will-literally-put-their-lives-danger.shtml&quot;&gt;the experiences of the sex workers that the bill will push off of the Internet&lt;/a&gt; and onto the dangerous streets. It wasn’t surprising, then, when the House of Representatives presented its “alternative” bill, one that targeted those communities more directly.&lt;/p&gt;
&lt;h3&gt;“Compromise” Bill Raises New Civil Liberties Concerns&lt;/h3&gt;
&lt;p&gt;In December, &lt;a href=&quot;https://www.eff.org/deeplinks/2017/12/amended-version-fosta-would-still-silence-legitimate-speech-online&quot;&gt;the House Judiciary Committee unveiled&lt;/a&gt; its &lt;a href=&quot;https://www.congress.gov/bill/115th-congress/house-bill/1865/text/rh?&quot;&gt;new revision of FOSTA&lt;/a&gt;. FOSTA 2.0 had the same inherent flaw that its predecessor had—attaching more liability to platforms for their users’ speech does nothing to fight the underlying criminal behavior of traffickers.&lt;/p&gt;
&lt;p&gt;In a way, FOSTA 2.0 was an improvement: the bill was targeted only at platforms that intentionally facilitated prostitution, and so would affect a narrower swath of the Internet. But the damage it would do was much more blunt: it would expand federal prostitution law such that online platforms would have to take down any posts that could potentially be in support of &lt;em&gt;any sex work&lt;/em&gt;, regardless of whether there’s an indication of force or coercion, or whether minors were involved.&lt;/p&gt;
&lt;p&gt;FOSTA 2.0 didn’t stop there. It criminalized using the Internet to “promote or facilitate” prostitution. Activists who work to reduce harm in the sex work community—by providing health information, for example, or sharing lists of dangerous clients—were rightly worried that prosecutors would attempt to &lt;a href=&quot;https://www.fastcompany.com/40537286/fosta-backlash-how-the-anti-sex-trafficking-bill-could-harm-sex-workers&quot;&gt;use this law to put their work in jeopardy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Regardless, a few holdouts in the tech world believed that their best hope of stopping SESTA was to endorse a censorship bill that would do slightly less damage to the tech industry.&lt;/p&gt;
&lt;p&gt;They should have known it was a trap.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;SESTA/FOSTA: The Worst of Both Worlds&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;That brings us to last month, when a &lt;a href=&quot;https://www.eff.org/deeplinks/2018/02/fosta-would-be-disaster-online-communities&quot;&gt;new bill combining SESTA and FOSTA&lt;/a&gt; was rushed through congressional procedure and &lt;a href=&quot;https://www.eff.org/deeplinks/2018/02/house-vote-fosta-win-censorship&quot;&gt;overwhelmingly passed the House&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;pull-quote&quot;&gt;When the Department of Justice is the group urging Congress not to expand criminal law and Congress does it anyway, something is very wrong.&lt;/p&gt;
&lt;p&gt;Thousands of you picked up your phone and called your senators, &lt;a href=&quot;https://www.eff.org/deeplinks/2018/03/stop-sestafosta-dont-let-congress-censor-internet&quot;&gt;urging them to oppose the new Frankenstein bill&lt;/a&gt;. And you weren’t alone: &lt;a href=&quot;https://www.eff.org/deeplinks/2018/03/dear-leader-mcconnell-dont-pass-fosta&quot;&gt;EFF&lt;/a&gt;, the &lt;a href=&quot;https://www.aclu.org/letter/aclu-vote-recommendation-congress-oppose-h-r-1865-allow-states-and-victims-fight-online-sex&quot;&gt;American Civil Liberties Union&lt;/a&gt;, the &lt;a href=&quot;https://cdt.org/blog/its-all-downsides-hybrid-fosta-sesta-hinders-law-enforcement-hurts-victims-and-speakers/&quot;&gt;Center for Democracy and Technology&lt;/a&gt;, and many other experts pleaded with Congress to recognize the dangers to free speech and online communities that the bill presented.&lt;/p&gt;
&lt;p&gt;Even the Department of Justice wrote a letter &lt;a href=&quot;/files/2018/03/19/doj-sesta.pdf&quot;&gt;urging Congress not to go forward with the hybrid bill&lt;/a&gt; [.pdf]. The DOJ said that the expansion of federal criminal law in SESTA/FOSTA was simply unnecessary, and &lt;a href=&quot;https://www.techdirt.com/articles/20180227/15314039324/doj-tells-congress-sesta-fosta-will-make-it-more-difficult-to-catch-traffickers-house-votes-it-anyway.shtml&quot;&gt;could possibly undermine criminal investigations&lt;/a&gt;. When the Department of Justice is the group urging Congress not to expand criminal law and Congress does it anyway, something is very wrong.&lt;/p&gt;
&lt;p&gt;Assuming that the president signs it into law, SESTA/FOSTA is the most significant rollback to date of the protections for online speech in Section 230. We hope that it’s the last, but it may not be. Over the past year, we’ve seen more calls than ever to &lt;a href=&quot;http://foreignpolicy.com/2017/11/13/its-the-beginning-of-the-end-of-the-internets-legal-immunity/&quot;&gt;create new exceptions to Section 230&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In any case, we will continue to fight back against proposals that undermine our right to speak and gather online. We hope you’ll stand with us.&lt;/p&gt;
</description>
<pubDate>Fri, 23 Mar 2018 06:03:28 +0000</pubDate>
<dc:creator>jakeogh</dc:creator>
<og:type>article</og:type>
<og:title>How Congress Censored the Internet</og:title>
<og:url>https://www.eff.org/deeplinks/2018/03/how-congress-censored-internet</og:url>
<og:description>In Passing SESTA/FOSTA, Lawmakers Failed to Separate Their Good Intentions from Bad LawToday was a dark day for the Internet.The U.S. Senate just voted 97-2 to pass the Allow States and Victims to Fight Online Sex Trafficking Act (FOSTA, H.R. 1865), a bill that silences online speech by forcing...</og:description>
<og:image>https://www.eff.org/files/congress-action.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org//deeplinks/2018/03/how-congress-censored-internet</dc:identifier>
</item>
<item>
<title>My daughter&amp;#039;s disabled. Please don&amp;#039;t look away from her</title>
<link>http://www.latimes.com/opinion/op-ed/la-oe-willingham-how-to-interact-with-a-disabled-child-20180322-story.html</link>
<guid isPermaLink="true" >http://www.latimes.com/opinion/op-ed/la-oe-willingham-how-to-interact-with-a-disabled-child-20180322-story.html</guid>
<description>&lt;p&gt;Chances are, you and your children will encounter Esprit or a child who is similarly disabled at a store, or in a park. Your child will be struck by Esprit's appearance. Typical for trisomy-18 kids, her head is small, her eyelids droop and her ears are low-set. Add the wheelchair and the braces on her feet and midsection, and you've got quite a sight. Older children pointedly refrain from staring (usually with a furtive peek or two), but younger children gape uninhibitedly. Embarrassed parents will try to distract their child, or drag him away, probably delivering a &quot;don't stare&quot; lecture once out of sight. But you can't blame a 4-year-old for staring at a child who looks different. His curiosity is natural.&lt;/p&gt;
</description>
<pubDate>Fri, 23 Mar 2018 04:29:08 +0000</pubDate>
<dc:creator>helloworld</dc:creator>
<og:url>http://www.latimes.com/opinion/op-ed/la-oe-willingham-how-to-interact-with-a-disabled-child-20180322-story.html</og:url>
<og:title>My daughter's disabled. Please don't look away from her</og:title>
<og:image>http://www.latimes.com/resizer/ZzEGPiKtOasai8-5-24pceSc-GI=/1200x0/www.trbimg.com/img-5ab2d578/turbine/la-oe-willingham-how-to-interact-with-a-disabled-child-20180322</og:image>
<og:description>As the father of a disabled child, I find myself less concerned with research into her condition and more interested in helping people feel comfortable interacting with her.</og:description>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.latimes.com/opinion/op-ed/la-oe-willingham-how-to-interact-with-a-disabled-child-20180322-story.html</dc:identifier>
</item>
<item>
<title>Craigslist takes personals sections offline in response to FOSTA</title>
<link>https://www.craigslist.org/about/FOSTA</link>
<guid isPermaLink="true" >https://www.craigslist.org/about/FOSTA</guid>
<description>&lt;p&gt;US Congress just passed &lt;a href=&quot;https://www.congress.gov/bill/115th-congress/house-bill/1865&quot;&gt;HR 1865, &quot;FOSTA&quot;&lt;/a&gt;, seeking to subject websites to criminal and civil liability when third parties (users) misuse online personals unlawfully.&lt;/p&gt;
&lt;p&gt;Any tool or service can be misused. We can't take such risk without jeopardizing all our other services, so we are regretfully taking craigslist personals offline. Hopefully we can bring them back some day.&lt;/p&gt;
&lt;p&gt;To the millions of spouses, partners, and couples who met through craigslist, we wish you every happiness!&lt;/p&gt;
</description>
<pubDate>Fri, 23 Mar 2018 02:49:12 +0000</pubDate>
<dc:creator>cft</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.craigslist.org/about/FOSTA</dc:identifier>
</item>
<item>
<title>You probably don&amp;#039;t want to run Firefox Nightly any more</title>
<link>https://utcc.utoronto.ca/~cks/space/blog/web/FirefoxNoNightly</link>
<guid isPermaLink="true" >https://utcc.utoronto.ca/~cks/space/blog/web/FirefoxNoNightly</guid>
<description>&lt;p&gt;Some people like to run Firefox Nightly for various reasons; you can like seeing what's coming, or want to help Mozilla out by testing the bleeding edge, or various other things. I myself have in the past run a Firefox compiled from the development tree (although at the moment &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/web/Firefox56AddonWorry&quot;&gt;I'm still using Firefox 56&lt;/a&gt;). Unfortunately and sadly I must suggest that you not do that any more, and only run Firefox Nightly if you absolutely have to (for example to test some bleeding edge web feature that's available only in Nightly).&lt;/p&gt;
&lt;p&gt;Let's start with &lt;a href=&quot;https://twitter.com/doublec/status/975926901616271360&quot;&gt;@doublec's tweet&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;5.3435114503817&quot;&gt;
&lt;p&gt;Even if it is only Mozilla's nightly browser and for a short period of time I'm a bit disturbed about the possibility of an opt-out only &quot;send all visited hostnames to a third party US company&quot; study.&lt;br /&gt;&lt;a href=&quot;https://groups.google.com/forum/#!topic/mozilla.dev.platform/_8OAKUHso0c&quot;&gt;FYI: Short Nightly Shield Study involving DNS over HTTPs (DoH)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(&lt;a href=&quot;https://twitter.com/OddsAndBits/status/976125098343088128&quot;&gt;via Davor Cubranic&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://groups.google.com/forum/#!topic/mozilla.dev.platform/_8OAKUHso0c&quot;&gt;the mozilla.dev.platform thread&lt;/a&gt;, it's revealed that Mozilla is planning an opt-out DNS over HTTPS study for Firefox Nightly users that will send DoH queries for all hostnames to a server implementation at Cloudflare (with some legal protections for the privacy of this information).&lt;/p&gt;
&lt;p&gt;This by itself is not why I think you should stop running Firefox Nightly now. Instead, the reason why comes up further down the thread, in a statement by a Mozilla person which I'm going to &lt;a href=&quot;https://groups.google.com/d/msg/mozilla.dev.platform/_8OAKUHso0c/40jf7lCJAAAJ&quot;&gt;quote from directly&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;It isn't explicit right now that using nightly means opting in to participating in studies like this, and I think the text of the download page antedates our ability to do those studies. The text of the Firefox privacy page says that prerelease products &quot;may contain different privacy characteristics&quot; than release, but doesn't enumerate them. [...]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let me translate this: people using Firefox Nightly have less privacy protections and less respect for user choice from Mozilla than people using Firefox releases. Mozilla feels free to do things to your browsing that they wouldn't do to users of regular Firefox (&lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/web/MozillaStillTrustProblems&quot;&gt;well, theoretically wouldn't do&lt;/a&gt;), and you're implicitly consenting to all of this just by using Nightly.&lt;/p&gt;
&lt;p&gt;That's why you shouldn't use Nightly; you shouldn't agree to this. Using Nightly now is pasting a 'kick me' sign on your back. You can hope that Mozilla will kick carefully and for worthwhile things and that it won't hurt, but Mozilla is going to kick you. They've said so explicitly.&lt;/p&gt;
&lt;p&gt;Unfortunately, Mozilla's wording on this on &lt;a href=&quot;https://www.mozilla.org/en-US/privacy/firefox/&quot;&gt;the current privacy page&lt;/a&gt; says that these 'different privacy characteristics' apply to all pre-release versions, not just Nightly. It's not clear to me if the 'Developer Edition' is considered a pre-release version for what Mozilla can do to it, but it probably is. Your only &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/web/MozillaStillTrustProblems&quot;&gt;reasonably safe&lt;/a&gt; option appears to be to run a release version of Firefox.&lt;/p&gt;
&lt;p&gt;(Perhaps Mozilla will clarify that, but I'm not holding my breath for Mozilla to take their hands out of the cookie jar.)&lt;/p&gt;
&lt;p&gt;I don't know what this means for people building Firefox from source (especially from the development tree instead of a release). I also don't know what currently happens in any version (built from source or downloaded) if you &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/web/MozillaBetraysFirefoxUsers&quot;&gt;explicitly turn off SHIELD studies&lt;/a&gt;. Regardless of what happens now, I wouldn't count on turning off SHIELD studies working in future Nightly versions; allowing you to opt out of such things runs counter to Mozilla's apparent goal of using Nightly users as a captive pool of test dummies.&lt;/p&gt;
&lt;p&gt;(I don't know if I believe or accept Mozilla's views that existing users of Nightly have accepted this tiny print that says that Mozilla can dump them in opt-out privacy invasive studies, but it doesn't matter. It's clear that Mozilla has this view, and &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/web/MozillaSomeQuestions&quot;&gt;it's not like I expect Mozilla to pay any attention to people like me&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;PS: &lt;a href=&quot;https://twitter.com/thatcks/status/976130936944386049&quot;&gt;I had a grumpy Twitter reaction to this news&lt;/a&gt;, which I stand by. Mozilla knows this is privacy intrusive and questionable, they just don't care when it's Nightly users. There are even people in the discussion thread arguing that the ends justify the means. Whatever, I don't care any more; my expectations keep getting lowered.&lt;/p&gt;
&lt;p&gt;PPS: I guess I'll have to periodically check &lt;code&gt;about:studies&lt;/code&gt; and the Privacy preference for &lt;a href=&quot;https://wiki.mozilla.org/Firefox/Shield/Shield_Studies&quot;&gt;SHIELD studies&lt;/a&gt;, just to make sure.&lt;/p&gt;
</description>
<pubDate>Fri, 23 Mar 2018 00:04:36 +0000</pubDate>
<dc:creator>jlgaddis</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://utcc.utoronto.ca/~cks/space/blog/web/FirefoxNoNightly</dc:identifier>
</item>
<item>
<title>Guccifer 2.0 Slipped Up and Revealed He Was a Russian Intelligence Officer</title>
<link>https://www.thedailybeast.com/exclusive-lone-dnc-hacker-guccifer-20-slipped-up-and-revealed-he-was-a-russian-intelligence-officer</link>
<guid isPermaLink="true" >https://www.thedailybeast.com/exclusive-lone-dnc-hacker-guccifer-20-slipped-up-and-revealed-he-was-a-russian-intelligence-officer</guid>
<description>&lt;p&gt;Guccifer 2.0, the “lone hacker” who took credit for providing WikiLeaks with stolen emails from the Democratic National Committee, was in fact an officer of Russia’s military intelligence directorate (GRU), The Daily Beast has learned. It’s an attribution that resulted from a fleeting but critical slip-up in GRU tradecraft.&lt;/p&gt;
&lt;p&gt;That forensic determination has substantial implications for the criminal probe into potential collusion between President Donald Trump and Russia. The Daily Beast has learned that the special counsel in that investigation, Robert Mueller, has taken over the probe into Guccifer and brought the FBI agents who worked to track the persona onto his team.&lt;/p&gt;
&lt;p&gt;While it’s unclear what Mueller plans to do with Guccifer, his &lt;a class=&quot;TrackingLink LinkWrapper&quot; href=&quot;https://www.thedailybeast.com/mueller-indicts-trumps-claim-that-russian-interference-is-fake-news&quot;&gt;last round of indictments&lt;/a&gt; charged 13 Russians tied to the Internet Research Agency troll farm with a conspiracy “for the purpose of interfering with the U.S. political and electoral processes, including the presidential election of 2016.” It was Mueller’s first move establishing Russian interference in the election within a criminal context, but it stopped short of directly implicating the Putin regime.&lt;/p&gt;
&lt;p&gt;Mueller’s office declined to comment for this story. But the attribution of Guccifer 2.0 as an officer of Russia’s largest foreign intelligence agency would cross the Kremlin threshold—and move the investigation closer to Trump himself.&lt;/p&gt;
&lt;div class=&quot;PullQuote&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;“The attribution of Guccifer 2.0 as an officer of Russia’s largest foreign intelligence agency brings the investigation closer to the Kremlin’s doorstep—and to Trump himself.”&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Trump’s longtime political adviser Roger Stone &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://stonecoldtruth.com/roger-stone-the-smoking-gun-aims-fires-misses/&quot;&gt;admitted being in touch with Guccifer&lt;/a&gt; over Twitter’s direct messaging service. And in August 2016, Stone published an article on the pro-Trump-friendly Breitbart News calling on his political opponents to “&lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;http://www.breitbart.com/2016-presidential-race/2016/08/05/dear-hillary-dnc-hack-solved-so-now-stop-blaming-russia/&quot;&gt;Stop Blaming Russia&lt;/a&gt;” for the hack. “I have some news for Hillary and Democrats—I think I’ve got the real culprit,” he wrote. “It doesn’t seem to be the Russians that hacked the DNC, but instead a hacker who goes by the name of Guccifer 2.0.”&lt;/p&gt;
&lt;p&gt;Five months later, in January 2017, the &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.dni.gov/files/documents/ICA_2017_01.pdf&quot;&gt;CIA, NSA, and FBI&lt;/a&gt; assessed “with high confidence” that “Russian military intelligence (General Staff Main Intelligence Directorate or GRU) used the Guccifer 2.0 persona and DCLeaks.com to release US victim data.” But the &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.dni.gov/files/documents/ICA_2017_01.pdf&quot;&gt;assessment&lt;/a&gt; did not directly call Guccifer a Russian intelligence officer. Nor did it provide any evidence for its assertions.&lt;/p&gt;
&lt;p&gt;It turns out there is a powerful reason to connect Guccifer to the GRU.&lt;/p&gt;

&lt;p&gt;Guccifer 2.0 sprang into existence on June 15, 2016, hours after a &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/&quot;&gt;report by a computer security firm&lt;/a&gt; forensically tied Russia to an intrusion at the Democratic National Committee. In a series of blog posts and tweets over the following seven months—conspicuously ending right as Trump took office and not resuming—the Guccifer persona published a smattering of the DNC documents while gamely projecting an image as an independent Romanian hacktivist who’d breached the DNC on a lark. As Stone’s Breitbart piece demonstrated, Guccifer provided Moscow with a counter-narrative for the election interference.&lt;/p&gt;
&lt;p&gt;Guccifer famously pretended to be a “&lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2016/06/15/dnc/&quot;&gt;lone hacker&lt;/a&gt;” who perpetrated the digital DNC break-in. &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://motherboard.vice.com/en_us/article/wnxgwq/guccifer-20-is-likely-a-russian-government-attempt-to-cover-up-their-own-hack&quot;&gt;From the outset, few believed it&lt;/a&gt;. Motherboard conducted a devastating interview with Guccifer that &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://motherboard.vice.com/en_us/article/d7ydwy/why-does-dnc-hacker-guccifer-20-talk-like-this&quot;&gt;exploded the account’s claims&lt;/a&gt; of being a native Romanian speaker. Based on forensic clues in some of Guccifer’s leaks, and other evidence, a consensus quickly formed among security experts that Guccifer was completely notional.&lt;/p&gt;
&lt;p&gt;“Almost immediately various cyber security companies and individuals were skeptical of Guccifer 2.0 and the backstory that he had generated for himself,” said Kyle Ehmke, an intelligence researcher at the cyber security firm ThreatConnect. “We started seeing these inconsistencies that led back to the idea that he was created hastily… by the individual or individuals that affected the DNC compromise.”&lt;/p&gt;
&lt;p&gt;Proving that link definitively was harder. Ehmke led an investigation at ThreatConnect that &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.threatconnect.com/blog/guccifer-2-all-roads-lead-russia/&quot;&gt;tried to track down&lt;/a&gt; Guccifer from the metadata in his emails. But the trail always ended at the same data center in France. Ehmke eventually uncovered that Guccifer was connecting through an anonymizing service called Elite VPN, a virtual private networking service that had an exit point in France but was headquartered in Russia.&lt;/p&gt;
&lt;div class=&quot;PullQuote&quot; readability=&quot;9&quot;&gt;


&lt;p&gt;“Working off the IP address, U.S. investigators identified Guccifer 2.0 as a particular GRU officer working out of the agency’s headquarters on Grizodubovoy Street in Moscow.”&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But on one occasion, The Daily Beast has learned, Guccifer failed to activate the VPN client before logging on. As a result, he left a real, Moscow-based Internet Protocol address in the server logs of an American social media company, according to a source familiar with the government’s Guccifer investigation. Twitter and WordPress were Guccifer 2.0’s favored outlets. Neither company would comment for this story, and Guccifer did not respond to a direct message on Twitter.&lt;/p&gt;
&lt;div class=&quot;InlineNewsletter&quot;&gt;
&lt;div class=&quot;InlineNewsletter__main&quot; readability=&quot;30.323325635104&quot;&gt;
&lt;form class=&quot;InlineNewsletter__form&quot; readability=&quot;-0.90491803278689&quot;&gt;
&lt;p&gt;Get The Beast In Your Inbox!&lt;/p&gt;

&lt;div class=&quot;InlineNewsletter__content&quot; readability=&quot;28.065789473684&quot;&gt;
&lt;div class=&quot;InlineNewsletter__list&quot;&gt;
&lt;div class=&quot;InlineNewsletterItem InlineNewsletterItem--checked&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;InlineNewsletterItem__title-and-description&quot; readability=&quot;7&quot;&gt;
&lt;h4 class=&quot;InlineNewsletterItem__title&quot;&gt;Daily Digest&lt;/h4&gt;
&lt;p class=&quot;InlineNewsletterItem__description&quot;&gt;Start and finish your day with the top stories from The Daily Beast.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;InlineNewsletterItem InlineNewsletterItem--checked&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;InlineNewsletterItem__title-and-description&quot; readability=&quot;8&quot;&gt;
&lt;h4 class=&quot;InlineNewsletterItem__title&quot;&gt;Cheat Sheet&lt;/h4&gt;
&lt;p class=&quot;InlineNewsletterItem__description&quot;&gt;A speedy, smart summary of all the news you need to know (and nothing you don't).&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;button class=&quot;Button InlineNewsletter__submit-button&quot; type=&quot;submit&quot;&gt;Subscribe&lt;/button&gt;&lt;/p&gt;


&lt;/form&gt;
&lt;div class=&quot;InlineNewsletter__final&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Thank You!&lt;/p&gt;
&lt;p&gt;You are now subscribed to the Daily Digest and Cheat Sheet. We will not share your email with anyone for any reason.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Working off the IP address, U.S. investigators identified Guccifer 2.0 as a particular GRU officer working out of the agency’s headquarters on Grizodubovoy Street in Moscow. (The Daily Beast’s sources did not disclose which particular officer worked as Guccifer.)&lt;/p&gt;
&lt;p&gt;Security firms and declassified U.S. intelligence findings previously identified the GRU as the agency running “&lt;a class=&quot;TrackingLink LinkWrapper&quot; href=&quot;https://www.thedailybeast.com/microsoft-pushes-to-take-over-russian-spies-network&quot;&gt;Fancy Bear&lt;/a&gt;,” the ten-year-old hacking organization behind the DNC email theft, as well as breaches at NATO, Obama’s White House, a French television station, the World Anti-Doping Agency, and countless NGOs, and militaries and civilian agencies in Europe, Central Asia, and the Caucasus.&lt;/p&gt;

&lt;p&gt;Timestamps in Guccifer 2.0’s first leaks show they were packaged for release over the course of a single day in June 2016, beginning just hours after the DNC intrusion and its attribution to Russia were made public. The moniker was an homage to Romanian hacker Marcel Lazăr Lehel, who as “Guccifer” achieved notoriety in 2013 for a string of hacks against celebrities and politicians.&lt;/p&gt;
&lt;p&gt;In his inaugural blog post, Guccifer 2.0 disputed Russia’s involvement and claimed credit personally for the DNC breach, positioning himself as a one-time hacking operation working to expose “the Illuminati.” The post included the world’s first glimpse of the enormous cache of documents siphoned from the DNC’s network, including the Democrats’ opposition research report on Trump. Presaging the leaks that would roil the election, Guccifer 2.0 declared that he’d already sent the bulk of the stolen material to WikiLeaks—which has spent the time since &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.newyorker.com/magazine/2017/08/21/julian-assange-a-man-without-a-country&quot;&gt;obfuscating whether Guccifer was its source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On July 22, 2016, WikiLeaks began releasing its cache of approximately 19,000 emails and 8,000 attachments stolen in the hack. While Trump promoted the leak on Twitter and in rallies, his surrogate Roger Stone pushed back against the Kremlin attribution. In his August 2016 article for Breitbart, he argued that Guccifer 2.0 was the Romanian hacktivist he claimed to be. “Guccifer 2.0 is the real deal,” he wrote.&lt;/p&gt;
&lt;p&gt;Last May, Stone admitted that he’d also exchanged direct messages with the Guccifer 2.0 persona, and he &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://stonecoldtruth.com/roger-stone-the-smoking-gun-aims-fires-misses/&quot;&gt;released&lt;/a&gt; what he claimed was a complete transcript of his communications with the account. The transcript is brief and banal, showing Stone congratulating Guccifer 2.0 on returning to Twitter after a brief suspension, and then mostly ignoring him. Then and since, Stone has consistently denied that Guccifer was connected to the Kremlin.&lt;/p&gt;
&lt;p&gt;“I myself had no contacts or communications with the Russian State, Russian Intelligence or anyone fronting for them or acting as intermediaries for them,” he wrote.&lt;/p&gt;
&lt;div class=&quot;PullQuote&quot; readability=&quot;9&quot;&gt;


&lt;p&gt;“I myself had no contacts or communications with the Russian State, Russian Intelligence or anyone fronting for them or acting as intermediaries for them.”&lt;/p&gt;
&lt;p&gt;— Roger Stone&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Guccifer 2.0 maintained a sporadic online presence throughout the election, posting to his dedicated WordPress blog and on Twitter, and spilling more DNC documents, sometimes in private emails to journalists.&lt;/p&gt;
&lt;p&gt;While the national election clearly interested him (“&lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2016/10/18/trumps-taxes/&quot;&gt;Democrats prepare new provocation against Trump&lt;/a&gt;,” he thundered in October 2016), Guccifer 2.0 reached down the ballot as well, posting documents from the Democrats’ national campaign committee on his WordPress blog. There, readers could find internal Democratic candidate assessments relevant to battleground states like &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2016/08/21/dccc-pa/&quot;&gt;Pennsylvania&lt;/a&gt; and &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2016/08/15/dccc-internal-docs-on-primaries-in-florida/&quot;&gt;Florida&lt;/a&gt;; internal &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2016/09/15/dems-internal-workings/&quot;&gt;assessments of key congressional districts&lt;/a&gt;, with granular analyses of their demographics; and campaign recruitment material.&lt;/p&gt;
&lt;p&gt;The GRU officer was eager to share this trove, as well. A GOP political operative in Florida, Aaron Nevins, DM’d Guccifer 2.0 a request for “any Florida based information” and received 2.5 gigabytes’ worth, &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.wsj.com/articles/how-alleged-russian-hacker-teamed-up-with-florida-gop-operative-1495724787&quot;&gt;according to &lt;em&gt;The Wall Street Journal&lt;/em&gt;&lt;/a&gt;. The data, he enthused to Guccifer 2.0, was “probably worth millions of dollars.” A consultant for a successful Florida Republican congressional candidate told the paper, “I did adjust some voting targets based on some data I saw from the leaks.”&lt;/p&gt;

&lt;p&gt;Sometime after its hasty launch, the Guccifer persona was handed off to a more experienced GRU officer, according to a source familiar with the matter. The timing of that handoff is unclear, but Guccifer 2.0’s last blog post, from Jan. 12, 2017, evinced a far greater command of English than the persona’s earlier efforts.&lt;/p&gt;
&lt;p&gt;“It’s obvious that the intelligence agencies are deliberately falsifying evidence,” the &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2017/01/12/fake-evidence/&quot;&gt;post&lt;/a&gt; read. “In my opinion, they’re playing into the hands of the Democrats who are trying to blame foreign actors for their failure.”&lt;/p&gt;
&lt;p&gt;(Contrast that with the language from &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://guccifer2.wordpress.com/2016/06/30/faq/&quot;&gt;a June 2016 post:&lt;/a&gt; “I made some conclusions from the Marcel’s story and decided not to put all eggs in one basket. Moreover, other cases weren’t so successful and didn’t bring me the glory.”)&lt;/p&gt;
&lt;p&gt;Today the most popular counter-narrative surrounding Guccifer 2.0 concedes that the account was a fake persona but posits that it was created by the DNC to support a false-flag operation implicating Russia. In this theory, advanced in two &lt;a class=&quot;LinkWrapper LinkWrapper--external&quot; href=&quot;https://www.thenation.com/article/a-new-report-raises-big-questions-about-last-years-dnc-hack/&quot;&gt;widely cited&lt;/a&gt; anonymous blogs, Guccifer 2.0 was the DNC posing as Russia posing as a Romanian hacker.&lt;/p&gt;
</description>
<pubDate>Thu, 22 Mar 2018 23:24:59 +0000</pubDate>
<dc:creator>hownottowrite</dc:creator>
<og:title>EXCLUSIVE: ‘Lone DNC Hacker’ Guccifer 2.0 Slipped Up and Revealed He Was a Russian Intelligence Officer</og:title>
<og:description>Robert Mueller’s team has taken over the investigation of Guccifer 2.0, who communicated with (and was defended by) longtime Trump adviser Roger Stone.</og:description>
<og:url>https://www.thedailybeast.com/exclusive-lone-dnc-hacker-guccifer-20-slipped-up-and-revealed-he-was-a-russian-intelligence-officer</og:url>
<og:type>article</og:type>
<og:image>https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1440,w_2560,x_0,y_0/dpr_2.0/c_limit,w_740/fl_lossy,q_auto/v1521756060/180322-ackerman-guccifer2-tease_wqtyqu</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.thedailybeast.com/exclusive-lone-dnc-hacker-guccifer-20-slipped-up-and-revealed-he-was-a-russian-intelligence-officer</dc:identifier>
</item>
<item>
<title>D3.js 5.0 is out</title>
<link>https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50</link>
<guid isPermaLink="true" >https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50</guid>
<description>
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3/releases/tag/v5.0.0&quot;&gt;Released March 22, 2018.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;D3 5.0 introduces only a few non-backwards-compatible changes.&lt;/p&gt;
&lt;p&gt;D3 now uses &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Guide/Using_promises&quot; rel=&quot;nofollow&quot;&gt;Promises&lt;/a&gt; instead of asynchronous callbacks to load data. Promises simplify the structure of asynchronous code, especially in modern browsers that support &lt;a href=&quot;https://javascript.info/async-await&quot; rel=&quot;nofollow&quot;&gt;async and await&lt;/a&gt;. (See this &lt;a href=&quot;https://beta.observablehq.com/@mbostock/introduction-to-promises&quot; rel=&quot;nofollow&quot;&gt;introduction to promises&lt;/a&gt; on &lt;a href=&quot;https://beta.observablehq.com&quot; rel=&quot;nofollow&quot;&gt;Observable&lt;/a&gt;.) For example, to load a CSV file in v4, you might say:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;csv&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;file.csv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;error&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (error) &lt;span class=&quot;pl-k&quot;&gt;throw&lt;/span&gt; error;
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(data);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In v5, using promises:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;csv&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;file.csv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;) {
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(data);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you don’t need to rethrow the error—the promise will reject automatically, and you can &lt;em&gt;promise&lt;/em&gt;.catch if desired. Using await, the code is even simpler:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;csv&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;file.csv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(data);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the adoption of promises, D3 now uses the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot; rel=&quot;nofollow&quot;&gt;Fetch API&lt;/a&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/XMLHttpRequest&quot; rel=&quot;nofollow&quot;&gt;XMLHttpRequest&lt;/a&gt;: the &lt;a href=&quot;https://github.com/d3/d3-request&quot;&gt;d3-request&lt;/a&gt; module has been replaced by &lt;a href=&quot;https://github.com/d3/d3-fetch&quot;&gt;d3-fetch&lt;/a&gt;. Fetch supports many powerful new features, such as &lt;a href=&quot;https://beta.observablehq.com/@mbostock/streaming-shapefiles&quot; rel=&quot;nofollow&quot;&gt;streaming responses&lt;/a&gt;. D3 5.0 also deprecates and removes the &lt;a href=&quot;https://github.com/d3/d3-queue&quot;&gt;d3-queue&lt;/a&gt; module. Use &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise/all&quot; rel=&quot;nofollow&quot;&gt;Promise.all&lt;/a&gt; to run a batch of asynchronous tasks in parallel, or a helper library such as &lt;a href=&quot;https://github.com/sindresorhus/p-queue&quot;&gt;p-queue&lt;/a&gt; to &lt;a href=&quot;https://beta.observablehq.com/@mbostock/hello-p-queue&quot; rel=&quot;nofollow&quot;&gt;control concurrency&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;D3 no longer provides the d3.schemeCategory20* categorical color schemes. These twenty-color schemes were flawed because their grouped design could falsely imply relationships in the data: a shared hue can imply that the encoded data are part of a group (a super-category), while relative lightness can imply order. Instead, D3 now includes &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt;, which implements excellent schemes from ColorBrewer, including &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic/blob/master/README.md#categorical&quot;&gt;categorical&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic/blob/master/README.md#diverging&quot;&gt;diverging&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic/blob/master/README.md#sequential-single-hue&quot;&gt;sequential single-hue&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic/blob/master/README.md#sequential-multi-hue&quot;&gt;sequential multi-hue&lt;/a&gt; schemes. These schemes are available in both discrete and continuous variants.&lt;/p&gt;
&lt;p&gt;D3 now provides implementations of &lt;a href=&quot;https://beta.observablehq.com/@mbostock/d3-contour-plot&quot; rel=&quot;nofollow&quot;&gt;marching squares&lt;/a&gt; and &lt;a href=&quot;https://beta.observablehq.com/@mbostock/d3-density-contours&quot; rel=&quot;nofollow&quot;&gt;density estimation&lt;/a&gt; via &lt;a href=&quot;https://github.com/d3/d3-contour&quot;&gt;d3-contour&lt;/a&gt;! There are two new &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt; methods: &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_clone&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.clone&lt;/a&gt; for inserting clones of the selected nodes, and &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#create&quot;&gt;d3.create&lt;/a&gt; for creating detached elements. &lt;a href=&quot;https://github.com/d3/d3-geo&quot;&gt;Geographic projections&lt;/a&gt; now support &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#projection_angle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.angle&lt;/a&gt;, which has enabled several fantastic new &lt;a href=&quot;https://github.com/d3/d3-geo-polygon&quot;&gt;polyhedral projections&lt;/a&gt; by Philippe Rivière.&lt;/p&gt;
&lt;p&gt;Lastly, D3’s &lt;a href=&quot;https://github.com/d3/d3/blob/master/package.json&quot;&gt;package.json&lt;/a&gt; no longer pins exact versions of the dependent D3 modules. This fixes an issue with &lt;a href=&quot;https://github.com/d3/d3/issues/3256&quot;&gt;duplicate installs&lt;/a&gt; of D3 modules.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3/releases/tag/v4.0.0&quot;&gt;Released June 28, 2016.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;D3 4.0 is modular. Instead of one library, D3 is now &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#table-of-contents&quot;&gt;many small libraries&lt;/a&gt; that are designed to work together. You can pick and choose which parts to use as you see fit. Each library is maintained in its own repository, allowing decentralized ownership and independent release cycles. The default bundle combines about thirty of these microlibraries.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://d3js.org/d3.v4.js&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As before, you can load optional plugins on top of the default bundle, such as &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic&quot;&gt;ColorBrewer scales&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://d3js.org/d3.v4.js&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://d3js.org/d3-scale-chromatic.v0.3.js&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You are not required to use the default bundle! If you’re just using &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt;, use it as a standalone library. Like the default bundle, you can load D3 microlibraries using vanilla script tags or RequireJS (great for HTTP/2!):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://d3js.org/d3-selection.v1.js&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also &lt;code&gt;cat&lt;/code&gt; D3 microlibraries into a custom bundle, or use tools such as &lt;a href=&quot;https://webpack.github.io/&quot; rel=&quot;nofollow&quot;&gt;Webpack&lt;/a&gt; and &lt;a href=&quot;http://rollupjs.org/&quot; rel=&quot;nofollow&quot;&gt;Rollup&lt;/a&gt; to create &lt;a href=&quot;https://bl.ocks.org/mbostock/bb09af4c39c79cffcde4&quot; rel=&quot;nofollow&quot;&gt;optimized bundles&lt;/a&gt;. Custom bundles are great for applications that use a subset of D3’s features; for example, a React chart library might use D3 for scales and shapes, and React to manipulate the DOM. The D3 microlibraries are written as &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot; rel=&quot;nofollow&quot;&gt;ES6 modules&lt;/a&gt;, and Rollup lets you pick at the symbol level to produce smaller bundles.&lt;/p&gt;
&lt;p&gt;Small files are nice, but modularity is also about making D3 more &lt;em&gt;fun&lt;/em&gt;. Microlibraries are easier to understand, develop and test. They make it easier for new people to get involved and contribute. They reduce the distinction between a “core module” and a “plugin”, and increase the pace of development in D3 features.&lt;/p&gt;
&lt;p&gt;If you don’t care about modularity, you can mostly ignore this change and keep using the default bundle. However, there is one unavoidable consequence of adopting ES6 modules: every symbol in D3 4.0 now shares a flat namespace rather than the nested one of D3 3.x. For example, d3.scale.linear is now d3.scaleLinear, and d3.layout.treemap is now d3.treemap. The adoption of ES6 modules also means that D3 is now written exclusively in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot; rel=&quot;nofollow&quot;&gt;strict mode&lt;/a&gt; and has better readability. And there have been many other significant improvements to D3’s features! (Nearly all of the code from D3 3.x has been rewritten.) These changes are covered below.&lt;/p&gt;
&lt;h3&gt;Other Global Changes&lt;/h3&gt;
&lt;p&gt;The default &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD bundle&lt;/a&gt; is now &lt;a href=&quot;https://github.com/requirejs/requirejs/wiki/Updating-existing-libraries#register-as-an-anonymous-module-&quot;&gt;anonymous&lt;/a&gt;. No &lt;code&gt;d3&lt;/code&gt; global is exported if AMD or CommonJS is detected. In a vanilla environment, the D3 microlibraries share the &lt;code&gt;d3&lt;/code&gt; global, even if you load them independently; thus, code you write is the same whether or not you use the default bundle. (See &lt;a href=&quot;https://bost.ocks.org/mike/d3-plugin/&quot; rel=&quot;nofollow&quot;&gt;Let’s Make a (D3) Plugin&lt;/a&gt; for more.) The generated bundle is no longer stored in the Git repository; Bower has been repointed to &lt;a href=&quot;https://github.com/mbostock-bower/d3-bower&quot;&gt;d3-bower&lt;/a&gt;, and you can find the generated files on &lt;a href=&quot;https://unpkg.com/d3&quot; rel=&quot;nofollow&quot;&gt;npm&lt;/a&gt; or attached to the &lt;a href=&quot;https://github.com/d3/d3/releases/latest&quot;&gt;latest release&lt;/a&gt;. The non-minified default bundle is no longer mangled, making it more readable and preserving inline comments.&lt;/p&gt;
&lt;p&gt;To the consternation of some users, 3.x employed Unicode variable names such as λ, φ, τ and π for a concise representation of mathematical operations. A downside of this approach was that a SyntaxError would occur if you loaded the non-minified D3 using ISO-8859-1 instead of UTF-8. 3.x also used Unicode string literals, such as the SI-prefix µ for 1e-6. 4.0 uses only ASCII variable names and ASCII string literals (see &lt;a href=&quot;https://github.com/mbostock/rollup-plugin-ascii&quot;&gt;rollup-plugin-ascii&lt;/a&gt;), avoiding encoding problems.&lt;/p&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;

&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#scan&quot;&gt;d3.scan&lt;/a&gt; method performs a linear scan of an array, returning the index of the least element according to the specified comparator. This is similar to &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#min&quot;&gt;d3.min&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#max&quot;&gt;d3.max&lt;/a&gt;, except you can use it to find the position of an extreme element, rather than just calculate an extreme value.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; data &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [
  {name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Alice&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, value&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;},
  {name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Bob&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, value&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;},
  {name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Carol&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, value&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;},
  {name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Dwayne&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, value&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;}
];

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scan&lt;/span&gt;(data, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;b&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;value&lt;/span&gt;; }); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; 2&lt;/span&gt;
data[i]; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; {name: &quot;Carol&quot;, value: 1}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#ticks&quot;&gt;d3.ticks&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#tickStep&quot;&gt;d3.tickStep&lt;/a&gt; methods are useful for generating human-readable numeric ticks. These methods are a low-level alternative to &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#continuous_ticks&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.ticks&lt;/a&gt; from &lt;a href=&quot;https://github.com/d3/d3-scale&quot;&gt;d3-scale&lt;/a&gt;. The new implementation is also more accurate, returning the optimal number of ticks as measured by relative error.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; ticks &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ticks&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [0, 2, 4, 6, 8, 10]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#range&quot;&gt;d3.range&lt;/a&gt; method no longer makes an elaborate attempt to avoid floating-point error when &lt;em&gt;step&lt;/em&gt; is not an integer. The returned values are strictly defined as &lt;em&gt;start&lt;/em&gt; + &lt;em&gt;i&lt;/em&gt; * &lt;em&gt;step&lt;/em&gt;, where &lt;em&gt;i&lt;/em&gt; is an integer. (Learn more about &lt;a href=&quot;http://0.30000000000000004.com/&quot; rel=&quot;nofollow&quot;&gt;floating point math&lt;/a&gt;.) d3.range returns the empty array for infinite ranges, rather than throwing an error.&lt;/p&gt;
&lt;p&gt;The method signature for optional accessors has been changed to be more consistent with array methods such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;array&lt;/em&gt;.forEach&lt;/a&gt;: the accessor is passed the current element (&lt;em&gt;d&lt;/em&gt;), the index (&lt;em&gt;i&lt;/em&gt;), and the array (&lt;em&gt;data&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as undefined. This affects &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#min&quot;&gt;d3.min&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#max&quot;&gt;d3.max&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#extent&quot;&gt;d3.extent&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#sum&quot;&gt;d3.sum&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#mean&quot;&gt;d3.mean&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#median&quot;&gt;d3.median&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#quantile&quot;&gt;d3.quantile&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#variance&quot;&gt;d3.variance&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#deviation&quot;&gt;d3.deviation&lt;/a&gt;. The &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#quantile&quot;&gt;d3.quantile&lt;/a&gt; method previously did not take an accessor. Some methods with optional arguments now treat those arguments as missing if they are null or undefined, rather than strictly checking arguments.length.&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#histograms&quot;&gt;d3.histogram&lt;/a&gt; API replaces d3.layout.histogram. Rather than exposing &lt;em&gt;bin&lt;/em&gt;.x and &lt;em&gt;bin&lt;/em&gt;.dx on each returned bin, the histogram exposes &lt;em&gt;bin&lt;/em&gt;.x0 and &lt;em&gt;bin&lt;/em&gt;.x1, guaranteeing that &lt;em&gt;bin&lt;/em&gt;.x0 is exactly equal to &lt;em&gt;bin&lt;/em&gt;.x1 on the preceeding bin. The “frequency” and “probability” modes are no longer supported; each bin is simply an array of elements from the input data, so &lt;em&gt;bin&lt;/em&gt;.length is equal to D3 3.x’s &lt;em&gt;bin&lt;/em&gt;.y in frequency mode. To compute a probability distribution, divide the number of elements in each bin by the total number of elements.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;histogram&lt;/em&gt;.range method has been renamed &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#histogram_domain&quot;&gt;&lt;em&gt;histogram&lt;/em&gt;.domain&lt;/a&gt; for consistency with scales. The &lt;em&gt;histogram&lt;/em&gt;.bins method has been renamed &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#histogram_thresholds&quot;&gt;&lt;em&gt;histogram&lt;/em&gt;.thresholds&lt;/a&gt;, and no longer accepts an upper value: &lt;em&gt;n&lt;/em&gt; thresholds will produce &lt;em&gt;n&lt;/em&gt; + 1 bins. If you specify a desired number of bins rather than thresholds, d3.histogram now uses &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#ticks&quot;&gt;d3.ticks&lt;/a&gt; to compute nice bin thresholds. In addition to the default Sturges’ formula, D3 now implements the &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#thresholdFreedmanDiaconis&quot;&gt;Freedman-Diaconis rule&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#thresholdScott&quot;&gt;Scott’s normal reference rule&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To render axes properly in D3 3.x, you needed to style them:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;style&lt;/span&gt;&amp;gt;

&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-e&quot;&gt;.axis&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;path&lt;/span&gt;,&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-e&quot;&gt;.axis&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;line&lt;/span&gt; {&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;fill&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;none&lt;/span&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;stroke&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;#000&lt;/span&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;shape-rendering&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;crispEdges&lt;/span&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-e&quot;&gt;.axis&lt;/span&gt; &lt;span class=&quot;pl-ent&quot;&gt;text&lt;/span&gt; {&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;font&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;10&lt;span class=&quot;pl-k&quot;&gt;px&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;sans-serif&lt;/span&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-s1&quot;&gt;&amp;lt;&lt;/span&gt;/&lt;span class=&quot;pl-ent&quot;&gt;style&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;

&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;select&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.axis&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;    .&lt;span class=&quot;pl-c1&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;svg&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;axis&lt;/span&gt;()&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;        .&lt;span class=&quot;pl-en&quot;&gt;scale&lt;/span&gt;(x)&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;        .&lt;span class=&quot;pl-en&quot;&gt;orient&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;bottom&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));&lt;/span&gt;

&lt;span class=&quot;pl-s1&quot;&gt;&amp;lt;&lt;/span&gt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you didn’t, you saw this:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3/master/img/axis-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3/master/img/axis-v3.png&quot; width=&quot;100%&quot; height=&quot;105&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;D3 4.0 provides default styles and shorter syntax. In place of d3.svg.axis and &lt;em&gt;axis&lt;/em&gt;.orient, D3 4.0 now provides four constructors for each orientation: &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axisTop&quot;&gt;d3.axisTop&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axisRight&quot;&gt;d3.axisRight&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axisBottom&quot;&gt;d3.axisBottom&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axisLeft&quot;&gt;d3.axisLeft&lt;/a&gt;. These constructors accept a scale, so you can reduce all of the above to:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;

&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;select&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.axis&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;    .&lt;span class=&quot;pl-c1&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;axisBottom&lt;/span&gt;(x));&lt;/span&gt;

&lt;span class=&quot;pl-s1&quot;&gt;&amp;lt;&lt;/span&gt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And get this:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3/master/img/axis-v4.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3/master/img/axis-v4.png&quot; width=&quot;100%&quot; height=&quot;105&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As before, you can customize the axis appearance either by applying stylesheets or by modifying the axis elements. The default appearance has been changed slightly to offset the axis by a half-pixel; this fixes a crisp-edges rendering issue on Safari where the axis would be drawn two-pixels thick.&lt;/p&gt;
&lt;p&gt;There’s now an &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axis_tickArguments&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickArguments&lt;/a&gt; method, as an alternative to &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axis_ticks&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.ticks&lt;/a&gt; that also allows the axis tick arguments to be inspected. The &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axis_tickSize&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickSize&lt;/a&gt; method has been changed to only allow a single argument when setting the tick size. The &lt;em&gt;axis&lt;/em&gt;.innerTickSize and &lt;em&gt;axis&lt;/em&gt;.outerTickSize methods have been renamed &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axis_tickSizeInner&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickSizeInner&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-axis/blob/master/README.md#axis_tickSizeOuter&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickSizeOuter&lt;/a&gt;, respectively.&lt;/p&gt;

&lt;p&gt;Replacing d3.svg.brush, there are now three classes of brush for brushing along the &lt;em&gt;x&lt;/em&gt;-dimension, the &lt;em&gt;y&lt;/em&gt;-dimension, or both: &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brushX&quot;&gt;d3.brushX&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brushY&quot;&gt;d3.brushY&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brush&quot;&gt;d3.brush&lt;/a&gt;. Brushes are no longer dependent on &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#scales-d3-scale&quot;&gt;scales&lt;/a&gt;; instead, each brush defines a selection in screen coordinates. This selection can be &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#continuous_invert&quot;&gt;inverted&lt;/a&gt; if you want to compute the corresponding data domain. And rather than rely on the scales’ ranges to determine the brushable area, there is now a &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brush_extent&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.extent&lt;/a&gt; method for setting it. If you do not set the brush extent, it defaults to the full extent of the owner SVG element. The &lt;em&gt;brush&lt;/em&gt;.clamp method has also been eliminated; brushing is always restricted to the brushable area defined by the brush extent.&lt;/p&gt;
&lt;p&gt;Brushes no longer store the active brush selection (&lt;em&gt;i.e.&lt;/em&gt;, the highlighted region; the brush’s position) internally. The brush’s position is now stored on any elements to which the brush has been applied. The brush’s position is available as &lt;em&gt;event&lt;/em&gt;.selection within a brush event or by calling &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brushSelection&quot;&gt;d3.brushSelection&lt;/a&gt; on a given &lt;em&gt;element&lt;/em&gt;. To move the brush programmatically, use &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brush_move&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.move&lt;/a&gt; with a given &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#selections-d3-selection&quot;&gt;selection&lt;/a&gt; or &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#transitions-d3-transition&quot;&gt;transition&lt;/a&gt;; see the &lt;a href=&quot;https://bl.ocks.org/mbostock/6232537&quot; rel=&quot;nofollow&quot;&gt;brush snapping example&lt;/a&gt;. The &lt;em&gt;brush&lt;/em&gt;.event method has been removed.&lt;/p&gt;
&lt;p&gt;Brush interaction has been improved. By default, brushes now ignore right-clicks intended for the context menu; you can change this behavior using &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brush_filter&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.filter&lt;/a&gt;. Brushes also ignore emulated mouse events on iOS. Holding down SHIFT (⇧) while brushing locks the &lt;em&gt;x&lt;/em&gt;- or &lt;em&gt;y&lt;/em&gt;-position of the brush. Holding down META (⌘) while clicking and dragging starts a new selection, rather than translating the existing selection.&lt;/p&gt;
&lt;p&gt;The default appearance of the brush has also been improved and slightly simplified. Previously it was necessary to apply styles to the brush to give it a reasonable appearance, such as:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-css&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-e&quot;&gt;.brush&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;.extent&lt;/span&gt; {
  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;stroke&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;#fff&lt;/span&gt;;
  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;fill-opacity&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;.125&lt;/span&gt;;
  &lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;shape-rendering&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;crispEdges&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These styles are now applied by default as attributes; if you want to customize the brush appearance, you can still apply external styles or modify the brush elements. (D3 4.0 features a similar improvement to &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#axes-d3-axis&quot;&gt;axes&lt;/a&gt;.) A new &lt;a href=&quot;https://github.com/d3/d3-brush/blob/master/README.md#brush_handleSize&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.handleSize&lt;/a&gt; method lets you override the brush handle size; it defaults to six pixels.&lt;/p&gt;
&lt;p&gt;The brush now consumes handled events, making it easier to combine with other interactive behaviors such as &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#dragging-d3-drag&quot;&gt;dragging&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#zooming-d3-zoom&quot;&gt;zooming&lt;/a&gt;. The &lt;em&gt;brushstart&lt;/em&gt; and &lt;em&gt;brushend&lt;/em&gt; events have been renamed to &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt;, respectively. The brush event no longer reports a &lt;em&gt;event&lt;/em&gt;.mode to distinguish between resizing and dragging the brush.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening:&lt;/p&gt;
&lt;p&gt;For consistency with &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#arc_padAngle&quot;&gt;&lt;em&gt;arc&lt;/em&gt;.padAngle&lt;/a&gt;, &lt;em&gt;chord&lt;/em&gt;.padding has also been renamed to &lt;a href=&quot;https://github.com/d3/d3-chord/blob/master/README.md#ribbon_padAngle&quot;&gt;&lt;em&gt;ribbon&lt;/em&gt;.padAngle&lt;/a&gt;. A new &lt;a href=&quot;https://github.com/d3/d3-chord/blob/master/README.md#ribbon_context&quot;&gt;&lt;em&gt;ribbon&lt;/em&gt;.context&lt;/a&gt; method lets you render chord diagrams to Canvas! See also &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#paths-d3-path&quot;&gt;d3-path&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#set&quot;&gt;d3.set&lt;/a&gt; constructor now accepts an existing set for making a copy. If you pass an array to d3.set, you can also pass a value accessor. This accessor takes the standard arguments: the current element (&lt;em&gt;d&lt;/em&gt;), the index (&lt;em&gt;i&lt;/em&gt;), and the array (&lt;em&gt;data&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; undefined. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; yields &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;22.13333&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Manchuria&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,        year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1932&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Grand Rapids&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;},
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;26.76667&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Peatland&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,         year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1932&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Grand Rapids&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;},
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;28.10000&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;No. 462&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,          year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1931&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Duluth&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;},
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;38.50000&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Svansota&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,         year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1932&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Waseca&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;},
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;40.46667&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Svansota&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,         year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1931&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Crookston&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;},
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;36.03333&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Peatland&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,         year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1932&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Waseca&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;},
  {yield&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;34.46667&lt;/span&gt;, variety&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Wisconsin No. 38&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, year&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1931&lt;/span&gt;, site&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Grand Rapids&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;}
];

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; sites &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt;(yields, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;site&lt;/span&gt;; }); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Grand Rapids, Duluth, Waseca, Crookston&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#map&quot;&gt;d3.map&lt;/a&gt; constructor also follows the standard array accessor argument pattern.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;map&lt;/em&gt;.forEach and &lt;em&gt;set&lt;/em&gt;.forEach methods have been renamed to &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#map_each&quot;&gt;&lt;em&gt;map&lt;/em&gt;.each&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#set_each&quot;&gt;&lt;em&gt;set&lt;/em&gt;.each&lt;/a&gt; respectively. The order of arguments for &lt;em&gt;map&lt;/em&gt;.each has also been changed to &lt;em&gt;value&lt;/em&gt;, &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;map&lt;/em&gt;, while the order of arguments for &lt;em&gt;set&lt;/em&gt;.each is now &lt;em&gt;value&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; and &lt;em&gt;set&lt;/em&gt;. This is closer to ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;map&lt;/em&gt;.forEach&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;set&lt;/em&gt;.forEach&lt;/a&gt;. Also like ES6 Map and Set, &lt;em&gt;map&lt;/em&gt;.set and &lt;em&gt;set&lt;/em&gt;.add now return the current collection (rather than the added value) to facilitate method chaining. New &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#map_clear&quot;&gt;&lt;em&gt;map&lt;/em&gt;.clear&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#set_clear&quot;&gt;&lt;em&gt;set&lt;/em&gt;.clear&lt;/a&gt; methods can be used to empty collections.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.map&lt;/a&gt; method now always returns a d3.map instance. For a plain object, use &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.object&lt;/a&gt; instead. When used in conjunction with &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#nest_rollup&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.rollup&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-collection/blob/master/README.md#nest_entries&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.entries&lt;/a&gt; now returns {key, value} objects for the leaf entries, instead of {key, values}. This makes &lt;em&gt;nest&lt;/em&gt;.rollup easier to use in conjunction with &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#hierarchies-d3-hierarchy&quot;&gt;hierarchies&lt;/a&gt;, as in this &lt;a href=&quot;https://bl.ocks.org/mbostock/2838bf53e0e65f369f476afd653663a2&quot; rel=&quot;nofollow&quot;&gt;Nest Treemap example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All colors now have opacity exposed as &lt;em&gt;color&lt;/em&gt;.opacity, which is a number in [0, 1]. You can pass an optional opacity argument to the color space constructors &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#rgb&quot;&gt;d3.rgb&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#hsl&quot;&gt;d3.hsl&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#lab&quot;&gt;d3.lab&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#hcl&quot;&gt;d3.hcl&lt;/a&gt; or &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#cubehelix&quot;&gt;d3.cubehelix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can now parse rgba(…) and hsla(…) CSS color specifiers or the string “transparent” using &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#color&quot;&gt;d3.color&lt;/a&gt;. The “transparent” color is defined as an RGB color with zero opacity and undefined red, green and blue channels; this differs slightly from CSS which defines it as transparent black, but is useful for simplifying color interpolation logic where either the starting or ending color has undefined channels. The &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#color_toString&quot;&gt;&lt;em&gt;color&lt;/em&gt;.toString&lt;/a&gt; method now likewise returns an rgb(…) or rgba(…) string with integer channel values, not the hexadecimal RGB format, consistent with CSS computed values. This improves performance by short-circuiting transitions when the element’s starting style matches its ending style.&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#color&quot;&gt;d3.color&lt;/a&gt; method is the primary method for parsing colors: it returns a d3.color instance in the appropriate color space, or null if the CSS color specifier is invalid. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; red &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;color&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hsl(0, 80%, 50%)&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; {h: 0, l: 0.5, s: 0.8, opacity: 1}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parsing implementation is now more robust. For example, you can no longer mix integers and percentages in rgb(…), and it correctly handles whitespace, decimal points, number signs, and other edge cases. The color space constructors d3.rgb, d3.hsl, d3.lab, d3.hcl and d3.cubehelix now always return a copy of the input color, converted to the corresponding color space. While &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; remains, &lt;em&gt;rgb&lt;/em&gt;.hsl has been removed; use d3.hsl to convert a color to the RGB color space.&lt;/p&gt;
&lt;p&gt;The RGB color space no longer greedily quantizes and clamps channel values when creating colors, improving accuracy in color space conversion. Quantization and clamping now occurs in &lt;em&gt;color&lt;/em&gt;.toString when formatting a color for display. You can use the new &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#color_displayable&quot;&gt;&lt;em&gt;color&lt;/em&gt;.displayable&lt;/a&gt; to test whether a color is &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamut&quot; rel=&quot;nofollow&quot;&gt;out-of-gamut&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#rgb_brighter&quot;&gt;&lt;em&gt;rgb&lt;/em&gt;.brighter&lt;/a&gt; method no longer special-cases black. This is a multiplicative operator, defining a new color &lt;em&gt;r&lt;/em&gt;′, &lt;em&gt;g&lt;/em&gt;′, &lt;em&gt;b&lt;/em&gt;′ where &lt;em&gt;r&lt;/em&gt;′ = &lt;em&gt;r&lt;/em&gt; × &lt;em&gt;pow&lt;/em&gt;(0.7, &lt;em&gt;k&lt;/em&gt;), &lt;em&gt;g&lt;/em&gt;′ = &lt;em&gt;g&lt;/em&gt; × &lt;em&gt;pow&lt;/em&gt;(0.7, &lt;em&gt;k&lt;/em&gt;) and &lt;em&gt;b&lt;/em&gt;′ = &lt;em&gt;b&lt;/em&gt; × &lt;em&gt;pow&lt;/em&gt;(0.7, &lt;em&gt;k&lt;/em&gt;); a brighter black is still black.&lt;/p&gt;
&lt;p&gt;There’s a new &lt;a href=&quot;https://github.com/d3/d3-color/blob/master/README.md#cubehelix&quot;&gt;d3.cubehelix&lt;/a&gt; color space, generalizing Dave Green’s color scheme! (See also &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateCubehelixDefault&quot;&gt;d3.interpolateCubehelixDefault&lt;/a&gt; from &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#scales-d3-scale&quot;&gt;d3-scale&lt;/a&gt;.) You can continue to define your own custom color spaces, too; see &lt;a href=&quot;https://github.com/d3/d3-hsv&quot;&gt;d3-hsv&lt;/a&gt; for an example.&lt;/p&gt;

&lt;p&gt;Rather than decorating the &lt;em&gt;dispatch&lt;/em&gt; object with each event type, the dispatch object now exposes generic &lt;a href=&quot;https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_call&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.call&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_apply&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.apply&lt;/a&gt; methods which take the &lt;em&gt;type&lt;/em&gt; string as the first argument. For example, in D3 3.x, you might say:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;dispatcher&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;foo&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;call&lt;/span&gt;(that, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello, Foo!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To dispatch a &lt;em&gt;foo&lt;/em&gt; event in D3 4.0, you’d say:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;dispatcher&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, that, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello, Foo!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.on&lt;/a&gt; method now accepts multiple typenames, allowing you to add or remove listeners for multiple events simultaneously. For example, to send both &lt;em&gt;foo&lt;/em&gt; and &lt;em&gt;bar&lt;/em&gt; events to the same listener:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;dispatcher&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo bar&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;) {
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(message);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This matches the new behavior of &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; in &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#selections-d3-selection&quot;&gt;d3-selection&lt;/a&gt;. The &lt;em&gt;dispatch&lt;/em&gt;.on method now validates that the specifier &lt;em&gt;listener&lt;/em&gt; is a function, rather than throwing an error in the future.&lt;/p&gt;
&lt;p&gt;The new implementation d3.dispatch is faster, using fewer closures to improve performance. There’s also a new &lt;a href=&quot;https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_copy&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.copy&lt;/a&gt; method for making a copy of a dispatcher; this is used by &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#transitions-d3-transition&quot;&gt;d3-transition&lt;/a&gt; to improve the performance of transitions in the common case where all elements in a transition have the same transition event listeners.&lt;/p&gt;

&lt;p&gt;The drag behavior d3.behavior.drag has been renamed to d3.drag. The &lt;em&gt;drag&lt;/em&gt;.origin method has been replaced by &lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#drag_subject&quot;&gt;&lt;em&gt;drag&lt;/em&gt;.subject&lt;/a&gt;, which allows you to define the thing being dragged at the start of a drag gesture. This is particularly useful with Canvas, where draggable objects typically share a Canvas element (as opposed to SVG, where draggable objects typically have distinct DOM elements); see the &lt;a href=&quot;https://bl.ocks.org/mbostock/444757cc9f0fde320a5f469cd36860f4&quot; rel=&quot;nofollow&quot;&gt;circle dragging example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A new &lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#drag_container&quot;&gt;&lt;em&gt;drag&lt;/em&gt;.container&lt;/a&gt; method lets you override the parent element that defines the drag gesture coordinate system. This defaults to the parent node of the element to which the drag behavior was applied. For dragging on Canvas elements, you probably want to use the Canvas element as the container.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#drag-events&quot;&gt;Drag events&lt;/a&gt; now expose an &lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#event_on&quot;&gt;&lt;em&gt;event&lt;/em&gt;.on&lt;/a&gt; method for registering temporary listeners for duration of the current drag gesture; these listeners can capture state for the current gesture, such as the thing being dragged. A new &lt;em&gt;event&lt;/em&gt;.active property lets you detect whether multiple (multitouch) drag gestures are active concurrently. The &lt;em&gt;dragstart&lt;/em&gt; and &lt;em&gt;dragend&lt;/em&gt; events have been renamed to &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt;. By default, drag behaviors now ignore right-clicks intended for the context menu; use &lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#drag_filter&quot;&gt;&lt;em&gt;drag&lt;/em&gt;.filter&lt;/a&gt; to control which events are ignored. The drag behavior also ignores emulated mouse events on iOS. The drag behavior now consumes handled events, making it easier to combine with other interactive behaviors such as &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#zooming-d3-zoom&quot;&gt;zooming&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#dragEnable&quot;&gt;d3.dragEnable&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-drag/blob/master/README.md#dragDisable&quot;&gt;d3.dragDisable&lt;/a&gt; methods provide a low-level API for implementing drag gestures across browsers and devices. These methods are also used by other D3 components, such as the &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#brushes-d3-brush&quot;&gt;brush&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening, various CSV and TSV methods have new names:&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#csv&quot;&gt;d3.csv&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#tsv&quot;&gt;d3.tsv&lt;/a&gt; methods for loading files of the corresponding formats have not been renamed, however! Those are defined in &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#requests-d3-request&quot;&gt;d3-request&lt;/a&gt;.There’s no longer a d3.dsv method, which served the triple purpose of defining a DSV formatter, a DSV parser and a DSV requestor; instead, there’s just &lt;a href=&quot;https://github.com/d3/d3-dsv/blob/master/README.md#dsvFormat&quot;&gt;d3.dsvFormat&lt;/a&gt; which you can use to define a DSV formatter and parser. You can use &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request_response&quot;&gt;&lt;em&gt;request&lt;/em&gt;.response&lt;/a&gt; to make a request and then parse the response body, or just use &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#text&quot;&gt;d3.text&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-dsv/blob/master/README.md#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parse&lt;/a&gt; method now exposes the column names and their input order as &lt;em&gt;data&lt;/em&gt;.columns. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;csv&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cars.csv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;error&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (error) &lt;span class=&quot;pl-k&quot;&gt;throw&lt;/span&gt; error;
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;columns&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [&quot;Year&quot;, &quot;Make&quot;, &quot;Model&quot;, &quot;Length&quot;]&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can likewise pass an optional array of column names to &lt;a href=&quot;https://github.com/d3/d3-dsv/blob/master/README.md#dsv_format&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.format&lt;/a&gt; to format only a subset of columns, or to specify the column order explicitly:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; string &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;csvFormat&lt;/span&gt;(data, [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Year&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Model&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Length&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;]);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parser is a bit faster and the formatter is a bit more robust: inputs are coerced to strings before formatting, fixing an obscure crash, and deprecated support for falling back to &lt;a href=&quot;https://github.com/d3/d3-dsv/blob/master/README.md#dsv_formatRows&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.formatRows&lt;/a&gt; when the input &lt;em&gt;data&lt;/em&gt; is an array of arrays has been removed.&lt;/p&gt;

&lt;p&gt;D3 3.x used strings, such as “cubic-in-out”, to identify easing methods; these strings could be passed to d3.ease or &lt;em&gt;transition&lt;/em&gt;.ease. D3 4.0 uses symbols instead, such as &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#easeCubicInOut&quot;&gt;d3.easeCubicInOut&lt;/a&gt;. Symbols are simpler and cleaner. They work well with Rollup to produce smaller custom bundles. You can still define your own custom easing function, too, if desired. Here’s the full list of equivalents:&lt;/p&gt;
&lt;p&gt;¹ The -in, -out and -in-out variants of linear easing are identical, so there’s just d3.easeLinear.&lt;br/&gt;² Elastic and bounce easing were inadvertently reversed in 3.x, so 4.0 eliminates -out-in easing!&lt;/p&gt;
&lt;p&gt;For convenience, there are also default aliases for each easing method. For example, &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#easeCubic&quot;&gt;d3.easeCubic&lt;/a&gt; is an alias for &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#easeCubicInOut&quot;&gt;d3.easeCubicInOut&lt;/a&gt;. Most default to -in-out; the exceptions are &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#easeBounce&quot;&gt;d3.easeBounce&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#easeElastic&quot;&gt;d3.easeElastic&lt;/a&gt;, which default to -out.&lt;/p&gt;
&lt;p&gt;Rather than pass optional arguments to d3.ease or &lt;em&gt;transition&lt;/em&gt;.ease, parameterizable easing functions now have named parameters: &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#poly_exponent&quot;&gt;&lt;em&gt;poly&lt;/em&gt;.exponent&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#elastic_amplitude&quot;&gt;&lt;em&gt;elastic&lt;/em&gt;.amplitude&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#elastic_period&quot;&gt;&lt;em&gt;elastic&lt;/em&gt;.period&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md#back_overshoot&quot;&gt;&lt;em&gt;back&lt;/em&gt;.overshoot&lt;/a&gt;. For example, in D3 3.x you might say:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; e &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ease&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;elastic-out-in&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1.2&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The equivalent in D3 4.0 is:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; e &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;easeElastic&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;amplitude&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1.2&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Many of the easing functions have been optimized for performance and accuracy. Several bugs have been fixed, as well, such as the interpretation of the overshoot parameter for back easing, and the period parameter for elastic easing. Also, &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#transitions-d3-transition&quot;&gt;d3-transition&lt;/a&gt; now explicitly guarantees that the last tick of the transition happens at exactly &lt;em&gt;t&lt;/em&gt; = 1, avoiding floating point errors in some easing functions.&lt;/p&gt;
&lt;p&gt;There’s now a nice &lt;a href=&quot;https://github.com/d3/d3-ease/blob/master/README.md&quot;&gt;visual reference&lt;/a&gt; and an &lt;a href=&quot;https://bl.ocks.org/mbostock/248bac3b8e354a9103c4&quot; rel=&quot;nofollow&quot;&gt;animated reference&lt;/a&gt; to the new easing functions, too!&lt;/p&gt;

&lt;p&gt;The force layout d3.layout.force has been renamed to d3.forceSimulation. The force simulation now uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Verlet_integration#Velocity_Verlet&quot; rel=&quot;nofollow&quot;&gt;velocity Verlet integration&lt;/a&gt; rather than position Verlet, tracking the nodes’ positions (&lt;em&gt;node&lt;/em&gt;.x, &lt;em&gt;node&lt;/em&gt;.y) and velocities (&lt;em&gt;node&lt;/em&gt;.vx, &lt;em&gt;node&lt;/em&gt;.vy) rather than their previous positions (&lt;em&gt;node&lt;/em&gt;.px, &lt;em&gt;node&lt;/em&gt;.py).&lt;/p&gt;
&lt;p&gt;Rather than hard-coding a set of built-in forces, the force simulation is now extensible: you specify which forces you want! The approach affords greater flexibility through composition. The new forces are more flexible, too: force parameters can typically be configured per-node or per-link. There are separate positioning forces for &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#forceX&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#forceY&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; that replace &lt;em&gt;force&lt;/em&gt;.gravity; &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#x_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;.x&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#y_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;.y&lt;/a&gt; replace &lt;em&gt;force&lt;/em&gt;.size. The new &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#forceLink&quot;&gt;link force&lt;/a&gt; replaces &lt;em&gt;force&lt;/em&gt;.linkStrength and employs better default heuristics to improve stability. The new &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#forceManyBody&quot;&gt;many-body force&lt;/a&gt; replaces &lt;em&gt;force&lt;/em&gt;.charge and supports a new &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#manyBody_distanceMin&quot;&gt;minimum-distance parameter&lt;/a&gt; and performance improvements thanks to 4.0’s &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#quadtrees-d3-quadtree&quot;&gt;new quadtrees&lt;/a&gt;. There are also brand-new forces for &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#forceCenter&quot;&gt;centering nodes&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#forceCollision&quot;&gt;collision resolution&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new forces and simulation have been carefully crafted to avoid nondeterminism. Rather than initializing nodes randomly, if the nodes do not have preset positions, they are placed in a phyllotaxis pattern:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3-force/master/img/phyllotaxis.png&quot;&gt;&lt;img alt=&quot;Phyllotaxis&quot; src=&quot;https://raw.githubusercontent.com/d3/d3-force/master/img/phyllotaxis.png&quot; width=&quot;420&quot; height=&quot;219&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Random jitter is still needed to resolve link, collision and many-body forces if there are coincident nodes, but at least in the common case, the force simulation (and the resulting force-directed graph layout) is now consistent across browsers and reloads. D3 no longer plays dice!&lt;/p&gt;
&lt;p&gt;The force simulation has several new methods for greater control over heating, such as &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_alphaMin&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.alphaMin&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_alphaDecay&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.alphaDecay&lt;/a&gt;, and the internal timer. Calling &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_alpha&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.alpha&lt;/a&gt; now has no effect on the internal timer, which is controlled independently via &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_stop&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.stop&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_restart&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.restart&lt;/a&gt;. The force layout’s internal timer now starts automatically on creation, removing &lt;em&gt;force&lt;/em&gt;.start. As in 3.x, you can advance the simulation manually using &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_tick&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.tick&lt;/a&gt;. The &lt;em&gt;force&lt;/em&gt;.friction parameter is replaced by &lt;em&gt;simulation&lt;/em&gt;.velocityDecay. A new &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_alphaTarget&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.alphaTarget&lt;/a&gt; method allows you to set the desired alpha (temperature) of the simulation, such that the simulation can be smoothly reheated during interaction, and then smoothly cooled again. This improves the stability of the graph during interaction.&lt;/p&gt;
&lt;p&gt;The force layout no longer depends on the &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#dragging-d3-drag&quot;&gt;drag behavior&lt;/a&gt;, though you can certainly create &lt;a href=&quot;https://bl.ocks.org/mbostock/ad70335eeef6d167bc36fd3c04378048&quot; rel=&quot;nofollow&quot;&gt;draggable force-directed graphs&lt;/a&gt;! Set &lt;em&gt;node&lt;/em&gt;.fx and &lt;em&gt;node&lt;/em&gt;.fy to fix a node’s position. As an alternative to a &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#voronoi-d3-voronoi&quot;&gt;Voronoi&lt;/a&gt; SVG overlay, you can now use &lt;a href=&quot;https://github.com/d3/d3-force/blob/master/README.md#simulation_find&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.find&lt;/a&gt; to find the closest node to a pointer.&lt;/p&gt;

&lt;p&gt;If a precision is not specified, the formatting behavior has changed: there is now a default precision of 6 for all directives except &lt;em&gt;none&lt;/em&gt;, which defaults to 12. In 3.x, if you did not specify a precision, the number was formatted using its shortest unique representation (per &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;number&lt;/em&gt;.toString&lt;/a&gt;); this could lead to unexpected digits due to &lt;a href=&quot;http://0.30000000000000004.com/&quot; rel=&quot;nofollow&quot;&gt;floating point math&lt;/a&gt;. The new default precision in 4.0 produces more consistent results:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; f &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;e&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;);        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;4.200000e+1&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0.2&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;3.000000e-1&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To trim insignificant trailing zeroes, use the &lt;em&gt;none&lt;/em&gt; directive, which is similar &lt;code&gt;g&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; f &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.3&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0.12345&lt;/span&gt;);   &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;0.123&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0.10000&lt;/span&gt;);   &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;0.1&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0.2&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;0.3&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Under the hood, number formatting has improved accuracy with very large and very small numbers by using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;number&lt;/em&gt;.toExponential&lt;/a&gt; rather than &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log&quot; rel=&quot;nofollow&quot;&gt;Math.log&lt;/a&gt; to extract the mantissa and exponent. Negative zero (-0, an IEEE 754 construct) and very small numbers that round to zero are now formatted as unsigned zero. The inherently unsafe d3.round method has been removed, along with d3.requote.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/README.md#formatPrefix&quot;&gt;d3.formatPrefix&lt;/a&gt; method has been changed. Rather than returning an SI-prefix string, it returns an SI-prefix format function for a given &lt;em&gt;specifier&lt;/em&gt; and reference &lt;em&gt;value&lt;/em&gt;. For example, to format thousands:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; f &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;formatPrefix&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;,.0&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1e3&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e3&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;1k&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e4&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;10k&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e5&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;100k&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e6&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;1,000k&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike the &lt;code&gt;s&lt;/code&gt; format directive, d3.formatPrefix always employs the same SI-prefix, producing consistent results:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; f &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.0s&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e3&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;1k&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e4&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;10k&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e5&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;100k&quot;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1e6&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;1M&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new &lt;code&gt;(&lt;/code&gt; sign option uses parentheses for negative values. This is particularly useful in conjunction with &lt;code&gt;$&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;+.0f&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;);  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;-42&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;(.0f&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;);  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;(42)&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;+$.0f&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;-$42&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;($.0f&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;($42)&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new &lt;code&gt;=&lt;/code&gt; align option places any sign and symbol to the left of any padding:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;gt;6d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;);  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;   -42&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;=6d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;);  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;-   42&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;gt;(6d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;  (42)&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;=(6d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;42&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;(  42)&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; directives now round to the nearest integer, rather than returning the empty string for non-integers:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;b&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-c1&quot;&gt;41.9&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;101010&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;o&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-c1&quot;&gt;41.9&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;52&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-c1&quot;&gt;41.9&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;42&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;x&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-c1&quot;&gt;41.9&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;2a&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;c&lt;/code&gt; directive is now for character data (&lt;em&gt;i.e.&lt;/em&gt;, literal strings), not for character codes. The is useful if you just want to apply padding and alignment and don’t care about formatting numbers. For example, the infamous &lt;a href=&quot;http://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&quot; rel=&quot;nofollow&quot;&gt;left-pad&lt;/a&gt; (as well as center- and right-pad!) can be conveniently implemented as:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;gt;10c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;       foo&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;^10c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;   foo    &quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;lt;10c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;foo       &quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are several new methods for computing suggested decimal precisions; these are used by &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#scales-d3-scale&quot;&gt;d3-scale&lt;/a&gt; for tick formatting, and are helpful for implementing custom number formats: &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/README.md#precisionFixed&quot;&gt;d3.precisionFixed&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/README.md#precisionPrefix&quot;&gt;d3.precisionPrefix&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/README.md#precisionRound&quot;&gt;d3.precisionRound&lt;/a&gt;. There’s also a new &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/README.md#formatSpecifier&quot;&gt;d3.formatSpecifier&lt;/a&gt; method for parsing, validating and debugging format specifiers; it’s also good for deriving related format specifiers, such as when you want to substitute the precision automatically.&lt;/p&gt;
&lt;p&gt;You can now set the default locale using &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/README.md#formatDefaultLocale&quot;&gt;d3.formatDefaultLocale&lt;/a&gt;! The locales are published as &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#json&quot;&gt;JSON&lt;/a&gt; to &lt;a href=&quot;https://unpkg.com/d3-format/locale/&quot; rel=&quot;nofollow&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening, various methods have new names:&lt;/p&gt;
&lt;p&gt;Also renamed for consistency:&lt;/p&gt;
&lt;p&gt;Projections now have more appropriate defaults. For example, &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoOrthographic&quot;&gt;d3.geoOrthographic&lt;/a&gt; has a 90° clip angle by default, showing only the front hemisphere, and &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoGnomonic&quot;&gt;d3.geoGnomonic&lt;/a&gt; has a default 60° clip angle. The default &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#path_projection&quot;&gt;projection&lt;/a&gt; for &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoPath&quot;&gt;d3.geoPath&lt;/a&gt; is now null rather than &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoAlbersUsa&quot;&gt;d3.geoAlbersUsa&lt;/a&gt;; a null projection is used with &lt;a href=&quot;https://bl.ocks.org/mbostock/5557726&quot; rel=&quot;nofollow&quot;&gt;pre-projected geometry&lt;/a&gt; and is typically faster to render.&lt;/p&gt;
&lt;p&gt;“Fallback projections”—when you pass a function rather than a projection to &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#path_projection&quot;&gt;&lt;em&gt;path&lt;/em&gt;.projection&lt;/a&gt;—are no longer supported. For geographic projections, use &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoProjection&quot;&gt;d3.geoProjection&lt;/a&gt; or &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoProjectionMutator&quot;&gt;d3.geoProjectionMutator&lt;/a&gt; to define a custom projection. For arbitrary geometry transformations, implement the &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#streams&quot;&gt;stream interface&lt;/a&gt;; see also &lt;a href=&quot;https://github.com/d3/d3-geo/blob/master/README.md#geoTransform&quot;&gt;d3.geoTransform&lt;/a&gt;. The “raw” projections (e.g., d3.geo.equirectangular.raw) are no longer exported.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening:&lt;/p&gt;
&lt;p&gt;As an alternative to using JSON to represent hierarchical data (such as the “flare.json format” used by many D3 examples), the new &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#stratify&quot;&gt;d3.stratify&lt;/a&gt; operator simplifies the conversion of tabular data to hierarchical data! This is convenient if you already have data in a tabular format, such as the result of a SQL query or a CSV file:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;name,parent
Eve,
Cain,Eve
Seth,Eve
Enos,Seth
Noam,Seth
Abel,Eve
Awan,Eve
Enoch,Awan
Azura,Eve
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To convert this to a root &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#hierarchy&quot;&gt;&lt;em&gt;node&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; root &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;stratify&lt;/span&gt;()
    .&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt;; })
    .&lt;span class=&quot;pl-en&quot;&gt;parentId&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;parent&lt;/span&gt;; })
    (nodes);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting &lt;em&gt;root&lt;/em&gt; can be passed to &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#tree&quot;&gt;d3.tree&lt;/a&gt; to produce a tree diagram like this:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3/master/img/stratify.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3/master/img/stratify.png&quot; width=&quot;298&quot; height=&quot;137&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Root nodes can also be created from JSON data using &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#hierarchy&quot;&gt;d3.hierarchy&lt;/a&gt;. The hierarchy layouts now take these root nodes as input rather than operating directly on JSON data, which helps to provide a cleaner separation between the input data and the computed layout. (For example, use &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_copy&quot;&gt;&lt;em&gt;node&lt;/em&gt;.copy&lt;/a&gt; to isolate layout changes.) It also simplifies the API: rather than each hierarchy layout needing to implement value and sorting accessors, there are now generic &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_sum&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sum&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_sort&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sort&lt;/a&gt; methods that work with any hierarchy layout.&lt;/p&gt;
&lt;p&gt;The new d3.hierarchy API also provides a richer set of methods for manipulating hierarchical data. For example, to generate an array of all nodes in topological order, use &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_descendants&quot;&gt;&lt;em&gt;node&lt;/em&gt;.descendants&lt;/a&gt;; for just leaf nodes, use &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_leaves&quot;&gt;&lt;em&gt;node&lt;/em&gt;.leaves&lt;/a&gt;. To highlight the ancestors of a given &lt;em&gt;node&lt;/em&gt; on mouseover, use &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_ancestors&quot;&gt;&lt;em&gt;node&lt;/em&gt;.ancestors&lt;/a&gt;. To generate an array of {source, target} links for a given hierarchy, use &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_links&quot;&gt;&lt;em&gt;node&lt;/em&gt;.links&lt;/a&gt;; this replaces &lt;em&gt;treemap&lt;/em&gt;.links and similar methods on the other layouts. The new &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_path&quot;&gt;&lt;em&gt;node&lt;/em&gt;.path&lt;/a&gt; method replaces d3.layout.bundle; see also &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveBundle&quot;&gt;d3.curveBundle&lt;/a&gt; for hierarchical edge bundling.&lt;/p&gt;
&lt;p&gt;The hierarchy layouts have been rewritten using new, non-recursive traversal methods (&lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_each&quot;&gt;&lt;em&gt;node&lt;/em&gt;.each&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_eachAfter&quot;&gt;&lt;em&gt;node&lt;/em&gt;.eachAfter&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#node_eachBefore&quot;&gt;&lt;em&gt;node&lt;/em&gt;.eachBefore&lt;/a&gt;), improving performance on large datasets. The d3.tree layout no longer uses a &lt;em&gt;node&lt;/em&gt;._ field to store temporary state during layout.&lt;/p&gt;
&lt;p&gt;Treemap tiling is now &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap-tiling&quot;&gt;extensible&lt;/a&gt; via &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_tile&quot;&gt;&lt;em&gt;treemap&lt;/em&gt;.tile&lt;/a&gt;! The default squarified tiling algorithm, &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemapSquarify&quot;&gt;d3.treemapSquarify&lt;/a&gt;, has been completely rewritten, improving performance and fixing bugs in padding and rounding. The &lt;em&gt;treemap&lt;/em&gt;.sticky method has been replaced with the &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemapResquarify&quot;&gt;d3.treemapResquarify&lt;/a&gt;, which is identical to d3.treemapSquarify except it performs stable neighbor-preserving updates. The &lt;em&gt;treemap&lt;/em&gt;.ratio method has been replaced with &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#squarify_ratio&quot;&gt;&lt;em&gt;squarify&lt;/em&gt;.ratio&lt;/a&gt;. And there’s a new &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemapBinary&quot;&gt;d3.treemapBinary&lt;/a&gt; for binary treemaps!&lt;/p&gt;
&lt;p&gt;Treemap padding has also been improved. The treemap now distinguishes between &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_paddingOuter&quot;&gt;outer padding&lt;/a&gt; that separates a parent from its children, and &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_paddingInner&quot;&gt;inner padding&lt;/a&gt; that separates adjacent siblings. You can set the &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_paddingTop&quot;&gt;top-&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_paddingRight&quot;&gt;right-&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_paddingBottom&quot;&gt;bottom-&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap_paddingLeft&quot;&gt;left-&lt;/a&gt;outer padding separately. There are new examples for the traditional &lt;a href=&quot;https://bl.ocks.org/mbostock/911ad09bdead40ec0061&quot; rel=&quot;nofollow&quot;&gt;nested treemap&lt;/a&gt; and for Lü and Fogarty’s &lt;a href=&quot;https://bl.ocks.org/mbostock/f85ffb3a5ac518598043&quot; rel=&quot;nofollow&quot;&gt;cascaded treemap&lt;/a&gt;. And there’s a new example demonstrating &lt;a href=&quot;https://bl.ocks.org/mbostock/2838bf53e0e65f369f476afd653663a2&quot; rel=&quot;nofollow&quot;&gt;d3.nest with d3.treemap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The space-filling layouts &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#treemap&quot;&gt;d3.treemap&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#partition&quot;&gt;d3.partition&lt;/a&gt; now output &lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt; on each node instead of &lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;dx&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;dy&lt;/em&gt;. This improves accuracy by ensuring that the edges of adjacent cells are exactly equal, rather than sometimes being slightly off due to floating point math. The partition layout now supports &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#partition_round&quot;&gt;rounding&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#partition_padding&quot;&gt;padding&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The circle-packing layout, &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#pack&quot;&gt;d3.pack&lt;/a&gt;, has been completely rewritten to better implement Wang et al.’s algorithm, fixing major bugs and improving results! Welzl’s algorithm is now used to compute the exact &lt;a href=&quot;https://bl.ocks.org/mbostock/29c534ff0b270054a01c&quot; rel=&quot;nofollow&quot;&gt;smallest enclosing circle&lt;/a&gt; for each parent, rather than the approximate answer used by Wang et al. The 3.x output is shown on the left; 4.0 is shown on the right:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3/master/img/pack-v3.png&quot;&gt;&lt;img alt=&quot;Circle Packing in 3.x&quot; src=&quot;https://raw.githubusercontent.com/d3/d3/master/img/pack-v3.png&quot; width=&quot;420&quot; height=&quot;420&quot;/&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3/master/img/pack-v4.png&quot;&gt;&lt;img alt=&quot;Circle Packing in 4.0&quot; src=&quot;https://raw.githubusercontent.com/d3/d3/master/img/pack-v4.png&quot; width=&quot;420&quot; height=&quot;420&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A non-hierarchical implementation is also available as &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#packSiblings&quot;&gt;d3.packSiblings&lt;/a&gt;, and the smallest enclosing circle implementation is available as &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#packEnclose&quot;&gt;d3.packEnclose&lt;/a&gt;. &lt;a href=&quot;https://github.com/d3/d3-hierarchy/blob/master/README.md#pack_padding&quot;&gt;Pack padding&lt;/a&gt; now applies between a parent and its children, as well as between adjacent siblings. In addition, you can now specify padding as a function that is computed dynamically for each parent.&lt;/p&gt;
&lt;h2&gt;Internals&lt;/h2&gt;
&lt;p&gt;The d3.rebind method has been removed. (See the &lt;a href=&quot;https://github.com/d3/d3/blob/v3.5.17/src/core/rebind.js&quot;&gt;3.x source&lt;/a&gt;.) If you want to wrap a getter-setter method, the recommend pattern is to implement a wrapper method and check the return value. For example, given a &lt;em&gt;component&lt;/em&gt; that uses an internal &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#dispatches-d3-dispatch&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;component&lt;/em&gt;.on can rebind &lt;em&gt;dispatch&lt;/em&gt;.on as follows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;component&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; value &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;dispatch&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;on&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;apply&lt;/span&gt;(dispatch, &lt;span class=&quot;pl-c1&quot;&gt;arguments&lt;/span&gt;);
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; value &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; dispatch &lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt; component &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; value;
};
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The d3.functor method has been removed. (See the &lt;a href=&quot;https://github.com/d3/d3/blob/v3.5.17/src/core/functor.js&quot;&gt;3.x source&lt;/a&gt;.) If you want to promote a constant value to a function, the recommended pattern is to implement a closure that returns the constant value. If desired, you can use a helper method as follows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;constant&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; x;
  };
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Given a value &lt;em&gt;x&lt;/em&gt;, to promote &lt;em&gt;x&lt;/em&gt; to a function if it is not already:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; fx &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;function&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;constant&lt;/span&gt;(x);
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolate&quot;&gt;d3.interpolate&lt;/a&gt; method no longer delegates to d3.interpolators, which has been removed; its behavior is now defined by the library. It is now slightly faster in the common case that &lt;em&gt;b&lt;/em&gt; is a number. It only uses &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateRgb&quot;&gt;d3.interpolateRgb&lt;/a&gt; if &lt;em&gt;b&lt;/em&gt; is a valid CSS color specifier (and not approximately one). And if the end value &lt;em&gt;b&lt;/em&gt; is null, undefined, true or false, d3.interpolate now returns a constant function which always returns &lt;em&gt;b&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The behavior of &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateObject&quot;&gt;d3.interpolateObject&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateArray&quot;&gt;d3.interpolateArray&lt;/a&gt; has changed slightly with respect to properties or elements in the start value &lt;em&gt;a&lt;/em&gt; that do not exist in the end value &lt;em&gt;b&lt;/em&gt;: these properties and elements are now ignored, such that the ending value of the interpolator at &lt;em&gt;t&lt;/em&gt; = 1 is now precisely equal to &lt;em&gt;b&lt;/em&gt;. So, in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;interpolateObject&lt;/span&gt;({foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, bar&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;}, {foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;})(&lt;span class=&quot;pl-c1&quot;&gt;0.5&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; {bar: 1, foo: 2.5} in 3.x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whereas in 4.0, &lt;em&gt;a&lt;/em&gt;.bar is ignored:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;interpolateObject&lt;/span&gt;({foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, bar&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;}, {foo&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;})(&lt;span class=&quot;pl-c1&quot;&gt;0.5&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; {foo: 2.5} in 4.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt; are undefined or not an object, they are now implicitly converted to the empty object or empty array as appropriate, rather than throwing a TypeError.&lt;/p&gt;
&lt;p&gt;The d3.interpolateTransform interpolator has been renamed to &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateTransformSvg&quot;&gt;d3.interpolateTransformSvg&lt;/a&gt;, and there is a new &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateTransformCss&quot;&gt;d3.interpolateTransformCss&lt;/a&gt; to interpolate CSS transforms! This allows &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#transitions-d3-transition&quot;&gt;d3-transition&lt;/a&gt; to automatically interpolate both the SVG &lt;a href=&quot;https://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot; rel=&quot;nofollow&quot;&gt;transform attribute&lt;/a&gt; and the CSS &lt;a href=&quot;https://www.w3.org/TR/css-transforms-1/#transform-property&quot; rel=&quot;nofollow&quot;&gt;transform style property&lt;/a&gt;. (Note, however, that only 2D CSS transforms are supported.) The d3.transform method has been removed.&lt;/p&gt;
&lt;p&gt;Color space interpolators now interpolate opacity (see &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#colors-d3-color&quot;&gt;d3-color&lt;/a&gt;) and return rgb(…) or rgba(…) CSS color specifier strings rather than using the RGB hexadecimal format. This is necessary to support opacity interpolation, but is also beneficial because it matches CSS computed values. When a channel in the start color &lt;em&gt;a&lt;/em&gt; is undefined, color interpolators now use the corresponding channel value from the end color &lt;em&gt;b&lt;/em&gt;, or &lt;em&gt;vice versa&lt;/em&gt;. This logic previously applied to some channels (such as saturation in HSL), but now applies to all channels in all color spaces, and is especially useful when interpolating to or from transparent.&lt;/p&gt;
&lt;p&gt;There are now “long” versions of cylindrical color space interpolators: &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateHslLong&quot;&gt;d3.interpolateHslLong&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateHclLong&quot;&gt;d3.interpolateHclLong&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateCubehelixLong&quot;&gt;d3.interpolateCubehelixLong&lt;/a&gt;. These interpolators use linear interpolation of hue, rather than using the shortest path around the 360° hue circle. See &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateRainbow&quot;&gt;d3.interpolateRainbow&lt;/a&gt; for an example. The Cubehelix color space is now supported by &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#colors-d3-color&quot;&gt;d3-color&lt;/a&gt;, and so there are now &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateCubehelix&quot;&gt;d3.interpolateCubehelix&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateCubehelixLong&quot;&gt;d3.interpolateCubehelixLong&lt;/a&gt; interpolators.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web.archive.org/web/20160112115812/http://www.4p8.com/eric.brasseur/gamma.html&quot; rel=&quot;nofollow&quot;&gt;Gamma-corrected color interpolation&lt;/a&gt; is now supported for both RGB and Cubehelix color spaces as &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolate_gamma&quot;&gt;&lt;em&gt;interpolate&lt;/em&gt;.gamma&lt;/a&gt;. For example, to interpolate from purple to orange with a gamma of 2.2 in RGB space:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; interpolate &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;interpolateRgb&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;gamma&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2.2&lt;/span&gt;)(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;purple&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;orange&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are new interpolators for uniform non-rational &lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot; rel=&quot;nofollow&quot;&gt;B-splines&lt;/a&gt;! These are useful for smoothly interpolating between an arbitrary sequence of values from &lt;em&gt;t&lt;/em&gt; = 0 to &lt;em&gt;t&lt;/em&gt; = 1, such as to generate a smooth color gradient from a discrete set of colors. The &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateBasis&quot;&gt;d3.interpolateBasis&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateBasisClosed&quot;&gt;d3.interpolateBasisClosed&lt;/a&gt; interpolators generate one-dimensional B-splines, while &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateRgbBasis&quot;&gt;d3.interpolateRgbBasis&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateRgbBasisClosed&quot;&gt;d3.interpolateRgbBasisClosed&lt;/a&gt; generate three-dimensional B-splines through RGB color space. These are used by &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt; to generate continuous color scales from ColorBrewer’s discrete color schemes, such as &lt;a href=&quot;https://bl.ocks.org/mbostock/048d21cf747371b11884f75ad896e5a5&quot; rel=&quot;nofollow&quot;&gt;PiYG&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There’s also now a &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#quantize&quot;&gt;d3.quantize&lt;/a&gt; method for generating uniformly-spaced discrete samples from a continuous interpolator. This is useful for taking one of the built-in color scales (such as &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateViridis&quot;&gt;d3.interpolateViridis&lt;/a&gt;) and quantizing it for use with &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#scaleQuantize&quot;&gt;d3.scaleQuantize&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#scaleQuantile&quot;&gt;d3.scaleQuantile&lt;/a&gt; or &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#scaleThreshold&quot;&gt;d3.scaleThreshold&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-path/blob/master/README.md#path&quot;&gt;d3.path&lt;/a&gt; serializer implements the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot; rel=&quot;nofollow&quot;&gt;CanvasPathMethods API&lt;/a&gt;, allowing you to write code that can render to either Canvas or SVG. For example, given some code that draws to a canvas:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;drawCircle&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;context&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;radius&lt;/span&gt;) {
  &lt;span class=&quot;pl-smi&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;moveTo&lt;/span&gt;(radius, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;);
  &lt;span class=&quot;pl-smi&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;arc&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, radius, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;PI&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can render to SVG as follows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; context &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;path&lt;/span&gt;();
&lt;span class=&quot;pl-en&quot;&gt;drawCircle&lt;/span&gt;(context, &lt;span class=&quot;pl-c1&quot;&gt;40&lt;/span&gt;);
&lt;span class=&quot;pl-smi&quot;&gt;pathElement&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;toString&lt;/span&gt;());
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The path serializer enables &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#shapes-d3-shape&quot;&gt;d3-shape&lt;/a&gt; to support both Canvas and SVG; see &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#line_context&quot;&gt;&lt;em&gt;line&lt;/em&gt;.context&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#area_context&quot;&gt;&lt;em&gt;area&lt;/em&gt;.context&lt;/a&gt;, for example.&lt;/p&gt;

&lt;p&gt;There’s no longer a d3.geom.polygon constructor; instead you just pass an array of vertices to the polygon methods. So instead of &lt;em&gt;polygon&lt;/em&gt;.area and &lt;em&gt;polygon&lt;/em&gt;.centroid, there’s &lt;a href=&quot;https://github.com/d3/d3-polygon/blob/master/README.md#polygonArea&quot;&gt;d3.polygonArea&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-polygon/blob/master/README.md#polygonCentroid&quot;&gt;d3.polygonCentroid&lt;/a&gt;. There are also new &lt;a href=&quot;https://github.com/d3/d3-polygon/blob/master/README.md#polygonContains&quot;&gt;d3.polygonContains&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-polygon/blob/master/README.md#polygonLength&quot;&gt;d3.polygonLength&lt;/a&gt; methods. There’s no longer an equivalent to &lt;em&gt;polygon&lt;/em&gt;.clip, but if &lt;a href=&quot;https://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm&quot; rel=&quot;nofollow&quot;&gt;Sutherland–Hodgman clipping&lt;/a&gt; is needed, please &lt;a href=&quot;https://github.com/d3/d3-polygon/issues&quot;&gt;file a feature request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The d3.geom.hull operator has been simplified: instead of an operator with &lt;em&gt;hull&lt;/em&gt;.x and &lt;em&gt;hull&lt;/em&gt;.y accessors, there’s just the &lt;a href=&quot;https://github.com/d3/d3-polygon/blob/master/README.md#polygonHull&quot;&gt;d3.polygonHull&lt;/a&gt; method which takes an array of points and returns the convex hull.&lt;/p&gt;

&lt;p&gt;The d3.geom.quadtree method has been replaced by &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree&quot;&gt;d3.quadtree&lt;/a&gt;. 4.0 removes the concept of quadtree “generators” (configurable functions that build a quadtree from an array of data); there are now just quadtrees, which you can create via d3.quadtree and add data to via &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_add&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.add&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_addAll&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.addAll&lt;/a&gt;. This code in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; quadtree &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;geom&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;quadtree&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;extent&lt;/span&gt;([[&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;], [width, height]])
    (data);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be rewritten in 4.0 as:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; quadtree &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;quadtree&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;extent&lt;/span&gt;([[&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;], [width, height]])
    .&lt;span class=&quot;pl-en&quot;&gt;addAll&lt;/span&gt;(data);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new quadtree implementation is vastly improved! It is no longer recursive, avoiding stack overflows when there are large numbers of coincident points. The internal storage is now more efficient, and the implementation is also faster; constructing a quadtree of 1M normally-distributed points takes about one second in 4.0, as compared to three seconds in 3.x.&lt;/p&gt;
&lt;p&gt;The change in &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#nodes&quot;&gt;internal &lt;em&gt;node&lt;/em&gt; structure&lt;/a&gt; affects &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_visit&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.visit&lt;/a&gt;: use &lt;em&gt;node&lt;/em&gt;.length to distinguish leaf nodes from internal nodes. For example, to iterate over all data in a quadtree:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;quadtree&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;visit&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;node&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;node&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; {
      &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;node&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;data&lt;/span&gt;);
    } &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; (node &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;node&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;)
  }
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There’s a new &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_visitAfter&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.visitAfter&lt;/a&gt; method for visiting nodes in post-order traversal. This feature is used in &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#forces-d3-force&quot;&gt;d3-force&lt;/a&gt; to implement the &lt;a href=&quot;https://en.wikipedia.org/wiki/Barnes%E2%80%93Hut_simulation&quot; rel=&quot;nofollow&quot;&gt;Barnes–Hut approximation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can now remove data from a quadtree using &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_remove&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.remove&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_removeAll&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.removeAll&lt;/a&gt;. When adding data to a quadtree, the quadtree will now expand its extent by repeated doubling if the new point is outside the existing extent of the quadtree. There are also &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_extent&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.extent&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_cover&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.cover&lt;/a&gt; methods for explicitly expanding the extent of the quadtree after creation.&lt;/p&gt;
&lt;p&gt;Quadtrees support several new utility methods: &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_copy&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.copy&lt;/a&gt; returns a copy of the quadtree sharing the same data; &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_data&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.data&lt;/a&gt; generates an array of all data in the quadtree; &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_size&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.size&lt;/a&gt; returns the number of data points in the quadtree; and &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_root&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.root&lt;/a&gt; returns the root node, which is useful for manual traversal of the quadtree. The &lt;a href=&quot;https://github.com/d3/d3-quadtree/blob/master/README.md#quadtree_find&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.find&lt;/a&gt; method now takes an optional search radius, which is useful for pointer-based selection in &lt;a href=&quot;https://bl.ocks.org/mbostock/ad70335eeef6d167bc36fd3c04378048&quot; rel=&quot;nofollow&quot;&gt;force-directed graphs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Formerly known as Queue.js and queue-async, &lt;a href=&quot;https://github.com/d3/d3-queue&quot;&gt;d3.queue&lt;/a&gt; is now included in the default bundle, making it easy to load data files in parallel. It has been rewritten with fewer closures to improve performance, and there are now stricter checks in place to guarantee well-defined behavior. You can now use instanceof d3.queue and inspect the queue’s internal private state.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening, the random number generators have new names:&lt;/p&gt;
&lt;p&gt;There are also new random number generators for &lt;a href=&quot;https://github.com/d3/d3-random/blob/master/README.md#randomExponential&quot;&gt;exponential&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-random/blob/master/README.md#randomUniform&quot;&gt;uniform&lt;/a&gt; distributions. The &lt;a href=&quot;https://github.com/d3/d3-random/blob/master/README.md#randomNormal&quot;&gt;normal&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-random/blob/master/README.md#randomLogNormal&quot;&gt;log-normal&lt;/a&gt; random generators have been optimized.&lt;/p&gt;

&lt;p&gt;The d3.xhr method has been renamed to &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request&quot;&gt;d3.request&lt;/a&gt;. Basic authentication is now supported using &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request_user&quot;&gt;&lt;em&gt;request&lt;/em&gt;.user&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request_password&quot;&gt;&lt;em&gt;request&lt;/em&gt;.password&lt;/a&gt;. You can now configure a timeout using &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request_timeout&quot;&gt;&lt;em&gt;request&lt;/em&gt;.timeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If an error occurs, the corresponding &lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-progressevent&quot; rel=&quot;nofollow&quot;&gt;ProgressEvent&lt;/a&gt; of type “error” is now passed to the error listener, rather than the &lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-xmlhttprequest&quot; rel=&quot;nofollow&quot;&gt;XMLHttpRequest&lt;/a&gt;. Likewise, the ProgressEvent is passed to progress event listeners, rather than using &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#event&quot;&gt;d3.event&lt;/a&gt;. If &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#xml&quot;&gt;d3.xml&lt;/a&gt; encounters an error parsing XML, this error is now reported to error listeners rather than returning a null response.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request&quot;&gt;d3.request&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#text&quot;&gt;d3.text&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#xml&quot;&gt;d3.xml&lt;/a&gt; methods no longer take an optional mime type as the second argument; use &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#request_mimeType&quot;&gt;&lt;em&gt;request&lt;/em&gt;.mimeType&lt;/a&gt; instead. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;xml&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;file.svg&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;mimeType&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;image/svg+xml&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;error&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;svg&lt;/span&gt;) {
  …
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the exception of &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#html&quot;&gt;d3.html&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#xml&quot;&gt;d3.xml&lt;/a&gt;, Node is now supported via &lt;a href=&quot;https://github.com/driverdan/node-XMLHttpRequest&quot;&gt;node-XMLHttpRequest&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening:&lt;/p&gt;
&lt;p&gt;Scales now generate ticks in the same order as the domain: if you have a descending domain, you now get descending ticks. This change affects the order of tick elements generated by &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#axes-d3-axis&quot;&gt;axes&lt;/a&gt;. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scaleLinear&lt;/span&gt;().&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;]).&lt;span class=&quot;pl-en&quot;&gt;ticks&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [10, 8, 6, 4, 2, 0]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#log_tickFormat&quot;&gt;Log tick formatting&lt;/a&gt; now assumes a default &lt;em&gt;count&lt;/em&gt; of ten, not Infinity, if not specified. Log scales with domains that span many powers (such as from 1e+3 to 1e+29) now return only one &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#log_ticks&quot;&gt;tick&lt;/a&gt; per power rather than returning &lt;em&gt;base&lt;/em&gt; ticks per power. Non-linear quantitative scales are slightly more accurate.&lt;/p&gt;
&lt;p&gt;You can now control whether an ordinal scale’s domain is implicitly extended when the scale is passed a value that is not already in its domain. By default, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#ordinal_unknown&quot;&gt;&lt;em&gt;ordinal&lt;/em&gt;.unknown&lt;/a&gt; is &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#scaleImplicit&quot;&gt;d3.scaleImplicit&lt;/a&gt;, causing unknown values to be added to the domain:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scaleOrdinal&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;range&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;red&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;green&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;blue&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;]);

&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [0, 1]&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;x&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;blue&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [0, 1, 2]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By setting &lt;em&gt;ordinal&lt;/em&gt;.unknown, you instead define the output value for unknown inputs. This is particularly useful for choropleth maps where you want to assign a color to missing data.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scaleOrdinal&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;range&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;red&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;green&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;blue&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;unknown&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;undefined&lt;/span&gt;);

&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [0, 1]&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;x&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; undefined&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [0, 1]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;ordinal&lt;/em&gt;.rangeBands and &lt;em&gt;ordinal&lt;/em&gt;.rangeRoundBands methods have been replaced with a new subclass of ordinal scale: &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band-scales&quot;&gt;band scales&lt;/a&gt;. The following code in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;scale&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ordinal&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;b&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;rangeBands&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, width]);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Is equivalent to this in 4.0:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scaleBand&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;b&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;range&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, width]);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band_padding&quot;&gt;&lt;em&gt;band&lt;/em&gt;.padding&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band_paddingInner&quot;&gt;&lt;em&gt;band&lt;/em&gt;.paddingInner&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band_paddingOuter&quot;&gt;&lt;em&gt;band&lt;/em&gt;.paddingOuter&lt;/a&gt; methods replace the optional arguments to &lt;em&gt;ordinal&lt;/em&gt;.rangeBands. The new &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band_bandwidth&quot;&gt;&lt;em&gt;band&lt;/em&gt;.bandwidth&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band_step&quot;&gt;&lt;em&gt;band&lt;/em&gt;.step&lt;/a&gt; methods replace &lt;em&gt;ordinal&lt;/em&gt;.rangeBand. There’s also a new &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#band_align&quot;&gt;&lt;em&gt;band&lt;/em&gt;.align&lt;/a&gt; method which you can use to control how the extra space outside the bands is distributed, say to shift columns closer to the &lt;em&gt;y&lt;/em&gt;-axis.&lt;/p&gt;
&lt;p&gt;Similarly, the &lt;em&gt;ordinal&lt;/em&gt;.rangePoints and &lt;em&gt;ordinal&lt;/em&gt;.rangeRoundPoints methods have been replaced with a new subclass of ordinal scale: &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#point-scales&quot;&gt;point scales&lt;/a&gt;. The following code in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;scale&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ordinal&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;b&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;rangePoints&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, width]);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Is equivalent to this in 4.0:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scalePoint&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;domain&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;b&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;range&lt;/span&gt;([&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, width]);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#point_padding&quot;&gt;&lt;em&gt;point&lt;/em&gt;.padding&lt;/a&gt; method replaces the optional &lt;em&gt;padding&lt;/em&gt; argument to &lt;em&gt;ordinal&lt;/em&gt;.rangePoints. Like &lt;em&gt;ordinal&lt;/em&gt;.rangeBand with &lt;em&gt;ordinal&lt;/em&gt;.rangePoints, the &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#point_bandwidth&quot;&gt;&lt;em&gt;point&lt;/em&gt;.bandwidth&lt;/a&gt; method always returns zero; a new &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#point_step&quot;&gt;&lt;em&gt;point&lt;/em&gt;.step&lt;/a&gt; method returns the interval between adjacent points.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales&quot;&gt;ordinal scale constructor&lt;/a&gt; now takes an optional &lt;em&gt;range&lt;/em&gt; for a shorter alternative to &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#ordinal_range&quot;&gt;&lt;em&gt;ordinal&lt;/em&gt;.range&lt;/a&gt;. This is especially useful now that the categorical color scales have been changed to simple arrays of colors rather than specialized ordinal scale constructors:&lt;/p&gt;
&lt;p&gt;The following code in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; color &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;scale&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;category10&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Is equivalent to this in 4.0:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; color &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;scaleOrdinal&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;schemeCategory10&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#scaleSequential&quot;&gt;Sequential scales&lt;/a&gt;, are a new class of scales with a fixed output &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#sequential_interpolator&quot;&gt;interpolator&lt;/a&gt; instead of a &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#continuous_range&quot;&gt;range&lt;/a&gt;. Typically these scales are used to implement continuous sequential or diverging color schemes. Inspired by Matplotlib’s new &lt;a href=&quot;https://bids.github.io/colormap/&quot; rel=&quot;nofollow&quot;&gt;perceptually-motived colormaps&lt;/a&gt;, 4.0 now features &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateViridis&quot;&gt;viridis&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateInferno&quot;&gt;inferno&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateMagma&quot;&gt;magma&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolatePlasma&quot;&gt;plasma&lt;/a&gt; interpolators for use with sequential scales. Using &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#quantize&quot;&gt;d3.quantize&lt;/a&gt;, these interpolators can also be applied to &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#quantile-scales&quot;&gt;quantile&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#quantize-scales&quot;&gt;quantize&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#threshold-scales&quot;&gt;threshold&lt;/a&gt; scales.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateViridis&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/viridis.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;viridis&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateInferno&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/inferno.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;inferno&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateMagma&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/magma.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;magma&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolatePlasma&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/plasma.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;plasma&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.0 also ships new Cubehelix schemes, including &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateCubehelixDefault&quot;&gt;Dave Green’s default&lt;/a&gt; and a &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateRainbow&quot;&gt;cyclical rainbow&lt;/a&gt; inspired by &lt;a href=&quot;https://mycarta.wordpress.com/2013/02/21/perceptual-rainbow-palette-the-method/&quot; rel=&quot;nofollow&quot;&gt;Matteo Niccoli&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateCubehelixDefault&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/cubehelix.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;cubehelix&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateRainbow&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/rainbow.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;rainbow&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateWarm&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/warm.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;warm&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#interpolateCool&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-scale/master/img/cool.png&quot; width=&quot;100%&quot; height=&quot;40&quot; alt=&quot;cool&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For even more sequential and categorical color schemes, see &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For an introduction to scales, see &lt;a href=&quot;https://medium.com/@mbostock/introducing-d3-scale-61980c51545f&quot; rel=&quot;nofollow&quot;&gt;Introducing d3-scale&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Selections no longer subclass Array using &lt;a href=&quot;http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection&quot; rel=&quot;nofollow&quot;&gt;prototype chain injection&lt;/a&gt;; they are now plain objects, improving performance. The internal fields (&lt;em&gt;selection&lt;/em&gt;._groups, &lt;em&gt;selection&lt;/em&gt;._parents) are private; please use the documented public API to manipulate selections. The new &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_nodes&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.nodes&lt;/a&gt; method generates an array of all nodes in a selection.&lt;/p&gt;
&lt;p&gt;Selections are now immutable: the elements and parents in a selection never change. (The elements’ attributes and content will of course still be modified!) The &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.sort&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; methods now return new selections rather than modifying the selection in-place. In addition, &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; no longer merges entering nodes into the update selection; use &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_merge&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.merge&lt;/a&gt; to combine enter and update after a data join. For example, the following &lt;a href=&quot;https://bl.ocks.org/mbostock/a8a5baa4c4a470cda598&quot; rel=&quot;nofollow&quot;&gt;general update pattern&lt;/a&gt; in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; circle &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;svg&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;circle&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;data&lt;/span&gt;(data) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;blue&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);

&lt;span class=&quot;pl-smi&quot;&gt;circle&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;exit&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;remove&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; EXIT&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;circle&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;enter&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;circle&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; ENTER; modifies UPDATE! 🌶&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;green&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);

circle &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; ENTER + UPDATE&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stroke&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;black&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Would be rewritten in 4.0 as:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; circle &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;svg&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;circle&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;data&lt;/span&gt;(data) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;blue&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);

&lt;span class=&quot;pl-smi&quot;&gt;circle&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;exit&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;remove&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; EXIT&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;circle&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;enter&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;circle&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; ENTER&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;green&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(circle) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; ENTER + UPDATE&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stroke&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;black&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This change is discussed further in &lt;a href=&quot;https://medium.com/@mbostock/what-makes-software-good-943557f8a488&quot; rel=&quot;nofollow&quot;&gt;What Makes Software Good&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In 3.x, the &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_enter&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.enter&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_exit&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.exit&lt;/a&gt; methods were undefined until you called &lt;em&gt;selection&lt;/em&gt;.data, resulting in a TypeError if you attempted to access them. In 4.0, now they simply return the empty selection if the selection has not been joined to data.&lt;/p&gt;
&lt;p&gt;In 3.x, &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; would always append the new element as the last child of its parent. A little-known trick was to use &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.insert&lt;/a&gt; without specifying a &lt;em&gt;before&lt;/em&gt; selector when entering nodes, causing the entering nodes to be inserted before the following element in the update selection. In 4.0, this is now the default behavior of &lt;em&gt;selection&lt;/em&gt;.append; if you do not specify a &lt;em&gt;before&lt;/em&gt; selector to &lt;em&gt;selection&lt;/em&gt;.insert, the inserted element is appended as the last child. This change makes the general update pattern preserve the relative order of elements and data. For example, given the following DOM:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;a&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;b&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;f&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the following code:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; div &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;select&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;body&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;div&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-c1&quot;&gt;data&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;b&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;d&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;e&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;f&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; d &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;textContent&lt;/span&gt;; });

&lt;span class=&quot;pl-smi&quot;&gt;div&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;enter&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;div&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class=&quot;pl-c1&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; d; });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting DOM will be:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;a&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;b&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;c&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;d&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;e&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;f&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thus, the entering &lt;em&gt;c&lt;/em&gt;, &lt;em&gt;d&lt;/em&gt; and &lt;em&gt;e&lt;/em&gt; are inserted before &lt;em&gt;f&lt;/em&gt;, since &lt;em&gt;f&lt;/em&gt; is the following element in the update selection. Although this behavior is sufficient to preserve order if the new data’s order is stable, if the data changes order, you must still use &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_order&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.order&lt;/a&gt; to reorder elements.&lt;/p&gt;
&lt;p&gt;There is now only one class of selection. 3.x implemented enter selections using a special class with different behavior for &lt;em&gt;enter&lt;/em&gt;.append and &lt;em&gt;enter&lt;/em&gt;.select; a consequence of this design was that enter selections in 3.x lacked &lt;a href=&quot;https://github.com/d3/d3/issues/2043&quot;&gt;certain methods&lt;/a&gt;. In 4.0, enter selections are simply normal selections; they have the same methods and the same behavior. Placeholder &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/src/selection/enter.js&quot;&gt;enter nodes&lt;/a&gt; now implement &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;node&lt;/em&gt;.appendChild&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;node&lt;/em&gt;.insertBefore&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;node&lt;/em&gt;.querySelector&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;node&lt;/em&gt;.querySelectorAll&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; method has been changed slightly with respect to duplicate keys. In 3.x, if multiple data had the same key, the duplicate data would be ignored and not included in enter, update or exit; in 4.0 the duplicate data is always put in the enter selection. In both 3.x and 4.0, if multiple elements have the same key, the duplicate elements are put in the exit selection. Thus, 4.0’s behavior is now symmetric for enter and exit, and the general update pattern will now produce a DOM that matches the data even if there are duplicate keys.&lt;/p&gt;
&lt;p&gt;Selections have several new methods! Use &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_raise&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.raise&lt;/a&gt; to move the selected elements to the front of their siblings, so that they are drawn on top; use &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_lower&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.lower&lt;/a&gt; to move them to the back. Use &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_dispatch&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.dispatch&lt;/a&gt; to dispatch a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent&quot; rel=&quot;nofollow&quot;&gt;custom event&lt;/a&gt; to event listeners.&lt;/p&gt;
&lt;p&gt;When called in getter mode, &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; now returns the data for all elements in the selection, rather than just the data for the first group of elements. The &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt; method no longer sets the &lt;code&gt;this&lt;/code&gt; context when invoking the specified function; the &lt;em&gt;selection&lt;/em&gt; is passed as the first argument to the function, so use that. The &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; method now accepts multiple whitespace-separated typenames, so you can add or remove multiple listeners simultaneously. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;selection&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mousedown touchstart&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The arguments passed to callback functions has changed slightly in 4.0 to be more consistent. The standard arguments are the element’s datum (&lt;em&gt;d&lt;/em&gt;), the element’s index (&lt;em&gt;i&lt;/em&gt;), and the element’s group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the element. The slight exception to this convention is &lt;em&gt;selection&lt;/em&gt;.data, which is evaluated for each group rather than each element; it is passed the group’s parent datum (&lt;em&gt;d&lt;/em&gt;), the group index (&lt;em&gt;i&lt;/em&gt;), and the selection’s parents (&lt;em&gt;parents&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the group’s parent.&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#local-variables&quot;&gt;d3.local&lt;/a&gt; provides a mechanism for defining &lt;a href=&quot;https://bl.ocks.org/mbostock/e1192fe405703d8321a5187350910e08&quot; rel=&quot;nofollow&quot;&gt;local variables&lt;/a&gt;: state that is bound to DOM elements, and available to any descendant element. This can be a convenient alternative to using &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_each&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.each&lt;/a&gt; or storing local state in data.&lt;/p&gt;
&lt;p&gt;The d3.ns.prefix namespace prefix map has been renamed to &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#namespaces&quot;&gt;d3.namespaces&lt;/a&gt;, and the d3.ns.qualify method has been renamed to &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#namespace&quot;&gt;d3.namespace&lt;/a&gt;. Several new low-level methods are now available, as well. &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#matcher&quot;&gt;d3.matcher&lt;/a&gt; is used internally by &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_filter&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.filter&lt;/a&gt;; &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selector&quot;&gt;d3.selector&lt;/a&gt; is used by &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.select&lt;/a&gt;; &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selectorAll&quot;&gt;d3.selectorAll&lt;/a&gt; is used by &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_selectAll&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.selectAll&lt;/a&gt;; &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#creator&quot;&gt;d3.creator&lt;/a&gt; is used by &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.insert&lt;/a&gt;. The new &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#window&quot;&gt;d3.window&lt;/a&gt; returns the owner window for a given element, window or document. The new &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#customEvent&quot;&gt;d3.customEvent&lt;/a&gt; temporarily sets &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#event&quot;&gt;d3.event&lt;/a&gt; while invoking a function, allowing you to implement controls which dispatch custom events; this is used by &lt;a href=&quot;https://github.com/d3/d3-drag&quot;&gt;d3-drag&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-zoom&quot;&gt;d3-zoom&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-brush&quot;&gt;d3-brush&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the sake of parsimony, the multi-value methods—where you pass an object to set multiple attributes, styles or properties simultaneously—have been extracted to &lt;a href=&quot;https://github.com/d3/d3-selection-multi&quot;&gt;d3-selection-multi&lt;/a&gt; and are no longer part of the default bundle. The multi-value map methods have also been renamed to plural form to reduce overload: &lt;a href=&quot;https://github.com/d3/d3-selection-multi/blob/master/README.md#selection_attrs&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.attrs&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-selection-multi/blob/master/README.md#selection_styles&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.styles&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-selection-multi/blob/master/README.md#selection_properties&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.properties&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening:&lt;/p&gt;
&lt;p&gt;Shapes are no longer limited to SVG; they can now render to Canvas! Shape generators now support an optional &lt;em&gt;context&lt;/em&gt;: given a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D&quot; rel=&quot;nofollow&quot;&gt;CanvasRenderingContext2D&lt;/a&gt;, you can render a shape as a canvas path to be filled or stroked. For example, a &lt;a href=&quot;https://bl.ocks.org/mbostock/8878e7fd82034f1d63cf&quot; rel=&quot;nofollow&quot;&gt;canvas pie chart&lt;/a&gt; might use an arc generator:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; arc &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;arc&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;outerRadius&lt;/span&gt;(radius &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;)
    .&lt;span class=&quot;pl-en&quot;&gt;innerRadius&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;)
    .&lt;span class=&quot;pl-en&quot;&gt;context&lt;/span&gt;(context);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To render an arc for a given datum &lt;em&gt;d&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;beginPath&lt;/span&gt;();
&lt;span class=&quot;pl-en&quot;&gt;arc&lt;/span&gt;(d);
&lt;span class=&quot;pl-smi&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fill&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#line_context&quot;&gt;&lt;em&gt;line&lt;/em&gt;.context&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#area_context&quot;&gt;&lt;em&gt;area&lt;/em&gt;.context&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#arc_context&quot;&gt;&lt;em&gt;arc&lt;/em&gt;.context&lt;/a&gt; for more. Under the hood, shapes use &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#paths-d3-path&quot;&gt;d3-path&lt;/a&gt; to serialize canvas path methods to SVG path data when the context is null; thus, shapes are optimized for rendering to canvas. You can also now derive lines from areas. The line shares most of the same accessors, such as &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#line_defined&quot;&gt;&lt;em&gt;line&lt;/em&gt;.defined&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt;.curve&lt;/a&gt;, with the area from which it is derived. For example, to render the topline of an area, use &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#area_lineY1&quot;&gt;&lt;em&gt;area&lt;/em&gt;.lineY1&lt;/a&gt;; for the baseline, use &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#area_lineY0&quot;&gt;&lt;em&gt;area&lt;/em&gt;.lineY0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;4.0 introduces a new curve API for specifying how line and area shapes interpolate between data points. The &lt;em&gt;line&lt;/em&gt;.interpolate and &lt;em&gt;area&lt;/em&gt;.interpolate methods have been replaced with &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt;.curve&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#area_curve&quot;&gt;&lt;em&gt;area&lt;/em&gt;.curve&lt;/a&gt;. Curves are implemented using the &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#custom-curves&quot;&gt;curve interface&lt;/a&gt; rather than as a function that returns an SVG path data string; this allows curves to render to either SVG or Canvas. In addition, &lt;em&gt;line&lt;/em&gt;.curve and &lt;em&gt;area&lt;/em&gt;.curve now take a function which instantiates a curve for a given &lt;em&gt;context&lt;/em&gt;, rather than a string. The full list of equivalents:&lt;/p&gt;
&lt;p&gt;But that’s not all! 4.0 now provides parameterized Catmull–Rom splines as proposed by &lt;a href=&quot;http://www.cemyuksel.com/research/catmullrom_param/&quot; rel=&quot;nofollow&quot;&gt;Yuksel &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;. These are available as &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveCatmullRom&quot;&gt;d3.curveCatmullRom&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveCatmullRomClosed&quot;&gt;d3.curveCatmullRomClosed&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveCatmullRomOpen&quot;&gt;d3.curveCatmullRomOpen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/catmullRom.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/catmullRom.png&quot; width=&quot;888&quot; height=&quot;240&quot; alt=&quot;catmullRom&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/catmullRomOpen.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/catmullRomOpen.png&quot; width=&quot;888&quot; height=&quot;240&quot; alt=&quot;catmullRomOpen&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/catmullRomClosed.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/catmullRomClosed.png&quot; width=&quot;888&quot; height=&quot;330&quot; alt=&quot;catmullRomClosed&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each curve type can define its own named parameters, replacing &lt;em&gt;line&lt;/em&gt;.tension and &lt;em&gt;area&lt;/em&gt;.tension. For example, Catmull–Rom splines are parameterized using &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveCatmullRom_alpha&quot;&gt;&lt;em&gt;catmullRom&lt;/em&gt;.alpha&lt;/a&gt; and defaults to 0.5, which corresponds to a centripetal spline that avoids self-intersections and overshoot. For a uniform Catmull–Rom spline instead:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; line &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;line&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;curve&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;curveCatmullRom&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;alpha&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;));
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.0 fixes the interpretation of the cardinal spline &lt;em&gt;tension&lt;/em&gt; parameter, which is now specified as &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveCardinal_tension&quot;&gt;&lt;em&gt;cardinal&lt;/em&gt;.tension&lt;/a&gt; and defaults to zero for a uniform Catmull–Rom spline; a tension of one produces a linear curve. The first and last segments of basis and cardinal curves have also been fixed! The undocumented &lt;em&gt;interpolate&lt;/em&gt;.reverse field has been removed. Curves can define different behavior for toplines and baselines by counting the sequence of &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curve_lineStart&quot;&gt;&lt;em&gt;curve&lt;/em&gt;.lineStart&lt;/a&gt; within &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curve_areaStart&quot;&gt;&lt;em&gt;curve&lt;/em&gt;.areaStart&lt;/a&gt;. See the &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/src/curve/step.js&quot;&gt;d3.curveStep implementation&lt;/a&gt; for an example.&lt;/p&gt;
&lt;p&gt;4.0 fixes numerous bugs in the monotone curve implementation, and introduces &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveMonotoneY&quot;&gt;d3.curveMonotoneY&lt;/a&gt;; this is like d3.curveMonotoneX, except it requires that the input points are monotone in &lt;em&gt;y&lt;/em&gt; rather than &lt;em&gt;x&lt;/em&gt;, such as for a vertically-oriented line chart. The new &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveNatural&quot;&gt;d3.curveNatural&lt;/a&gt; produces a &lt;a href=&quot;http://mathworld.wolfram.com/CubicSpline.html&quot; rel=&quot;nofollow&quot;&gt;natural cubic spline&lt;/a&gt;. The default &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#bundle_beta&quot;&gt;β&lt;/a&gt; for &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#curveBundle&quot;&gt;d3.curveBundle&lt;/a&gt; is now 0.85, rather than 0.7, matching the values used by &lt;a href=&quot;https://www.win.tue.nl/vis1/home/dholten/papers/bundles_infovis.pdf&quot; rel=&quot;nofollow&quot;&gt;Holten&lt;/a&gt;. 4.0 also has a more robust implementation of arc padding; see &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#arc_padAngle&quot;&gt;&lt;em&gt;arc&lt;/em&gt;.padAngle&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#arc_padRadius&quot;&gt;&lt;em&gt;arc&lt;/em&gt;.padRadius&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;4.0 introduces a new symbol type API. Symbol types are passed to &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#symbol_type&quot;&gt;&lt;em&gt;symbol&lt;/em&gt;.type&lt;/a&gt; in place of strings. The equivalents are:&lt;/p&gt;
&lt;p&gt;The full set of symbol types is now:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolCircle&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/circle.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolCross&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/cross.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolDiamond&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/diamond.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolSquare&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/square.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolStar&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/star.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolTriangle&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/triangle.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#symbolWye&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3-shape/master/img/wye.png&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lastly, 4.0 overhauls the stack layout API, replacing d3.layout.stack with &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#stacks&quot;&gt;d3.stack&lt;/a&gt;. The stack generator no longer needs an &lt;em&gt;x&lt;/em&gt;-accessor. In addition, the API has been simplified: the &lt;em&gt;stack&lt;/em&gt; generator now accepts tabular input, such as this array of objects:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; data &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [
  {month&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2015&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;), apples&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;3840&lt;/span&gt;, bananas&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1920&lt;/span&gt;, cherries&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;960&lt;/span&gt;, dates&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;400&lt;/span&gt;},
  {month&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2015&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;), apples&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1600&lt;/span&gt;, bananas&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1440&lt;/span&gt;, cherries&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;960&lt;/span&gt;, dates&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;400&lt;/span&gt;},
  {month&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2015&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;), apples&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;640&lt;/span&gt;, bananas&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;960&lt;/span&gt;, cherries&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;640&lt;/span&gt;, dates&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;400&lt;/span&gt;},
  {month&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2015&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;), apples&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;320&lt;/span&gt;, bananas&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pl-c1&quot;&gt;480&lt;/span&gt;, cherries&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;640&lt;/span&gt;, dates&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;400&lt;/span&gt;}
];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To generate the stack layout, first define a stack generator, and then apply it to the data:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; stack &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;stack&lt;/span&gt;()
    .&lt;span class=&quot;pl-c1&quot;&gt;keys&lt;/span&gt;([&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;apples&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;bananas&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cherries&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dates&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class=&quot;pl-en&quot;&gt;order&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;stackOrderNone&lt;/span&gt;)
    .&lt;span class=&quot;pl-en&quot;&gt;offset&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;stackOffsetNone&lt;/span&gt;);

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; series &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;stack&lt;/span&gt;(data);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting array has one element per &lt;em&gt;series&lt;/em&gt;. Each series has one point per month, and each point has a lower and upper value defining the baseline and topline:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
[
  [[   &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3840&lt;/span&gt;], [   &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1600&lt;/span&gt;], [   &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;pl-c1&quot;&gt;640&lt;/span&gt;], [   &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;pl-c1&quot;&gt;320&lt;/span&gt;]], &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; apples&lt;/span&gt;
  [[&lt;span class=&quot;pl-c1&quot;&gt;3840&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5760&lt;/span&gt;], [&lt;span class=&quot;pl-c1&quot;&gt;1600&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3040&lt;/span&gt;], [ &lt;span class=&quot;pl-c1&quot;&gt;640&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1600&lt;/span&gt;], [ &lt;span class=&quot;pl-c1&quot;&gt;320&lt;/span&gt;,  &lt;span class=&quot;pl-c1&quot;&gt;800&lt;/span&gt;]], &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; bananas&lt;/span&gt;
  [[&lt;span class=&quot;pl-c1&quot;&gt;5760&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;6720&lt;/span&gt;], [&lt;span class=&quot;pl-c1&quot;&gt;3040&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4000&lt;/span&gt;], [&lt;span class=&quot;pl-c1&quot;&gt;1600&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2240&lt;/span&gt;], [ &lt;span class=&quot;pl-c1&quot;&gt;800&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1440&lt;/span&gt;]], &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; cherries&lt;/span&gt;
  [[&lt;span class=&quot;pl-c1&quot;&gt;6720&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;7120&lt;/span&gt;], [&lt;span class=&quot;pl-c1&quot;&gt;4000&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4400&lt;/span&gt;], [&lt;span class=&quot;pl-c1&quot;&gt;2240&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2640&lt;/span&gt;], [&lt;span class=&quot;pl-c1&quot;&gt;1440&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;1840&lt;/span&gt;]], &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; dates&lt;/span&gt;
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each series in then typically passed to an &lt;a href=&quot;https://github.com/d3/d3-shape/blob/master/README.md#areas&quot;&gt;area generator&lt;/a&gt; to render an area chart, or used to construct rectangles for a bar chart. Stack generators no longer modify the input data, so &lt;em&gt;stack&lt;/em&gt;.out has been removed.&lt;/p&gt;
&lt;p&gt;For an introduction to shapes, see &lt;a href=&quot;https://medium.com/@mbostock/introducing-d3-shape-73f8367e6d12&quot; rel=&quot;nofollow&quot;&gt;Introducing d3-shape&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening, the format constructors have new names:&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;format&lt;/em&gt;.parse method has also been removed in favor of separate &lt;a href=&quot;https://github.com/d3/d3-time-format/blob/master/README.md#timeParse&quot;&gt;d3.timeParse&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-time-format/blob/master/README.md#utcParse&quot;&gt;d3.utcParse&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-time-format/blob/master/README.md#isoParse&quot;&gt;d3.isoParse&lt;/a&gt; parser constructors. Thus, this code in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; parseTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;time&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-smi&quot;&gt;parse&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be rewritten in 4.0 as:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; parseTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeParse&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The multi-scale time format d3.time.format.multi has been replaced by &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#scaleTime&quot;&gt;d3.scaleTime&lt;/a&gt;’s &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#time_tickFormat&quot;&gt;tick format&lt;/a&gt;. Time formats now coerce inputs to dates, and time parsers coerce inputs to strings. The &lt;code&gt;%Z&lt;/code&gt; directive now allows more flexible parsing of time zone offsets, such as &lt;code&gt;-0700&lt;/code&gt;, &lt;code&gt;-07:00&lt;/code&gt;, &lt;code&gt;-07&lt;/code&gt;, and &lt;code&gt;Z&lt;/code&gt;. The &lt;code&gt;%p&lt;/code&gt; directive is now parsed correctly when the locale’s period name is longer than two characters (&lt;em&gt;e.g.&lt;/em&gt;, “a.m.”).&lt;/p&gt;
&lt;p&gt;The default U.S. English locale now uses 12-hour time and a more concise representation of the date. This aligns with local convention and is consistent with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;date&lt;/em&gt;.toLocaleString&lt;/a&gt; in Chrome, Firefox and Node:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; now &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeFormat&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%c&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;6/23/2016, 2:01:33 PM&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeFormat&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%x&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;6/23/2016&quot;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeFormat&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%X&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &quot;2:01:38 PM&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now set the default locale using &lt;a href=&quot;https://github.com/d3/d3-time-format/blob/master/README.md#timeFormatDefaultLocale&quot;&gt;d3.timeFormatDefaultLocale&lt;/a&gt;! The locales are published as &lt;a href=&quot;https://github.com/d3/d3-request/blob/master/README.md#json&quot;&gt;JSON&lt;/a&gt; to &lt;a href=&quot;https://unpkg.com/d3-time-format/locale/&quot; rel=&quot;nofollow&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The performance of time formatting and parsing has been improved, and the UTC formatter and parser have a cleaner implementation (that avoids temporarily overriding the Date global).&lt;/p&gt;

&lt;p&gt;Pursuant to the great namespace flattening, the local time intervals have been renamed:&lt;/p&gt;
&lt;p&gt;The UTC time intervals have likewise been renamed:&lt;/p&gt;
&lt;p&gt;The local time range aliases have been renamed:&lt;/p&gt;
&lt;p&gt;The UTC time range aliases have been renamed:&lt;/p&gt;
&lt;p&gt;The behavior of &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#interval_range&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.range&lt;/a&gt; (and the convenience aliases such as &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#timeDays&quot;&gt;d3.timeDays&lt;/a&gt;) has been changed when &lt;em&gt;step&lt;/em&gt; is greater than one. Rather than filtering the returned dates using the field number, &lt;em&gt;interval&lt;/em&gt;.range now behaves like &lt;a href=&quot;https://github.com/d3/d3-array/blob/master/README.md#range&quot;&gt;d3.range&lt;/a&gt;: it simply skips, returning every &lt;em&gt;step&lt;/em&gt;th date. For example, the following code in 3.x returns only odd days of the month:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;time&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;days&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;28&lt;/span&gt;), &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;), &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [Sun May 29 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Tue May 31 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Wed Jun 01 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Fri Jun 03 2016 00:00:00 GMT-0700 (PDT)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the returned array of dates does not start on the &lt;em&gt;start&lt;/em&gt; date because May 28 is even. Also note that May 31 and June 1 are one day apart, not two! The behavior of d3.timeDays in 4.0 is probably closer to what you expect:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeDays&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;28&lt;/span&gt;), &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;), &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [Sat May 28 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Mon May 30 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Wed Jun 01 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Fri Jun 03 2016 00:00:00 GMT-0700 (PDT)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want a filtered view of a time interval (say to guarantee that two overlapping ranges are consistent, such as when generating &lt;a href=&quot;https://github.com/d3/d3-scale/blob/master/README.md#time_ticks&quot;&gt;time scale ticks&lt;/a&gt;), you can use the new &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#interval_every&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.every&lt;/a&gt; method or its more general cousin &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#interval_filter&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.filter&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;timeDay&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;every&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;28&lt;/span&gt;), &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;));
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; [Sun May 29 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Tue May 31 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Wed Jun 01 2016 00:00:00 GMT-0700 (PDT),&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;  Fri Jun 03 2016 00:00:00 GMT-0700 (PDT)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time intervals now expose an &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#interval_count&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.count&lt;/a&gt; method for counting the number of interval boundaries after a &lt;em&gt;start&lt;/em&gt; date and before or equal to an &lt;em&gt;end&lt;/em&gt; date. This replaces d3.time.dayOfYear and related methods in 3.x. For example, this code in 3.x:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; now &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;time&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;dayOfYear&lt;/span&gt;(now); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; 165&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be rewritten in 4.0 as:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; now &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Date&lt;/span&gt;;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;timeDay&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeYear&lt;/span&gt;(now), now); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; 165&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Likewise, in place of 3.x’s d3.time.weekOfYear, in 4.0 you would say:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;timeWeek&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeYear&lt;/span&gt;(now), now); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; 24&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The new &lt;em&gt;interval&lt;/em&gt;.count is of course more general. For example, you can use it to compute hour-of-week for a heatmap:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;timeHour&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeWeek&lt;/span&gt;(now), now); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; 64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are all the equivalences from 3.x to 4.0:&lt;/p&gt;
&lt;p&gt;D3 4.0 now also lets you define custom time intervals using &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#timeInterval&quot;&gt;d3.timeInterval&lt;/a&gt;. The &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#timeYear&quot;&gt;d3.timeYear&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#utcYear&quot;&gt;d3.utcYear&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#timeMillisecond&quot;&gt;d3.timeMillisecond&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#utcMillisecond&quot;&gt;d3.utcMillisecond&lt;/a&gt; intervals have optimized implementations of &lt;a href=&quot;https://github.com/d3/d3-time/blob/master/README.md#interval_every&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.every&lt;/a&gt;, which is necessary to generate time ticks for very large or very small domains efficiently. More generally, the performance of time intervals has been improved, and time intervals now do a better job with respect to daylight savings in various locales.&lt;/p&gt;

&lt;p&gt;In D3 3.x, the only way to stop a timer was for its callback to return true. For example, this timer stops after one second:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;elapsed&lt;/span&gt;) {
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(elapsed);
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; elapsed &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In 4.0, use &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timer_stop&quot;&gt;&lt;em&gt;timer&lt;/em&gt;.stop&lt;/a&gt; instead:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; t &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;elapsed&lt;/span&gt;) {
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(elapsed);
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (elapsed &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;) {
    &lt;span class=&quot;pl-smi&quot;&gt;t&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;stop&lt;/span&gt;();
  }
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The primary benefit of &lt;em&gt;timer&lt;/em&gt;.stop is that timers are not required to self-terminate: they can be stopped externally, allowing for the immediate and synchronous disposal of associated resources, and the separation of concerns. The above is equivalent to:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; t &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;elapsed&lt;/span&gt;) {
  &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(elapsed);
});

&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;timeout&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
  &lt;span class=&quot;pl-smi&quot;&gt;t&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;stop&lt;/span&gt;();
}, &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This improvement extends to &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#transitions-d3-transition&quot;&gt;d3-transition&lt;/a&gt;: now when a transition is interrupted, its resources are immediately freed rather than having to wait for transition to start.&lt;/p&gt;
&lt;p&gt;4.0 also introduces a new &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timer_restart&quot;&gt;&lt;em&gt;timer&lt;/em&gt;.restart&lt;/a&gt; method for restarting timers, for replacing the callback of a running timer, or for changing its delay or reference time. Unlike &lt;em&gt;timer&lt;/em&gt;.stop followed by &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timer&quot;&gt;d3.timer&lt;/a&gt;, &lt;em&gt;timer&lt;/em&gt;.restart maintains the invocation priority of an existing timer: it guarantees that the order of invocation of active timers remains the same. The d3.timer.flush method has been renamed to &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timerFlush&quot;&gt;d3.timerFlush&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some usage patterns in D3 3.x could cause the browser to hang when a background page returned to the foreground. For example, the following code schedules a transition every second:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
  &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;div&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;call&lt;/span&gt;(someAnimation); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; BAD&lt;/span&gt;
}, &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If such code runs in the background for hours, thousands of queued transitions will try to run simultaneously when the page is foregrounded. D3 4.0 avoids this hang by freezing time in the background: when a page is in the background, time does not advance, and so no queue of timers accumulates to run when the page returns to the foreground. Use d3.timer instead of transitions to schedule a long-running animation, or use &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timeout&quot;&gt;d3.timeout&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#interval&quot;&gt;d3.interval&lt;/a&gt; in place of setTimeout and setInterval to prevent transitions from being queued in the background:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;interval&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
  &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;div&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;call&lt;/span&gt;(someAnimation); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; GOOD&lt;/span&gt;
}, &lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By freezing time in the background, timers are effectively “unaware” of being backgrounded. It’s like nothing happened! 4.0 also now uses high-precision time (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot; rel=&quot;nofollow&quot;&gt;performance.now&lt;/a&gt;) where available; the current time is available as &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#now&quot;&gt;d3.now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#selection_transition&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.transition&lt;/a&gt; method now takes an optional &lt;em&gt;transition&lt;/em&gt; instance which can be used to synchronize a new transition with an existing transition. (This change is discussed further in &lt;a href=&quot;https://medium.com/@mbostock/what-makes-software-good-943557f8a488&quot; rel=&quot;nofollow&quot;&gt;What Makes Software Good?&lt;/a&gt;) For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; t &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;duration&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;750&lt;/span&gt;)
    .&lt;span class=&quot;pl-en&quot;&gt;ease&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;easeLinear&lt;/span&gt;);

&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.apple&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;(t)
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;red&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);

&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.orange&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;(t)
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;orange&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transitions created this way inherit timing from the closest ancestor element, and thus are synchronized even when the referenced &lt;em&gt;transition&lt;/em&gt; has variable timing such as a staggered delay. This method replaces the deeply magical behavior of &lt;em&gt;transition&lt;/em&gt;.each in 3.x; in 4.0, &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_each&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.each&lt;/a&gt; is identical to &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_each&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.each&lt;/a&gt;. Use the new &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_on&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.on&lt;/a&gt; method to listen to transition events.&lt;/p&gt;
&lt;p&gt;The meaning of &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_delay&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.delay&lt;/a&gt; has changed for chained transitions created by &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_transition&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.transition&lt;/a&gt;. The specified delay is now relative to the &lt;em&gt;previous&lt;/em&gt; transition in the chain, rather than the &lt;em&gt;first&lt;/em&gt; transition in the chain; this makes it easier to insert interstitial pauses. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;selectAll&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;.apple&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;() &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; First fade to green.&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;green&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;() &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Then red.&lt;/span&gt;
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;red&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;() &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Wait one second. Then brown, and remove.&lt;/span&gt;
    .&lt;span class=&quot;pl-en&quot;&gt;delay&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;)
    .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;brown&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class=&quot;pl-c1&quot;&gt;remove&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time is now frozen in the background; see &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#timers-d3-timer&quot;&gt;d3-timer&lt;/a&gt; for more information. While it was previously the case that transitions did not run in the background, now they pick up where they left off when the page returns to the foreground. This avoids page hangs by not scheduling an unbounded number of transitions in the background. If you want to schedule an infinitely-repeating transition, use transition events, or use &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timeout&quot;&gt;d3.timeout&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#interval&quot;&gt;d3.interval&lt;/a&gt; in place of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot; rel=&quot;nofollow&quot;&gt;setTimeout&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval&quot; rel=&quot;nofollow&quot;&gt;setInterval&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.interrupt&lt;/a&gt; method now cancels all scheduled transitions on the selected elements, in addition to interrupting any active transition. When transitions are interrupted, any resources associated with the transition are now released immediately, rather than waiting until the transition starts, improving performance. (See also &lt;a href=&quot;https://github.com/d3/d3-timer/blob/master/README.md#timer_stop&quot;&gt;&lt;em&gt;timer&lt;/em&gt;.stop&lt;/a&gt;.) The new &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#interrupt&quot;&gt;d3.interrupt&lt;/a&gt; method is an alternative to &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.interrupt&lt;/a&gt; for quickly interrupting a single node.&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#active&quot;&gt;d3.active&lt;/a&gt; method allows you to select the currently-active transition on a given &lt;em&gt;node&lt;/em&gt;, if any. This is useful for modifying in-progress transitions and for scheduling infinitely-repeating transitions. For example, this transition continuously oscillates between red and blue:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;select&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;circle&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;()
    .&lt;span class=&quot;pl-en&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;start&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;repeat&lt;/span&gt;() {
        &lt;span class=&quot;pl-smi&quot;&gt;d3&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;active&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;this&lt;/span&gt;)
            .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;red&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
          .&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;()
            .&lt;span class=&quot;pl-c1&quot;&gt;style&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fill&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;blue&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
          .&lt;span class=&quot;pl-en&quot;&gt;transition&lt;/span&gt;()
            .&lt;span class=&quot;pl-en&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;start&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, repeat);
      });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#the-life-of-a-transition&quot;&gt;life cycle of a transition&lt;/a&gt; is now more formally defined and enforced. For example, attempting to change the duration of a running transition now throws an error rather than silently failing. The &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_remove&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.remove&lt;/a&gt; method has been fixed if multiple transition names are in use: the element is only removed if it has no scheduled transitions, regardless of name. The &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_ease&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.ease&lt;/a&gt; method now always takes an &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#easings-d3-ease&quot;&gt;easing function&lt;/a&gt;, not a string. When a transition ends, the tweens are invoked one last time with &lt;em&gt;t&lt;/em&gt; equal to exactly 1, regardless of the associated easing function.&lt;/p&gt;
&lt;p&gt;As with &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#selections-d3-selection&quot;&gt;selections&lt;/a&gt; in 4.0, all transition callback functions now receive the standard arguments: the element’s datum (&lt;em&gt;d&lt;/em&gt;), the element’s index (&lt;em&gt;i&lt;/em&gt;), and the element’s group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the element. This notably affects &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_attrTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attrTween&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_styleTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.styleTween&lt;/a&gt;, which no longer pass the &lt;em&gt;tween&lt;/em&gt; function the current attribute or style value as the third argument. The &lt;em&gt;transition&lt;/em&gt;.attrTween and &lt;em&gt;transition&lt;/em&gt;.styleTween methods can now be called in getter modes for debugging or to share tween definitions between transitions.&lt;/p&gt;
&lt;p&gt;Homogenous transitions are now optimized! If all elements in a transition share the same tween, interpolator, or event listeners, this state is now shared across the transition rather than separately allocated for each element. 4.0 also uses an optimized default interpolator in place of &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolate&quot;&gt;d3.interpolate&lt;/a&gt; for &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.style&lt;/a&gt;. And transitions can now interpolate both &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateTransformCss&quot;&gt;CSS&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-interpolate/blob/master/README.md#interpolateTransformSvg&quot;&gt;SVG&lt;/a&gt; transforms.&lt;/p&gt;
&lt;p&gt;For reusable components that support transitions, such as &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#axes-d3-axis&quot;&gt;axes&lt;/a&gt;, a new &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_selection&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.selection&lt;/a&gt; method returns the &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#selections-d3-selection&quot;&gt;selection&lt;/a&gt; that corresponds to a given transition. There is also a new &lt;a href=&quot;https://github.com/d3/d3-transition/blob/master/README.md#transition_merge&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.merge&lt;/a&gt; method that is equivalent to &lt;a href=&quot;https://github.com/d3/d3-selection/blob/master/README.md#selection_merge&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.merge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the sake of parsimony, the multi-value map methods have been extracted to &lt;a href=&quot;https://github.com/d3/d3-selection-multi&quot;&gt;d3-selection-multi&lt;/a&gt; and are no longer part of the default bundle. The multi-value map methods have also been renamed to plural form to reduce overload: &lt;a href=&quot;https://github.com/d3/d3-selection-multi/blob/master/README.md#transition_attrs&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attrs&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-selection-multi/blob/master/README.md#transition_styles&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.styles&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The d3.geom.voronoi method has been renamed to &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi&quot;&gt;d3.voronoi&lt;/a&gt;, and the &lt;em&gt;voronoi&lt;/em&gt;.clipExtent method has been renamed to &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi_extent&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.extent&lt;/a&gt;. The undocumented &lt;em&gt;polygon&lt;/em&gt;.point property in 3.x, which is the element in the input &lt;em&gt;data&lt;/em&gt; corresponding to the polygon, has been renamed to &lt;em&gt;polygon&lt;/em&gt;.data.&lt;/p&gt;
&lt;p&gt;Calling &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#_voronoi&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;&lt;/a&gt; now returns the full &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi-diagrams&quot;&gt;Voronoi diagram&lt;/a&gt;, which includes topological information: each Voronoi edge exposes &lt;em&gt;edge&lt;/em&gt;.left and &lt;em&gt;edge&lt;/em&gt;.right specifying the sites on either side of the edge, and each Voronoi cell is defined as an array of these edges and a corresponding site. The Voronoi diagram can be used to efficiently compute both the Voronoi and Delaunay tessellations for a set of points: &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#diagram_polygons&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.polygons&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#diagram_links&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.links&lt;/a&gt;, and &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#diagram_triangles&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.triangles&lt;/a&gt;. The new topology is also useful in conjunction with TopoJSON; see the &lt;a href=&quot;https://bl.ocks.org/mbostock/cd52a201d7694eb9d890&quot; rel=&quot;nofollow&quot;&gt;Voronoi topology example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi_polygons&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.polygons&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#diagram_polygons&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.polygons&lt;/a&gt; now require an &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi_extent&quot;&gt;extent&lt;/a&gt;; there is no longer an implicit extent of ±1e6. The &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi_links&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.links&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#voronoi_triangles&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.triangles&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#diagram_links&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.links&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-voronoi/blob/master/README.md#diagram_triangles&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.triangles&lt;/a&gt; are now affected by the clip extent: as the Delaunay is computed as the dual of the Voronoi, two sites are only linked if the clipped cells are touching. To compute the Delaunay triangulation without respect to clipping, set the extent to null.&lt;/p&gt;
&lt;p&gt;The Voronoi generator finally has well-defined behavior for coincident vertices: the first of a set of coincident points has a defined cell, while the subsequent duplicate points have null cells. The returned array of polygons is sparse, so by using &lt;em&gt;array&lt;/em&gt;.forEach or &lt;em&gt;array&lt;/em&gt;.map, you can easily skip undefined cells. The Voronoi generator also now correctly handles the case where no cell edges intersect the extent.&lt;/p&gt;

&lt;p&gt;The zoom behavior d3.behavior.zoom has been renamed to d3.zoom. Zoom behaviors no longer store the active zoom transform (&lt;em&gt;i.e.&lt;/em&gt;, the visible region; the scale and translate) internally. The zoom transform is now stored on any elements to which the zoom behavior has been applied. The zoom transform is available as &lt;em&gt;event&lt;/em&gt;.transform within a zoom event or by calling &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoomTransform&quot;&gt;d3.zoomTransform&lt;/a&gt; on a given &lt;em&gt;element&lt;/em&gt;. To zoom programmatically, use &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt; with a given &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#selections-d3-selection&quot;&gt;selection&lt;/a&gt; or &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#transitions-d3-transition&quot;&gt;transition&lt;/a&gt;; see the &lt;a href=&quot;https://bl.ocks.org/mbostock/b783fbb2e673561d214e09c7fb5cedee&quot; rel=&quot;nofollow&quot;&gt;zoom transitions example&lt;/a&gt;. The &lt;em&gt;zoom&lt;/em&gt;.event method has been removed.&lt;/p&gt;
&lt;p&gt;To make programmatic zooming easier, there are several new convenience methods on top of &lt;em&gt;zoom&lt;/em&gt;.transform: &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_translateBy&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.translateBy&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_scaleBy&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.scaleBy&lt;/a&gt; and &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_scaleTo&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.scaleTo&lt;/a&gt;. There is also a new API for describing &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom-transforms&quot;&gt;zoom transforms&lt;/a&gt;. Zoom behaviors are no longer dependent on &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#scales-d3-scale&quot;&gt;scales&lt;/a&gt;, but you can use &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#transform_rescaleX&quot;&gt;&lt;em&gt;transform&lt;/em&gt;.rescaleX&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#transform_rescaleY&quot;&gt;&lt;em&gt;transform&lt;/em&gt;.rescaleY&lt;/a&gt;, &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#transform_invertX&quot;&gt;&lt;em&gt;transform&lt;/em&gt;.invertX&lt;/a&gt; or &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#transform_invertY&quot;&gt;&lt;em&gt;transform&lt;/em&gt;.invertY&lt;/a&gt; to transform a scale’s domain. 3.x’s &lt;em&gt;event&lt;/em&gt;.scale is replaced with &lt;em&gt;event&lt;/em&gt;.transform.k, and &lt;em&gt;event&lt;/em&gt;.translate is replaced with &lt;em&gt;event&lt;/em&gt;.transform.x and &lt;em&gt;event&lt;/em&gt;.transform.y. The &lt;em&gt;zoom&lt;/em&gt;.center method has been removed in favor of programmatic zooming.&lt;/p&gt;
&lt;p&gt;The zoom behavior finally supports simple constraints on panning! The new &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_translateExtent&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.translateExtent&lt;/a&gt; lets you define the viewable extent of the world: the currently-visible extent (the extent of the viewport, as defined by &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_extent&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.extent&lt;/a&gt;) is always contained within the translate extent. The &lt;em&gt;zoom&lt;/em&gt;.size method has been replaced by &lt;em&gt;zoom&lt;/em&gt;.extent, and the default behavior is now smarter: it defaults to the extent of the zoom behavior’s owner element, rather than being hardcoded to 960×500. (This also improves the default path chosen during smooth zoom transitions!)&lt;/p&gt;
&lt;p&gt;The zoom behavior’s interaction has also improved. It now correctly handles concurrent wheeling and dragging, as well as concurrent touching and mousing. The zoom behavior now ignores wheel events at the limits of its scale extent, allowing you to scroll past a zoomable area. The &lt;em&gt;zoomstart&lt;/em&gt; and &lt;em&gt;zoomend&lt;/em&gt; events have been renamed &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt;. By default, zoom behaviors now ignore right-clicks intended for the context menu; use &lt;a href=&quot;https://github.com/d3/d3-zoom/blob/master/README.md#zoom_filter&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.filter&lt;/a&gt; to control which events are ignored. The zoom behavior also ignores emulated mouse events on iOS. The zoom behavior now consumes handled events, making it easier to combine with other interactive behaviors such as &lt;a href=&quot;https://github.com/d3/d3/blob/master/CHANGES.md#dragging-d3-drag&quot;&gt;dragging&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 22 Mar 2018 22:42:01 +0000</pubDate>
<dc:creator>tolien</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/1562726?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>d3/d3</og:title>
<og:url>https://github.com/d3/d3</og:url>
<og:description>d3 - Bring data to life with SVG, Canvas and HTML. :bar_chart::chart_with_upwards_trend::tada:</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/d3/d3/blob/master/CHANGES.md</dc:identifier>
</item>
<item>
<title>The health care toll today’s work culture exacts on employees</title>
<link>https://www.gsb.stanford.edu/insights/workplace-killing-people-nobody-cares</link>
<guid isPermaLink="true" >https://www.gsb.stanford.edu/insights/workplace-killing-people-nobody-cares</guid>
<description>&lt;div class=&quot;ds-1col file file-resource-image file-image-jpeg file-resource_image--full_width view-mode-full_width&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://www.gsb.stanford.edu/sites/gsb/files/styles/1630x_variable/public/resources/pfeffer-badworkplace-1630.jpg?itok=c_-qjLVz&quot; width=&quot;1630&quot; height=&quot;955&quot; alt=&quot;An office building at night showing people working late | iStock/Kilhan&quot;/&gt;In one survey, 7% of people said they'd been hospitalized because of workplace stress. | iStock/Kilhan&lt;/div&gt;
&lt;p&gt;Jeffrey Pfeffer has an ambitious aspiration for his latest book. “I want this to be the &lt;em&gt;Silent Spring&lt;/em&gt; of workplace health,” says &lt;a href=&quot;https://www.gsb.stanford.edu/faculty-research/faculty/jeffrey-pfeffer&quot; title=&quot;&quot;&gt;Pfeffer&lt;/a&gt;, a professor of organizational behavior at Stanford Graduate School of Business. “We are harming both company performance and individual well-being, and this needs to be the clarion call for us to stop. There is too much damage being done.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gsb.stanford.edu/faculty-research/books/dying-paycheck&quot; title=&quot;&quot;&gt;&lt;em&gt;Dying for a Paycheck&lt;/em&gt;&lt;/a&gt;, published by HarperBusiness and released on March 20, maps a range of ills in the modern workplace — from the disappearance of good health insurance to the psychological effects of long hours and work-family conflict — and how these are killing people.&lt;/p&gt;
&lt;p&gt;Pfeffer recently sat for an interview with Insights. The following has been edited for length and clarity.&lt;/p&gt;
&lt;h2&gt;I was struck by the story of Robert Chapman, CEO of Barry-Wehmiller, standing in front of 1,000 other CEOs and saying, “You are the cause of the health care crisis.”&lt;/h2&gt;
&lt;p&gt;It’s true. He takes three points and puts them together. The first point, which is consistent with data reported by the World Economic Forum and other sources, is that an enormous percentage of the health care cost burden in the developed world, and in particular in the U.S., comes from chronic disease — things like diabetes and cardiovascular and circulatory disease. You begin with that premise: A large fraction — some estimates are 75 percent — of the disease burden in the U.S. is from chronic diseases.&lt;/p&gt;
&lt;p&gt;Second, there is a tremendous amount of epidemiological literature that suggests that diabetes, cardiovascular disease and metabolic syndrome — and many health-relevant individual behaviors such as overeating and underexercising and drug and alcohol abuse — come from stress.&lt;/p&gt;
&lt;p&gt;And third, there is a large amount of data that suggests the biggest source of stress is the workplace. So that’s how Chapman can stand up and make the statement that CEOs are the cause of the health care crisis: You are the source of stress, stress causes chronic disease, and chronic disease is the biggest component of our ongoing and enormous health care costs.&lt;/p&gt;
&lt;h2&gt;Has this connection always been there, or has there been an evolution in workplace culture that got us to this point?&lt;/h2&gt;
&lt;p&gt;I think the connection as just described has always been there, because the physiology and etiology of disease have not really changed. But I would say that with all the evidence I’ve encountered — and it’s not perfect evidence — I’ve seen nothing inconsistent with the statement that the workplace has generally gotten worse.&lt;/p&gt;
&lt;p&gt;Job engagement, according to Gallup, is low. Distrust in management, according to the Edelman trust index, is high. Job satisfaction, according to the Conference Board, is low and has been in continual decline. The gig economy is growing, economic insecurity is growing, and wage growth overall has stagnated. Fewer people are covered by employer-sponsored health insurance than in the past, according to Kaiser Foundation surveys. And a strikingly high percentage of people, even those covered by insurance, say they forgo treatment and medications because of cost issues.&lt;/p&gt;
&lt;p&gt;I look out at the workplace and I see stress, layoffs, longer hours, work-family conflict, enormous amounts of economic insecurity. I see a workplace that has become shockingly inhumane.&lt;/p&gt;
&lt;h2&gt;You reference professor Nuria Chinchilla [of IESE Business School], who describes this as social pollution. What does that mean?&lt;/h2&gt;
&lt;p&gt;She has said that the real inconvenient truth is not just that there is environmental pollution, which there certainly is, but that there is also social pollution. The work hours that companies are demanding of their employees are causing the breakup of marriages, burdens on raising children, and general disruption to family life. And the family unit is an important source of social support.&lt;/p&gt;
&lt;p&gt;You can see this in stories from my book — the GE guy who’s on the road all the time and never sees his kids until he finally decides to quit. So she coined the term “social pollution,” and I think it’s a wonderful term.&lt;/p&gt;
&lt;p&gt;Companies should care about what they are doing to the social environment, not just the physical environment.&lt;/p&gt;
&lt;h2&gt;You draw that out in the book: a focus on corporate sustainability that ignores social damages.&lt;/h2&gt;
&lt;p&gt;No one would ever stand up — or at least not many people — and say, “We clear-cut this forest” or “We took the top of this mountain off for coal, and aren’t we proud.” But 3G Capital will proudly stand up and say, “We’ve laid off one-fifth of the workforce. Let’s pat ourselves on the back!”&lt;/p&gt;
&lt;p&gt;And we tolerate it. The point I make several times is that there are behaviors with respect to the physical environment that we have decided are impermissible. You are no longer permitted to burn whatever you want and throw it into the air, or dump whatever chemical you want into the water. Companies have accepted this and now parade their environmental bona fides.&lt;/p&gt;
&lt;p&gt;Meanwhile, these companies are engaging in all kinds of things that are harming the human beings who work for them. These are things they should report on, and these are things that we should stop tolerating.&lt;/p&gt;
&lt;h2&gt;Why is this normal?&lt;/h2&gt;
&lt;p&gt;I can speculate. Maybe it’s because we see the polar bears and the trees and the physical environment as not being agentic, in the sense of not being able to take action to defend themselves. And maybe we see human beings as being more agentic and responsible for their own well-being.&lt;/p&gt;
&lt;p&gt;When I talk about this book, I’ve had plenty of people say to me that if someone doesn’t like where he’s working, then he needs to go find another job. Which is easier said than done.&lt;/p&gt;
&lt;h2&gt;You talk about a number of barriers to moving, and one of those is individual psychology. What is that psychological dynamic?&lt;/h2&gt;
&lt;p&gt;There are many issues. One simple one that we should never overlook is sheer exhaustion. Finding a job is itself a job. If you are physically or psychologically drained by workplace stress, then you’re not going to have the capacity to go out and look for another job.&lt;/p&gt;
&lt;div class=&quot;ds-1col file file-resource-pull-quote file-application-resource file-resource_pull_quote--default view-mode-default callout-quote&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;I want to wake people up. This is a serious issue that has serious consequences for corporate performance and for people’s well-being.&lt;/p&gt;
&lt;p&gt;Jeffrey Pfeffer&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Companies also play to our egos. They say, “What’s wrong with you? Aren’t you good enough? We’re a special organization. We’re changing the world and only certain people are going to be up for the task.” Who wants to admit they’re not good enough?&lt;/p&gt;
&lt;p&gt;And we are influenced by what we see our peers doing. I’ve had people say to me: “I look around and all my colleagues are working themselves to death. What makes me think I’m so special that I don’t have to?” We have come to normalize the unacceptable. It’s hideous.&lt;/p&gt;
&lt;h2&gt;You make clear that yoga classes and nap rooms won’t fix this. What are some of ways this culture might change?&lt;/h2&gt;
&lt;p&gt;I don’t think it’s going to. What changed environmental pollution? People decided that we were not going to permit companies to create a world with polluted air and fouled water.&lt;/p&gt;
&lt;p&gt;I cannot see that happening with respect to the workplace in the current political environment and the push for deregulation. And, for reasons I’ve already alluded to, I think people don’t necessarily see, recognize, or appreciate what’s going on in the workplace. To the extent that they do, they think it’s inevitable — everyone has to be working long hours and be miserable.&lt;/p&gt;
&lt;p&gt;You know what might change this? I gave a talk on this to Stanford alumni and afterward a lawyer came up to me and said there are going to be lawsuits.&lt;/p&gt;
&lt;h2&gt;On what grounds?&lt;/h2&gt;
&lt;p&gt;In a way parallel to the lawsuits that were filed against tobacco companies. Some companies are killing their workers. People have been harmed. If I had to bet on how this will change, some company is going to get sued, some lawyer will win an enormous award, and that will open the floodgates.&lt;/p&gt;
&lt;h2&gt;If you meet with executives, can you make a competitive strategy argument to not treat employees this way?&lt;/h2&gt;
&lt;p&gt;Of course.&lt;/p&gt;
&lt;h2&gt;Is that effective?&lt;/h2&gt;
&lt;p&gt;Depends on whether they have any sense.&lt;/p&gt;
&lt;p&gt;There’s data on this — there shouldn’t need to be, but there is — that suggests that when people come to work sick, they’re not as productive. Companies have problems with presenteeism — people physically on the job but not really paying attention to what they are doing — with lost workdays from psychological stress and illness, with high health care costs. Seven percent of people in one survey were hospitalized — hospitalized! — because of workplace stress; 50% had missed time at work because of stress. People are quitting their jobs because of stress. The business costs are enormous.&lt;/p&gt;
&lt;h2&gt;Did you change your mind about anything when working on the book?&lt;/h2&gt;
&lt;p&gt;Yes, I changed my mind in the following way: It’s worse than I thought. And obviously these workforce things that cause ill health do not fall equally on the population. If you are less educated, you have more economic insecurity, the likelihood of receiving benefits is lower, your ability to control your work hours and your job are worse, and so health outcomes are worse. But I didn’t think it would be as bad for as many people.&lt;/p&gt;
&lt;p&gt;I didn’t think the workplace would be the fifth leading cause of death in the United States. And, by the way, when I talk to HR people, they say the numbers we have are certainly wrong: They are too low.&lt;/p&gt;
&lt;p&gt;I want to wake people up. This is a serious issue that has serious consequences for corporate performance and for people’s well-being. We should care about people’s psychological and physical health, not just about profits.&lt;/p&gt;
</description>
<pubDate>Thu, 22 Mar 2018 21:38:59 +0000</pubDate>
<dc:creator>fahd777</dc:creator>
<og:type>article</og:type>
<og:url>https://www.gsb.stanford.edu/insights/workplace-killing-people-nobody-cares</og:url>
<og:title>“The Workplace Is Killing People and Nobody Cares”</og:title>
<og:description>A new book examines the massive health care toll today’s work culture exacts on employees.</og:description>
<og:image>https://www.gsb.stanford.edu/sites/gsb/files/pfeffer-badworkplace-1630.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.gsb.stanford.edu/insights/workplace-killing-people-nobody-cares</dc:identifier>
</item>
<item>
<title>Video suggests huge problems with Uber’s driverless car program</title>
<link>https://arstechnica.com/cars/2018/03/video-suggests-huge-problems-with-ubers-driverless-car-program/</link>
<guid isPermaLink="true" >https://arstechnica.com/cars/2018/03/video-suggests-huge-problems-with-ubers-driverless-car-program/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/uber-cracked-windshield-800x450.jpg&quot;/&gt;&lt;aside id=&quot;social-left&quot;&gt;&lt;a title=&quot;210 posters participating, including story author.&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/cars/2018/03/video-suggests-huge-problems-with-ubers-driverless-car-program/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-before&quot;&gt;reader comments&lt;/span&gt; &lt;span class=&quot;comment-count-number&quot;&gt;373&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;&lt;span&gt;Share this story&lt;/span&gt;    &lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;There's something very wrong with Uber's driverless car program.&lt;/p&gt;
&lt;p&gt;On Wednesday night, &lt;a href=&quot;https://arstechnica.com/tech-policy/2018/03/video-uber-driver-looks-down-for-seconds-before-fatal-crash/&quot;&gt;police released footage&lt;/a&gt; of Sunday night's deadly car crash in Tempe, Arizona, where an Uber self-driving car crashed into 49-year-old Elaine Herzberg. The details it reveals are damning for Uber.&lt;/p&gt;
&lt;p&gt;&quot;The idea that she 'just stepped out' or 'came out in a flash' into the car path is clearly false,&quot; said Tara Goddard, an urban planning professor at Texas A&amp;amp;M University, after seeing the video. &quot;It seems like the system should have responded.&quot;&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;&lt;p&gt;The video shows that Herzberg crossed several lanes of traffic before reaching the lane where the Uber car was driving. You can debate whether a human driver should have been able to stop in time. But what's clear is that the vehicle's lidar and radar sensors—which don't depend on ambient light and had an unobstructed view—should have spotted her in time to stop.&lt;/p&gt;
&lt;p&gt;On top of that, the video shows that Uber's &quot;safety driver&quot; was looking down at her lap for nearly five seconds just before the crash. This suggests that Uber was not doing a good job of supervising its safety drivers to make sure they actually do their jobs. The combination of these failures—and Herzberg's decision to jaywalk in the first place—led to her death.&lt;/p&gt;
&lt;p&gt;But zooming out from the specifics of Herzberg's crash, the more fundamental point is this: conventional car crashes &lt;a href=&quot;https://www.nhtsa.gov/press-releases/usdot-releases-2016-fatal-traffic-crash-data&quot;&gt;killed 37,461 in the United States&lt;/a&gt; in 2016, which works out to 1.18 deaths per 100 million miles driven. Uber announced that it had &lt;a href=&quot;https://www.forbes.com/sites/bizcarson/2017/12/22/ubers-self-driving-cars-2-million-miles/#641448c9a4fe&quot;&gt;driven 2 million miles&lt;/a&gt; by December 2017 and is probably up to around 3 million miles today. If you do the math, that means that Uber's cars have killed people at roughly 25 times the rate of a typical human-driven car in the United States.&lt;/p&gt;
&lt;p&gt;Of course, with a sample size of one, this doesn't tell us very much, statistically speaking, about the safety of Uber's vehicles in the future. It's possible that Uber just got exceptionally unlucky. But it seems more likely that, even with the safety driver, Uber's self-driving cars are way more dangerous than a car driven by the average human driver.&lt;/p&gt;
&lt;p&gt;This shouldn't surprise us. Uber executives know they're behind Waymo in developing a self-driving car, and they've been pulling out all the stops to catch up. Uber inherited a culture of rule-breaking and corner-cutting from its founder and former CEO Travis Kalanick. That combination made a tragedy like this almost inevitable.&lt;/p&gt;
&lt;h2&gt;Uber probably wasn’t at fault, legally speaking, in recent crashes&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/GettyImages-659266124.jpg&quot; class=&quot;enlarge&quot; data-height=&quot;1998&quot; data-width=&quot;3000&quot; alt=&quot;An Uber self-driving car in San Francisco in 2017.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/GettyImages-659266124-640x426.jpg&quot; width=&quot;640&quot; height=&quot;426&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/GettyImages-659266124-1280x852.jpg 2x&quot; alt=&quot;An Uber self-driving car in San Francisco in 2017.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/GettyImages-659266124.jpg&quot; class=&quot;enlarge-link&quot; data-height=&quot;1998&quot; data-width=&quot;3000&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; An Uber self-driving car in San Francisco in 2017.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Justin Sullivan/Getty Images&lt;/div&gt;
&lt;p&gt;Consider these recent crashes involving self-driving Uber cars:&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;March 2017&lt;/strong&gt;, an Uber self-driving car was &lt;a href=&quot;https://www.usatoday.com/story/news/nation-now/2017/03/30/self-driving-uber-crash-police-report/99814322/&quot;&gt;struck on the left side&lt;/a&gt; as it went through an intersection in Tempe, Arizona. Uber was in the right-most lane on a six-lane road, approaching an intersection. The other two lanes in Uber's direction were backed up with traffic. The other car was traveling in the opposite direction and making a left turn. The driver of that other vehicle said that cars stopped in the other lanes blocked her view, preventing her from seeing the Uber vehicle.&lt;/p&gt;
&lt;p&gt;&quot;Right as I got to the middle lane about to cross the third, I saw a car flying through the intersection, but I couldn't brake fast enough to completely avoid the collision,&quot; the driver of the non-Uber car said in the police report. Police cited the non-Uber driver for failing to yield the right of way. The Uber driver was not cited.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;February 2018&lt;/strong&gt;, an &lt;a href=&quot;https://arstechnica.com/cars/2018/03/uber-self-driving-car-crashes-into-another-car-in-pittsburgh/&quot;&gt;Uber vehicle in Pittsburgh collided with another vehicle&lt;/a&gt; after the other car made a left turn in front of it. The Uber vehicle had its turn signal on, and the other driver thought this meant the Uber vehicle was going to turn at the intersection rather than go straight through. Uber says the car had its turn signal on because it was planning to change lanes.&lt;/p&gt;
&lt;p&gt;Police did not determine who was at fault in the accident. But a Pennsylvania attorney told Ars that &quot;generally speaking, before you take a left-hand turn, you're required to ensure there's not traffic coming from the other direction.&quot;&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;&lt;p&gt;In &lt;strong&gt;March 2018&lt;/strong&gt;, we had this Sunday's deadly crash in Tempe. Authorities have not reached any final conclusions about the case, but experts have told Ars there's good reason to believe Herzberg may have been at fault, legally speaking. She was jaywalking in the middle of the night outside of a marked crosswalk.&lt;/p&gt;
&lt;p&gt;&quot;I think that preliminary results coming out is that the automation of the car was not at fault because the pedestrian stepped into the road,&quot; said Mohamed Abdel-Aty, a civil engineer and traffic safety expert at the University of Central Florida.&lt;/p&gt;
&lt;p&gt;So in all three of these incidents, there's a strong argument that the other people involved—not the Uber car—were legally at fault for the crashes.&lt;/p&gt;
&lt;h2&gt;That doesn’t mean Uber’s cars are driving well&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/28660443_1755022221248540_4095178746673429706_n.jpg&quot; class=&quot;enlarge&quot; data-height=&quot;720&quot; data-width=&quot;960&quot; alt=&quot;Jessica McLemore took this picture of the damage to her car shortly after a crash with an Uber vehicle in Pittsburgh in February 2018.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/28660443_1755022221248540_4095178746673429706_n-640x480.jpg&quot; width=&quot;640&quot; height=&quot;480&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/28660443_1755022221248540_4095178746673429706_n.jpg 2x&quot; alt=&quot;Jessica McLemore took this picture of the damage to her car shortly after a crash with an Uber vehicle in Pittsburgh in February 2018.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/03/28660443_1755022221248540_4095178746673429706_n.jpg&quot; class=&quot;enlarge-link&quot; data-height=&quot;720&quot; data-width=&quot;960&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; Jessica McLemore took this picture of the damage to her car shortly after a crash with an Uber vehicle in Pittsburgh in February 2018.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Jessica McLemore&lt;/div&gt;
&lt;p&gt;&quot;One of my big concerns about this incident is that people are going to conflate an on-the-spot binary assignment of fault with a broader evaluation of the performance of the automated driving system, the safety driver, and Uber's testing program generally,&quot; said Bryant Walker Smith, a law professor at the University of South Carolina.&lt;/p&gt;
&lt;p&gt;&quot;Human drivers recognize that they are going to deal with all kinds of behaviors that are not exactly lawful,&quot; he added. &quot;An obligation imposed under most if not all state vehicle codes are that drivers shall take due care to avoid a collision. You never get to say, well of course I hit them, they were in the road in my way.&quot;&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Indeed, it's entirely possible to imagine a self-driving car system that always follows the letter of the law—and hence never does anything that would lead to legal finding of fault—but is nevertheless way more dangerous than the average human driver. Indeed, such a system might behave a lot like Uber's cars do today.&lt;/p&gt;
&lt;p&gt;For example, in that March 2017 collision in Tempe, the Uber driver reported that he was traveling 38 miles per hour (61 km/h) at the time of the crash—just shy of the 40-mile-per-hour speed limit.&lt;/p&gt;
&lt;p&gt;&quot;As I entered the intersection, I saw the vehicle turning left,&quot; he wrote. &quot;There was no time to react as there was a blind spot created by the line of southbound traffic.&quot;&lt;/p&gt;
&lt;p&gt;The Uber car may have had a legal right to zip past two lanes of stopped cars at 38 miles per hour (61 km/h). But a prudent driver could have anticipated the possibility of a car in the blind spot—or, for that matter, a pedestrian trying to dart between the stopped cars in the next lane—and slowed down to 30 or even 20 miles per hour.&lt;/p&gt;
&lt;p&gt;So, too, in Pittsburgh. There was no police report, so we don't know how fast the Uber car was traveling or if it tried to stop. But a prudent driver approaching an intersection where an oncoming car has a left turn signal on will slow down a bit and be prepared to stop—just in case the other car decides to turn illegally.&lt;/p&gt;
&lt;p&gt;As for this month's crash in Tempe, there seems to be little doubt that there was a serious failure of the car's technology. It may or may not have been feasible for the car to stop based on camera data. But lidar works just as well at night as it does in the daytime. Even if Uber's software didn't know Herzberg and her bicycle was a person, a car should always slow down if it sees an object that big moving into its lane.&lt;/p&gt;
&lt;p&gt;Moreover, if the car really couldn't have stopped in time to avoid killing Herzberg, that seems like a sign that the car was driving too quickly. It's not like she jumped out from behind some bushes.&lt;/p&gt;
</description>
<pubDate>Thu, 22 Mar 2018 20:49:18 +0000</pubDate>
<dc:creator>yohui</dc:creator>
<og:url>https://arstechnica.com/cars/2018/03/video-suggests-huge-problems-with-ubers-driverless-car-program/</og:url>
<og:title>Video suggests huge problems with Uber’s driverless car program</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2018/03/uber-cracked-windshield-760x380.jpg</og:image>
<og:description>Video of the fatal driverless car crash in Tempe is damning for Uber.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/cars/2018/03/video-suggests-huge-problems-with-ubers-driverless-car-program/</dc:identifier>
</item>
<item>
<title>Facebook tracks all calls and messages on Android</title>
<link>https://twitter.com/dylanmckaynz/status/976368845635035138</link>
<guid isPermaLink="true" >https://twitter.com/dylanmckaynz/status/976368845635035138</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/dylanmckaynz/status/976368845635035138&quot;&gt;https://twitter.com/dylanmckaynz/status/976368845635035138&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16652387&quot;&gt;https://news.ycombinator.com/item?id=16652387&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 251&lt;/p&gt;&lt;p&gt;# Comments: 32&lt;/p&gt;</description>
<pubDate>Thu, 22 Mar 2018 20:24:28 +0000</pubDate>
<dc:creator>m_ke</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/dylanmckaynz/status/976368845635035138</dc:identifier>
</item>
</channel>
</rss>