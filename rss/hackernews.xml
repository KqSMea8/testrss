<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>iOS 11&amp;#039;s Misleading &quot;Off-Ish&quot; Setting for Radios Is Bad for User Security</title>
<link>https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</guid>
<description>&lt;p&gt;Turning off your &lt;a href=&quot;https://www.wired.com/story/turn-off-bluetooth-security/&quot; target=&quot;_blank&quot;&gt;Bluetooth&lt;/a&gt; and &lt;a href=&quot;https://nakedsecurity.sophos.com/2012/10/02/what-is-your-phone-saying-behind-your-back/&quot; target=&quot;_blank&quot;&gt;Wi-Fi&lt;/a&gt; radios when you’re not using them is good security practice (not to mention good for your battery usage). When you consider Bluetooth’s known &lt;a href=&quot;http://go.armis.com/hubfs/BlueBorne%20Technical%20White%20Paper.pdf&quot; target=&quot;_blank&quot;&gt;vulnerabilities&lt;/a&gt;, it’s especially important to make sure your Bluetooth and Wi-Fi settings are doing what you want them to. The iPhone’s newest operating system, however, makes it harder for users to control these settings.&lt;/p&gt;
&lt;p&gt;On an iPhone, users might instinctively swipe up to open Control Center and toggle Wi-Fi and Bluetooth off from the quick settings. Each icon switches from blue to gray, leading a user to reasonably believe they have been turned off—in other words, fully disabled. In iOS 10, that was true. However, in iOS 11, &lt;a href=&quot;https://support.apple.com/en-us/HT208086&quot; target=&quot;_blank&quot;&gt;the same setting change no longer actually turns Wi-Fi or Bluetooth  “off.”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instead, what actually happens in iOS 11 when you toggle your quick settings to “off” is that the phone will disconnect from Wi-Fi networks and some devices, but remain on for Apple services. Location Services is still enabled, Apple devices (like Apple Watch and Pencil) stay connected, and services such as Handoff and Instant Hotspot stay on. Apple’s UI fails to even attempt to communicate these exceptions to its users.&lt;/p&gt;
&lt;p&gt;It gets even worse. When you toggle these settings in the Control Center to what is best described as&quot;off-ish,&quot; they don’t stay that way. The Wi-Fi will turn back full-on if you drive or walk to a new location. And both Wi-Fi and Bluetooth will turn back on at 5:00 AM. This is not clearly explained to users, nor left to them to choose, which makes security-aware users vulnerable as well.&lt;/p&gt;
&lt;p&gt;The only way to turn &lt;em&gt;off&lt;/em&gt; the Wi-Fi and Bluetooth radios is to enable Airplane Mode or navigate into Settings and go to the Wi-Fi and Bluetooth sections.&lt;/p&gt;
&lt;p&gt;When a phone is designed to behave in a way other than what the UI suggests, it results in both security and privacy problems. A user has no visual or textual clues to understand the device's behavior, which can result in a loss of trust in operating system designers to faithfully communicate what’s going on. Since users rely on the operating system as the bedrock for most security and privacy decisions, no matter what app or connected device they may be using, this trust is fundamental.&lt;/p&gt;
&lt;p&gt;In an attempt to keep you connected to Apple devices and services, iOS 11 compromises users' security. Such a loophole in connectivity can potentially leave users open to new attacks. Closing this loophole would not be a hard fix for Apple to make. At a bare minimum, Apple should make the Control Center toggles last until the user flips them back on, rather than overriding the user’s choice early the next morning. It's simply a question of communicating better to users, and giving them control and clarity when they want their settings off—not “off-ish.”&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 00:53:53 +0000</pubDate>
<dc:creator>panarky</dc:creator>
<og:type>article</og:type>
<og:title>iOS 11’s Misleading “Off-ish” Setting for Bluetooth and Wi-Fi is Bad for User Security</og:title>
<og:url>https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</og:url>
<og:description>Turning off your Bluetooth and Wi-Fi radios when you’re not using them is good security practice (not to mention good for your battery usage). When you consider Bluetooth’s known vulnerabilities, it’s especially important to make sure your Bluetooth and Wi-Fi settings are doing what you want them...</og:description>
<og:image>https://www.eff.org/files/issues/icon-security-1.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</dc:identifier>
</item>
<item>
<title>Sublime Text 3 now has font ligature support</title>
<link>https://forum.sublimetext.com/t/dev-build-3145/32340</link>
<guid isPermaLink="true" >https://forum.sublimetext.com/t/dev-build-3145/32340</guid>
<description>&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Dev Build 3145 is out now at &lt;a href=&quot;https://www.sublimetext.com/3dev&quot;&gt;https://www.sublimetext.com/3dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're on Windows, there are two additional undocumented options for font_options: dwrite_cleartype_classic, and dwrite_cleartype_natural. These correspond to different DirectWrite rendering options, and depending on the font used, they may make the output more or less pleasing. Let me know if you find them useful, as if no one uses them I'll remove them in a future build.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;The Goto References functionality is controlled by the showInIndexedReferenceList preference, see &quot;Default/Indexed Reference List.tmPreferences&quot; for the default value&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Did the default font options change? I'm seeing weird rendering and I enabled nothing new:&lt;/p&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a data-download-href=&quot;//forum.sublimetext.com/uploads/default/2b3cd83957cb17f525abd70c67619148427c83d0&quot; href=&quot;https://forum.sublimetext.com/uploads/default/original/3X/2/b/2b3cd83957cb17f525abd70c67619148427c83d0.png&quot; class=&quot;lightbox&quot; title=&quot;2017-10-05.png&quot;&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/optimized/3X/2/b/2b3cd83957cb17f525abd70c67619148427c83d0_1_690x274.png&quot; width=&quot;690&quot; height=&quot;274&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;p&gt;Not only that, I have a big cursor and tiny text. It's real weird. I'm on Windows 10.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Font rendering has been totally redone, it looks like you're running in High DPI mode? I'll take a look into it&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Ah, yes, I am High DPI.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Strange problem with Xubuntu 17.10.&lt;/p&gt;
&lt;p&gt;I have some text files where sections of text are separated by lines of 100 dashes or hyphens. In build 3145 I'm only seeing the first 33 displayed. The remaining 67 are hidden. Opening the files in build 3143 displays the separating lines correctly.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Microscopic text on Windows 10 High DPI.&lt;/p&gt;
&lt;p&gt;I'm aware of settings options to switch between 'gdi' and 'directdraw' rendering, but changing those options does do nothing. Had to revert to stable build to continue my work.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;It looks like &lt;code&gt;no_round&lt;/code&gt; are always turned on on my machine.&lt;/p&gt;
&lt;p&gt;macOS 10.13.1 beta&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;no_round is not currently supported, so it should act as if it's always off - I meant to remove it from the comment in Preferences.sublime-settings, but missed doing so.&lt;/p&gt;
&lt;p&gt;When you say it looks like it's always turned on, is that because you're noticing a visible difference compared to the previous version, or just that it doesn't do anything now?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;mention&quot; href=&quot;https://forum.sublimetext.com/u/jps&quot;&gt;@jps&lt;/a&gt; The letter spacing is too wide with my font. I like 3144 better &lt;img src=&quot;https://forum.sublimetext.com/images/emoji/emoji_one/smiley.png?v=3&quot; title=&quot;:smiley:&quot; class=&quot;emoji&quot; alt=&quot;:smiley:&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a data-download-href=&quot;//forum.sublimetext.com/uploads/default/d3735ae012400e14322673cecca8d02a267d5a33&quot; href=&quot;https://forum.sublimetext.com/uploads/default/original/3X/d/3/d3735ae012400e14322673cecca8d02a267d5a33.png&quot; class=&quot;lightbox&quot; title=&quot;Untitled.png&quot;&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/optimized/3X/d/3/d3735ae012400e14322673cecca8d02a267d5a33_1_690x462.png&quot; width=&quot;690&quot; height=&quot;462&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;p&gt;The indent guides are not showing up as well.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I am on a Mac with Bootcamp.&lt;br/&gt;After updating to 3145, the font is very very small now.&lt;br/&gt;Is there a way to adjust?&lt;br/&gt;Tried Font under Preference and it does not work.&lt;br/&gt;Thanks&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Another issue:&lt;/p&gt;
&lt;p&gt;I use SF Mono font. All the colons become angle brackets. When I select it, it turns back to colons.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/:&lt;/code&gt; becomes &lt;code&gt;/&amp;gt;&lt;/code&gt;&lt;br/&gt;select &lt;code&gt;/&lt;/code&gt; onward: still showing &lt;code&gt;/&amp;gt;&lt;/code&gt;&lt;br/&gt;select &lt;code&gt;:&lt;/code&gt; onward: becomes &lt;code&gt;/:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If I open preferences window (press &lt;code&gt;cmd+,&lt;/code&gt;) it turns back to colons.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgur.com/a/HG8FW&quot; class=&quot;onebox&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://imgur.com/a/HG8FW&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a data-download-href=&quot;//forum.sublimetext.com/uploads/default/e2c5b6733c9d75861bd82ff0c1499094c8825be7&quot; href=&quot;https://forum.sublimetext.com/uploads/default/original/3X/e/2/e2c5b6733c9d75861bd82ff0c1499094c8825be7.png&quot; class=&quot;lightbox&quot; title=&quot;image.png&quot;&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/optimized/3X/e/2/e2c5b6733c9d75861bd82ff0c1499094c8825be7_1_443x500.png&quot; width=&quot;443&quot; height=&quot;500&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;br/&gt;On Windows, change back to use gdi fixes small font problem. But the font in tabs is still small. I have 4k screen. 3144 was fine.&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;mention&quot; href=&quot;https://forum.sublimetext.com/u/jps&quot;&gt;@jps&lt;/a&gt; I really like the new reference index, thank you for adding it. This may have been asked before, so forgive me: any chance the indexes could include the scope name at say the start point of the region of each entry in the index? I think that would be helpful when using the API methods. Being able to tell what language each reference points to, as well as whether it is a method or not would be very nice. Of course, I have no idea what adding this would do to the size of the index, or the time it takes to index. In any case, this is a great new feature, so thanks again!&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I've just upgraded, and I'm seeing this on all triple-quoted strings in my python modules. Docstrings nested under functions are not affected at all. It appears to just be a text rendering issue, the files look right (&quot;&quot;&quot; not &quot;+$) when opened otherwise.&lt;br/&gt;(So... no file content was altered. That's good)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/original/3X/b/3/b3eb0e1d8a7c17d4fcf5942253d607d8c1423dcc.png&quot; width=&quot;565&quot; height=&quot;53&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I am not able to see indent guides being drawn.&lt;/p&gt;
&lt;p&gt;MacOS Sierra&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;me too, win10 with UHD screen&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/original/3X/4/0/4054ac3c806c1461c11d9b23764234be5bccf9ee.png&quot; width=&quot;397&quot; height=&quot;491&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/original/3X/8/6/8633850ff9348a80c2e2d34c83d33d3c1961479a.png&quot; width=&quot;401&quot; height=&quot;230&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Very cool build, but yeah, there seems to be a problem with some of the ligatures as well. I don't usually use FiraCode, but I wanted to check out how the ligatures worked. Things like &lt;code&gt;!=&lt;/code&gt; got translated to &lt;code&gt;![&lt;/code&gt;. And when you select just the &lt;code&gt;[&lt;/code&gt; in &lt;code&gt;![&lt;/code&gt;, it turns back into &lt;code&gt;!=&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;3146 is out now, addressing the directwrite+high dpi issue, long sequences of punctuation appearing truncated, and indent guides not showing on macOS.&lt;/p&gt;
&lt;p&gt;The issue with punctuation appearing incorrectly has not been tracked down yet.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;thanks for the quick fix!&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 06 Oct 2017 00:12:11 +0000</pubDate>
<dc:creator>indentit</dc:creator>
<og:image>http://forum.sublimetext.com/uploads/st-apple-touch-icon.png</og:image>
<og:url>http://forum.sublimetext.com/t/dev-build-3145/32340?_escaped_fragment_=</og:url>
<og:title>Dev Build 3145</og:title>
<og:description>Dev Build 3145 is out now at https://www.sublimetext.com/3dev If you're on Windows, there are two additional undocumented options for font_options: dwrite_cleartype_classic, and dwrite_cleartype_natural. These correspond to different DirectWrite rendering options, and depending on the font used, they may make the output more or less pleasing. Let me know if you find them useful, as if no one uses them I'll remove them in a future build.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://forum.sublimetext.com/t/dev-build-3145/32340?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Japanese Vending Machines at Night Juxtaposed with a Wintry Hokkaido Landscape</title>
<link>http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</link>
<guid isPermaLink="true" >http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</guid>
<description>&lt;div class=&quot;post-content&quot; readability=&quot;39.741435035553&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-nigh-juxtaposed-with-a-wintry-hokkaido-landscape/#more-42384&quot;&gt;&lt;img class=&quot;alignnone wp-image-42386 size-full&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4.jpg&quot; alt=&quot;&quot; width=&quot;1047&quot; height=&quot;720&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4.jpg 1047w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-200x138.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-300x206.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-768x528.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-633x435.jpg 633w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-676x465.jpg 676w&quot; sizes=&quot;(max-width: 1047px) 100vw, 1047px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“In Hokkaido where I live, winters are harsh and snows are deep,” says photographer &lt;a href=&quot;https://www.sapporo-creation.com/&quot;&gt;Eiji Ohashi&lt;/a&gt;. “Every day can become rather inconvenient” due to the constant snowfall. But heavy snows also bring wintry wonderlands and the discovery of small pleasures.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42385&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3.jpg&quot; alt=&quot;&quot; width=&quot;1079&quot; height=&quot;719&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3.jpg 1079w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-200x133.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-300x200.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-768x512.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-653x435.jpg 653w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-676x450.jpg 676w&quot; sizes=&quot;(max-width: 1079px) 100vw, 1079px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;One snowy night. Ohashi was walking outside when he found himself transfixed by the form of snow that had piled up on top of a vending machine. Japan has the highest penetration of vending machines per person (there’s roughly 1 vending machine for every 23 people in Japan) and the fact that the majority of them are outdoors is a testament to the country’s safety and respect for property. Very rarely are these machines ever vandalized.&lt;/p&gt;
&lt;p&gt;Outdoor vending machines, especially the ones in remote locations, buried in snowfall, became not only a &lt;a href=&quot;https://www.japantimes.co.jp/culture/2017/07/22/books/book-reviews/roadside-lights-capturing-japan-lonely-vending-machines/#.WdUcO1tSyH_&quot;&gt;photographic subject for Ohashi&lt;/a&gt; but also a welcome oasis from the harsh winters of Hokkaido. The deep snows can become inconvenient “but even then I can get warm drinks from the vending machines. When I hold a warm bottle that I buy from the vending machine, my feelings relax.”&lt;/p&gt;
&lt;p&gt;A collection of these photographs by Ohashi are &lt;a href=&quot;https://www.shashasha.co/en/book/roadside-lights&quot;&gt;available as a photobook&lt;/a&gt;. You can also see more of his work &lt;a href=&quot;https://www.sapporo-creation.com/&quot;&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;center/&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42397&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2.jpg&quot; alt=&quot;&quot; width=&quot;1089&quot; height=&quot;711&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2.jpg 1089w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-200x131.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-300x196.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-768x501.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-666x435.jpg 666w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-676x441.jpg 676w&quot; sizes=&quot;(max-width: 1089px) 100vw, 1089px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42387&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5.jpg&quot; alt=&quot;&quot; width=&quot;938&quot; height=&quot;634&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5.jpg 938w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-200x135.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-300x203.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-768x519.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-644x435.jpg 644w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-676x457.jpg 676w&quot; sizes=&quot;(max-width: 938px) 100vw, 938px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42388&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6.jpg&quot; alt=&quot;&quot; width=&quot;925&quot; height=&quot;620&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6.jpg 925w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-200x134.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-300x201.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-768x515.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-649x435.jpg 649w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-676x453.jpg 676w&quot; sizes=&quot;(max-width: 925px) 100vw, 925px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42389&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11.jpg&quot; alt=&quot;&quot; width=&quot;1070&quot; height=&quot;716&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11.jpg 1070w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-200x134.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-300x201.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-768x514.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-650x435.jpg 650w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-676x452.jpg 676w&quot; sizes=&quot;(max-width: 1070px) 100vw, 1070px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42390&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12.jpg&quot; alt=&quot;&quot; width=&quot;789&quot; height=&quot;528&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12.jpg 789w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-200x134.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-300x201.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-768x514.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-650x435.jpg 650w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-676x452.jpg 676w&quot; sizes=&quot;(max-width: 789px) 100vw, 789px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42391&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13.jpg&quot; alt=&quot;&quot; width=&quot;1057&quot; height=&quot;722&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13.jpg 1057w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-200x137.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-300x205.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-768x525.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-637x435.jpg 637w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-676x462.jpg 676w&quot; sizes=&quot;(max-width: 1057px) 100vw, 1057px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42392&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14.jpg&quot; alt=&quot;&quot; width=&quot;1099&quot; height=&quot;714&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14.jpg 1099w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-200x130.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-300x195.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-768x499.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-670x435.jpg 670w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-676x439.jpg 676w&quot; sizes=&quot;(max-width: 1099px) 100vw, 1099px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42393&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15.jpg&quot; alt=&quot;&quot; width=&quot;1071&quot; height=&quot;693&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15.jpg 1071w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-200x129.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-300x194.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-768x497.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-670x435.jpg 670w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-676x437.jpg 676w&quot; sizes=&quot;(max-width: 1071px) 100vw, 1071px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42394&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16.jpg&quot; alt=&quot;&quot; width=&quot;1084&quot; height=&quot;714&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16.jpg 1084w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-200x132.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-300x198.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-768x506.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-660x435.jpg 660w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-676x445.jpg 676w&quot; sizes=&quot;(max-width: 1084px) 100vw, 1084px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42396&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1.jpg&quot; alt=&quot;&quot; width=&quot;1103&quot; height=&quot;722&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1.jpg 1103w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-200x131.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-300x196.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-768x503.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-665x435.jpg 665w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-676x442.jpg 676w&quot; sizes=&quot;(max-width: 1103px) 100vw, 1103px&quot;/&gt;&lt;/p&gt;
&lt;center/&gt;

&lt;/div&gt;




</description>
<pubDate>Thu, 05 Oct 2017 19:41:27 +0000</pubDate>
<dc:creator>DamonHD</dc:creator>
<og:title>Japanese Vending Machines at Night Juxtaposed with a Wintry Hokkaido Landscape</og:title>
<og:url>http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</og:url>
<og:type>article</og:type>
<og:description>“In Hokkaido where I live, winters are harsh and snows are deep,” says photographer Eiji Ohashi. “Every day can become rather inconvenient” due to the constant snowfall. But heavy snows also bring wintry wonderlands and the discovery of small pleasures. One snowy night. Ohashi was walking</og:description>
<og:image>http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-top.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</dc:identifier>
</item>
<item>
<title>I/O Access Methods for Linux</title>
<link>http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</link>
<guid isPermaLink="true" >http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</guid>
<description>&lt;p&gt;When most server application developers think of I/O, they consider network I/O since most resources these days are accessed over the network: databases, object storage, and other microservices. The developer of a database, however, also has to consider file I/O. This article describes the available choices and their tradeoffs and why Scylla chose asynchronous direct I/O (AIO/DIO) as its access method.&lt;/p&gt;

&lt;h3&gt;Choices for accessing files&lt;/h3&gt;
&lt;p&gt;In general, there are four choices for accessing files on a Linux server: read/write, mmap, Direct I/O (DIO) read/write, and asynchronous direct I/O (AIO/DIO).&lt;/p&gt;
&lt;h3&gt;Traditional read/write&lt;/h3&gt;
&lt;p&gt;The traditional method, available since the beginning of time, is to use the &lt;em&gt;read(2)&lt;/em&gt; and &lt;em&gt;write(2)&lt;/em&gt; system calls. In a modern implementation, the read system call (or one of its many variants – &lt;em&gt;pread&lt;/em&gt;, &lt;em&gt;readv&lt;/em&gt;, &lt;em&gt;preadv&lt;/em&gt;, etc) asks the kernel to read a section of a file and copy the data into the calling process address space. If all of the requested data is in the page cache, the kernel will copy it and return immediately; otherwise, it will arrange for the disk to read the requested data into the page cache, block the calling thread, and when the data is available, it will resume the thread and copy the data. A write, on the other hand, will usually&lt;sup&gt;&lt;a href=&quot;http://www.scylladb.com/2017/10/05/io-access-methods-scylla/#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; just copy the data into the page cache; the kernel will write-back the page cache to disk some time afterward.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.scylladb.com/wp-content/uploads/Chart_1@1x.svg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-7444&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_1@1x.svg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;Mmap&lt;/h3&gt;
&lt;p&gt;An alternative and more modern method is to memory-map the file into the application address space using the &lt;em&gt;mmap(2)&lt;/em&gt; system call. This causes a section of the address space to refer directly to the page cache pages that contain the file’s data. After this preparatory step, the application can access file data using the processor’s memory read and memory write instructions. If the requested data happens to be in cache, the kernel is completely bypassed and the read (or write) is performed at memory speed. If a cache miss occurs, then a page-fault happens and the kernel puts the active thread to sleep while it goes off to read the data for that page. When the data is finally available, the memory-management unit is programmed so the newly read data is accessible to the thread which is then woken.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.scylladb.com/wp-content/uploads/Chart_2@1x.svg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-7443&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_2@1x.svg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Direct I/O (DIO)&lt;/h3&gt;
&lt;p&gt;Both traditional read/write and mmap involve the kernel page cache and defer scheduling of I/O to the kernel. When the application wishes to schedule I/O itself (for reasons that we will explain later), it can use direct I/O. This involves opening the file with the &lt;em&gt;O_DIRECT&lt;/em&gt; flag; further activity will use the normal read and write family of system calls, but their behavior is now altered: instead of accessing the cache, the disk is accessed directly which means that the calling thread will be put to sleep unconditionally. Furthermore, the disk controller will copy the data directly to userspace, bypassing the kernel.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-7302&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_3.png&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1206&quot; srcset=&quot;http://www.scylladb.com/wp-content/uploads/Chart_3.png 1600w, http://www.scylladb.com/wp-content/uploads/Chart_3-300x226.png 300w, http://www.scylladb.com/wp-content/uploads/Chart_3-768x579.png 768w, http://www.scylladb.com/wp-content/uploads/Chart_3-1024x772.png 1024w&quot; sizes=&quot;(max-width: 1600px) 100vw, 1600px&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Asynchronous direct I/O (AIO/DIO)&lt;/h3&gt;
&lt;p&gt;A refinement of direct I/O, asynchronous direct I/O behaves similarly but prevents the calling thread from blocking. Instead, the application thread schedules direct I/O operations using the &lt;em&gt;io_submit(2)&lt;/em&gt; system call, but the thread is not blocked; the I/O operation runs in parallel with normal thread execution. A separate system call, &lt;em&gt;io_getevents(2)&lt;/em&gt;, is used to wait for and collect the results of completed I/O operations. Like DIO, the kernel’s page cache is bypassed, and the disk controller is responsible for copying the data directly to userspace.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-7303&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_4.png&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;806&quot; srcset=&quot;http://www.scylladb.com/wp-content/uploads/Chart_4.png 1600w, http://www.scylladb.com/wp-content/uploads/Chart_4-300x151.png 300w, http://www.scylladb.com/wp-content/uploads/Chart_4-768x387.png 768w, http://www.scylladb.com/wp-content/uploads/Chart_4-1024x516.png 1024w&quot; sizes=&quot;(max-width: 1600px) 100vw, 1600px&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Understanding the tradeoffs&lt;/h3&gt;
&lt;p&gt;The different access methods share some characteristics and differ in some others. Table 1 summarizes these characteristics, which are elaborated on below.&lt;/p&gt;
&lt;table width=&quot;606&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Characteristic&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;R/W&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;mmap&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DIO&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;AIO/DIO&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Cache control&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Copying&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;yes&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;no&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;no&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;no&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;MMU activity&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;high&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;none&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;none&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;I/O scheduling&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;mixed&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Thread scheduling&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;I/O alignment&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;automatic&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;automatic&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;manual&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;manual&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Application complexity&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;moderate&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;high&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Cache control&lt;/h3&gt;
&lt;p&gt;For both read/write and mmap, caching is the responsibility of the kernel. The majority of the system’s memory is given over to the page cache. The kernel decides which pages should be evicted when memory runs low; when pages need to be written back to disk; and controls read-ahead. The application can provide some guidance to the kernel using the &lt;em&gt;madvise(2)&lt;/em&gt; and &lt;em&gt;fadvise(2)&lt;/em&gt; system calls.&lt;/p&gt;
&lt;p&gt;The great advantage of letting the kernel control caching is that great effort has been invested by the kernel developers over many decades into tuning the algorithms used by the cache. Those algorithms are used by thousands of different applications and are generally effective. The disadvantage, however, is that these algorithms are general-purpose and not tuned to the application. The kernel must guess how the application will behave next, and even if the application knows differently, it usually has no way to help the kernel guess correctly. This results in the wrong pages being evicted, I/O scheduled in the wrong order, or read-ahead scheduled for data that will not be consumed in the near future.&lt;/p&gt;
&lt;h3&gt;Copying and MMU activity&lt;/h3&gt;
&lt;p&gt;One of the benefits of the mmap method is that if the data is in cache then the kernel is bypassed completely. The kernel does not need to copy data from the kernel to userspace and back, so fewer processor cycles are spent on that activity. This benefits loads that are mostly in cache (for example, if the ratio of storage size to RAM size is close to 1:1).&lt;/p&gt;
&lt;p&gt;The downside of mmap, however, occurs when data is not in the cache. This usually happens when the ratio of storage size to RAM size is significantly higher than 1:1. Every page that is brought into cache causes another page to be evicted. Those pages have to be inserted into and removed from the page tables; the kernel has to scan the page tables to isolate inactive pages, making them candidates for eviction, and so forth. In addition, mmap requires memory for the page tables. On x86 processors, this requires 0.2% of the size of the mapped files. This seems low, but if the application has a 100:1 ratio of storage to memory, the result is that 20% of memory (0.2% * 100) is devoted to page tables.&lt;/p&gt;
&lt;h3&gt;I/O scheduling&lt;/h3&gt;
&lt;p&gt;One of the problems with letting the kernel control caching (with the mmap and read/write access methods) is that the application loses control of I/O scheduling. The kernel picks whichever block of data it deems appropriate and schedules it for write or read. This can result in the following problems:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A write storm: when the kernel schedules large amounts of writes, the disk will be busy for a long while and impact read latency&lt;/li&gt;
&lt;li&gt;The kernel cannot distinguish between “important” and “unimportant” I/O. I/O belonging to background tasks can overwhelm foreground tasks which will impact their latency&lt;sup&gt;&lt;a href=&quot;http://www.scylladb.com/2017/10/05/io-access-methods-scylla/#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;By bypassing the kernel page cache, the application takes the burden of scheduling I/O on itself. This doesn’t mean that the problems are solved; but it does mean that the problems can be solved, with sufficient attention and effort.&lt;/p&gt;
&lt;p&gt;When using Direct I/O, each thread controls when to issue I/O However, the kernel controls when the thread runs so responsibility for issuing I/O is shared between the kernel and the application. With AIO/DIO, the application is in full control of when I/O is issued.&lt;/p&gt;
&lt;h3&gt;Thread scheduling&lt;/h3&gt;
&lt;p&gt;An I/O intensive application using mmap or read/write cannot guess what its cache hit rate will be. Therefore it has to run a large number of threads (significantly larger than the core count of the machine it is running on). Using too few threads, they may all be waiting for the disk leaving the processor underutilized. Since each thread usually has at most one disk I/O outstanding, the number of running threads must be around the concurrency of the storage subsystem multiplied by some small factor in order to keep the disk fully occupied. However, if the cache hit rate is sufficiently high, then these large number of threads will contend with each other for the limited number of cores.&lt;/p&gt;
&lt;p&gt;When using direct I/O, this problem is somewhat mitigated as the application knows exactly when a thread is blocked on I/O and when it can run, so the application can adjust the number of running threads according to runtime conditions.&lt;/p&gt;
&lt;p&gt;With AIO/DIO, the application has full control over both running threads and waiting I/O (the two are completely divorced); so it can easily adjust to in-memory or disk-bound conditions or anything in between.&lt;/p&gt;
&lt;h3&gt;I/O alignment&lt;/h3&gt;
&lt;p&gt;Storage devices have a block size; all I/O must be performed in multiples of this block size which is typically 512 or 4096 bytes. Using read/write or mmap, the kernel performs the alignment automatically; a small read or write is expanded to the correct block boundary by the kernel before it is issued.&lt;/p&gt;
&lt;p&gt;With DIO, it is up to the application for perform block alignment. This incurs some complexity but also provides an advantage: the kernel will usually over-align to a 4096 byte boundary even when a 512-byte boundary suffices but a user application using DIO can issue 512-byte aligned reads which results in saving bandwidth on small items.&lt;/p&gt;
&lt;h3&gt;Application complexity&lt;/h3&gt;
&lt;p&gt;While the previous discussions favored AIO/DIO for I/O intensive applications, that method comes with a significant cost: complexity. Placing the responsibility of cache management on the application means it can make better choices than the kernel and make those choices with less overhead. However, those algorithms need to be written and tested. Using asynchronous I/O requires that the application is written using callbacks, coroutines, or a similar method, and often reduces the reusability of many available libraries.&lt;/p&gt;
&lt;h3&gt;Scylla and AIO/DIO&lt;/h3&gt;
&lt;p&gt;With Scylla, we have chosen the highest performing option, AIO/DIO. To isolate some of the complexity involved, we wrote &lt;a href=&quot;http://www.seastar-project.org/&quot;&gt;Seastar&lt;/a&gt;, a high-performance framework for I/O intensive applications. Seastar abstracts away the details of performing AIO and provides common APIs for network, disk, and multi-core communications. It also provides both callback and coroutine styles of state management suitable for different use cases.&lt;/p&gt;
&lt;p&gt;Different areas of Scylla highlight different ways that I/O can be used:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Compaction uses application-level read-ahead and write-behind to ensure high throughout but bypass application level caches due to expected low hit rates (and to avoid flooding the cache with cold data)&lt;/li&gt;
&lt;li&gt;Queries (reads) use application-controlled read-ahead and application-level caching. Application-controlled read-ahead prevents read-ahead over-runs since we know the boundaries of the data on disk ahead of time. Also application-level caching allows us to cache not only the data read from disk but also the work that went into merging data from multiple files into a single cache item&lt;/li&gt;
&lt;li&gt;Small reads are aligned to a 512-byte boundary to reduce bus data transfers and latency&lt;/li&gt;
&lt;li&gt;The Seastar I/O scheduler allows us to dynamically control I/O rates for compaction and queries (as well as other operation classes) to satisfy user service-level agreements (SLAs)&lt;/li&gt;
&lt;li&gt;A separate I/O scheduling class ensures that commitlog writes get the required bandwidth and are not dominated by reads or dominate reads&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;AIO/DIO is a good starting point for directly driving NVMe drives from the application to further bypass the kernel. This may become a future Seastar feature.&lt;/p&gt;
&lt;h3&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;We’ve shown four different ways to perform disk I/O on Linux and the different tradeoffs involved in them. It is easy to start with the traditional read/write operations or get good in-memory performance with mmap, but to achieve top performance and control, we’ve chosen asynchronous I/O for Scylla.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;1.&lt;/sup&gt; The exceptions are a write that is not aligned on a page boundary that modifies an uncached page; and a write that needs to allocate a new cache page, when memory is not available.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2.&lt;/sup&gt; There is limited ability to communicate I/O priority to the kernel with the &lt;em&gt;ioprio_set(2)&lt;/em&gt; system call&lt;/p&gt;
&lt;footer class=&quot;author_bio_section&quot; readability=&quot;5.0625&quot;&gt;&lt;div class=&quot;author-entry&quot; readability=&quot;37.738636363636&quot;&gt;
&lt;h3 class=&quot;author_name&quot;&gt;&lt;img src=&quot;http://www.scylladb.com/wp-content/uploads/avi_kivity-1-64x64.jpg&quot; width=&quot;60&quot; height=&quot;60&quot; alt=&quot;Avi Kivity&quot; class=&quot;avatar avatar-60 wp-user-avatar wp-user-avatar-60 alignnone photo&quot;/&gt;About Avi Kivity&lt;/h3&gt;
&lt;p class=&quot;author_details&quot;&gt;Avi Kivity, CTO of ScyllaDB, is known mostly for starting the Kernel-based Virtual Machine (KVM) project, the hypervisor underlying many production clouds. He has worked for Qumranet and Red Hat as KVM maintainer until December 2012. Avi is now CTO of ScyllaDB, bringing high throughput to the NoSQL world.&lt;/p&gt;
&lt;p class=&quot;author_links&quot;&gt;&lt;a href=&quot;http://www.scylladb.com/author/akivity/&quot;&gt;View all posts by Avi Kivity&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/footer&gt;</description>
<pubDate>Thu, 05 Oct 2017 17:51:56 +0000</pubDate>
<dc:creator>thekozmo</dc:creator>
<og:type>article</og:type>
<og:title>Learn about different I/O Access Methods and what we chose for Scylla</og:title>
<og:description>Explore the four different ways to perform disk I/O on Linux and the tradeoffs and what we chose for Scylla to build a high-performing database.</og:description>
<og:url>http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</og:url>
<og:image>http://www.scylladb.com/wp-content/uploads/Chart_4.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</dc:identifier>
</item>
<item>
<title>If macOS High Sierra shows your password instead of the password hint</title>
<link>https://support.apple.com/en-us/HT208168</link>
<guid isPermaLink="true" >https://support.apple.com/en-us/HT208168</guid>
<description>&lt;div&gt;
&lt;p&gt;Your password might be displayed instead of your password hint if you used the Add APFS Volume command in Disk Utility to create an encrypted APFS volume, and you supplied a password hint. &lt;/p&gt;
&lt;p&gt;Changing the password on an affected volume clears the hint but doesn’t affect the underlying encryption keys that protect the data. &lt;/p&gt;
&lt;p&gt;Apple recommends that you take these steps to guard the security of your data.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;note&quot;&gt;Encrypted APFS volumes that you created using any other method are not affected.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2&gt;Protect the encrypted APFS volume&lt;/h2&gt;
&lt;p&gt;Follow these steps to update macOS High Sierra, and then back up, erase, and restore the encrypted APFS volume.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Install the macOS High Sierra 10.13 Supplemental Update from the App Store updates page.&lt;/li&gt;
&lt;li&gt;Create an encypted backup of the data in your affected encrypted APFS volume.&lt;/li&gt;
&lt;li&gt;Open Disk Utility and select the affected encrypted APFS volume in the sidebar.&lt;/li&gt;
&lt;li&gt;Click Unmount to unmount the volume.&lt;/li&gt;
&lt;li&gt;Click Erase.&lt;/li&gt;
&lt;li&gt;When asked, type a name for the volume in the Name field.&lt;/li&gt;
&lt;li&gt;Change Format to APFS.&lt;/li&gt;
&lt;li&gt;Then change Format again to APFS (Encrypted).&lt;/li&gt;
&lt;li&gt;Enter a new password in the dialog. Enter it again to verify the password, and if you’d like to, provide a hint for the encrypted APFS volume. Click Choose.&lt;/li&gt;
&lt;li&gt;Click Erase. You can see the progress of the Erase process.&lt;/li&gt;
&lt;li&gt;Click Done when the process is complete.&lt;/li&gt;
&lt;li&gt;Restore the data that you backed up in Step 1 to the new encrypted APFS volume that you just created.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h2&gt;Protect other accounts&lt;/h2&gt;
&lt;p&gt;If your disk password for any affected encrypted APFS volume is the same as the password that you use for a macOS user account or an internet service, you should change the password of the user account or internet service.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 05 Oct 2017 17:38:26 +0000</pubDate>
<dc:creator>0x0</dc:creator>
<og:url>https://support.apple.com/en-us/HT208168</og:url>
<og:title>If macOS High Sierra shows your password instead of the password hint for an encrypted APFS volume</og:title>
<og:description>Take steps to protect your data if you see your password instead of your password hint for an encrypted APFS volume.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://support.apple.com/en-us/HT208168</dc:identifier>
</item>
<item>
<title>Modern B-Tree Techniques (2011)</title>
<link>http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;rep=rep1&amp;type=pdf</link>
<guid isPermaLink="true" >http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;rep=rep1&amp;type=pdf</guid>
<description>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;rep=rep1&amp;type=pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Thu, 05 Oct 2017 15:08:12 +0000</pubDate>
<dc:creator>pointy_hat</dc:creator>
<og:url>https://support.apple.com/en-us/HT208168</og:url>
<og:title>If macOS High Sierra shows your password instead of the password hint for an encrypted APFS volume</og:title>
<og:description>Take steps to protect your data if you see your password instead of your password hint for an encrypted APFS volume.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>application/pdf</dc:format>
<dc:identifier>http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;rep=rep1&amp;type=pdf</dc:identifier>
</item>
<item>
<title>A Pre-History of Slashdot</title>
<link>https://medium.com/@cmdrtaco/a-pre-history-of-slashdot-6403341dabae</link>
<guid isPermaLink="true" >https://medium.com/@cmdrtaco/a-pre-history-of-slashdot-6403341dabae</guid>
<description>&lt;p name=&quot;1a8b&quot; id=&quot;1a8b&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;I registered the domain name “Slashdot.org” 20 years ago today. I really had no idea.&lt;/p&gt;
&lt;p name=&quot;482c&quot; id=&quot;482c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Jeff chipped in a few bucks for the fees. Kathleen told me the name was stupid. I thought, “That’s kinda the point!”&lt;/p&gt;
&lt;p name=&quot;cdd6&quot; id=&quot;cdd6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I originally used the name ‘slashdot’ on my desktop a year earlier when I got my first static IP in the Voorhees Hall dorm room I shared with Dave. Back in 1996, our floor was the first in all of Hope College to be granted 24/7 high speed internet access.&lt;/p&gt;
&lt;p name=&quot;21cb&quot; id=&quot;21cb&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Since then I had been maintaining a little news section on my homepage called “Chips &amp;amp; Dips”. It was a primordial Slashdot: rants, reviews, and URLs often seeded by friends via email or IRC. I quickly got annoyed with the tedious process required to update the static HTML that powered it.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*dJvK5iuUIA1KTXDWi8uuNw.jpeg&quot; data-width=&quot;559&quot; data-height=&quot;94&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*dJvK5iuUIA1KTXDWi8uuNw.jpeg&quot;/&gt;&lt;/div&gt;
if you remember this logo… you are freakin’ old.
&lt;p name=&quot;c23b&quot; id=&quot;c23b&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This was early in the days of “The Web”. The notion of “A Blog” was years away, so I wrote my own code. I didn’t have huge ambitions so I stored the data in flat text files loaded from scratch, on every… single… page… view. I knew this was grotesquely inefficient but again, I had no idea what was coming.&lt;/p&gt;
&lt;p name=&quot;037c&quot; id=&quot;037c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I took a rejected template from a project at work and retooled it into something more in keeping with my personal aesthetic: lots of high contrast black, white, and teal. A drop shadow on almost everything. A sweet torn paper edge down the right hand side of the page. And of course that slogan.&lt;/p&gt;
&lt;p name=&quot;30bd&quot; id=&quot;30bd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Maybe it doesn’t look all that good by today’s standards, but in 1997, it was pretty sweet. The oldest entry in the Wayback machine is from January of 1998 and features a lot of broken graphics, but the essence is still there:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*DJsCTsAMGfU3LdtcgLOt-w.png&quot; data-width=&quot;639&quot; data-height=&quot;268&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*DJsCTsAMGfU3LdtcgLOt-w.png&quot;/&gt;&lt;/div&gt;
slashdot way back in 1998. anyone have an older screenshot?
&lt;p name=&quot;6be9&quot; id=&quot;6be9&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The server was a well used DEC Alpha Multia. I got it free for skinning a space invaders clone that I had originally built in a graphics class the previous semester. The game engine was based on a sprite library written by Nate. I re-did all the graphics clicking one pixel at a time in The Gimp. A little spaceship shot hot butter at endlessly descending rows of popcorn to promote snacking or something. I was never really clear on that.&lt;/p&gt;
&lt;p name=&quot;f4fb&quot; id=&quot;f4fb&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The machine itself was no faster than a typical 486, but it ran Linux. I was excited to have a new architecture to play on besides my 486 and the CompSci SparcStations. My employer (The Image Group) let me host it on their network: they needed an email server and this machine would serve double duty.&lt;/p&gt;
&lt;p name=&quot;fe9e&quot; id=&quot;fe9e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I christened the box Ariel, and she lived under my desk. I knocked it offline with my foot more than once before putting it up a little higher.&lt;/p&gt;
&lt;p name=&quot;f12d&quot; id=&quot;f12d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Within a few days of DNS registration, Slashdot.org was live. I quickly added polls to answer urgent questions like “How many shots should Kurt drink”. While he suffered the results of these polls, I would tail -f on the access_log and the residents of the so-called Geek House would boggle as names like ‘mit.edu’ and ‘microsoft.com’ streamed forward faster than we could read.&lt;/p&gt;
&lt;p name=&quot;bf30&quot; id=&quot;bf30&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Rapid change followed: traffic soon created real expenses requiring hardware, colocation, and advertising. The code was in constant flux: adding user accounts, moderation, the submissions bin. And of course performance improvements to deal with the unyielding traffic growth. All the while I posted story after story, and our readers matched us with more comments than we thought possible.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*gFHmgqe2GhBIZhDqT6AdAA.jpeg&quot; data-width=&quot;400&quot; data-height=&quot;268&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*gFHmgqe2GhBIZhDqT6AdAA.jpeg&quot;/&gt;&lt;/div&gt;
geek house (one)
&lt;p name=&quot;fb15&quot; id=&quot;fb15&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;My friends began contributing more and more. From code, to old hardware, to posting stories and coordinating advertising, we formed Blockstackers with a purpose. Slashdot went from from something with a stupid name that &lt;em class=&quot;markup--em markup--p-em&quot;&gt;I&lt;/em&gt; was building into something &lt;em class=&quot;markup--em markup--p-em&quot;&gt;we&lt;/em&gt; were building… with the help of thousands of nerds around the world that we would never meet in person.&lt;/p&gt;
&lt;p name=&quot;13c8&quot; id=&quot;13c8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The years that followed were a blurry mix of victories and failures as Slashdot grew from a hobby to a real business depended on by hundreds of thousands of nerds around the world. The work was messy, complicated, hard… and especially for the first decade… thrilling.&lt;/p&gt;
&lt;p name=&quot;efae&quot; id=&quot;efae&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I was the last of the Blockstackers to leave. I made tons of mistakes and stayed longer than I should have. Today I don’t know a single person who has anything to do with the thing that was at the center of my life for 15 years. To say I have complicated feelings about what Slashdot is in 2017 is an understatement!&lt;/p&gt;
&lt;p name=&quot;d00c&quot; id=&quot;d00c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But right at the start… 20 years ago today… it was awesome.&lt;/p&gt;
&lt;p name=&quot;3704&quot; id=&quot;3704&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;~ Rob “CmdrTaco” Malda&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;fe11&quot; id=&quot;fe11&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Pants are Optional&lt;/strong&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 05 Oct 2017 14:21:38 +0000</pubDate>
<dc:creator>cmdrtaco</dc:creator>
<og:title>A Pre-History of Slashdot on its 20th Birthday – freeCodeCamp</og:title>
<og:url>https://medium.freecodecamp.org/a-pre-history-of-slashdot-6403341dabae</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*DJsCTsAMGfU3LdtcgLOt-w.png</og:image>
<og:description>I registered the domain name “Slashdot.org” 20 years ago today. I really had no idea.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.freecodecamp.org/a-pre-history-of-slashdot-6403341dabae?gi=d4223296eebd</dc:identifier>
</item>
<item>
<title>PostgreSQL 10 Released</title>
<link>https://www.postgresql.org/about/news/1786/</link>
<guid isPermaLink="true" >https://www.postgresql.org/about/news/1786/</guid>
<description>&lt;p&gt;Posted on &lt;strong&gt;2017-10-05&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The PostgreSQL Global Development Group today announced the release of PostgreSQL 10, the latest version of the world's most advanced open source database.&lt;/p&gt;
&lt;p&gt;A critical feature of modern workloads is the ability to distribute data across many nodes for faster access, management, and analysis, which is also known as a &quot;divide and conquer&quot; strategy. The PostgreSQL 10 release includes significant enhancements to effectively implement the divide and conquer strategy, including native logical replication, declarative table partitioning, and improved query parallelism.&lt;/p&gt;
&lt;p&gt;&quot;Our developer community focused on building features that would take advantage of modern infrastructure setups for distributing workloads,&quot; said Magnus Hagander, a &lt;a href=&quot;https://www.postgresql.org/developer/core/&quot;&gt;core team&lt;/a&gt; member of the &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL Global Development Group&lt;/a&gt;. &quot;Features such as logical replication and improved query parallelism represent years of work and demonstrate the continued dedication of the community to ensuring Postgres leadership as technology demands evolve.&quot;&lt;/p&gt;
&lt;p&gt;This release also marks the change of the versioning scheme for PostgreSQL to a &quot;x.y&quot; format. This means the next minor release of PostgreSQL will be 10.1 and the next major release will be 11.&lt;/p&gt;
&lt;h2&gt;Logical Replication - A publish/subscribe framework for distributing data&lt;/h2&gt;
&lt;p&gt;Logical replication extends the current replication features of PostgreSQL with the ability to send modifications on a per-database and per-table level to different PostgreSQL databases. Users can now fine-tune the data replicated to various database clusters and will have the ability to perform zero-downtime upgrades to future major PostgreSQL versions.&lt;/p&gt;
&lt;p&gt;&quot;We have been heavily using PostgreSQL since 9.3 and are very excited about version 10 since it brings basis for long-awaited partitioning and built-in logical replication. It will allow us to use PostgreSQL in even more services,&quot; said Vladimir Borodin, DBA Team Lead at &lt;a href=&quot;https://www.yandex.com/&quot;&gt;Yandex&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Declarative Table Partitioning - Convenience in dividing your data&lt;/h2&gt;
&lt;p&gt;Table partitioning has existed for years in PostgreSQL but required a user to maintain a nontrivial set of rules and triggers for the partitioning to work. PostgreSQL 10 introduces a table partitioning syntax that lets users easily create and maintain range and list partitioned tables. The addition of the partitioning syntax is the first step in a series of planned features to provide a robust partitioning framework within PostgreSQL.&lt;/p&gt;
&lt;h2&gt;Improved Query Parallelism - Quickly conquer your analysis&lt;/h2&gt;
&lt;p&gt;PostgreSQL 10 provides better support for parallelized queries by allowing more parts of the query execution process to be parallelized. Improvements include additional types of data scans that are parallelized as well as optimizations when the data is recombined, such as pre-sorting. These enhancements allow results to be returned more quickly.&lt;/p&gt;
&lt;h2&gt;Quorum Commit for Synchronous Replication - Distribute data with confidence&lt;/h2&gt;
&lt;p&gt;PostgreSQL 10 introduces quorum commit for synchronous replication, which allows for flexibility in how a primary database receives acknowledgement that changes were successfully written to remote replicas. An administrator can now specify that if any number of replicas has acknowledged that a change to the database has been made, then the data can be considered safely written.&lt;/p&gt;
&lt;p&gt;&quot;Quorum commit for synchronous replication in PostgreSQL 10 gives more options to extend our ability to promote database infrastructure with nearly zero downtime from the application perspective. This allows us to continuously deploy and update our database infrastructure without incurring long maintenance windows,&quot; said Curt Micol, Staff Infrastructure Engineer at &lt;a href=&quot;https://www.simple.com/&quot;&gt;Simple Finance&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;SCRAM-SHA-256 authentication - Secure your data access&lt;/h2&gt;
&lt;p&gt;The Salted Challenge Response Authentication Mechanism (SCRAM) defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5802&quot;&gt;RFC5802&lt;/a&gt; defines a protocol to improve upon the secure storage and transmission of passwords by providing a framework for strong password negotiation. PostgreSQL 10 introduces the SCRAM-SHA-256 authentication method, defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7677&quot;&gt;RFC7677&lt;/a&gt;, to provide better security than the existing MD5-based password authentication method.&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;h2&gt;About PostgreSQL&lt;/h2&gt;
&lt;p&gt;PostgreSQL is the world's most advanced open source database, with a global community of thousands of users, contributors, companies and organizations. The PostgreSQL Project builds on over 30 years of engineering, starting at the University of California, Berkeley, and has continued with an unmatched pace of development. PostgreSQL's mature feature set not only matches top proprietary database systems, but exceeds them in advanced database features, extensibility, security and stability. Learn more about PostgreSQL and participate in our community at &lt;a href=&quot;https://www.postgresql.org&quot;&gt;PostgreSQL.org&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 05 Oct 2017 13:06:45 +0000</pubDate>
<dc:creator>Tostino</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.postgresql.org/about/news/1786/</dc:identifier>
</item>
<item>
<title>Strategies for offline PGP key storage</title>
<link>https://lwn.net/SubscriberLink/734767/b8509e00378301f9/</link>
<guid isPermaLink="true" >https://lwn.net/SubscriberLink/734767/b8509e00378301f9/</guid>
<description>&lt;center&gt;
&lt;table width=&quot;90%&quot; cellspacing=&quot;5&quot; readability=&quot;4.1829745596869&quot;&gt;&lt;tr readability=&quot;11.154598825832&quot;&gt;&lt;td valign=&quot;top&quot; readability=&quot;9&quot;&gt;
&lt;h3&gt;Welcome to LWN.net&lt;/h3&gt;
&lt;p&gt;The following subscription-only content has been made available to you by an LWN subscriber. Thousands of subscribers depend on LWN for the best news from the Linux and free software communities. If you enjoy this article, please consider accepting the trial offer on the right. Thank you for visiting LWN.net!&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;
&lt;table class=&quot;Form&quot; width=&quot;100%&quot; readability=&quot;1.2016574585635&quot;&gt;&lt;tr readability=&quot;3.6049723756906&quot;&gt;&lt;td readability=&quot;4.8066298342541&quot;&gt;
&lt;h3&gt;Free trial subscription&lt;/h3&gt;
&lt;p&gt;Try LWN for free for 1 month: no payment or credit card required. &lt;a href=&quot;https://lwn.net/Promo/slink-trial2-2/claim&quot;&gt;Activate your trial subscription now&lt;/a&gt; and see why thousands of readers subscribe to LWN.net.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;
&lt;div class=&quot;GAByline&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;October 2, 2017&lt;/p&gt;
&lt;p&gt;This article was contributed by Antoine Beaupré&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;While the adoption of &lt;a href=&quot;http://openpgp.org/&quot;&gt;OpenPGP&lt;/a&gt; by the general population is marginal at best, it is a critical component for the security community and particularly for Linux distributions. For example, every package uploaded into Debian is verified by the central repository using the maintainer's OpenPGP keys and the repository itself is, in turn, signed using a separate key. If upstream packages also use such signatures, this creates a complete trust path from the original upstream developer to users. Beyond that, pull requests for the Linux kernel are verified using signatures as well. Therefore, the stakes are high: a compromise of the release key, or even of a single maintainer's key, could enable devastating attacks against many machines.&lt;/p&gt;
&lt;p&gt;That has led the Debian community to develop a good grasp of best practices for cryptographic signatures (which are typically handled using &lt;a href=&quot;http://gnupg.org/&quot;&gt;GNU Privacy Guard&lt;/a&gt;, also known as GnuPG or GPG). For example, weak (less than 2048 bits) and &lt;a href=&quot;https://lwn.net/Articles/588266/&quot;&gt;vulnerable&lt;/a&gt; PGPv3 keys were &lt;a href=&quot;https://lists.debian.org/20150101191039.GB5209@earth.li&quot;&gt;removed&lt;/a&gt; from the keyring in 2015, and there is a strong culture of cross-signing keys between Debian members at in-person meetings. Yet even Debian developers (DDs) do not seem to have established practices on how to actually store critical private key material, as we can see in this &lt;a href=&quot;https://lists.debian.org/debian-project/2017/08/msg00011.html&quot;&gt;discussion&lt;/a&gt; on the debian-project mailing list. That email boiled down to a simple request: can I have a &quot;key dongles for dummies&quot; tutorial? Key dongles, or keycards as we'll call them here, are small devices that allow users to store keys on an offline device and provide one possible solution for protecting private key material. In this article, I hope to use my experience in this domain to clarify the issue of how to store those precious private keys that, if compromised, could enable arbitrary code execution on millions of machines all over the world.&lt;/p&gt;
&lt;h4&gt;Why store keys offline?&lt;/h4&gt;
&lt;p&gt;Before we go into details about storing keys offline, it may be useful to do a small reminder of how the &lt;a href=&quot;https://tools.ietf.org/html/rfc4880&quot;&gt;OpenPGP standard&lt;/a&gt; works. OpenPGP keys are made of a main public/private key pair, the certification key, used to sign user identifiers and subkeys. My public key, shown below, has the usual main certification/signature key (marked &lt;code&gt;SC&lt;/code&gt;) but also an encryption subkey (marked &lt;code&gt;E&lt;/code&gt;), a separate signature key (&lt;code&gt;S&lt;/code&gt;), and two authentication keys (marked &lt;code&gt;A&lt;/code&gt;) which I use as RSA keys to log into servers using SSH, thanks to the &lt;a href=&quot;http://monkeysphere.info/&quot;&gt;Monkeysphere&lt;/a&gt; project.&lt;/p&gt;
&lt;pre&gt;
    pub   rsa4096/792152527B75921E 2009-05-29 [SC] [expires: 2018-04-19]
          8DC901CE64146C048AD50FBB792152527B75921E
    uid                 [ultimate] Antoine Beaupré &amp;lt;anarcat@anarc.at&amp;gt;
    uid                 [ultimate] Antoine Beaupré &amp;lt;anarcat@koumbit.org&amp;gt;
    uid                 [ultimate] Antoine Beaupré &amp;lt;anarcat@orangeseeds.org&amp;gt;
    uid                 [ultimate] Antoine Beaupré &amp;lt;anarcat@debian.org&amp;gt;
    sub   rsa2048/B7F648FED2DF2587 2012-07-18 [A]
    sub   rsa2048/604E4B3EEE02855A 2012-07-20 [A]
    sub   rsa4096/A51D5B109C5A5581 2009-05-29 [E]
    sub   rsa2048/3EA1DDDDB261D97B 2017-08-23 [S]
&lt;/pre&gt;
&lt;p&gt;All the subkeys (&lt;code&gt;sub&lt;/code&gt;) and identities (&lt;code&gt;uid&lt;/code&gt;) are bound by the main certification key using cryptographic self-signatures. So while an attacker stealing a private subkey can spoof signatures in my name or authenticate to other servers, that key can always be revoked by the main certification key. But if the certification key gets stolen, all bets are off: the attacker can create or revoke identities or subkeys as they wish. In a catastrophic scenario, an attacker could even steal the key and remove your copies, taking complete control of the key, without any possibility of recovery. Incidentally, this is why it is so important to generate a revocation certificate and store it offline.&lt;/p&gt;
&lt;p&gt;So by moving the certification key offline, we reduce the attack surface on the OpenPGP trust chain: day-to-day keys (e.g. email encryption or signature) can stay online but if they get stolen, the certification key can revoke those keys without having to revoke the main certification key as well. Note that a stolen encryption key is a different problem: even if we revoke the encryption subkey, this will only affect future encrypted messages. Previous messages &lt;em&gt;will&lt;/em&gt; be readable by the attacker with the stolen subkey even if that subkey gets revoked, so the benefits of revoking encryption certificates are more limited.&lt;/p&gt;
&lt;h4&gt;Common strategies for offline key storage&lt;/h4&gt;
&lt;p&gt;Considering the security tradeoffs, some propose storing those critical keys offline to reduce those threats. But where exactly? In an attempt to answer that question, Jonathan McDowell, a member of the &lt;a href=&quot;https://wiki.debian.org/Teams/KeyringMaint&quot;&gt;Debian keyring maintenance team&lt;/a&gt;, said that there are &lt;a href=&quot;https://lists.debian.org/debian-project/2017/08/msg00054.html&quot;&gt;three options&lt;/a&gt;: use an external LUKS-encrypted volume, an air-gapped system, or a keycard.&lt;/p&gt;
&lt;p&gt;Full-disk encryption like LUKS adds an extra layer of security by hiding the content of the key from an attacker. Even though private keyrings are usually protected by a passphrase, they are easily identifiable as a keyring. But when a volume is fully encrypted, it's not immediately obvious to an attacker there is private key material on the device. &lt;a href=&quot;https://lists.debian.org/debian-project/2017/08/msg00148.html&quot;&gt;According&lt;/a&gt; to Sean Whitton, another advantage of LUKS over plain GnuPG keyring encryption is that you can pass the &lt;code&gt;--iter-time&lt;/code&gt; argument when creating a LUKS partition to increase key-derivation delay, which makes brute-forcing much harder. Indeed, GnuPG 2.x &lt;a href=&quot;https://dev.gnupg.org/T3400&quot;&gt;doesn't have&lt;/a&gt; a run-time option to configure the key-derivation algorithm, although a &lt;a href=&quot;https://dev.gnupg.org/T3399&quot;&gt;patch&lt;/a&gt; was introduced recently to make the delay configurable at compile time in &lt;tt&gt;gpg-agent&lt;/tt&gt;, which is now responsible for all secret key operations.&lt;/p&gt;
&lt;p&gt;The downside of external volumes is complexity: GnuPG makes it difficult to extract secrets out of its keyring, which makes the first setup tricky and error-prone. This is easier in the 2.x series thanks to the new storage system and the associated &lt;tt&gt;keygrip&lt;/tt&gt; files, but it still requires arcane knowledge of GPG internals. It is also inconvenient to use secret keys stored outside your main keyring when you actually &lt;em&gt;do&lt;/em&gt; need to use them, as GPG doesn't know where to find those keys anymore.&lt;/p&gt;
&lt;p&gt;Another option is to set up a separate air-gapped system to perform certification operations. An example is the &lt;a href=&quot;https://wiki.debian.org/OpenPGP/CleanRoomLiveEnvironment&quot;&gt;PGP clean room&lt;/a&gt; project, which is a live system based on Debian and designed by DD Daniel Pocock to operate an OpenPGP and X.509 certificate authority using commodity hardware. The basic principle is to store the secrets on a different machine that is never connected to the network and, therefore, not exposed to attacks, at least in theory. I have personally discarded that approach because I feel air-gapped systems provide a false sense of security: data eventually does need to come in and out of the system, somehow, even if only to propagate signatures out of the system, which exposes the system to attacks.&lt;/p&gt;
&lt;p&gt;System updates are similarly problematic: to keep the system secure, timely security updates need to be deployed to the air-gapped system. A common use pattern is to share data through USB keys, which introduce a vulnerability where attacks like &lt;a href=&quot;https://lwn.net/Articles/608503/&quot;&gt;BadUSB&lt;/a&gt; can infect the air-gapped system. From there, there is a multitude of exotic ways of exfiltrating the data using &lt;a href=&quot;https://threatpost.com/blinking-router-leds-leak-data-from-air-gapped-networks/126199/&quot;&gt;LEDs&lt;/a&gt;, &lt;a href=&quot;http://thehackernews.com/2017/09/airgap-network-malware-hacking.html&quot;&gt;infrared cameras&lt;/a&gt;, or the good old &lt;a href=&quot;https://www.wired.com/2015/07/researchers-hack-air-gapped-computer-simple-cell-phone/&quot;&gt;TEMPEST&lt;/a&gt; attack. I therefore concluded the complexity tradeoffs of an air-gapped system are not worth it. Furthermore, the workflow for air-gapped systems is complex: even though PGP clean room went a long way, it's still lacking even simple scripts that allow signing or transferring keys, which is a problem shared by the external LUKS storage approach.&lt;/p&gt;
&lt;h4&gt;Keycards advantages&lt;/h4&gt;
&lt;p&gt;The approach I have chosen is to use a cryptographic keycard: an external device, usually connected through the USB port, that stores the private key material and performs critical cryptographic operations on the behalf of the host. For example, the &lt;a href=&quot;http://www.gniibe.org/FST-01/fst-01.html&quot;&gt;FST-01 keycard&lt;/a&gt; can perform RSA and ECC public-key decryption without ever exposing the private key material to the host. In effect, a keycard is a miniature computer that performs restricted computations for another host. Keycards usually support multiple &quot;slots&quot; to store subkeys. The OpenPGP standard specifies there are three subkeys available by default: for signature, authentication, and encryption. Finally, keycards can have an actual physical keypad to enter passwords so a potential keylogger cannot capture them, although the keycards I have access to do not feature such a keypad.&lt;/p&gt;
&lt;p&gt;We could easily draw a parallel between keycards and an air-gapped system; in effect, a keycard is a miniaturized air-gapped computer and suffers from similar problems. An attacker can intercept data on the host system and attack the device in the same way, if not more easily, because a keycard is actually &quot;online&quot; (i.e. clearly not air-gapped) when connected. The advantage over a fully-fledged air-gapped computer, however, is that the keycard implements only a restricted set of operations. So it is easier to create an open hardware and software design that is audited and verified, which is much harder to accomplish for a general-purpose computer.&lt;/p&gt;
&lt;p&gt;Like air-gapped systems, keycards address the scenario where an attacker wants to get the private key material. While an attacker could fool the keycard into signing or decrypting some data, this is possible only while the key is physically connected, and the keycard software will prompt the user for a password before doing the operation, though the keycard can cache the password for some time. In effect, it thwarts offline attacks: to brute-force the key's password, the attacker needs to be on the target system and try to guess the keycard's password, which will lock itself after a limited number of tries. It also provides for a clean and standard interface to store keys offline: a single GnuPG command moves private key material to a keycard (the &lt;code&gt;keytocard&lt;/code&gt; command in the &lt;code&gt;--edit-key&lt;/code&gt; interface), whereas moving private key material to a LUKS-encrypted device or air-gapped computer is more complex.&lt;/p&gt;
&lt;p&gt;Keycards are also useful if you operate on multiple computers. A common problem when using GnuPG on multiple machines is how to safely copy and synchronize private key material among different devices, which introduces new security problems. Indeed, a &quot;&lt;span&gt;good rule of thumb in a forensics lab&lt;/span&gt;&quot;, &lt;a href=&quot;https://lists.gnupg.org/pipermail/gnupg-users/2017-April/058050.html&quot;&gt;according&lt;/a&gt; to Robert J. Hansen on the GnuPG mailing list, is to &quot;&lt;span&gt;store the minimum personal data possible on your systems&lt;/span&gt;&quot;. Keycards provide the best of both worlds here: you can use your private key on multiple computers without actually storing it in multiple places. In fact, Mike Gerwitz went as far as &lt;a href=&quot;https://lists.gnupg.org/pipermail/gnupg-users/2017-April/058068.html&quot;&gt;saying&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;BigQuote&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;For users that need their GPG key on multiple boxes, I consider a smartcard to be essential. Otherwise, the user is just furthering her risk of compromise.&lt;/p&gt;
&lt;/div&gt;
&lt;h4&gt;Keycard tradeoffs&lt;/h4&gt;
&lt;p&gt;As Gerwitz hinted, there are multiple downsides to using a keycard, however. Another DD, Wouter Verhelst clearly &lt;a href=&quot;https://lists.debian.org/debian-project/2017/08/msg00020.html&quot;&gt;expressed&lt;/a&gt; the tradeoffs:&lt;/p&gt;
&lt;div class=&quot;BigQuote&quot; readability=&quot;20&quot;&gt;
&lt;p&gt;Smartcards are useful. They ensure that the private half of your key is never on any hard disk or other general storage device, and therefore that it cannot possibly be stolen (because there's only one possible copy of it).&lt;/p&gt;
&lt;p&gt;Smartcards are a pain in the ass. They ensure that the private half of your key is never on any hard disk or other general storage device but instead sits in your wallet, so whenever you need to access it, you need to grab your wallet to be able to do so, which takes more effort than just firing up GnuPG. If your laptop doesn't have a builtin cardreader, you also need to fish the reader from your backpack or wherever, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&quot;Smartcards&quot; here refer to older &lt;a href=&quot;https://en.wikipedia.org/wiki/OpenPGP_card&quot;&gt;OpenPGP cards&lt;/a&gt; that relied on the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_7816&quot;&gt;IEC 7816 smartcard connectors&lt;/a&gt; and therefore needed a specially-built smartcard reader. Newer keycards simply use a standard USB connector. In any case, it's true that having an external device introduces new issues: attackers can steal your keycard, you can simply lose it, or wash it with your dirty laundry. A laptop or a computer can also be lost, of course, but it is much easier to lose a small USB keycard than a full laptop — and I have yet to hear of someone shoving a full laptop into a washing machine. When you lose your keycard, unless a separate revocation certificate is available somewhere, you lose complete control of the key, which is catastrophic. But, even if you revoke the lost key, you need to create a new one, which involves rebuilding the web of trust for the key — a rather expensive operation as it usually requires meeting other OpenPGP users in person to exchange fingerprints.&lt;/p&gt;
&lt;p&gt;You should therefore think about how to back up the certification key, which is a problem that already exists for online keys; of course, everyone has a revocation certificates and backups of their OpenPGP keys... right? In the keycard scenario, backups may be multiple keycards distributed geographically.&lt;/p&gt;
&lt;p&gt;Note that, contrary to an air-gapped system, a key generated on a keycard &lt;em&gt;cannot&lt;/em&gt; be backed up, by design. For subkeys, this is not a problem as they do not need to be backed up (except encryption keys). But, for a certification key, this means users need to generate the key on the host and transfer it to the keycard, which means the host is expected to have enough entropy to generate cryptographic-strength random numbers, for example. Also consider the possibility of combining different approaches: you could, for example, use a keycard for day-to-day operation, but keep a backup of the certification key on a LUKS-encrypted offline volume.&lt;/p&gt;
&lt;p&gt;Keycards introduce a new element into the trust chain: you need to trust the keycard manufacturer to not have any hostile code in the key's firmware or hardware. In addition, you need to trust that the implementation is correct. Keycards are harder to update: the firmware may be deliberately inaccessible to the host for security reasons or may require special software to manipulate. Keycards may be slower than the CPU in performing certain operations because they are small embedded microcontrollers with limited computing power.&lt;/p&gt;
&lt;p&gt;Finally, keycards may &lt;em&gt;encourage&lt;/em&gt; users to trust multiple machines with their secrets, which works against the &quot;minimum personal data&quot; principle. A completely different approach called the &lt;a href=&quot;http://cmrg.fifthhorseman.net/wiki/TrustedPhysicalConsole&quot;&gt;trusted physical console&lt;/a&gt; (TPC) does the opposite: instead of trying to get private key material onto all of those machines, just have them on a single machine that is used for everything. Unlike a keycard, the TPC is an actual computer, say a laptop, which has the advantage of needing no special procedure to manage keys. The downside is, of course, that you actually need to carry that laptop everywhere you go, which may be problematic, especially in some corporate environments that restrict bringing your own devices.&lt;/p&gt;
&lt;h4&gt;Quick keycard &quot;howto&quot;&lt;/h4&gt;
&lt;p&gt;Getting keys onto a keycard is easy enough:&lt;/p&gt;
&lt;ol readability=&quot;9.4224037339557&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Start with a temporary key to test the procedure:&lt;/p&gt;
&lt;pre&gt;
    export GNUPGHOME=$(mktemp -d)
    gpg --generate-key
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.875&quot;&gt;
&lt;p&gt;Edit the key using its &lt;a href=&quot;https://manpages.debian.org/unstable/gpg/gpg.1.en.html#HOW_TO_SPECIFY_A_USER_ID&quot;&gt;user ID&lt;/a&gt; (UID):&lt;/p&gt;
&lt;pre&gt;
    gpg --edit-key &lt;em&gt;UID&lt;/em&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Use the &lt;tt&gt;key&lt;/tt&gt; command to select the first subkey, then copy it to the keycard (you can also use the &lt;code&gt;addcardkey&lt;/code&gt; command to just generate a new subkey directly on the keycard):&lt;/p&gt;
&lt;pre&gt;
    gpg&amp;gt; key 1
    gpg&amp;gt; keytocard
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;If you want to &lt;em&gt;move&lt;/em&gt; the subkey, use the &lt;code&gt;save&lt;/code&gt; command, which will remove the local copy of the private key, so the keycard will be the &lt;em&gt;only&lt;/em&gt; copy of the secret key. Otherwise use the &lt;code&gt;quit&lt;/code&gt; command to save the key on the keycard, but keep the secret key in your normal keyring; answer &quot;n&quot; to &quot;save changes?&quot; and &quot;y&quot; to &quot;quit without saving?&quot; . This way the keycard is a backup of your secret key.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Once you are satisfied with the results, repeat steps 1 through 4 with your normal keyring (unset &lt;code&gt;$GNUPGHOME&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;When a key is moved to a keycard, &lt;code&gt;--list-secret-keys&lt;/code&gt; will show it as &lt;code&gt;sec&amp;gt;&lt;/code&gt; (or &lt;code&gt;ssb&amp;gt;&lt;/code&gt; for subkeys) instead of the usual &lt;code&gt;sec&lt;/code&gt; keyword. If the key is completely missing (for example, if you moved it to a LUKS container), the &lt;code&gt;#&lt;/code&gt; sign is used instead. If you need to use a key from a keycard backup, you simply do &lt;code&gt;gpg --card-edit&lt;/code&gt; with the key plugged in, then type the &lt;code&gt;fetch&lt;/code&gt; command at the prompt to fetch the public key that corresponds to the private key on the keycard (which stays on the keycard). This is the same procedure as the one to &lt;a href=&quot;http://www.fsij.org/doc-gnuk/using-gnuk-token-with-another-computer.html&quot;&gt;use the secret key on another computer&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;There are already informal &lt;a href=&quot;https://riseup.net/en/security/message-security/openpgp/best-practices&quot;&gt;OpenPGP best-practices guides&lt;/a&gt; out there and some recommend storing keys offline, but they rarely explain what exactly that means. Storing your primary secret key offline is important in dealing with possible compromises and we examined the main ways of doing so: either with an air-gapped system, LUKS-encrypted keyring, or by using keycards. Each approach has its own tradeoffs, but I recommend getting familiar with keycards if you use multiple computers and want a standardized interface with minimal configuration trouble.&lt;/p&gt;
&lt;p&gt;And of course, those approaches can be combined. &lt;a href=&quot;http://viccuad.me/blog/Revisited-secure-yourself-part-1-airgapped-computer-and-gpg-smartcards&quot;&gt;This tutorial&lt;/a&gt;, for example, uses a keycard on an air-gapped computer, which neatly resolves the question of how to transmit signatures between the air-gapped system and the world. It is definitely not for the faint of heart, however.&lt;/p&gt;
&lt;p&gt;Once one has decided to use a keycard, the next order of business is to choose a specific device. That choice will be addressed in a followup article, where I will look at performance, physical design, and other considerations.&lt;/p&gt;

&lt;br clear=&quot;all&quot; /&gt;&lt;blockquote&gt;
&lt;table class=&quot;Form&quot; readability=&quot;1.2534246575342&quot;&gt;&lt;tr readability=&quot;2.5068493150685&quot;&gt;&lt;td&gt;&lt;strong&gt;Did you like this article?&lt;/strong&gt; Please accept our &lt;a href=&quot;https://lwn.net/Promo/slink-trial2-2/claim&quot;&gt;trial subscription offer&lt;/a&gt; to be able to see more content like it and to participate in the discussion.&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;
&lt;hr width=&quot;60%&quot; align=&quot;left&quot; /&gt;
(&lt;a href=&quot;https://lwn.net/login?target=/Articles/734767/&quot;&gt;Log in&lt;/a&gt; to post comments)</description>
<pubDate>Thu, 05 Oct 2017 12:53:14 +0000</pubDate>
<dc:creator>discreditable</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lwn.net/SubscriberLink/734767/b8509e00378301f9/</dc:identifier>
</item>
<item>
<title>URL to PDF Microservice</title>
<link>https://github.com/alvarcarto/url-to-pdf-api</link>
<guid isPermaLink="true" >https://github.com/alvarcarto/url-to-pdf-api</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/kimmobrunfeldt/url-to-pdf-api&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/83b0e95b38892b49184e07ad572c94c8038323fb/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667&quot; alt=&quot;Deploy&quot; data-canonical-src=&quot;https://www.herokucdn.com/deploy/button.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Web page PDF rendering done right. Microservice for rendering receipts, invoices, or any content. Packaged to an easy API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alvarcarto/url-to-pdf-api/blob/master/docs/logo.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/alvarcarto/url-to-pdf-api/raw/master/docs/logo.png&quot; alt=&quot;Logo&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; &lt;em&gt;Don't serve this API publicly in the internet unless you are aware of the risks. It allows API users to run any JavaScript code inside a Chrome in the server. It's fairly easy to expose content of files in the server. You have been warned!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;⭐️ Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rendered with Headless Chrome, using &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt;. The PDFs should match to the ones generated with a desktop Chrome.&lt;/li&gt;
&lt;li&gt;Sensible defaults but everything is configurable&lt;/li&gt;
&lt;li&gt;Single-page app (SPA) support. Waits until all network requests are finished before rendering. &lt;strong&gt;A feature which even most of the paid services don't have.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Easy deployment to Heroku. We love Lambda but.. Deploy to Heroku button&lt;/li&gt;
&lt;li&gt;Renders lazy loaded elements &lt;em&gt;(scrollPage option)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Supports optional &lt;code&gt;x-api-key&lt;/code&gt; authentication. &lt;em&gt;(&lt;code&gt;API_TOKENS&lt;/code&gt; env var)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Usage is as simple as &lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&lt;/a&gt;. There's also a &lt;code&gt;POST /api/render&lt;/code&gt; if you prefer to send options in the body.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;🔍 Why?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This microservice is useful when you need to automatically produce PDF files for whatever reason. The files could be receipts, weekly reports, invoices, or any content.&lt;/p&gt;
&lt;p&gt;PDFs can be generated in many ways, but one of them is to convert HTML+CSS content to a PDF. This API does just that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;🚀 Shortcuts:&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;How it works&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alvarcarto/url-to-pdf-api/blob/master/docs/heroku.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/alvarcarto/url-to-pdf-api/raw/master/docs/heroku.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Local setup is identical except Express API is running on your machine and requests are direct connections to it.&lt;/p&gt;
&lt;h3&gt;Good to know&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;By default, page's &lt;code&gt;@media print&lt;/code&gt; CSS rules are ignored&lt;/strong&gt;. We set Chrome to emulate &lt;code&gt;@media screen&lt;/code&gt; to make the default PDFs look more like actual sites. To get results closer to desktop Chrome, add &lt;code&gt;&amp;amp;emulateScreenMedia=false&lt;/code&gt; query parameter. See more at &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagepdfoptions&quot;&gt;Puppeteer API docs&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chrome is launched with &lt;code&gt;--no-sandbox --disable-setuid-sandbox&lt;/code&gt; flags to fix usage in Heroku. See &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/issues/290&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heavy pages may cause Chrome to crash if the server doesn't have enough RAM&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Examples&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Note: the demo Heroku app runs on a free dyno which sleep after idle. A request to sleeping dyno may take even 30 seconds.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use the default @media print instead of @media screen.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;emulateScreenMedia=false&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;emulateScreenMedia=false&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use scrollPage=true which tries to reveal all lazy loaded elements. Not perfect but better than without.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://www.andreaverlicchi.eu/lazyload/demos/lazily_load_lazyLoad.html&amp;amp;scrollPage=true&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://www.andreaverlicchi.eu/lazyload/demos/lazily_load_lazyLoad.html&amp;amp;scrollPage=true&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Render only the first page.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=https://en.wikipedia.org/wiki/Portable_Document_Format&amp;amp;pdf.pageRanges=1&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=https://en.wikipedia.org/wiki/Portable_Document_Format&amp;amp;pdf.pageRanges=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Render A5-sized PDF in landscape.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;pdf.format=A5&amp;amp;pdf.landscape=true&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;pdf.format=A5&amp;amp;pdf.landscape=true&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Add 2cm margins to the PDF.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;pdf.margin.top=2cm&amp;amp;pdf.margin.right=2cm&amp;amp;pdf.margin.bottom=2cm&amp;amp;pdf.margin.left=2cm&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;pdf.margin.top=2cm&amp;amp;pdf.margin.right=2cm&amp;amp;pdf.margin.bottom=2cm&amp;amp;pdf.margin.left=2cm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wait for extra 1000ms before render.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;waitFor=1000&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;waitFor=1000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wait for an element macthing the selector &lt;code&gt;input&lt;/code&gt; appears.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;waitFor=input&quot;&gt;https://url-to-pdf-api.herokuapp.com/api/render?url=http://google.com&amp;amp;waitFor=input&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;API&lt;/h2&gt;
&lt;p&gt;To understand the API options, it's useful to know how &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;Puppeteer&lt;/a&gt; is internally used by this API. The &lt;a href=&quot;https://github.com/alvarcarto/url-to-pdf-api/blob/master/src/core/pdf-core.js#L26&quot;&gt;render code&lt;/a&gt; is really simple, check it out. Render flow:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;page.setViewport(options)&lt;/code&gt;&lt;/strong&gt; where options matches &lt;code&gt;viewport.*&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Possibly&lt;/em&gt; &lt;strong&gt;&lt;code&gt;page.emulateMedia('screen')&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;emulateScreenMedia=true&lt;/code&gt; is set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;page.goto(url, options)&lt;/code&gt;&lt;/strong&gt; where options matches &lt;code&gt;goto.*&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Possibly&lt;/em&gt; &lt;strong&gt;&lt;code&gt;page.waitFor(numOrStr)&lt;/code&gt;&lt;/strong&gt; if e.g. &lt;code&gt;waitFor=1000&lt;/code&gt; is set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Possibly&lt;/em&gt; &lt;strong&gt;Scroll the whole page&lt;/strong&gt; to the end before rendering if e.g. &lt;code&gt;scrollPage=true&lt;/code&gt; is set.&lt;/p&gt;
&lt;p&gt;Useful if you want to render a page which lazy loads elements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;page.pdf(options)&lt;/code&gt;&lt;/strong&gt; where options matches &lt;code&gt;pdf.*&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;GET /api/render&lt;/h3&gt;
&lt;p&gt;All options are passed as query parameters. Parameter names match &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;Puppeteer options&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These options are exactly the same as its &lt;code&gt;POST&lt;/code&gt; counterpart, but options are expressed with the dot notation. E.g. &lt;code&gt;?pdf.scale=2&lt;/code&gt; instead of &lt;code&gt;{ pdf: { scale: 2 }}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The only required parameter is &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;URL to render as PDF.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;scrollPage&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Scroll page down before rendering to trigger lazy loading elements.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;emulateScreenMedia&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Emulates &lt;code&gt;@media screen&lt;/code&gt; when rendering the PDF.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;waitFor&lt;/td&gt;
&lt;td&gt;number or string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Number in ms to wait before render or selector element to wait before render.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;viewport.width&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1600&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Viewport width.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;viewport.height&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1200&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Viewport height.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;viewport.deviceScaleFactor&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Device scale factor (could be thought of as dpr).&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;viewport.isMobile&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether the meta viewport tag is taken into account.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;viewport.hasTouch&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specifies if viewport supports touch events.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;viewport.isLandscape&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specifies if viewport is in landscape mode.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;goto.timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Maximum navigation time in milliseconds, defaults to 30 seconds, pass 0 to disable timeout.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;goto.waitUntil&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;code&gt;networkidle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When to consider navigation succeeded. Options: &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;networkidle&lt;/code&gt;. &lt;code&gt;load&lt;/code&gt; = consider navigation to be finished when the load event is fired. &lt;code&gt;networkidle&lt;/code&gt; = consider navigation to be finished when the network activity stays &quot;idle&quot; for at least &lt;code&gt;goto.networkIdleTimeout&lt;/code&gt; ms.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;goto.networkIdleInflight&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Maximum amount of inflight requests which are considered &quot;idle&quot;. Takes effect only with &lt;code&gt;goto.waitUntil&lt;/code&gt;: 'networkidle' parameter.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;goto.networkIdleTimeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A timeout to wait before completing navigation. Takes effect only with waitUntil: 'networkidle' parameter.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.scale&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Scale of the webpage rendering.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.printBackground&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Print background graphics.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.displayHeaderFooter&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Display header and footer.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.landscape&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Paper orientation.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.pageRanges&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Paper ranges to print, e.g., '1-5, 8, 11-13'. Defaults to the empty string, which means print all pages.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.format&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Paper format. If set, takes priority over width or height options.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.width&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Paper width, accepts values labeled with units.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.height&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Paper height, accepts values labeled with units.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.margin.top&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Top margin, accepts values labeled with units.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.margin.right&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Right margin, accepts values labeled with units.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.margin.bottom&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Bottom margin, accepts values labeled with units.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pdf.margin.left&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Left margin, accepts values labeled with units.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
curl -o google.pdf https://url-to-pdf-api.herokuapp.com/api/render&lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt;url=http://google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;POST /api/render&lt;/h3&gt;
&lt;p&gt;All options are passed in a JSON body object. Parameter names match &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;Puppeteer options&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These options are exactly the same as its &lt;code&gt;GET&lt;/code&gt; counterpart.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Body&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The only required parameter is &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
{
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Url to render&lt;/span&gt;
  url&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; If we should emulate @media screen instead of print&lt;/span&gt;
  emulateScreenMedia&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;,

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; If true, page is scrolled to the end before rendering&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Note: this makes rendering a bit slower&lt;/span&gt;
  scrollPage&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;,

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Passed to Puppeteer page.waitFor()&lt;/span&gt;
  waitFor&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;,

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Passed to Puppeteer page.setViewport()&lt;/span&gt;
  viewport&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt; },

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Passed to Puppeteer page.goto() as the second argument after url&lt;/span&gt;
  goto&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt; },

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Passed to Puppeteer page.pdf()&lt;/span&gt;
  pdf&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; { &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt; }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
curl -o google.pdf -XPOST -d&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{&quot;url&quot;: &quot;http://google.com&quot;}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; -H&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;content-type: application/json&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; https://url-to-pdf-api.herokuapp.com/api/render
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;p&gt;To get this thing running, you have two options: run it in Heroku, or locally.&lt;/p&gt;
&lt;p&gt;The code requires Node 8+ (async, await).&lt;/p&gt;
&lt;h4&gt;1. Heroku deployment&lt;/h4&gt;
&lt;p&gt;Scroll this readme up to the Deploy to Heroku -button. Click it and follow instructions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; &lt;em&gt;Heroku dynos have a very low amount of RAM. Rendering heavy pages may cause Chrome instance to crash inside Heroku dyno. 512MB should be enough for most real-life use cases such as receipts. Some news sites may need even 2GB of RAM.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;2. Local development&lt;/h4&gt;
&lt;p&gt;First, clone the repository and cd into it.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;code&gt;cp .env.sample .env&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill in the blanks in &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;source .env&lt;/code&gt; or &lt;code&gt;bash .env&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Or use &lt;a href=&quot;https://github.com/kennethreitz/autoenv&quot;&gt;autoenv&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt; Start express server locally&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server runs at &lt;a href=&quot;http://localhost:9000&quot;&gt;http://localhost:9000&lt;/a&gt; or what &lt;code&gt;$PORT&lt;/code&gt; env defines&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Techstack&lt;/h3&gt;
&lt;/article&gt;</description>
<pubDate>Thu, 05 Oct 2017 11:12:15 +0000</pubDate>
<dc:creator>kimmobru</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/24204975?v=4&amp;s=400</og:image>
<og:type>object</og:type>
<og:title>alvarcarto/url-to-pdf-api</og:title>
<og:url>https://github.com/alvarcarto/url-to-pdf-api</og:url>
<og:description>url-to-pdf-api - Web page PDF rendering done right. Self-hosted service for rendering receipts, invoices, or any content.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/alvarcarto/url-to-pdf-api</dc:identifier>
</item>
</channel>
</rss>