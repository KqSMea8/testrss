<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Launch HN: The Buttermilk  Company (YC S18) – Homemade Indian Food in 5 Minutes</title>
<link>https://news.ycombinator.com/item?id=17767789</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=17767789</guid>
<description>Hey HN,
&lt;p&gt;I’m Mitra Raman, the founder/CEO of The Buttermilk Company (&lt;a href=&quot;https:///www.thebuttermilkco.com&quot; rel=&quot;nofollow&quot;&gt;https:///www.thebuttermilkco.com&lt;/a&gt;). We help you make authentic, fresh Indian food in 5 minutes by just adding water to our products.&lt;/p&gt;&lt;p&gt;As an Indian-American in my 20s, I grew up eating my mom’s homemade Indian food everyday. When I moved away from home to attend Carnegie Mellon University, I was homesick for the first time and realized how hard it was to find anything that resembled my mom’s food. I either had to make it myself (finding the Indian grocery store + following my mom’s recipe took way too much time) or would settle for whatever generic dishes at the local Indian restaurant. The options were expensive, time-consuming, or tasted horrible.&lt;/p&gt;
&lt;p&gt;Two years into my job as an Software Engineer at Amazon, I asked my mom to help me make her rasam. She gave me all the ingredients in a ziploc bag and told me to just add hot water! I asked my friends about how they coped with homesickness and realized that most parents were also figuring out their own ways of getting their kids’ favorites foods to them when they moved. That’s how the idea for Buttermilk started!&lt;/p&gt;
&lt;p&gt;We crowdsource our recipes from real people (keeping our product truly authentic) and develop them into products that are super easy for our customers to make. If you’ve ever asked your mom to send a family recipe to you, you know how hard it is to get this right! Our team spends hours in the kitchen tweaking each recipe so we can prep and cook it just enough that the customer can complete the cooking with water. We have to be careful to not over-prep such that the taste and nutritional value erode over time.&lt;/p&gt;
&lt;p&gt;We use fresh and non-GMO ingredients, make everything from scratch (seriously, even the garam masala), and deliver our perishable products in sustainable packaging. Our production is extremely detail-oriented and time-consuming because we are recreating recipes for one family into large-scale batches that need to maintain the quality of its original recipe. To improve efficiency, we have built software to track food production, predict incoming volume, and help our production and fulfillment teams communicate. We’re also exploring new shelf-life extension technologies (such as HPP) so our products can last a lot longer. Currently, they must be refrigerated for 5-7 days or frozen for up to 3 months -- if you don’t eat them before then, that is!&lt;/p&gt;
&lt;p&gt;In terms of market size: there are over 4 million Indian immigrants in the U.S. This demographic, like all other ethnic groups, is poorly served by the existing food options when it comes to their cuisines. And of course there is the population of everyone who just likes Indian food and can’t find or make it! Though we are starting with Indian cuisine, we definitely don't plan to stop there. The market for ethnic foods in the U.S. is at least $5B. But in good startup style, we've started with the specific problem we ourselves had.&lt;/p&gt;
&lt;p&gt;We’re super eager to hear your feedback, ideas, and experiences in this space or as it relates to our type of product.&lt;/p&gt;
</description>
<pubDate>Wed, 15 Aug 2018 17:15:42 +0000</pubDate>
<dc:creator>mitraraman</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=17767789</dc:identifier>
</item>
<item>
<title>Markov Chains Explained Visually (2014)</title>
<link>http://setosa.io/ev/markov-chains/</link>
<guid isPermaLink="true" >http://setosa.io/ev/markov-chains/</guid>
<description>&lt;p&gt;

&lt;h3 class=&quot;by-line&quot;&gt;Explained Visually&lt;/h3&gt;
&lt;/p&gt;&lt;p&gt;By &lt;a href=&quot;http://twitter.com/vicapow&quot;&gt;Victor Powell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;with text by &lt;a href=&quot;http://twitter.com/lewislehe&quot;&gt;Lewis Lehe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Markov chains, named after &lt;a href=&quot;https://en.wikipedia.org/wiki/Andrey_Markov&quot;&gt;Andrey Markov&lt;/a&gt;, are mathematical systems that hop from one &quot;state&quot; (a situation or set of values) to another. For example, if you made a Markov chain model of a baby's behavior, you might include &quot;playing,&quot; &quot;eating&quot;, &quot;sleeping,&quot; and &quot;crying&quot; as states, which together with other behaviors could form a 'state space': a list of all possible states. In addition, on top of the state space, a Markov chain tells you the probabilitiy of hopping, or &quot;transitioning,&quot; from one state to any other state---e.g., the chance that a baby currently playing will fall asleep in the next five minutes without crying first.&lt;/p&gt;
&lt;p&gt;A simple, two-state Markov chain is shown below.&lt;/p&gt;
&lt;p ng-controller=&quot;NoControlsCtrl&quot;&gt;&lt;input type=&quot;range&quot; ng-model=&quot;speedRange&quot; min=&quot;1&quot; max=&quot;20&quot; step=&quot;1&quot; class=&quot;speedRange&quot;/&gt;&lt;label&gt;speed&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;With two states (A and B) in our state space, there are 4 possible transitions (not 2, because a state can transition back into itself). If we're at 'A' we could transition to 'B' or stay at 'A'. If we're at 'B' we could transition to 'A' or stay at 'B'. In this two state diagram, the probability of transitioning from any state to any other state is 0.5.&lt;/p&gt;
&lt;p&gt;Of course, real modelers don't always draw out Markov chain diagrams. Instead they use a &quot;transition matrix&quot; to tally the transition probabilities. Every state in the state space is included once as a row and again as a column, and each cell in the matrix tells you the probability of transitioning from its row's state to its column's state. So, in the matrix, the cells do the same job that the arrows do in the diagram.&lt;/p&gt;

&lt;p&gt;If the state space adds one state, we add one row and one column, adding one cell to every existing column and row. This means the number of cells grows quadratically as we add states to our Markov chain. Thus, a transition matrix comes in handy pretty quickly, unless you want to draw a jungle gym Markov chain diagram.&lt;/p&gt;
&lt;p&gt;One use of Markov chains is to include real-world phenomena in computer simulations. For example, we might want to check how frequently a new dam will overflow, which depends on the number of rainy days in a row. To build this model, we start out with the following pattern of rainy (R) and sunny (S) days:&lt;/p&gt;

&lt;p&gt;One way to simulate this weather would be to just say &quot;Half of the days are rainy. Therefore, every day in our simulation will have a fifty percent chance of rain.&quot; This rule would generate the following sequence in simulation:&lt;/p&gt;

&lt;p&gt;Did you notice how the above sequence doesn't look quite like the original? The second sequence seems to jump around, while the first one (the real data) seems to have a &quot;stickyness&quot;. In the real data, if it's sunny (S) one day, then the next day is also much more likely to be sunny.&lt;/p&gt;
&lt;p&gt;We can minic this &quot;stickyness&quot; with a two-state Markov chain. When the Markov chain is in state &quot;R&quot;, it has a 0.9 probability of staying put and a 0.1 chance of leaving for the &quot;S&quot; state. Likewise, &quot;S&quot; state has 0.9 probability of staying put and a 0.1 chance of transitioning to the &quot;R&quot; state.&lt;/p&gt;

&lt;p&gt;In the hands of metereologists, ecologists, computer scientists, financial engineers and other people who need to model big phenomena, Markov chains can get to be quite large and powerful. For example, the algorithm Google uses to determine the order of search results, called &lt;a href=&quot;https://en.wikipedia.org/wiki/PageRank&quot;&gt;PageRank&lt;/a&gt;, is a type of Markov chain.&lt;/p&gt;

&lt;p&gt;Above, we've included a Markov chain &quot;playground&quot;, where you can make your own Markov chains by messing around with a transition matrix. Here's a few to work from as an example: &lt;a href=&quot;javascript:update_playground('long')&quot;&gt;ex1&lt;/a&gt;, &lt;a href=&quot;javascript:update_playground('large')&quot;&gt;ex2&lt;/a&gt;, &lt;a href=&quot;javascript:update_playground('three')&quot;&gt;ex3&lt;/a&gt; or generate one &lt;a href=&quot;javascript:update_playground('random')&quot;&gt;randomly&lt;/a&gt;. The transition matrix text will turn red if the provided matrix isn't a valid transition matrix. &lt;em&gt;The rows of the transition matrix must total to 1.&lt;/em&gt; There also has to be the same number of rows as columns.&lt;/p&gt;
&lt;p&gt;You can also access a fullscreen version at &lt;a href=&quot;http://setosa.io/markov/index.html&quot;&gt;setosa.io/markov&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 15 Aug 2018 14:43:25 +0000</pubDate>
<dc:creator>aogl</dc:creator>
<og:image>/ev/markov-chains/fb-thumb.png</og:image>
<og:title>Markov Chains explained visually</og:title>
<dc:format>text/html</dc:format>
<dc:identifier>http://setosa.io/ev/markov-chains/</dc:identifier>
</item>
<item>
<title>The easiest way to keep your web apps accessible: Just use text</title>
<link>https://blog.logrocket.com/the-easiest-way-to-keep-your-web-apps-accessible-c2b57506cc2a</link>
<guid isPermaLink="true" >https://blog.logrocket.com/the-easiest-way-to-keep-your-web-apps-accessible-c2b57506cc2a</guid>
<description>&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;146.59336332958&quot;&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*uuQzakQc52pdhRw9KB0NPA.jpeg&quot; data-width=&quot;1920&quot; data-height=&quot;1280&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*uuQzakQc52pdhRw9KB0NPA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*uuQzakQc52pdhRw9KB0NPA.jpeg&quot;/&gt;&lt;/div&gt;

&lt;p name=&quot;039e&quot; id=&quot;039e&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The web is no longer just a collection of static text documents with a few images and GIFs thrown into the mix. Over the last twenty years or so, we’ve seen the web coalesce into a slurry of web apps small and large, each one more complex and dynamic than the last, strung together with APIs, scripts, and more data than anyone could have ever imagined.&lt;/p&gt;
&lt;p name=&quot;5b08&quot; id=&quot;5b08&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For web developers, it can be overwhelming to keep up, despite being knee-deep in those technologies every single day. And in our perennial quest to stay current, a lot of things get left behind.&lt;/p&gt;
&lt;p name=&quot;d7aa&quot; id=&quot;d7aa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;One of the easiest things to forget about — but arguably one of the most important — is accessibility. Just as the web itself has grown, so has the sheer number and diversity of its users. Everyone from kids to seniors, with varying degrees of ability and disability, rely on the web for shopping, entertainment, education, and even life-providing medical information and supplies.&lt;/p&gt;
&lt;p name=&quot;4200&quot; id=&quot;4200&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But accessibility isn’t just about disabled users, though they are often the focus. Accessibility is about opening the web to everyone. The folks over at 18F &lt;a href=&quot;https://accessibility.18f.gov/&quot; data-href=&quot;https://accessibility.18f.gov/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;put it well:&lt;/a&gt;&lt;/p&gt;
&lt;blockquote name=&quot;b2f9&quot; id=&quot;b2f9&quot; class=&quot;graf graf--pullquote graf-after--p&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--pullquote-em&quot;&gt;Accessibility is one of the most important aspects of modern web development. Accessibility means the greatest number of users can view your content. It means search engines will be able to read your site more completely. Users of all types will have a better experience if you take accessibility concerns into account.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;a0ca&quot; id=&quot;a0ca&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;Keeping increasingly complex web apps accessible is a necessity. Fortunately, there is one thing you can do to keep any web app accessible to as many users as possible, and lessen the burden of development and maintenance for yourself, too.&lt;/p&gt;
&lt;p name=&quot;a329&quot; id=&quot;a329&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Just use text.&lt;/p&gt;
&lt;p name=&quot;f1e6&quot; id=&quot;f1e6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;a href=&quot;https://logrocket.com/signup/&quot; data-href=&quot;https://logrocket.com/signup/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;LogRocket is working on the perfect front-end bug report. Click to check it out.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 name=&quot;7bf5&quot; id=&quot;7bf5&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Text wins&lt;/h3&gt;
&lt;p name=&quot;4746&quot; id=&quot;4746&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;In the early days of the web, nearly everything was text, marked up with a fairly limited number of HTML tags. In fact, it wasn’t until &lt;a href=&quot;https://thehistoryoftheweb.com/the-origin-of-the-img-tag/&quot; data-href=&quot;https://thehistoryoftheweb.com/the-origin-of-the-img-tag/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Marc Andreessen introduced&lt;/a&gt; the img tag into Mosaic in 1993 that inline images inside of web pages became available (previously images were accessed through hyperlinks).&lt;/p&gt;
&lt;p name=&quot;8bff&quot; id=&quot;8bff&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;While images opened up and helped popularize the web, the heart of the web was — and still is — text. Every web document is text, regardless of what else is included with it. HTML, text. CSS, text. JavaScript, text. Hell, the protocols that transmit all of that information are declared via text.&lt;/p&gt;
&lt;p name=&quot;0a1d&quot; id=&quot;0a1d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The only thing that has changed is how complex we make that text.&lt;/p&gt;
&lt;p name=&quot;9d73&quot; id=&quot;9d73&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But text is still the way to build the web. Even as more content is delivered via images, videos, and audio, text is the single best way to keep that content accessible to the widest range of users. That’s because text is easily:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;96b1&quot; id=&quot;96b1&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Read by users&lt;/li&gt;
&lt;li name=&quot;5dea&quot; id=&quot;5dea&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Read by machines (search engines, screen readers, etc.)&lt;/li&gt;
&lt;li name=&quot;814e&quot; id=&quot;814e&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Translated&lt;/li&gt;
&lt;li name=&quot;0ca1&quot; id=&quot;0ca1&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Styled&lt;/li&gt;
&lt;li name=&quot;11c7&quot; id=&quot;11c7&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Zoomed&lt;/li&gt;
&lt;li name=&quot;d362&quot; id=&quot;d362&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;And edited&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;d499&quot; id=&quot;d499&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Additionally, text files are typically much lighter than images, audio, and video. Text helps ease the burden on users with limited bandwidth or slow connections, helping to fight the bloat in modern websites, something Nick Heer recently referred to as &lt;a href=&quot;https://pxlnv.com/blog/bullshit-web/&quot; data-href=&quot;https://pxlnv.com/blog/bullshit-web/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;The Bullshit Web&lt;/em&gt;&lt;/a&gt;. This combination of increased performance and accessible features makes the original foundation of the web hard to beat.&lt;/p&gt;
&lt;p name=&quot;52ab&quot; id=&quot;52ab&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If we all agree that text is the most usable element on the web, then how can we ensure that our web apps and the content they deliver best put it to work?&lt;/p&gt;
&lt;h3 name=&quot;8161&quot; id=&quot;8161&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Semantic markup&lt;/h3&gt;
&lt;p name=&quot;fb79&quot; id=&quot;fb79&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;When delivering text to users, we include it in the HTML document. Although the earliest days of the web relied on around 18 tags to markup those documents, we now have access to over 100 tags when creating our documents.&lt;/p&gt;
&lt;p name=&quot;f380&quot; id=&quot;f380&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Many of the tags introduced in HTML5 focus on providing added semantics to make it clearer to users and machines what that content is. Tags like section, article, nav, header, footer, and aside better describe their content. Combined with old standards like p, strong, and all of the headings, we can confidently mark up content knowing that it will be accessible to more users than ever before.&lt;/p&gt;
&lt;p name=&quot;2292&quot; id=&quot;2292&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When building your own pages and applications, you should strive to keep as much content as possible in semantic markup.&lt;/p&gt;
&lt;p name=&quot;6bea&quot; id=&quot;6bea&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You can always add additional functionality to those tags using things like ARIA roles or data attributes, but the core of your application should rely on semantic elements for marking up content.&lt;/p&gt;
&lt;p name=&quot;a8a3&quot; id=&quot;a8a3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It’s easy to see how headings and paragraphs work for blocks of copy, but what about more complicated application features like data tables, cards, notifications, tooltips, and menu buttons? There are some solid patterns that can be used to build those features.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;50bd&quot; id=&quot;50bd&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Heydon Pickering’s &lt;a href=&quot;https://inclusive-components.design/&quot; data-href=&quot;https://inclusive-components.design/&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Inclusive Components&lt;/a&gt; is one of the best, going into detail about how to craft many of those components.&lt;/li&gt;
&lt;li name=&quot;c8fc&quot; id=&quot;c8fc&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Dave Rupert’s &lt;a href=&quot;https://davatron5000.github.io/a11y-nutrition-cards/&quot; data-href=&quot;https://davatron5000.github.io/a11y-nutrition-cards/&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Nutrition Cards for Accessible Components&lt;/a&gt; is new, but a great and growing resource for understanding how some of those common components should properly function.&lt;/li&gt;
&lt;li name=&quot;f908&quot; id=&quot;f908&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;&lt;a href=&quot;https://a11yproject.com/patterns&quot; data-href=&quot;https://a11yproject.com/patterns&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;The A11Y Project’s Patterns list&lt;/a&gt; is a great roundup of links.&lt;/li&gt;
&lt;li name=&quot;b971&quot; id=&quot;b971&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Marcy Sutton has a &lt;a href=&quot;https://marcysutton.github.io/accessibility-of-web-components/slides.html#/slide1&quot; data-href=&quot;https://marcysutton.github.io/accessibility-of-web-components/slides.html#/slide1&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;cool presentation&lt;/a&gt; on the topic.&lt;/li&gt;
&lt;li name=&quot;36c0&quot; id=&quot;36c0&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;And, when in doubt, you can always refer back to &lt;a href=&quot;https://medium.com/@addyosmani/accessible-ui-components-for-the-web-39e727101a67&quot; data-href=&quot;https://medium.com/@addyosmani/accessible-ui-components-for-the-web-39e727101a67&quot; class=&quot;markup--anchor markup--li-anchor&quot; target=&quot;_blank&quot;&gt;this helpful guide&lt;/a&gt; from Addy Osmani.&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;134e&quot; id=&quot;134e&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Even with those complex components, the underlying principle is the same: Use semantic markup. If you’re building something wildly complex that no one has ever seen before, sit down, map out what the child elements of that component are, and try to use semantic markup for those child elements.&lt;/p&gt;
&lt;h3 name=&quot;71f5&quot; id=&quot;71f5&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Styling accessible text&lt;/h3&gt;
&lt;p name=&quot;97c9&quot; id=&quot;97c9&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Once you have your text marked up with semantic tags, you need to style it. Thankfully, there are &lt;a href=&quot;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&quot; data-href=&quot;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;clear guidelines&lt;/a&gt; for styling your text so that it’s accessible to everyone.&lt;/p&gt;
&lt;p name=&quot;12ea&quot; id=&quot;12ea&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The first thing you should do is ensure that your text is zoomable. Many users with low-vision use browser or OS-level zoom controls to bump up the text size on their screens. But some developers still disable zoom on web pages with the following:&lt;/p&gt;
&lt;pre name=&quot;827e&quot; id=&quot;827e&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&amp;lt;meta name=”viewport” content=”initial-scale=1, maximum-scale=1&quot;&amp;gt;
&lt;/pre&gt;
&lt;p name=&quot;da6c&quot; id=&quot;da6c&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;When set the same as the initial scale, maximum-scale prevents users from enlarging the text. Keeping text zoomable is therefore easy: Just remove that value.&lt;/p&gt;
&lt;p name=&quot;3049&quot; id=&quot;3049&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When it comes to the actual styling of text, the main things you want to consider are &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;size&lt;/strong&gt; and &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;contrast&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--outsetColumn&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*tXbauN7gEIweTGBj&quot; data-width=&quot;1600&quot; data-height=&quot;526&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*tXbauN7gEIweTGBj&quot; src=&quot;https://cdn-images-1.medium.com/max/2000/0*tXbauN7gEIweTGBj&quot;/&gt;&lt;/div&gt;
Contrast is a key when it comes to visual accessibility.&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;143.42656428688&quot;&gt;
&lt;p name=&quot;4d20&quot; id=&quot;4d20&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The main consideration is making text easy to ready without forcing users to zoom in. A baseline font size of 14px is recommended, but larger than that is often better.&lt;/p&gt;
&lt;p name=&quot;7c23&quot; id=&quot;7c23&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For contrast, the rule is simple, as specified in &lt;a href=&quot;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&quot; data-href=&quot;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Guideline 1.4 of the WCAG 2.0 Recommendation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote name=&quot;4a23&quot; id=&quot;4a23&quot; class=&quot;graf graf--pullquote graf-after--p&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--pullquote-em&quot;&gt;Make it easier for users to see and hear content including separating foreground from background.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;d8ce&quot; id=&quot;d8ce&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;The Guideline goes on to make recommendations on not using color as the only means of conveying information, minimum contrast ratios, and even text resizing, but the idea is simple: Clearly contrast text from its background. That means keeping text large and either dark enough (when on a light background) or light enough (when on a dark background). There are a few tools for checking contrast, including &lt;a href=&quot;https://webaim.org/resources/contrastchecker/&quot; data-href=&quot;https://webaim.org/resources/contrastchecker/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;WebAIM’s Color Contrast Checker&lt;/a&gt; and even tools for the design phase, like &lt;a href=&quot;http://www.getstark.co/&quot; data-href=&quot;http://www.getstark.co/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Stark for Sketch&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;c81e&quot; id=&quot;c81e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There’s a lot more that goes into designing and styling text, but I’ll leave it to you to dig into that topic on your own. Hint: &lt;a href=&quot;http://book.webtypography.net/&quot; data-href=&quot;http://book.webtypography.net/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Here’s a good starting point&lt;/a&gt;.&lt;/p&gt;
&lt;h3 name=&quot;9775&quot; id=&quot;9775&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Text and images&lt;/h3&gt;
&lt;p name=&quot;e06a&quot; id=&quot;e06a&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Images still serve a vital role in conveying information and creating a more enjoyable experience for users. But, you need to keep your images just as accessible as the rest of your application.&lt;/p&gt;
&lt;p name=&quot;0752&quot; id=&quot;0752&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To do that, you should use alternative (ALT) text on your img tags. ALT text provides some context for the content of images so that users with low-vision can better understand what’s in the image, typically when using assistive technology like screen readers. You use ALT text by adding the alt attribute with a value of the text equivalent of your image, like so:&lt;/p&gt;
&lt;pre name=&quot;772f&quot; id=&quot;772f&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&amp;lt;img src=“https://example.com/image.png” alt=“developer in an office working feverishly to hit a deadline on a software project” /&amp;gt;
&lt;/pre&gt;
&lt;p name=&quot;06cc&quot; id=&quot;06cc&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Even when working with icons or icon fonts, you can keep them accessible using text. Decorative icons (ones that don’t convey vital information) should still use the alt attribute but keep the value empty. Then you can apply the aria-hidden attribute to ensure that it’s ignored by screen readers:&lt;/p&gt;
&lt;pre name=&quot;2818&quot; id=&quot;2818&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&amp;lt;img src=“https://example.com/icon.svg” alt=“” aria-hidden /&amp;gt;
&lt;/pre&gt;
&lt;p name=&quot;f868&quot; id=&quot;f868&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;But for non-decorative icons, you can keep them accessible by either using ALT text on the image or loading the icon using CSS with HTML text as a hidden fallback for screen readers, similar to how &lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility&quot; data-href=&quot;https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Font Awesome&lt;/a&gt; does it:&lt;/p&gt;
&lt;pre name=&quot;4514&quot; id=&quot;4514&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&amp;lt;i aria-hidden class=”fas fa-car” title=”Time to destination by car”&amp;gt;&amp;lt;/i&amp;gt;&lt;br/&gt;&amp;lt;span class=”sr-only”&amp;gt;Time to destination by car:&amp;lt;/span&amp;gt;&lt;br/&gt;&amp;lt;span&amp;gt;4 minutes&amp;lt;/span&amp;gt;
&lt;/pre&gt;
&lt;p name=&quot;f574&quot; id=&quot;f574&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;The icon is loaded via CSS on the i tag, which includes a title for mouse users. The span immediately following is hidden with CSS, but is still available to screen readers. It’s a clever solution, one that both &lt;a href=&quot;https://css-tricks.com/can-make-icon-system-accessible/&quot; data-href=&quot;https://css-tricks.com/can-make-icon-system-accessible/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CSS-Tricks&lt;/a&gt; and &lt;a href=&quot;https://www.filamentgroup.com/lab/bulletproof_icon_fonts.html&quot; data-href=&quot;https://www.filamentgroup.com/lab/bulletproof_icon_fonts.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;The Filament Group&lt;/a&gt; support (with a few variations for good measure).&lt;/p&gt;
&lt;p name=&quot;438c&quot; id=&quot;438c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Writing effective ALT text is an art form in itself. Thankfully, there are some great resources out there, one of the best being &lt;a href=&quot;https://webaim.org/techniques/alttext/&quot; data-href=&quot;https://webaim.org/techniques/alttext/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;WebAIM’s Alternative Text guide.&lt;/a&gt;&lt;/p&gt;
&lt;h3 name=&quot;d69e&quot; id=&quot;d69e&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Accessibility and frameworks&lt;/h3&gt;
&lt;p name=&quot;d8df&quot; id=&quot;d8df&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Although JavaScript frameworks like React and Vue are changing the way many developers build web applications, they don’t change the need for those applications to remain accessible to a wide variety of users. They just introduce a few complications for us. But we can keep those framework-driven apps accessible by following a simple rule:&lt;/p&gt;
&lt;p name=&quot;6f0b&quot; id=&quot;6f0b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Don’t let the framework force you into poor choices.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;9c9b&quot; id=&quot;9c9b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;While frameworks like React do have suggested ways of accomplishing things, they don’t generally force you into abandoning non-semantic HTML — that’s the developer’s choice. It’s up to you to create thoughtful, well-designed, and accessible components, so stick to the fundamentals of semantic HTML.&lt;/p&gt;
&lt;p name=&quot;6031&quot; id=&quot;6031&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;A good example of this can be taken from React’s own documentation. &lt;a href=&quot;https://reactjs.org/docs/components-and-props.html&quot; data-href=&quot;https://reactjs.org/docs/components-and-props.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;When discussing components and props&lt;/a&gt;, they use a comment as an example:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*ycqHgCxgModyHzG8&quot; data-width=&quot;1472&quot; data-height=&quot;1098&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*ycqHgCxgModyHzG8&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*ycqHgCxgModyHzG8&quot;/&gt;&lt;/div&gt;
The default markup for a React component.
&lt;p name=&quot;3277&quot; id=&quot;3277&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;What if we replaced some of those div elements with more descriptive HTML tags?&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*jdscAIXApOm29qzT&quot; data-width=&quot;1472&quot; data-height=&quot;1098&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*jdscAIXApOm29qzT&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*jdscAIXApOm29qzT&quot;/&gt;&lt;/div&gt;
Could we make that component a bit more accessible?
&lt;p name=&quot;c2fc&quot; id=&quot;c2fc&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot; data-href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;As suggested by MDN&lt;/a&gt;, the comment could be more semantically described with the article element, with the comment text being a paragraph. Additionally, the comment date could be marked up with the more semantic time element, which could even include the machine-readable version of the comment publication date in the datetime attribute. Depending on your application’s page hierarchy, you could change the user’s name to be a heading. Or, how about making the entire user info section a figure and using figcaption to markup the name?&lt;/p&gt;
&lt;p name=&quot;f5bc&quot; id=&quot;f5bc&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Frameworks like React also have a few gotchas that you need to worry about when attempting to keep your apps accessible. In particular, React reserves keywords that can sometimes add confusion or break accessibility. A good example of this is when building forms.&lt;/p&gt;
&lt;p name=&quot;98c9&quot; id=&quot;98c9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Accessible forms will always include labels for inputs, which clearly describe what that input is to be used for. In HTML, the label and input are linked with the for attribute and an id on the input itself. Since for is a reserved keyword in JavaScript, you need to use htmlFor instead. The same thing applies to class, which becomes className.&lt;/p&gt;
&lt;p name=&quot;fc74&quot; id=&quot;fc74&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But, when using ARIA attributes in React, you don’t need to camelCase them. Fortunately, they are fully supported in JSX, so including something like aria-hidden in an icon component works perfectly.&lt;/p&gt;
&lt;h3 name=&quot;0533&quot; id=&quot;0533&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Keep your apps accessible&lt;/h3&gt;
&lt;p name=&quot;ce70&quot; id=&quot;ce70&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;In the U.S. alone, &lt;a href=&quot;http://www.interactiveaccessibility.com/accessibility-statistics&quot; data-href=&quot;http://www.interactiveaccessibility.com/accessibility-statistics&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;over 18% of the population have some sort of disability&lt;/a&gt; and the saying, “At some point, we’ll all be disabled” is true. Whether you experience a temporary or permanent disability, you’ll likely be faced with challenges when using digital technology at some point in your life.&lt;/p&gt;
&lt;p name=&quot;329d&quot; id=&quot;329d&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;As developers, we’re in a unique position. We can choose to either help people or hinder them. Regardless, we will impact their lives in some way. By being more deliberate in our choices as developers, especially by favoring text and thoughtful, semantic markup, we have the power to improve the lives of a lot of people. So take some time to think about your applications and the techniques you use to build them.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 15 Aug 2018 14:04:37 +0000</pubDate>
<dc:creator>efunction</dc:creator>
<og:title>The easiest way to keep your web apps accessible: Just use text</og:title>
<og:url>https://blog.logrocket.com/the-easiest-way-to-keep-your-web-apps-accessible-c2b57506cc2a</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*uuQzakQc52pdhRw9KB0NPA.jpeg</og:image>
<og:description>Let's be more deliberate in our choices as developers, especially by favoring text and thoughtful, semantic markup.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.logrocket.com/the-easiest-way-to-keep-your-web-apps-accessible-c2b57506cc2a?gi=ef7c3da69f10</dc:identifier>
</item>
<item>
<title>Companies Shouldn’t Be Accountable Only to Shareholders</title>
<link>https://www.wsj.com/articles/companies-shouldnt-be-accountable-only-to-shareholders-1534287687</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/companies-shouldnt-be-accountable-only-to-shareholders-1534287687</guid>
<description>&lt;div class=&quot;clearfix byline-wrap&quot;&gt;


    

        
    &lt;div class=&quot;byline&quot;&gt;
    
    
        &lt;span&gt;By&lt;/span&gt;
    
              &lt;div class=&quot;author mobile-scrim hasMenu&quot; data-scrim=&quot;{&amp;quot;type&amp;quot;:&amp;quot;author&amp;quot;,&amp;quot;header&amp;quot;:&amp;quot;Elizabeth Warren&amp;quot;,&amp;quot;subhead&amp;quot;:&amp;quot;The Wall Street Journal&amp;quot;,&amp;quot;list&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;bio&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://www.wsj.com/news/author/8131&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;Biography&amp;quot;}]}&quot; itemscope=&quot;&quot; itemprop=&quot;author&quot; itemtype=&quot;http://schema.org/Person&quot;&gt;
                  &lt;span class=&quot;name&quot; itemprop=&quot;name&quot;&gt;Elizabeth Warren&lt;/span&gt;
                  &lt;ul class=&quot;author-info&quot;&gt;&lt;li class=&quot;tri&quot;/&gt;
                    &lt;div class=&quot;info-name&quot;&gt;Elizabeth Warren&lt;/div&gt;
                    &lt;div class=&quot;info-title&quot;&gt;The Wall Street Journal&lt;/div&gt;
                    &lt;li&gt;&lt;a href=&quot;https://www.wsj.com/news/author/8131&quot; class=&quot;author icon bio&quot;&gt;Biography&lt;/a&gt;&lt;/li&gt;
                    
                    
                    
                    
                  &lt;/ul&gt;&lt;/div&gt;

    &lt;/div&gt;
    
    &lt;time class=&quot;timestamp&quot;&gt;
      Aug. 14, 2018 7:01 p.m. ET
    &lt;/time&gt;&lt;/div&gt;

  



       &lt;p&gt;Corporate profits are booming, but average wages haven’t budged over the past year. The U.S. economy has run this way for decades, partly because of a fundamental change in business practices dating back to the 1980s. On Wednesday I’m introducing legislation to fix it.&lt;/p&gt; &lt;p&gt;American corporations exist only because the American people grant them charters. Those charters confer valuable privileges—such as limited legal liability for their owners—that enable businesses to turn a profit. What do Americans get in return? What are the obligations of corporate citizenship in the U.S.?&lt;/p&gt;




      &lt;div class=&quot;paywall&quot;&gt;




       &lt;p&gt;For much of U.S. history, the answers were clear. Corporations sought to succeed in the marketplace, but they also recognized their obligations to employees, customers and the community. As recently as 1981, the Business Roundtable—which represents large U.S. companies—stated that corporations “have a responsibility, first of all, to make available to the public quality goods and services at fair prices, thereby earning a profit that attracts investment to continue and enhance the enterprise, provide jobs, and build the economy.” This approach worked. American companies and workers thrived. &lt;/p&gt; &lt;p&gt;Late in the 20th century, the dynamic changed. Building on work by conservative economist 




      Milton Friedman, 




       a new theory emerged that corporate directors had only one obligation: to maximize shareholder returns. By 1997 the Business Roundtable declared that the “principal objective of a business enterprise is to generate economic returns to its owners.”&lt;/p&gt; &lt;p&gt;That shift has had a tremendous effect on the economy. In the early 1980s, large American companies sent less than half their earnings to shareholders, spending the rest on their employees and other priorities. But between 2007 and 2016, large American companies dedicated 93% of their earnings to shareholders. Because the wealthiest 10% of U.S. households own 84% of American-held shares, the obsession with maximizing shareholder returns effectively means America’s biggest companies have dedicated themselves to making the rich even richer.&lt;/p&gt; &lt;p&gt;In the four decades after World War II, shareholders on net contributed more than $250 billion to U.S. companies. But since 1985 they have extracted almost $7 trillion. That’s trillions of dollars in profits that might otherwise have been reinvested in the workers who helped produce them.&lt;/p&gt; &lt;p&gt;Before “shareholder value maximization” ideology took hold, wages and productivity grew at roughly the same rate. But since the early 1980s, real wages have stagnated even as productivity has continued to rise. Workers aren’t getting what they’ve earned. &lt;/p&gt; &lt;p&gt;Companies also are setting themselves up to fail. Retained earnings were once the foundation for long-term investments. But from 1990 to 2015, nonfinancial U.S. companies invested trillions less than projected, funneling earnings to shareholders instead. This underinvestment handcuffs U.S. enterprise and bestows an advantage on foreign competitors. &lt;/p&gt; &lt;p&gt;The problem may get worse, because executives have a strong financial incentive to prioritize shareholder returns. Before 1980, top CEOs were rarely compensated in equity. Today it accounts for 62% of their pay. Many executives receive additional company shares as a reward for producing short-term share-price increases. This feedback loop has sent CEO pay skyrocketing. The average CEO of a big company now makes 361 times what the average worker makes, up from 42 times in 1980.&lt;/p&gt; &lt;p&gt;Corporate charters, which define the structure and obligations of U.S. companies, are an obvious tool for addressing these skewed incentives. But companies are chartered at the state level. Most states don’t want to demand more of companies, lest they incorporate elsewhere.&lt;/p&gt; &lt;p&gt;That’s where my bill comes in. The Accountable Capitalism Act restores the idea that giant American corporations should look out for American interests. Corporations with more than $1 billion in annual revenue would be required to get a federal corporate charter. The new charter requires corporate directors to consider the interests of all major corporate stakeholders—not only shareholders—in company decisions. Shareholders could sue if they believed directors weren’t fulfilling those obligations.&lt;/p&gt; &lt;p&gt;This approach follows the “benefit corporation” model, which gives businesses fiduciary responsibilities beyond their shareholders. Thirty-four states already authorize benefit corporations. And successful companies such as Patagonia and Kickstarter have embraced this role.&lt;/p&gt; &lt;p&gt;My bill also would give workers a stronger voice in corporate decision-making at large companies. Employees would elect at least 40% of directors. At least 75% of directors and shareholders would need to approve before a corporation could make any political expenditures. To address self-serving financial incentives in corporate management, directors and officers would not be allowed to sell company shares within five years of receiving them—or within three years of a company stock buyback. &lt;/p&gt; &lt;p&gt;For the past 30 years we have put the American stamp of approval on giant corporations, even as they have ignored the interests of all but a tiny slice of Americans. We should insist on a new deal.&lt;/p&gt; &lt;p&gt; &lt;em&gt;Ms. Warren, a Democrat, is a U.S. senator from Massachusetts.&lt;/em&gt; &lt;/p&gt;






      &lt;/div&gt;






    &lt;p class=&quot;printheadline&quot;&gt;
      Appeared in the August 15, 2018, print edition.
    &lt;/p&gt;




</description>
<pubDate>Wed, 15 Aug 2018 13:56:34 +0000</pubDate>
<dc:creator>mji</dc:creator>
<og:title>Companies Shouldn’t Be Accountable Only to Shareholders</og:title>
<og:description>My new bill would require corporations to answer to employees and other stakeholders as well.</og:description>
<og:url>https://www.wsj.com/articles/companies-shouldnt-be-accountable-only-to-shareholders-1534287687</og:url>
<og:image>https://images.wsj.net/im-22078/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/companies-shouldnt-be-accountable-only-to-shareholders-1534287687</dc:identifier>
</item>
<item>
<title>TinyWM – A tiny window manager in around 50 lines of C</title>
<link>http://incise.org/tinywm.html</link>
<guid isPermaLink="true" >http://incise.org/tinywm.html</guid>
<description>&lt;p&gt;TinyWM is a tiny window manager that I created as an exercise in minimalism. It is also maybe helpful in learning some of the very basics of creating a window manager. It is only around 50 lines of C. There is also a Python version using python-xlib.&lt;/p&gt;
&lt;p&gt;It lets you do four basic things:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Move windows interactively with Alt+Button1 drag (left mouse button)&lt;/li&gt;
&lt;li&gt;Resize windows interactively with Alt+Button3 drag (right mouse button)&lt;/li&gt;
&lt;li&gt;Raise windows with Alt+F1 (not high on usability I know, but I needed a keybinding in there somewhere)&lt;/li&gt;
&lt;li&gt;Focus windows with the mouse pointer (X does this on its own)&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Download&lt;/h2&gt;
&lt;h2&gt;Known to be packaged in&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Debian&lt;/li&gt;
&lt;li&gt;Ubuntu&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;/li&gt;
&lt;li&gt;CRUX&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;TinyWM around the web&lt;/h2&gt;
&lt;h2&gt;See Also&lt;/h2&gt;
&lt;h2&gt;The source&lt;/h2&gt;
&lt;p&gt;Here is tinywm.c from the most recent release, 1.3:&lt;/p&gt;
&lt;pre class=&quot;c&quot;&gt;
&lt;code&gt;
/* TinyWM is written by Nick Welch &amp;lt;mack@incise.org&amp;gt;, 2005.
 *
 * This software is in the public domain
 * and is provided AS IS, with NO WARRANTY. */

#include &amp;lt;X11/Xlib.h&amp;gt;

#define MAX(a, b) ((a) &amp;gt; (b) ? (a) : (b))

int main()
{
    Display * dpy;
    Window root;
    XWindowAttributes attr;
    XButtonEvent start;
    XEvent ev;

    if(!(dpy = XOpenDisplay(0x0))) return 1;

    root = DefaultRootWindow(dpy);

    XGrabKey(dpy, XKeysymToKeycode(dpy, XStringToKeysym(&quot;F1&quot;)), Mod1Mask, root,
            True, GrabModeAsync, GrabModeAsync);
    XGrabButton(dpy, 1, Mod1Mask, root, True, ButtonPressMask, GrabModeAsync,
            GrabModeAsync, None, None);
    XGrabButton(dpy, 3, Mod1Mask, root, True, ButtonPressMask, GrabModeAsync,
            GrabModeAsync, None, None);

    for(;;)
    {
        XNextEvent(dpy, &amp;amp;ev);
        if(ev.type == KeyPress &amp;amp;&amp;amp; ev.xkey.subwindow != None)
            XRaiseWindow(dpy, ev.xkey.subwindow);
        else if(ev.type == ButtonPress &amp;amp;&amp;amp; ev.xbutton.subwindow != None)
        {
            XGrabPointer(dpy, ev.xbutton.subwindow, True,
                    PointerMotionMask|ButtonReleaseMask, GrabModeAsync,
                    GrabModeAsync, None, None, CurrentTime);
            XGetWindowAttributes(dpy, ev.xbutton.subwindow, &amp;amp;attr);
            start = ev.xbutton;
        }
        else if(ev.type == MotionNotify)
        {
            int xdiff, ydiff;
            while(XCheckTypedEvent(dpy, MotionNotify, &amp;amp;ev));
            xdiff = ev.xbutton.x_root - start.x_root;
            ydiff = ev.xbutton.y_root - start.y_root;
            XMoveResizeWindow(dpy, ev.xmotion.window,
                attr.x + (start.button==1 ? xdiff : 0),
                attr.y + (start.button==1 ? ydiff : 0),
                MAX(1, attr.width + (start.button==3 ? xdiff : 0)),
                MAX(1, attr.height + (start.button==3 ? ydiff : 0)));
        }
        else if(ev.type == ButtonRelease)
            XUngrabPointer(dpy, CurrentTime);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
Here is annotated.c, which is just tinywm.c with a lot of comments explaining what is going on. This should give you a reasonable idea of how everything works.
&lt;pre class=&quot;c&quot;&gt;
&lt;code&gt;/* TinyWM is written by Nick Welch &amp;lt;mack@incise.org&amp;gt;, 2005.
 *
 * This software is in the public domain
 * and is provided AS IS, with NO WARRANTY. */

/* much of tinywm's purpose is to serve as a very basic example of how to do X
 * stuff and/or understand window managers, so i wanted to put comments in the
 * code explaining things, but i really hate wading through code that is
 * over-commented -- and for that matter, tinywm is supposed to be as concise
 * as possible, so having lots of comments just wasn't really fitting for it.
 * i want tinywm.c to be something you can just look at and go &quot;wow, that's
 * it?  cool!&quot;  so what i did was just copy it over to annotated.c and comment
 * the hell out of it.  ahh, but now i have to make every code change twice!
 * oh well.  i could always use some sort of script to process the comments out
 * of this and write it to tinywm.c ... nah.
 */

/* most X stuff will be included with Xlib.h, but a few things require other
 * headers, like Xmd.h, keysym.h, etc.
 */
#include &amp;lt;X11/Xlib.h&amp;gt;

#define MAX(a, b) ((a) &amp;gt; (b) ? (a) : (b))

int main()
{
    Display * dpy;
    Window root;
    XWindowAttributes attr;

    /* we use this to save the pointer's state at the beginning of the
     * move/resize.
     */
    XButtonEvent start;

    XEvent ev;


    /* return failure status if we can't connect */
    if(!(dpy = XOpenDisplay(0x0))) return 1;

    /* you'll usually be referencing the root window a lot.  this is a somewhat
     * naive approach that will only work on the default screen.  most people
     * only have one screen, but not everyone.  if you run multi-head without
     * xinerama then you quite possibly have multiple screens. (i'm not sure
     * about vendor-specific implementations, like nvidia's)
     *
     * many, probably most window managers only handle one screen, so in
     * reality this isn't really *that* naive.
     *
     * if you wanted to get the root window of a specific screen you'd use
     * RootWindow(), but the user can also control which screen is our default:
     * if they set $DISPLAY to &quot;:0.foo&quot;, then our default screen number is
     * whatever they specify &quot;foo&quot; as.
     */
    root = DefaultRootWindow(dpy);

    /* you could also include keysym.h and use the XK_F1 constant instead of
     * the call to XStringToKeysym, but this method is more &quot;dynamic.&quot;  imagine
     * you have config files which specify key bindings.  instead of parsing
     * the key names and having a huge table or whatever to map strings to XK_*
     * constants, you can just take the user-specified string and hand it off
     * to XStringToKeysym.  XStringToKeysym will give you back the appropriate
     * keysym or tell you if it's an invalid key name.
     *
     * a keysym is basically a platform-independent numeric representation of a
     * key, like &quot;F1&quot;, &quot;a&quot;, &quot;b&quot;, &quot;L&quot;, &quot;5&quot;, &quot;Shift&quot;, etc.  a keycode is a
     * numeric representation of a key on the keyboard sent by the keyboard
     * driver (or something along those lines -- i'm no hardware/driver expert)
     * to X.  so we never want to hard-code keycodes, because they can and will
     * differ between systems.
     */
    XGrabKey(dpy, XKeysymToKeycode(dpy, XStringToKeysym(&quot;F1&quot;)), Mod1Mask, root,
            True, GrabModeAsync, GrabModeAsync);

    /* XGrabKey and XGrabButton are basically ways of saying &quot;when this
     * combination of modifiers and key/button is pressed, send me the events.&quot;
     * so we can safely assume that we'll receive Alt+F1 events, Alt+Button1
     * events, and Alt+Button3 events, but no others.  You can either do
     * individual grabs like these for key/mouse combinations, or you can use
     * XSelectInput with KeyPressMask/ButtonPressMask/etc to catch all events
     * of those types and filter them as you receive them.
     */
    XGrabButton(dpy, 1, Mod1Mask, root, True, ButtonPressMask, GrabModeAsync,
            GrabModeAsync, None, None);
    XGrabButton(dpy, 3, Mod1Mask, root, True, ButtonPressMask, GrabModeAsync,
            GrabModeAsync, None, None);

    for(;;)
    {
        /* this is the most basic way of looping through X events; you can be
         * more flexible by using XPending(), or ConnectionNumber() along with
         * select() (or poll() or whatever floats your boat).
         */
        XNextEvent(dpy, &amp;amp;ev);

        /* this is our keybinding for raising windows.  as i saw someone
         * mention on the ratpoison wiki, it is pretty stupid; however, i
         * wanted to fit some sort of keyboard binding in here somewhere, and
         * this was the best fit for it.
         *
         * i was a little confused about .window vs. .subwindow for a while,
         * but a little RTFMing took care of that.  our passive grabs above
         * grabbed on the root window, so since we're only interested in events
         * for its child windows, we look at .subwindow.  when subwindow
         * None, that means that the window the event happened in was the same
         * window that was grabbed on -- in this case, the root window.
         */
        if(ev.type == KeyPress &amp;amp;&amp;amp; ev.xkey.subwindow != None)
            XRaiseWindow(dpy, ev.xkey.subwindow);
        else if(ev.type == ButtonPress &amp;amp;&amp;amp; ev.xbutton.subwindow != None)
        {
            /* now we take command of the pointer, looking for motion and
             * button release events.
             */
            XGrabPointer(dpy, ev.xbutton.subwindow, True,
                    PointerMotionMask|ButtonReleaseMask, GrabModeAsync,
                    GrabModeAsync, None, None, CurrentTime);

            /* we &quot;remember&quot; the position of the pointer at the beginning of
             * our move/resize, and the size/position of the window.  that way,
             * when the pointer moves, we can compare it to our initial data
             * and move/resize accordingly.
             */
            XGetWindowAttributes(dpy, ev.xbutton.subwindow, &amp;amp;attr);
            start = ev.xbutton;
        }
        /* the only way we'd receive a motion notify event is if we already did
         * a pointer grab and we're in move/resize mode, so we assume that. */
        else if(ev.type == MotionNotify)
        {
            int xdiff, ydiff;

            /* here we &quot;compress&quot; motion notify events.  if there are 10 of
             * them waiting, it makes no sense to look at any of them but the
             * most recent.  in some cases -- if the window is really big or
             * things are just acting slowly in general -- failing to do this
             * can result in a lot of &quot;drag lag.&quot;
             *
             * for window managers with things like desktop switching, it can
             * also be useful to compress EnterNotify events, so that you don't
             * get &quot;focus flicker&quot; as windows shuffle around underneath the
             * pointer.
             */
            while(XCheckTypedEvent(dpy, MotionNotify, &amp;amp;ev));

            /* now we use the stuff we saved at the beginning of the
             * move/resize and compare it to the pointer's current position to
             * determine what the window's new size or position should be.
             *
             * if the initial button press was button 1, then we're moving.
             * otherwise it was 3 and we're resizing.
             *
             * we also make sure not to go negative with the window's
             * dimensions, resulting in &quot;wrapping&quot; which will make our window
             * something ridiculous like 65000 pixels wide (often accompanied
             * by lots of swapping and slowdown).
             *
             * even worse is if we get &quot;lucky&quot; and hit a width or height of
             * exactly zero, triggering an X error.  so we specify a minimum
             * width/height of 1 pixel.
             */
            xdiff = ev.xbutton.x_root - start.x_root;
            ydiff = ev.xbutton.y_root - start.y_root;
            XMoveResizeWindow(dpy, ev.xmotion.window,
                attr.x + (start.button==1 ? xdiff : 0),
                attr.y + (start.button==1 ? ydiff : 0),
                MAX(1, attr.width + (start.button==3 ? xdiff : 0)),
                MAX(1, attr.height + (start.button==3 ? ydiff : 0)));
        }
        /* like motion notifies, the only way we'll receive a button release is
         * during a move/resize, due to our pointer grab.  this ends the
         * move/resize.
         */
        else if(ev.type == ButtonRelease)
            XUngrabPointer(dpy, CurrentTime);
    }
}&lt;/code&gt;
&lt;/pre&gt;
And here's tinywm.py. XCheckTypedEvent has no equivalent in python-xlib, so it is commented out. It doesn't affect functionality, except that responsiveness is worse when you are moving/resizing (especially resizing a large window).
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# TinyWM is written by Nick Welch &amp;lt;mack@incise.org&amp;gt;, 2005.
#
# This software is in the public domain
# and is provided AS IS, with NO WARRANTY.

from Xlib.display import Display
from Xlib import X, XK

dpy = Display()
root = dpy.screen().root

root.grab_key(XK.string_to_keysym(&quot;F1&quot;), X.Mod1Mask, 1,
        X.GrabModeAsync, X.GrabModeAsync)
root.grab_button(1, X.Mod1Mask, 1, X.ButtonPressMask,
        X.GrabModeAsync, X.GrabModeAsync, X.NONE, X.NONE)
root.grab_button(3, X.Mod1Mask, 1, X.ButtonPressMask,
        X.GrabModeAsync, X.GrabModeAsync, X.NONE, X.NONE)

while 1:
    ev = root.display.next_event()

    if ev.type == X.KeyPress and ev.child != X.NONE:
        ev.window.circulate(X.RaiseLowest)
    elif ev.type == X.ButtonPress and ev.child != X.NONE:
        ev.child.grab_pointer(1, X.PointerMotionMask|X.ButtonReleaseMask,
                X.GrabModeAsync, X.GrabModeAsync, X.NONE, X.NONE, X.CurrentTime)
        attr = ev.child.get_geometry()
        start = ev
    elif ev.type == X.MotionNotify:
        #while(XCheckTypedEvent(dpy, MotionNotify, &amp;amp;ev));
        xdiff = ev.root_x - start.root_x
        ydiff = ev.root_y - start.root_y
        ev.window.configure(
            x = attr.x + (start.detail == 1 and xdiff or 0),
            y = attr.y + (start.detail == 1 and ydiff or 0),
            width = max(1, attr.width + (start.detail == 3 and xdiff or 0)),
            height = max(1, attr.height + (start.detail == 3 and ydiff or 0)))
    elif ev.type == X.ButtonRelease:
        dpy.ungrab_pointer(X.CurrentTime)&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Wed, 15 Aug 2018 12:20:17 +0000</pubDate>
<dc:creator>LaSombra</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://incise.org/tinywm.html</dc:identifier>
</item>
<item>
<title>Software development requires servant leaders</title>
<link>https://adl.io/essays/why-software-development-requires-servant-leaders/</link>
<guid isPermaLink="true" >https://adl.io/essays/why-software-development-requires-servant-leaders/</guid>
<description>&lt;p&gt;The idea of “servant” leaders has been on the rise in the agile community of late. Robert K. Greenleaf coined the term in a &lt;a href=&quot;https://amzn.to/2KHPIB6&quot;&gt;1970 essay&lt;/a&gt;, but the idea is timeless. Virtually every religion describes the concept. This one from the &lt;em&gt;Tao Te Ching&lt;/em&gt; is particularly poignant:&lt;/p&gt;&lt;blockquote readability=&quot;16&quot;&gt;
&lt;p&gt;The highest type of ruler is one of whose existence the people are barely aware.&lt;/p&gt;
&lt;p&gt;Next comes one whom they love and praise. Next comes one whom they fear. Next comes one whom they despise and defy.&lt;/p&gt;
&lt;p&gt;When you are lacking in faith, Others will be unfaithful to you.&lt;/p&gt;
&lt;p&gt;The Sage is self-effacing and scanty of words. When his task is accomplished and things have been completed, All the people say, “&lt;strong&gt;We ourselves have achieved it!&lt;/strong&gt;“&lt;/p&gt;
&lt;p&gt;— Lao Tzu&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The idea applies to any kind of leader, but I think it’s especially applicable to leaders of software projects, where the unique dynamics of &lt;a href=&quot;https://chrismm.com/blog/project-delays-why-software-estimates/&quot;&gt;unpredictability&lt;/a&gt; and &lt;a href=&quot;https://www.extremetech.com/computing/259977-software-increasingly-complex-thats-dangerous&quot;&gt;complexity&lt;/a&gt; collide.&lt;/p&gt;
&lt;p&gt;Ever wonder why software people invent all kinds of alternative labels for “project” (e.g. “Scrum”, “Sprint”, “engagement”, “iteration”, “MVP”, etc) and “project manager” (“Scrum Master”, “Product Owner”, “Product Manager”, “engagement manager”, etc), and everyone else just uses the regular names? It’s not because we’re narcissists who need special labels. It’s because people keep running into difficulty trying to square the very definition of a project (something with “&lt;a href=&quot;https://www.pmi.org/about/learn-about-pmi/what-is-project-management&quot;&gt;defined scope, schedule and resources&lt;/a&gt;”) with our real world experiences. In software it’s &lt;strong&gt;common&lt;/strong&gt; to have something estimated at a day take a week instead. Sure, you can call your work a project; you can write down a scope and make a schedule, but it’ll probably be wrong.&lt;/p&gt;
&lt;p&gt;The inherent inaccuracy of software estimates creates extra tension that you don’t find in other industries. If you’re the CEO of a startup, and you’ve got a fixed technology budget, you don’t want to hear that your software will take &lt;a href=&quot;http://www.construx.com/Thought_Leadership/Books/The_Cone_of_Uncertainty/&quot;&gt;up to &lt;strong&gt;4X&lt;/strong&gt; longer&lt;/a&gt; than your team initially estimated.&lt;/p&gt;
&lt;p&gt;Because engineering managers inhabit the border between the business and the technical, they are the ones who need to resolve the tension between estimate and reality. It’s a bit like being the wishbone being pulled at both ends; either side can snap. When the business side “wins”, the developers end up in a death march. When development concerns outweigh business ones, you end up blowing the budget and deadline. Either way you’re broken. Successful software managers find ways to be &lt;em&gt;flexible&lt;/em&gt;; to bend without breaking and to resolve the tension gradually. Servant leadership can be a guide to finding this flexibility.&lt;/p&gt;
&lt;h2 id=&quot;what-servant-leadership-means-for-software&quot;&gt;What Servant Leadership Means for Software&lt;/h2&gt;
&lt;p&gt;At its core, servant leadership is about inverting the pyramid of power. Instead of exerting power from the top, servant leaders empower others and enable them from below. Here’s how that looks in software.&lt;/p&gt;
&lt;h3 id=&quot;prioritize-growth&quot;&gt;Prioritize Growth&lt;/h3&gt;
&lt;p&gt;Servant leadership works because it motivates people to bring their very best. By being aligned with their innate needs for autonomy, mastery and purpose (see Daniel Pink’s book &lt;a href=&quot;https://amzn.to/2I3ALri&quot;&gt;Drive&lt;/a&gt; for more on that), you unlock a completely different kind of engagement in your team. Command and Control may work on some battlefields, but in creative endeavors, blindly following directions is the last thing you want your people to do.&lt;/p&gt;
&lt;p&gt;Ask yourself:&lt;/p&gt;
&lt;blockquote readability=&quot;10.71186440678&quot;&gt;
&lt;p&gt;Do those served grow as persons? Do they, while being served, become healthier, wiser, freer, more autonomous, more likely themselves to become servants? — &lt;a href=&quot;https://www.greenleaf.org/what-is-servant-leadership/&quot;&gt;Robert K. Greenleaf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When considering a project, consider the growth opportunity it represents for each member of your team. Always have an ear trained toward learning what challenges they are ready to take on.&lt;/p&gt;
&lt;h3 id=&quot;establish-trust&quot;&gt;Establish Trust&lt;/h3&gt;
&lt;p&gt;Establish trust with your team by showing you care and looking out for their best interests. Protect them from unreasonable deadlines or unnecessary off-project work. Immediately recognize their achievements. Give them every available tool and advantage to achieve their goals, but do not protect them from the consequences of their own behavior.&lt;/p&gt;
&lt;h3 id=&quot;give-developers-control-over-estimation&quot;&gt;Give Developers Control Over Estimation&lt;/h3&gt;
&lt;p&gt;Developers should estimate their own work, and should be encouraged to be as honest and realistic as possible. Managers shouldn’t “negotiate” with the estimate; that reduces its accuracy and disrespects its creator. Instead, managers should probe for thoroughness in a curious, conversational style that encourages “thinking out loud” about the risks that need to be incorporated into the estimates.&lt;/p&gt;
&lt;h3 id=&quot;drive-uncertainty-out-of-requirements&quot;&gt;Drive Uncertainty Out of Requirements&lt;/h3&gt;
&lt;p&gt;Vague or contradictory requirements are the bane of a developer’s existence. Computers are unyielding in their need for precise instructions, and developers spend most of their day talking with them.&lt;/p&gt;
&lt;p&gt;To be of service in the early stages of a project, managers need to play an active role in vetting, testing and refining requirements. In the same way a good QA team stretches the software to its limit to ensure it’s not broken, a good manager stretches the requirements to their limit to ensure they’re not broken.&lt;/p&gt;
&lt;h3 id=&quot;be-chief-unblocker&quot;&gt;Be “Chief Unblocker”&lt;/h3&gt;
&lt;p&gt;The best referees are the ones nobody notices because they make the right calls and stay aware of the emotional state of the game to prevent controversial calls from spiraling out of their control. It’s the same for managers and blockers. The best managers see blockers coming and act early to prevent them from ever surfacing. When prevention fails, they act quickly to resolve it, knowing that nothing outranks a blocker.&lt;/p&gt;
&lt;p&gt;This requires &lt;strong&gt;active listening&lt;/strong&gt; during stand ups and other meetings. Great managers hone their “blocker radar” by noticing patterns in status reports. When a developer’s standup is nearly identical today as it was yesterday, they notice; the developer might not be blocked yet, but they definitely didn’t achieve yesterday what they expected, and might be at risk of being blocked soon.&lt;/p&gt;
&lt;h3 id=&quot;have-empathy-for-the-customer&quot;&gt;Have Empathy for the Customer&lt;/h3&gt;
&lt;p&gt;Things often take a meandering path between the customer and the programming task. When developers don’t understand the &lt;strong&gt;Why&lt;/strong&gt; behind a request, they can struggle with motivation or even misinterpret the request and build the wrong thing. As the liaison between the team and the customer, the manager needs to excel at understanding the customer better than anyone else. If you don’t understand why a requirement exists… find out. Put yourself in the customers shoes to understand the underlying needs behind their requests.&lt;/p&gt;
</description>
<pubDate>Wed, 15 Aug 2018 08:33:50 +0000</pubDate>
<dc:creator>mooreds</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://adl.io/essays/why-software-development-requires-servant-leaders/</dc:identifier>
</item>
<item>
<title>SQLite Release 3.25.0 adds support for window functions</title>
<link>https://www.sqlite.org/draft/releaselog/current.html</link>
<guid isPermaLink="true" >https://www.sqlite.org/draft/releaselog/current.html</guid>
<description>&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;link href=&quot;../sqlite.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&lt;title&gt;SQLite Release 3.25.0 (Pending)&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;24.084955752212&quot;&gt;
&lt;div class=&quot;nosearch&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/draft/index.html&quot;&gt;&lt;img class=&quot;logo&quot; src=&quot;https://www.sqlite.org/draft/images/sqlite370_banner.gif&quot; alt=&quot;SQLite&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;

&lt;p&gt;&lt;span&gt;*** DRAFT ***&lt;/span&gt;&lt;/p&gt;



&lt;/div&gt;
&lt;h2&gt;SQLite Release 3.25.0 (Pending)&lt;/h2&gt;
&lt;ol class=&quot;lessindent&quot;&gt;&lt;li&gt;Add support for &lt;a href=&quot;https://www.sqlite.org/draft/windowfunctions.html&quot;&gt;window functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Query optimizer improvements:
&lt;ol type=&quot;a&quot;&gt;&lt;li&gt;Avoid unnecessary loads of columns in an aggregate query that are not within an aggregate function and that are not part of the GROUP BY clause.&lt;/li&gt;
&lt;li&gt;The IN-early-out optimization: When doing a look-up on a multi-column index and an IN operator is used on a column other than the left-most column, then if no rows match against the first IN value, check to make sure there exist rows that match the columns to the right before continuing with the next IN value.&lt;/li&gt;
&lt;li&gt;Use the transitive property to try to propagate constant values within the WHERE clause. For example, convert &quot;a=99 AND b=a&quot; into &quot;a=99 AND b=99&quot;.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Use a separate mutex on every inode in the unix &lt;a href=&quot;https://www.sqlite.org/draft/vfs.html&quot;&gt;VFS&lt;/a&gt;, rather than a single mutex shared among them all, for slightly better concurrency in multi-threaded environments.&lt;/li&gt;
&lt;li&gt;Enhance the &lt;a href=&quot;https://www.sqlite.org/draft/pragma.html#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt; command for improved detection of problems on the page freelist.&lt;/li&gt;
&lt;li&gt;Output infinity as 1e999 in the &quot;.dump&quot; command of the &lt;a href=&quot;https://www.sqlite.org/draft/cli.html&quot;&gt;command-line shell&lt;/a&gt;.
&lt;p&gt;&lt;strong&gt;Bug fixes:&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;On an UPSERT when the order of constraint checks is rearranged, ensure that the affinity transformations on the inserted content occur before any of the constraint checks. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/info/79cad5e4b2e219dd197242e9e&quot;&gt;79cad5e4b2e219dd197242e9e&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Avoid using a prepared statement for &quot;.stats on&quot; command of the &lt;a href=&quot;https://www.sqlite.org/draft/cli.html&quot;&gt;CLI&lt;/a&gt; after it has been closed by the &quot;.eqp full&quot; logicc. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/info/7be932dfa60a8a6b3b26bcf76&quot;&gt;7be932dfa60a8a6b3b26bcf76&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;A &lt;a href=&quot;https://www.sqlite.org/draft/changes.html&quot;&gt;complete list of SQLite releases&lt;/a&gt; in a single page and a &lt;a href=&quot;https://www.sqlite.org/draft/chronology.html&quot;&gt;chronology&lt;/a&gt; are both also available. A detailed history of every check-in is available at &lt;a href=&quot;http://www.sqlite.org/src/timeline&quot;&gt;SQLite version control site&lt;/a&gt;.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;span&gt;*** DRAFT ***&lt;/span&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 15 Aug 2018 07:46:23 +0000</pubDate>
<dc:creator>MarkusWinand</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sqlite.org/draft/releaselog/current.html</dc:identifier>
</item>
<item>
<title>Osx-kvm: Run macOS on QEMU/KVM</title>
<link>https://github.com/kholia/OSX-KVM</link>
<guid isPermaLink="true" >https://github.com/kholia/OSX-KVM</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;h3&gt;Note&lt;/h3&gt;
&lt;p&gt;For macOS High Sierra, follow &lt;a href=&quot;https://github.com/kholia/OSX-KVM/blob/master/HighSierra/README.md&quot;&gt;README.md for High Sierra&lt;/a&gt;. Consult this document for debugging and general tips.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/kholia/OSX-KVM#debugging&quot;&gt;debugging section below&lt;/a&gt; and closed issues before opening a new issue.&lt;/p&gt;
&lt;h3&gt;Host System Details&lt;/h3&gt;
&lt;p&gt;Known to work on:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Ubuntu 15.10 running on i5-6500 CPU.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu 16.10 running on i7-3960X CPU.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fedora 24 running on i5-6500 + i7-6600U CPU.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Tested with QEMU 2.4.1, 2.5, 2.6.1, and 2.8.&lt;/p&gt;
&lt;p&gt;AMD CPU(s) are known to be problematic. AMD FX-8350 works but Phenom II X3 720 does not. A CPU with SSE4.1 support is required for macOS Sierra.&lt;/p&gt;
&lt;p&gt;Intel VT-x / AMD SVM is required.&lt;/p&gt;
&lt;h3&gt;Installation Preparation&lt;/h3&gt;
&lt;h4&gt;Preparation steps on your current OS X / macOS&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Download OS X El Capitan or macOS Sierra installer from Apple App Store.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone this repository. Files included in this repository are needed for ISO creation.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone https://github.com/kholia/OSX-KVM.git
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the ISO creation script &lt;code&gt;create_install_iso.sh&lt;/code&gt; included in this repository. Run it with &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This script supports specifying the path to OS X / macOS installation application manually via the &lt;code&gt;-a&lt;/code&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the generated ISO from your Mac to your QEMU/KVM machine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Preparation steps on your QEMU system&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Clone this repository again on your QEMU system. Files from this repository are used in the following steps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install QEMU and other packages.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo apt-get install qemu uml-utilities virt-manager
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/kholia/OSX-KVM/blob/master/networking-qemu-kvm-howto.txt&quot;&gt;networking notes&lt;/a&gt; to setup guest networking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a virtual HDD image where the OS X operating system will be installed. If you change the name of the disk image from &lt;code&gt;mac_hdd.img&lt;/code&gt; to something else, the boot scripts will need updating to point to the new image name. A base install of OS X needs 10 GiB of space. Adding Xcode or other large software obviously increases that requirement.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;qemu-img create -f qcow2 mac_hdd.img 64G
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now you are ready to install OS X / macOS.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;To install OS X, you can use the included &lt;code&gt;boot-macOS.sh&lt;/code&gt; script for a more solid alternate to the following &lt;code&gt;virsh&lt;/code&gt; method. Use either the &lt;code&gt;boot-macOS.sh&lt;/code&gt; method or the following &lt;code&gt;virsh / virt-manager&lt;/code&gt; method to install OS X / macOS.&lt;/p&gt;
&lt;p&gt;Update: The &lt;code&gt;virt-manager&lt;/code&gt; method is no longer recommended, and no support is provided for it.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;macOS-libvirt.xml&lt;/code&gt; file and change file paths for &lt;code&gt;mac_hdd.qcow2&lt;/code&gt; (HDD), &lt;code&gt;Install_OS_X_10.11_El_Capitan.iso&lt;/code&gt; (bootable ISO image) and &lt;code&gt;enoch_rev2839_boot&lt;/code&gt; suitably.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a VM by running the following command&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
virsh --connect qemu:///system define macOS-libvirt.xml
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the VM in virt-manager and hit return in the console window.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Installer Steps&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;After booting, the initial language selection should show up. &lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645877/5136b1ac-61b2-11e6-8d90-29f5cc11ae01.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645877/5136b1ac-61b2-11e6-8d90-29f5cc11ae01.png&quot; alt=&quot;screenshot_01&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After selecting the language, fire-up the Disk Utility ... &lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645881/513b6918-61b2-11e6-91f2-026d953cbe0b.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645881/513b6918-61b2-11e6-91f2-026d953cbe0b.png&quot; alt=&quot;screenshot_02&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;... and initialize the new harddisk. If this step fails and the menu bar shows &quot;Language Chooser&quot; then see the Debugging section below.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645878/51373d48-61b2-11e6-8740-69c86bf92d31.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645878/51373d48-61b2-11e6-8740-69c86bf92d31.png&quot; alt=&quot;screenshot_03&quot;/&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645879/513ae704-61b2-11e6-9a54-109c37132783.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645879/513ae704-61b2-11e6-9a54-109c37132783.png&quot; alt=&quot;screenshot_04&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;After disk initialization, open a terminal window (in the Utilities menu) and recursively copy the /Extra folder to the newly initialized target volume using&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
 cp -av /Extra &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;/Volumes/NewVolumeName&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When done, quit Terminal. &lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645876/5136ad6a-61b2-11e6-84cd-cb7851119292.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645876/5136ad6a-61b2-11e6-84cd-cb7851119292.png&quot; alt=&quot;screenshot_05&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, you can continue with the installation as usual &lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645880/513b2c3c-61b2-11e6-889c-3e4f5a0612ca.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645880/513b2c3c-61b2-11e6-889c-3e4f5a0612ca.png&quot; alt=&quot;screenshot_06&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When finished, the VM will reboot automatically and the first time setup continues as usual. &lt;a target=&quot;_blank&quot; href=&quot;https://cloud.githubusercontent.com/assets/731252/17645882/51517a50-61b2-11e6-8bb5-70c810d80b2b.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/731252/17645882/51517a50-61b2-11e6-8bb5-70c810d80b2b.png&quot; alt=&quot;screenshot_07&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Post-Installation Recommendations&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;The &lt;code&gt;boot*.sh&lt;/code&gt; scripts have the installation ISO listed in them but this is only required for installation. Once installation is complete, comment out the &lt;code&gt;-device&lt;/code&gt; and &lt;code&gt;-drive&lt;/code&gt; lines referring to MacDVD and the installation ISO.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the guest, you may modify the &lt;code&gt;/Extra/org.chameleon.Boot.plist&lt;/code&gt; file to change the default resolution of the virtual screen. See &lt;a href=&quot;https://github.com/kholia/OSX-KVM/blob/master/notes.md&quot;&gt;notes&lt;/a&gt; for instructions on how to do this and some limitations on the resolution choices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download a Chameleon wizard such as Chameleon Wizard or Champlist in order to generate a usable smbios.plist. This file goes into &lt;code&gt;/Extra&lt;/code&gt; and can be used to assign a reasonable serial number to your virtual Mac. Generating this file sometimes fixes software incompatibilities that occur when the software can't determine what Apple hardware it is running on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For better mouse behavior, install &lt;a href=&quot;https://github.com/pmj/QemuUSBTablet-OSX&quot;&gt;https://github.com/pmj/QemuUSBTablet-OSX&lt;/a&gt; and configure QEMU to use the &quot;usb-tablet&quot; absolute pointing device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get sound on your virtual Mac, see the &quot;Virtual Sound Device&quot; in &lt;a href=&quot;https://github.com/kholia/OSX-KVM/blob/master/notes.md&quot;&gt;notes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Debugging&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;For macOS Sierra change the CPU model from &lt;code&gt;core2duo&lt;/code&gt; to &lt;code&gt;Penryn&lt;/code&gt;. The &lt;code&gt;boot-macOS.sh&lt;/code&gt; script already has this change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;While booting from the macOS Sierra ISO installer, you might get stuck on the &quot;Language Chooser&quot; menu bar (with no option to launch Disk Utility). The solution is to use Ctrl+F2 and arrow keys to navigate the &quot;macOS Installer&quot; menu bar, and to launch the &quot;Disk Utility&quot;.&lt;/p&gt;
&lt;p&gt;An alternate solution is to type &lt;code&gt;Super-T&lt;/code&gt; (where &lt;code&gt;Super&lt;/code&gt; is the Mac command/clover key next to the &lt;code&gt;Alt&lt;/code&gt; key). Type this sequence multiple times until a terminal window opens up. In the termianl window type:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;diskutil list
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will generate a list of all attached disks. Look for the disk with a size similar to the &lt;code&gt;mac_hdd.img&lt;/code&gt; created in an earlier step. Once identified, note the disk number. Run a command to initialize the filesystem.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;diskutil eraseDisk JHFS+ &amp;lt;name of disk&amp;gt; &amp;lt;disk#&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For example: &lt;code&gt;diskutil eraseDisk JHFS+ SYS disk2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then select your language and click the forward arrow to move to the next step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Host machine may need the following tweak for this to work,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;echo 1 &amp;gt; /sys/module/kvm/parameters/ignore_msrs
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type the following in the bootloader if the guest VM fails to boot (some older ISO images may require this),&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&quot;KernelBooter_kexts&quot;=&quot;Yes&quot; &quot;CsrActiveConfig&quot;=&quot;103&quot;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you see &quot;hdiutil: attach failed - Resource busy&quot; error message during the ISO creation step, quit the &quot;Install macOS Sierra&quot; program and unmount (eject) the &quot;Install macOS Sierra&quot; device. Disk Utility can help for unmouting disk images.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ hdiutil info
$ hdiutil detach /dev/disk2  # or something similar
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the App Store doesn't work, check the &lt;a href=&quot;https://github.com/kholia/OSX-KVM/blob/master/notes.md&quot;&gt;notes file&lt;/a&gt; for instructions on how to solve this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are getting &quot;Dont_Steal_MacOS&quot; related errors, see &lt;code&gt;Building QEMU&lt;/code&gt; (recommended option) and &lt;code&gt;FakeSMC installation&lt;/code&gt; sections in &lt;a href=&quot;https://github.com/kholia/OSX-KVM/blob/master/notes.md&quot;&gt;notes file&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the boot process is getting stuck on the Apple logo, upgrade your host kernel and QEMU. For example, Linux 3.16.x from Debian 8 is known to be problematic, whereas Linux 4.9.x with QEMU 2.8.x works fine on the same distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Is This Legal?&lt;/h3&gt;
&lt;p&gt;The &quot;secret&quot; Apple OSK string is widely available on the Internet. It is also included in a public court document &lt;a href=&quot;http://www.rcfp.org/sites/default/files/docs/20120105_202426_apple_sealing.pdf&quot; rel=&quot;nofollow&quot;&gt;available here&lt;/a&gt;. I am not a lawyer but it seems that Apple's attempt(s) to get the OSK string treated as a trade secret did not work out. Due to these reasons, the OSK string is freely included in this repository.&lt;/p&gt;
&lt;p&gt;Gabriel Somlo also has &lt;a href=&quot;http://www.contrib.andrew.cmu.edu/%7Esomlo/OSXKVM/#sec_4&quot; rel=&quot;nofollow&quot;&gt;some thoughts&lt;/a&gt; on the legal aspects involved in running macOS under QEMU/KVM.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 15 Aug 2018 04:56:00 +0000</pubDate>
<dc:creator>axiomdata316</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/79528?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>kholia/OSX-KVM</og:title>
<og:url>https://github.com/kholia/OSX-KVM</og:url>
<og:description>OSX-KVM - Run El Capitan, macOS Sierra, High Sierra and Mojave on QEMU/KVM. No support is provided at the moment.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/kholia/OSX-KVM</dc:identifier>
</item>
<item>
<title>YC China and Qi Lu</title>
<link>https://blog.ycombinator.com/yc-china-qi-lu/</link>
<guid isPermaLink="true" >https://blog.ycombinator.com/yc-china-qi-lu/</guid>
<description>&lt;div class=&quot;post-content&quot; readability=&quot;70.818414322251&quot;&gt;
&lt;p&gt;I am delighted to announce that &lt;a href=&quot;https://www.youtube.com/watch?v=WSydk0XzxEE&quot;&gt;Qi Lu&lt;/a&gt; is joining YC to launch and run YC China. I have been trying to recruit Qi for many years—he is one of the most impressive technologists I know.&lt;/p&gt;
&lt;p&gt;Our mission at YC is to enable more innovation than any other company in the world, and to ensure that the benefits of that are fairly spread throughout humanity. We believe that technology drives innovation, that startups can do very ambitious things if they think on a long enough time horizon, and that hackers can change the world.&lt;/p&gt;
&lt;p&gt;Qi embodies all of these values, and China has been an important missing piece of our puzzle—the entrepreneurial energy and talent there is an amazing force. Qi will be able to take what makes YC work and adapt it for China. We are excited for Qi to come onboard as the Founding CEO of YC China and to build a long-term local organization that will combine the best of Silicon Valley and China and create a lot of innovation.&lt;/p&gt;
&lt;p&gt;Qi will also take over as the Head of YC Research, YC’s non-profit research lab. More investment in R&amp;amp;D is critical to a good future for the world, and we plan to establish a new YC Research location in Seattle to drive more research.&lt;/p&gt;
&lt;p&gt;YC has been very successful in the world by believing that hackers – not businesspeople – can build the biggest companies. We are confident that with Qi at the helm, YC China will do the same.&lt;/p&gt;
&lt;p&gt;We think that a significant percentage of the largest technology companies that are founded in the next decade—companies at the scale of Google, Microsoft, Apple, Amazon, and Facebook—will be based in the US and China. YC’s greatest strength is our founder community and with the launch of YC China we believe we have a special opportunity to include many more Chinese founders in our global community.&lt;/p&gt;
&lt;p&gt;This has taken a lot of work from a lot of people, but I’d especially like to thank Eric Migicovsky, who has done a huge amount of work to establish YC in China!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;h3 id=&quot;mc_copy&quot;&gt;Sign up for weekly updates from Y Combinator.&lt;/h3&gt;

&lt;/div&gt;
</description>
<pubDate>Wed, 15 Aug 2018 02:46:48 +0000</pubDate>
<dc:creator>sama</dc:creator>
<og:title>YC China + Qi Lu</og:title>
<og:url>https://blog.ycombinator.com/yc-china-qi-lu/</og:url>
<og:type>article</og:type>
<og:description>I am delighted to announce that Qi Lu is joining YC to launch and run YC China. We are excited for Qi to come onboard as the Founding CEO of YC China and to build a long-term local organization that will combine the best of Silicon Valley and China and create a lot of innovation.</og:description>
<og:image>https://blog.ycombinator.com/wp-content/uploads/2018/08/YC-China-Qi-Lu.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.ycombinator.com/yc-china-qi-lu/</dc:identifier>
</item>
<item>
<title>Katie&amp;#039;s New Face</title>
<link>https://www.nationalgeographic.com/magazine/2018/09/face-transplant-katie-stubblefield-story-identity-surgery-science/</link>
<guid isPermaLink="true" >https://www.nationalgeographic.com/magazine/2018/09/face-transplant-katie-stubblefield-story-identity-surgery-science/</guid>
<description>&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;This story is difficult to look at. Yet we are asking you to go on the remarkable journey of how a young woman received a face transplant because it reveals something profound about our humanity. Our face conveys who we are, telegraphing a kaleidoscope of emotions. It’s our doorway to the sensory world, allowing us to see, smell, taste, hear, and feel the breeze. Are we our faces? Katie Stubblefield lost hers when she was 18. When she was 21, doctors gave Katie a new face. This is a story of trauma, identity, resilience, devotion, and amazing medical miracles.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;The face lies on a surgical tray, eyes empty and unseeing, mouth agape, as if exclaiming, “Oh!”&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;Sixteen hours ago surgeons in Operating Room 19 at the &lt;a href=&quot;https://my.clevelandclinic.org/&quot; target=&quot;_blank&quot;&gt;Cleveland Clinic&lt;/a&gt; began the delicate work of removing the face from a 31-year-old woman who was declared legally and medically dead three days earlier. Soon they will take it to a 21-year-old woman who has waited more than three years for a new face.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;For a moment, the face rests in its astonished solitude.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;Surgeons, residents, and nurses, suddenly silent, gaze at it in awe as clinic staff, like unusually polite paparazzi, move in with cameras to document it. The face, deprived of blood, grows pale. With each second of detachment, it looks more like a 19th-century death mask.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;Frank Papay, a veteran plastic surgeon, picks up the tray, carrying it carefully in his gloved hands, and walks to Operating Room 20, where Katie Stubblefield waits.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;Katie will be the youngest person to receive a face transplant in the United States. Her transplant, the clinic’s third and the 40th known in the world, will be one of the most extensive, making her a lifelong subject in the study of this still &lt;a href=&quot;https://www.nationalgeographic.com/magazine/2018/09/face-transplant-katie-stubblefield-surgery-timeline-interactive&quot;&gt;experimental surgery&lt;/a&gt;.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;&gt;Looking down at the face he carries, Papay feels a kind of reverence. It’s an amazing thing, he thinks, what some people will do for others—to give them a heart or a liver, even a face. He says a silent prayer of thanks and takes the face to its next life.&lt;/span&gt;&lt;span itemprop=&quot;articleBody&quot; class=&quot;clearfix&quot;/&gt;</description>
<pubDate>Wed, 15 Aug 2018 00:24:08 +0000</pubDate>
<dc:creator>danso</dc:creator>
<og:title>How a Transplanted Face Transformed a Young Woman’s Life</og:title>
<og:description>At 18, Katie Stubblefield lost her face. At 21, she became the youngest person in the U.S. to undergo the still experimental surgery. Follow her incredible story.</og:description>
<og:url>https://www.nationalgeographic.com/magazine/2018/09/face-transplant-katie-stubblefield-story-identity-surgery-science/</og:url>
<og:type>article</og:type>
<og:image>https://www.nationalgeographic.com/content/dam/magazine/rights-exempt/2018/09/the-face/005-new-face-katie-evening-before-surgery.ngsversion.1534182806344.adapt.1900.1.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nationalgeographic.com/magazine/2018/09/face-transplant-katie-stubblefield-story-identity-surgery-science/</dc:identifier>
</item>
</channel>
</rss>