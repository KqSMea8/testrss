<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>PostgreSQL Exercises</title>
<link>https://pgexercises.com/</link>
<guid isPermaLink="true" >https://pgexercises.com/</guid>
<description>&lt;p&gt;Welcome to PostgreSQL Exercises! This site was born when I noticed that there's a load of material out there to help people learn about SQL, but not a great deal to make it easy to learn by doing. PGExercises provides a series of questions and explanations built on a single, simple dataset. It's designed for use as a partner to a good book or Postgres' excellent &lt;a href=&quot;http://www.postgresql.org/docs/9.3/interactive/index.html&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The exercises on this site range from simple select and where clauses, through joins and case statements, and on to aggregations, window functions, and recursive queries. Most people who aren't already pros should find something to test themselves with.&lt;/p&gt;
&lt;p&gt;For an introduction to the dataset, go to &lt;a href=&quot;https://pgexercises.com/gettingstarted.html&quot;&gt;Getting Started&lt;/a&gt;, then select an exercise category from the menu and go!&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 09:50:00 +0000</pubDate>
<dc:creator>pvsukale3</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://pgexercises.com/</dc:identifier>
</item>
<item>
<title>Mastering Chess and Shogi by Self-Play with General Reinforcement Learning</title>
<link>https://arxiv.org/abs/1712.01815</link>
<guid isPermaLink="true" >https://arxiv.org/abs/1712.01815</guid>
<description>&lt;div id=&quot;&quot;&gt;
&lt;p&gt;&lt;span class=&quot;descriptor&quot;&gt;Abstract:&lt;/span&gt; The game of chess is the most widely-studied domain in the history of artificial intelligence. The strongest programs are based on a combination of sophisticated search techniques, domain-specific adaptations, and handcrafted evaluation functions that have been refined by human experts over several decades. In contrast, the AlphaGo Zero program recently achieved superhuman performance in the game of Go, by tabula rasa reinforcement learning from games of self-play. In this paper, we generalise this approach into a single AlphaZero algorithm that can achieve, tabula rasa, superhuman performance in many challenging domains. Starting from random play, and given no domain knowledge except the game rules, AlphaZero achieved within 24 hours a superhuman level of play in the games of chess and shogi (Japanese chess) as well as Go, and convincingly defeated a world-champion program in each case.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;30.344086021505&quot;&gt;
&lt;h2&gt;Submission history&lt;/h2&gt;
From: David Silver [&lt;a href=&quot;https://arxiv.org/show-email/6890fc68/1712.01815&quot;&gt;view email&lt;/a&gt;]&lt;br /&gt;&lt;strong&gt;[v1]&lt;/strong&gt; Tue, 5 Dec 2017 18:45:38 GMT (272kb,D)&lt;br /&gt;&lt;/div&gt;</description>
<pubDate>Wed, 06 Dec 2017 03:17:22 +0000</pubDate>
<dc:creator>dennybritz</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arxiv.org/abs/1712.01815</dc:identifier>
</item>
<item>
<title>Portugal’s radical drug policy is working. Why hasn’t the world copied it?</title>
<link>https://www.theguardian.com/news/2017/dec/05/portugals-radical-drugs-policy-is-working-why-hasnt-the-world-copied-it</link>
<guid isPermaLink="true" >https://www.theguardian.com/news/2017/dec/05/portugals-radical-drugs-policy-is-working-why-hasnt-the-world-copied-it</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;W&lt;/span&gt;&lt;/span&gt;hen the drugs came, they hit all at once. It was the 80s, and by the time one in 10 people had slipped into the depths of heroin use – bankers, university students, carpenters, socialites, miners – &lt;a href=&quot;https://www.theguardian.com/world/portugal&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Portugal&lt;/a&gt; was in a state of panic.&lt;/p&gt;
&lt;p&gt;Álvaro Pereira was working as a family doctor in Olhão in southern Portugal. “People were injecting themselves in the street, in public squares, in gardens,” he told me. “At that time, not a day passed when there wasn’t a robbery at a local business, or a mugging.”&lt;/p&gt;
&lt;p&gt;The crisis began in the south. The 80s were a prosperous time in Olhão, a fishing town 31 miles west of the Spanish border. Coastal waters filled fishermen’s nets from the Gulf of Cádiz to Morocco, tourism was growing, and currency flowed throughout the southern Algarve region. But by the end of the decade, heroin began washing up on Olhão’s shores. Overnight, Pereira’s beloved slice of the Algarve coast became one of the drug capitals of Europe: one in every 100 Portuguese was battling a problematic heroin addiction at that time, but the number was even higher in the south. Headlines in the local press raised the alarm about overdose deaths and rising crime. The rate of HIV infection in Portugal became the highest in the European Union. Pereira recalled desperate patients and families beating a path to his door, terrified, bewildered, begging for help. “I got involved,” he said, “only because I was ignorant.”&lt;/p&gt;
&lt;p&gt;In truth, there was a lot of ignorance back then. Forty years of &lt;a href=&quot;https://www.theguardian.com/world/2015/mar/08/great-escape-that-changed-africas-future&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;authoritarian rule&lt;/a&gt; under the regime established by António Salazar in 1933 had suppressed education, weakened institutions and lowered the school-leaving age, in a strategy intended to keep the population docile. The country was closed to the outside world; people missed out on the experimentation and mind-expanding culture of the 1960s. When the regime ended abruptly in a military coup in 1974, Portugal was suddenly opened to new markets and influences. Under the old regime, Coca-Cola was banned and owning a cigarette lighter required a licence. When marijuana and then heroin began flooding in, the country was utterly unprepared.&lt;/p&gt;
&lt;p&gt;Pereira tackled the growing wave of addiction the only way he knew how: one patient at a time. A student in her 20s who still lived with her parents might have her family involved in her recovery; a middle-aged man, estranged from his wife and living on the street, faced different risks and needed a different kind of support. Pereira improvised, calling on institutions and individuals in the community to lend a hand.&lt;/p&gt;
&lt;p&gt;In 2001, nearly two decades into Pereira’s accidental specialisation in addiction, Portugal became the first country to decriminalise the possession and consumption of all illicit substances. Rather than being arrested, those caught with a personal supply might be given a warning, a small fine, or told to appear before a local commission – a doctor, a lawyer and a social worker – about treatment, harm reduction, and the support services that were available to them.&lt;/p&gt;
&lt;p&gt;The opioid crisis soon stabilised, and the ensuing years saw dramatic drops in problematic drug use, HIV and hepatitis infection rates, overdose deaths, drug-related crime and incarceration rates. HIV infection plummeted from an all-time high in 2000 of 104.2 new cases per million to 4.2 cases per million in 2015. The data behind these changes has been studied and cited as evidence by harm-reduction movements around the globe. It’s misleading, however, to credit these positive results entirely to a change in law.&lt;/p&gt;
&lt;p&gt;Portugal’s remarkable recovery, and the fact that it has held steady through several changes in government – including conservative leaders who would have preferred to return to the US-style war on drugs – could not have happened without an enormous cultural shift, and a change in how the country viewed drugs, addiction – and itself. In many ways, the law was merely a reflection of transformations that were already happening in clinics, in pharmacies and around kitchen tables across the country. The official policy of decriminalisation made it far easier for a broad range of services (health, psychiatry, employment, housing etc) that had been struggling to pool their resources and expertise, to work together more effectively to serve their communities.&lt;/p&gt;
&lt;p&gt;The language began to shift, too. Those who had been referred to sneeringly as &lt;em&gt;drogados&lt;/em&gt; (junkies) – became known more broadly, more sympathetically, and more accurately, as “people who use drugs” or “people with addiction disorders”. This, too, was crucial.&lt;/p&gt;
&lt;p&gt;It is important to note that Portugal stabilised its opioid crisis, but it didn’t make it disappear. While drug-related death, incarceration and infection rates plummeted, the country still had to deal with the health complications of long-term problematic drug use. Diseases including hepatitis C, cirrhosis and liver cancer are a burden on a health system that is still struggling to recover from recession and cutbacks. In this way, Portugal’s story serves as a warning of challenges yet to come.&lt;/p&gt;
&lt;p&gt;Despite &lt;a href=&quot;https://www.nytimes.com/2017/09/22/opinion/sunday/portugal-drug-decriminalization.html&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;enthusiastic international reactions&lt;/a&gt; to Portugal’s success, local harm-reduction advocates have been frustrated by what they see as stagnation and inaction since decriminalisation came into effect. They criticise the state for dragging its feet on establishing supervised injection sites and drug consumption facilities; for failing to make the &lt;a href=&quot;https://www.theguardian.com/society/2016/dec/16/opioid-overdose-naloxone-pharmaceutical-price-gouging&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;anti-overdose medication naloxone&lt;/a&gt; more readily available; for not implementing needle-exchange programmes in prisons. Where, they ask, is the courageous spirit and bold leadership that pushed the country to decriminalise drugs in the first place?&lt;/p&gt;
&lt;hr class=&quot;section-rule&quot;/&gt;&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;I&lt;/span&gt;&lt;/span&gt;n the early days of Portugal’s panic, when Pereira’s beloved Olhão began falling apart in front of him, the state’s first instinct was to attack. Drugs were denounced as evil, drug users were demonised, and proximity to either was criminally and spiritually punishable. The Portuguese government launched a series of national anti-drug campaigns that were less “&lt;a href=&quot;https://www.theguardian.com/society/2016/mar/08/nancy-reagan-drugs-just-say-no-dare-program-opioid-epidemic&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Just Say No&lt;/a&gt;” and more “Drugs Are Satan”.&lt;/p&gt;
&lt;p&gt;Informal treatment approaches and experiments were rushed into use throughout the country, as doctors, psychiatrists, and pharmacists worked independently to deal with the flood of drug-dependency disorders at their doors, sometimes risking ostracism or arrest to do what they believed was best for their patients.&lt;/p&gt;
&lt;p&gt;In 1977, in the north of the country, psychiatrist Eduíno Lopes pioneered a methadone programme at the Centro da Boavista in Porto. Lopes was the first doctor in continental &lt;a href=&quot;https://www.theguardian.com/world/europe-news&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Europe&lt;/a&gt; to experiment with substitution therapy, flying in methadone powder from Boston, under the auspices of the Ministry of Justice, rather than the Ministry of Health. His efforts met with a vicious public backlash and the disapproval of his peers, who considered methadone therapy nothing more than state-sponsored drug addiction.&lt;/p&gt;
&lt;p&gt;In Lisbon, Odette Ferreira, an experienced pharmacist and pioneering HIV researcher, started an unofficial needle-exchange programme to address the growing Aids crisis. She received death threats from drug dealers, and legal threats from politicians. Ferreira – who is now in her 90s, and still has enough swagger to carry off long fake eyelashes and red leather at a midday meeting – started giving away clean syringes in the middle of Europe’s biggest open-air drug market, in the Casal Ventoso neighbourhood of Lisbon. She collected donations of clothing, soap, razors, condoms, fruit and sandwiches, and distributed them to users. When dealers reacted with hostility, she snapped back: “Don’t mess with me. You do your job, and I’ll do mine.” She then bullied the Portuguese Association of Pharmacies into running the country’s – and indeed the world’s – first national needle-exchange programme.&lt;/p&gt;
&lt;p&gt;A flurry of expensive private clinics and free, faith-based facilities emerged, promising detoxes and miracle cures, but the first public drug-treatment centre run by the Ministry of Health – the Centro das Taipas in Lisbon – did not begin operating until 1987. Strapped for resources in Olhão, Pereira sent a few patients for treatment, although he did not agree with the abstinence-based approach used at Taipas. “First you take away the drug, and then, with psychotherapy, you plug up the crack,” said Pereira. There was no scientific evidence to show that this would work – and it didn’t.&lt;/p&gt;
&lt;p&gt;He also sent patients to Lopes’s methadone programme in Porto, and found that some responded well. But Porto was at the other end of the country. He wanted to try methadone for his patients, but the Ministry of Health hadn’t yet approved it for use. To get around that, Pereira sometimes asked a nurse to sneak methadone to him in the boot of his car.&lt;/p&gt;
&lt;p&gt;Pereira’s work treating patients for addiction eventually caught the attention of the Ministry of Health. “They heard there was a crazy man in the Algarve who was working on his own,” he said, with a slow smile. Now 68, he is sprightly and charming, with an athletic build, thick and wavy white hair that bounces when he walks, a gravelly drawl and a bottomless reserve of warmth. “They came down to find me at the clinic and proposed that I open a treatment centre,” he said. He invited a colleague from at a family practice in the next town over to join him – a young local doctor named João Goulão.&lt;/p&gt;
&lt;p&gt;Goulão was a 20-year-old medical student when he was offered his first hit of heroin. He declined because he didn’t know what it was. By the time he finished school, got his licence and began practising medicine at a health centre in the southern city of Faro, it was everywhere. Like Pereira, he accidentally ended up specialising in treating drug addiction.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;A nurse hands out methadone to addicts in Lisbon.&quot; src=&quot;https://i.guim.co.uk/img/media/466c8c27bbee643a1c698162feefaa61e161c864/0_0_5906_3937/master/5906.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=66c9708b5e1e531fdd974aa8c991dfac&quot;/&gt;&lt;/div&gt;

A nurse hands out methadone to addicts in Lisbon. Photograph: Horacio Villalobos/Corbis via Getty Images
&lt;p&gt;The two young colleagues joined forces to open southern Portugal’s first CAT in 1988. (These kinds of centres have used different names and acronyms over the years, but are still commonly referred to as &lt;em&gt;Centros de Atendimento a Toxicodependentes&lt;/em&gt;, or CATs.) Local residents were vehemently opposed, and the doctors were improvising treatments as they went along. The following month, Pereira and Goulão opened a second CAT in Olhão, and other family doctors opened more in the north and central regions, forming a loose network. It had become clear to a growing number of practitioners that the most effective response to addiction had to be personal, and rooted in communities. Treatment was still small-scale, local and largely ad hoc.&lt;/p&gt;
&lt;p&gt;The first official call to change Portugal’s drug laws came from Rui Pereira, a former constitutional court judge who undertook an overhaul of the penal code in 1996. He found the practice of jailing people for taking drugs to be counterproductive and unethical. “My thought right off the bat was that it wasn’t legitimate for the state to punish users,” he told me in his office at the University of Lisbon’s school of law. At that time, about half of the people in prison were there for drug-related reasons, and the epidemic, he said, was thought to be “an irresolvable problem”. He recommended that drug use be discouraged without imposing penalties, or further alienating users. His proposals weren’t immediately adopted, but they did not go unnoticed.&lt;/p&gt;
&lt;p&gt;In 1997, after 10 years of running the CAT in Faro, Goulão was invited to help design and lead a national drug strategy. He assembled a team of experts to study potential solutions to Portugal’s drug problem. The resulting recommendations, including the full decriminalisation of drug use, were presented in 1999, approved by the council of ministers in 2000, and a new national plan of action came into effect in 2001.&lt;/p&gt;
&lt;p&gt;Today, Goulão is Portugal’s drug czar. He has been the lodestar throughout eight alternating conservative and progressive administrations; through heated standoffs with lawmakers and lobbyists; through shifts in scientific understanding of addiction and in cultural tolerance for drug use; through austerity cuts, and through a global policy climate that only very recently became slightly less hostile. Goulão is also decriminalisation’s busiest global ambassador. He travels almost non-stop, invited again and again to present the successes of Portugal’s harm-reduction experiment to authorities around the world, from Norway to Brazil, which are dealing with desperate situations in their own countries.&lt;/p&gt;
&lt;p&gt;“These social movements take time,” Goulão told me. “The fact that this happened across the board in a conservative society such as ours had some impact.” If the heroin epidemic had affected only Portugal’s lower classes or racialised minorities, and not the middle or upper classes, he doubts the conversation around drugs, addiction and harm reduction would have taken shape in the same way. “There was a point whenyou could not find a single Portuguese family that wasn’t affected. Every family had their addict, or addicts. This was universal in a way that the society felt: ‘We have to do something.’”&lt;/p&gt;
&lt;p&gt;Portugal’s policy rests on three pillars: one, that there’s no such thing as a soft or hard drug, only healthy and unhealthy relationships with drugs; two, that an individual’s unhealthy relationship with drugs often conceals frayed relationships with loved ones, with the world around them, and with themselves; and three, that the eradication of all drugs is an impossible goal.&lt;/p&gt;
&lt;p&gt;“The national policy is to treat each individual differently,” Goulão told me. “The secret is for us to be present.”&lt;/p&gt;
&lt;hr class=&quot;section-rule&quot;/&gt;&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;A&lt;/span&gt;&lt;/span&gt; drop-in centre called IN-Mouraria sits unobtrusively in a lively, rapidly gentrifying neighbourhood of Lisbon, a longtime enclave of marginalised communities. From 2pm to 4pm, the centre provides services to undocumented migrants and refugees; from 5pm to 8pm, they open their doors to drug users. A staff of psychologists, doctors and peer support workers (themselves former drug users) offer clean needles, pre-cut squares of foil, crack kits, sandwiches, coffee, clean clothing, toiletries, rapid HIV testing, and consultations – all free and anonymous.&lt;/p&gt;
&lt;p&gt;On the day I visited, young people stood around waiting for HIV test results while others played cards, complained about police harassment, tried on outfits, traded advice on living situations, watched movies and gave pep talks to one another. They varied in age, religion, ethnicity and gender identity, and came from all over the country and all over the world. When a slender, older man emerged from the bathroom, unrecognisable after having shaved his beard off, an energetic young man who had been flipping through magazines threw up his arms and cheered. He then turned to a quiet man sitting on my other side, his beard lush and dark hair curling from under his cap, and said: “What about you? Why don’t you go shave off that beard? You can’t give up on yourself, man. That’s when it’s all over.” The bearded man cracked a smile.&lt;/p&gt;
&lt;p&gt;During my visits over the course of a month, I got to know some of the peer support workers, including João, a compact man with blue eyes who was rigorous in going over the details and nuances of what I was learning. João wanted to be sure I understood their role at the drop-in centre was not to force anyone to stop using, but to help minimise the risks users were exposed to.&lt;/p&gt;
&lt;p&gt;“Our objective is not to steer people to treatment – they have to want it,” he told me. But even when they do want to stop using, he continued, having support workers accompany them to appointments and treatment facilities can feel like a burden on the user – and if the treatment doesn’t go well, there is the risk that that person will feel too ashamed to return to the drop-in centre. “Then we lose them, and that’s not what we want to do,” João said. “I want them to come back when they relapse.” Failure was part of the treatment process, he told me. And he would know.&lt;/p&gt;
&lt;p&gt;João is a marijuana-legalisation activist, open about being HIV-positive, and after being absent for part of his son’s youth, he is delighting in his new role as a grandfather. He had stopped doing speedballs (mixtures of cocaine and opiates) after several painful, failed treatment attempts, each more destructive than the last. He long used cannabis as a form of therapy – methadone did not work for him, nor did any of the inpatient treatment programmes he tried – but the cruel hypocrisy of decriminalisation meant that although smoking weed was not a criminal offence, purchasing it was. His last and worst relapse came when he went to buy marijuana from his usual dealer and was told: “I don’t have that right now, but I do have some good cocaine.” João said no thanks and drove away, but soon found himself heading to a cash machine, and then back to the dealer. After this relapse, he embarked on a new relationship, and started his own business. At one point he had more than 30 employees. Then the financial crisis hit. “Clients weren’t paying, and creditors started knocking on my door,” he told me. “Within six months I had burned through everything I had built up over four or five years.”&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Addicts waiting for methadone at a mobile drug clinic in Lisbon.&quot; src=&quot;https://i.guim.co.uk/img/media/3b36f65386f856b1e6f6357625e5d3ed41930177/0_0_5023_5906/master/5023.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=5e4410f57f3a64c9a6029be2578815a4&quot;/&gt;&lt;/div&gt;

Addicts waiting for methadone at a drug treatment project in Lisbon. Photograph: Horacio Villalobos/Corbis via Getty Images
&lt;p&gt;In the mornings, I followed the centre’s street teams out to the fringes of Lisbon. I met Raquel and Sareia – their slim forms swimming in the large hi-vis vests they wear on their shifts – who worked with &lt;a href=&quot;http://crescer.org/en/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Crescer na Maior&lt;/a&gt;, a harm-reduction NGO. Six times a week, they loaded up a large white van with drinking water, wet wipes, gloves, boxes of tinfoil and piles of state-issued drug kits: green plastic pouches with single-use servings of filtered water, citric acid, a small metal tray for cooking, gauze, filter and a clean syringe. Portugal does not yet have any supervised injection sites (although there is legislation to allow them, several attempts to open one have come to nothing), so, Raquel and Sareia told me, they go out to the open-air sites where they know people go to buy and use. Both are trained psychologists, but out in the streets they are known simply as the “needle girls”.&lt;/p&gt;
&lt;p&gt;“Good afternoon!” Raquel called out cheerily, as we walked across a seemingly abandoned lot in an area called Cruz Vermelha. “Street team!” People materialised from their hiding places like some strange version of whack-a-mole, poking their heads out from the holes in the wall where they had gone to smoke or shoot up. “My needle girls,” one woman cooed to them tenderly. “How are you, my loves?” Most made polite conversation, updating the workers on their health struggles, love lives, immigration woes or housing needs. One woman told them she would be going back to Angola to deal with her mother’s estate, that she was looking forward to the change of scenery. Another man told them he had managed to get his online girlfriend’s visa approved for a visit. “Does she know you’re still using?” Sareia asked. The man looked sheepish.&lt;/p&gt;
&lt;p&gt;“I start methadone tomorrow,” another man said proudly. He was accompanied by his beaming girlfriend, and waved a warm goodbye to the girls as they handed him a square of foil.&lt;/p&gt;
&lt;p&gt;In the foggy northern city of Porto, peer support workers from &lt;a href=&quot;http://www.eurohrn.eu/index.php/drug-user-organisation-survey?id=44:portugal&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Caso&lt;/a&gt; – an association run by and for drug users and former users, the only one of its kind in Portugal – meet every week at a noisy cafe. They come here every Tuesday morning to down espressos, fresh pastries and toasted sandwiches, and to talk out the challenges, debate drug policy (which, a decade and a half after the law came into effect, was still confusing for many) and argue, with the warm rowdiness that is characteristic of people in the northern region. When I asked them what they thought of Portugal’s move to treat drug users as sick people in need of help, rather than as criminals, they scoffed. “Sick? We don’t say ‘sick’ up here. We’re not sick.”&lt;/p&gt;
&lt;p&gt;I was told this again and again in the north: thinking of drug addiction simply in terms of health and disease was too reductive. Some people are able to use drugs for years without any major disruption to their personal or professional relationships. It only became a problem, they told me, when it became a &lt;em&gt;problem&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Caso was supported by &lt;a href=&quot;http://www.apdes.pt/en/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Apdes&lt;/a&gt;, a development NGO with a focus on harm reduction and empowerment, including programmes geared toward recreational users. Their award-winning &lt;a href=&quot;http://www.apdes.pt/en/services/health-harm-reduction-human-rights/check!n.html&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Check!n project&lt;/a&gt; has for years set up shop at festivals, bars and parties to test substances for dangers. I was told more than once that if drugs were legalised, not just decriminalised, then these substances would be held to the same rigorous quality and safety standards as food, drink and medication.&lt;/p&gt;
&lt;hr class=&quot;section-rule&quot;/&gt;&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;I&lt;/span&gt;&lt;/span&gt;n spite of Portugal’s tangible results, other countries have been reluctant to follow. The Portuguese began seriously considering decriminalisation in 1998, immediately following the first UN General Assembly Special Session on the Global Drug Problem (UNgass). High-level UNgass meetings are convened every 10 years to set drug policy for all member states, addressing trends in addiction, infection, money laundering, trafficking and cartel violence. At the first session – for which the slogan was “A drug-free world: we can do it” – Latin American member states pressed for a radical rethinking of the war on drugs, but every effort to examine alternative models (such as decriminalisation) was blocked. By the time of the next session, in 2008, worldwide drug use and violence related to the drug trade had vastly increased. An extraordinary session &lt;a href=&quot;https://www.theguardian.com/world/2016/apr/19/un-summit-global-war-drugs-agreement-approved&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;was held last year&lt;/a&gt;, but it was &lt;a href=&quot;https://www.theguardian.com/world/2016/apr/02/un-war-on-drugs-failure-prohibition-united-nations&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;largely a disappointment&lt;/a&gt; – the outcome document didn’t mention “harm reduction” once.&lt;/p&gt;
&lt;p&gt;Despite that letdown, 2016 produced a number of promising other developments: Chile and Australia opened their first medical cannabis clubs; following the lead of several others, four more US states introduced medical cannabis, and four more legalised recreational cannabis; Denmark opened the world’s largest drug consumption facility, and France opened its first; South Africa proposed legalising medical cannabis; Canada &lt;a href=&quot;https://www.theguardian.com/world/2016/apr/20/canada-legislation-decriminalize-recreational-cannabis-weed-marijuana&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;outlined a plan&lt;/a&gt; to legalise recreational cannabis nationally and to open more supervised injection sites; and Ghana announced it would decriminalise all personal drug use.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;The biggest change in global attitudes and policy has been the momentum behind cannabis legalisation. Local activists have pressed Goulão to take a stance on regulating cannabis and legalising its sale in Portugal; for years, he has responded that the time wasn’t right. Legalising a single substance would call into question the foundation of Portugal’s drug and harm-reduction philosophy. If the drugs aren’t the problem, if the problem is the relationship with drugs, if there’s no such thing as a hard or a soft drug, and if all illicit substances are to be treated equally, he argued, then shouldn’t all drugs be legalised and regulated?&lt;/p&gt;
&lt;p&gt;Massive international cultural shifts in thinking about drugs and addiction are needed to make way for decriminalisation and legalisation globally. In the US, the White House has remained reluctant to address what drug policy reform advocates have termed an “addiction to punishment”. But if conservative, isolationist, Catholic Portugal could transform into a country where same-sex marriage and abortion are legal, and where drug use is decriminalised, a broader shift in attitudes seems possible elsewhere. But, as the harm-reduction adage goes: one has to want the change in order to make it.&lt;/p&gt;
&lt;hr class=&quot;section-rule&quot;/&gt;&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;W&lt;/span&gt;&lt;/span&gt;hen Pereira first opened the CAT in Olhão, he faced vociferous opposition from residents; they worried that with more &lt;em&gt;drogados&lt;/em&gt; would come more crime. But the opposite happened. Months later, one neighbour came to ask Pereira’s forgiveness. She hadn’t realised it at the time, but there had been three drug dealers on her street; when their local clientele stopped buying, they packed up and left.&lt;/p&gt;
&lt;p&gt;The CAT building itself is a drab, brown two-storey block, with offices upstairs and an open waiting area, bathrooms, storage and clinics down below. The doors open at 8.30am, seven days a week, 365 days a year. Patients wander in throughout the day for appointments, to chat, to kill time, to wash, or to pick up their weekly supply of methadone doses. They tried to close the CAT for Christmas Day one year, but patients asked that it stay open. For some, estranged from loved ones and adrift from any version of home, this is the closest thing they’ve got to community and normality.&lt;/p&gt;
&lt;p&gt;“It’s not just about administering methadone,” Pereira told me. “You have to maintain a relationship.”&lt;/p&gt;
&lt;p&gt;In a back room, rows of little canisters with banana-flavoured methadone doses were lined up, each labelled with a patient’s name and information. The Olhão CAT regularly services about 400 people, but that number can double during the summer months, when seasonal workers and tourists come to town. Anyone receiving treatment elsewhere in the country, or even outside Portugal, can have their prescription sent over to the CAT, making the Algarve an ideal harm-reduction holiday destination.&lt;/p&gt;
&lt;p&gt;After lunch at a restaurant owned by a former CAT employee, the doctor took me to visit another of his projects – a particular favourite. His decades of working with addiction disorders had taught him some lessons, and he poured his accumulated knowledge into designing a special treatment facility on the outskirts of Olhão: the Unidade de Desabituação, or Dishabituation Centre. Several such UDs, as they are known, have opened in other regions of the country, but this centre was developed to cater to the particular circumstances and needs of the south.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;A man receives clean syringes after being given methadone at a clinic in Lisbon.&quot; src=&quot;https://i.guim.co.uk/img/media/fcd9c0b00a938a95b16610cef6a08c99eb620df4/0_0_5906_4198/master/5906.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=78a6b9b6138c3cebd06d5eb4cdf0d543&quot;/&gt;&lt;/div&gt;

A man receives clean syringes after being given methadone at a clinic in Lisbon. Photograph: Horacio Villalobos/Corbis via Getty Images
&lt;p&gt;Pereira stepped down as director some years ago, but his replacement asked him to stay on to help with day-to-day operations. Pereira should be retired by now – indeed, he tried to – but Portugal is suffering from an overall shortage of health professionals in the public system, and not enough young doctors are stepping into this specialisation. As his colleagues elsewhere in the country grow closer to their own retirements, there’s a growing sense of dread that there is no one to replace them.&lt;/p&gt;
&lt;p&gt;“Those of us from the Algarve always had a bit of a different attitude from our colleagues up north,” Pereira told me. “I don’t treat patients. They treat themselves. My function is to help them to make the changes they need to make.”&lt;/p&gt;
&lt;p&gt;And thank goodness there is only one change to make, he deadpanned as we pulled into the centre’s parking lot: “You need to change almost everything.” He cackled at his own joke and stepped out of his car.&lt;/p&gt;
&lt;p&gt;The glass doors at the entrance slid open to a facility that was bright and clean without feeling overwhelmingly institutional. Doctors’ and administrators’ offices were up a sweeping staircase ahead. Women at the front desk nodded their hellos, and Pereira greeted them warmly: “Good afternoon, my darlings.”&lt;/p&gt;
&lt;p&gt;The Olhão centre was built for just under €3m (£2.6m), publicly funded, and opened to its first patients nine years ago. This facility, like the others, is connected to a web of health and social rehabilitation services. It can house up to 14 people at once: treatments are free, available on referral from a doctor or therapist, and normally last between eight and 14 days. When people first arrive, they put all of their personal belongings – photos, mobile phones, everything – into storage, retrievable on departure.&lt;/p&gt;
&lt;p&gt;“We believe in the old maxim: ‘No news is good news,’” explained Pereira. “We don’t do this to punish them but to protect them.” Memories can be triggering, and sometimes families, friends and toxic relationships can be enabling.&lt;/p&gt;
&lt;p&gt;To the left there were intake rooms and a padded isolation room, with clunky security cameras propped up in every corner. Patients each had their own suites – simple, comfortable and private. To the right, there was a “colour” room, with a pottery wheel, recycled plastic bottles, paints, egg cartons, glitter and other craft supplies. In another room, coloured pencils and easels for drawing. A kiln, and next to it a collection of excellent handmade ashtrays. Many patients remained heavy smokers.&lt;/p&gt;
&lt;p&gt;Patients were always occupied, always using their hands or their bodies or their senses, doing exercise or making art, always filling their time with something. “We’d often hear our patients use the expression ‘me and my body’,” Pereira said. “As though there was a dissociation between the ‘me’ and ‘my flesh’.”&lt;/p&gt;
&lt;p&gt;To help bring the body back, there was a small gym, exercise classes, physiotherapy and a jacuzzi. And after so much destructive behaviour – messing up their bodies, their relationships, their lives and communities – learning that they could create good and beautiful things was sometimes transformational.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 2&quot;&gt;
&lt;/aside&gt;&lt;p&gt;“You know those lines on a running track?” Pereira asked me. He believed that everyone – however imperfect – was capable of finding their own way, given the right support. “Our love is like those lines.”&lt;/p&gt;
&lt;p&gt;He was firm, he said, but never punished or judged his patients for their relapses or failures. Patients were free to leave at any time, and they were welcome to return if they needed, even if it was more than a dozen times.&lt;/p&gt;
&lt;p&gt;He offered no magic wand or one-size-fits-all solution, just this daily search for balance: getting up, having breakfast, making art, taking meds, doing exercise, going to work, going to school, going into the world, going forward. Being alive, he said to me more than once, can be very complicated.&lt;/p&gt;
&lt;p&gt;“My darling,” he told me, “it’s like I always say: I may be a doctor, but nobody’s perfect.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A longer version of this piece appears on&lt;/em&gt; &lt;a href=&quot;https://www.thecommononline.org/decriminalization-a-love-story/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;&lt;em&gt;thecommononline.org&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Research and travel for this piece were made possible by the &lt;a href=&quot;https://journalism.nyu.edu/about-us/awards-and-fellowships/matthew-power-literary-reporting-award/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Matthew Power Literary Reporting Award&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;bullet&quot;&gt;•&lt;/span&gt; Follow the Long Read on Twitter at &lt;a href=&quot;https://twitter.com/@gdnlongread&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;@gdnlongread&lt;/a&gt;, or sign up to the long read weekly email &lt;a href=&quot;https://www.theguardian.com/info/ng-interactive/2017/may/05/sign-up-for-the-long-read-email&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 01:42:11 +0000</pubDate>
<dc:creator>benbreen</dc:creator>
<og:url>http://www.theguardian.com/news/2017/dec/05/portugals-radical-drugs-policy-is-working-why-hasnt-the-world-copied-it</og:url>
<og:description>The long read: Since it decriminalised all drugs in 2001, Portugal has seen dramatic drops in overdoses, HIV infection and drug-related crime</og:description>
<og:image>https://i.guim.co.uk/img/media/dd8e9844a0e39c97ed646bda8a4b01bac9f08d48/0_0_1960_1176/master/1960.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxNi8wNS8yNS9vdmVybGF5LWxvZ28tMTIwMC05MF9vcHQucG5n&amp;s=03fd41adf0d02b56434b87641f63f8f2</og:image>
<og:type>article</og:type>
<og:title>Portugal’s radical drugs policy is working. Why hasn’t the world copied it?</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/news/2017/dec/05/portugals-radical-drugs-policy-is-working-why-hasnt-the-world-copied-it</dc:identifier>
</item>
<item>
<title>Google Is Blocking YouTube on Amazon&amp;#039;s Echo Show and Fire TV</title>
<link>https://www.engadget.com/2017/12/05/google-blocking-youtube-on-amazon-echo-show-fire-tv/</link>
<guid isPermaLink="true" >https://www.engadget.com/2017/12/05/google-blocking-youtube-on-amazon-echo-show-fire-tv/</guid>
<description>&lt;p&gt;A person familiar with Google's thinking on the matter told Engadget that a big point of contention had been the fact that Amazon implemented what was essentially a hacked version of YouTube on both the Echo Show and Fire TV. Rather than work with Google to build versions of its apps that work on Amazon's devices, Amazon has been trying to do it itself -- a move that cuts out features and also likely affects Google's ability to collect on some of the ad revenue that comes from its videos.&lt;/p&gt;
&lt;p&gt;We've learned that Google is pulling support for YouTube from the Echo Show as of today; the version of YouTube that exists on Fire TV will work until January 1st.&lt;/p&gt;
&lt;p&gt;Google and Amazon have been in discussions for a long time to try and have a more mutually beneficial relationship, but it sounds like it hasn't been going well. Our source says that Google would like to have more of its hardware products like Chromecast and Google Home available through Amazon, but the company has long avoided selling products that compete with its own hardware initiatives -- that's why you can't get an Apple TV on Amazon, for example. Similarly, Amazon Prime Video doesn't support Google's Cast feature, making it difficult to get video to a big screen for Android users.&lt;/p&gt;
&lt;p&gt;Between those difficulties and the fact that Amazon pulled some of Nest's recent products (including the new Thermostat E, Camera IQ and Nest Secure alarm system), Google doesn't seem inclined to let Amazon continue to run its &quot;hacked&quot; versions of YouTube on its devices, though our source says that Google would be much happier working directly with Amazon than forcing consumers to pick sides.&lt;/p&gt;
&lt;p&gt;That's not an unreasonable position to take, as the company surely wants more control over the YouTube experience on Amazon's products, but unfortunately the only people getting hurt in this feud are customers. Google seems to be betting that Amazon will want to get YouTube back up and running on its flagship video products before long, so it can afford to take a hard line here. Whether or not things get resolved by the end of the year remains to be seen, though.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Amazon has responded, and its response points to the unfair nature of Google effectively blocking access to the YouTube web site based on the type of device being used to access it. &quot;Echo Show and Fire TV now display a standard web view of YouTube.com and point customers directly to YouTube's existing website,&quot; Amazon's statement reads. &quot;Google is setting a disappointing precedent by selectively blocking customer access to an open website. We hope to resolve this with Google as soon as possible.&quot;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Dec 2017 23:21:17 +0000</pubDate>
<dc:creator>electriclove</dc:creator>
<og:type>article</og:type>
<og:url>https://www.engadget.com/2017/12/05/google-blocking-youtube-on-amazon-echo-show-fire-tv/</og:url>
<og:title>Google is blocking YouTube on Amazon's Echo Show and Fire TV</og:title>
<og:description>Google is playing hardball with Amazon by pulling YouTube support from the Echo Show.</og:description>
<og:image>https://o.aolcdn.com/images/dims?thumbnail=1200%2C630&amp;quality=80&amp;image_uri=https%3A%2F%2Fo.aolcdn.com%2Fimages%2Fdims%3Fresize%3D2000%252C2000%252Cshrink%26image_uri%3Dhttp%253A%252F%252Fo.aolcdn.com%252Fhss%252Fstorage%252Fmidas%252F7f55a3f7b69e31a3ebcd222f72ec521b%252F205714368%252Fhss-storage-midas-c2eace0e87b831d45809c88066e8aaac-205412593-1.jpg%26client%3Da1acac3e1b3290917d92%26signature%3Da36de2cf1a0a59bd630c0baa93efae76f34a2ff4&amp;client=cbc79c14efcebee57402&amp;signature=803aedb63be7966ada5b02d79420bb706af4ecd7</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.engadget.com/2017/12/05/google-blocking-youtube-on-amazon-echo-show-fire-tv/</dc:identifier>
</item>
<item>
<title>C++17 Standard Published</title>
<link>https://www.iso.org/standard/68564.html</link>
<guid isPermaLink="true" >https://www.iso.org/standard/68564.html</guid>
<description>&lt;p&gt;ISO/IEC 14882:2017 specifies requirements for implementations of the C++ programming language. The first such requirement is that they implement the language, so this document also defines C++. Other requirements and relaxations of the first requirement appear at various places within this document.&lt;/p&gt;
&lt;p&gt;C++ is a general purpose programming language based on the C programming language as described in ISO/IEC 9899:2011 Programming languages ? C (hereinafter referred to as the C standard). In addition to the facilities provided by C, C++ provides additional data types, classes, templates, exceptions, namespaces, operator overloading, function name overloading, references, free store management operators, and additional library facilities.&lt;/p&gt;
</description>
<pubDate>Tue, 05 Dec 2017 21:33:04 +0000</pubDate>
<dc:creator>whack</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.iso.org/standard/68564.html</dc:identifier>
</item>
<item>
<title>Why I love Go</title>
<link>https://dmitryfrank.com/articles/i_love_go</link>
<guid isPermaLink="true" >https://dmitryfrank.com/articles/i_love_go</guid>
<description>&lt;blockquote&gt;
&lt;div class=&quot;no&quot;&gt;No way to enforce initialization of some struct's field&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Perhaps this pattern will reduce pain: &lt;a href=&quot;https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis&quot; class=&quot;urlextern&quot; target=&quot;_blank&quot; title=&quot;https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis&quot; rel=&quot;nofollow&quot;&gt;https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Dec 2017 21:20:23 +0000</pubDate>
<dc:creator>dimonomid</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dmitryfrank.com/articles/i_love_go</dc:identifier>
</item>
<item>
<title>Neural Networks in JavaScript with Deeplearn.js</title>
<link>https://www.robinwieruch.de/neural-networks-deeplearnjs-javascript/</link>
<guid isPermaLink="true" >https://www.robinwieruch.de/neural-networks-deeplearnjs-javascript/</guid>
<description>&lt;header&gt;
&lt;/header&gt;&lt;div class=&quot;text-center&quot;&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/intent/follow?screen_name=rwieruch&quot; class=&quot;twitter-button-follow&quot;&gt;Follow @rwieruch&lt;/a&gt;   &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rwieruch&quot; class=&quot;github-button-follow&quot;&gt;Follow @rwieruch&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;text-muted text-uppercase mb-small text-center&quot;&gt;&lt;time datetime=&quot;2017-12-05&quot; itemprop=&quot;datePublished&quot;&gt;December 5, 2017&lt;/time&gt;&lt;span class=&quot;hidden-xs hidden-sm&quot;&gt;- &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rwieruch/blog_robinwieruch_content/blob/master/neural-networks-deeplearnjs-javascript.md&quot;&gt;Edit this Post on GitHub&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;post-image-primary&quot;&gt;
&lt;div class=&quot;pinterest-pinner-wrapper&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;

&lt;img class=&quot;img-lazy img-responsive&quot; data-lazy-src=&quot;/img/posts/neural-networks-deeplearnjs-javascript/banner.jpg&quot; data-is-src-set=&quot;is-src-set&quot; alt=&quot;neural network javascript deeplearnjs&quot; itemprop=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A couple of my recent articles gave an introduction into a subfield of artificial intelligence by implementing foundational machine learning algorithms in JavaScript (e.g. &lt;a href=&quot;https://www.robinwieruch.de/linear-regression-gradient-descent-javascript/&quot;&gt;linear regression with gradient descent&lt;/a&gt;, &lt;a href=&quot;https://www.robinwieruch.de/multivariate-linear-regression-normal-equation-javascript&quot;&gt;linear regression with normal equation&lt;/a&gt; or &lt;a href=&quot;https://robinwieruch.de/logistic-regression-gradient-descent-classification-javascript&quot;&gt;logistic regression with gradient descent&lt;/a&gt;). These machine learning algorithms were implemented from scratch in JavaScript by using the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;http://mathjs.org/&quot;&gt;math.js node package&lt;/a&gt; for linear algebra (e.g. &lt;a href=&quot;https://www.robinwieruch.de/linear-algebra-matrix-javascript/&quot;&gt;matrix operations&lt;/a&gt;) and calculus. You can find all of these machine learning algorithms grouped in a &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/javascript-machine-learning&quot;&gt;GitHub organization&lt;/a&gt;. If you find any flaws in them, please help me out to make the organization a great learning resource for others. I intend to grow the amount of repositories showcasing different machine learning algorithms to provide web developers a starting point when they enter the domain of machine learning.&lt;/p&gt;
&lt;p&gt;Personally, I found it becomes quite complex and challenging to implement those algorithms from scratch at some point. Especially when combining JavaScript and neural networks with the implementation of forward and back propagation. Since I am learning about neural networks myself at the moment, I started to look for libraries doing the job for me. Hopefully I am able to catch up with those foundational implementations to publish them in the GitHub organization in the future. However, for now, as I researched about potential candidates to facilitate neural networks in JavaScript, I came across &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://deeplearnjs.org/&quot;&gt;deeplearn.js&lt;/a&gt; which was recently released by Google. So I gave it a shot. In this article / tutorial, I want to share my experiences by implementing with you a neural network in JavaScript with deeplearn.js to solve a real world problem for web accessibility.&lt;/p&gt;
&lt;p&gt;I highly recommend to take the &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://click.linksynergy.com/link?id=yL1MQRWYyXQ&amp;amp;offerid=467035.1560515719&amp;amp;type=2&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fmachine-learning&quot;&gt;Machine Learning&lt;/a&gt; course by Andrew Ng. This article will not explain the machine learning algorithms in detail, but only demonstrate their usage in JavaScript. The course on the other hand goes into detail and explains these algorithms in an amazing quality. At this point in time of writing the article, I learn about the topic myself and try to internalize my learnings by writing about them and applying them in JavaScript. If you find any parts for improvements, please reach out in the comments or create a Issue/Pull Request on GitHub.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;neural-network-purpose&quot;&gt;What's the purpose of the Neural Network?&lt;/h2&gt;
&lt;p&gt;The neural network implemented in this article should be able to improve web accessibility by choosing an appropriate font color regarding a background color. For instance, the font color on a dark blue background should be white whereas the font color on a light yellow background should be black. You might wonder: Why would you need a neural network for the task in the first place? It isn’t too difficult to compute an accessible font color depending on a background color programmatically, is it? I quickly found a solution on Stack Overflow for the problem and adjusted it to my needs to facilitate colors in RGB space.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getAccessibleColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;r&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;g&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;b&lt;/span&gt; &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;colors&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;r&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;g&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;b&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;];&lt;/span&gt;

  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;c&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;colors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;col&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;col&lt;/span&gt; &lt;span&gt;&amp;lt;=&lt;/span&gt; &lt;span&gt;0.03928&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;col&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;12.92&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;pow&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;col&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;0.055&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;1.055&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2.4&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;});&lt;/span&gt;

  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;L&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.2126&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;])&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.7152&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;])&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.0722&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;L&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;0.179&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
    &lt;span&gt;?&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt; &lt;span&gt;]&lt;/span&gt;
    &lt;span&gt;:&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt; &lt;span&gt;];&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The use case of the neural network isn’t too valuable for the real world because there is already a programmatic way to solve the problem. There isn’t a need to use a machine trained algorithm for it. However, since there is a programmatic approach to solve the problem, it becomes simple to validate the performance of a neural network which might be able to solve the problem for us too. Checkout the animation in the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/javascript-machine-learning/color-accessibility-neural-network-deeplearnjs&quot;&gt;GitHub repository of a learning neural network&lt;/a&gt; to get to know how it will perform eventually and what you are going to build in this tutorial.&lt;/p&gt;
&lt;p&gt;If you are familiar with machine learning, you might have noticed that the task at hand is a classification problem. An algorithm should decide a binary output (font color: white or black) based on an input (background color). Over the course of training the algorithm with a neural network, it will eventually output the correct font colors based on background colors as inputs.&lt;/p&gt;
&lt;p&gt;The following sections will give you guidance to setup all parts for your neural network from scratch. It is up to you to wire the parts together in your own file/folder setup. But you can consolidate the previous referenced GitHub repository for the implementation details.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;data-set-generation-javascript&quot;&gt;Data Set Generation in JavaScript&lt;/h2&gt;
&lt;p&gt;A training set in machine learning consists of input data points and output data points (labels). It is used to train the algorithm which will predict the output for new input data points outside of the training set (e.g. test set). During the training phase, the algorithm trained by the neural network adjusts its weights to predict the given labels of the input data points. In conclusion, the trained algorithm is a function which takes a data point as input and approximates the output label.&lt;/p&gt;
&lt;p&gt;After the algorithm is trained with the help of the neural network, it can output font colors for new background colors which weren’t in the training set. Therefore you will use a &lt;strong&gt;test set&lt;/strong&gt; later on. It is used to verify the accuracy of the trained algorithm. Since we are dealing with colors, it isn’t difficult to generate a sample data set of input colors for the neural network.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;generateRandomRgbColors&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;const&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[];&lt;/span&gt;

  &lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;let&lt;/span&gt; &lt;span&gt;i&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;i&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt; &lt;span&gt;m&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;push&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;generateRandomRgbColor&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;function&lt;/span&gt; &lt;span&gt;generateRandomRgbColor&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
    &lt;span&gt;randomIntFromInterval&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;
    &lt;span&gt;randomIntFromInterval&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;
    &lt;span&gt;randomIntFromInterval&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;
  &lt;span&gt;];&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;function&lt;/span&gt; &lt;span&gt;randomIntFromInterval&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;max&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;floor&lt;/span&gt;&lt;span&gt;(Math.&lt;/span&gt;&lt;span&gt;random&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;max&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;min&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;min&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;generateRandomRgbColors()&lt;/code&gt; function creates partial data sets of a given size m. The data points in the data sets are colors in the RGB color space. Each color is represented as a row in a matrix whereas each column is a &lt;strong&gt;feature&lt;/strong&gt; of the color. A feature is either the R, G or B encoded value in the RGB space. The data set hasn’t any labels yet, so the training set isn’t complete, because it has only input values but no output values.&lt;/p&gt;
&lt;p&gt;Since the programmatic approach to generate an accessible font color based on a color is known, an adjusted version of the functionality can be derived to generate the labels for the training set (and the test set later on). The labels are adjusted for a binary classification problem and reflect the colors black and white implicitly in the RGB space. Therefore a label is either [0, 1] for the color black or [ 1, 0 ] for the color white.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getAccessibleColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;r&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;g&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;b&lt;/span&gt; &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;color&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;r&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;g&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;b&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;];&lt;/span&gt;

  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;c&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;color&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;col&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;col&lt;/span&gt; &lt;span&gt;&amp;lt;=&lt;/span&gt; &lt;span&gt;0.03928&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;col&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;12.92&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;pow&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;col&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;0.055&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;1.055&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2.4&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;});&lt;/span&gt;

  &lt;span&gt;let&lt;/span&gt; &lt;span&gt;L&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.2126&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;])&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.7152&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;])&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.0722&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;L&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;0.179&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;?&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;]&lt;/span&gt; &lt;span&gt;// black&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;:&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt; &lt;span&gt;];&lt;/span&gt; &lt;span&gt;// white&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you have everything in place to generate random data sets (training set, test set) of (background) colors which are classified either for black or white (font) colors.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;generateColorSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;const&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;generateRandomRgbColors&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;const&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;getAccessibleColor&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt; &lt;span&gt;};&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another step to give the underlying algorithm in the neural network a better time is &lt;a href=&quot;https://www.robinwieruch.de/improving-gradient-descent-javascript/&quot;&gt;feature scaling&lt;/a&gt;. In a simplified version of feature scaling, you want to have the values of your RGB channels between 0 and 1. Since you know about the maximum value, you can simply derive the normalized value for each color channel.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;normalizeColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;v&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is up to you to put this functionality in your neural network model or as separate utility function. I will put it in the neural network model in the next step.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;setup-neural-network-javascript&quot;&gt;Setup Phase of a Neural Network Model in JavaScript&lt;/h2&gt;
&lt;p&gt;Now comes the exciting part where you will implement a neural network in JavaScript. Before you can start implementing it, you should install the deeplearn.js library. It is a framework for neural networks in JavaScript. The official pitch for it says: &lt;em&gt;“deeplearn.js is an open-source library that brings performant machine learning building blocks to the web, allowing you to train neural networks in a browser or run pre-trained models in inference mode.”&lt;/em&gt; In this article, you will train your model yourself and run it in inference mode afterward. There are two major advantages to use the library:&lt;/p&gt;
&lt;p&gt;First, it uses the GPU of your local machine which accelerates the vector computations in machine learning algorithms. These machine learning computations are similar to graphical computations and thus it is computational efficient to use the GPU instead of the CPU.&lt;/p&gt;
&lt;p&gt;Second, deeplearn.js is structured similar to the popular Tensorflow library which happens to be also developed by Google but is written in Python. So if you want to make the jump to machine learning in Python, deeplearn.js might give you a great gateway to the whole domain in JavaScript.&lt;/p&gt;
&lt;p&gt;Let’s get back to your project. If you have set it up with npm, you can simply install deeplearn.js on the command line. Otherwise check the official documentation of the deeplearn.js project for installation instructions.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;npm&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; &lt;span&gt;deeplearn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since I didn’t build a vast number of neural networks myself yet, I followed the common practice of architecting the neural network in an object-oriented programming style. In JavaScript, you can use a &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;JavaScript ES6 class&lt;/a&gt; to facilitate it. A class gives you the perfect container for your neural network by defining properties and class methods to the specifications of your neural network. For instance, your function to normalize a color could find a spot in the class as method.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;normalizeColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;v&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perhaps it is a place for your functions to generate the data sets as well. In my case, I only put the normalization in the class as class method and leave the data set generation outside of the class. You could argue that there are different ways to generate a data set in the future and thus it shouldn’t be defined in the neural network model itself. Nevertheless, that’s only a implementation detail.&lt;/p&gt;
&lt;p&gt;The training and inference phase are summarized under the umbrella term &lt;strong&gt;session&lt;/strong&gt; in machine learning. You can setup the session for the neural network in your neural network class. First of all, you can import the NDArrayMathGPU class from deeplearn.js which helps you to perform mathematical calculations on the GPU in a computational efficient way.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;math&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second, declare your class method to setup your session. It takes a training set as argument in its function signature and thus it becomes the perfect consumer for a generated training set from a previous implemented function. In the third step, the session initializes an empty graph. In the next steps, the graph will reflect your architecture of the neural network. It is up to you to define all of its properties.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;..&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fourth, you define the shape of your input and output data points for your graph in form of a &lt;strong&gt;tensor&lt;/strong&gt;. A tensor is an array (of arrays) of numbers with a variable number of dimensions. It can be a vector, a matrix or a higher dimensional matrix. The neural network has these tensors as input and output. In our case, there are three input units (one input unit per color channel) and two output units (binary classification, e.g. white and black color).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fifth, a neural network has hidden layers in between. It’s the blackbox where the magic happens. Basically, the neural network comes up with its own cross computed paramaters which are trained in the session. After all, it is up to you to define the dimension (layer size with each unit size) of the hidden layer(s).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;64&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;32&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;inputLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;layerIndex&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;units&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Depending on your number of layers, you are altering the graph to span more and more of its layers. The class method which creates the connected layer takes the graph, the mutated connected layer, the index of the new layer and number of units. The layer property of the graph can be used to return a new tensor that is identified by a name.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;64&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;32&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
    &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;inputLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;layerIndex&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;units&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;layers&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;dense&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;`fully_connected_&lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;layerIndex&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;`&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;inputLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;units&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each neuron in a neural network has to have a defined &lt;strong&gt;activation function&lt;/strong&gt;. It can be a &lt;strong&gt;logistic activation function&lt;/strong&gt; that you might know already from logistic regression and thus it becomes a &lt;strong&gt;logistic unit&lt;/strong&gt; in the neural network. In our case, the neural network uses &lt;strong&gt;rectified linear units&lt;/strong&gt; as default.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;64&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;32&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
    &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;inputLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;layerIndex&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;units&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;activationFunction&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;layers&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;dense&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;`fully_connected_&lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;layerIndex&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;`&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
      &lt;span&gt;inputLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
      &lt;span&gt;units&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;activationFunction&lt;/span&gt; &lt;span&gt;?&lt;/span&gt; &lt;span&gt;activationFunction&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;relu&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sixth, create the layer which outputs the binary classification. It has 2 output units; one for each discrete value (black, white).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;64&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;32&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predictionTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Seventh, declare a cost tensor which defines the loss function. In this case, it will be a mean squared error. It optimizes the algorithm that takes the target tensor (labels) of the training set and the predicted tensor from the trained algorithm to evaluate the cost.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;64&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;32&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predictionTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;costTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;meanSquaredCost&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Last but not least, setup the session with the architected graph. Afterward, you can start to prepare the incoming training set for the upcoming training phase.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;session&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'input RGB value'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'output classifier'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);&lt;/span&gt;

    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;64&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;32&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;connectedLayer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predictionTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createConnectedLayer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;connectedLayer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;costTensor&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;graph&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;meanSquaredCost&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;session&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;math&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;prepareTrainingSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;prepareTrainingSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The setup isn’t done before preparing the training set for the neural network. First, you can support the computation by using a callback function in the GPU performed math context. But it’s not mandatory and you could perform the computation without it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;math&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;session&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;prepareTrainingSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;});&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second, you can destructure the input and output (labels, also called targets) from the training set to map them into a readable format for the neural network. The mathematical computations in deeplearn.js use their in-house NDArrays. After all, you can imagine them as simple array in array matrices or vectors. In addition, the colors from the input array are normalized to improve the performance of the neural network.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;math&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;session&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;prepareTrainingSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;inputArray&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;normalizeColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;)));&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;targetArray&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;});&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Third, the input and target arrays are shuffled. The shuffler provided by deeplearn.js keeps both arrays in sync when shuffling them. The shuffle happens for each training iteration to feed different inputs as batches to the neural network. The whole shuffling process improves the trained algorithm, because it is more likely to make generalizations by avoiding over-fitting.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;InCPUMemoryShuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;math&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;session&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;prepareTrainingSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;inputArray&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;normalizeColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;)));&lt;/span&gt;
      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;targetArray&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;

&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;shuffledInputProviderBuilder&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;InCPUMemoryShuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;inputArray&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;targetArray&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;]);&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;inputProvider&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;targetProvider&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;shuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getInputProviders&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;});&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Last but not least, the feed entries are the ultimate input for the feedforward algorithm of the neural network in the training phase. It matches data and tensors (which were defined by their shapes in the setup phase).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;InCPUMemoryShuffledInputProviderBuilder&lt;/span&gt;
  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;math&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;session&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;feedEntries&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;prepareTrainingSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;inputArray&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;normalizeColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;)));&lt;/span&gt;
      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;targetArray&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;rawTargets&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;

      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;shuffledInputProviderBuilder&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;InCPUMemoryShuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;([&lt;/span&gt;
        &lt;span&gt;inputArray&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;targetArray&lt;/span&gt;
      &lt;span&gt;]);&lt;/span&gt;

      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
        &lt;span&gt;inputProvider&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;targetProvider&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
      &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;shuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getInputProviders&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;      &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;feedEntries&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;{&lt;/span&gt; &lt;span&gt;tensor&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;data&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;inputProvider&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;{&lt;/span&gt; &lt;span&gt;tensor&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;data&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;targetProvider&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;];&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;});&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The setup phase of the neural network is finished. The neural network is implemented with all its layers and units. Moreover the training set is prepared for training. Only two &lt;strong&gt;hyperparameters&lt;/strong&gt; are missing to configure the high level behaviour of the neural network. These are used in the next phase: the training phase.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;InCPUMemoryShuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;SGDOptimizer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;math&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;session&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;optimizer&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;batchSize&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;300&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;initialLearningRate&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.06&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;targetTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

  &lt;span&gt;feedEntries&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;constructor&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;optimizer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;SGDOptimizer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;initialLearningRate&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first parameter is the &lt;strong&gt;learning rate&lt;/strong&gt;. You might remember it from linear or logistic regression with gradient descent. It determines how fast the algorithm converges to minimize the cost. So one could assume it should be high. But it mustn’t be too high. Otherwise gradient descent never converges because it cannot find a local optima.&lt;/p&gt;
&lt;p&gt;The second parameter is the &lt;strong&gt;batch size&lt;/strong&gt;. It defines how many data points of the training set are passed through the neural network in one &lt;strong&gt;epoch&lt;/strong&gt; (iteration). An epoch includes one forward pass and one backward pass of one batch of data points. There are two advantages to training a neural network with batches. First, it is not as computational intensive because the algorithm is trained with less data points in memory. Second, a neural network trains faster with batches because the weights are adjusted with each batch of data points in an epoch rather than the whole training set going through it.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;training-neural-network-javascript&quot;&gt;Training Phase&lt;/h2&gt;
&lt;p&gt;The setup phase is finished. Next comes the training phases. It doesn’t need too much implementation anymore, because all the cornerstones were defined in the setup phase. First of all, the &lt;strong&gt;training phase&lt;/strong&gt; can be defined in a class method. It is executed again in the math context of deeplearn.js. In addition, it uses all the predefined properties of the neural network instance to train the algorithm.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;train&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;session&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;feedEntries&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;batchSize&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;optimizer&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The train method is only one epoch of the neural network training. So when it is called from outside, it has to be called iteratively. Moreover it trains only one batch. In order to train the algorithm for multiple batches, you have to run multiple iterations of the train method again.&lt;/p&gt;
&lt;p&gt;That’s it for a basic training phase. But it can be improved by adjusting the learning rate over time. The learning rate can be high in the beginning, but when the algorithm converges with each step it takes, the learning rate could be decreased.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;step&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;learningRate&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;initialLearningRate&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;pow&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.90&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;floor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;step&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;50&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;optimizer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setLearningRate&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;learningRate&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;
    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;session&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;feedEntries&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;batchSize&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;optimizer&lt;/span&gt;
      &lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In our case, the learning rate decreases by 10% every 50 steps. Next, it would be interesting to get the cost in the training phase to verify that it decreases over time. It could be simply returned with each iteration, but that’s leads to computational inefficiency. Every time the cost is requested from the neural network, it has to access the GPU to return it. Therefore, we only access the cost once in a while to verify that it’s decreasing. If the cost is not requested, the cost reduction constant for the training is defined with NONE (which was the default before).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;InCPUMemoryShuffledInputProviderBuilder&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Graph&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;Session&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;SGDOptimizer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;NDArrayMathGPU&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;CostReduction&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'deeplearn'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;step&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;computeCost&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;learningRate&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;initialLearningRate&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;pow&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0.90&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;floor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;step&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;50&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;optimizer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setLearningRate&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;learningRate&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;costValue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;cost&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;session&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;costTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;feedEntries&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;batchSize&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;optimizer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;        &lt;span&gt;computeCost&lt;/span&gt; &lt;span&gt;?&lt;/span&gt; &lt;span&gt;CostReduction&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;MEAN&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span&gt;CostReduction&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;NONE&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;);&lt;/span&gt;

&lt;span&gt;      &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;computeCost&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;costValue&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;cost&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;});&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;costValue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, that’s it for the training phase. Now it needs only to be executed iteratively from the outside after the session setup with the training set. The outside execution can decide on a condition if the train method should return the cost.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;inference-neural-network-javascript&quot;&gt;Inference Phase&lt;/h2&gt;
&lt;p&gt;The final stage is the &lt;strong&gt;inference phase&lt;/strong&gt; where a test set is used to validate the performance of the trained algorithm. The input is a color in RGB space for the background color and as output it should predict the classifier [ 0, 1 ] or [ 1, 0 ] for either black or white for the font color. Since the input data points were normalized, don’t forget to normalize the color in this step as well.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;predict&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;let&lt;/span&gt; &lt;span&gt;classifier&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;mapping&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;tensor&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;inputTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;data&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;Array1D&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;normalizeColor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;}];&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;classifier&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;session&lt;/span&gt;&lt;span&gt;.eval(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predictionTensor&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;mapping&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;getValues&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;classifier&lt;/span&gt; &lt;span&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The method run the performance critical parts in the math context again. There it needs to define a mapping that will end up as input for the session evaluation. Keep in mind, that the predict method doesn’t need to run strictly after the training phase. It can be used during the training phase to output validations of the test set.&lt;/p&gt;
&lt;p&gt;Ultimately the neural network is implemented for setup, training and inference phase.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;neural-network-visualization-javascript&quot;&gt;Visualize a learning Neural Network in JavaScript&lt;/h2&gt;
&lt;p&gt;Now it’s about time using the neural network to train it with a training set in the training phase and validate the predictions in the inference phase with a test set. In its simplest form, you would set up the neural network, run the training phase with a training set, validate over the time of training the minimizing cost and finally predict a couple of data points with a test set. All of it would happen on the developer console in the web browser with a couple of console.log statements. However, since the neural network is about color prediction and deeplearn.js runs in the browser anyway, it would be much more enjoyable to visualize the training phase and inference phase of the neural network.&lt;/p&gt;
&lt;p&gt;At this point, you can decide on your own how to visualize the phases of your performing neural network. It can be plain JavaScript by using a &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot;&gt;canvas&lt;/a&gt; and the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;requestAnimationFrame&lt;/a&gt; API. But in the case of this article, I will demonstrate it by using &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;, because I write about it on my blog as well.&lt;/p&gt;
&lt;p&gt;So after setting up the project with &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;create-react-app&lt;/a&gt;, the App component will be our entry point for the visualization. First of all, import the neural network class and the functions to generate the data sets from your files. Moreover, add a couple of constants for the training set size, test set sizes and number of training iterations.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt; &lt;span&gt;'./App.css'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;generateColorSet&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./data'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./neuralNetwork'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;ITERATIONS&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;750&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;TRAINING_SET_SIZE&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;1500&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;TEST_SET_SIZE&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the constructor of the App component, generate the data sets (training set, test set), setup the neural network session by passing in the training set, and define the initial local state of the component. Over the course of the training phase, the value for the cost and number of iterations will be displayed somewhere, so these are the properties which end up in the component state.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt; &lt;span&gt;'./App.css'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt; &lt;span&gt;generateColorSet&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./data'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./neuralNetwork'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;ITERATIONS&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;750&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;TRAINING_SET_SIZE&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;1500&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;TEST_SET_SIZE&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;colorAccessibilityModel&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;constructor&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;super&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;generateColorSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;TEST_SET_SIZE&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;generateColorSet&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;TRAINING_SET_SIZE&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;colorAccessibilityModel&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;ColorAccessibilityModel&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;colorAccessibilityModel&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setupSession&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;trainingSet&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;cost&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, after setting up the session of the neural network in the constructor, you could train the neural network iteratively. In a naive approach you would only need a for loop in a mounting component lifecycle hook of React.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;componentDidMount&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;let&lt;/span&gt; &lt;span&gt;i&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;i&lt;/span&gt; &lt;span&gt;&amp;lt;=&lt;/span&gt; &lt;span&gt;ITERATIONS&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;colorAccessibilityModel&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, it wouldn’t work to render an output during the training phase in React, because the component couldn’t re-render while the neural network blocks the single JavaScript thread. That’s where requestAnimationFrame can be used in React. Rather than defining a for loop statement ourselves, each requested animation frame of the browser can be used to run exactly one training iteration.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;componentDidMount&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;requestAnimationFrame&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;tick&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;tick&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;}));&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt; &lt;span&gt;ITERATIONS&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;requestAnimationFrame&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;tick&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;colorAccessibilityModel&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition, the cost can be computed every 5th step. As mentioned, the GPU needs to be accessed to retrieve the cost. Thus it should be avoided to train the neural network faster.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;componentDidMount&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;requestAnimationFrame&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;tick&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;

  &lt;span&gt;tick&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt;
      &lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;
    &lt;span&gt;}));&lt;/span&gt;

    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt; &lt;span&gt;ITERATIONS&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;requestAnimationFrame&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;tick&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

&lt;span&gt;      &lt;span&gt;let&lt;/span&gt; &lt;span&gt;computeCost&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt; &lt;span&gt;%&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;let&lt;/span&gt; &lt;span&gt;cost&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;colorAccessibilityModel&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;train&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;computeCost&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;cost&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;cost&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The training phase is running once the component mounted. Now it is about rendering the test set with the programmatically computed output and the predicted output. Over time, the predicted output should be the same as the programmatically computed output. The training set itself is never visualized.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;cost&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Neural&lt;/span&gt; &lt;span&gt;Network&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; &lt;span&gt;Font&lt;/span&gt; &lt;span&gt;Color&lt;/span&gt; &lt;span&gt;Accessibility&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Iterations&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;span&gt;currentIteration&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Cost&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;span&gt;cost&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;content&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;content-item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ActualTable&lt;/span&gt;
              &lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
            &lt;span&gt;/&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;

          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;content-item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;InferenceTable&lt;/span&gt;
              &lt;span&gt;model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;colorAccessibilityModel&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
              &lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
            &lt;span&gt;/&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;ActualTable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;testSet&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Programmatically&lt;/span&gt; &lt;span&gt;Computed&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;InferenceTable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;model&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Neural&lt;/span&gt; &lt;span&gt;Network&lt;/span&gt; &lt;span&gt;Computed&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The actual table iterates over the size of the test set size to display each color. The test set has the input colors (background colors) and output colors (font colors). Since the output colors are classified into black [ 0, 1 ] and white [ 1, 0 ] vectors when a data set is generated, they need to be transformed into actual colors again.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;ActualTable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;testSet&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Programmatically&lt;/span&gt; &lt;span&gt;Computed&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;

    &lt;span&gt;{Array(&lt;/span&gt;&lt;span&gt;TEST_SET_SIZE&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;fill&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;i&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ColorBox&lt;/span&gt;
        &lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;rgbInput&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;]}&lt;/span&gt;
        &lt;span&gt;rgbTarget&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;fromClassifierToRgb&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;rawTargets&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;])}&lt;/span&gt;
      &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;)}&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;fromClassifierToRgb&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;classifier&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;classifier&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;classifier&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;
    &lt;span&gt;?&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;255&lt;/span&gt; &lt;span&gt;]&lt;/span&gt;
    &lt;span&gt;:&lt;/span&gt; &lt;span&gt;[&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt; &lt;span&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ColorBox component is a generic component which takes the input color (background color) and target color (font color). It simply displays a rectangle with the input color style, the RGB code of the input color as string and styles the font of the RGB code into the given target color.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;ColorBox&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;rgbInput&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;rgbTarget&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;color-box&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{{&lt;/span&gt; &lt;span&gt;backgroundColor&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;getRgbStyle&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgbInput&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;}}&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{{&lt;/span&gt; &lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;getRgbStyle&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgbTarget&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;}}&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;RgbString&lt;/span&gt; &lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;rgbInput&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/span&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;RgbString&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;rgb&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;`rgb(&lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;toString&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;)`&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;getRgbStyle&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;`rgb(&lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;rgb&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;)`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Last but not least, the exciting part of visualizing the predicted colors in the inference table. It uses the color box as well, but gives a different set of props into it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;InferenceTable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;model&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Neural&lt;/span&gt; &lt;span&gt;Network&lt;/span&gt; &lt;span&gt;Computed&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
    &lt;span&gt;{Array(&lt;/span&gt;&lt;span&gt;TEST_SET_SIZE&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;fill&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;i&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ColorBox&lt;/span&gt;
        &lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;rgbInput&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;]}&lt;/span&gt;
        &lt;span&gt;rgbTarget&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;fromClassifierToRgb&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;model&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;predict&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;testSet&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;rawInputs&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;]))}&lt;/span&gt;
      &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;)}&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The input color is still the color defined in the test set. But the target color isn’t the target color from the test set. The crucial part is that the target color is predicted in this component by using the neural network’s predict method. It takes the input color and should predict the target color over the course of the training phase.&lt;/p&gt;
&lt;p&gt;Finally, when you start your application, you should see the neural network in action. Whereas the actual table uses the fixed test set from the beginning, the inference table should change its font colors during the training phase. In fact, while the ActualTable component shows the actual test set, the InferenceTable shows the input data points of the test set, but the predicted output by using the neural network. The React rendered part can be seen in the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/javascript-machine-learning/color-accessibility-neural-network-deeplearnjs&quot;&gt;GitHub repository&lt;/a&gt; animation too.&lt;/p&gt;
&lt;hr class=&quot;section-divider&quot;/&gt;&lt;p&gt;The article has shown you how deeplearn.js can be used to build neural networks in JavaScript for machine learning. If you have any recommendation for improvements, please leave a comment below. In addition, I am curious whether you are interested in the crossover of machine learning and JavaScript. If that’s is the case, I would write more about it.&lt;/p&gt;
&lt;p&gt;Furthermore, I would love to get more into the topic and I am open for opportunities in the field of machine learning. At the moment, I apply my learnings in JavaScript, but I am so keen to get into Python at some point as well. So if you know about any opportunities in the field, please reach out to me :-)&lt;/p&gt;
&lt;div class=&quot;feedback-and-share text-center&quot;&gt;
&lt;hr/&gt;&lt;p class=&quot;lead&quot;&gt;I would like to hear your thoughts :-) Find me on &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/rwieruch&quot;&gt;Twitter&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rwieruch&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;lead&quot;&gt;Did the article help you? You can share it with your friends on social media , support me on &lt;a target=&quot;_blank&quot; href=&quot;https://www.patreon.com/rwieruch&quot;&gt;Patreon&lt;/a&gt; or take one of my courses&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;box-inline col-md-12&quot;&gt;
&lt;div class=&quot;col-md-12 text-center&quot;&gt;
&lt;h2 class=&quot;newsletter&quot;&gt;The Road to learn React&lt;/h2&gt;
&lt;div class=&quot;col-md-4&quot;&gt;&lt;img class=&quot;img-lazy img-responsive&quot; data-lazy-src=&quot;https://www.robinwieruch.de/img/page/cover.png&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;lead&quot;&gt;Build a Hacker News App along the way. No setup configuration. No tooling. No Redux. Plain React in 190+ pages of learning material. Learn React like &lt;strong&gt;14.500+ readers&lt;/strong&gt;.&lt;/p&gt;
&lt;a class=&quot;btn btn-template-main&quot; href=&quot;https://www.getrevue.co/profile/rwieruch&quot;&gt;Get the Book &lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 05 Dec 2017 20:19:00 +0000</pubDate>
<dc:creator>rwieruch</dc:creator>
<og:title>Neural Networks in JavaScript with deeplearn.js - RWieruch</og:title>
<og:description>A tutorial on how to implement a neural network in JavaScript with deeplearn.js to perform machine learning in JavaScript ...</og:description>
<og:type>website</og:type>
<og:url>https://www.robinwieruch.de/neural-networks-deeplearnjs-javascript/</og:url>
<og:image>https://www.robinwieruch.de/img/posts/neural-networks-deeplearnjs-javascript/banner_640.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.robinwieruch.de/neural-networks-deeplearnjs-javascript/</dc:identifier>
</item>
<item>
<title>Microsoft launches Windows 10 on ARM</title>
<link>https://www.anandtech.com/show/12119/microsoft-launches-windows-10-on-arm-always-connected-pcs</link>
<guid isPermaLink="true" >https://www.anandtech.com/show/12119/microsoft-launches-windows-10-on-arm-always-connected-pcs</guid>
<description>&lt;p&gt;This morning at the Qualcomm Snapdragon Summit in Hawaii, Microsoft’s EVP of Windows and Devices, Terry Myerson, is announcing the introduction of the first Windows 10 PCs to be powered by Qualcomm Snapdragon processors. It was almost a year ago to the day that the company &lt;a href=&quot;https://www.anandtech.com/show/10889/microsoft-and-qualcomm-bring-windows-10-to-snapdragon-processors&quot;&gt;first announced&lt;/a&gt; their partnership with Qualcomm, which would bring ARM support to Windows 10, but with x86 emulation, allowing all existing applications to work as well. The first PCs will be the ASUS NovaGo, which is a convertible laptop, and the HP ENVY x2 convertible tablet.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/12119/asusnovago.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/12119/asusnovago_575px.png&quot;/&gt;&lt;/a&gt;&lt;em&gt;The ASUS NovaGo Laptop&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is exciting news on a couple of fronts. The Qualcomm Snapdragon 835, which was the processor first announced for Windows 10 on ARM, offers reasonable performance, but with lower power consumption than what we’ve been used to in the PC space, and especially in low-power states. Without having the devices in-hand, we still don’t know how the SD835 compares in performance to the competition. We should finally be able to answer that soon though.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/12119/hpenvyx2.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/12119/hpenvyx2_575px.png&quot;/&gt;&lt;/a&gt;&lt;em&gt;The HP ENVY x2 Tablet&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One of the key pieces of using a mobile SoC in a PC is the extra integration. Smartphones don’t have room for large circuit boards, while still providing room for all of the other equipment and batteries required, and mobile SoCs offer a lot more features integrated into the SoC than what a typical PC would, which allows for substantial board space savings over the competition. Back at Computex, Qualcomm was showing off the SD835 PC board compared to a competing 14nm Intel board, and the space savings were up to 30%. This allows smaller, thinner, and lighter devices, but with more battery capacity.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/12119/sd835board.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/12119/sd835board_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One of the major integrations with the SD835 compared to PC SoCs is the integrated cellular connectivity, which is one of the features that Microsoft is championing the most with this new partnership. There have been PCs with cellular cards added on for some time, but Qualcomm’s cellular tech is aimed at mobile, where always-on connectivity, and low-power usage, is a requirement. That same connectivity will be available on the PC as well, with an always-connected network connection providing a better user experience than what we’ve become accustomed to in the laptop world.&lt;/p&gt;
&lt;p&gt;Battery life should also be a big win, and while we don’t have our own tests done yet, Microsoft’s information is claiming up to 30 days of standby and up to 22 hours of active use, while the detachable tablet-style HP ENVY x2 is claiming up to 20 hours of active use. That’s impressive, and blows past the all-day battery life that we’ve come to expect in a laptop, and should free a device up for a couple of days of use before charging. Terry Myerson has stated that he’s been getting up to a week of use out of a device before he needs to charge it.&lt;/p&gt;
&lt;p&gt;The always-on nature of mobile brings other advantages too. The PCs will wake up instantly, just like you’d expect on your phone, or mobile tablet.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/12119/windows_10_snapdragon_835_press_briefing_computex_for_press-page-007.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/12119/windows_10_snapdragon_835_press_briefing_computex_for_press-page-007_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The ARM equipped devices will be running full Windows 10, so no desktop apps are left behind, unlike the previous time that Microsoft attempted this. The ARM chips at the time offered much less performance as well, so this time around, it should be a much better experience. Universal Windows Apps will be available compiled for ARM directly, but x86 apps will run in emulation, which is still a cause for concern for both performance and battery life, so we’ll have to see how that pans out. Microsoft has an “optimized” version of Office 365 for the new ARM powered PCs, which likely means it’s been recompiled for native performance.&lt;/p&gt;
&lt;p&gt;Perhaps the most exciting part of the announcement is what added competition in this space should bring to the end-user. We have Qualcomm coming to the PC from the mobile space, where low-power has always been key, but the performance has been improving steadily, and we have Intel and AMD on the other side, coming from a high-performance but higher-power world, where integration of components into the SoC hasn’t been as high of a priority. It’ll be interesting to see where the convergence happens in the coming months.&lt;/p&gt;
&lt;p&gt;Source: Microsoft&lt;/p&gt;
</description>
<pubDate>Tue, 05 Dec 2017 19:55:06 +0000</pubDate>
<dc:creator>OberstKrueger</dc:creator>
<og:title>Microsoft Launches Windows 10 On ARM: Always Connected PCs</og:title>
<og:type>article</og:type>
<og:url>https://www.anandtech.com/show/12119/microsoft-launches-windows-10-on-arm-always-connected-pcs</og:url>
<og:image>https://images.anandtech.com/doci/12119/windows_10_logo.svg_678x452.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.anandtech.com/show/12119/microsoft-launches-windows-10-on-arm-always-connected-pcs</dc:identifier>
</item>
<item>
<title>The FastMail Security Mindset</title>
<link>https://blog.fastmail.com/2017/12/05/the-fastmail-security-mindset/</link>
<guid isPermaLink="true" >https://blog.fastmail.com/2017/12/05/the-fastmail-security-mindset/</guid>
<description>&lt;p class=&quot;blog-author&quot;&gt;Neil Jenkins – 5 December 2017&lt;/p&gt;
&lt;p&gt;This is the fifth post in the &lt;a href=&quot;https://blog.fastmail.com/2017/12/01/fastmail-advent-2017/&quot;&gt;2017 FastMail Advent Calendar&lt;/a&gt;. The previous post was about &lt;a href=&quot;https://blog.fastmail.com/2017/12/04/calconnect/&quot;&gt;what we are up to at CalConnect&lt;/a&gt;. The next post is an example of our philosophy in action with a look at our revamp of &lt;a href=&quot;https://blog.fastmail.com/2017/12/06/security-account-recovery/&quot;&gt;2FA, passwords and recovery&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;“Security” is a word that gets bandied around a lot in the IT world, often with little actual thought or substance behind its use. The phrase “we take your privacy and security seriously” is &lt;a href=&quot;https://krebsonsecurity.com/2014/09/we-take-your-privacy-and-security-seriously/&quot;&gt;the preamble to many a mea culpa&lt;/a&gt; from companies who, frankly, didn’t.&lt;/p&gt;
&lt;p&gt;FastMail has always been an engineering-focused company, from the top down. As such there is a strong culture of no-bullshit, and an intense dislike of &lt;a href=&quot;https://www.schneier.com/essays/archives/2009/11/beyond_security_thea.html&quot;&gt;security theatre&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our approach to security is to proactively develop and adopt any measures which meaningfully improve the &lt;a href=&quot;https://blog.fastmail.com/2014/12/15/security-confidentiality/&quot;&gt;confidentiality&lt;/a&gt;, &lt;a href=&quot;https://blog.fastmail.com/2014/12/10/security-availability/&quot;&gt;availability&lt;/a&gt; or &lt;a href=&quot;https://blog.fastmail.com/2014/12/05/security-integrity/&quot;&gt;integrity&lt;/a&gt; of our customer’s data. We are not interested in implementing things that sound good in marketing spiel but don’t actually help, or may even actively hurt, our customers’ security. We also strongly believe that usability is part of security; we need to make it easy to stay safe, hard to get wrong, in order to be secure.&lt;/p&gt;
&lt;p&gt;As an example of this mindset, we were one of the early adopters of opportunistic TLS encryption of SMTP connections when &lt;a href=&quot;https://blog.fastmail.com/2010/01/29/opportunistic-ssltls-encryption-on-outgoing-emails/&quot;&gt;sending&lt;/a&gt; and &lt;a href=&quot;https://blog.fastmail.com/2009/04/16/opportunistic-ssltls-encryption-on-incoming-emails/&quot;&gt;receiving&lt;/a&gt; mail. This prevents passive man-in-the-middle attacker from snooping on your data, making mass surveillance much harder.&lt;/p&gt;
&lt;p&gt;This even protects interception of metadata; someone watching our outbound connections might just know FastMail connected to Gmail, for example. There’s a lot of email sent between us by many different users, so observing this connection would not leak much information. (Interestingly this is where there is safety in numbers: if you and your intended recipient both hosted your own email on individual servers, then encrypting the connection doesn’t really hide who the message is from or to!)&lt;/p&gt;
&lt;p&gt;Supporting encrypted SMTP meaningfully improved the confidentiality of our customer’s data, without impacting our users’ workflow. And there’s still more we can do in this area! Initiatives like &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-uta-mta-sts-11&quot;&gt;MTA-STS&lt;/a&gt; will allow us to further protect against active man-in-the-middle attacks on mail delivery, and all without impacting usability.&lt;/p&gt;
&lt;p&gt;Just as important as what we &lt;em&gt;do&lt;/em&gt; do is what we &lt;em&gt;don’t&lt;/em&gt;. For example, we don’t do full message encryption (e.g. PGP) in the browser. In theory it means you “don’t have to trust us”. However in reality, every time you open your email you would be trusting the code delivered to your browser. If the server were compromised, it could easily be made to return code that intercepted and sent back your password next time you logged in; it could even just do this for specific users. It is very unlikely that a user would notice.&lt;/p&gt;
&lt;p&gt;We therefore don’t believe this offers a meaningful increase in security, and can be actively harmful in a number of ways. It reduces availability, because if you forget your password we cannot help you recover access to your own mail. It makes phishing (by far the biggest cause of compromised accounts) much harder to filter out.&lt;/p&gt;
&lt;p&gt;It can also be seriously dangerous when users misunderstand the security characteristics. For example, if you were a journalist working undercover in certain countries, you may justifiably require secure, anonymous communication. “Encrypted email” sounds like just the thing you need. But if your mail host doesn’t &lt;a href=&quot;https://blog.fastmail.com/2014/09/16/better-security-and-privacy-through-image-proxying/&quot;&gt;proxy images to hide your IP&lt;/a&gt;, someone could simply send you a message which when opened made your device connect directly to their servers. This reveals your IP address, which can often be used to fairly precisely determine your location, and sends cookies that may allow them to correlate your email address with visits to other sites on the web. That’s a &lt;em&gt;much&lt;/em&gt; bigger risk.&lt;/p&gt;
&lt;p&gt;Ultimately, security is a process, not a checkbox. We are always looking for further measures that will help secure our customer’s sensitive data. But we don’t do stuff just to check a marketing box. It may lose us a few customers enticed by razzle-dazzle claims, but we feel better about the integrity of our service.&lt;/p&gt;


</description>
<pubDate>Tue, 05 Dec 2017 17:32:49 +0000</pubDate>
<dc:creator>DASD</dc:creator>
<og:image>https://www.fastmail.com/static/images/app-icon-256.png</og:image>
<og:type>website</og:type>
<og:title>The FastMail Security Mindset | FastMail Blog</og:title>
<og:description>This is the fifth post in the 2017 FastMail Advent Calendar. The previous post was about what we are up to at CalConnect. The next post is an example of our philosophy in action with a look at our revamp of 2FA, passwords and recovery.</og:description>
<og:url>https://blog.fastmail.com/2017/12/05/the-fastmail-security-mindset/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.fastmail.com/2017/12/05/the-fastmail-security-mindset/</dc:identifier>
</item>
<item>
<title>AMA: NY AG Schneiderman on net neutrality and protecting our voice in government</title>
<link>https://news.ycombinator.com/item?id=15853374</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=15853374</guid>
<description>Hey everyone, New York AG Eric Schneiderman here.
&lt;p&gt;For the last 6 months, my office has been investigating a flood of fake comments that corrupted the FCC’s net neutrality comment process. Approximately 1 million of those comments may have been submitted using real people’s stolen identities--including those of as many as 50K New Yorkers, such as a dead person and a 13 year old child. This is akin to identity theft on a massive scale, and it undermines the public’s right to be heard at the most basic level of our government’s rulemaking.&lt;/p&gt;&lt;p&gt;Yesterday, FCC Commissioner Jessica Rosenworcel and I held a press conference to update on my office’s investigation and called on the FCC to delay its net neutrality vote until we can get to the bottom of it. In an era where foreign governments have indisputably tried to use the internet and social media to influence our elections, federal &amp;amp; state governments should be working together to ensure that malevolent actors cannot subvert our administrative agencies’ decision-making processes. You can watch our full press conference here: &lt;a href=&quot;https://youtu.be/TtZEC21QN-c&quot; rel=&quot;nofollow&quot;&gt;https://youtu.be/TtZEC21QN-c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’ll be back this afternoon to take your questions!&lt;/p&gt;
&lt;p&gt;In the meantime, a few things you can do to help in this fight:&lt;/p&gt;
&lt;p&gt;1. My office requested help in our investigation from the FCC at least 9 times, but the FCC’s Chairman and his staff responded by stonewalling (yesterday, the FCC’s IG finally indicated they may assist with our investigation). So we’ve gone to the public. My office has set up a website for you to check whether your name was used to submit fake comments, &amp;amp; file a report if it was: &lt;a href=&quot;https://ag.ny.gov/fakecomments&quot; rel=&quot;nofollow&quot;&gt;https://ag.ny.gov/fakecomments&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2. While FCC Chairman Pai has declared his intention to roll back net neutrality, we can still beat this effort back in Congress. If you haven't already spoken to your representatives, please do it today. You can contact your Senators and Congresspeople through the Capitol switchboard at (202) 224-3121.&lt;/p&gt;
&lt;p&gt;Thanks all. Keep speaking out.&lt;/p&gt;
</description>
<pubDate>Tue, 05 Dec 2017 17:25:04 +0000</pubDate>
<dc:creator>AGSchneiderman</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=15853374</dc:identifier>
</item>
</channel>
</rss>