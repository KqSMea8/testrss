<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Google accused of racketeering in lawsuit</title>
<link>http://www.mercurynews.com/2017/10/06/google-accused-of-racketeering-in-lawsuit-claiming-pattern-of-trade-secrets-theftt/</link>
<guid isPermaLink="true" >http://www.mercurynews.com/2017/10/06/google-accused-of-racketeering-in-lawsuit-claiming-pattern-of-trade-secrets-theftt/</guid>
<description>&lt;p&gt;MOUNTAIN VIEW — In an explosive new allegation, a renowned architect has accused Google of racketeering, saying in a lawsuit the company has a pattern of stealing trade secrets from people it first invites to collaborate.&lt;/p&gt;
&lt;p&gt;Architect Eli Attia spent 50 years developing what his lawsuit calls “game-changing new technology” for building construction. Google in 2010 struck a deal to work with him on commercializing it as software, and Attia moved with his family from New York to Palo Alto to focus on the initiative, code-named “Project Genie.”&lt;/p&gt;
&lt;p&gt;The project was undertaken in Google’s secretive “Google X” unit for experimental “moonshots.”&lt;/p&gt;
&lt;p&gt;But then Google and its co-founders Larry Page and Sergey Brin “plotted to squeeze Attia out of the project” and pretended to kill it but used Attia’s technology to “surreptitiously” spin off Project Genie into a new company, according to the lawsuit.&lt;/p&gt;
&lt;p&gt;“The real adding-insult-to-injury was Google telling him the project had been canceled and they weren’t going forward with it when in fact they were going full blast on it,” Attia’s lawyer Eric Buether said in an interview Friday.&lt;/p&gt;
&lt;p&gt;Also named as defendants are Google X founder Sebastian Thrun and Eric “Astro” Teller, the head of Google X, who are alleged to have negotiated with Attia over his technology.&lt;/p&gt;
&lt;p&gt;Google did not immediately respond to a request for comment, but a judge in the case noted last year that the firm has argued that Attia gave Google rights to his technology “without a condition of later payment.”&lt;/p&gt;
&lt;p&gt;Now Attia has added another allegation to the suit: the Mountain View tech giant’s actions follow a pattern that makes Google guilty of racketeering.&lt;/p&gt;
&lt;p&gt;“It’s cheaper to steal than to develop your own technology,” Buether said. “You can take it from somebody else and you have a virtually unlimited budget to fight these things in court.”&lt;/p&gt;

&lt;p&gt;Attia’s technology automates certain aspects of building design, to save time and money and allow architects and designers to focus on creative elements, Buether said.&lt;/p&gt;
&lt;p&gt;This week, a judge in Santa Clara County Superior Court approved the addition of racketeering claims to the lawsuit originally filed in 2014.&lt;/p&gt;
&lt;p&gt;Attia’s legal team uncovered six other incidents in which Google had engaged in a “substantially similar fact pattern of misappropriation of trade secrets” from other people or companies, according to a July 25 legal filing from Attia.&lt;/p&gt;
&lt;p&gt;“Google would solicit a party to share with it highly confidential trade secrets under a non-disclosure agreement, conduct negotiations with the party, then terminate negotiations with the party professing a lack of interest in the party’s technology, followed by the unlawful use of the party’s trade secrets in its business,” Attia said in the filing.&lt;/p&gt;
&lt;p&gt;Six lawsuits against Google, five of them resolved in the company’s favor because of procedural issues, reveal the pattern of intellectual property theft, Buether alleged. The company uses non-disclosure agreements to encourage a target to share confidential information, Buether claimed.&lt;/p&gt;
&lt;p&gt;“The person with that NDA feels comfortable in revealing the details of the technology which is proprietary because they see a huge opportunity with a company like Google,” Buether said.&lt;/p&gt;
&lt;p&gt;In Attia’s case, Google struck an agreement with him to use his intellectual property and patent some of it, but in spite of using it as the basis for a new firm called Flux Factory, failed to pay him as agreed, Buether claimed.&lt;/p&gt;
&lt;p&gt;“It’s even worse than just using the proprietary information — they actually then claim ownership through patent applications,” Buether said.&lt;/p&gt;
&lt;p&gt;Flux Factory, according to a filing by Attia, was “simply a reconstitution of Project Genie under a different name.”&lt;/p&gt;
&lt;p&gt;Today, Flux Factory is called Flux. Headquartered in San Francisco, it sells building-design software and markets itself as “the first company launched by Google X.”&lt;/p&gt;
&lt;p&gt;Attia’s suit seeks unspecified damages and compensation.&lt;/p&gt;
</description>
<pubDate>Sat, 07 Oct 2017 03:41:45 +0000</pubDate>
<dc:creator>Jerry2</dc:creator>
<og:type>article</og:type>
<og:title>Google accused of racketeering in lawsuit claiming pattern of trade secrets theft</og:title>
<og:url>http://www.mercurynews.com/2017/10/06/google-accused-of-racketeering-in-lawsuit-claiming-pattern-of-trade-secrets-theftt/</og:url>
<og:description>Google has engaged in a pattern of trade secrets theft, making it guilty of racketeering, according to a lawsuit.</og:description>
<og:image>http://www.mercurynews.com/wp-content/uploads/2016/08/20150811__0812googlepage1.jpg?w=645&amp;h=496</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.mercurynews.com/2017/10/06/google-accused-of-racketeering-in-lawsuit-claiming-pattern-of-trade-secrets-theftt/</dc:identifier>
</item>
<item>
<title>A 2017 Nobel laureate says he left science because he ran out of money</title>
<link>https://qz.com/1095294/2017-nobel-laureate-jeffrey-hall-left-science-because-he-ran-out-of-funding/</link>
<guid isPermaLink="true" >https://qz.com/1095294/2017-nobel-laureate-jeffrey-hall-left-science-because-he-ran-out-of-funding/</guid>
<description>&lt;div&gt;
&lt;p&gt;Jeffrey Hall, a retired professor at Brandeis University, shared the &lt;a href=&quot;https://qz.com/1091769/the-2017-nobel-prize-in-medicine-goes-to-hall-rosbash-and-young-for-their-work-explaining-circadian-rhythm/&quot;&gt;2017 Nobel Prize in medicine&lt;/a&gt; for discoveries elucidating how our internal body clock works. He was honored along with Michael Young and his close collaborator Michael Roshbash. Hall said in &lt;a href=&quot;https://www.youtube.com/watch?v=AWbxsTm9fgQ&quot;&gt;an interview&lt;/a&gt; from his home in rural Maine that he collaborated with Roshbash because they shared common interests in “sports, rock and roll, beautiful substances and stuff.”&lt;/p&gt;
&lt;p&gt;About half of Hall’s professional career, starting in the 1980s, was spent trying to unravel the mysteries of the biological clock. When he left science some 10 years ago, he was not in such a jolly mood. In a lengthy 2008 interview with the journal &lt;a href=&quot;http://www.cell.com/current-biology/fulltext/S0960-9822(07)02369-X&quot;&gt;Current Biology&lt;/a&gt;, he brought up some serious issues with how research funding is allocated and how biases creep into scientific publications.&lt;/p&gt;
&lt;p&gt;He complained that some of the “stars” in science “have not really earned their status” yet they continued to receive massive amounts of funding. He also said that these stars have boasted to him that they almost never send their articles to “anywhere but &lt;em&gt;Nature, Cell&lt;/em&gt;, or &lt;em&gt;Science&lt;/em&gt;“&lt;em&gt;—&lt;/em&gt;among the three most prestigious science journals. “And they are nearly always published in one of those magazines—where, when you see something you know about, you realize that it’s not always so great,” he continued.&lt;/p&gt;

&lt;p&gt;Hall saved his most bitter remarks for when he was asked, “The implication is that you are not graced with the ability to function in this manner? Is this true, and is it why you are about to leave science early?”&lt;/p&gt;
&lt;p&gt;His answer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes and yes. I admit that I resent running out of research money…recent applications from our lab have had their lungs ripped out, often accompanied by sneering, personal denunciations—perhaps reflecting the fact that this old-timer has lost his touch. But I still love the little flies and claim that my colleagues and I could continue to interact with them productively.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The little flies Hall referred to are fruit flies, the creatures Hall and his colleagues used to make the discoveries that led to the Nobel Prize. But he had more to say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;&quot;&gt;Whether or not a researcher of a certain notoriety deserves that the ‘support system’ [to] keep him going, there is a far more general problem: What props up biological research, at least in the vaunted US of A, involves a situation so deeply imbued with entitlement mentality that it has sunk into institutional corruption. A principal symptom of this state of affairs involves the following: People are hired after they have undergone long stints of training; and a potential hiree must present a large body of documented accomplishments. In my day you could get a faculty job with zero post-doc papers, as in the case of yours truly; but now the CV of a successful applicant looks like that of a newly minted full Professor from olden times. Notwithstanding these demands, and the associated high quality of a fledgling faculty-level type, the job starts with some “set-up” money for equipping the lab; but next to no means are provided to initiate that ‘research program’ and to sustain it during the years to come.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p class=&quot;&quot;&gt;US institutions (possibly also those in other countries) behave as though they… are entitled to research funding, which will magically materialize from elsewhere: “Get a grant, serf! If you can’t do it quickly, or have trouble for some years — or if your funding doesn’t get renewed, despite continuing productivity — forget it!” But what if there are so many applicants (as there are nowadays) that even a meritorious proposal gets the supplicant nowhere or causes a research group to grind prematurely to a halt? What if the situation is worsened when the government at hand is anti-science and otherwise squanders its resources on international adventurism?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;&quot;&gt;Having left science, Hall’s real worry was not for himself but the next generation of scientists:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;&quot;&gt;Having said all this, I acknowledge that “I got mine” from the government over the course of many years. Thus, as I say so long,” one component of my last-gasp disquiet stems from pompously worrying about biologists who are starting out or are in mid-career.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;inline-video&quot; itemprop=&quot;video&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/VideoObject&quot;&gt;&lt;iframe class=&quot;youtube-player&quot; type=&quot;text/html&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;https://www.youtube.com/embed/-Ct1hkROmxc?version=3&amp;amp;rel=1&amp;amp;fs=1&amp;amp;autohide=2&amp;amp;showsearch=0&amp;amp;showinfo=1&amp;amp;iv_load_policy=1&amp;amp;wmode=transparent&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Read next: &lt;a href=&quot;https://qz.com/1091613/the-2017-nobel-prize-winners-in-medicine-physics-chemistry-peace-economics-and-literature/&quot;&gt;Quartz’s coverage of the 2017 Nobel Prizes&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;article-aside&quot;&gt;
&lt;aside class=&quot;popular-stories-module&quot;&gt;&lt;article&gt;&lt;h4 class=&quot;module-title&quot;&gt;Most Popular&lt;/h4&gt;
&lt;a href=&quot;https://qz.com/1095294/2017-nobel-laureate-jeffrey-hall-left-science-because-he-ran-out-of-funding/&quot; title=&quot;A 2017 Nobel laureate says he left science because he ran out of money and was fed up with academia&quot;&gt;&lt;img src=&quot;https://qzprod.files.wordpress.com/2017/10/jeffrey-hall-nobel-prize-medicine-2017.jpg?quality=80&amp;amp;strip=all&amp;amp;w=240&quot; alt=&quot;Jeffrey-Hall-Nobel-Prize-Medicine-2017&quot;/&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a href=&quot;https://qz.com/1095294/2017-nobel-laureate-jeffrey-hall-left-science-because-he-ran-out-of-funding/&quot; title=&quot;A 2017 Nobel laureate says he left science because he ran out of money and was fed up with academia&quot;&gt;A 2017 Nobel laureate says he left science because he ran out of money and was fed up with academia&lt;/a&gt;&lt;/h3&gt;
&lt;/article&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;button class=&quot;read-full-story-button&quot;&gt;Read full story&lt;/button&gt;</description>
<pubDate>Fri, 06 Oct 2017 21:56:03 +0000</pubDate>
<dc:creator>Fede_V</dc:creator>
<og:title>A 2017 Nobel laureate left science because he ran out of money</og:title>
<og:type>article</og:type>
<og:image>https://qzprod.files.wordpress.com/2017/10/jeffrey-hall-nobel-prize-medicine-2017.jpg?quality=80&amp;strip=all&amp;w=1600</og:image>
<og:url>https://qz.com/1095294/2017-nobel-laureate-jeffrey-hall-left-science-because-he-ran-out-of-funding/</og:url>
<og:description>Back in 2008, Jeffrey Hall said &quot;recent applications from our lab have had their lungs ripped out, often accompanied by sneering, personal denunciations.&quot;</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://qz.com/1095294/2017-nobel-laureate-jeffrey-hall-left-science-because-he-ran-out-of-funding/</dc:identifier>
</item>
<item>
<title>Redesigning the smartphone dial pad</title>
<link>https://uxdesign.cc/re-designing-the-smartphone-dial-pad-2df226ec620f</link>
<guid isPermaLink="true" >https://uxdesign.cc/re-designing-the-smartphone-dial-pad-2df226ec620f</guid>
<description>&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;7&quot;&gt;
&lt;p name=&quot;8cc6&quot; id=&quot;8cc6&quot; class=&quot;graf graf--p graf--leading&quot;&gt;Let’s start by looking at the timeline below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--outsetColumn&quot;&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*NCaWtUtM4m642y-iQ3egxg.png&quot; data-width=&quot;3113&quot; data-height=&quot;1676&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*NCaWtUtM4m642y-iQ3egxg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/2000/1*NCaWtUtM4m642y-iQ3egxg.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;50.485207100592&quot;&gt;
&lt;p name=&quot;2251&quot; id=&quot;2251&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;There is something important about the image above. Despite significant transformation in the ergonomics and the modality of the phones physical form factor, the dial-pad design seems to have remained unchanged since 1963.&lt;/p&gt;
&lt;p name=&quot;4562&quot; id=&quot;4562&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So, looking at the image, one may question — Why did the Push Button phones changed the dial button positions from a circular arrangement to a different layout? (Even when the form factor had not changed significantly)&lt;/p&gt;
&lt;p name=&quot;dbdc&quot; id=&quot;dbdc&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The answer can be found in the short introduction below.&lt;/p&gt;
&lt;h3 name=&quot;32e5&quot; id=&quot;32e5&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Introduction&lt;/h3&gt;
&lt;p name=&quot;bb0a&quot; id=&quot;bb0a&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;On 18th Nov 1963, Bell System introduced the touch tone phone to the world. The touch tone pad replaced the old rotary dial.&lt;/p&gt;
&lt;p name=&quot;d6b7&quot; id=&quot;d6b7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This touchtone dial-pad was not only different from its predecessor, but was also completely opposite of a very similar and popular layout of the calculators.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*YqyRU_vBTiVY6NyhphsrKw.jpeg&quot; data-width=&quot;780&quot; data-height=&quot;443&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*YqyRU_vBTiVY6NyhphsrKw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*YqyRU_vBTiVY6NyhphsrKw.jpeg&quot;/&gt;&lt;/div&gt;
Credit: &lt;a href=&quot;http://www.vcalc.net/Keyboard.htm&quot; data-href=&quot;http://www.vcalc.net/Keyboard.htm&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;http://www.vcalc.net/Keyboard.htm&lt;/a&gt;
&lt;p name=&quot;2d46&quot; id=&quot;2d46&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;You can find a complete history and the science behind this decision on &lt;a href=&quot;http://99percentinvisible.org/article/squaring-circle-seventen-telephone-keypad-layouts/&quot; data-href=&quot;http://99percentinvisible.org/article/squaring-circle-seventen-telephone-keypad-layouts/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;99percentinvisible&lt;/a&gt;, but for the purpose of this post, what is important to note is that when Bell System asked the Texas Instruments and Sharp about why the calculator layout was designed the way it was, they said they did not conduct any research to define the calculator layout. They simply took the cue from the mechanical calculators (like the one shown below). These calculators had numbers 0-to-9 arranged from bottom to top.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*3KFtHw0VHl4ofeLQz1cTtQ.jpeg&quot; data-width=&quot;889&quot; data-height=&quot;609&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*3KFtHw0VHl4ofeLQz1cTtQ.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*3KFtHw0VHl4ofeLQz1cTtQ.jpeg&quot;/&gt;&lt;/div&gt;
Credit: &lt;a href=&quot;http://www.hpmuseum.org/ffmotor.htm&quot; data-href=&quot;http://www.hpmuseum.org/ffmotor.htm&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;http://www.hpmuseum.org/ffmotor.htm&lt;/a&gt;
&lt;p name=&quot;679c&quot; id=&quot;679c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;So Bell System decided to conduct their own research, and after testing many different layouts, decided to choose the one that we all use now.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*qWmyQ_xfOtBgEcdB0ySEgg.png&quot; data-width=&quot;918&quot; data-height=&quot;1496&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*qWmyQ_xfOtBgEcdB0ySEgg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*qWmyQ_xfOtBgEcdB0ySEgg.png&quot;/&gt;&lt;/div&gt;
Credit: &lt;a href=&quot;https://archive.org/stream/bstj39-4-995#page/n3/mode/2up&quot; data-href=&quot;https://archive.org/stream/bstj39-4-995#page/n3/mode/2up&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;https://archive.org/stream/bstj39-4-995#page/n3/mode/2up&lt;/a&gt;
&lt;p name=&quot;1c53&quot; id=&quot;1c53&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This is an example of a great human factors study. But the study was done for physical push button dial pads.&lt;/p&gt;
&lt;p name=&quot;6f1f&quot; id=&quot;6f1f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Somehow we kept following the same layout when we moved from these fixed phone lines to cordless phones to push button mobile phones and now even on touchscreen based smartphones.&lt;/p&gt;
&lt;p name=&quot;411e&quot; id=&quot;411e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Until the phone screen sizes were small, people were able to handle dialing the numbers holding the phone with single hand. But now the phone sizes are getting bigger and bigger and this dial-pad layout is starting to fail.&lt;/p&gt;
&lt;h3 name=&quot;8f1a&quot; id=&quot;8f1a&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Why is it failing?&lt;/h3&gt;
&lt;p name=&quot;413d&quot; id=&quot;413d&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;a href=&quot;https://www.uxmatters.com/mt/archives/2013/02/how-do-users-really-hold-mobile-devices.php&quot; data-href=&quot;https://www.uxmatters.com/mt/archives/2013/02/how-do-users-really-hold-mobile-devices.php&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Steve Hoober&lt;/a&gt; has done studies on how we hold the phone. He suggests that most of us hold the phone from the bottom such that the base of our thumb is at the bottom right of the screen (considering 90% of population is right handed).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--outsetColumn&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*RoVzWTb90D3fiEjlZsVe2Q.png&quot; data-width=&quot;2494&quot; data-height=&quot;1084&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*RoVzWTb90D3fiEjlZsVe2Q.png&quot; src=&quot;https://cdn-images-1.medium.com/max/2000/1*RoVzWTb90D3fiEjlZsVe2Q.png&quot;/&gt;&lt;/div&gt;
Based on study conducted by Steve Hoober.&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;34.546409214092&quot;&gt;
&lt;p name=&quot;a7d6&quot; id=&quot;a7d6&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This indicates that most likely the phone dialing will be done by the thumb in majority of the cases. So before we get into the dial-pad re-design exercise, let us also look at the thumb reach for different phone screen sizes.&lt;/p&gt;
&lt;p name=&quot;e8b5&quot; id=&quot;e8b5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Again, you will find a lot of research about “Thumb Zone”. I will not talk much about it but just try to summarise it in this one image (below).&lt;/p&gt;
&lt;p name=&quot;5594&quot; id=&quot;5594&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Interestingly (and not surprisingly), the most efficient part of the screen is within the arc of the thumb and significantly on the lower half for most large smartphones.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*LMtX_3ord07YElPtHkktIg.png&quot; data-width=&quot;1378&quot; data-height=&quot;700&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*LMtX_3ord07YElPtHkktIg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*LMtX_3ord07YElPtHkktIg.png&quot;/&gt;&lt;/div&gt;
Source: &lt;a href=&quot;http://scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens&quot; data-href=&quot;http://scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;http://scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens&lt;/a&gt;
&lt;h3 name=&quot;ba2e&quot; id=&quot;ba2e&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Time to re-think&lt;/h3&gt;
&lt;blockquote name=&quot;fc3e&quot; id=&quot;fc3e&quot; class=&quot;graf graf--pullquote graf-after--h3&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;The primary focus of this study is to find a better dial-pad layout for the touch screen smartphones.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;9007&quot; id=&quot;9007&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;The hypothesis is that there might be a possibility to better re-arrange the number keys on the dial-pad to achieve higher efficiency. At the same time, it seeks answer to, whether the dial-pad we currently use is the best we can design? or there are possibilities we haven’t explored yet.&lt;/p&gt;
&lt;blockquote name=&quot;d165&quot; id=&quot;d165&quot; class=&quot;graf graf--pullquote graf-after--p&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Like those calculator companies, we are continuing to borrow from the legacy and apply the old designs in the new context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;a3be&quot; id=&quot;a3be&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;Below, I have tried to re-create the Bell System experiment but this time for the smartphones.&lt;/p&gt;
&lt;p name=&quot;d925&quot; id=&quot;d925&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To replicate the Bell Systems research in the current context, I designed a few alternative dial-pad layouts for smartphones (shown below).&lt;/p&gt;
&lt;p name=&quot;af53&quot; id=&quot;af53&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;These are the 6 layouts for the study (5 new and one existing layout):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--outsetColumn&quot;&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*HZ7-XzVQT-G3yQo4mx36-Q.png&quot; data-width=&quot;5468&quot; data-height=&quot;1928&quot; data-is-featured=&quot;true&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*HZ7-XzVQT-G3yQo4mx36-Q.png&quot; src=&quot;https://cdn-images-1.medium.com/max/2000/1*HZ7-XzVQT-G3yQo4mx36-Q.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;42.154639175258&quot;&gt;
&lt;blockquote name=&quot;c313&quot; id=&quot;c313&quot; class=&quot;graf graf--blockquote graf-after--figure&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;These new designs try to overcome the problem of the thumb reach by bringing all the frequently used buttons as closer to the “natural zone” as possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;0045&quot; id=&quot;0045&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;Some of the proposed new designs also challenge the existing mental model of the user and boldly attempts to re-position the keys in new configurations.&lt;/p&gt;
&lt;p name=&quot;233c&quot; id=&quot;233c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This study is an attempt to crowdsource and gather as much empirical data as possible, so that a strong case can be formed for a new and unique dial-pad layout suitable for the touchscreen smartphones.&lt;/p&gt;
&lt;p name=&quot;ef9a&quot; id=&quot;ef9a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;By conducting the study, I want to evaluate how these different dial-pads perform and also allow everyone to experience what these new dial-pad layouts feel like.&lt;/p&gt;
&lt;p name=&quot;f18c&quot; id=&quot;f18c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The study is an ongoing exercise, so there are findings from whatever data I have collected so far, but there is a need for larger dataset to be available to make this study even more powerful.&lt;/p&gt;
&lt;h3 name=&quot;dd3f&quot; id=&quot;dd3f&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Participate&lt;/h3&gt;
&lt;p name=&quot;7058&quot; id=&quot;7058&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;To facilitate everyone to participate and contribute to the study, I have created an iOS app. It is is &lt;a href=&quot;https://itunes.apple.com/us/app/dial-pad-ux/id1288812537&quot; data-href=&quot;https://itunes.apple.com/us/app/dial-pad-ux/id1288812537&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;available on iTunes app store&lt;/strong&gt;&lt;/a&gt; and I am looking for users who would like to test these different dial-pad layouts and submit their feedback for analysis.&lt;/p&gt;
&lt;p name=&quot;2e0e&quot; id=&quot;2e0e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;(I know, Android users, I will come out with one for you soon, but right now my skills are limited and I am not a programmer, just a humble UX designer who could pull together this iOS app. I am currently trying to figure out my way with Android coding too :D ).&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;0b40&quot; id=&quot;0b40&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Also, I have created a &lt;a href=&quot;http://ssdesigninteractive.com/dialpad_research/&quot; data-href=&quot;http://ssdesigninteractive.com/dialpad_research/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;research study website&lt;/strong&gt;&lt;/a&gt; where you can view the results in detail.&lt;/p&gt;
&lt;p name=&quot;118f&quot; id=&quot;118f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So, feel free to download the app and give it a try. You can also use comments on Medium to post your feedback on using the app and different dial-pad designs.&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Fri, 06 Oct 2017 17:58:46 +0000</pubDate>
<dc:creator>ssdesign</dc:creator>
<og:title>Re-designing the smartphone Dial-Pad – uxdesign.cc</og:title>
<og:url>https://uxdesign.cc/re-designing-the-smartphone-dial-pad-2df226ec620f</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*HZ7-XzVQT-G3yQo4mx36-Q.png</og:image>
<og:description>A UX research project to re-think the touchscreen smartphone dial-pad.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://uxdesign.cc/re-designing-the-smartphone-dial-pad-2df226ec620f?gi=b29f2a47268</dc:identifier>
</item>
<item>
<title>Lost Laughs in Leisure Suit Larry</title>
<link>http://www.shamusyoung.com/twentysidedtale/?p=34307</link>
<guid isPermaLink="true" >http://www.shamusyoung.com/twentysidedtale/?p=34307</guid>
<description>&lt;p&gt;Heads up: This post is going to have some rougher language than what I normally post. We’re going to be talking about the kinds of things teenagers type into videogame text parsers, which means we’re going to get into some naughty words and otherwise unusual subject matter for this blog. I don’t know why I’m warning you. I know you’re going to read it anyway. But it seems like the polite thing to do is to give people fair warning when you’re going to transition to a more graphic type of content. If you’ve got sunglasses you wear when you’re worried about seeing the word “fuck”, then now is the time to put them on. Actually, I guess you’re a sentence late. Shit. Sorry.&lt;/p&gt;
&lt;p&gt;A few years ago I read a review of Leisure Suit Larry. The review was by a young&lt;span class=&quot;snote&quot; title=&quot;1&quot;&gt;Compared to me, anyway.&lt;/span&gt; person who probably wasn’t around when the original game came out in 1987. The review was about as negative as you can get without declaring vendetta against the developers and their families. It basically dismissed the whole thing as ghastly, ugly, unfunny trash.&lt;/p&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1987.jpg&quot; class=&quot;imagefull&quot; alt=&quot;Screenshot of Lefty`s Bar from the 1987 original.&quot; title=&quot;Screenshot of Lefty`s Bar from the 1987 original.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;Screenshot of Lefty`s Bar from the 1987 original.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Leisure Suit Larry is an adventure game classic and I have many fond memories of it, so I dismissed this person as a crank who doesn’t appreciate a good dick joke – the kind of person who has decided to cultivate a sense of smug superiority in lieu of a sense of humor. But reading the review put me in the mood to play it again, so I picked up &lt;a href=&quot;http://store.steampowered.com/app/231910/&quot;&gt;the 2013 remake&lt;/a&gt; and gave it a go.&lt;/p&gt;
&lt;p&gt;What I discovered when I returned to the game in 2013 is that the reviewer was basically right. Maybe they were trying a little too hard to be offended by things and maybe their ignorance of old-school adventure game mechanics hampered their ability to understand the puzzles, but it was pretty hard to argue with their conclusions regarding the humor. The game wasn’t nearly as funny as I remembered it. It’s a strange sensation to revisit a joke that made you howl with laughter 30 years ago and find it doesn’t even cause you to move any of your facial muscles. Not even the potent forces of nostalgia could salvage it. It just wasn’t amusing or fun.&lt;/p&gt;
&lt;p&gt;So what happened? Why did Larry stop being funny?&lt;/p&gt;

&lt;h3&gt;In Case You Missed It&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1991.jpg&quot; class=&quot;imagefull&quot; alt=&quot;Here is Lefty`s Bar from the 1991 remake. Pointless remakes of recent titles are not a new thing!&quot; title=&quot;Here is Lefty`s Bar from the 1991 remake. Pointless remakes of recent titles are not a new thing!&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;Here is Lefty`s Bar from the 1991 remake. Pointless remakes of recent titles are not a new thing!&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;For the young and innocent among you: The name has been shortened over the years. Originally it was titled “Leisure Suit Larry and the Land of the Lounge Lizards”. It’s an adventure game in the style of the Old Sierra titles like King’s Quest, Police Quest, or Space Quest. You walk around a lo-fi 16-color world, type broken sentence fragments into the parser, pick up inventory, and try to untangle the dream logic behind the various puzzles&lt;span class=&quot;snote&quot; title=&quot;2&quot;&gt;Strangely enough, the puzzles were a lot less insane than its contemporaries. A few of them even made some kind of sense.&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The game was remade with modernized graphics in 1991, and then again in 2013. The original was based on an even older work, a 1981 text-only game called SoftPorn Adventure. I never saw or even heard of SoftPorn Adventure until decades later when I looked up the series on Wikipedia. I know Leisure Suit Larry borrowed the premise and puzzles of SoftPorn, but I have no idea if they shared jokes or if the text game was even intended to be humorous at all.&lt;/p&gt;
&lt;p&gt;In the game you control Larry Laffer, the original 40 year old virgin. He’s decided to hit the town and lose his virginity once and for all. He’s a dorky, balding (and in the remakes, also short and pudgy) traveling salesman in a Leisure Suit&lt;span class=&quot;snote&quot; title=&quot;3&quot;&gt;He was also a &lt;a href=&quot;https://en.wikipedia.org/wiki/Larry_Laffer#Conception_and_design&quot;&gt;stealth mockery of a salesman named Jerry&lt;/a&gt; who worked at developer Sierra On-Line back in the 80’s. He would come back from business trips with improbable tales of all of the incredibly hot women he’d bedded. The programming staff hated him and so borrowed a lot of his attributes for their loser protagonist. The leisure suit itself was mocking how old and anachronistic SoftPorn Adventure had become.&lt;/span&gt;. An important detail that gets lost on younger audiences is that Leisure Suits were faddish novelty clothing and that by 1987 they were shockingly, woefully out of date. The closest analogy I can make is this: Imagine a dumpy middle-aged white guy showing up at a rave in 2016 while wearing MC Hammer parachute pants and a &lt;a href=&quot;https://en.wikipedia.org/wiki/Flavor_Flav&quot;&gt;Flava Flav&lt;/a&gt; clock. &lt;em&gt;That&lt;/em&gt; was who Larry Laffer was. He was a man with breathtaking social ineptitude.&lt;/p&gt;
&lt;p&gt;So your goal in the game is to overcome your seemingly insurmountable shortcomings with regard to looks, career prospects, social standing, personality, personal taste, and sex appeal, and somehow convince a woman to have sex with you. The game takes place in the city of Lost Wages (Las Vegas, obviously) and features a handful of locations: A dive bar, a convenience store, a 24 hour wedding chapel, a casino, a Hotel, and a few others.&lt;/p&gt;
&lt;h3&gt;Did You Know?&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_2013.jpg&quot; class=&quot;imagefull&quot; alt=&quot;Here is Lefty`s Bar from the 2013 remake.&quot; title=&quot;Here is Lefty`s Bar from the 2013 remake.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;Here is Lefty`s Bar from the 2013 remake.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;I’ve never heard anyone else mention this, but it’s a gameplay detail I discovered as a teenager. I noticed there was an in-game clock, and that the story began at 10PM. The clock ran in real-time. So I wondered what would happen if you let the game run until morning? What happens when the sun comes up? I correctly intuited that they wouldn’t have daytime versions of all of the locations. My guess was that the game would just ignore the clock and that the game would continue with night scenery. It turned out I was wrong.&lt;/p&gt;
&lt;p&gt;But finding out was actually kind of difficult. You couldn’t just walk away from the game and come back 8 hours later, because the game randomly pops up messages that would stop the clock. It would tell you how bad your breath was getting, prompting you to use the breath spray object in your inventory. These messages come up every five minutes or so, meaning you’d have to sit there and hit enter every five minutes for 8 hours straight to keep the clock moving. After some experimenting, I found a situation where the game wouldn’t give you these messages. I know it had something to do with the alley beside Lefty’s Bar. Maybe it was hiding in the dumpster, or maybe it was hanging from the rope on the fire escape&lt;span class=&quot;snote&quot; title=&quot;4&quot;&gt;It’s a long story.&lt;/span&gt;, but somewhere in that alley was a spot that disabled the breath spray prompts. Once I found that, I let the game run overnight and came back to see the result in the morning.&lt;/p&gt;
&lt;p&gt;What happens when the sun comes up? Nothing right away. The game continues to run. But as soon as you walk outside&lt;span class=&quot;snote&quot; title=&quot;5&quot;&gt;The alley counts as an “indoor” location for some reason.&lt;/span&gt; the game ends. Larry realizes that the night has ended and that he’s still a virgin. So he pulls out a gun and blows his brains out. It was a surprisingly dark ending that I’m sure most people never saw.&lt;/p&gt;
&lt;h3&gt;Where Did The Funny Go?&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1987_leftys.jpg&quot; class=&quot;imagefull&quot; alt=&quot;Inside Lefty`s bar.&quot; title=&quot;Inside Lefty`s bar.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;insetcaptionx&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;Inside Lefty`s bar.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Despite the morbid threat of suicide, Leisure Suit Larry was hilarious to my 17 year old self when I played it in 1988, and yet I was numb to it in 2013. Why? Why has the funny left Leisure Suit Larry when &lt;em&gt;Ferris Bueller’s Day Off&lt;/em&gt; and &lt;em&gt;The Three Amigos&lt;/em&gt; still maintain a lot of their original charm? It would be easy to dismiss this as the damage inflicted by my ongoing reluctant slide to maturity, but I laughed while watching &lt;em&gt;Spaceballs&lt;/em&gt; last year. While there are a lot of things you can call that movie, “mature” isn’t one of them.&lt;/p&gt;
&lt;p&gt;The problem is that Leisure Suit Larry was very much a product of its time, and while the various remakes have given the game a graphical facelift, they can’t re-create the particular arrangement of gaming culture and gameplay tropes that made the original such a hit.&lt;/p&gt;
&lt;h3&gt;A Subversible Vehicle&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1987_chapel.jpg&quot; class=&quot;imagefull&quot; alt=&quot;A storybook romance this ain`t.&quot; title=&quot;A storybook romance this ain`t.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;A storybook romance this ain`t.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The main joke of the game was that it constantly subverted the normal expectations established by the existing [$Genre] Quest titles, which were basically clean, family-friendly adventures. You had the same interface, the same pointless score bar at the top, the same style of inventory-driven puzzles. Except this game was about boning instead of saving the kingdom. It was a game about dick jokes and innuendo in a style of game that was usually a collection of common story tropes and lame puns.&lt;/p&gt;
&lt;p&gt;The joke isn’t the joke itself, the joke is that this joke was told in &lt;em&gt;this context&lt;/em&gt;. It was like a newscaster telling a dick joke, or hearing a Muppet say “fuck”. It was shocking and transgressive. Players had never seen a game “go there” before.&lt;/p&gt;
&lt;p&gt;The joke – the idea of doing something edgy or profane in this kind of adventure game – was as old as the games themselves. It was born about thirty seconds after the first player booted up the original King’s Quest and typed “fart” into the command line. It was a joke players had been creating for themselves, and a joke that the games had stubbornly refused to participate in.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&amp;gt;FUCK PRINCESS&lt;br /&gt;&lt;strong&gt;You don't have one of those.&lt;/strong&gt;&lt;br /&gt;&amp;gt;PISS ON FARMER&lt;br /&gt;&lt;strong&gt;The farmer doesn't need one of those.&lt;/strong&gt;&lt;br /&gt;&amp;gt;TAKE SHIT&lt;br /&gt;&lt;strong&gt;You don't see one of those here.&lt;/strong&gt;&lt;br /&gt;&amp;gt;SHOW KING MY DICK&lt;br /&gt;&lt;strong&gt;I don't know what that means.&lt;/strong&gt;&lt;br /&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Leisure Suit Larry was just the first game&lt;span class=&quot;snote&quot; title=&quot;6&quot;&gt;Not actually the first game. It was just the first one that became popular.&lt;/span&gt; to &lt;em&gt;participate&lt;/em&gt; in the joke. Suddenly there was a game that would respond humorously to your shenanigans instead of replying with clinical bafflement. When you tried to screw someone (or everyone) the game understood your intent and explained why you couldn’t. Just having the game correctly &lt;em&gt;parse&lt;/em&gt; these crude actions was a punchline all by itself. The fact that it followed up with a humorous reply was just gravy.&lt;/p&gt;
&lt;p&gt;But today? That’s not even a joke anymore. We’ve got entire genres of games dedicated to ribald matters. We’ve got games about &lt;a href=&quot;http://store.steampowered.com/agecheck/app/359050/&quot;&gt;showering with your dad&lt;/a&gt;. Games about &lt;a href=&quot;http://store.steampowered.com/app/426000/&quot;&gt;running a pornography empire&lt;/a&gt;. We’ve got action shmups &lt;a href=&quot;https://www.youtube.com/watch?v=vLxn54HylLg&quot;&gt;engorged with homoerotic imagery&lt;/a&gt;. We’ve got &lt;a href=&quot;http://store.steampowered.com/app/339800/&quot;&gt;match three games about trying to screw anime girls&lt;/a&gt;. Penises are no longer a secret in the world of videogames. It’s no longer shocking or edgy to make these kinds of jokes.&lt;/p&gt;
&lt;p&gt;There’s nothing left to subvert.&lt;/p&gt;
&lt;h3&gt;Graphical upgrades&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;1.5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_compare.jpg&quot; class=&quot;imagefull&quot; alt=&quot;The character Fawn. Left is 1987, right is 2013.&quot; title=&quot;The character Fawn. Left is 1987, right is 2013.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;6&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;The character Fawn. Left is 1987, right is 2013.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Another thing to kill the laughs for me was the move to better graphics. I know I’m already redlining on the scale of “stuff old guys say” in this article, but hear me out.&lt;/p&gt;
&lt;p&gt;In the other adventure games, upgrading their graphics made it possible to create more moods. Once you had more than 16 colors to work with, you could make places that seemed genuinely spooky. Places that seemed forlorn. Cheerful. Vibrant. Muted. The designer had more options. But the 4-bit graphics of Leisure Suit Larry were already pretty good at conveying the mood of the world: Cheap, sleazy, and gaudy. As graphics got better, it created an odd distortion. Suddenly those pixelated ladies weren’t so pixelated anymore. Their presence began to overshadow the rest of the scene, and now the dominant mood was “vaguely titillating”. As the years went on and graphics continued to improve, this progressed to “&lt;em&gt;overtly&lt;/em&gt; titillating”.&lt;/p&gt;
&lt;p&gt;It was kind of funny to have a game make a fuss over how “sexy” a lady was when she had the same number of pixels as old 16-bit Mario. But once they started looking like actual pin-up girls, that dimension of the humor was lost. It gradually felt less like a joke about a guy who wants to hook up with sexy ladies and more a vehicle for actually looking at sexy ladies. This changes the tone of the jokes. It’s the difference between a comic where two stick figures are screwing, and the exact same joke told with photographs of real people. To wit: It’s no longer the exact same joke.&lt;/p&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1987_jugs.jpg&quot; class=&quot;imagefull&quot; alt=&quot;Spoiler: This is actually a hint for a puzzle.&quot; title=&quot;Spoiler: This is actually a hint for a puzzle.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;Spoiler: This is actually a hint for a puzzle.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;I’ve said before that there’s nothing more uncomfortable than someone else’s turn-on. That’s what the &lt;a href=&quot;http://imgur.com/gallery/NOECI0s&quot;&gt;That’s My Fetish&lt;/a&gt; meme is all about. When you’ve got blocky graphics, there’s a certain distancing effect going on. The images are safe for everyone because you get the sense that nobody is &lt;em&gt;really&lt;/em&gt; getting off to this&lt;span class=&quot;snote&quot; title=&quot;7&quot;&gt;Which isn’t remotely true of course. If the internet has taught us anything, it’s that there’s no boundaries to the things people will get off to.&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;But once the game starts delivering cheesecake images as a reward for progress, that safety is gone and lots of people get uncomfortable. “Ew. Are people really… uh… &lt;em&gt;into&lt;/em&gt; these cartoon ladies?” You feel like you’ve stumbled into someone else’s kink. It’s no longer a game laughing &lt;strong&gt;at&lt;/strong&gt; porn, it’s a game that &lt;strong&gt;is&lt;/strong&gt; porn. (Ultra-tame, PG-13 porn. So… lousy porn. Great. Now NOBODY is happy.)&lt;/p&gt;
&lt;p&gt;This is not to say that you’re a bad person if you like the newer games. I am not one to judge. By all means, enjoy what makes you happy. That’s what entertainment is for. It’s just that the move away from pixel graphics changed the nature of the humor and created something that could be off-putting to some people. It narrows the audience.&lt;/p&gt;
&lt;h3&gt;No Text Parser&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;2.5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1987_pimp.jpg&quot; class=&quot;imagefull&quot; alt=&quot;The other thing that people dislike about the game is that a few of the joke characters are brute-force racial stereotypes. I REALLY don`t want to talk about that, so let`s acknowledge that it exists and move on.&quot; title=&quot;The other thing that people dislike about the game is that a few of the joke characters are brute-force racial stereotypes. I REALLY don`t want to talk about that, so let`s acknowledge that it exists and move on.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;The other thing that people dislike about the game is that a few of the joke characters are brute-force racial stereotypes. I REALLY don`t want to talk about that, so let`s acknowledge that it exists and move on.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The later remakes weren’t just modernized in terms of graphics, they were also modernized in terms of interface. Computer mice were finally standard, so games were moving away from text-based input to mouse-based input. Instead of trying to figure out what phrasing the game expected in order to “USE POTION ON GUARD”, you could just select the potion in your inventory and click on the guard. This solved the infuriating problem in these games where you couldn’t tell if you had the wrong solution to a puzzle, or if you had the right solution but weren’t using the right phrasing to describe it. It also solved this problem:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&amp;gt;EXAMINE PORTICULLUS&lt;br /&gt;&lt;strong&gt;You don't see that here.&lt;/strong&gt;&lt;br /&gt;&amp;gt;EXAMINE BARS&lt;br /&gt;&lt;strong&gt;You don't see that here.&lt;/strong&gt;&lt;br /&gt;&amp;gt;EXAMINE ENTRANCE&lt;br /&gt;&lt;strong&gt;You don't see that here.&lt;/strong&gt;&lt;br /&gt;&amp;gt;EXAMINE DOOR&lt;br /&gt;&lt;strong&gt;An iron portcullis stands before you, barring entrance to the castle.&lt;/strong&gt;&lt;br /&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The player doesn’t need to play “guess the synonym”. You don’t have awkward situations where the player needs to explain WHICH door they’re talking about if there happen to be several. You don’t need to worry about typos, misunderstood visuals&lt;span class=&quot;snote&quot; title=&quot;8&quot;&gt;That blob of chunky pixels isn’t a statue in front of the wall, it’s an engraving.&lt;/span&gt;, tricky spelling, ambiguous grammar, or the problem where the player is trying to interact with clutter items scattered around the scenery. You just give the player a mouse pointer and let them click on stuff.&lt;/p&gt;
&lt;p&gt;But while the text parser was the source of all misery in a regular adventure game, in Larry’s world it was &lt;em&gt;also&lt;/em&gt; the source of all humor. In fact, it was the frustration of having the game misunderstand you ten times in a row that often led players to type something rude or absurd into the command line. The frustration of being misunderstood by a parser is one of the reasons the profane responses of LSL were so cathartic.&lt;/p&gt;
&lt;p&gt;When Larry got his remake, they gave you an “open zipper” icon to use when you wanted to do naughty things, and this murdered the humor. Instead of feeling subversive, it became a sanctioned action in the game. I mean, it was &lt;em&gt;always&lt;/em&gt; a sanctioned action because the developers wrote text responses for it, but showing the icon to the player made it obvious. Instead of feeling like a prankster for typing, &lt;tt&gt;SCREW HOBO&lt;/tt&gt;, the game was making it clear that this was an expected course of action. The surprise was gone, along with the sense of mischief.&lt;/p&gt;
&lt;p&gt;It also removed a lot of the depth. You no longer had distinct responses for fuck, shit, piss, and whatever other profane things the player might devise. You had all of the “normal” icons, and then you had the zipper as a generic catch-all for “naughty stuff”.&lt;/p&gt;
&lt;h3&gt;Lost in Translation&lt;/h3&gt;
&lt;table class=&quot;nomargin&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; readability=&quot;2.5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://www.shamusyoung.com/twentysidedtale/images/tdi_lsl_1987_casino.jpg&quot; class=&quot;imagefull&quot; alt=&quot;The casino, where you could save-scum your way into riches. In fact, I think you HAD to in order to beat the game.&quot; title=&quot;The casino, where you could save-scum your way into riches. In fact, I think you HAD to in order to beat the game.&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td class=&quot;insetcaptionx&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;mouseover_alt&quot;&gt;The casino, where you could save-scum your way into riches. In fact, I think you HAD to in order to beat the game.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;So that was the original Leisure Suit Larry. It was a game that provided an absurdist joke about sexy pixel women that entertained an audience of people frustrated with text parsers by subverting genre expectations.&lt;/p&gt;
&lt;p&gt;The recent &lt;a href=&quot;https://en.wikipedia.org/wiki/Leisure_Suit_Larry:_Magna_Cum_Laude&quot;&gt;in-name-only sequels&lt;/a&gt; went in totally the wrong direction and exacerbated everything that’s hindered the series over the years. The sexy content has been ramped up, the adventure game mechanics are gone, and you’re left with a fiddly game that rewards you with animated tits when you win. And long-time fans &lt;strong&gt;hated&lt;/strong&gt; them. This wasn’t a Leisure Suit Larry game. This was &lt;em&gt;a game that Leisure Suit Larry himself would be embarrassed to play&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Al Lowe, designer of the 1987 classic, said of these newer games, “It was like getting a video from your son’s kidnappers. On the one hand you’re glad he’s still alive, but oh shit what’ve they done to him!?”&lt;/p&gt;
&lt;div class=&quot;shariff shariff-main shariff-align-flex-start shariff-widget-align-flex-start&quot; readability=&quot;3.9375&quot;&gt;
&lt;p&gt;&lt;em&gt;Enjoyed this post? Please share!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p class=&quot;byline&quot;&gt;&lt;em&gt;&lt;img alt=&quot;&quot; src=&quot;http://0.gravatar.com/avatar/ce6b8dea6c49454754bace9e00247c36?s=42&amp;amp;d=wavatar&amp;amp;r=pg&quot; srcset=&quot;http://0.gravatar.com/avatar/ce6b8dea6c49454754bace9e00247c36?s=84&amp;amp;d=wavatar&amp;amp;r=pg 2x&quot; class=&quot;avatar avatar-42 photo&quot; height=&quot;42&quot; width=&quot;42&quot; /&gt;&lt;a href=&quot;https://www.patreon.com/shamusyoung&quot;&gt;Shamus Young&lt;/a&gt; is a programmer, an &lt;a href=&quot;https://www.amazon.com/Witch-Watch-Shamus-Young/dp/1470105810&quot;&gt;author&lt;/a&gt;, and nearly a &lt;a href=&quot;https://soundcloud.com/shamusyoung&quot;&gt;composer&lt;/a&gt;. He works on this site full time. If you'd like to support him, you can do so via &lt;a href=&quot;http://www.patreon.com/shamusyoung&quot;&gt;Patreon&lt;/a&gt; or &lt;a href=&quot;https://paypal.me/ShamusYoung&quot;&gt;PayPal&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 17:40:51 +0000</pubDate>
<dc:creator>smacktoward</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.shamusyoung.com/twentysidedtale/?p=34307</dc:identifier>
</item>
<item>
<title>The Land of Lisp</title>
<link>http://landoflisp.com/</link>
<guid isPermaLink="true" >http://landoflisp.com/</guid>
<description>So, you still don't think it's worth learning Lisp?&lt;p&gt;Well, you'll have to make your own decisions on how to make the best use of your valuable free time. However, Lisp really does contain some great programming ideas that you may never encounter anywhere else.&lt;/p&gt;&lt;p&gt;In the interactive comic below (adapted from the epilogue of the book) I've given my best shot at explaining, precisely, what the most interesting features in Lisp are that you'd be missing out on... So why don't you give it a quick read?&lt;/p&gt;&lt;p&gt;&lt;em&gt;Oh, and be sure to click on all the throbbing text!&lt;/em&gt;&lt;/p&gt;</description>
<pubDate>Fri, 06 Oct 2017 15:50:16 +0000</pubDate>
<dc:creator>adgasf</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://landoflisp.com/</dc:identifier>
</item>
<item>
<title>AIM will shut down after 20 years</title>
<link>https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</link>
<guid isPermaLink="true" >https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</guid>
<description>&lt;p id=&quot;SpxCWM&quot;&gt;It’s a sad moment: AIM, AOL’s long-running instant messenger service that was core to many people’s first social experiences on the internet, will shut down once and for all on December 15th. AOL announced &lt;a href=&quot;https://aimemories.tumblr.com/post/166091776077/aimemories&quot;&gt;the shutdown&lt;/a&gt; today, acknowledging that people now communicate in new ways online, so AIM is no longer needed.&lt;/p&gt;
&lt;p id=&quot;cCgsoL&quot;&gt;“AIM tapped into new digital technologies and ignited a cultural shift, but the way in which we communicate with each other has profoundly changed,” writes Michael Albers, communications products VP at Oath (the Verizon behemoth that consumed AOL).&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;5kYYPk&quot;&gt;&lt;q&gt;Time to set your final away message&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;WTH9tv&quot;&gt;AOL cut off access to AIM from third-party chat clients &lt;a href=&quot;https://www.engadget.com/2017/03/01/aol-starts-to-shut-down-third-party-aim-apps/&quot;&gt;back in March&lt;/a&gt;, hinting at this eventual shutdown. It’s hard to imagine that many people are still using AIM, so that change, nor this upcoming shutdown, are likely to make a huge difference.&lt;/p&gt;
&lt;p id=&quot;pOoEN6&quot;&gt;AIM was one of the first and most successful instant messengers, widely used in the late ‘90s and even throughout the 2000s. I was still using AIM to chat with my friends throughout college at the end of the decade, including to stay in touch with my (not-yet) significant other while she was studying abroad.&lt;/p&gt;
&lt;p id=&quot;ZfVWmi&quot;&gt;But with the proliferation of smartphones, everything has changed. Text messaging has taken over for desktop instant messaging apps, and increasingly, we’re seeing other social apps, like Snapchat and Instagram, take over for those in certain ways. For straight messaging, Facebook also makes things much easier, since you’re already connected to everyone you know and can just start up a chat without exchanging arcane things like screen names. In fact, Facebook has multiple billion-user messaging services at this point, &lt;a href=&quot;https://www.theverge.com/2016/7/20/12235476/facebook-messenger-1-billion-users-milestone-ios-app&quot;&gt;Messenger&lt;/a&gt; and &lt;a href=&quot;https://www.theverge.com/2016/2/1/10889534/whats-app-1-billion-users-facebook-mark-zuckerberg&quot;&gt;WhatsApp&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;5MHtk9&quot;&gt;Other classic chat apps have shut down in recent years, too. &lt;a href=&quot;https://www.theverge.com/2014/8/29/6082199/msn-messenger-shutting-down-15-years-history&quot;&gt;MSN Messenger shut down in 2014&lt;/a&gt;, and &lt;a href=&quot;https://www.engadget.com/2016/06/10/goodbye-old-yahoo-messenger/&quot;&gt;Yahoo Messenger shut down last year&lt;/a&gt; (although Yahoo also launched a new messaging service under the same name). It was only a matter of time until AIM joined them, but there’s still some nostalgia in seeing it go.&lt;/p&gt;
&lt;p id=&quot;aQOe11&quot;&gt;With AIM on its way out the door, now’s your last chance to write that perfect away message.&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 14:27:50 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:description>It’s a sad moment: AIM, AOL’s long-running instant messenger service that was core to many people’s first social experiences on the internet, will shut down once and for all on December 15th. AOL...</og:description>
<og:image>https://cdn0.vox-cdn.com/thumbor/KV4BtqsztjfW0GMR59H5lPVYCcs=/0x19:998x542/fit-in/1200x630/cdn0.vox-cdn.com/uploads/chorus_asset/file/9405823/Screen_Shot_2017_10_06_at_10.06.22_AM.png</og:image>
<og:title>AIM will shut down after 20 years</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</dc:identifier>
</item>
<item>
<title>Hazelcast 3.8.3</title>
<link>https://jepsen.io/analyses/hazelcast-3-8-3</link>
<guid isPermaLink="true" >https://jepsen.io/analyses/hazelcast-3-8-3</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://hazelcast.org/&quot;&gt;Hazelcast&lt;/a&gt; provides easy-to-use distributed data structures with rich, intuitive APIs and optional persistence. It is often deployed as a synchronization service for databases, caches, session stores, messaging buses, or for service discovery. Users may embed a full Hazelcast node directly into their JVM application, or use a lightweight network client (available in many languages) to talk to a dedicated Hazelcast cluster. Either way, Hazelcast offers transparent distribution for rich datatypes, with familiar Java APIs for sets, lists, maps, locks, semaphores, queues, atomic objects, id generators, and &lt;a href=&quot;https://hazelcast.org/features/#DistributedDataStructures&quot;&gt;more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hazelcast’s high-level documentation, and the names of these objects themselves, imply that operations on these objects provide certain safety guarantees. For instance, the &lt;a href=&quot;https://hazelcast.org/features/#DistributedDataStructures&quot;&gt;features&lt;/a&gt; page claims that Hazelcast’s AtomicReferences offers guaranteed atomic compare-and-set across a cluster, and the AtomicReference documentation &lt;a href=&quot;http://docs.hazelcast.org/docs/latest/manual/html-single/#iatomicreference&quot;&gt;confirms this claim&lt;/a&gt;. What the documentation for this datatype does &lt;em&gt;not&lt;/em&gt; mention is that compare-and-set on AtomicReferences is not, in point of fact, atomic.&lt;/p&gt;
&lt;p&gt;In section 26 of the manual, &lt;a href=&quot;http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#network-partitioning-split-brain-syndrome&quot;&gt;Network Partitioning - Split-Brain Syndrome&lt;/a&gt;, Hazelcast explains that in the event of a network partition, each component of the network continues to run independently. They go on to discuss a lost-update scenario when the MapStore persistence layer is enabled for Maps: both clusters could write conflicting entries to their backing database. The documentation does not mention that this problem also arises &lt;em&gt;without&lt;/em&gt; a backing database—users could be forgiven for assuming that they won’t experience lost updates if they use Hazelcast as a purely in-memory store.&lt;/p&gt;
&lt;p&gt;The documentation goes on to discuss split-brain merging: for Maps (and only Maps; a footnote explains that other datatypes are not merged), conflicting values for the same key are &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/index.html#how-hazelcast-split-brain-merge-happens&quot;&gt;merged using a configurable merge policy&lt;/a&gt;. The built-in policies are a pair of non-commutative heuristics (larger or smaller cluster wins), last-write-wins, or higher-hits-wins. As we have seen in prior Jepsen analyses, all of these techniques can result in the loss of committed updates. For all datatypes other than Maps, updates to the smaller cluster (or an arbitrary cluster if the split is even) are thrown away.&lt;/p&gt;
&lt;p&gt;Hazelcast goes on to explain:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;Hazelcast’s Split-Brain Protection enables you to specify the minimum cluster size required for operations to occur. This is achieved by defining and configuring a split-brain protection cluster quorum. If the cluster size is below the defined quorum, the operations are rejected and the rejected operations return a QuorumException to their callers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;Your application continues its operations on the remaining operating cluster. Any application instances connected to the cluster with sizes below the defined quorum will be receiving exceptions which, depending on the programming and monitoring setup, should generate alerts. The key point is that rather than applications continuing in error with stale data, they are prevented from doing so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This implies that we should be able to update Maps, Transactional Maps, Caches, Locks, and Queues safely, so long as we choose a majority quorum policy for those data structures. This is, unfortunately, not the case:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;It is normally seconds or tens of seconds before the cluster is adjusted to exclude unreachable members…. For this reason, there will be a time window between the network partitioning and the application of Split-Brain Protection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That implies that operations on most Hazelcast datatype may be lost when the network is unreliable. In this analysis, we experimentally confirm this hypothesis, by testing the behavior of several Hazelcast datatypes when the network is allowed to fail.&lt;/p&gt;

&lt;p&gt;We use the &lt;a href=&quot;https://github.com/jepsen-io/jepsen&quot;&gt;Jepsen distributed systems testing library&lt;/a&gt; to evaluate Hazelcast’s safety. We write a trivial server application which &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/server/src/jepsen/hazelcast_server.clj#L83&quot;&gt;starts&lt;/a&gt; a Hazelcast instance on each of five nodes. We &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/server/src/jepsen/hazelcast_server.clj#L28-L43&quot;&gt;tune&lt;/a&gt; the Hazelcast configuration to speed up test times, making heartbeats more frequent and timeouts shorter. Cluster membership is fixed at startup, and all nodes are connected via direct TCP connections to every other node. We apply &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/server/src/jepsen/hazelcast_server.clj#L45-L80&quot;&gt;majority quorum constraints&lt;/a&gt; to every datatype that supports them.&lt;/p&gt;
&lt;p&gt;Jepsen then uses the Hazelcast client library to &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L114-L153&quot;&gt;connect&lt;/a&gt; to various nodes, and perform operations against Hazelcast datatypes. During these operations, we &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L427&quot;&gt;introduce network partitions&lt;/a&gt; lasting 15 seconds, followed by 30 seconds of full connectivity to allow the cluster to recover. Before performing any final reads to confirm safety, we allow Hazelcast 500 seconds of total network connectivity to fully heal, and merge any unmerged records. Once the test is complete, we analyze the history of operations to identify whether common-sense invariants on that datatype were preserved.&lt;/p&gt;
&lt;p&gt;The operations we perform, and how we check for correctness, depend on the particular datatype being tested.&lt;/p&gt;
&lt;h2 id=&quot;locks&quot;&gt; Locks&lt;/h2&gt;
&lt;p&gt;Hazelcast’s &lt;a href=&quot;https://hazelcast.org/features/#DistributedDataStructures&quot;&gt;feature list&lt;/a&gt; claims that locks provide guaranteed mutual exclusion across a cluster.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;If you lock using an ILock, the critical section that it guards is guaranteed to be executed by only one thread in the entire cluster. Even though locks are great for synchronization, they can lead to problems if not used properly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Specifically, those problems &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/#understanding-lock-behavior&quot;&gt;include&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;In the split-brain scenario, the cluster behaves as if it were two different clusters. Since two separate clusters are not aware of each other, two members from different clusters can acquire the same lock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So locks don’t guarantee mutual exclusion—but the docs go on to point to split-brain protection, so perhaps there’s a chance of safety. We’ll set the lock to use majority quorums, so only a cluster with more than 1/2 of the nodes can acquire a lock safely. In addition, we prevent Hazelcast from releasing a lock before another client explicitly unlocks it by omitting the &lt;code&gt;leaseTime&lt;/code&gt; arguments to &lt;code&gt;tryLock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our clients perform a &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L271-L280&quot;&gt;sequence&lt;/a&gt; of alternating acquire and release operations, and verify that the resulting history is linearizable; e.g. no two processes can hold the same lock at the same time. This test fails reliably as soon as a partition occurs, as &lt;a href=&quot;https://jepsen.io/analyses/hazelcast-3-8-3/locks-20170930T233306.000-0500.zip&quot;&gt;this example&lt;/a&gt; shows.&lt;/p&gt;
&lt;p&gt;Just after the start of a partition, several clients succeeded in acquiring a lock which was &lt;em&gt;already held&lt;/em&gt;. This diagram shows the concurrent structure of lock operations. Time flows left to right, and each concurrent process is shown as a row. Blue bars show successful operations, and pink traces show illegal transitions between operations. Here, process 0 had acquired the lock, and processes 2, 3, and 4 went on to successfully acquire the lock &lt;em&gt;before&lt;/em&gt; process 0 had released it. This is the opposite of what a lock is supposed to do.&lt;/p&gt;

&lt;p&gt;Locks in Hazelcast are not really locks. They may provide mutual exclusion most of the time, but when a network failure occurs, multiple clients may hold the same lock concurrently. This occurs even in the absence of process crashes, without lock timeouts allowing Hazelcast to reclaim stale locks, and with majority quorum protection enabled.&lt;/p&gt;
&lt;h2 id=&quot;queues&quot;&gt; Queues&lt;/h2&gt;
&lt;p&gt;Hazelcast queues provide a distributed equivalent to Java’s &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/BlockingQueue.html&quot;&gt;BlockingQueue&lt;/a&gt;. The docs &lt;a href=&quot;https://hazelcast.org/features/#DistributedDataStructures&quot;&gt;claim&lt;/a&gt;: “Using Hazelcast distributed queue, you can add an item in one machine and remove it from another one.” The &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/index.html#queue&quot;&gt;manual&lt;/a&gt; goes on to note that Queues support split-brain protection. What they fail to mention is that this is not a guarantee of correctness: you can put an item into a queue on one machine, Hazelcast will dutifully acknowledge that item, and then consign it to the silent void of &lt;code&gt;/dev/null&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To test this, we perform a &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L222-L234&quot;&gt;mixture of enqueues and dequeues&lt;/a&gt; on a single queue. All enqueues are unique integers, so we can map enqueues to dequeues. At the end of the test, we heal all network partitions, wait 500 seconds to allow the cluster time to recover, and have every client drain all remaining elements from the queue—which should ensure that every added element has been dequeued at least once. We then examine the history to see whether this is the case.&lt;/p&gt;
&lt;p&gt;In this &lt;a href=&quot;https://jepsen.io/analyses/hazelcast-3-8-3/queues-20171001T002422.000-0500.zip&quot;&gt;20 minute long run&lt;/a&gt;, roughly 1/4 of attempted enqueues appeared to succeed, and of those successfully enqueued messages, 2% were, in fact, silently discarded. The window for data loss is relatively small–only a few seconds at the start of each network partition—because we’ve aggressively tuned Hazelcast’s heartbeats to very short intervals. With the default timeouts, quorum protection takes longer to kick in, and the window for message loss is larger.&lt;/p&gt;
&lt;pre class=&quot;clj&quot;&gt;
&lt;code&gt;{:valid? false,
 :lost
 #{1903 1952 1946 1948 1922 1930 1929 1895 1905 1052 1937 1966 1921
   1947 1961 1968 1912 1926 92 1918 1911 1925 1046 1964 1965 214 1941
   1902 1919 1944 1971 1958 1927 1053 1943 1907 1916 1906 1917 1970
   1910 1055 1898 1931 1942 1940 1048 1045 1892 1957 1936 1955 1047
   1915 1935 1959 1974 1914 1951 1960 1967 212},
 :recovered #{1853},
 :recovered-frac 1/2665,
 :unexpected-frac 0,
 :unexpected #{},
 :lost-frac 62/2665,
 :duplicated-frac 42/2665,
 :ok-frac 145/533,
 :duplicated
 #{186 188 210 1830 1850 1839 1829 1845 1849 206 204 197 1832 1835
   1852 193 1831 1837 1847 1833 1846 1838 191 184 1842 1828 198 201
   1836 202 1844 211 1841 194 1834 1848 209 1851 1840 1843 199 183}}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;atomic-longs&quot;&gt; Atomic Longs&lt;/h2&gt;
&lt;p&gt;AtomicLongs (and their cousins, AtomicReferences) provide a number (or arbitrary object) which can be read, written, and updated via atomic get-and-set &amp;amp; compare-and-set operations. Hazelcast’s feature list &lt;a href=&quot;https://hazelcast.org/features/#DistributedDataStructures&quot;&gt;claims&lt;/a&gt; these operations are “guaranted atomic across … a cluster.” The documentation for &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/index.html#iatomiclong&quot;&gt;IAtomicLong&lt;/a&gt; and &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/index.html#iatomicreference&quot;&gt;IAtomicReference&lt;/a&gt; fails to mention that these operations are &lt;em&gt;not&lt;/em&gt; in fact atomic: operations can be lost or improperly interleaved.&lt;/p&gt;
&lt;p&gt;We could check that AtomicReference is linearizable. It’s not clear that Hazelcast intends for AtomicReferences to actually &lt;em&gt;be&lt;/em&gt; linearizable, but the documentation certainly implies it. However, in this case it is more interesting to measure a &lt;em&gt;weaker&lt;/em&gt; property: whether AtomicReferences allow for non-atomic or lost updates.&lt;/p&gt;
&lt;p&gt;We begin with an &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L222-L234&quot;&gt;AtomicLong&lt;/a&gt; (or an &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L171-L189&quot;&gt;AtomicReference&lt;/a&gt;) initialized to 0 (null), and perform a sequence of atomic increment-and-get (get + compare-and-set) operations against it, across many nodes. If these operations are atomic, successful increment-and-get operations should record a sequence of unique integers, e.g. without duplicates.&lt;/p&gt;
&lt;p&gt;In this &lt;a href=&quot;https://jepsen.io/analyses/hazelcast-3-8-3/&quot;&gt;30-second test&lt;/a&gt; of an AtomicReference, with a single network partition, a little over 10% of all generated numbers were duplicated.&lt;/p&gt;
&lt;pre class=&quot;clj&quot;&gt;
&lt;code&gt;{:valid? false,
 :attempted-count 239,
 :acknowledged-count 235,
 :duplicated-count 27,
 :duplicated
 {171 2,
  172 2,
  173 2,
  175 2,
  ...
  195 2,
  196 2,
  197 2,
  198 2},
 :range [1 208]},&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;During a partition, AtomicLongs and AtomicReferences diverge, allowing different nodes to see and mutate different copies of the same “atomic” value. When the partition resolves, all but one of these divergent copies is discarded. Not only do AtomicLongs and AtomicReferences allow stale reads, but they also allow for lost updates and dirty reads. A strictly increment-only counter could go backwards &lt;em&gt;on a single node&lt;/em&gt;, if a smaller value from another node were to overwrite it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://jepsen.io/analyses/hazelcast-3-8-3/atomic-latency.png&quot; alt=&quot;Latencies over time for read+compare-and-set operations&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Note that AtomicReference and AtomicLong do not support quorum protection; unlike locks and queues, they will diverge &lt;em&gt;as long as the partition persists&lt;/em&gt;, instead of diverging for only a few seconds at the start of a partition. In this plot from a different run with a longer partition, the grey region indicates the duration of a network partition. Note that while one node refuses updates, the other nodes are more than happy to run independent copies of the AtomicReference for the full duration of the partition. In this case, almost half (312 of 824) of generated numbers were duplicates.&lt;/p&gt;
&lt;h2 id=&quot;id-generators&quot;&gt; ID Generators&lt;/h2&gt;
&lt;p&gt;If AtomicLong cannot provide safe atomic updates, a specialized datatype (like a &lt;a href=&quot;http://yellerapp.com/posts/2015-02-09-flake-ids.html&quot;&gt;flake ID&lt;/a&gt;) might be able to provide unique IDs &lt;em&gt;without&lt;/em&gt; the need for AtomicLong’s coordination properties. Hazelcast provides an &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/index.html#idgenerator&quot;&gt;IdGenerator&lt;/a&gt; type for generating “cluster-wide unique identifiers.” What the documentation for IdGenerator does not mention is that IDs may not be unique in the event of a network partition. Indeed, IdGenerator is backed by an IAtomicLong internally, so it is subject to the exact same problems we saw in that type.&lt;/p&gt;
&lt;p&gt;We perform the same uniqueness test as for AtomicLongs, but this time using an &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L191-L205&quot;&gt;IdGenerator&lt;/a&gt; to generate unique numbers. IdGenerators, too, fail to provide uniqueness. If a pair of IdGenerators request a new block of numbers from their underlying AtomicLong during a partition, they will likely double-allocate that &lt;em&gt;entire block&lt;/em&gt; of IDs.&lt;/p&gt;
&lt;p&gt;In this &lt;a href=&quot;https://jepsen.io/analyses/hazelcast-3-8-3&quot;&gt;30-second test&lt;/a&gt;, Hazelcast allocated ~91,000 duplicated IDs out of ~834,000; a little over 10%. Like AtomicReferences, the fraction of duplicated IDs increases the longer a partition lasts; quorum protection does not limit the window for safety violations.&lt;/p&gt;
&lt;pre class=&quot;clj&quot;&gt;
&lt;code&gt;{:valid? false,
 :attempted-count 834013,
 :acknowledged-count 834013,
 :duplicated-count 91179,
 :duplicated
 {705516 2,
  705517 2,
  705518 2,
  ...
  705561 2,
  705562 2,
  705563 2},
 :range [0 747591]}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;maps&quot;&gt; Maps&lt;/h2&gt;
&lt;p&gt;Hazelcast offers a Map, which is a distributed, sharded implementation of java.util.concurrent.ConcurrentMap. The documentation &lt;a href=&quot;http://docs.hazelcast.org/docs/3.8.6/manual/html-single/index.html#locking-maps&quot;&gt;claims&lt;/a&gt; that Maps are “thread-safe to meet your thread safety requirements,” implying that operations on maps are safe in the presence of concurrent updates. For optimistic concurrency control, Hazelcast maps offer operations like &lt;code&gt;putIfAbsent&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; (essentially, compare-and-set), which replace missing or given values for a particular key with some new value, unless the current value in the map differs.&lt;/p&gt;
&lt;p&gt;These functions only make sense if operations have some total order, but as we discussed earlier, during partitions, there &lt;em&gt;is&lt;/em&gt; no single value, or total order, of operations. What does it mean to replace &lt;code&gt;A&lt;/code&gt; with &lt;code&gt;B&lt;/code&gt;, when the current values are &lt;em&gt;both&lt;/em&gt; &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt;? As we shall see, there &lt;em&gt;is&lt;/em&gt; a good reason for Hazelcast to provide these operations, even when they may be, in general, unsafe.&lt;/p&gt;
&lt;p&gt;First things first: let us check whether &lt;code&gt;replace&lt;/code&gt; actually works. We take a map containing a single key, and store in that key an array of longs, representing a set of numbers. We attempt to &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/524fa4985abc10a7492053c3b3f2165204170091/hazelcast/src/jepsen/hazelcast.clj#L326-L343&quot;&gt;add elements to that set&lt;/a&gt; by reading the current value, then using &lt;code&gt;replace&lt;/code&gt; (or &lt;code&gt;putIfAbsent&lt;/code&gt;) to replace the set we read with a &lt;em&gt;new&lt;/em&gt; set now containing the added element. If &lt;code&gt;replace&lt;/code&gt; obeys the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentMap.html#replace-K-V-V-&quot;&gt;contract&lt;/a&gt; of a ConcurrentMap, it should perform an atomic compare-and-set. Every successful &lt;code&gt;replace&lt;/code&gt; should result in that particular element being present in all subsequent versions of the set.&lt;/p&gt;
&lt;p&gt;After performing our series of replace operations, we heal all network partitions, allow the cluster 500 seconds to recover, and perform a final read to identify which elements survived.&lt;/p&gt;
&lt;p&gt;Unfortunately, not all elements do. Quorum protection is insufficient to prevent the loss of acknowledged updates. In &lt;a href=&quot;https://jepsen.io/analyses/hazelcast-3-8-3/map-20171001T144227.000-0500.zip&quot;&gt;this test&lt;/a&gt;, Hazelcast lost four modifications to a single key, all clustered around the start of a network partition.&lt;/p&gt;
&lt;pre class=&quot;clj&quot;&gt;
&lt;code&gt; {:valid? false,
  :lost &quot;#{1703..1704 1706..1707}&quot;,
  :recovered &quot;#{}&quot;,
  :ok
  &quot;#{1..2 4..36 ... 3724 3727..3728}&quot;,
  :recovered-frac 0,
  :unexpected-frac 0,
  :unexpected &quot;#{}&quot;,
  :lost-frac 2/1865,
  :ok-frac 1221/1865},&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;maps-with-crdts&quot;&gt; Maps with CRDTs&lt;/h2&gt;
&lt;p&gt;Clearly, Maps are unsafe in the presence of network faults, even if majority quorums are used to prevent concurrent modification in independent clusters. However, Maps offer a feature no other Hazelcast datatype has: they can &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentMap.html#replace-K-V-V-&quot;&gt;merge conflicting modifications after split-brain recovery&lt;/a&gt;. The default merge policy picks one of the disparate versions and discards the other, losing updates, but we could write a &lt;a href=&quot;http://hal.upmc.fr/inria-00555588/document&quot;&gt;CRDT merge function&lt;/a&gt; instead, allowing us to preserve concurrent updates from isolated components of the cluster.&lt;/p&gt;
&lt;p&gt;In this case, our data type is a grow-only set (a G-set), and our merge function is set union. We write a merge policy—a Java class—to &lt;a href=&quot;https://github.com/jepsen-io/jepsen/blob/master/hazelcast/server/java/jepsen/hazelcast/server/SetUnionMergePolicy.java&quot;&gt;merge two sets&lt;/a&gt;, and instruct the set to use that merge policy.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://jepsen.io/analyses/hazelcast-3-8-3/crdt-map-20171001T130353.000-0500.zip&quot;&gt;this 300-second test&lt;/a&gt;, out of 1315 attempts, 1298 elements were successfully added to the set, and every one of those acknowledged elements was present in the final reads. These results are typical of CRDT map tests; they appear, at least in these particular circumstances, to safely preserve all operations.&lt;/p&gt;
&lt;pre class=&quot;clj&quot;&gt;
&lt;code&gt; {:valid? true,
  :lost &quot;#{}&quot;,
  :recovered &quot;#{}&quot;,
  :ok
  &quot;#{0..11 13..83 ... 1286..1306 1311..1314}&quot;,
  :recovered-frac 0,
  :unexpected-frac 0,
  :unexpected &quot;#{}&quot;,
  :lost-frac 0,
  :ok-frac 1298/1315},
 :valid? true}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that the merge function is &lt;em&gt;only&lt;/em&gt; called during split-brain recovery, which means that we must continue to use our composite read+replace strategy. It may help to understand a Hazelcast cluster as a &lt;em&gt;cluster of components&lt;/em&gt;, where each component is updated using a sequential compare-and-set, and updates to disparate components are merged with our commutative, associative, and idempotent merge function.&lt;/p&gt;
&lt;p&gt;This approach is not limited to G-sets. We can implement any CRDT we like, including observed-removed sets, booleans with or/and, integers with min/max, counters, composite types like maps, and so on. In addition, we can relax the quorum constraint on CRDT maps, allowing updates to proceed safely on all nodes in the cluster, instead of only on a majority component.&lt;/p&gt;

&lt;p&gt;Although Hazelcast’s partition-tolerance documentation hints that data loss might be an issue, it fails to make these properties explicit, and many datatypes claim to provide safety properties far stronger than what they actually guarantee.&lt;/p&gt;
&lt;p&gt;In addition, the &lt;em&gt;names&lt;/em&gt; of Hazelcast’s datatypes, and the functions provided on those types, imply a certain fitness-for-purpose, e.g. that users can use these types and functions in a meaningful way. What is the point of an ID Generator which emits duplicate IDs? A lock that doesn’t lock? Who wants an AtomicReference which is not atomic? Of what possible use is a queue which doesn’t, well, &lt;em&gt;queue&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;By providing familiar interfaces to Java programmers, and explicitly describing Hazelcast types as the analogue of well-known types like AtomicLong or ConcurrentMap, users are encouraged to treat Hazelcast types as if they offered the same concurrency safety properties of their Java counterparts. This would be a wonderful idea if Hazelcast maps &lt;em&gt;did&lt;/em&gt; offer atomic &lt;code&gt;replace&lt;/code&gt;, queues which didn’t lose inserted elements, and so on.&lt;/p&gt;
&lt;p&gt;This is particularly vexing because there are existing systems and algorithms which &lt;em&gt;do&lt;/em&gt; provide these safety properties over similar datatypes. Consensus systems like Zookeeper and etcd, for instance, provide linearizable updates and reads on registers, which is what Hazelcast &lt;em&gt;claims&lt;/em&gt; to offer with its AtomicReferences. ID generators can be implemented with only a single round of consensus to initialize node IDs, either as local counters modulo &lt;code&gt;node-count&lt;/code&gt;, or using &lt;a href=&quot;http://yellerapp.com/posts/2015-02-09-flake-ids.html&quot;&gt;flake IDs&lt;/a&gt;. Likewise: when cluster membership is fixed (e.g. by a round of consensus), counters can be made totally available with extremely low latency by using &lt;a href=&quot;https://github.com/aphyr/meangirls#pn-counter&quot;&gt;PN-Counters&lt;/a&gt;. Distributed queues cannot guarantee the ordering or exactly-once-delivery of their single-node counterparts, which means they are &lt;a href=&quot;https://github.com/Factual/skuld&quot;&gt;loosely equivalent&lt;/a&gt; to &lt;a href=&quot;https://github.com/aphyr/meangirls#or-set&quot;&gt;Observed-Removed Sets&lt;/a&gt; plus a loose temporal order, which could be, again, provided by flake IDs.&lt;/p&gt;
&lt;p&gt;This is not to say that there are no safe uses of Hazelcast. Immutable records are obviously fine, provided users generate their own unique IDs for inserted records instead of relying on, say, IdGenerator, and so long as read-after-insert consistency is not expected. Engineers typically expect a distributed cache to lose updates and expose stale data, so using a Hazelcast Map as a cache is, in general, okay. So too, for applications where the consequences of data loss are relatively minor (e.g. metrics, service health, sensor data) and outages are infrequent. Pubsub messaging through topics, similarly, is often assumed to be best-effort, and occasional message loss is fine. Hazelcast could be well-suited for service discovery, since we &lt;em&gt;want&lt;/em&gt; maximal availability, and incorrect or out-of-date information about what nodes run which services should only introduce &lt;em&gt;liveness&lt;/em&gt; or &lt;em&gt;performance&lt;/em&gt;, not &lt;em&gt;safety&lt;/em&gt; problems.&lt;/p&gt;
&lt;p&gt;Indeed, most users &lt;a href=&quot;https://hazelcast.org/projects/&quot;&gt;featured&lt;/a&gt; on the Hazelcast web site seem more oriented towards caching and discovery instead of using Hazelcast to ensure data safety. However, there &lt;em&gt;are&lt;/em&gt; some systems which do appear to rely on Hazelcast’s atomic primitives.&lt;/p&gt;
&lt;p&gt;Consider, for example, &lt;a href=&quot;http://bagridb.com/&quot;&gt;BagriDB&lt;/a&gt;, a recently featured partner &lt;a href=&quot;https://blog.hazelcast.com/bagri-document-db-hazelcast-imdg/&quot;&gt;on the Hazelcast Blog&lt;/a&gt;. BagriDB uses Hazelcast to implement its an MVCC transaction manager on top of Hazelcast. While BagriDB claims to provide &lt;a href=&quot;http://bagridb.com/features/acid-transactions/&quot;&gt;ACID transactions up to Repeatable Read&lt;/a&gt;, the transaction IDs in BagriDB are generated by a Hazelcast &lt;a href=&quot;https://github.com/dsukhoroslov/bagri/blob/24ca047084a8e2efa5a93118ccd5f943bd567e13/bagri-server/bagri-server-hazelcast/src/main/java/com/bagri/server/hazelcast/impl/TransactionManagementImpl.java#L95&quot;&gt;AtomicLong&lt;/a&gt;, with a &lt;a href=&quot;https://github.com/dsukhoroslov/bagri/blob/24ca047084a8e2efa5a93118ccd5f943bd567e13/bagri-client/bagri-client-hazelcast/src/main/java/com/bagri/client/hazelcast/impl/IdGeneratorImpl.java#L23&quot;&gt;small wrapper&lt;/a&gt;, &lt;a href=&quot;https://github.com/dsukhoroslov/bagri/blob/24ca047084a8e2efa5a93118ccd5f943bd567e13/bagri-server/bagri-server-hazelcast/src/main/java/com/bagri/server/hazelcast/impl/TransactionManagementImpl.java#L138&quot;&gt;incremented&lt;/a&gt; at the start of each transaction. This means that BagriDB could pick the same transaction ID for multiple concurrent transactions, which might result in the violation of transactional guarantees. BagriDB explained:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Yes, the transaction IDs will be duplicated, but they will live in two different clusters after network partitioning and will be committed independently and successfully in most cases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When asked whether they were aware of AtomicLong’s non-atomicity, BagriDB responded:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;No, I was not aware of this behavior of IAtomicLong at network partitioning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Likewise, &lt;a href=&quot;http://orientdb.com/orientdb/&quot;&gt;OrientDB&lt;/a&gt;, one of eight partners featured on Hazelcast’s home page, uses Hazelcast Locks to guarantee only a single node at a time can &lt;a href=&quot;https://github.com/orientechnologies/orientdb/blob/5684b63f6efb03d407d0175b9eab616b36bbecbd/distributed/src/main/java/com/orientechnologies/orient/server/hazelcast/OHazelcastPlugin.java#L333&quot;&gt;initialize registered nodes&lt;/a&gt; and to &lt;a href=&quot;https://github.com/orientechnologies/orientdb/blob/5684b63f6efb03d407d0175b9eab616b36bbecbd/distributed/src/main/java/com/orientechnologies/orient/server/hazelcast/OHazelcastPlugin.java#L1601&quot;&gt;elect new lock managers&lt;/a&gt;. Hazelcast maps are also used to exchange leader and membership information; stale or lost updates to these maps might result in unexpected behavior.&lt;/p&gt;
&lt;p&gt;We asked OrientDB about this, and OrientDB’s engineers confirmed that they originally made extensive use of Hazelcast Locks for transactions. However, split-brain issues with Lock safety forced them to write their own distributed lock manager, and Hazelcast is now only used to reach consensus on cluster metadata on node startup. OrientDB plans to remove Hazelcast entirely in an upcoming release. They go on to note that they felt the documentation did not describe the potential for inconsistency:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Documentation doesn’t say anything about all of this. If you follow the documentation [it] looks like everything works as it’s supposed to do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Respondents on StackOverflow also &lt;a href=&quot;https://stackoverflow.com/questions/4250786/realworld-hazelcast&quot;&gt;indicate&lt;/a&gt; production use of Hazelcast for locking and atomic map updates. For instance:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;We use extensive use of distributed locking to make sure SKU Items of inventory are modified in atomic way because there are hundred of nodes in our web application cluster that operates concurrently on these items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;We are using Hazelcast from last 3 years in our e-commerce application to make sure availability (supply &amp;amp; demand) is consistent, atomic, available &amp;amp; scalable. We are using IMap (distributed map) to cache the data and Entry Processor for read &amp;amp; write operations to do fast in-memory operations on IMap without you having to worry about locks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We recommend that Hazelcast users carefully review their use of Hazelcast primitives. In particular, we encourage you to ask:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For Locks, would the system be safe if the lock were omitted?&lt;/li&gt;
&lt;li&gt;For IdGenerators, what would be the impact of giving multiple requestors the same IDs?&lt;/li&gt;
&lt;li&gt;For Queues, what would happen if some enqueued messages were lost?&lt;/li&gt;
&lt;li&gt;Are there any uses of AtomicLongs or AtomicReferences in your code? Why?&lt;/li&gt;
&lt;li&gt;For Maps, would the system be safe if any &lt;code&gt;put&lt;/code&gt; were lost? What about a double-applied &lt;code&gt;putIfAbsent&lt;/code&gt;? Be especially wary of calls to &lt;code&gt;replace&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Are your Map values structured as a CRDT with an appropriate merge function, or is order of operations important?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And in general, ask:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Would it be safe to read some &lt;em&gt;prior&lt;/em&gt; state of Hazelcast, instead of the current state?&lt;/li&gt;
&lt;li&gt;Does the system use Hazelcast as “fuzzy” state—e.g. as a cache, a discovery mechanism, or lossy store?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As for the Hazelcast team: we suggest that Hazelcast add appropriate warnings to the documentation for each datatype. Explicitly tell users that AtomicReferences are not atomic, that Locks are not exclusive, that Queues can lose messages, and so on. While the existing documentation on split-brain hints at these behaviors, more prominent warnings might prevent users from, say, building transaction management systems on top of non-unique ID generators.&lt;/p&gt;
&lt;p&gt;We believe that Hazelcast’s primitives &lt;em&gt;are&lt;/em&gt; useful, but objects like AtomicReferences and Maps with &lt;code&gt;replace&lt;/code&gt; &lt;em&gt;imply&lt;/em&gt; consensus, and therefore deserve a real consensus system. Hazelcast should adopt or implement a proven consensus algorithm, like ZAB or Raft, and use it to back these datatypes.&lt;/p&gt;
&lt;p&gt;Having a consensus system also enables atomic management of cluster membership and shard allocation, which unlocks efficient, eventually consistent implementations of counters, ID generators, queues, and generalized CRDTs. We recommend that Hazelcast adopt coordination-free algorithms (e.g. PN-Counters, flake IDs, etc) for these data structures to simplify their implementation, improve performance, and prevent lost updates.&lt;/p&gt;
&lt;p&gt;Finally, almost all uses of lock services for safety in distributed systems are fundamentally flawed: users continue to interpret distributed locks as if they were equivalent to single-node mutexes. Lock services cannot guarantee exclusion in asynchronous networks, because there is no way to distinguish between a crashed node and a slow one: releasing any stale lock runs the risk of handing it to two processes concurrently. Even if we &lt;em&gt;could&lt;/em&gt; provide a true distributed mutex, there is nothing which guarantees the network messages &lt;em&gt;emitted&lt;/em&gt; by lock holders only take effect while the lock is held. This is why mature “lock services” like &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//archive/chubby-osdi06.pdf&quot;&gt;Chubby&lt;/a&gt; use a sequence number, which lock holders must use in their operations and downstream services must respect, to enforce exclusive and sequential execution of lockholder side effects. Hazelcast should remove or rename Locks to avoid this problem, or couple them to a sequentially consistent sequence number.&lt;/p&gt;
&lt;p&gt;These problems are not bugs; they are fundamental design decisions. Hazelcast has placed sequential or linearizable datatypes atop an eventually-consistent replication system which makes unjustifiably optimistic assumptions about node and network reliability. Jepsen has not filed specific bug reports for these issues with Hazelcast; instead, we feel that a comprehensive re-evaluation of Hazelcast’s documentation, datatypes, and replication algorithms is in order.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We wish to thank Jordan Halterman for his discussion of Hazelcast use cases. Luigi Dell’Aquila &amp;amp; Luca Garulli from OrientDB, and Denis Sukhoroslov from BagriDB, were instrumental in understanding those systems’ use of Hazelcast. Thanks also to Julia Evans, Sarah Huffman, Camille Fournier, Moishe Lettvin, Tim Kordas, André Arko, Allison Kaptur, Coda Hale, and Peter Alvaro for reading and offering comments on initial drafts. This research was performed independently by Jepsen, without compensation, and conducted in accordance with the &lt;a href=&quot;http://jepsen.io/ethics.html&quot;&gt;Jepsen ethics policy&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 14:03:50 +0000</pubDate>
<dc:creator>aphyr</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://jepsen.io/analyses/hazelcast-3-8-3</dc:identifier>
</item>
<item>
<title>Algorithms Have Already Gone Rogue</title>
<link>https://www.wired.com/story/tim-oreilly-algorithms-have-already-gone-rogue/</link>
<guid isPermaLink="true" >https://www.wired.com/story/tim-oreilly-algorithms-have-already-gone-rogue/</guid>
<description>&lt;p data-reactid=&quot;274&quot;&gt;&lt;img src=&quot;https://www.wired.com/wp-content/uploads/2017/05/1t6Jsgbu_bU84ZZkgxw8G8A-3.png&quot; alt=&quot;&quot; data-reactid=&quot;275&quot;/&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;276&quot;&gt;&lt;strong data-reactid=&quot;277&quot;&gt;For more than two decades,&lt;/strong&gt; Tim O’Reilly has been the conscience of the tech industry. Originally a publisher of technical manuals, he was among the first to perceive both the societal and commercial value of the internet—and as he transformed his business, he drew upon his education in the classics to apply a moral yardstick to what was happening in tech. He has been a champion of open-source, open-government, and, well, just about everything else that begins with “open.”&lt;/p&gt;

&lt;p data-reactid=&quot;296&quot;&gt;His new book &lt;em data-reactid=&quot;298&quot;&gt;&lt;a href=&quot;https://www.harpercollins.com/9780062565716/wtf&quot; target=&quot;_blank&quot; data-reactid=&quot;299&quot;&gt;WTF: What’s the Future and Why It’s Up to Us&lt;/a&gt;&lt;/em&gt; seizes on this singular moment in history, in which just about everything makes us say “WTF?”, invoking a word that isn’t “future.” Ever the optimist, O’Reilly celebrates technology’s ability to create magic—but he doesn’t shirk from its dangerous consequences. I got to know Tim when writing a &lt;a href=&quot;https://www.wired.com/2005/10/oreilly/&quot; data-reactid=&quot;301&quot;&gt;profile of him&lt;/a&gt; in 2005, and have never been bored by a conversation. This one touches on the effects of Uber’s behavior and misbehavior, why capitalism is like a rogue AI, and whether Jeff Bezos might be worth voting for in the next election.&lt;/p&gt;
&lt;p data-reactid=&quot;303&quot;&gt;&lt;img src=&quot;https://www.wired.com/wp-content/uploads/2017/05/1AwTXMT2omVX-1Q8BM3cD-A-4.png&quot; alt=&quot;&quot; data-reactid=&quot;304&quot;/&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;305&quot;&gt;&lt;strong data-reactid=&quot;306&quot;&gt;Steven Levy: Your book appears at a time when many people who once had good feelings towards technology are now questioning it. Would you defend it?&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;307&quot;&gt;&lt;strong data-reactid=&quot;308&quot;&gt;Tim O’Reilly:&lt;/strong&gt; I like the title &lt;em data-reactid=&quot;310&quot;&gt;WTF&lt;/em&gt; because it can be an expression of amazement and delight or an expression of amazement and dismay. Tech is bringing us both. It has enhanced productivity and made us all richer. I don’t think I would like to roll back the clock.&lt;/p&gt;
&lt;p data-reactid=&quot;312&quot;&gt;&lt;strong data-reactid=&quot;313&quot;&gt;Not that rolling it back is an option.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;inset-left-component inset-left-component--article&quot; data-reactid=&quot;314&quot;&gt;
&lt;ul class=&quot;inset-left-component--article__list&quot; data-reactid=&quot;315&quot;&gt;&lt;li&gt;
&lt;h4 name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot; data-reactid=&quot;316&quot;&gt;More From This Edition&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;article-list-item-embed-component__post&quot; data-reactid=&quot;317&quot; readability=&quot;23&quot;&gt;

&lt;div class=&quot;article-list-item-embed-component__description&quot; data-reactid=&quot;323&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;span data-reactid=&quot;325&quot;&gt;Andrew McMillen&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;article-list-item-embed-component__title&quot; data-reactid=&quot;326&quot;&gt;The Social Network Doling Out Millions in Ephemeral Money&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class=&quot;article-list-item-embed-component__post&quot; data-reactid=&quot;327&quot; readability=&quot;23&quot;&gt;

&lt;div class=&quot;article-list-item-embed-component__description&quot; data-reactid=&quot;333&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;span data-reactid=&quot;335&quot;&gt;Hugh Howey&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;article-list-item-embed-component__title&quot; data-reactid=&quot;336&quot;&gt;How to Build a Self-Conscious Machine&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class=&quot;article-list-item-embed-component__post&quot; data-reactid=&quot;337&quot; readability=&quot;23&quot;&gt;

&lt;div class=&quot;article-list-item-embed-component__description&quot; data-reactid=&quot;343&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;span data-reactid=&quot;345&quot;&gt;Susan Crawford&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;article-list-item-embed-component__title&quot; data-reactid=&quot;346&quot;&gt;Comcast Is Abandoning Customers in the Name of Free Speech&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class=&quot;article-list-item-embed-component__post&quot; data-reactid=&quot;347&quot; readability=&quot;23&quot;&gt;

&lt;div class=&quot;article-list-item-embed-component__description&quot; data-reactid=&quot;353&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;span data-reactid=&quot;355&quot;&gt;Scott Rosenberg&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;article-list-item-embed-component__title&quot; data-reactid=&quot;356&quot;&gt;Startups’ Trillion-Dollar Numbers Game&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p data-reactid=&quot;357&quot;&gt;No, but it’s important for us to realize that technology is not just about efficiency. It’s about taking these new capabilities that we have and doing more with them. When you do that, you actually increase employment. As people came off the farm, we didn’t end up with a vast leisure class while two percent of people were feeding slop to animals. We ended up creating new kinds of employment, and we used that productivity actually to enhance the quality and the quantity of food. Why should it be different in this era of cognitive enhancement? Uber and Lyft are telling us that things we used to think of as being in the purely digital realm, in the realm of media, whatever, are coming to the real world. So that’s the first wake up call for society. Secondly, we’re seeing a new kind of interaction between people and algorithmic systems. Third, they represent a new kind of marketplaces based on platforms [in this case, they exist because the of the platform of smartphones—and then they can become platforms of their own, as new services, like food delivery, are added in addition to transit]. This marketplace works because people are being augmented with new cognitive superpowers. For example, because of GPS and mapping apps, Uber and Lyft drivers don’t need a lot of training.&lt;/p&gt;

&lt;p data-reactid=&quot;360&quot;&gt;&lt;strong data-reactid=&quot;361&quot;&gt;Agreed. But when the curtain rolls back we see that those superpowers have consequences: Those &lt;a href=&quot;https://www.wired.com/2016/12/be-healthy-or-else-how-corporations-became-obsessed-with-fitness-tracking/&quot; data-reactid=&quot;363&quot;&gt;algorithms have bias built in&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;365&quot;&gt;That’s absolutely right. But I’m optimistic because we’re having a conversation about biased algorithms. We had plenty of bias before but we couldn’t see it. We can’t see, for example, that the algorithms that manage the workers at McDonald’s or The Gap are optimized toward not giving people full-time work so they don’t have to pay benefits. All that was invisible. It wasn’t until we really started seeing the tech-infused algorithms that people started being critical.&lt;/p&gt;
&lt;p data-reactid=&quot;366&quot;&gt;&lt;strong data-reactid=&quot;367&quot;&gt;In &lt;em data-reactid=&quot;369&quot;&gt;WTF&lt;/em&gt; you talk about a specific out-of-control algorithm: the capitalist impulse to maximize profits regardless of societal consequences. The way you describe is reminds me of &lt;a href=&quot;https://nickbostrom.com/ethics/ai.html&quot; target=&quot;_blank&quot; data-reactid=&quot;371&quot;&gt;Nick Bostrom’s scenario&lt;/a&gt; of an AI machine devoted to making paper clips—because that’s its sole mission, it winds up eating up all the materials in the world and even killing those who would turn it off. Corporations whose sole justification is shareholder value seem to be working on a similarly destructive algorithm.&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;373&quot;&gt;Yes, financial markets are the first rogue AI.&lt;/p&gt;

&lt;p data-reactid=&quot;376&quot;&gt;&lt;strong data-reactid=&quot;377&quot;&gt;How do you roll back that particular AI?&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;378&quot;&gt;I try to show [earlier cases of] how humans tried to manage their algorithms, by talking about [how Google improved] search quality. Google had some pretty bad patches where the spammers really had the upper hand, and they addressed it.&lt;/p&gt;

&lt;p data-reactid=&quot;381&quot;&gt;&lt;strong data-reactid=&quot;382&quot;&gt;And that can be done to fix capitalism’s rogue AI?&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;383&quot;&gt;Somebody planted the idea that shareholder value was the right algorithm, the right thing to be optimizing for. But this wasn’t the way companies acted before. We can plant a different idea. That’s what this political process is about.&lt;/p&gt;
&lt;p data-reactid=&quot;384&quot;&gt;&lt;strong data-reactid=&quot;385&quot;&gt;Speaking of politics, it seems like another runaway algorithm has led us to a government controlled by people who don’t represent majority views.&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;386&quot;&gt;I look at it through the long arc of history. You look at the long slow decline of the Roman Empire and see so many analogies—the turning away from literacy and science, the outsourcing of core functions of government to mercenaries effectively. We could go through some real shit before we turn around. We might not turn around at all. But I take hope from something that Tim Urban in &lt;em data-reactid=&quot;388&quot;&gt;Wait But Why&lt;/em&gt; calls “the human colossus.” He has this fabulous description of how Elon Musk moves this human colossus in a new direction—to show that it’s &lt;a href=&quot;https://www.wired.com/story/musks-new-mars-plan/&quot; data-reactid=&quot;390&quot;&gt;possible to go into space&lt;/a&gt;, to show that it’s possible to &lt;a href=&quot;https://www.wired.com/2017/04/we-are-entering-the-era-of-the-brain-machine-interface/&quot; data-reactid=&quot;392&quot;&gt;build a brain-machine interface&lt;/a&gt;—and then everybody else will follow along. The human colossus I’m most heartened by is the post-World War II period. We learned a lesson from the incredible convulsions after World War I where there was vast dislocation, as we punished the losers of the war. So after World War II they rebuilt Europe, and they invested in the returning veterans with the GI Bill.&lt;/p&gt;
&lt;p data-reactid=&quot;394&quot;&gt;As we learn from tech, though, algorithms need continual improvement. You don’t just set them in motion and leave them forever. The strategies put in place after World War II that worked for this period of 30 years have stopped working so well, so we came up with something else [which happened to create income inequality]. There’s a sense that things going wrong will lead to new strategies. And now that Trump has broken the Overton Window—&lt;/p&gt;


&lt;p data-reactid=&quot;399&quot;&gt;&lt;strong data-reactid=&quot;400&quot;&gt;What’s that?&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;401&quot;&gt;It’s this idea [named for the late think tank leader Joseph Overton] that there’s a certain set of things that are considered acceptable in public policy debate, and you just can’t go outside that window. And Trump has just done everything unthinkable. Because all bets are off, we are not necessarily going back to the old, tired solutions. I think it’s possible that we’ll shrug off this madness, and we will come back to saying we really have to invest in people, we really have to build a better economy for everyone. In China, they’re already doing that. China has recognized that its vast population is a &lt;a href=&quot;https://www.wired.com/2017/04/how-wechat-spreads-rumors-reaffirms-bias-and-helped-elect-trump/&quot; data-reactid=&quot;403&quot;&gt;possible powder keg&lt;/a&gt; and it has to take care of its people. That’s something we have not done. We’ve just been pushing down the ordinary people. China is also being more aggressive than any other country in rising to the challenge of climate change. So there’s two possibilities—we’re going to wake up and start acting the same way, or China will lead the world.&lt;/p&gt;
&lt;p data-reactid=&quot;405&quot;&gt;&lt;strong data-reactid=&quot;406&quot;&gt;Reading your book I think I know who you’d like for our next president: Jeff Bezos. The book is full of Bezos love.&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;407&quot;&gt;Well. Jeff and Elon [Musk] are probably the two entrepreneurs I admire most.&lt;/p&gt;
&lt;p data-reactid=&quot;408&quot;&gt;You can think of the book as an apology to Jeff. As a publisher, I originally bought the usual story, that Amazon would go the way of Wal-Mart—the more dominant it got, the more it would extract value for itself, squeezing down its suppliers. Jeff is a ruthless competitor, no question, but while Amazon has done a chunk of that, it has spent so much time trying to do more. I’m not sure that Jeff would make a great president, but he might.&lt;/p&gt;
&lt;p data-reactid=&quot;409&quot;&gt;&lt;strong data-reactid=&quot;410&quot;&gt;You’d vote for him, wouldn’t you?&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;411&quot;&gt;It would depend who he was running against but, yeah, I probably would.&lt;/p&gt;


&lt;p data-reactid=&quot;416&quot;&gt;&lt;strong data-reactid=&quot;417&quot;&gt;You also praise Uber in your book. Do you think it’s possible to distinguish between the value of its service and the ethics of the company?&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;418&quot;&gt;Uber is a good metaphor for what's right and wrong in tech. Here we have this amazing new technology, which is transforming an industry and putting more people to work than worked in that industry before, creating great consumer surplus, and yet it has ridden roughshod over cities, and &lt;a href=&quot;https://www.wired.com/2017/05/how-drivers-are-finally-outfoxing-uber/&quot; data-reactid=&quot;420&quot;&gt;exploited drivers&lt;/a&gt;. It’s interesting that Lyft, which has been both more cooperative in general and better to drivers, is gaining share. That indicates there’s a competitive advantage in doing it right, and you can only go so far being an ass.&lt;/p&gt;
&lt;p data-reactid=&quot;422&quot;&gt;&lt;strong data-reactid=&quot;423&quot;&gt;Let’s finish by talking about AI. You seem a firm believer that it will be a boon.&lt;/strong&gt;&lt;/p&gt;
&lt;p data-reactid=&quot;424&quot;&gt;AI itself will certainly not take away jobs. I recently saw a wonderful slide from &lt;a href=&quot;http://www.cs.bath.ac.uk/~jjb/&quot; target=&quot;_blank&quot; data-reactid=&quot;426&quot;&gt;Joanna Bryson&lt;/a&gt;, a professor from the University of Bath. It referred to human prehistory and the text said, “12 thousand years of AI,” because everything in technology is artificial intelligence. What we now call AI is just the next stage of us weaving our intelligence together into a greater whole. If you think about the internet as weaving all of us together, transmitting ideas, in some sense an AI might be the equivalent of a multi-cellular being and we’re its microbiome, as opposed to the idea that an AI will be like the golem or the Frankenstein. If that’s the case, the systems we are building today, like Google and Facebook and financial markets, are really more important than the fake ethics of &lt;a href=&quot;https://www.wired.com/2017/04/the-myth-of-a-superhuman-ai/&quot; data-reactid=&quot;428&quot;&gt;worrying about some far future AI&lt;/a&gt;. We tend to be afraid of new technology and we tend to demonize it, but to me, you have to use it as an opportunity for introspection. Our fears ultimately should be of ourselves and other people.&lt;/p&gt;
&lt;p data-reactid=&quot;430&quot;&gt;&lt;img src=&quot;https://www.wired.com/wp-content/uploads/2017/05/1uW_l9n54f47SZbPxRBEq2A-3.png&quot; alt=&quot;&quot; data-reactid=&quot;431&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 14:00:24 +0000</pubDate>
<dc:creator>steven</dc:creator>
<og:type>article</og:type>
<og:title>Algorithms Have Already Gone Rogue | Backchannel</og:title>
<og:description>In his new book, Tim O'Reilly identifies the first case of AI run amok—and it's not what you think.</og:description>
<og:image>https://media.wired.com/photos/59d3d5246024fa2b950b9f2e/191:100/pass/GettyImages-838036866.jpg</og:image>
<og:url>https://www.wired.com/story/tim-oreilly-algorithms-have-already-gone-rogue/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wired.com/story/tim-oreilly-algorithms-have-already-gone-rogue/</dc:identifier>
</item>
<item>
<title>Security.txt</title>
<link>https://securitytxt.org/</link>
<guid isPermaLink="true" >https://securitytxt.org/</guid>
<description>&lt;h3&gt;FAQ&lt;/h3&gt;
&lt;h5&gt;What is the main purpose of security.txt?&lt;/h5&gt;
&lt;p&gt;The main purpose of security.txt is to help make things easier for companies and security researchers when trying to secure platforms. Thanks to security.txt, security researchers can easily get in touch with companies about security issues.&lt;/p&gt;
&lt;h5&gt;Where should I put the security.txt file?&lt;/h5&gt;
&lt;p&gt;The security.txt file should be located under /.well-known/ (/.well-known/security.txt) [RFC5785].&lt;/p&gt;
&lt;h5&gt;Is security.txt supposed to replace bug bounty platforms?&lt;/h5&gt;
&lt;p&gt;No. Security.txt is supposed to accompany them.&lt;/p&gt;
&lt;h5&gt;Will adding an email address expose me to spam bots?&lt;/h5&gt;
&lt;p&gt;The email value is an optional field. If you are worried about spam you can set a URI as the value and link to your security policy.&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 12:20:23 +0000</pubDate>
<dc:creator>janvdberg</dc:creator>
<og:url>https://securitytxt.org/</og:url>
<og:title>Security.txt</og:title>
<og:description>Security.txt defines a standard to help organizations define the process for security researchers to securely disclose security vulnerabilities.</og:description>
<og:image>https://user-images.githubusercontent.com/18099289/31276079-5714378e-aa9a-11e7-8a98-bf42a302cc6c.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://securitytxt.org/</dc:identifier>
</item>
<item>
<title>Compute Engine machine types with up to 96 vCPUs and 624GB of memory</title>
<link>https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</link>
<guid isPermaLink="true" >https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</guid>
<description></description>
<pubDate>Fri, 06 Oct 2017 10:45:02 +0000</pubDate>
<dc:creator>ramshanker</dc:creator>
<og:title>Now shipping: Compute Engine machine types with up to 96 vCPUs and 624GB of memory</og:title>
<og:url>https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</og:url>
<og:type>article</og:type>
<og:image>https://3.bp.blogspot.com/-lm6g841oCcU/WdYy3G2rkwI/AAAAAAAAElY/SCDiWc0Q5ScyWiDYD_cIl_4QpVMJuVTggCLcBGAs/s640/image1.png</og:image>
<og:description>By Hanan Youssef and Scott Van Woudenberg, Product Managers, Compute Engine Got compute- and memory-hungry applications? We’ve got you c...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</dc:identifier>
</item>
</channel>
</rss>