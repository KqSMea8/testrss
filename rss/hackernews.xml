<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>How do I permanently delete my account?</title>
<link>https://www.facebook.com/help/224562897555674/</link>
<guid isPermaLink="true" >https://www.facebook.com/help/224562897555674/</guid>
<description>&lt;div class=&quot;_4ng0&quot; readability=&quot;14.474327628362&quot;&gt;If you don't think you'll use Facebook again, you can request to have your account permanently deleted. Please keep in mind that you won't be able to reactivate your account or retrieve anything you've added. Before you do this, you may want to &lt;a class=&quot;_5dwo&quot; href=&quot;https://www.facebook.com/help/212802592074644?helpref=faq_content&quot;&gt;download a copy of your info&lt;/a&gt; from Facebook. Then, if you'd like your account permanently deleted with no option for recovery, log into your account and &lt;a class=&quot;_5dwo&quot; href=&quot;https://www.facebook.com/help/delete_account&quot; target=&quot;blank&quot;&gt;let us know&lt;/a&gt;.&lt;/div&gt;
&lt;p&gt;When you delete your account, people won't be able to see it on Facebook. It may take up to 90 days from the beginning of the deletion process to delete all of the things you've posted, like your photos, status updates or other data stored in backup systems. While we are deleting this information, it is inaccessible to other people using Facebook.&lt;/p&gt;
&lt;p&gt;Some of the things you do on Facebook aren’t stored in your account. For example, a friend may still have messages from you even after you delete your account. That information remains after you delete your account.&lt;/p&gt;
</description>
<pubDate>Fri, 24 Nov 2017 03:42:27 +0000</pubDate>
<dc:creator>cVwEq</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.facebook.com/help/224562897555674/?_fb_noscript=1</dc:identifier>
</item>
<item>
<title>FCC Releases Net Neutrality Killing Order, Hopes You&amp;#039;re Too Busy Cooking Turkey</title>
<link>https://www.techdirt.com/articles/20171122/09473038669/fcc-releases-net-neutrality-killing-order-hopes-youre-too-busy-cooking-turkey-to-read-it.shtml</link>
<guid isPermaLink="true" >https://www.techdirt.com/articles/20171122/09473038669/fcc-releases-net-neutrality-killing-order-hopes-youre-too-busy-cooking-turkey-to-read-it.shtml</guid>
<description>&lt;p&gt;As we noted &lt;a href=&quot;https://www.techdirt.com/articles/20171120/11253438653/fcc-plan-to-use-thanksgiving-to-hide-attack-net-neutrality-vastly-underestimates-looming-backlash.shtml&quot;&gt;yesterday&lt;/a&gt;, the FCC is trying to use the Thanksgiving holiday to distract the press and public from its blatant handout to one of the least liked and least competitive industries in America. As we also noted yesterday, trying to bury such an epic middle finger to consumers behind the cranberry sauce is an &lt;a href=&quot;https://www.techdirt.com/articles/20171120/11253438653/fcc-plan-to-use-thanksgiving-to-hide-attack-net-neutrality-vastly-underestimates-looming-backlash.shtml&quot;&gt;obvious underestimation&lt;/a&gt; of just how unpopular this plan is, and the policy, political, and cultural backlash it's going to generate &lt;em&gt;for years&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That said, all six of you not currently driving long distances, buying turkeys and potatoes, or otherwise distracted by holiday preparation can now &lt;a href=&quot;https://apps.fcc.gov/edocs_public/attachmatch/DOC-347927A1.pdf&quot;&gt;read a fact sheet provided by the FCC&lt;/a&gt; (pdf) explaining what Ajit Pai and his lobbying friends in the telecom industry have planned for you.&lt;/p&gt;
&lt;p&gt;To Ajit Pai's credit (and I'm using that term loosely here), the rules do pretty much everything he promised they would, including rolling back the Title II classification of ISPs as common carriers that gives the FCC its ability to enforce net neutrality. Without that authority, the FCC can't really protect you as giant broadband providers abuse the lack of competition in the last mile (a lack of competition Ajit Pai &lt;a href=&quot;https://www.techdirt.com/articles/20170927/09094438296/mission-accomplished-ajit-pais-fcc-declares-wireless-competition-issues-fixed.shtml&quot;&gt;refuses to acknowledge&lt;/a&gt;, much less actually fix). ISPs have been very busy trying to claim that gutting this authority doesn't &lt;em&gt;kill net neutrality protections&lt;/em&gt;, though we've already &lt;a href=&quot;https://www.techdirt.com/articles/20171121/11590638662/as-fcc-guts-net-neutrality-comcast-again-falsely-claims-you-have-nothing-to-worry-about.shtml&quot;&gt;explained at length why that's nonsense&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Throughout the order, the FCC repeatedly tries to claim that the very real harms we've seen in the broadband sector thanks to a lack of healthy competition are entirely &quot;speculative&quot; and &quot;hypothetical&quot;:&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;em&gt;&quot;Because of the paucity of concrete evidence of harms to the openness of the Internet, the Title II Order and its proponents have heavily relied on purely speculative threats. We do not believe hypothetical harms, unsupported by empirical data, economic theory, or even recent anecdotes, provide a basis for public-utility regulation of ISPs.428 Indeed, economic theory demonstrates that many of the practices prohibited by the Title II Order can sometimes harm consumers and sometimes benefit consumers; therefore, it is not accurate to presume that all hypothetical effects are harmful.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You know, speculative instances like that time AT&amp;amp;T blocked customer access to Facetime in order to &lt;a href=&quot;https://www.techdirt.com/articles/20120717/15395619734/att-may-try-to-charge-facetime-users-raising-net-neutrality-questions.shtml&quot;&gt;drive them to more expensive mobile data plans&lt;/a&gt;. Or the time AT&amp;amp;T throttled users then lied about it (something AT&amp;amp;T's still &lt;a href=&quot;https://www.techdirt.com/articles/20160829/10550735383/att-dodges-ftc-throttling-lawsuit-using-title-ii-classification-it-vehemently-opposed.shtml&quot;&gt;fighting a lawsuit over&lt;/a&gt;). Or that time Comcast applied arbitrary and &lt;a href=&quot;https://www.techdirt.com/articles/20161007/05221935735/comcast-dramatically-expands-unnecessary-broadband-caps-fairness.shtml&quot;&gt;completely unnecessary usage caps and overage fees&lt;/a&gt; to its broadband service (again, thanks to a lack of competition), then &lt;a href=&quot;https://www.techdirt.com/articles/20151119/09092932862/comcast-tests-net-neutrality-letting-own-streaming-service-bypass-usage-caps.shtml&quot;&gt;exempted the company's own content&lt;/a&gt; from those caps while still penalizing competitors. Or how about that time Verizon &lt;a href=&quot;https://www.techdirt.com/articles/20111222/02532517167/is-verizon-wireless-violating-its-promise-to-be-open-blocking-google-wallet.shtml&quot;&gt;blocked competing mobile wallets&lt;/a&gt; from even working on its phones to give its own payment platform an advantage?&lt;/p&gt;
&lt;p&gt;There's &lt;a href=&quot;https://www.freepress.net/blog/2017/04/25/net-neutrality-violations-brief-history&quot;&gt;plenty more very real, very non-speculative examples where that came from&lt;/a&gt;, and the problem gets worse if you look at the bad behavior by ISPs on the privacy front (also caused by a lack of competition). Like when AT&amp;amp;T decided to charge users &lt;a href=&quot;https://www.techdirt.com/articles/20160329/08514034038/att-tries-to-claim-that-charging-users-more-privacy-is-discount.shtml&quot;&gt;hundreds of extra dollars a month&lt;/a&gt; just to opt out of snoopvertising, or the time Verizon was busted &lt;a href=&quot;https://www.techdirt.com/articles/20150115/07074929705/remember-that-undeletable-super-cookie-verizon-claimed-wouldnt-be-abused-yeah-well-funny-story.shtml&quot;&gt;covertly modifying user packets&lt;/a&gt; to track users around the internet without telling them -- or letting them opt out.&lt;/p&gt;
&lt;p&gt;If you think these very real market harms are &quot;speculative&quot; you've been in a coma for the last decade. Yet this argument that net neutrality is an &lt;em&gt;entirely theoretical problem&lt;/em&gt; sits at the heart of the FCC's order. It's an order that makes it &lt;em&gt;abundantly&lt;/em&gt; clear that the real goal is to &lt;em&gt;completely dismantle the FCC's authority over broadband mono/duopolies&lt;/em&gt;, then shovel any remaining authority to an FTC that's technically &lt;a href=&quot;https://www.techdirt.com/articles/20170207/08092736653/tom-wheeler-trump-gop-plan-to-modernize-fcc-fraud.shtml&quot;&gt;incapable of actually policing abuses in the sector&lt;/a&gt;. Anybody framing this as anything other than a grotesque example of crony capitalism is either viciously misinformed -- or intentionally lying to you for personal financial benefit.&lt;/p&gt;
&lt;p&gt;One thing of particular note in the Orwellian-named &quot;Restoring Internet Freedom&quot; order is the fact that the FCC &lt;u&gt;wants to ban states that try to protect net neutrality and consumer welfare in the wake of the federal handout to industry&lt;/u&gt;. The agency doesn't specifically spell out how it intends to do this, but it's something ISPs like Comcast have been &lt;a href=&quot;https://www.techdirt.com/articles/20171103/08132438544/comcast-urges-fcc-to-ban-states-protecting-broadband-privacy-net-neutrality.shtml&quot;&gt;lobbying for&lt;/a&gt; for several months. ISPs have similarly been lobbying the government to ban states from &lt;a href=&quot;https://www.techdirt.com/articles/20170918/09032838231/california-sides-with-comcast-votes-to-kill-broadband-privacy-law-favored-eff.shtml&quot;&gt;protecting your broadband privacy&lt;/a&gt; after the GOP and Trump administration rushed to kill &lt;a href=&quot;https://www.techdirt.com/articles/20170328/09565737026/consumer-broadband-privacy-protections-are-dead.shtml&quot;&gt;fairly basic broadband privacy protections&lt;/a&gt; earlier this year.&lt;/p&gt;
&lt;p&gt;For years, ISPs have quite literally been allowed to write &lt;a href=&quot;https://www.techdirt.com/articles/20170503/06115337293/maine-latest-state-to-try-let-giant-broadband-providers-write-shitty-protectionist-state-law.shtml&quot;&gt;awful protectionist state laws&lt;/a&gt; that prohibit towns and cities from building their own broadband networks, or even striking public/private partnerships with companies like Google Fiber. Even in cases where the private sector refuses to. When folks pointed out that maybe &lt;em&gt;giant uncompetitive duopolies shouldn't be allowed to write shitty state law&lt;/em&gt;, ISPs and their pay-to-play allies insisted this was an &lt;a href=&quot;https://www.techdirt.com/articles/20150302/06091030179/martha-blackburn-rushes-to-defense-awful-protectionist-state-broadband-laws.shtml&quot;&gt;assault on states' rights&lt;/a&gt;. But when these same states try to &lt;em&gt;protect consumers&lt;/em&gt;, you'll notice these concerns magically disappear.&lt;/p&gt;
&lt;p&gt;Another thing to note: the FCC's original net neutrality order contained some very useful transparency rules that required that ISPs be entirely candid about what kind of traffic management they're using on your connection. And while Pai and &lt;a href=&quot;https://www.techdirt.com/articles/20171121/11590638662/as-fcc-guts-net-neutrality-comcast-again-falsely-claims-you-have-nothing-to-worry-about.shtml&quot;&gt;his friends at Comcast&lt;/a&gt; have made a big deal about how they'll be retaining some of these protections, the order itself makes it abundantly clear that they intend to strip out most of the enforcement mechanisms that actually make these transparency protections work. For example, the order proclaims:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;&quot;Our enforcement changes will ensure that ISPs will be held accountable for any violations of the transparency rule.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But then proceeds to point out how it intends to eliminate most of the safeguards in place to ensure these requirements are actually adhered to:&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;em&gt;&quot;We eliminate the formal complaint procedures because the informal complaint procedure, in conjunction with other redress options including consumer protection laws, will sufficiently protect consumers. Additionally, we eliminate the position of Open Internet Ombudsperson because the staff from the Consumer and Governmental Affairs Bureau—other than the Ombudsperson—have been performing the Ombudsperson functions envisioned by the Title II Order. We also eliminate the issuance of enforcement advisory opinions, because enforcement advisory opinions do not diminish regulatory uncertainty, particularly for small providers. Instead, they add costs and uncertain timelines since there is no specific timeframe within which to act, which can also inhibit innovation.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The FCC's order also makes it clear that it wants to do away with protections governing &lt;a href=&quot;https://www.techdirt.com/articles/20140502/07095427095/interconnection-how-big-broadband-kills-net-neutrality-without-violating-net-neutrality.shtml&quot;&gt;interconnection&lt;/a&gt;. You'll recall that as people got wise to how ISPs were trying to throttle or otherwise hamstring competitors, ISPs got more creative -- and began &lt;a href=&quot;https://www.techdirt.com/articles/20140718/06533327927/level3-proves-that-verizon-is-absolutely-to-blame-netflix-congestion-using-verizons-own-data.shtml&quot;&gt;intentionally letting interconnection points with transit operators and companies like Netflix get congested&lt;/a&gt;. Why? ISPs like Comcast and Verizon hoped to 1) kill the common practice of &lt;a href=&quot;https://en.wikipedia.org/wiki/Peering&quot;&gt;settlement-free peering&lt;/a&gt;, and 2) force companies like Netflix to pay an additional toll if they wanted video packets to reach subscribers on time, and intact (aka &quot;double dipping&quot; or more bluntly, extortion).&lt;/p&gt;
&lt;p&gt;Unnoticed by many in the lawsuit by New York Attorney General Eric Schneiderman against Charter over slow speeds was the fact that Charter executives were &lt;a href=&quot;https://www.techdirt.com/articles/20170316/05503336930/charter-tries-to-tap-dance-out-lawsuit-over-substandard-broadband.shtml&quot;&gt;busted candidly discussing this strategy&lt;/a&gt; to drive up costs for competitors and transit operators. When the FCC passed its 2015 net neutrality rules, this behavior mysteriously and magically &lt;a href=&quot;https://www.techdirt.com/articles/20150505/09051330890/mere-threat-real-neutrality-rules-appears-to-have-helped-calm-verizon-level-3-cogent-interconnection-feud.shtml&quot;&gt;ceased&lt;/a&gt;. Not surprisingly, the FCC is eager to eliminate any protections for this kind of anti-competitive behavior, insisting said protections were &quot;unnecessary&quot; and could magically be resolved by &quot;market forces&quot;:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;em&gt;&quot;We believe that applying Title II to Internet traffic exchange arrangements was unnecessary and is likely to inhibit competition and innovation. We find that freeing Internet traffic exchange arrangements from burdensome government regulation, and allowing market forces to discipline this emerging market is the better course. Indeed, the cost of Internet transit fell over 99 percent on a cost-per-megabit basis from 2005 to 2015.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In short, the FCC's plan to dismantle net neutrality rules is every bit as bad as most people expected it to be, and potentially a little bit worse. It opens the door to all manner of anti-competitive behavior by AT&amp;amp;T, Verizon, Charter and Comcast, while mindlessly dismissing the very real harms a lack of broadband competition is having on numerous industries. It tries to ban states from stepping in and filling the void in the face of obvious federal regulatory capture, and opens the door to giant, unaccountable ISPs to do &lt;em&gt;pretty much whatever they'd like&lt;/em&gt; as they take full advantage of the broken residential and &lt;a href=&quot;https://www.techdirt.com/articles/20170419/06230937183/fcc-moves-to-make-life-easier-business-broadband-monopolies.shtml&quot;&gt;business&lt;/a&gt; broadband markets.&lt;/p&gt;
&lt;p&gt;It's easy to be disheartened by this grotesque handout to duopolists, but users should take heart in the fact that this FCC order is so &lt;em&gt;aggressively vile and obnoxious&lt;/em&gt; as to be potentially legally indefensible. In court, the FCC will have to prove that the broadband market has changed &lt;em&gt;so substantially in the last two years&lt;/em&gt; as to justify such a brutal reversal of consumer-friendly policies. It will also have to defend the fact that it ignored 22 million, largely oppositional public comments on the FCC effort, and turned a blind eye to &lt;a href=&quot;https://www.techdirt.com/articles/20170710/10071737756/fcc-insists-it-cant-stop-impostors-lying-about-my-views-net-neutrality.shtml&quot;&gt;numerous instances&lt;/a&gt; of &lt;a href=&quot;https://www.techdirt.com/articles/20170919/10061338239/fcc-sued-ignoring-foia-request-investigating-fraudulent-net-neutrality-comments.shtml&quot;&gt;fraud and abuse of the comment system&lt;/a&gt; in order to downplay the massive backlash to its plan.&lt;/p&gt;
&lt;p&gt;Even if the FCC does manage to win in the courts, it then has to stop the inevitable political backlash that is likely to eject Ajit Pai and friends from power. That's why you'll likely see an ISP effort in the new year to try and &lt;a href=&quot;https://www.techdirt.com/articles/20170725/07464737858/here-comes-big-push-really-shitty-new-net-neutrality-law.shtml&quot;&gt;pass a new net neutrality law&lt;/a&gt; ISP lackeys and sockpuppets will &lt;a href=&quot;https://www.techdirt.com/articles/20170306/05593336848/senator-thune-begins-pushing-net-neutrality-bill-thats-likely-to-kill-net-neutrality.shtml&quot;&gt;breathlessly claim&lt;/a&gt; &quot;solves&quot; this problem once and for all, but will be integrated with so many loopholes as to be effectively useless. It's real purpose: to prevent the FCC from revisiting this subject down the road under the guise of &quot;putting this issue to bed once and for all.&quot;&lt;/p&gt;
&lt;p&gt;The problem for ISP lobbyists is that we're entering an election season, and countless politicians are going to be tripping over themselves to distance themselves from the unpopular policies of the current administration. You're not going to find a more unpopular policy than this myopic assault on net neutrality and the health of the internet.&lt;/p&gt;
&lt;p&gt;That said, it's important to remember that net neutrality isn't a fight that magically ends with the passage or elimination of consumer protections, strong, weak, or otherwise. Since net neutrality violations are just a &lt;em&gt;symptom of a lack of competition in the broadband market&lt;/em&gt;, it's a battle we're going to have to fight in perpetuity -- or at least until somebody in the United States government discovers the fortitude and courage to actually stand up to AT&amp;amp;T, Verizon, Charter and Comcast and begins implementing policies that finally attempt to actually fix our obvious competitive logjam.&lt;/p&gt;
</description>
<pubDate>Thu, 23 Nov 2017 20:26:20 +0000</pubDate>
<dc:creator>mjfern</dc:creator>
<og:title>FCC Releases Net Neutrality Killing Order, Hopes You're Too Busy Cooking Turkey To Read It</og:title>
<og:description>As we noted yesterday, the FCC is trying to use the Thanksgiving holiday to distract the press and public from its blatant handout to one of the least liked and least competitive industries in America. As we also noted yesterday, trying to bury such...</og:description>
<og:type>article</og:type>
<og:url>https://www.techdirt.com/articles/20171122/09473038669/fcc-releases-net-neutrality-killing-order-hopes-youre-too-busy-cooking-turkey-to-read-it.shtml</og:url>
<og:image>https://ii.techdirt.com/s/t/i/td_icon_300.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.techdirt.com/articles/20171122/09473038669/fcc-releases-net-neutrality-killing-order-hopes-youre-too-busy-cooking-turkey-to-read-it.shtml</dc:identifier>
</item>
<item>
<title>Glowstone: open-source Minecraft server</title>
<link>https://glowstone.net</link>
<guid isPermaLink="true" >https://glowstone.net</guid>
<description>&lt;strong&gt;Glowstone is a small project.&lt;/strong&gt;&lt;p&gt;We put all of our efforts into providing efficient and quality software. While the project has been around for a few years, we are not feature-complete in comparison to the vanilla server software.&lt;/p&gt;
&lt;p&gt;We update our project frequently enough to follow Mojang's updates, but Glowstone is simply not ready for some production servers. &lt;strong&gt;While Glowstone can be used at its best for lobbies, hubs, minigames and creative servers, it is not ready for survival.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;More info can be found in the &lt;a href=&quot;https://github.com/GlowstoneMC/Glowstone/wiki/Frequently-Asked-Questions#bugs--features&quot;&gt;FAQ&lt;/a&gt;. You can also ask questions on our &lt;a href=&quot;https://forums.glowstone.net/&quot;&gt;forums&lt;/a&gt; or by &lt;a id=&quot;warning-chat-link&quot; href=&quot;https://discord.gg/TFJqhsC&quot;&gt;chat&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 23 Nov 2017 19:58:38 +0000</pubDate>
<dc:creator>brian_herman</dc:creator>
<og:title>Home</og:title>
<og:type>website</og:type>
<og:description>Minecraft's future is bright</og:description>
<og:image>https://glowstone.net/static/images/glowstone-logo-colour.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://glowstone.net/</dc:identifier>
</item>
<item>
<title>Dither stabilisation</title>
<link>https://forums.tigsource.com/index.php?topic=40832.msg1363742#msg1363742</link>
<guid isPermaLink="true" >https://forums.tigsource.com/index.php?topic=40832.msg1363742#msg1363742</guid>
<description>&lt;strong&gt;&lt;span&gt;Fullscreen, Round 3&lt;/span&gt;&lt;/strong&gt;&lt;p&gt;Thanks everybody for all the suggestions. I tried everything, literally, and concluded that the best way to maintain the game's style and fix the fullscreen discomfort was to stabilize the swimming dither and subdue the flickering dots. I got there in the end, with a few compromises. This is the 3rd full devlog post I've written on this. For each previous version I'd get an idea or find something else to try while checking over it. At this point, don't even care.&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Dithering Process&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;First, a quick explanation. Obra Dinn renders everything internally in 8-bit grayscale then converts the final output to 1-bit in a post-processing pass. The conversion from 8-bit to 1-bit is handled by comparing each source image's pixel to the corresponding dot in a tiling dither pattern. If the image pixel value is greater than the dither pattern dot value, the output bit is set to 1. Otherwise it's 0. The output gets reduced to 1-bit and the viewer's eye will merge the pixels back together to approximate more bits.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-Exp.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;&lt;p&gt;Thresholding a source image by a dither pattern&lt;/p&gt;
&lt;p&gt;The two components of this process are the source image and the dither pattern. Obra Dinn uses two distinct patterns for different cases: an 8x8 bayer matrix for a smoother range of shades, and a 128x128 blue noise field for a less ordered output.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-ExpPatterns.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;bayer / blue noise&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-Exp2.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;In-engine result without wireframe lines. Bayer on the sphere, blue noise everywhere else.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Hold Still Please&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The basic dithering process works great for static images and much less great for moving or animated images. When the source image changes from frame-to-frame the static dither pattern and low resolution output become a major problem. What should be solid shapes and shades now read as a wiggling mess of pixels.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-ExpMoving.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Moving the sphere&lt;/p&gt;
&lt;p&gt;These days, dithering is mostly used when the source image is either static or the output has a high resolution. The first thought when seeing this low-res swimming dither effect is not &quot;yeah that's how dither works&quot; but &quot;what is this warping shaking effect and how can I turn it off.&quot;&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-Original.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Exhibit A. Reduced contrast for your comfort.&lt;/p&gt;
&lt;p&gt;Try to focus on something here when it moves and behold the crinkled heart of Obra Dinn's fullscreen problems. There are ways to fix this that mostly boiling down to &quot;this style doesn't work, change it.&quot; I went pretty far down that path, experimenting with different styles, before swinging back and wondering if maybe I shouldn't let these bullshit little pixels push me around.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Stabilizing The Dither&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To give your eyes the best chance at recombining everything, dithering works best when the dither pattern dots have a 1:1 correlation with the output pixels. But, correlating only with the output means that as a scene post effect there's no connection between the geometry being rendered and the pattern that thresholds it. Each frame, moving scene elements threshold against different values. What I want instead is for the dither pattern to be &quot;pinned&quot; to the geometry and to appear stable as it moves with the rest of the scene.&lt;/p&gt;&lt;p&gt;The core of this is a mapping problem. As told by the length of this post, there's a conflict between the ideal dither pattern mapping (1:1 with the screen) and the ideal scene mapping (x:1 with the geometry) so get ready for some compromises. Most of my work was focused on mapping the input dither pattern into different spaces that better correlate the pattern with the scene geometry. Everything here is done at the pre-thresholding stage.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Texel Space&lt;/span&gt;&lt;/p&gt;&lt;p&gt;My first try was to map the dither pattern in texel space. This is equivalent to dithering the object textures during scene rendering instead of in a post-processing pass on the 8-bit output. I didn't expect this to work well but wanted to see what a perfectly scene-matched mapping looked like anyways.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-TexelMap.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Dither pattern in texel space&lt;/p&gt;
&lt;p&gt;Ok well, expectations solidly met. The objects are all mapped differently so their pattern scales don't match. Those could be unified. The real problem is the aliasing. Any resampling from one space to another like this will result in aliasing, and dither patterns can't be easily mipped or filtered like traditional textures. Still, to carry it through:&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Stable-Texel.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Applied to the moving scene&lt;/p&gt;
&lt;p&gt;This isn't a total loss - the pattern is nicely pinned to geometry. The aliasing produces its own swimming effect and unifying or scaling the mappings won't help with that. Texels change size with distance from the camera so there will always be dither pattern pixels that alias badly when resampled to the screen.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Motion Warping&lt;/span&gt;&lt;/p&gt;&lt;p&gt;If I want the dither pattern to track the moving geometry beneath it, why not just warp the pattern using the change in position of each rendered pixel in the scene? Indeed why not. This is a bit like a motion blur, where each pixel tracks its movement from the previous frame. In this case, I update the dither texture to keep its pattern moving with the scene. If a scene pixel was not represented in the previous frame, the dither pattern is reloaded there. This technique is made much simpler by the game's static-ness - I only need to worry about the movement of the camera, not individual objects.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Stable-Warp.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Warping the dither pattern to maintain frame-to-frame coherence with the scene&lt;/p&gt;
&lt;p&gt;This was a pretty quick &amp;amp; dirty try but a few things are clear. First, it kinda works. Second, a dither pattern needs a neighborhood - it can't be individual pixels. If you consider each pixel individually, as this method does, then you'll get breaks and discontinuities in the pattern which are obvious. I shifted the camera in this test scene to highlight those on the chest here. Viewing the warped dither pattern itself makes this a little easier to see.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Stable-WarpMapping.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Thresholding solid gray with the warping dither pattern&lt;/p&gt;
&lt;p&gt;These discontinuities are down to the differing pixel depths and thresholds that I chose. I reasoned an elaborate fix based on tracking regions, averaging their depth and shifting all dither pattern dots in that region by the same amount. A discontinuity along a region boundary could be hidden by sharp lighting changes or a wireframe line. This would've been enabled by the game's existing setup of colored regions for the wireframe generation. When I sat down to implement all that, the depth term dropped out of the first equation I came up with and gave me a much simpler alternative:&lt;/p&gt;&lt;p&gt;&lt;span&gt;Screen-mapping With Offset&lt;/span&gt;&lt;/p&gt;&lt;p&gt;When putting together the equations for the warping dither, a very simple transform fell out:&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;DitherOffset = ScreenSize * CameraRotation / CameraFov&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-ShiftingExp.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Shifting the screen-mapped dither pattern based on camera rotation&lt;/p&gt;
&lt;p&gt;Basically, this expresses that I want the screen-mapped dither pattern to shift by exactly one screen when the camera rotates through one field of view. That maintains a 1:1 mapping with the screen while also considering a simplified transform of the scene geometry in view. This really only matches the movement at the center of the screen but bless this fucked up world because it's nearly good enough.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-Shifting.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Offsetting the dither pattern to track one screen per camera fov rotation&lt;/p&gt;
&lt;p&gt;Note how the dithered pixels on the chair appear to mostly move with the geometry. Likewise for the sphere. Planes more perpendicular to the view don't match very well; the floor is still a mess.&lt;/p&gt;&lt;p&gt;So while not being perfect, simply shifting the screen-mapped dither keeps the overall pattern and scene movement close enough that the eyes can better track them together. I was pretty happy with this. While cleaning up the code and committing everything, maybe writing a devlog post or two, the idea of a perfectly-pinned dither kept nagging at me:&lt;/p&gt;&lt;p&gt;&lt;span&gt;World Space - Cube Mapping&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The experiments so far suggest that any correlation between the dither pattern and scene geometry would have to ignore depth information from the scene. What this means practically is that the dither can be pinned to the geometry during camera rotation but not during camera translation. This isn't such a bad thing for Obra Dinn considering the slow pace of the game and the observational role of the player. You're normally walking around, stopping, and looking at things. When walking, so many things are changing onscreen that the swimming dither isn't as obvious.&lt;/p&gt;&lt;p&gt;With that in mind, my next attempt was mapping the dither pattern to the geometry indirectly by pre-rendering it onto the sides of a cube centered around the camera. The cube translates with the camera but stays oriented to the world. In the mix: little bit of screen, little bit of scene.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraCube.png&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;296&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Dither pattern mapped to a cube centered around the camera&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraCubeMap.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Camera's view looking up into a corner. Mapping scaled up for clarity.&lt;/p&gt;
&lt;p&gt;The cube's mapping works well when looking directly into the sides, and not so well when aimed into a corner. Still, the dither pattern stays perfectly fixed in 3D space as the camera rotates. Even rough, the result is promising.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraCube.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Thresholding scene with the cube-mapped dither pattern&lt;/p&gt;
&lt;p&gt;Now we're talking. Being a post-processing pass makes this more general than texel-space mapping, which is good. The problem is now down to the particular cube mapping. An ideal mapping would have one texel on the cube always resolve to exactly one pixel on the screen, regardless of the camera rotation. That's not possible with a cube...&lt;/p&gt;&lt;p&gt;&lt;span&gt;World Space - Sphere Mapping&lt;/span&gt;&lt;/p&gt;&lt;p&gt;...but I got pretty close with a sphere.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraSphereMap.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Mapping the dither pattern onto the inside of a sphere&lt;/p&gt;
&lt;p&gt;Finding this particular spherical mapping took some time. There's no way to perfectly tile a square texture onto a sphere. It would've been possible to redefine the dither matrices in terms of a hexagon grid or something else that does tile on a sphere. Possible maybe, I didn't try. Instead, I just hacked on the square tiling until this carefully tweaked &quot;rings&quot; mapping of the original dither pattern gave good results.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraSphere.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Applied to the scene&lt;/p&gt;
&lt;p&gt;Better than the cube. Still lots of aliasing. The spherically-mapped dot size is very similar to the screen pixel size - off just enough to cause moire patterns. I could feel the closeness, and a very simple fix for this kind of aliasing is to supersample: apply the dither thresholding at a higher resolution and downsample.&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraSphereMap2.png&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Spherically-mapped dither pattern at 2x and downsampled to 1x&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-CameraSphere2.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Thresholding at 2x, then downsampling to 1x&lt;/p&gt;
&lt;p&gt;This is the best I got. There are a few compromises:&lt;/p&gt;&lt;p&gt;    &lt;strong&gt;1&lt;/strong&gt; The dither pattern dots get larger and less effective at the edges of the screen&lt;br/&gt;    &lt;strong&gt;2&lt;/strong&gt; The pattern isn't aligned up-down-left-right for most camera rotations&lt;br/&gt;    &lt;strong&gt;3&lt;/strong&gt; The output is no longer 1-bit due to the final box-downsample&lt;/p&gt;&lt;p&gt;But the upside is pretty lofty:&lt;/p&gt;&lt;p&gt;    &lt;strong&gt;1&lt;/strong&gt; The dithering is perfectly pinned for all camera rotations. This feels slightly uncanny in-game.&lt;br/&gt;    &lt;strong&gt;2&lt;/strong&gt; Discomfort from swimming dither is totally gone, even at fullscreen&lt;br/&gt;    &lt;strong&gt;3&lt;/strong&gt; The pixellated style of the game is preserved&lt;/p&gt;&lt;p&gt;It's possible eliminate compromise #3 by reducing the output back to 1-bit with a simple 50% threshold. The result is still better than without supersampling (the triple comparison directly below is thresholded).&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-FinalCompare.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Side by side, by side&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://3909.co/dev/od/img/Dither2-SplitCompare.gif&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;p&gt;In the game's default palette&lt;/p&gt;
&lt;br/&gt;&lt;span&gt;&lt;strong&gt;Wrapup&lt;/strong&gt;&lt;/span&gt;&lt;p&gt;It feels a little weird to put 100 hours into something that won't be noticed by its absence. Exactly no one will think, &quot;man this dithering is stable as shit. total magic going on here.&quot; I don't want to give people problems they didn't know they should have though so it was worth fixing.&lt;/p&gt;&lt;p&gt;The screenspace mapping with offset works best at 1x and the sphere mapping works best at 2x. All scene rendering is at 800x450 now (up from 640x360), which helps legibility without sacrificing the low-res style. The final game will have two display modes: &lt;/p&gt;&lt;p&gt;&lt;strong&gt;DIGITAL&lt;/strong&gt;&lt;br/&gt;Border-boxed, screenspace offset dither, 1-bit output&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ANALOG&lt;/strong&gt;&lt;br/&gt;Fullscreen, sphere-mapped dither, softened output&lt;br/&gt;&lt;/p&gt;</description>
<pubDate>Thu, 23 Nov 2017 16:52:38 +0000</pubDate>
<dc:creator>robin_reala</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://forums.tigsource.com/index.php?topic=40832.msg1363742</dc:identifier>
</item>
<item>
<title>Ethereum Now Handles More Transactions Than All Digital Currencies Combined</title>
<link>http://www.trustnodes.com/2017/11/22/ethereum-now-handles-transactions-digital-currencies-combined</link>
<guid isPermaLink="true" >http://www.trustnodes.com/2017/11/22/ethereum-now-handles-transactions-digital-currencies-combined</guid>
<description>&lt;p&gt;Ethereum, the barely two years old digital currency, now processes more transactions than all other digital currencies combined, including bitcoin.&lt;/p&gt;
&lt;p&gt;Ethereum currently processes 52.3% of all cryptocurrency transactions, followed by bitcoin at 33%, while Bitcoin Cash, currently third in market cap, is handling only 1.8% as pictured above.&lt;/p&gt;
&lt;p&gt;More than half a million transactions were processed yesterday by ethereum, a level that is now becoming common for the platform, rising considerably since early last year when it stood at just 10,000.&lt;/p&gt;
&lt;img class=&quot;size-full wp-image-7389&quot; src=&quot;http://www.trustnodes.com/wp-content/uploads/2017/11/ethereum-transactions-november-22-17.png&quot; alt=&quot;&quot; width=&quot;1297&quot; height=&quot;515&quot; srcset=&quot;http://www.trustnodes.com/wp-content/uploads/2017/11/ethereum-transactions-november-22-17.png 1297w, http://www.trustnodes.com/wp-content/uploads/2017/11/ethereum-transactions-november-22-17-300x119.png 300w, http://www.trustnodes.com/wp-content/uploads/2017/11/ethereum-transactions-november-22-17-768x305.png 768w, http://www.trustnodes.com/wp-content/uploads/2017/11/ethereum-transactions-november-22-17-1024x407.png 1024w&quot; sizes=&quot;(max-width: 1297px) 100vw, 1297px&quot;/&gt;Ethereum’s current transaction levels.
&lt;p&gt;While bitcoin is currently processing around 330,000 transactions, with no change in volumes for an entire year despite considerable growth and a claimed increase in capacity.&lt;/p&gt;
&lt;p&gt;Bitcoin’s transaction levels have been moving very much in a straight line due to a limited 1MB capacity. Although segregated witnesses (segwit) claimed to double it, in effect it has added as good as no capacity since its activation in August 2017.&lt;/p&gt;
&lt;img class=&quot;size-full wp-image-7390&quot; src=&quot;http://www.trustnodes.com/wp-content/uploads/2017/11/bitcoin-transactions-nov-22-17.png&quot; alt=&quot;&quot; width=&quot;1420&quot; height=&quot;615&quot; srcset=&quot;http://www.trustnodes.com/wp-content/uploads/2017/11/bitcoin-transactions-nov-22-17.png 1420w, http://www.trustnodes.com/wp-content/uploads/2017/11/bitcoin-transactions-nov-22-17-300x130.png 300w, http://www.trustnodes.com/wp-content/uploads/2017/11/bitcoin-transactions-nov-22-17-768x333.png 768w, http://www.trustnodes.com/wp-content/uploads/2017/11/bitcoin-transactions-nov-22-17-1024x443.png 1024w&quot; sizes=&quot;(max-width: 1420px) 100vw, 1420px&quot;/&gt;Bitcoin’s sideway transaction levels.
&lt;p&gt;In contrast, ethereum’s transaction levels have continued to grow with the network able to handle probably double the current amount of demand without any congestion and at sub-penny fees.&lt;/p&gt;
&lt;p&gt;Some suggest that much of this demand is due to dapps and tokens built on top of ethereum, but that may make the network itself more appealing due to increased &lt;a href=&quot;http://www.trustnodes.com/2017/06/25/bitcoin-ethereum-follow-metcalfes-law-network-effects-new-study-says&quot;&gt;network effects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Especially at a time when bitcoin transactions are very difficult and quite painful to make due to &lt;a href=&quot;http://www.trustnodes.com/2017/11/11/bitcoin-crashes-107000-transactions-stuck&quot;&gt;considerable delays&lt;/a&gt; and occasional fees of as high as $10.&lt;/p&gt;
&lt;p&gt;Ethereum hopes to avoid that completely with fees kept below 20 cent through two major network upgrades that are on the roadmap.&lt;/p&gt;
&lt;p&gt;Firstly, a hybrid Proof of Stake (PoS) and Proof of Work (PoW) upgrade might be implemented as early as next year.&lt;/p&gt;
&lt;p&gt;That might reduce transaction times below the current 15 seconds which in itself would increase capacity accordingly, but it may further increase capacity due to incentivizing nodes through staking, which can in a way be seen as earning interest for running a network node and for increasing decentralization.&lt;/p&gt;
&lt;p&gt;Eventually the network will upgrade to fully PoS, when confirmation times might be brought down to as low as 2 seconds, increasing capacity by orders of magnitude.&lt;/p&gt;
&lt;p&gt;Then, a more long term plan is sharding, which remains in conceptual development and may not be ready until after 2020. That aims to increase on-chain capacity to as good as unlimited.&lt;/p&gt;
&lt;p&gt;For now, ethereum can still comfortably handle 1 million to 2 million daily transactions, but thereafter it may start struggling. Demand, however, is not at those levels yet. Once it rises there, the capacity upgrades might be ready, which may further be complemented with Raiden, Plasma and other second layer protocols.&lt;/p&gt;


</description>
<pubDate>Thu, 23 Nov 2017 16:51:56 +0000</pubDate>
<dc:creator>magoghm</dc:creator>
<og:type>article</og:type>
<og:title>Ethereum Now Handles More Transactions Than All Digital Currencies Combined</og:title>
<og:description>Ethereum, the barely two years old digital currency, now processes more transactions than all other digital currencies combined, including bitcoin. Ethereum currently processes 52.3% of all cryptocurrency transactions, followed by...</og:description>
<og:url>http://www.trustnodes.com/2017/11/22/ethereum-now-handles-transactions-digital-currencies-combined</og:url>
<og:image>http://www.trustnodes.com/wp-content/uploads/2017/11/ethereum-transactions-1.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.trustnodes.com/2017/11/22/ethereum-now-handles-transactions-digital-currencies-combined</dc:identifier>
</item>
<item>
<title>Ditching Go for Node.js</title>
<link>https://github.com/maxpert/raspchat/releases/tag/v1.0.0-alpha</link>
<guid isPermaLink="true" >https://github.com/maxpert/raspchat/releases/tag/v1.0.0-alpha</guid>
<description>&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt; some people think this post is like a negative press for golang or I am trying to bash Golang. If you look at codebase history you will see how experimental my code was and I have been playing with go for quite long time. &lt;strong&gt;I totally love Go&lt;/strong&gt;; these are just my notes on why I choose &lt;strong&gt;Node.js&lt;/strong&gt; over &lt;strong&gt;Go&lt;/strong&gt;, and TLDR; is I find it simpler and convenient to do it in Node.js and it works well for a single core machines (which is what I am targeting). I don't find complexity of go-routines, channels back and forth, or writing my own event systems, or my own disruptor library worth it. It's like using hammer for every problem. &lt;strong&gt;Go&lt;/strong&gt; out performs Node.js when it comes to speed; but if it comes down to write my own event loops &lt;strong&gt;I will choose a framework that's built for doing so&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Before I even begin to explain and reason about what and why, let me rewind and jot down list of motivations for building this small system. &lt;strong&gt;Raspchat&lt;/strong&gt; is &quot;supposed to be&quot; plain, simple, and the dumbest chat system implementation for modern browsers, that inspires most of it's ideas from IRC. Having said that I don't want to write it in something as boilerplate as C/C++ but still want maintain reasonable scale for something as primitive as Raspberry Pi (hence the name &lt;strong&gt;Raspchat&lt;/strong&gt;). The rule to remember is &lt;strong&gt;how well it behaves on single core machine with limited memory&lt;/strong&gt;. It started off from idea of putting my rotting RPi to work.&lt;/p&gt;
&lt;p&gt;With that in mind there are three pieces to solve. The front-end, the back-end, and the protocol they would talk over. For protocol I have already started &lt;a href=&quot;https://github.com/maxpert/raspchat/blob/v1.0.0-alpha/protocol.md&quot;&gt;documenting&lt;/a&gt; and it's not anything close to a innovation; it's just a repetition of tried/tested JSON messages going across wire; with properties carrying a meaning.&lt;/p&gt;
&lt;p&gt;At time of implementation when I looked at the available options; Golang and it's efficiency hype made it an obvious choice for me (Go was probably 1.3 at that time and Node.js was something like 5.x). Go was a great choice for implementation because it cross-compiles, and while the concepts of go-routines and channels is nothing new, having giants like Google backing it is a great assurance for it's bright future. However after implementing the system, then benchmarking, and carefully analyzing the system I realized it's not the right design choice for my scenario. Why would I say that? Let's have a look:&lt;/p&gt;
&lt;h2&gt;Go-routines are not cheap!&lt;/h2&gt;
&lt;p&gt;Let's start of with biggest problem. For &lt;strong&gt;Raspchat&lt;/strong&gt; I used the &lt;a href=&quot;https://github.com/gorilla/websocket&quot;&gt;Gorilla Websocket Library&lt;/a&gt; for obvious performance reasons. Now for an active connection the library implements read and write blocking methods (every library out in wild does that; not gorilla's fault). For a fully functioning full duplex server I would need 2 go-routines per client (one constantly reading and other dedicated to write). Not going in nitty gritty details but you would need some additional channels as well to get messages in and out of these go routines and also to signal them when they should stop etc. It's just a typical house keeping stuff that every go developer understands. This is where the problem starts, if calculate the stack size required for these go-routines it's around 4KB to begin with; not taking anything else into consideration yet. So you are paying a cost of 4KB upfront per connection on an already resource constrained system (In reality it's obviously more than that due to extra fields you can look at &lt;a href=&quot;https://github.com/maxpert/raspchat/blob/79315d861968c1266701d07cb11d1db2fb95f47c/src/sibte.so/rascore/chat_handler.go&quot;&gt;code&lt;/a&gt;). With embedded storage, multiple channels for every room membership, and synchronization constructs like mutex and everything the overall cost was way more. 4KB does sound innocent on paper, but you can't get everything done just with these go routines, you need some communication mechanism and that's what leads to my next discovery.&lt;/p&gt;
&lt;h2&gt;Channels are not very fast! And you need many of them for implementing PubSub.&lt;/h2&gt;
&lt;p&gt;Yes channels are thread safe and that obviously comes with a cost. And &lt;a href=&quot;https://syslog.ravelin.com/so-just-how-fast-are-channels-anyway-4c156a407e45&quot; rel=&quot;nofollow&quot;&gt;I am not the first one to discover that&lt;/a&gt;. In a typical chat room scenario you need to implement a &lt;em&gt;Publish Subscribe Pattern&lt;/em&gt; and they are not the most efficient data-structures to do PubSub. I looked at various implementations how I can implement a PubSub system internally without paying cost for so many channels and turns out you have only two options. Either you run a go routine invoking callbacks in a loop, or you use channels to fan out messages to individual recipients. I used the later one.&lt;/p&gt;
&lt;p&gt;Disappointed with both solutions I looked at other patterns like &lt;a href=&quot;https://lmax-exchange.github.io/disruptor/&quot; rel=&quot;nofollow&quot;&gt;Disruptor Pattern&lt;/a&gt; but there were no mature implementation(s) (the one &lt;a href=&quot;https://github.com/smartystreets/go-disruptor&quot;&gt;here&lt;/a&gt; recommends to stay away and use channels instead). I would rather spend my energy on solving problem at hand. May be someday I will write a go lang disruptor library that is well tested and is usable in production.&lt;/p&gt;
&lt;h2&gt;Serialization, unions, missing generics, workarounds, and complexity&lt;/h2&gt;
&lt;p&gt;Looking at the message protocol (since I decided to go with JSON as a design choice and build on plethora of existing JSON parsers); the property &lt;code&gt;@&lt;/code&gt; usually acts like OPCODE and effects the shape of payload (totally different fields might show up for different values of &lt;code&gt;@&lt;/code&gt;). There are only 2 fixed properties in the payload coming down from server i.e. &lt;code&gt;@&lt;/code&gt;, and &lt;code&gt;!id&lt;/code&gt; (Only God knows what was I thinking when I came up with these names). Now based value on &lt;code&gt;@&lt;/code&gt; rest of pay load requires different properties (one might have &lt;code&gt;msg&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; while other might not have any of them at all), just like HTTP request headers and body.&lt;/p&gt;
&lt;p&gt;Since go does not have generics or unions my only option right now is to decode message in a base message struct with just the &lt;code&gt;@&lt;/code&gt; JSON field and then based on that try to decode message in a full payload struct. It's a price you have to pay when you don't have generics or unions in system and your data has dynamic shape. The same rule applies when message is serialized to storage etc. I also discovered later in benchmarks that I was using &lt;a href=&quot;https://golang.org/pkg/encoding/gob/&quot; rel=&quot;nofollow&quot;&gt;gob serialization&lt;/a&gt; to persist these structures in store for faster speed, but gob is a huge memory hog.&lt;/p&gt;
&lt;h2&gt;Back to white board&lt;/h2&gt;
&lt;p&gt;I was not able to get more than 1.5K parallel connections on my RPi with 512MB of RAM and system will come to crawl as load goes higher due to thrashing, and memory swapping. Despite my efforts on improving code for performance rather than readability; I was not getting much improvements, except the fact that I am doing something wrong. At this point I kind of stopped development and asked myself: &quot;What am I doing wrong?&quot;. To be fair on go's part; if you run this system on you 4 core laptop with GBs or RAM it works extremely well, faster than anything else. The problem hits you when it runs on a resources constrained system; the accumulative memory usage brings down the whole thing and I wanted this system to handle more connections on a cheap 512MB AWS instance (forget RPi).&lt;/p&gt;
&lt;h2&gt;Various explorations and going back to simplicity&lt;/h2&gt;
&lt;p&gt;I started exploring various options ranging from Rust, Elixir, Crystal, and Node.js. Rust was my second choice, but &lt;a href=&quot;http://cyderize.github.io/rust-websocket/autobahn/&quot; rel=&quot;nofollow&quot;&gt;it doesn't have a good, stable, production ready WebSocket server library yet&lt;/a&gt;. Crystal was dropped due to conservative nature of &lt;a href=&quot;https://en.wikipedia.org/wiki/Boehm_garbage_collector&quot; rel=&quot;nofollow&quot;&gt;Boehm GC&lt;/a&gt;, and Elixir also used more memory than I expected. &lt;strong&gt;Node.js&lt;/strong&gt; surprisingly gave me a nice balance of memory usage and speed. With new async/await syntax it was less annoying for me to write reasonable code (not saying it's best code yet). There are more &lt;a href=&quot;https://hashrocket.com/blog/posts/websocket-shootout&quot; rel=&quot;nofollow&quot;&gt;benchmarks&lt;/a&gt; on WebSockets out there.&lt;/p&gt;
&lt;p&gt;So after writing a basic pubsub server in all these languages, and load testing (I used &lt;a href=&quot;https://github.com/satori-com/tcpkali&quot;&gt;tcpkali&lt;/a&gt; to benchmark these systems with continuous message loads), I found Node.js was the right fit for me. The current system gracefully handles 5K concurrent clients, sending messages back and forth on single room (imagine 5k chatty people in same room), and it does all of this under 150MB of memory usage. It's not a scientific benchmark; but it already performs better than go version with same load test. I intend to do a more scientific version later and post the results.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I am still not calling it &lt;code&gt;v1.0&lt;/code&gt; because I am refactoring front-end code to clean that up as well (moving away from Vue 1.0 to hyper app JSX), server code still has some rough edges, and some development debt (packaging, code cleanup, unit tests etc.). But as of now the server is running on a Node.js server on a cheap 512MB VPS (the cheapest I could have found). So far I am happy with the amount of fat I am able to cut down and the results.&lt;/p&gt;
</description>
<pubDate>Thu, 23 Nov 2017 16:23:15 +0000</pubDate>
<dc:creator>carlchenet</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/22441?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>maxpert/raspchat</og:title>
<og:url>https://github.com/maxpert/raspchat</og:url>
<og:description>raspchat - A chat server that can run on Raspberry Pi</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/maxpert/raspchat/releases/tag/v1.0.0-alpha</dc:identifier>
</item>
<item>
<title>Show HN: Nebula – Alarm clock where you grow stars while you sleep</title>
<link>https://alextumanov.com/</link>
<guid isPermaLink="true" >https://alextumanov.com/</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://alextumanov.com/&quot;&gt;https://alextumanov.com/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=15765762&quot;&gt;https://news.ycombinator.com/item?id=15765762&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 286&lt;/p&gt;&lt;p&gt;# Comments: 124&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;hnrss is a labor of love, but if the project has made your job
or hobby project easier and you want to show some gratitude, &lt;a
href=&quot;https://donate.hnrss.org/&quot;&gt;donations are very much
appreciated&lt;/a&gt;. PayPal and Bitcoin both accepted. Thanks!&lt;/p&gt;
        </description>
<pubDate>Thu, 23 Nov 2017 15:52:53 +0000</pubDate>
<dc:creator>rocketsloth</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://alextumanov.com/</dc:identifier>
</item>
<item>
<title>Why we never thank open source maintainers</title>
<link>https://windsooon.github.io/2017/11/23/Why%20we%20never%20thank%20open%20source%20maintainers/</link>
<guid isPermaLink="true" >https://windsooon.github.io/2017/11/23/Why%20we%20never%20thank%20open%20source%20maintainers/</guid>
<description>&lt;h4 id=&quot;TL-DR&quot;&gt;TL;DR&lt;/h4&gt;
&lt;p&gt;Write a thank-you note to your favorite open source project on the NGO &lt;a href=&quot;https://www.thankyouopensource.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thank you, open source&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;Long-Version&quot;&gt;Long Version&lt;/h4&gt;
&lt;p&gt;Here is what I thoughts about why we never thank open source maintainers.&lt;/p&gt;
&lt;h4 id=&quot;I-can-build-it-by-myself&quot;&gt;I can build it by myself&lt;/h4&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“Come on, this is so easy to me”&lt;/p&gt;
&lt;p&gt;“I can do a better version in a weekend”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is true that some of you guys can build a tool in a hackathon, but maintaining a project is a lot more difficult than building a project. Most of the time they are not writing code, but:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Writing the docs&lt;/li&gt;
&lt;li&gt;Reviewing the pull requests&lt;/li&gt;
&lt;li&gt;Looking at the issues&lt;/li&gt;
&lt;li&gt;Adding new features&lt;/li&gt;
&lt;li&gt;Answering questions on StackOverflow&lt;/li&gt;
&lt;li&gt;Discussing on google groups.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A maintainer has to do all the hard work day after day, year after year without pay.&lt;/p&gt;
&lt;h4 id=&quot;It’s-too-easy-to-forget-when-it’s-too-easy-to-make-use-of-their-work&quot;&gt;It’s too easy to forget when it’s too easy to make use of their work&lt;/h4&gt;
&lt;p&gt;How do we use an open source project?&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We search for the solution to our problem.&lt;/li&gt;
&lt;li&gt;We visit some blogs and websites. (maybe just stackoverflow.com)&lt;/li&gt;
&lt;li&gt;We click on the project URL, read the README. We install and try it out. It works perfectly. Woohoo!&lt;/li&gt;
&lt;li&gt;We move onto our next problem.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;While this also happens to be sometimes, &lt;strong&gt;because open source projects are so important just like air and water&lt;/strong&gt;. We don’t say thank you to air or water because we don’t know who built it. But We do know who built these awesome open source projects.&lt;/p&gt;
&lt;h4 id=&quot;The-maintainers-don’t-care-about-this&quot;&gt;The maintainers don’t care about this&lt;/h4&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“They don’t need this, they need to pull requests or fix bugs.”&lt;/p&gt;
&lt;p&gt;“I think they would prefer donations.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They do care, &lt;a href=&quot;https://news.ycombinator.com/item?id=15623604&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sometimes all a maintainer needs is a “thank you”&lt;/a&gt; . Of course. It’s great if you could also donate some money, but most maintainers I know are not for profit. They can eventually make money but money is more of a byproduct than the main incentive. I’ve noticed that open source projects are always better than non-open source projects. because the most talented engineers do it out of passion and altruism. &lt;strong&gt;If you can’t donate some money, you can write a note.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;We-are-too-“busy”&quot;&gt;We are too “busy”&lt;/h4&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;“We are changing the world with our hands.”&lt;/p&gt;
&lt;p&gt;“My project has to launch in a week.”&lt;/p&gt;
&lt;p&gt;“We have hundreds of emails to reply everyday.”&lt;/p&gt;
&lt;p&gt;“We just don’t have time for it.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These open-source projects have more potential to change the world; or maybe they have already changed the world.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Github uses Rails on Ruby&lt;/li&gt;
&lt;li&gt;Instagram uses django&lt;/li&gt;
&lt;li&gt;Lots of our servers are running Linux.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Our projects would not have made it without these open-source projects.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;10 minutes can do nothing. Modern social media forms us a habit of clicking an upvote button or a like button instead of spending 10 minutes to write a thank-you note, while a great project can save us so much more than 10 minutes. After I posted www.thankyouopensource.com on ProductHunt, some users complained about the 300-character requirement. That’s because we want to avoid simple notes such as:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“Thank you, you guys rock.”&lt;/p&gt;
&lt;p&gt;“Thank you so much.”&lt;/p&gt;
&lt;p&gt;“I love your project.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think these users are too “busy” to write a thank-you note. But this looks like meaningless spam to me and I think reading these is just a waste of time. &lt;strong&gt;We want notes out of genuinity instead of obligation.&lt;/strong&gt; They are very different and we can all tell the difference by word. We want the maintainers to know that why we love their work and how their projects have helped us so that our genuine notes could serve as a motivation to them. &lt;strong&gt;And most importantly, we want to welcome everyone interested to join the maintaining community because it is indeed a cool job. Once you have become a maintainer, your work would be sincerely appreciated through the thank-you notes.&lt;/strong&gt; I suggest Github add a tab titled “thanks” for every project, not just to appreciate the maintainers, but also to invite more people to join the project.&lt;/p&gt;
&lt;h4 id=&quot;Final-thoughts&quot;&gt;Final thoughts:&lt;/h4&gt;
&lt;p&gt;Maintainers are the friends we want and the employees companies look for. They have passion, willingness to share, and persistence. They are the real MVP and they deserve a thank-you note.&lt;/p&gt;
&lt;h4 id=&quot;What-is-Thank-you-open-source&quot;&gt;What is &lt;a href=&quot;https://www.thankyouopensource.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thank you, open source&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This is an NGO project providing a platform for people to express gratitude toward open source maintainers and authors. It also provides a platform for maintainers to advertise their side-projects. Cheers.&lt;/p&gt;
</description>
<pubDate>Thu, 23 Nov 2017 15:28:05 +0000</pubDate>
<dc:creator>Windson</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://windsooon.github.io/2017/11/23/Why%20we%20never%20thank%20open%20source%20maintainers/</dc:identifier>
</item>
<item>
<title>I don’t want to be a software developer anymore</title>
<link>https://medium.com/@melissamcewen/i-just-dont-want-to-be-a-software-developer-anymore-a371422069a1</link>
<guid isPermaLink="true" >https://medium.com/@melissamcewen/i-just-dont-want-to-be-a-software-developer-anymore-a371422069a1</guid>
<description>&lt;p name=&quot;6b70&quot; id=&quot;6b70&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;I still love coding, but I hate this industry&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*jw2vUeVAbmu8KNaByRWIGA.gif&quot; data-width=&quot;1400&quot; data-height=&quot;626&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*jw2vUeVAbmu8KNaByRWIGA.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*jw2vUeVAbmu8KNaByRWIGA.gif&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;5bce&quot; id=&quot;5bce&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;It’s an easy story for me to tell. When I was 10 there was nothing more exciting to me than playing around with the old broken computers my dad, who worked in tech, would give me. I became a teenage game modder and hobby web developer. After college I worked at a non-profit, not making much, when I was offered an exciting position as a web developer where I made 5x as much. I’ve been doing it every since. It’s a story people who hire me or who promote the tech industry love to hear. But it’s not the whole story.&lt;/p&gt;
&lt;p name=&quot;b9a0&quot; id=&quot;b9a0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Passion is prized in this industry and people who come into code out of love are considered special. &lt;a href=&quot;https://www.bloomberg.com/view/articles/2017-08-09/as-a-woman-in-tech-i-realized-these-are-not-my-people&quot; data-href=&quot;https://www.bloomberg.com/view/articles/2017-08-09/as-a-woman-in-tech-i-realized-these-are-not-my-people&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;It is also considered the reason why certain groups of people are less represented in tech, because not as many of them are building Linux machines in their basements for fun.&lt;/a&gt;&lt;/p&gt;
&lt;p name=&quot;5041&quot; id=&quot;5041&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But the problem with that is that hobby coding isn’t at all like coding for work. Very few coding jobs allow you to do the kind of work that hobby coders enjoy. I think in many ways the industry is becoming a lot like the programming portrayed in Snow Crash, which was written in 1992 but reads as almost an oracle:&lt;/p&gt;
&lt;blockquote name=&quot;78fd&quot; id=&quot;78fd&quot; class=&quot;graf graf--blockquote graf-after--p&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;She is an applications programmer for the Feds. In the old days, she would have written computer programs for a living. Nowadays, she writes fragments of computer programs. These programs are designed by Marietta and Marietta’s superiors in massive week-long meetings on the top floor. Once they get the design down, they start breaking up the problem into tinier and tinier segments, assigning them to group managers, who break them down even more and feed little bits of work to the individual programmers. In order to keep the work done by the individual coders from colliding, it all has to be done according to a set of rules and regulations even bigger and more fluid than the Government procedure manual.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;a143&quot; id=&quot;a143&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;There are certainly more engaging jobs out there, but there reality is a lot of us do work on little fragments, work that is often tedious and devoid of any kind of creativity. As a developer I’ve often had trouble figuring out if a job would be Snow Crashy or not, and been seduced by promises of engaging work only to find myself ferreting out bugs on some enterprise CMS.&lt;/p&gt;
&lt;p name=&quot;8221&quot; id=&quot;8221&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But for a long time I pretended it was fun. That I loved it. Because there is a lot of social pressure to portray yourself that way in the industry. People hiring you will run the other way as soon as they see a crack in that facade.&lt;/p&gt;
&lt;p name=&quot;128c&quot; id=&quot;128c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Wanna here the real story of how I became a professional developer? I actually was a freelancer after working at that non-profit, I took the developer job because the medical bills piled up. And stayed because they never went away.&lt;/p&gt;
&lt;p name=&quot;0093&quot; id=&quot;0093&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It’s hard for me to admit, I know it’s hard for a lot of people. I know there are others working as developers for the health insurance or to support their families. Even James Damore, who became infamous for his claim women are less represented in tech because we are less interested in it, admits as much in a CNN interview:&lt;/p&gt;
&lt;blockquote name=&quot;9572&quot; id=&quot;9572&quot; class=&quot;graf graf--blockquote graf-after--p&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;part of the reason so many men go into tech is because it’s high paying, I know of many people in Google who weren’t necessarily passionate about it but it would provide for their family and so they still worked there&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;594a&quot; id=&quot;594a&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;If I won the lottery would I still code? I would, but it would not be like work. It would be projects I enjoyed. And it would be fewer hours.&lt;/p&gt;
&lt;p name=&quot;e78e&quot; id=&quot;e78e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Coding for a couple of hours a day in your spare time isn’t the same as coding for 8+ hours a day. Over the past decade it has worn me down. I have regular painful migraines triggered by working long hours. I have the beginnings of arthritis in my neck. I’ve tried standing desks, balance board desks, treadmill desks, special diets, exercising more before and after work. Doctors, physical therapists, massage therapists of every stripe. I’ve spent thousands and thousands of dollars. I’ve hidden it because I was afraid it would make me unemployable. I’ve worked those long hours in intense pain. I’m not sure desk jockeying for these kind of hours is good for anyone, it certainly wasn’t good for me.&lt;/p&gt;
&lt;p name=&quot;59ca&quot; id=&quot;59ca&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I also have to say that there is a &lt;a href=&quot;https://www.nytimes.com/2017/09/23/technology/silicon-valley-men-backlash-gender-scandals.html&quot; data-href=&quot;https://www.nytimes.com/2017/09/23/technology/silicon-valley-men-backlash-gender-scandals.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;toll&lt;/a&gt; to the constant backlash against women in tech. That what James Damore said that really cut to the core was that a lot of us women in tech were only there because a bar was lowered to get us in to meet some quota. And reading the reaction to it on websites I frequented and from people I once counted as friends was very hard. I can’t pretend this didn’t contribute to being demoralized. On the other side I am really sick of diversity programs I encountered that are corporate cheerleading and totally unwilling to do the hard work it would actually take to make this a better industry for women.&lt;/p&gt;
&lt;p name=&quot;bcdd&quot; id=&quot;bcdd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It’s really hard to celebrate “women’s day” with free feminist speakers when I just found out some guy who does the same work as me is getting paid 20% more. Also once in a while some jerk will be like “if women really were paid less why wouldn’t companies hire more women to save money?” I’m pretty sure they already do this and that recent lawsuits will reveal it is a &lt;a href=&quot;https://www.theguardian.com/technology/2017/sep/14/google-women-promotions-lower-paying-jobs-lawsuit&quot; data-href=&quot;https://www.theguardian.com/technology/2017/sep/14/google-women-promotions-lower-paying-jobs-lawsuit&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;common practice&lt;/a&gt;. My experience is companies are thrilled to hire women, it makes them look good AND they can usually pay them less. It’s not about quotas.&lt;/p&gt;
&lt;p name=&quot;7f55&quot; id=&quot;7f55&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Commenters on my previous article asked me why I didn’t just get my skills up to snuff and get “better” jobs. I’ve never really had trouble with that. I take to new technology easily and learn fast. I suspect I’ll keep doing that. But at this point I’ve lost all desire to try to hack it in the industry.&lt;/p&gt;
&lt;p name=&quot;5db5&quot; id=&quot;5db5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Because it’s not really “passion” they are looking for, but people who are merely willing to endure long hours. They aren’t really looking for the person who spends a few hours on the weekend on an open-source project, they are looking for the person who comes home from work and spends all night on it.&lt;/p&gt;
&lt;p name=&quot;0dc3&quot; id=&quot;0dc3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The good news is I basically already did win the lottery. I built up savings working as a developer which allowed me to quit. I also have a safety net in that if things really go to hell I can live and work on my family’s farm. This is an immense privilege I am grateful for. That savings was originally for a downpayment for a house, but now gives me a landing pad where I can take some time to really do what I love. A few hours of coding, a few hours of writing. I’ve gone from most of my days filled with pain to only a few isolated incidents. Ample time with people I care about. In January I’m starting a &lt;a href=&quot;http://www.chicagoschoolofshoemaking.com/vocational-training/&quot; data-href=&quot;http://www.chicagoschoolofshoemaking.com/vocational-training/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;leatherwork vocational program&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;72b3&quot; id=&quot;72b3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Where do I go from here? That house downpayment money isn’t going to last forever. I’m not delusional in that I know the effect this is having on my career track. That selling USA-made consumer goods is a tough industry. I’ve had lots of dire warnings from various people in my life. If I try to go back, I know a lot of companies will run as soon as they know I have other priorities in my life and I’m not afraid to defend them. But I have a diverse skillset that hopefully will earn me value somehow.&lt;/p&gt;
&lt;p name=&quot;5570&quot; id=&quot;5570&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Of course there are a lot of jobs out there besides software development that involve long, harmful hours. I dream of a world where we all work less. In the meantime I’ll still be here coding, maybe actually enjoying it again, and trying to find a life where I have true balance between my work and my other needs.&lt;/p&gt;
</description>
<pubDate>Thu, 23 Nov 2017 14:34:01 +0000</pubDate>
<dc:creator>Yhippa</dc:creator>
<og:title>I just don’t want to be a software developer anymore</og:title>
<og:url>https://medium.com/@melissamcewen/i-just-dont-want-to-be-a-software-developer-anymore-a371422069a1</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*jw2vUeVAbmu8KNaByRWIGA.gif</og:image>
<og:description>I still love coding, but I hate this industry</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@melissamcewen/i-just-dont-want-to-be-a-software-developer-anymore-a371422069a1</dc:identifier>
</item>
<item>
<title>Workers at Amazon&amp;#039;s main Italian hub, German warehouses strike on Black Friday</title>
<link>https://www.reuters.com/article/us-amazon-italy-strike/workers-at-amazons-main-italian-site-to-hold-first-strike-on-black-friday-idUSKBN1DN1DS</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-amazon-italy-strike/workers-at-amazons-main-italian-site-to-hold-first-strike-on-black-friday-idUSKBN1DN1DS</guid>
<description>&lt;p data-reactid=&quot;32&quot;&gt;MILAN (Reuters) - Workers at Amazon’s main distribution hub in Italy are planning their first ever strike for Friday, trade unions said, while they are also striking at six warehouses in Germany, threatening to disrupt one of the year’s busiest shopping days.&lt;/p&gt;
&lt;div class=&quot;PrimaryAsset_container_2pnvl&quot; data-reactid=&quot;33&quot;&gt;
&lt;div class=&quot;Image_container_1tVQo&quot; data-reactid=&quot;34&quot;&gt;

&lt;span class=&quot;Image_caption_KoNH1&quot; data-reactid=&quot;39&quot;&gt;A view of the new Amazon logistic center with the company's logo in Dortmund, Germany November 14, 2017. REUTERS/Thilo Schmuelgen&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p data-reactid=&quot;40&quot;&gt;Like the rest of Europe, Italians in recent years have embraced the U.S. tradition of Black Friday, a day of heavy discounting by retailers on the day after Thanksgiving.&lt;/p&gt;
&lt;p data-reactid=&quot;41&quot;&gt;Unions said in a statement more than 500 Amazon workers at the Piacenza site in northern Italy had agreed to strike following a failure to negotiate bonuses with the company.&lt;/p&gt;
&lt;p data-reactid=&quot;42&quot;&gt;Workers have also decided not to do any overtime until Dec. 31, covering the peak season for the online retailer which hires temporary workers during this period.&lt;/p&gt;
&lt;p data-reactid=&quot;43&quot;&gt;Amazon employs around 1,600 people on a permanent basis at the Piacenza site, the first it built in the country after launching its Italian website in 2010.&lt;/p&gt;
&lt;p data-reactid=&quot;44&quot;&gt;The Verdi trade union in Germany said Amazon employees would also strike on Friday at six distribution centers in the country as part of a long-running dispute over pay and conditions.&lt;/p&gt;
&lt;p data-reactid=&quot;45&quot;&gt;“The world’s biggest online retailer wants to achieve record sales on this day, but employees have to produce record performance not only on this day so that everything runs how Amazon wants it,” said Verdi board member Stefanie Nutzenberger.&lt;/p&gt;
&lt;p data-reactid=&quot;46&quot;&gt;Amazon in Italy said in a statement it remained focused on trying to guarantee scheduled deliveries for its customers on Black Friday and in the following days.&lt;/p&gt;
&lt;p data-reactid=&quot;47&quot;&gt;The company said salaries paid to its workers were among the highest in the logistic sector and that it also provided some benefits such as private medical insurance or money to pay for training programs.&lt;/p&gt;
&lt;p data-reactid=&quot;48&quot;&gt;E-commerce is growing fast in Italy where online sales account only for 10 percent of overall retail sales, according to consultancy EY, half the European average.&lt;/p&gt;
&lt;div class=&quot;Attribution_attribution_o4ojT&quot; data-reactid=&quot;49&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content_27_rw&quot; data-reactid=&quot;50&quot;&gt;Reporting by Valentina Za; Editing by Mark Potter and David Evans&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ArticleBody_trustBadgeContainer_1_iEv&quot; data-reactid=&quot;51&quot;&gt;&lt;span class=&quot;ArticleBody_trustBadgeTitle_3xFqc&quot; data-reactid=&quot;52&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot; data-reactid=&quot;53&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot; data-reactid=&quot;54&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 23 Nov 2017 13:49:38 +0000</pubDate>
<dc:creator>petethomas</dc:creator>
<og:title>Workers at Amazon's main Italian hub, German warehouses strike on Black Friday</og:title>
<og:url>https://www.reuters.com/article/us-amazon-italy-strike/workers-at-amazons-main-italian-site-to-hold-first-strike-on-black-friday-idUSKBN1DN1DS</og:url>
<og:type>article</og:type>
<og:description>Workers at Amazon's main distribution hub in Italy are planning their first ever strike for Friday, trade unions said, while they are also striking at six warehouses in Germany, threatening to disrupt one of the year's busiest shopping days.</og:description>
<og:image>https://s2.reutersmedia.net/resources/r/?m=02&amp;d=20171123&amp;t=2&amp;i=1210989965&amp;w=&amp;fh=545px&amp;fw=&amp;ll=&amp;pl=&amp;sq=&amp;r=LYNXMPEDAM0WD</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-amazon-italy-strike/workers-at-amazons-main-italian-site-to-hold-first-strike-on-black-friday-idUSKBN1DN1DS</dc:identifier>
</item>
</channel>
</rss>