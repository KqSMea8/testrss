<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Researchers Use CRISPR to Detect HPV and Zika</title>
<link>https://www.engadget.com/2018/02/15/crispr-detect-hpv-and-zika/</link>
<guid isPermaLink="true" >https://www.engadget.com/2018/02/15/crispr-detect-hpv-and-zika/</guid>
<description>&lt;p&gt;The &lt;a href=&quot;http://science.sciencemag.org/content/early/2018/02/14/science.aar6245&quot;&gt;first study&lt;/a&gt; comes from the lab of CRISPR pioneer Jennifer Doudna. Her team discovered that a CRISPR system different from the CRISPR-Cas9 one we're used to hearing about can not only snip away specific bits of double-stranded DNA, but can then also cut single-stranded DNA that's near it. After they uncovered this ability of CRISPR-Cas12a, they used it to detect two common types of HPV. Once their CRISPR-Cas12a system detected HPV DNA in infected cells, it cleaved a another piece of DNA that then released a fluorescent signal, providing a visual sign of the presence of HPV. The researchers dubbed the system DETECTR and &lt;em&gt;&lt;a href=&quot;https://www.theverge.com/2018/2/15/17012866/crispr-detectr-sherlock-zika-dengue-hpv-diagnostic-tools&quot;&gt;The Verge&lt;/a&gt;&lt;/em&gt; reports that it takes around an hour to work and costs less than a dollar.&lt;/p&gt;
&lt;p&gt;The lab of another CRISPR pioneer, Feng Zhang, has now improved on a previous system it &lt;a href=&quot;http://science.sciencemag.org/content/356/6336/438&quot;&gt;developed last year&lt;/a&gt;. SHERLOCK, as it's called, can detect specific bits of DNA and RNA to determine whether viruses like Zika or dengue are present in a blood sample, identify mutations in tumor DNA and spot the presence of harmful bacteria. In their &lt;a href=&quot;http://science.sciencemag.org/content/early/2018/02/14/science.aaq0179&quot;&gt;latest study&lt;/a&gt;, the research team describes SHERLOCK version 2.0, which is not only over three times as sensitive as the first version, but can also detect both Zika and dengue in the same sample. Their system uses several CRISPR enzymes, including Cas13 and Csm6, and can be loaded onto a paper strip, making it incredibly easy to use. You can see examples of the strips in the GIF below. Jonathan Gootenberg, one of the authors of the study, told &lt;em&gt;&lt;a href=&quot;https://www.theverge.com/2018/2/15/17012866/crispr-detectr-sherlock-zika-dengue-hpv-diagnostic-tools&quot;&gt;The Verge&lt;/a&gt;&lt;/em&gt;, &quot;The fact that we can put all these different enzymes into a single tube and have them not only play nice with each other, but also tell us information we couldn't get otherwise -- that is really spectacular and it speaks to a lot of the power of biochemistry.&quot;&lt;/p&gt;
&lt;p&gt;&lt;img data-credit=&quot;Zheng Lab, Broad Institute of MIT and Harvard&quot; data-mep=&quot;2457370&quot; src=&quot;https://s.aolcdn.com/hss/storage/midas/b79f9114c22387c1474c136a8be37d2f/206131388/gootenberg3.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Lastly, Harvard University's David Liu published &lt;a href=&quot;http://science.sciencemag.org/content/early/2018/02/14/science.aap8992&quot;&gt;a study&lt;/a&gt; showing that CRISPR can be used to track certain ongoings in a cell. Seeing what a cell has been exposed to in the past has been a rather hard thing to do, but CRISPR systems provide a way for researchers to do just that. Liu's team used CRISPR in two different ways to record when a cell was exposed to certain chemicals. In the first, CRISPR was used to snip bits of DNA called plasmids if it came in contact with a particular chemical, such as an antibiotic or a nutrient. By comparing the ratio of the plasmid types that were destroyed by CRISPR to other, similar plasmids that were left alone, the researchers were able to determine just how often the cells were exposed to those chemicals. Another version of the system changed individual letters, or bases, of DNA rather than snipping plasmids and the team was able to determine when cells were exposed to antibiotics, nutrients, viruses and light by examining those changes in the DNA bases.&lt;/p&gt;
&lt;p&gt;While all three of these systems need further development before they can be used outside of the lab, they show that &lt;a href=&quot;https://www.engadget.com/2018/01/07/crispr-gene-editing-methods-might-not-work-for-most-humans/&quot;&gt;CRISPR&lt;/a&gt; has &lt;a href=&quot;https://www.engadget.com/2017/08/10/pig-organs-viable-transplant-crispr/&quot;&gt;quite a lot of uses&lt;/a&gt;, beyond just treating disease. The technology is incredibly versatile and we're sure to see even more applications going forward.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;t-meta c-gray-4&quot;&gt;Image: Zhang Lab, Broad Institute of MIT and Harvard&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 19:59:38 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:type>article</og:type>
<og:url>https://www.engadget.com/2018/02/15/crispr-detect-hpv-and-zika/</og:url>
<og:title>Researchers use CRISPR to detect HPV and Zika</og:title>
<og:description>Three new studies show that CRISPR has a wider range of applications than we even thought.</og:description>
<og:image>https://o.aolcdn.com/images/dims?thumbnail=1200%2C630&amp;quality=80&amp;image_uri=https%3A%2F%2Fs.aolcdn.com%2Fhss%2Fstorage%2Fmidas%2Fa2bc8aacf487999ff6357eb256f4bdc7%2F206131407%2Fgootenberg1HR.jpg&amp;client=cbc79c14efcebee57402&amp;signature=b379b28c2543c422f528064d5ea7597cb4a3887a</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.engadget.com/2018/02/15/crispr-detect-hpv-and-zika/</dc:identifier>
</item>
<item>
<title>Peace and quiet is all about the noise in your head</title>
<link>http://nautil.us/issue/38/noise/this-is-your-brain-on-silence-rp</link>
<guid isPermaLink="true" >http://nautil.us/issue/38/noise/this-is-your-brain-on-silence-rp</guid>
<description>&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;O&lt;/span&gt;ne icy night in March 2010, 100 marketing experts piled into the Sea Horse Restaurant in Helsinki, with the modest goal of making a remote and medium-sized country a world-famous tourist destination. The problem was that Finland was known as a rather quiet country, and since 2008, the Country Brand Delegation had been looking for a national brand that would make some noise.&lt;/p&gt;
&lt;p&gt;Over drinks at the Sea Horse, the experts puzzled over the various strengths of their nation. Here was a country with exceptional teachers, an abundance of wild berries and mushrooms, and a vibrant cultural capital the size of Nashville, Tennessee. These things fell a bit short of a compelling national identity. Someone jokingly suggested that nudity could be named a national theme—it would emphasize the honesty of Finns. Someone else, less jokingly, proposed that perhaps quiet wasn’t such a bad thing. That got them thinking.&lt;/p&gt;
&lt;p&gt;A few months later, the delegation issued a slick “Country Brand Report.” It highlighted a host of marketable themes, including Finland’s renowned educational system and school of functional design. One key theme was brand new: silence. As the report explained, modern society often seems intolerably loud and busy. “Silence is a resource,” it said. It could be marketed just like clean water or wild mushrooms. “In the future, people will be prepared to pay for the experience of silence.”&lt;/p&gt;
&lt;p&gt;People already do. In a loud world, silence sells. Noise-canceling headphones retail for hundreds of dollars; the cost of some weeklong silent meditation courses can run into the thousands. Finland saw that it was possible to quite literally make something out of nothing.&lt;/p&gt;
&lt;p&gt;In 2011, the Finnish Tourist Board released a series of photographs of lone figures in the wilderness, with the caption “Silence, Please.” An international “country branding” consultant, Simon Anholt, proposed the playful tagline “No talking, but action.” And a Finnish watch company, Rönkkö, launched its own new slogan: “Handmade in Finnish silence.”&lt;/p&gt;
&lt;div class=&quot;reco&quot;&gt;
&lt;article class=&quot;issue-article&quot;&gt;&lt;div&gt;&lt;a href=&quot;http://nautil.us/issue/35/Boundaries/the-paradox-of-the-elephant-brain&quot; class=&quot;obnd_lnk&quot; data-trval=&quot;the-paradox-of-the-elephant-brain&quot; data-trlbl=&quot;foc_rec&quot; data-tract=&quot;internal_art&quot;&gt;&lt;img src=&quot;http://static.nautil.us/8870_f8a26bb636decd3a1cb482a444dad467.png&quot; alt=&quot;Sapolsky_TH-F1&quot; width=&quot;314&quot; height=&quot;177&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span class=&quot;article-tag&quot;&gt;&lt;span class=&quot;article-tag&quot;&gt;&lt;span class=&quot;article-tag-focus&quot;&gt;&lt;a href=&quot;http://nautil.us/term/f/Neuroscience&quot;&gt;Also in Neuroscience&lt;/a&gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;
&lt;h4 class=&quot;article-title&quot;&gt;&lt;a href=&quot;http://nautil.us/issue/35/Boundaries/the-paradox-of-the-elephant-brain&quot; class=&quot;obnd_lnk&quot; data-trval=&quot;the-paradox-of-the-elephant-brain&quot; data-trlbl=&quot;foc_rec&quot; data-tract=&quot;internal_art&quot;&gt;The Paradox of the Elephant Brain&lt;/a&gt;&lt;/h4&gt;
&lt;p class=&quot;article-author&quot;&gt;By Suzana Herculano-Houzel&lt;/p&gt;
&lt;p&gt;We have long deemed ourselves to be at the pinnacle of cognitive abilities among animals. But that is different from being at the pinnacle of evolution in a number of very important ways. As Mark Twain pointed out in 1903,...&lt;strong&gt;&lt;a href=&quot;http://nautil.us/issue/35/Boundaries/the-paradox-of-the-elephant-brain&quot; class=&quot;obnd_lnk&quot; data-trval=&quot;the-paradox-of-the-elephant-brain&quot; data-trlbl=&quot;foc_rec&quot; data-tract=&quot;internal_art&quot;&gt;READ MORE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/article&gt;&lt;/div&gt;
&lt;p&gt;“We decided, instead of saying that it’s really empty and really quiet and nobody is talking about anything here, let’s embrace it and make it a good thing,” explains Eva Kiviranta, who manages social media for VisitFinland.com.&lt;/p&gt;
&lt;blockquote class=&quot;pull-quote&quot;&gt;
&lt;p&gt;In a loud world, silence sells. Finland saw that it was possible to quite literally make something out of nothing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Silence is a peculiar starting point for a marketing campaign. After all, you can’t weigh, record, or export it. You can’t eat it, collect it, or give it away. The Finland campaign raises the question of just what the tangible effects of silence really are. Science has begun to pipe up on the subject. In recent years researchers have highlighted the peculiar power of silence to calm our bodies, turn up the volume on our inner thoughts, and attune our connection to the world. Their findings begin where we might expect: with noise.&lt;/p&gt;
&lt;p&gt;The word “noise” comes from a Latin root meaning either queasiness or pain. According to the historian Hillel Schwartz, there’s even a Mesopotamian legend in which the gods grow so angry at the clamor of earthly humans that they go on a killing spree. (City-dwellers with loud neighbors may empathize, though hopefully not too closely.)&lt;/p&gt;
&lt;p&gt;Dislike of noise has produced some of history’s most eager advocates of silence, as Schwartz explains in his book &lt;em&gt;Making Noise: From Babel to the Big Bang and Beyond&lt;/em&gt;. In 1859, the British nurse and social reformer Florence Nightingale wrote, “Unnecessary noise is the most cruel absence of care that can be inflicted on sick or well.” Every careless clatter or banal bit of banter, Nightingale argued, can be a source of alarm, distress, and loss of sleep for recovering patients. She even quoted a lecture that identified “sudden noises” as a cause of death among sick children.&lt;/p&gt;
&lt;img src=&quot;http://static.nautil.us/4047_e366d105cfd734677897aaccf51e97a3.png&quot; width=&quot;733&quot; alt=&quot;&quot;/&gt;&lt;span class=&quot;caption&quot;&gt;&lt;strong&gt;The Quiet Sell:&lt;/strong&gt; Two wooden armchairs stand on a lake shore in Finland, where marketers have rebranded the Nordic country with a slogan, “Silence, Please.”&lt;/span&gt;&lt;span class=&quot;credit&quot;&gt;veer.com&lt;/span&gt;
&lt;p&gt;Surprisingly, recent research supports some of Nightingale’s zealous claims. In the mid 20th century, epidemiologists discovered correlations between high blood pressure and chronic noise sources like highways and airports. Later research seemed to link noise to increased rates of sleep loss, heart disease, and tinnitus. (It’s this line of research that hatched the 1960s-era notion of “noise pollution,” a name that implicitly refashions transitory noises as toxic and long-lasting.)&lt;/p&gt;
&lt;p&gt;Studies of human physiology help explain how an invisible phenomenon can have such a pronounced physical effect. Sound waves vibrate the bones of the ear, which transmit movement to the snail-shaped cochlea. The cochlea converts physical vibrations into electrical signals that the brain receives. The body reacts immediately and powerfully to these signals, even in the middle of deep sleep. Neurophysiological research suggests that noises first activate the amygdalae, clusters of neurons located in the temporal lobes of the brain, associated with memory formation and emotion. The activation prompts an immediate release of stress hormones like cortisol. People who live in consistently loud environments often experience chronically elevated levels of stress hormones.&lt;/p&gt;
&lt;p&gt;Just as the whooshing of a hundred individual cars accumulates into an irritating wall of background noise, the physical effects of noise add up. In 2011, the World Health Organization tried to quantify its health burden in Europe. It concluded that the 340 million residents of western Europe—roughly the same population as that of the United States—annually lost a million years of healthy life because of noise. It even argued that 3,000 heart disease deaths were, at their root, the result of excessive noise.&lt;/p&gt;
&lt;p&gt;So we like silence for what it doesn’t do—it doesn’t wake, annoy, or kill us—but what does it do? When Florence Nightingale attacked noise as a “cruel absence of care,” she also insisted on the converse: Quiet is a part of care, as essential for patients as medication or sanitation. It’s a strange notion, but one that researchers have begun to bear out as true.&lt;/p&gt;
&lt;blockquote class=&quot;pull-quote&quot;&gt;
&lt;p&gt;Two-minute silent pauses proved far more relaxing than either “relaxing” music or a longer silence played before the experiment started.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Silence first began to appear in scientific research as a control or baseline, against which scientists compare the effects of noise or music. Researchers have mainly studied it by accident, as physician Luciano Bernardi did in a 2006 study of the physiological effects of music. “We didn’t think about the effect of silence,” he says. “That was not meant to be studied specifically.”&lt;/p&gt;
&lt;p&gt;He was in for a quiet surprise. Bernardi observed physiological metrics for two dozen test subjects while they listened to six musical tracks. He found that the impacts of music could be read directly in the bloodstream, via changes in blood pressure, carbon dioxide, and circulation in the brain. (Bernardi and his son are both amateur musicians, and they wanted to explore a shared interest.) “During almost all sorts of music, there was a physiological change compatible with a condition of arousal,” he explains.&lt;/p&gt;
&lt;p&gt;This effect made sense, given that active listening requires alertness and attention. But the more striking finding appeared between musical tracks. Bernardi and his colleagues discovered that randomly inserted stretches of silence also had a drastic effect, but in the opposite direction. In fact, two-minute silent pauses proved far more relaxing than either “relaxing” music or a longer silence played before the experiment started.&lt;/p&gt;
&lt;p&gt;The blank pauses that Bernardi considered irrelevant, in other words, became the most interesting object of study. Silence seemed to be heightened by contrasts, maybe because it gave test subjects a release from careful attention. “Perhaps the arousal is something that concentrates the mind in one direction, so that when there is nothing more arousing, then you have deeper relaxation,” he says.&lt;/p&gt;
&lt;p&gt;In 2006, Bernardi’s paper on the physiological effects of silence was the most-downloaded research in the journal &lt;em&gt;Heart&lt;/em&gt;. One of his key findings—that silence is heightened by contrasts—is reinforced by neurological research. In 2010, Michael Wehr, who studies sensory processing in the brain at the University of Oregon, observed the brains of mice during short bursts of sound. The onset of a sound prompts a specialized network of neurons in the auditory cortex to light up. But when sounds continue in a relatively constant manner, the neurons largely stop reacting. “What the neurons really do is signal whenever there’s a change,” Wehr says.&lt;/p&gt;
&lt;p&gt;The sudden onset of silence is a type of change too, and this fact led Wehr to a surprise. Before his 2010 study, scientists knew that the brain reacts to the start of silences. (This ability helps us react to dangers, for example, or distinguish words in a sentence.) But Wehr’s research extended those findings by showing that, remarkably, the auditory cortex has a separate network of neurons that fire when silence begins. “When a sound suddenly stops, that’s an event just as surely as when a sound starts.”&lt;/p&gt;
&lt;p&gt;Even though we usually think of silences as a lack of input, our brains are structured to recognize them, whenever they represent a sharp break from sounds. So the question is what happens after that moment—when silence continues, and the auditory cortex settles into a state of relative inactivity.&lt;/p&gt;
&lt;img src=&quot;http://static.nautil.us/3946_71a8b2ffe0b594a5c1b3c28090384fd7.png&quot; width=&quot;733&quot; alt=&quot;&quot;/&gt;&lt;p&gt;One of the researchers who’s examined this question is a Duke University regenerative biologist, Imke Kirste. Like Bernardi, Kirste wasn’t trying to study silence at all. In 2013, she was examining the effects of sounds in the brains of adult mice. Her experiment exposed four groups of mice to various auditory stimuli: music, baby mouse calls, white noise, and silence. She expected that baby mouse calls, as a form of communication, might prompt the development of new brain cells. Like Bernardi, she thought of silence as a control that wouldn’t produce an effect.&lt;/p&gt;
&lt;p&gt;As it turned out, even though all the sounds had short-term neurological effects, not one of them had a lasting impact. Yet to her great surprise, Kirste found that two hours of silence per day prompted cell development in the hippocampus, the brain region related to the formation of memory, involving the senses. This was deeply puzzling: The total absence of input was having a more pronounced effect than any sort of input tested.&lt;/p&gt;
&lt;p&gt;Here’s how Kirste made sense of the results. She knew that “environmental enrichment,” like the introduction of toys or fellow mice, encouraged the development of neurons because they challenged the brains of mice. Perhaps the total absence of sound may have been so artificial, she reasoned—so alarming, even—that it prompted a higher level of sensitivity or alertness in the mice. Neurogenesis could be an adaptive response to uncanny quiet.&lt;/p&gt;
&lt;p&gt;The growth of new cells in the brain doesn’t always have health benefits. But in this case, Kirste says that the cells seemed to become functioning neurons. “We saw that silence is really helping the new generated cells to differentiate into neurons, and integrate into the system.”&lt;/p&gt;
&lt;p&gt;While Kirste emphasizes that her findings are preliminary, she wonders if this effect could have unexpected applications. Conditions like dementia and depression have been associated with decreasing rates of neurogenesis in the hippocampus. If a link between silence and neurogenesis could be established in humans, she says, perhaps neurologists could find a therapeutic use for silence.&lt;/p&gt;
&lt;blockquote class=&quot;pull-quote&quot;&gt;
&lt;p&gt;To her great surprise, she found that two hours of silence per day prompted cell development in the hippocampus region of the brain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While it’s clear that external silence can have tangible benefits, scientists are discovering that under the hoods of our skulls “there isn’t really such a thing as silence,” says Robert Zatorre, an expert on the neurology of sound. “In the absence of sound, the brain often tends to produce internal representations of sound.”&lt;/p&gt;
&lt;p&gt;Imagine, for example, you’re listening to Simon and Garfunkel’s “The Sound of Silence,” when the radio abruptly cuts out. Neurologists have found that if you know the song well, your brain’s auditory cortex remains active, as if the music is still playing. “What you’re ‘hearing’ is not being generated by the outside world,” says David Kraemer, who’s conducted these types of experiments in his Dartmouth College laboratory. “You’re retrieving a memory.” Sounds aren’t always responsible for sensations—sometimes our subjective sensations are responsible for the illusion of sound.&lt;/p&gt;
&lt;p&gt;This is a reminder of the brain’s imaginative power: On the blank sensory slate of silence, the mind can conduct its own symphonies. But it’s also a reminder that even in the absence of a sensory input like sound, the brain remains active and dynamic.&lt;/p&gt;
&lt;p&gt;In 1997, a team of neuroscientists at Washington University was collecting brain scan data from test subjects during various mental tasks, like arithmetic and word games. One of the scientists, Gordon Shulman, noticed that although intense cognition caused spikes in some parts of the brain, as you’d expect, it was also causing declines in the activity of other parts of the brain. There seemed to be a type of background brain activity that was most visible, paradoxically, when the test subject was in a quiet room, doing absolutely nothing.&lt;/p&gt;
&lt;p&gt;The team’s lead scientist was Marcus Raichle, and he knew there were good reasons to look closer at the data. For decades, scientists had known that the brain’s “background” activity consumed the lion’s share of its energy. Difficult tasks like pattern recognition or arithmetic, in fact, only increased the brain’s energy consumption by a few percent. This suggested that by ignoring the background activity, neurologists might be overlooking something crucial. “When you do that,” Raichle explains, “most of the brain’s activities end up on the cutting room floor.”&lt;/p&gt;
&lt;p&gt;In 2001, Raichle and his colleagues published a seminal paper that defined a “default mode” of brain function—situated in the prefrontal cortex, active in cognitive actions—implying a “resting” brain is perpetually active, gathering and evaluating information. Focused attention, in fact, curtails this scanning activity. The default mode, Raichle and company argued, has “rather obvious evolutionary significance.” Detecting predators, for example, should happen automatically, and not require additional intention and energy.&lt;/p&gt;
&lt;p&gt;Follow-up research has shown the default mode is also enlisted in self-reflection. In 2013, in &lt;em&gt;Frontiers in Human Neuroscience&lt;/em&gt;, Joseph Moran and colleagues wrote the brain’s default mode network “is observed most closely during the psychological task of reflecting on one’s personalities and characteristics (self-reflection), rather than during self-recognition, thinking of the self-concept, or thinking about self-esteem, for example.” During this time when the brain rests quietly, wrote Moran and colleagues, our brains integrate external and internal information into “a conscious workspace.”&lt;/p&gt;
&lt;p&gt;Freedom from noise and goal-directed tasks, it appears, unites the quiet without and within, allowing our conscious workspace to do its thing, to weave ourselves into the world, to discover where we fit in. That’s the power of silence.&lt;/p&gt;
&lt;p&gt;Noora Vikman, an ethnomusicologist, and a consultant on silence for Finland’s marketers, knows that power well. She lives in the eastern part of Finland, an area blanketed with quiet lakes and forests. In a remote and quiet place, Vikman says, she discovers thoughts and feelings that aren’t audible in her busy daily life. “If you want to know yourself you have to be with yourself, and discuss with yourself, be able to talk with yourself.”&lt;/p&gt;
&lt;p&gt;“Silence, Please” has proven to be the most popular theme in Finland’s rebranding, and one of the most popular pages on VisitFinland.com. Maybe silence sells because, so often, we treat it as a tangible thing—something easily broken, like porcelain or crystal, and something delicate and valuable. Vikman remembers a time when she experienced the rarity of nearly complete silence. Standing in the Finnish wilderness, she strained her ears to pick out the faintest sounds of animals or wind. “It’s strange,” she says, “the way you change. You have all the power—you can break the silence with even with the smallest sounds. And then you don’t want to do it. You try to be as quiet as you can be.”&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Daniel A. Gross is a freelance journalist and public radio producer who writes about history and science.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was originally published in our “Nothingness” issue in August, 2014.&lt;/em&gt;&lt;/p&gt;
&lt;section class=&quot;leaderboard-ad-belt&quot;&gt;&lt;div class=&quot;leaderboard-ad-belt-inner adarticle&quot;&gt;&lt;div id=&quot;div-gpt-ad-1380044019755-0&quot; class=&quot;leaderboard-ad&quot;/&gt;
&lt;/div&gt;
&lt;/section&gt;</description>
<pubDate>Mon, 19 Feb 2018 19:46:18 +0000</pubDate>
<dc:creator>dnetesn</dc:creator>
<og:type>website</og:type>
<og:url>http://nautil.us/issue/38/noise/this-is-your-brain-on-silence-rp</og:url>
<og:title>This Is Your Brain on Silence - Issue 38: Noise - Nautilus</og:title>
<og:description>One icy night in March 2010, 100 marketing experts piled into the Sea Horse Restaurant in Helsinki, with the modest goal of making&amp;#8230;</og:description>
<og:image>http://static.nautil.us/3898_37db6bb5f1db992df92a919d20757eec.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://nautil.us/issue/38/noise/this-is-your-brain-on-silence-rp</dc:identifier>
</item>
<item>
<title>Maybe you don&amp;#039;t need Rust and WASM to speed up your JS</title>
<link>http://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html</link>
<guid isPermaLink="true" >http://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html</guid>
<description>&lt;p&gt;Few weeks ago I noticed a blog post &lt;a href=&quot;https://hacks.mozilla.org/2018/01/oxidizing-source-maps-with-rust-and-webassembly/&quot;&gt;“Oxidizing Source Maps with Rust and WebAssembly”&lt;/a&gt; making rounds on Twitter - talking about performance benefits of replacing plain JavaScript in the core of &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; library with a Rust compiled to WebAssembly.&lt;/p&gt;
&lt;p&gt;This post piqued my interest, not because I am a huge on either Rust or WASM, but rather because I am always curious about language features and optimizations missing in pure JavaScript to achieve similar performance characteristics.&lt;/p&gt;
&lt;p&gt;So I checked out the library from GitHub and departed on a small performance investigation, which I am documenting here almost verbatim.&lt;/p&gt;

&lt;p&gt;For my investigations I was using an &lt;em&gt;almost&lt;/em&gt; default x64.release build of the V8 at commit &lt;a href=&quot;https://chromium.googlesource.com/v8/v8/+/69abb960c97606df99408e6869d66e014aa0fb51&quot;&gt;69abb960c97606df99408e6869d66e014aa0fb51&lt;/a&gt; from January 20th. My only deparature from default configuration is that I enable disassembler via GN flags to be able to dive down to generated machine code if needed.&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/v8/v8 ‹master›
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; gn args out.gn/x64.release &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--short&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--overrides-only&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;is_debug = false
target_cpu = &quot;x64&quot;
use_goma = true
v8_enable_disassembler = true
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then I got a checkouts of &lt;a href=&quot;https://github.com/mozilla/source-map&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt;&lt;/a&gt; package at:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/source-map/commit/c97d38b70de088d87b051f81b95c138a74032a43&quot;&gt;commit c97d38b&lt;/a&gt;, which was the last commit that updated &lt;code class=&quot;highlighter-rouge&quot;&gt;dist/source-map.js&lt;/code&gt; before Rust/WASM started landed;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/source-map/commit/51cf7708dd70d067dfe04ce36d546f3262b48da3&quot;&gt;commit 51cf770&lt;/a&gt; which was the most recent commit, when I did my investigation;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;TODO: add note about commit &lt;a href=&quot;https://github.com/mozilla/source-map/commit/264fcb4331d75e1b6a41f75fd6c601af61870536&quot;&gt;commit 264fcb4&lt;/a&gt; which was the last commit before Rust/WASM stuff landing;&lt;/p&gt;

&lt;p&gt;Running benchmark in the pure-JS version was rather simple:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹ c97d38b›
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; d8 bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
console.timeEnd: iteration, 4655.638000
console.timeEnd: iteration, 4751.122000
console.timeEnd: iteration, 4820.566000
console.timeEnd: iteration, 4996.942000
console.timeEnd: iteration, 4644.619000
[Stats samples: 5, total: 23868 ms, mean: 4773.6 ms, stddev: 161.22112144505135 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The first thing that I did was to disabled the serialization part of the benchmark:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/bench/bench-shell-bindings.js b/bench/bench-shell-bindings.js
index 811df40..c97d38b 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/bench/bench-shell-bindings.js
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/bench/bench-shell-bindings.js
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -19,5 +19,5 @@ load(&quot;./bench.js&quot;);
&lt;/span&gt; print(&quot;Parsing source map&quot;);
 print(benchmarkParseSourceMap());
 print();
&lt;span class=&quot;gd&quot;&gt;-print(&quot;Serializing source map&quot;);
-print(benchmarkSerializeSourceMap());
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+// print(&quot;Serializing source map&quot;);
+// print(benchmarkSerializeSourceMap());
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And then threw it into the Linux &lt;code class=&quot;highlighter-rouge&quot;&gt;perf&lt;/code&gt; profiler:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹perf-work›
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; perf record &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; d8 &lt;span class=&quot;nt&quot;&gt;--perf-basic-prof&lt;/span&gt; bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
console.timeEnd: iteration, 4984.464000
^C[ perf record: Woken up 90 times to write data ]
[ perf record: Captured and wrote 24.659 MB perf.data (~1077375 samples) ]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Notice that I am passing &lt;code class=&quot;highlighter-rouge&quot;&gt;--perf-basic-prof&lt;/code&gt; flag to the &lt;code class=&quot;highlighter-rouge&quot;&gt;d8&lt;/code&gt; binary which instructs V8 to generate an auxiliary mappings file &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/perf-$pid.map&lt;/code&gt;. This file allows &lt;code class=&quot;highlighter-rouge&quot;&gt;perf report&lt;/code&gt; to understand JIT generated machine code.&lt;/p&gt;
&lt;p&gt;Here is what we get from &lt;code class=&quot;highlighter-rouge&quot;&gt;perf report --no-children&lt;/code&gt; after zooming on the main execution thread:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Overhead  Symbol
  17.02%  *doQuickSort ../dist/source-map.js:2752
  11.20%  Builtin:ArgumentsAdaptorTrampoline
   7.17%  *compareByOriginalPositions ../dist/source-map.js:1024
   4.49%  Builtin:CallFunction_ReceiverIsNullOrUndefined
   3.58%  *compareByGeneratedPositionsDeflated ../dist/source-map.js:1063
   2.73%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   2.11%  Builtin:StringEqual
   1.93%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   1.66%  *doQuickSort ../dist/source-map.js:2752
   1.25%  v8::internal::StringTable::LookupStringIfExists_NoAllocate
   1.22%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   1.21%  Builtin:StringCharAt
   1.16%  Builtin:Call_ReceiverIsNullOrUndefined
   1.14%  v8::internal::(anonymous namespace)::StringTableNoAllocateKey::IsMatch
   0.90%  Builtin:StringPrototypeSlice
   0.86%  Builtin:KeyedLoadIC_Megamorphic
   0.82%  v8::internal::(anonymous namespace)::MakeStringThin
   0.80%  v8::internal::(anonymous namespace)::CopyObjectToObjectElements
   0.76%  v8::internal::Scavenger::ScavengeObject
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;   0.72%  v8::internal::String::VisitFlat&amp;lt;v8::internal::IteratingStringHasher&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   0.68%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   0.64%  *doQuickSort ../dist/source-map.js:2752
   0.56%  v8::internal::IncrementalMarking::RecordWriteSlow
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Just like original post has stated the benchmark indeed is heavy on sort: &lt;code class=&quot;highlighter-rouge&quot;&gt;doQuickSort&lt;/code&gt; appaers at the top of the profile and also few times down the list (most likely it was optimized several times).&lt;/p&gt;

&lt;p&gt;There are also some suspicious overheads, namely &lt;code class=&quot;highlighter-rouge&quot;&gt;Builtin:ArgumentsAdaptorTrampoline&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Builtin:CallFunction_ReceiverIsNullOrUndefined&lt;/code&gt; which seem to be part of V8 implementation. If we ask &lt;code class=&quot;highlighter-rouge&quot;&gt;perf report&lt;/code&gt; to expand call chains then we will notice that these functions are also mostly invoked from the sorting code:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;- Builtin:ArgumentsAdaptorTrampoline
  + 96.87% *doQuickSort ../dist/source-map.js:2752
  +  1.22% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
  +  0.68% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
  +  0.68% Builtin:InterpreterEntryTrampoline
  +  0.55% *doQuickSort ../dist/source-map.js:2752

- Builtin:CallFunction_ReceiverIsNullOrUndefined
  + 93.88% *doQuickSort ../dist/source-map.js:2752
  +  2.24% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
  +  2.01% Builtin:InterpreterEntryTrampoline
  +  1.49% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It is time to look at the code. Quicksort implementation itself lives in &lt;a href=&quot;https://github.com/mozilla/source-map/blob/c97d38b70de088d87b051f81b95c138a74032a43/lib/quick-sort.js&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lib/quite-sort.js&lt;/code&gt;&lt;/a&gt; and it is invoked from parsing code in &lt;a href=&quot;https://github.com/mozilla/source-map/blob/c97d38b70de088d87b051f81b95c138a74032a43/lib/source-map-consumer.js#L564-L568&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lib/source-map-consumer.js&lt;/code&gt;&lt;/a&gt;. Comparison functions used for sorting are &lt;a href=&quot;https://github.com/mozilla/source-map/blob/c97d38b70de088d87b051f81b95c138a74032a43/lib/util.js#L334-L343&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;compareByGeneratedPositionsDeflated&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/mozilla/source-map/blob/c97d38b70de088d87b051f81b95c138a74032a43/lib/util.js#L296-L304&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;compareByOriginalPositions&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Looking at the definition of the comparison function and how they are invoked from quick sort implementation reveals that the invocation site has mismatching arity:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compareByOriginalPositions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareOriginal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compareByGeneratedPositionsDeflated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pivot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Grepping through library sources reveals that outside of tests &lt;code class=&quot;highlighter-rouge&quot;&gt;quickSort&lt;/code&gt; is only ever called with these two functions.&lt;/p&gt;
&lt;p&gt;What if we fix the invocation arity?&lt;/p&gt;
&lt;div class=&quot;language-diff highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/dist/source-map.js b/dist/source-map.js
index ade5bb2..2d39b28 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/dist/source-map.js
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/dist/source-map.js
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -2779,7 +2779,7 @@ return /******/ (function(modules) { // webpackBootstrap
&lt;/span&gt;            //
            //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
            for (var j = p; j &amp;lt; r; j++) {
&lt;span class=&quot;gd&quot;&gt;-             if (comparator(ary[j], pivot) &amp;lt;= 0) {
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+             if (comparator(ary[j], pivot, false) &amp;lt;= 0) {
&lt;/span&gt;                i += 1;
                swap(ary, i, j);
              }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;[Note: I am doing edits directly in &lt;code class=&quot;highlighter-rouge&quot;&gt;dist/source-map.js&lt;/code&gt; because I did not want to spend time figuring out the build process]&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹perf-work› [Fix comparator invocation arity]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; d8 bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
console.timeEnd: iteration, 4037.084000
console.timeEnd: iteration, 4249.258000
console.timeEnd: iteration, 4241.165000
console.timeEnd: iteration, 3936.664000
console.timeEnd: iteration, 4131.844000
console.timeEnd: iteration, 4140.963000
[Stats samples: 6, total: 24737 ms, mean: 4122.833333333333 ms, stddev: 132.18789657150916 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So just by fixing the arity mismatch we improved benchmark mean from 4774 ms to 4123 ms (by 14%). If we profile the benchmark again we will discover that &lt;code class=&quot;highlighter-rouge&quot;&gt;ArgumentsAdaptorTrampoline&lt;/code&gt; has completely disappeared from it. What was that about?&lt;/p&gt;
&lt;p&gt;It turns out that &lt;code class=&quot;highlighter-rouge&quot;&gt;ArgumentsAdaptorTrampoline&lt;/code&gt; is V8 mechanism for coping with JavaScript’s variadic calling convention: e.g. you can call function that has 3 parameters with 2 arguments - in which case the third parameter will be filled with &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;. V8 does this by creating a new frame on the stack, copying arguments down and then invoking the target function:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/argument-adaptation.png&quot; alt=&quot;Argument adaptation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;[If you have never heard about &lt;em&gt;execution stack&lt;/em&gt;, checkout out &lt;a href=&quot;https://en.wikipedia.org/wiki/Call_stack&quot;&gt;Wikipedia&lt;/a&gt; and Franziska Hinkelmann &lt;a href=&quot;https://fhinkel.rocks/2017/10/30/Confused-about-Stack-and-Heap/&quot;&gt;blog post&lt;/a&gt;.]&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;While such costs might be negligable for cold code, in the sort code &lt;code class=&quot;highlighter-rouge&quot;&gt;comparator&lt;/code&gt; was invocated millions of times which made overheads of arguments adaptation quite pronounced.&lt;/p&gt;
&lt;p&gt;An attentive reader would also notice that we are now explicitly passing boolean value &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; where previously an implicit &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; was used. This does seem to contribute a bit to the performance improvement. If we replace &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;void 0&lt;/code&gt; we would get slightly worse numbers:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/dist/source-map.js b/dist/source-map.js
index 2d39b28..243b2ef 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/dist/source-map.js
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/dist/source-map.js
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -2779,7 +2779,7 @@ return /******/ (function(modules) { // webpackBootstrap
&lt;/span&gt;            //
            //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
            for (var j = p; j &amp;lt; r; j++) {
&lt;span class=&quot;gd&quot;&gt;-             if (comparator(ary[j], pivot, false) &amp;lt;= 0) {
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+             if (comparator(ary[j], pivot, void 0) &amp;lt;= 0) {
&lt;/span&gt;                i += 1;
                swap(ary, i, j);
              }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹perf-work U› [Fix comparator invocation arity]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; ~/src/v8/v8/out.gn/x64.release/d8 bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
console.timeEnd: iteration, 4215.623000
console.timeEnd: iteration, 4247.643000
console.timeEnd: iteration, 4425.871000
console.timeEnd: iteration, 4167.691000
console.timeEnd: iteration, 4343.613000
console.timeEnd: iteration, 4209.427000
[Stats samples: 6, total: 25610 ms, mean: 4268.333333333333 ms, stddev: 106.38947316346669 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For what it is worth argument adapation overhead seems to be highly V8 specific. When I benchmark my change against SpiderMonkey (which is now easy to install thanks to Mathias Bynens &lt;a href=&quot;https://github.com/GoogleChromeLabs/jsvu&quot;&gt;jsvu&lt;/a&gt; tool), I don’t see any significant performance improvement from matching the arity:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹ d052ea4› [Disabled serialization part of the benchmark]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; sm bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
[Stats samples: 8, total: 24751 ms, mean: 3093.875 ms, stddev: 327.27966571700836 ms]
╭─ ~/src/source-map/bench ‹perf-work› [Fix comparator invocation arity]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; sm bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
[Stats samples: 8, total: 25397 ms, mean: 3174.625 ms, stddev: 360.4636187025859 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;small&gt;[Also SpiderMonkey seems to be doing the whole thing faster.]&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Lets get back to the sorting code. If we profile the benchmark again we will notice that while &lt;code class=&quot;highlighter-rouge&quot;&gt;ArgumentsAdaptorTrampoline&lt;/code&gt; is gone for good from the profile &lt;code class=&quot;highlighter-rouge&quot;&gt;CallFunction_ReceiverIsNullOrUndefined&lt;/code&gt; is still there. This is not surprising given that we are still calling the &lt;code class=&quot;highlighter-rouge&quot;&gt;comparator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What usually performs better than calling the function? The obvious option is to try to get the comparator inlined into the &lt;code class=&quot;highlighter-rouge&quot;&gt;doQuickSort&lt;/code&gt;. However the fact that &lt;code class=&quot;highlighter-rouge&quot;&gt;doQuickSort&lt;/code&gt; is called with different &lt;code class=&quot;highlighter-rouge&quot;&gt;comparator&lt;/code&gt; functions stands on the way of inlining.&lt;/p&gt;
&lt;p&gt;To work around this we can try to monomorphise &lt;code class=&quot;highlighter-rouge&quot;&gt;doQuickSort&lt;/code&gt; by cloning it. Here is how we do it.&lt;/p&gt;
&lt;p&gt;We start by wrapping &lt;code class=&quot;highlighter-rouge&quot;&gt;doQuickSort&lt;/code&gt; and other helpers into &lt;code class=&quot;highlighter-rouge&quot;&gt;SortTemplate&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SortTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomIntInRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then we can produce clones of our sorting routines by converting &lt;code class=&quot;highlighter-rouge&quot;&gt;SortTemplate&lt;/code&gt; into a string and then parsing it back into a function via &lt;code class=&quot;highlighter-rouge&quot;&gt;Function&lt;/code&gt; constructor:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloneSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SortTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templateFn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templateFn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Invoke template to get doQuickSort&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;cloneSort&lt;/code&gt; to produce a sort function for each comparator we are using:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortCache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;WeakMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Cache for specialized sorts.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quickSort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloneSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sortCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;doQuickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Rerunning benchmark yields:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹perf-work› [Clone sorting functions for each comparator]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; d8 bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
console.timeEnd: iteration, 2955.199000
console.timeEnd: iteration, 3084.979000
console.timeEnd: iteration, 3193.134000
console.timeEnd: iteration, 3480.459000
console.timeEnd: iteration, 3115.011000
console.timeEnd: iteration, 3216.344000
console.timeEnd: iteration, 3343.459000
console.timeEnd: iteration, 3036.211000
[Stats samples: 8, total: 25423 ms, mean: 3177.875 ms, stddev: 181.87633161024556 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We can see that the mean time went from 4268 ms to 3177 ms (25% improvent).&lt;/p&gt;
&lt;p&gt;Profiling reveals the following picture:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt; Overhead Symbol
   14.95% *doQuickSort :44
   11.49% *doQuickSort :44
    3.29% Builtin:StringEqual
    3.13% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
    1.86% v8::internal::StringTable::LookupStringIfExists_NoAllocate
    1.86% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
    1.72% Builtin:StringCharAt
    1.67% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
    1.61% v8::internal::Scavenger::ScavengeObject
    1.45% v8::internal::(anonymous namespace)::StringTableNoAllocateKey::IsMatch
    1.23% Builtin:StringPrototypeSlice
    1.17% v8::internal::(anonymous namespace)::MakeStringThin
    1.08% Builtin:KeyedLoadIC_Megamorphic
    1.05% v8::internal::(anonymous namespace)::CopyObjectToObjectElements
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;    0.99% v8::internal::String::VisitFlat&amp;lt;v8::internal::IteratingStringHasher&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    0.86% clear_page_c_e
    0.77% v8::internal::IncrementalMarking::RecordWriteSlow
    0.48% Builtin:MathRandom
    0.41% Builtin:RecordWrite
    0.39% Builtin:KeyedLoadIC
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Stuff related to invoking &lt;code class=&quot;highlighter-rouge&quot;&gt;comparator&lt;/code&gt; is not completely out of the profile.&lt;/p&gt;
&lt;p&gt;At this point I became interested in how much time we spend actually parsing mappings vs. sorting them. I went into the parsing code and added few &lt;code class=&quot;highlighter-rouge&quot;&gt;Date.now()&lt;/code&gt; invocations:&lt;/p&gt;
&lt;p&gt;&lt;small&gt;[I wanted to sprinkle &lt;code class=&quot;highlighter-rouge&quot;&gt;performance.now()&lt;/code&gt; but SpiderMonkey shell apparently does not support it.]&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;language-diff highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/dist/source-map.js b/dist/source-map.js
index 75ebbdf..7312058 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/dist/source-map.js
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/dist/source-map.js
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -1906,6 +1906,8 @@ return /******/ (function(modules) { // webpackBootstrap
&lt;/span&gt;            var generatedMappings = [];
            var mapping, str, segment, end, value;

&lt;span class=&quot;gi&quot;&gt;+
+      var startParsing = Date.now();
&lt;/span&gt;            while (index &amp;lt; length) {
              if (aStr.charAt(index) === ';') {
                generatedLine++;
&lt;span class=&quot;gu&quot;&gt;@@ -1986,12 +1988,20 @@ return /******/ (function(modules) { // webpackBootstrap
&lt;/span&gt;                }
              }
            }
&lt;span class=&quot;gi&quot;&gt;+      var endParsing = Date.now();
&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+      var startSortGenerated = Date.now();
&lt;/span&gt;            quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
            this.__generatedMappings = generatedMappings;
&lt;span class=&quot;gi&quot;&gt;+      var endSortGenerated = Date.now();
&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+      var startSortOriginal = Date.now();
&lt;/span&gt;            quickSort(originalMappings, util.compareByOriginalPositions);
            this.__originalMappings = originalMappings;
&lt;span class=&quot;gi&quot;&gt;+      var endSortOriginal = Date.now();
+
+      console.log(`${}, ${endSortGenerated - startSortGenerated}, ${endSortOriginal - startSortOriginal}`);
+      console.log(`sortGenerated: `);
+      console.log(`sortOriginal:  `);
&lt;/span&gt;          };
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This yielded:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/source-map/bench ‹perf-work U› [Clone sorting functions for each comparator]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; d8 bench-shell-bindings.js
&lt;span class=&quot;go&quot;&gt;Parsing source map
parse:         1911.846
sortGenerated: 619.5990000000002
sortOriginal:  905.8220000000001
parse:         1965.4820000000004
sortGenerated: 602.1939999999995
sortOriginal:  896.3589999999995
^C
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here is how parsing and sorting times look like in V8 and SpiderMonkey per benchmark iteration run:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-0.png&quot; alt=&quot;Parse and Sort times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In V8 we seem to be spending roughly as much time parsing mappings as then sorting them. In SpiderMonkey parsing is considerably faster - while sorting is slower. This prompted me to start looking at the parsing code.&lt;/p&gt;

&lt;p&gt;Lets take a look at the profile again&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Overhead  Symbol
  18.23%  *doQuickSort :44
  12.36%  *doQuickSort :44
   3.84%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   3.07%  Builtin:StringEqual
   1.92%  v8::internal::StringTable::LookupStringIfExists_NoAllocate
   1.85%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   1.59%  *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
   1.54%  Builtin:StringCharAt
   1.52%  v8::internal::(anonymous namespace)::StringTableNoAllocateKey::IsMatch
   1.38%  v8::internal::Scavenger::ScavengeObject
   1.27%  Builtin:KeyedLoadIC_Megamorphic
   1.22%  Builtin:StringPrototypeSlice
   1.10%  v8::internal::(anonymous namespace)::MakeStringThin
   1.05%  v8::internal::(anonymous namespace)::CopyObjectToObjectElements
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;   1.03%  v8::internal::String::VisitFlat&amp;lt;v8::internal::IteratingStringHasher&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   0.88%  clear_page_c_e
   0.51%  Builtin:MathRandom
   0.48%  Builtin:KeyedLoadIC
   0.46%  v8::internal::IteratingStringHasher::Hash
   0.41%  Builtin:RecordWrite
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Removing our JavaScript code leaves us with the following:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Overhead  Symbol
   3.07%  Builtin:StringEqual
   1.92%  v8::internal::StringTable::LookupStringIfExists_NoAllocate
   1.54%  Builtin:StringCharAt
   1.52%  v8::internal::(anonymous namespace)::StringTableNoAllocateKey::IsMatch
   1.38%  v8::internal::Scavenger::ScavengeObject
   1.27%  Builtin:KeyedLoadIC_Megamorphic
   1.22%  Builtin:StringPrototypeSlice
   1.10%  v8::internal::(anonymous namespace)::MakeStringThin
   1.05%  v8::internal::(anonymous namespace)::CopyObjectToObjectElements
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;   1.03%  v8::internal::String::VisitFlat&amp;lt;v8::internal::IteratingStringHasher&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   0.88%  clear_page_c_e
   0.51%  Builtin:MathRandom
   0.48%  Builtin:KeyedLoadIC
   0.46%  v8::internal::IteratingStringHasher::Hash
   0.41%  Builtin:RecordWrite
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When I started looking at call chains for individual entries I discovered that many of them go through &lt;code class=&quot;highlighter-rouge&quot;&gt;KeyedLoadIC_Megamorphic&lt;/code&gt; into &lt;code class=&quot;highlighter-rouge&quot;&gt;SourceMapConsumer_parseMappings&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;-    1.92% v8::internal::StringTable::LookupStringIfExists_NoAllocate
   - v8::internal::StringTable::LookupStringIfExists_NoAllocate
      + 99.80% Builtin:KeyedLoadIC_Megamorphic

-    1.52% v8::internal::(anonymous namespace)::StringTableNoAllocateKey::IsMatch
   - v8::internal::(anonymous namespace)::StringTableNoAllocateKey::IsMatch
      - 98.32% v8::internal::StringTable::LookupStringIfExists_NoAllocate
         + Builtin:KeyedLoadIC_Megamorphic
      + 1.68% Builtin:KeyedLoadIC_Megamorphic

-    1.27% Builtin:KeyedLoadIC_Megamorphic
   - Builtin:KeyedLoadIC_Megamorphic
      + 57.65% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
      + 22.62% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
      + 15.91% *SourceMapConsumer_parseMappings ../dist/source-map.js:1894
      + 2.46% Builtin:InterpreterEntryTrampoline
      + 0.61% BytecodeHandler:Mul
      + 0.57% *doQuickSort :44

-    1.10% v8::internal::(anonymous namespace)::MakeStringThin
   - v8::internal::(anonymous namespace)::MakeStringThin
      - 94.72% v8::internal::StringTable::LookupStringIfExists_NoAllocate
         + Builtin:KeyedLoadIC_Megamorphic
      + 3.63% Builtin:KeyedLoadIC_Megamorphic
      + 1.66% v8::internal::StringTable::LookupString
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This sort of call stacks indicated to me that code is performing a lot of keyed lookups of form &lt;code class=&quot;highlighter-rouge&quot;&gt;obj[key]&lt;/code&gt; where &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; is dynamically built string. When I looked at the parsing I discovered &lt;a href=&quot;https://github.com/mozilla/source-map/blob/693728299cf87d1482e4c37ae90f5bce8edf899f/lib/source-map-consumer.js#L496-L529&quot;&gt;the following code&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Because each offset is encoded relative to the previous one,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// many segments often have the same encoding. We can exploit this&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// fact by caching the parsed variable length fields of each segment,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// allowing us to avoid a second parse if we encounter the same&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// segment again.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_charIsMappingSeparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;base64VLQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This code is responsible for decoding Base64 VLQ encoded sequences, e.g. string &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; would be decoded as &lt;code class=&quot;highlighter-rouge&quot;&gt;[0]&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;UAAAA&lt;/code&gt; gets decoded as &lt;code class=&quot;highlighter-rouge&quot;&gt;[10,0,0,0,0]&lt;/code&gt;. I suggest checking &lt;a href=&quot;https://blogs.msdn.microsoft.com/davidni/2016/03/14/source-maps-under-the-hood-vlq-base64-and-yoda/&quot;&gt;this blog post&lt;/a&gt; about source maps internals if you would like to understand the encoding itself better.&lt;/p&gt;
&lt;p&gt;Instead of decoding each sequence independently, the code attempts to cache decoded segments: it scans forward until a separator (&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;) is found, then extracts substring from the current position to the separator and checks if we have previous decoded such segment by looking up the extracted substring in a cache - if we hit the cache we return cached segment, otherwise we parse and cache the segment in the cache.&lt;/p&gt;
&lt;p&gt;Caching (aka memoization) is very powerful optimization technique - however it only makes sense when maintaining the cache itself and looking up cached results is cheaper than performing computation itself again.&lt;/p&gt;
&lt;h2 id=&quot;abstract-analysis&quot;&gt;Abstract Analysis&lt;/h2&gt;
&lt;p&gt;Lets try to compare these two operations abstractly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On one hand is pure parsing:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Parsing segment looks at each character of a segment once. For each character it performs few comparisons and arithmetic operations to convert a base64 character into an integer value it represents. Then it performs few bitwise operations to incorporate this integer value into a larger integer value. Then it stores decoded value into an array and moves to the next part of the segment. Segments are limited to 5 elements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On the other hand caching:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;To look up a cached value we traverse all the characters of the segment once to find its end;&lt;/li&gt;
&lt;li&gt;We extract the substring, which requires allocation and potentially copying depending on how strings are implemented in a concrete JS VM;&lt;/li&gt;
&lt;li&gt;We use this string as a key in a dictionary, which:
&lt;ol&gt;&lt;li&gt;first requires VM to compute hash for this string (traversing it again and performing various bitwise operations on individual characters), this might also require VM to internalize the string (depending on implementation);&lt;/li&gt;
&lt;li&gt;then VM has to perform a hash table lookup, which requires probing and comparing key by value with other keys (which might require it again to look at individual characters in a string);&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Overall it seems that direct parsing should be faster, assuming that JS VM does good job with individual arithmetic/bitwise operations, simply because it looks at each individual character only once, where caching requires traversing the segment 2-4 times just to establish whether we hit the cache or not.&lt;/p&gt;
&lt;p&gt;Profile seems to confirm this too: &lt;code class=&quot;highlighter-rouge&quot;&gt;KeyedLoadIC_Megamorphic&lt;/code&gt; is a stub used by V8 to implement keyed lookups like &lt;code class=&quot;highlighter-rouge&quot;&gt;cachedSegments[str]&lt;/code&gt; in the code above.&lt;/p&gt;
&lt;p&gt;Based on these observations I set out to do few experiments. First I checked how big &lt;code class=&quot;highlighter-rouge&quot;&gt;cachedSegments&lt;/code&gt; is at the end of the parsing. The smaller it is the more effecient caching would be as an optimization.&lt;/p&gt;
&lt;p&gt;Turns out is was not that small:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Object.keys(cachedSegments).length = 155478
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;standalone-microbenchmarks&quot;&gt;Standalone Microbenchmarks&lt;/h2&gt;
&lt;p&gt;Now I decided to write a small standalone benchmark:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;24&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;43&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Generate a string with [n] segments, segments repeat in a cycle of length&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [v] i.e. segments number 0, v, 2*v, ... are all equal and so are&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1, 1 + v, 1 + 2*v, ...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Use [base] as a base value in a segment - this parameter allows to make&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// segments long.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Note: the bigger [v], the bigger [cachedSegments] cache is.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base64VLQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;';'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;';'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Run function [f] against the string [str].&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bench&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Measure and report performance of [f] against [str].&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// It has [v] different segments.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;bench&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;measureAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Make a string with 1000 total segments and [v] different ones&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// so that [cachedSegments] has [v] cached segments.&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Run 10 iterations for each way of decoding.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeCached&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeNoCaching&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeNoCachingNoStrings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeNoCachingNoStringsPreEncoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There are three different ways to decode Base64 VLQ segments that I tried against each other.&lt;/p&gt;
&lt;p&gt;The first one &lt;code class=&quot;highlighter-rouge&quot;&gt;decodeCached&lt;/code&gt; is exactly the same as default implementation used by &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; - which I already provided above:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;14&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;23&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeCached&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base64VLQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Because each offset is encoded relative to the previous one,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// many segments often have the same encoding. We can exploit this&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// fact by caching the parsed variable length fields of each segment,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// allowing us to avoid a second parse if we encounter the same&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// segment again.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_charIsMappingSeparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Found a source, but no line and column'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Found a source and line, but no column'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The next competitor is &lt;code class=&quot;highlighter-rouge&quot;&gt;decodeNoCaching&lt;/code&gt;. It’s essentially &lt;code class=&quot;highlighter-rouge&quot;&gt;decodeCached&lt;/code&gt; but without the cache. Each segment it decoded independently. I also replaced &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;Int32Array&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;segment&lt;/code&gt; storage.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;12.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeNoCaching&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base64VLQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Int32Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_charIsMappingSeparator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Too many segments'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Found a source, but no line and column'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Found a source and line, but no column'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Finally the third variant &lt;code class=&quot;highlighter-rouge&quot;&gt;decodeNoCachingNoString&lt;/code&gt; tries to avoid dealing with JavaScript strings altogether by converting the string into utf8 encoded &lt;code class=&quot;highlighter-rouge&quot;&gt;Uint8Array&lt;/code&gt;. This optimization is inspired by the fact that due to the sheer complexity of the hierarchy of different string representations JS VMs sometimes fail to (or can’t) optimize &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; down to a single memory load.&lt;/p&gt;
&lt;p&gt;I benchmark both a version that encodes string into utf8 as part of the iteration and a version that uses preencoded string. This version tries to estimate how much you can gain if you are able to skip &lt;em&gt;typed array&lt;/em&gt; to &lt;em&gt;string&lt;/em&gt; to &lt;em&gt;typed array&lt;/em&gt; roundtrip e.g. if you load your source map directly as an array buffer it might be better to parse it dirrectly from that buffer instead of converting it to string first.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TextEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeNoCachingNoString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;decodeNoCachingNoStringPreEncoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeNoCachingNoStringPreEncoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cachedSegments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decode2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base64VLQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Int32Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;decode2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;segment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Found a source, but no line and column'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Found a source and line, but no column'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And here are the results I got by running my microbenchmark in Chrome Dev &lt;code class=&quot;highlighter-rouge&quot;&gt;66.0.3343.3&lt;/code&gt; (V8 &lt;code class=&quot;highlighter-rouge&quot;&gt;6.6.189&lt;/code&gt;) and Firefox Nightly &lt;code class=&quot;highlighter-rouge&quot;&gt;60.0a1 (2018-02-11)&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/different-decodes.png&quot; alt=&quot;Different Decodes&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There are few things to notice here:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the version that uses caching is slower than anything else on both V8 and SpiderMonkey. Its performance degrades steeply as number of cache entries growth - while performance of non-caching versions does not depend on that;&lt;/li&gt;
&lt;li&gt;on SpiderMonkey it pays off to convert string into typed array as part of parsing, while on V8 character access is fast enough - so it only pays off to use array if you can move string-to-array convertion out of benchmark (e.g. you load your data into typed arrays to begin with);&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I was curious if V8 team did any active work recently to improve &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; performance - because I remembered rather vividly that for example Crankshaft never made an effort to specialize &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; for a particular string representation at a call-site and instead expanded &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; into a large chunk of code handling many different string representations, which made loading characters from strings slower than loading elements from typed arrays.&lt;/p&gt;
&lt;p&gt;I trawled V8 issue tracker and found few issues like:&lt;/p&gt;
&lt;p&gt;All of them actively being worked on, some updates linking to commits from late January 2018 and onward. Out of curiousity I decided to rerun my microbenchmark in Chrome Beta and compare against Chrome Dev&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/different-decodes-v8s.png&quot; alt=&quot;Different Decodes&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This comparison indeed shows that all those commits by the V8 team were not for nothing: performance of &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; improved drastically from version &lt;code class=&quot;highlighter-rouge&quot;&gt;6.5.254.21&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;6.6.189&lt;/code&gt;. Comparing “no cache” and “using array” lines we can see that in an older V8 &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; behaved so much worse that it made total sense to put an additional overhead and convert the string into &lt;code class=&quot;highlighter-rouge&quot;&gt;Uint8Array&lt;/code&gt; just to access it faster. This does not pay off anymore.&lt;/p&gt;
&lt;p&gt;However it still pays off to use an array as long as you don’t have to pay the convertion cost. Why is that? To figure that out I run the following code in tip-of-the tree V8:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fisk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OptimizeFunctionOnNextCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;go&quot;&gt;╭─ ~/src/v8/v8 ‹master›
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;╰─$&lt;/span&gt; out.gn/x64.release/d8 &lt;span class=&quot;nt&quot;&gt;--allow-natives-syntax&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--print-opt-code&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--code-comments&lt;/span&gt; x.js
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The command produced a rather &lt;a href=&quot;https://gist.github.com/mraleph/a1f36a67676a8dfef0af081f27f3eb6a&quot;&gt;gigantic assembly listing&lt;/a&gt; confirming my suspicion that V8 still does not specialize &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt; for a particular string representation. This lowering seems to come from &lt;a href=&quot;https://github.com/v8/v8/blob/de7a3174282a48fab9c167155ffc8ff20c37214d/src/compiler/effect-control-linearizer.cc#L2687-L2826&quot;&gt;this code&lt;/a&gt; in V8 sources, which resolves the mystery of why array access is faster than string &lt;code class=&quot;highlighter-rouge&quot;&gt;charCodeAt&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;parsing-improvements&quot;&gt;Parsing Improvements&lt;/h2&gt;
&lt;p&gt;In light of these lets remove caching of parsed segments from &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; parsing code and measure the effect.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-1.png&quot; alt=&quot;Parse and Sort times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Just like our microbenchmarking predicted caching was detrimental to the overall performance rather than being beneficial: removing it actually improves parsing times considerably.&lt;/p&gt;

&lt;p&gt;Now that we improved parsing time lets take a look at sorting again.&lt;/p&gt;
&lt;p&gt;There are two arrays that are being sorted: &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; array is being sorted using &lt;code class=&quot;highlighter-rouge&quot;&gt;compareByOriginalPositions&lt;/code&gt; comparator and &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; array is being sorted using &lt;code class=&quot;highlighter-rouge&quot;&gt;compareByGeneratedPositionsDeflated&lt;/code&gt; comparator.&lt;/p&gt;
&lt;h2 id=&quot;optimizing-originalmappings-sorting&quot;&gt;Optimizing &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; Sorting&lt;/h2&gt;
&lt;p&gt;I took at look at &lt;code class=&quot;highlighter-rouge&quot;&gt;compareByOriginalPositions&lt;/code&gt; first.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compareByOriginalPositions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareOriginal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalColumn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalColumn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareOriginal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedColumn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedColumn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here I noticed that mappings are being ordered by &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; component first and then by all other components. &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; specifies which source file the mapping originally came from. An obvious idea here is that instead of using a flat gigantic &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; array that mixes together mappings from different source files, we can turn &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; into array of arrays: &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings[i]&lt;/code&gt; being an array of mappings from source file with index &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;. This way we can sort mappings into different &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings[i]&lt;/code&gt; arrays based on their source as we parse them and then sort individual smaller arrays.&lt;/p&gt;
&lt;p&gt;Here is what we do in parsing loop:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'number'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// This code used to just do: originalMappings.push(mapping).&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Now it sorts original mappings already by source during parsing.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And then after that:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startSortOriginal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The code used to sort the whole array:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     quickSort(originalMappings, util.compareByOriginalPositions);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareByOriginalPositionsNoSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endSortOriginal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;compareByOriginalPositionsNoSource&lt;/code&gt; comparator is almost exactly the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;compareByOriginalPositions&lt;/code&gt; comparator except it does not compare &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; component anymore - those are guaranteed to be equal due to the way we constructed each &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings[i]&lt;/code&gt; array.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-2.png&quot; alt=&quot;Parse and Sort times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This algorithmic change improves sorting times on both V8 and SpiderMonkey and additionally improves parsing times on V8. Parse time improvement is likely due to the reduction of cost associated with managing &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; array: growing gigantic &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; array is more expensive than growing multiple smaller mappings arrays.&lt;/p&gt;
&lt;h2 id=&quot;optimizing-generatedmappings-sorting&quot;&gt;Optimizing &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; Sorting&lt;/h2&gt;
&lt;p&gt;Let us take a look at &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;compareByGeneratedPositionsDeflated&lt;/code&gt; comparator.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compareByGeneratedPositionsDeflated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedColumn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedColumn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalColumn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalColumn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here we first compare mappings by &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedLine&lt;/code&gt;. There are likely considerably more generated lines than original source files so it might not make sense to split &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; into multiple individual arrays.&lt;/p&gt;
&lt;p&gt;However when I look at the parsing code I notice the following:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;';'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;These are the only occurrences of &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedLine&lt;/code&gt; in this code. This means that &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedLine&lt;/code&gt; is growing monotonically - which implies that &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; array is already ordered by &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedLine&lt;/code&gt; and it does not make sense to sort the array as whole. Instead we can sort each individual smaller subarray. We change the code like this:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subarrayStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;';'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Sort subarray [subarrayStart, generatedMappings.length].&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sortGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subarrayStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;subarrayStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Sort the tail.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sortGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatedMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subarrayStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Instead of using &lt;code class=&quot;highlighter-rouge&quot;&gt;quickSort&lt;/code&gt; for sorting smaller subarrays, I decided to opt in for using insertion sort (similar to a hybrid strategy that some VMs use for &lt;code class=&quot;highlighter-rouge&quot;&gt;Array.prototype.sort&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compareGenerated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareByGeneratedPositionsDeflatedNoLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sortGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compareGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This yields the following result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-3.png&quot; alt=&quot;Parse and Sort times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Sorting times drop drastically, while parsing times slightly increase - that happens because the code sorting &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; as part of the parsing loop, making our breakdown slightly meaningless. Lets check comparison of cumulative timings (parsing and sorting together)&lt;/p&gt;
&lt;h2 id=&quot;improvements-to-total-time&quot;&gt;Improvements to Total Time&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-3-total.png&quot; alt=&quot;Parse and Sort times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Now it becomes obvious that we considerably improved overall mappings parsing performance.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;[An interesting observation to be made here is that if we expect &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; to be almost always sorted after parsing (the mappings file used for &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; benchmark actually has this property) then it would more efficient to simply check whether &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; is sorted before trying to sort it.]&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Is there are anything else we could do to improve performance?&lt;/p&gt;
&lt;p&gt;It turns out yes: we can pull out a page from asm.js / WASM own playbook without going full-Rust on our JavaScript code base.&lt;/p&gt;

&lt;p&gt;We are allocating hundreds of thousands &lt;code class=&quot;highlighter-rouge&quot;&gt;Mapping&lt;/code&gt; objects, which puts considerable pressure on GC - in reality we don’t really need those objects to be objects - we can pack them into a typed array. Here is how I did it.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;[Few years ago I was really excited about &lt;a href=&quot;https://github.com/nikomatsakis/typed-objects-explainer&quot;&gt;Typed Objects&lt;/a&gt; proposal which would allow JavaScript programmers to define structs and arrays of structs and all other amazing things that would come quite handy here. Unfortunately champions working on that proposal moved away to work on other things leaving us with a choice to write these things either manually or in C++ 😞]&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;First of all, I changed &lt;code class=&quot;highlighter-rouge&quot;&gt;Mapping&lt;/code&gt; from a normal object into a wrapper that points into a gigantic typed array that would contain all our mappings.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedColumn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalColumn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedLine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedColumn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalLine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalColumn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then I adjusted the parsing and sorting code to use it like this:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;BasicSourceMapConsumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_parseMappings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aSourceRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Allocate 4 MB memory buffer. This can be proportional to aStr size to&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// save memory for smaller mappings.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Int32Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_allocationFinger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;';'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// All code that could previously access mappings directly now needs to&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// access them indirectly though memory.&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;sortGenerated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generatedMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousGeneratedLineStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_allocateMapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// Arrays of mappings now store &quot;pointers&quot; instead of actual mappings.&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;generatedMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalMappings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareByOriginalPositionsNoSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;BasicSourceMapConsumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_allocateMapping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_allocationFinger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Do we need to grow memory buffer?&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Int32Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_allocationFinger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7fffffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Instead of null use INT32_MAX.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7fffffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Instead of null use INT32_MAX.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareByOriginalPositionsNoSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareOriginal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// originalLine&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// originalColumn&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyCompareOriginal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// generatedColumn&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// generatedLine&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mappingB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see readability does suffer quite a bit. Ideally I would prefer to allocate temporary &lt;code class=&quot;highlighter-rouge&quot;&gt;Mapping&lt;/code&gt; objects and rely on allocation sinking to take care of those objects, but in my experiments SpiderMonkey could not deal with them well enough, that is why I opted for much more verbose and error prone code.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;[This sort of &lt;em&gt;almost&lt;/em&gt; manual memory management might seem rather foreign in JS. That’s why I think it might be worth mentioning here that “oxidized” &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; actually &lt;a href=&quot;https://github.com/mozilla/source-map#sourcemapconsumerprototypedestroy&quot;&gt;requires users to manually manage&lt;/a&gt; its lifetime to ensure that WASM resources are freed]&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Rerunning benchmark confirms that alleviating GC pressure yields a nice improvement&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-4.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-4-total.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Interestingly enough on SpiderMonkey this approach improves both parsing &lt;em&gt;and&lt;/em&gt; sorting times, which came as a surprise to me.&lt;/p&gt;
&lt;h2 id=&quot;spidermonkey-performance-cliff&quot;&gt;SpiderMonkey Performance Cliff&lt;/h2&gt;
&lt;p&gt;As I way playing with this code I also discovered a confusing performance cliff in SpiderMonkey: when I increased the size of preallocated memory buffer to 64MB to gauge reallocation costs, benchmark showed a sudden slow down after 7th iteration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-5-total.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This looked like some sort of polymorphism to me, but I could not immediately figure out how changing the size of an array can result in polymorphic behavior.&lt;/p&gt;
&lt;p&gt;Puzzled I reached out to a SpiderMonkey hacker &lt;a href=&quot;https://twitter.com/jandemooij&quot;&gt;Jan de Mooij&lt;/a&gt; who very &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1437471&quot;&gt;quickly identified&lt;/a&gt; an asm.js related optimization from 2012 as a culprit… then he went and removed it from SpiderMonkey so that nobody hits this confusing cliff again.&lt;/p&gt;

&lt;p&gt;Finally if we start using &lt;code class=&quot;highlighter-rouge&quot;&gt;Uint8Array&lt;/code&gt; instead of string for parsing we get the yet another small improvement.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-6-total.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;[This improvement is predicated on rewriting &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; to parse mappings directly from typed arrays, instead of using JavaScript string and parsing it with &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.decode&lt;/code&gt;. I did not do such rewrite but I don’t anticipate any issues.]&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Here is where we started:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; d8 bench-shell-bindings.js
&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;[Stats samples: 5, total: 24050 ms, mean: 4810 ms, stddev: 155.91063145276527 ms]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sm bench-shell-bindings.js
&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;[Stats samples: 7, total: 22925 ms, mean: 3275 ms, stddev: 269.5999093306804 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and this is where we are finishing&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; d8 bench-shell-bindings.js
&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;[Stats samples: 22, total: 25158 ms, mean: 1143.5454545454545 ms, stddev: 16.59358125226469 ms]
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sm bench-shell-bindings.js
&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;[Stats samples: 31, total: 25247 ms, mean: 814.4193548387096 ms, stddev: 5.591064299397745 ms]
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-final.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-final-total.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This is a factor of 4 improvement!&lt;/p&gt;
&lt;p&gt;It might be also worth noting that we are still sorting all &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt; arrays eagerly even though this is not really needed. There are two operations that use &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allGeneratedPositionsFor&lt;/code&gt; that returns all generated positions for the given line in the original source;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eachMapping(..., ORIGINAL_ORDER)&lt;/code&gt; which iterates over all mappings in their original order.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If we assume that &lt;code class=&quot;highlighter-rouge&quot;&gt;allGeneratedPositionsFor&lt;/code&gt; is the most common operation and that only a handful of &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings[i]&lt;/code&gt; arrays would be queried we can vastly improve parsing time by sorting &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings[i]&lt;/code&gt; arrays lazily whenever we actually need to search one of them.&lt;/p&gt;
&lt;p&gt;Finally a comparison of V8 from Jan 19th to V8 from Feb 19th with and without &lt;a href=&quot;https://github.com/v8/v8/wiki/Untrusted-code-mitigations&quot;&gt;untrusted code mitigations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-sort-v8-vs-v8-total.png&quot; alt=&quot;After reworking allocation&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Following the publication of this post on February 19th, I got few requests to compare &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; with my tweaks against mainline oxidized &lt;code class=&quot;highlighter-rouge&quot;&gt;source-map&lt;/code&gt; that uses Rust and WASM.&lt;/p&gt;
&lt;p&gt;Quick look at Rust source code for &lt;a href=&quot;https://github.com/fitzgen/source-map-mappings/blob/master/src/lib.rs#L499-L566&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;parse_mappings&lt;/code&gt;&lt;/a&gt; revealed that Rust version does not collect or sort original mappings eagerly, only equivalent of &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; is produced and sorted. To match this behavior I adjusted my JS version by commenting out sorting of &lt;code class=&quot;highlighter-rouge&quot;&gt;originalMappings[i]&lt;/code&gt; arrays.&lt;/p&gt;
&lt;p&gt;Here are benchmarks for just parsing (which also includes sorting &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt;) and for parsing and then iterating over all &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-only-rust-wasm-vs-js.png&quot; alt=&quot;Parse only times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://mrale.ph/images/2018-02-03/parse-iterate-rust-wasm-vs-js.png&quot; alt=&quot;Parse and iterate times&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Note that comparison is slightly misleading because Rust version does not optimize sorting of &lt;code class=&quot;highlighter-rouge&quot;&gt;generatedMappings&lt;/code&gt; in the same way as my JS version does.&lt;/p&gt;
&lt;p&gt;Thus I am not gonna declare that &lt;em&gt;«we reached complete parity with Rust+WASM version»&lt;/em&gt;. However at this level of performance differences it might makes sense to reevaluate if it is worth the complexity to use Rust in this module.&lt;/p&gt;

&lt;h2 id=&quot;for-a-javascript-developer&quot;&gt;For a JavaScript Developer&lt;/h2&gt;
&lt;h3 id=&quot;profiler-is-your-friend&quot;&gt;Profiler Is Your Friend&lt;/h3&gt;
&lt;p&gt;Profiling and fine grained performance tracking in various shapes and forms is the best way to stay on top of the performance. It allows you to localize hot-spots in your code and also reveals potential issues in the underlying runtime. For this particular reason don’t shy away from using low-level profiling tools like &lt;code class=&quot;highlighter-rouge&quot;&gt;perf&lt;/code&gt; - “friendly” tools might not be telling you the whole story because they hide lower level.&lt;/p&gt;
&lt;p&gt;Difference performance problems require different approach to profiling and visualizing collected profiles. Make sure to familiarize yourself with a wide spectrum of available tools.&lt;/p&gt;
&lt;h3 id=&quot;algorithms-are-important&quot;&gt;Algorithms Are Important&lt;/h3&gt;
&lt;p&gt;Being able to reason about your code in terms of abstract complexity is an important skill. Is it better to quick-sort one array with 100K elements or quick-sort 3333 30-element subarrays?&lt;/p&gt;
&lt;p&gt;A bit of mathematics can guide us (\(100000 \log 100000\) is 3 times larger than \(3333 \times 30 \log 30\)) - and the larger your data is the more important it usually is to be able to do a tiny bit of mathematics.&lt;/p&gt;
&lt;p&gt;In addition to knowing your logarithms, you need to posses a healthy amount of common sense and be able to evaluate how your code would be used on average and in the worst case: which operations are common, how the cost of expensive operations can be amortized, what the penalty for amortizing expensive operations?&lt;/p&gt;
&lt;h3 id=&quot;vms-are-work-in-progress-bug-developers&quot;&gt;VMs Are Work in Progress. Bug Developers!&lt;/h3&gt;
&lt;p&gt;Do not hesitate to reach out to developers to discuss strange performance issues. Not everything can be solved just by changing your own code. The Russian proverb says &lt;em&gt;«It’s not gods who make pots!»&lt;/em&gt;. VM developers are people and just like all others they make mistakes. They are also quite good at fixing those mistakes once you reach out to them. One mail or chat message or a DM might save you days of digging through foreign C++ code.&lt;/p&gt;
&lt;h3 id=&quot;vms-still-need-a-bit-of-help&quot;&gt;VMs Still Need a Bit of Help&lt;/h3&gt;
&lt;p&gt;Sometimes you need to write low-level code or know low-level details to squeeze the last drops of that performance juice out of JavaScript.&lt;/p&gt;
&lt;p&gt;One could prefer a better language level facilities to achieve that, but it remains to be seen if we ever get there.&lt;/p&gt;
&lt;h2 id=&quot;for-a-language-implementordesigner&quot;&gt;For a Language Implementor/Designer&lt;/h2&gt;
&lt;h3 id=&quot;clever-optimizations-must-be-diagnosable&quot;&gt;Clever Optimizations Must be Diagnosable&lt;/h3&gt;
&lt;p&gt;If you runtime has any sort of clever optimizations built in you need to also provide a straightforward tool to diagnose when these optimization fail and deliver an actionable feedback to the developer.&lt;/p&gt;
&lt;p&gt;In context of languages like JavaScript this at minimum means that tools like profiler should also provide you a way to inspect individual operations to figure out whether VM specializes them well and it it does not - what is the reason for that.&lt;/p&gt;
&lt;p&gt;This sort of introspection should not require building custom versions of the VM with magic flags and then treading should megabytes of undocumented debug output. This sort of tools should be right there, when you open your DevTools window.&lt;/p&gt;
&lt;h3 id=&quot;language-and-optimizations-must-be-friends&quot;&gt;Language and Optimizations Must Be Friends&lt;/h3&gt;
&lt;p&gt;Attempt to foresee where the language lacks features that make it hard to write well performing code. Are your users on the market for a way to layout and manage memory manually? I am sure they are. If your language is even remotely popular users would eventually succeed in writing code that performs poorly. Weight the cost of adding language features that fix performance problems against solving the same performance problems by other means (e.g. by more sophisticated optimizations or by asking users to rewrite their code in Rust).&lt;/p&gt;
&lt;p&gt;This works the other way around to: if your language has features make sure that they perform reasonably well and their performance is both well understood by users and can be easily diagnosed. Invest in making your whole language optimized, instead of having a well performing code and surrounded by poorly performing long tail of rarely used features.&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 16:47:13 +0000</pubDate>
<dc:creator>youngtaff</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html</dc:identifier>
</item>
<item>
<title>Elm changed my mind about unpopular languages</title>
<link>https://blog.realkinetic.com/elm-changed-my-mind-about-unpopular-languages-190a23f4a834</link>
<guid isPermaLink="true" >https://blog.realkinetic.com/elm-changed-my-mind-about-unpopular-languages-190a23f4a834</guid>
<description>&lt;p name=&quot;55a0&quot; id=&quot;55a0&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Have you tried using software from way off the beaten path? Maybe you tried to make software for your &lt;a href=&quot;https://wiki.planet-casio.com/en/Fx-9860G_SDK&quot; data-href=&quot;https://wiki.planet-casio.com/en/Fx-9860G_SDK&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;graphing calculator&lt;/a&gt; and realized that you were one of five people to ever try that and there was no documentation. The experience sucks. You may be the kind of person who enjoys working through arcane bugs and zero docs (and sometimes, that’s me), but I decided that in professional software development, where shipping matters, I would stick to only the most widely used tools.&lt;/p&gt;
&lt;p name=&quot;2c6d&quot; id=&quot;2c6d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I made it a hard and fast rule: if I found two technologies that could solve a problem, I would choose the one more people were using. I didn’t want to include an obscure graphics API and then discover that no one had ever called &lt;code class=&quot;markup--code markup--p-code&quot;&gt;set_color()&lt;/code&gt; followed by &lt;code class=&quot;markup--code markup--p-code&quot;&gt;resize_window()&lt;/code&gt; (resizing is &lt;a href=&quot;https://bugreports.qt.io/browse/QTBUG-57608&quot; data-href=&quot;https://bugreports.qt.io/browse/QTBUG-57608&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;hard&lt;/a&gt;) and somehow those two functions in sequence cause a &lt;a href=&quot;https://bugreports.qt.io/browse/QTBUG-60185&quot; data-href=&quot;https://bugreports.qt.io/browse/QTBUG-60185&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;segfault&lt;/a&gt;. I don’t want to be the guy that finds a &lt;a href=&quot;https://github.com/golang/go/issues/1990&quot; data-href=&quot;https://github.com/golang/go/issues/1990&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;bug&lt;/a&gt; in the compiler. I just need to ship the product.&lt;/p&gt;
&lt;p name=&quot;0cb0&quot; id=&quot;0cb0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Part of my hesitation to use new platforms was borne from two years writing Go before it had a story for dependency management. The community fragmented into dozens of painful or mediocre solutions: gopkg.in, godep, glide, gb, etc. It took years for developers to “settle” (I use the word lightly) on godep, and it’s not until recently, as Go’s adoption reached an incredible high, that the experience is relatively smooth. I recently learned that the Go developers may be introducing an official solution: &lt;a href=&quot;https://github.com/golang/dep&quot; data-href=&quot;https://github.com/golang/dep&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;golang/dep&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;4f7f&quot; id=&quot;4f7f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With my new rule in hand, I felt confident in my stack choices. When I looked for tools to build a web application, I considered only massively popular options like Bootstrap and jQuery. Each of these libraries has a bazillion monthly users, so all the bugs have been worked out, right? If I hit an issue, surely someone will have asked about it on StackOverflow. Smooth sailing. And hey, it works. You can go through the whole development lifecycle of the app and you’ll rarely encounter a situation where you can’t find a fix online in 5 seconds. Somebody else has already worked out the kinks. My strategy was flawless.&lt;/p&gt;
&lt;p name=&quot;a68e&quot; id=&quot;a68e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But when I joined Real Kinetic, I found out we were writing web client code in &lt;a href=&quot;http://elm-lang.org/&quot; data-href=&quot;http://elm-lang.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Elm&lt;/a&gt;. Elm? Really? The experimental language created for Haskell snobs who can’t handle stooping to the level of a regular blue-collar language like Javascript? I pictured Elm fans as hipsters standing around talking about how side effects in web applications are so 2008, bro. I definitely did not picture them as people who were shipping applications. Elm was not, in my mind, a match for a production environment.&lt;/p&gt;
&lt;p name=&quot;6c89&quot; id=&quot;6c89&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So for the first few weeks, I was skeptical. But then, about my third time running through the Elm guide, the &lt;a href=&quot;https://guide.elm-lang.org/architecture/&quot; data-href=&quot;https://guide.elm-lang.org/architecture/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;architecture&lt;/a&gt; finally clicked in my head. I got it. Wow. This is way better than Javascript. I can look at the code and predict its behavior, edge cases and all, with certainty. There are two reasons.&lt;/p&gt;
&lt;p name=&quot;0804&quot; id=&quot;0804&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;First, Elm has the natural predictability of a pure functional language; when you write Elm, the compiler forces you to consider every case. Consider the following example: You write some software for your friend to keep a digital catalog of the books in their library. They want a feature to produce a report that shows how many books are in the catalog, the copyright date of the oldest and newest book in the library, and the number of unique authors.&lt;/p&gt;
&lt;pre name=&quot;83bb&quot; id=&quot;83bb&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
type alias Book =&lt;br/&gt;{ isbn : String&lt;br/&gt;, title : String&lt;br/&gt;, authors : List String&lt;br/&gt;, copyright : Int&lt;br/&gt;, edition : Maybe String&lt;br/&gt;}
&lt;/pre&gt;
&lt;pre name=&quot;469e&quot; id=&quot;469e&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
type alias LibraryReport =&lt;br/&gt;{ numBooks : Int&lt;br/&gt;, oldestCopyright : Int&lt;br/&gt;, newestCopyright : Int&lt;br/&gt;, uniqueAuthors : Int&lt;br/&gt;}
&lt;/pre&gt;
&lt;pre name=&quot;597d&quot; id=&quot;597d&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
createReport : List Book -&amp;gt; LibraryReport&lt;br/&gt;createReport books =&lt;br/&gt;let&lt;br/&gt;copyrightYears =&lt;br/&gt;List.map .copyright books&lt;br/&gt;in&lt;br/&gt;{ numBooks = List.length books&lt;br/&gt;, oldestCopyright =&lt;br/&gt;List.minimum copyrightYears&lt;br/&gt;|&amp;gt; Maybe.withDefault 0&lt;br/&gt;, newestCopyright =&lt;br/&gt;List.maximum copyrightYears&lt;br/&gt;|&amp;gt; Maybe.withDefault 0&lt;br/&gt;, uniqueAuthors =&lt;br/&gt;books&lt;br/&gt;|&amp;gt; List.map .authors&lt;br/&gt;|&amp;gt; List.concat&lt;br/&gt;|&amp;gt; Set.fromList&lt;br/&gt;|&amp;gt; Set.size&lt;br/&gt;}
&lt;/pre&gt;
&lt;p name=&quot;994a&quot; id=&quot;994a&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;I can walk through some of this code more carefully. Consider this section:&lt;/p&gt;
&lt;pre name=&quot;81f9&quot; id=&quot;81f9&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
newestCopyright =&lt;br/&gt;List.maximum copyrightYears&lt;br/&gt;|&amp;gt; Maybe.withDefault 0
&lt;/pre&gt;
&lt;p name=&quot;db4f&quot; id=&quot;db4f&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Here we make use of two library functions: &lt;code class=&quot;markup--code markup--p-code&quot;&gt;List.maximum&lt;/code&gt; and &lt;code class=&quot;markup--code markup--p-code&quot;&gt;Maybe.withDefault&lt;/code&gt;. &lt;code class=&quot;markup--code markup--p-code&quot;&gt;List.maximum&lt;/code&gt;’s purpose and usage is obvious, and its &lt;a href=&quot;https://github.com/elm-lang/core/blob/9a20adc5749c1e68986771c506f0bef7ade9903f/src/List.elm#L391&quot; data-href=&quot;https://github.com/elm-lang/core/blob/9a20adc5749c1e68986771c506f0bef7ade9903f/src/List.elm#L391&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;type signature&lt;/a&gt; is revealing.&lt;/p&gt;
&lt;pre name=&quot;6d65&quot; id=&quot;6d65&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
maximum : List comparable -&amp;gt; Maybe comparable
&lt;/pre&gt;
&lt;p name=&quot;a4e7&quot; id=&quot;a4e7&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;In this case, since our List is of type “List Int,” the maximum function returns a “Maybe Int.” The concept of Maybe will be familiar to people coming from Haskell (&lt;code class=&quot;markup--code markup--p-code&quot;&gt;Maybe&lt;/code&gt;), Rust (&lt;code class=&quot;markup--code markup--p-code&quot;&gt;Option&lt;/code&gt;), and Java (&lt;code class=&quot;markup--code markup--p-code&quot;&gt;Optional&lt;/code&gt;). “Maybe” is a container with either zero (&lt;code class=&quot;markup--code markup--p-code&quot;&gt;Nothing&lt;/code&gt;) or one (&lt;code class=&quot;markup--code markup--p-code&quot;&gt;Just x&lt;/code&gt;) elements. We can use the function &lt;code class=&quot;markup--code markup--p-code&quot;&gt;Maybe.withDefault&lt;/code&gt; to “unbox” a Maybe value, substituting a default value if the Maybe container is empty.&lt;/p&gt;
&lt;p name=&quot;65d1&quot; id=&quot;65d1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So, this section of code retrieves the maximum value in the &lt;code class=&quot;markup--code markup--p-code&quot;&gt;copyrightYears&lt;/code&gt; list, if it exists. If not, we just return zero. Elm requires that you think through all the edge cases. &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;You must consider and specify what will happen in every case.&lt;/strong&gt; This is the reason Elm can realistically promise zero runtime exceptions.&lt;/p&gt;
&lt;p name=&quot;f819&quot; id=&quot;f819&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The second reason that Elm is better than Javascript is that Elm is a natural fit for the DOM. The feeling is so natural that it feels like HTML was designed for Elm, rather than the other way around. Part of the reason is that Elm uses the concept of a Virtual DOM, which you may be familiar with from React. (The Virtual DOM causes the view to be updated automatically as the program model changes.) Here’s how we might render this LibraryReport type to HTML:&lt;/p&gt;
&lt;pre name=&quot;3d86&quot; id=&quot;3d86&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
renderRow : String -&amp;gt; Int -&amp;gt; Html Msg&lt;br/&gt;renderRow title data =&lt;br/&gt;tr []&lt;br/&gt;[ td [] [ text title ]&lt;br/&gt;, td&lt;br/&gt;[ style&lt;br/&gt;[ ( &quot;text-align&quot;, &quot;right&quot; )&lt;br/&gt;, ( &quot;min-width&quot;, &quot;5rem&quot; )&lt;br/&gt;]&lt;br/&gt;]&lt;br/&gt;[ data |&amp;gt; toString |&amp;gt; text ]&lt;br/&gt;]
&lt;/pre&gt;
&lt;pre name=&quot;98a5&quot; id=&quot;98a5&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
viewReport : LibraryReport -&amp;gt; Html Msg&lt;br/&gt;viewReport report =&lt;br/&gt;div&lt;br/&gt;[ style&lt;br/&gt;[ ( &quot;background-color&quot;, &quot;#eee&quot; )&lt;br/&gt;, ( &quot;padding&quot;, &quot;3px&quot; )&lt;br/&gt;, ( &quot;margin&quot;, &quot;3rem&quot; )&lt;br/&gt;]&lt;br/&gt;]&lt;br/&gt;[ b [] [ text &quot;Library Report&quot; ]&lt;br/&gt;, table []&lt;br/&gt;[ renderRow &quot;Number of Books&quot; report.numBooks&lt;br/&gt;, renderRow &quot;Oldest Copyright&quot; report.oldestCopyright&lt;br/&gt;, renderRow &quot;Newest Copyright&quot; report.newestCopyright&lt;br/&gt;, renderRow &quot;Number of Unique Authors &quot; report.uniqueAuthors&lt;br/&gt;]&lt;br/&gt;]
&lt;/pre&gt;
&lt;p name=&quot;827f&quot; id=&quot;827f&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Note the way we composed &lt;code class=&quot;markup--code markup--p-code&quot;&gt;renderRow&lt;/code&gt; within &lt;code class=&quot;markup--code markup--p-code&quot;&gt;viewReport&lt;/code&gt;. The rendered result:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*Bfpi30J-B56glbZq.&quot; data-width=&quot;297&quot; data-height=&quot;150&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*Bfpi30J-B56glbZq.&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;9029&quot; id=&quot;9029&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Working in Elm is a series of pleasant surprises: an elegant command-line interface, a helpful compiler, an intuitive debugger.&lt;/p&gt;
&lt;p name=&quot;2842&quot; id=&quot;2842&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;These surprises include (spoilers):&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;af03&quot; id=&quot;af03&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;An elegant command-line interface in the form of elm-package and elm-make.&lt;/li&gt;
&lt;li name=&quot;48de&quot; id=&quot;48de&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Automatic code formatting with elm-format (similar to &lt;a href=&quot;https://blog.golang.org/go-fmt-your-code&quot; data-href=&quot;https://blog.golang.org/go-fmt-your-code&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;gofmt&lt;/a&gt;).&lt;/li&gt;
&lt;li name=&quot;779a&quot; id=&quot;779a&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Automatically enforced package semver.&lt;/li&gt;
&lt;li name=&quot;5121&quot; id=&quot;5121&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Elm-Reactor, a great way to playground new projects.&lt;/li&gt;
&lt;li name=&quot;6c1d&quot; id=&quot;6c1d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Elm’s debug mode, with built-in &lt;a href=&quot;https://www.youtube.com/watch?v=vS3yzUo7l8Y&quot; data-href=&quot;https://www.youtube.com/watch?v=vS3yzUo7l8Y&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;time travel&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*Nvtop5fMg_OffOk3.&quot; data-width=&quot;667&quot; data-height=&quot;401&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*Nvtop5fMg_OffOk3.&quot;/&gt;&lt;/div&gt;
The compiler message that appears when you delete a field from a struct&lt;br/&gt;without updating the corresponding functions.
&lt;p name=&quot;6049&quot; id=&quot;6049&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The biggest downsides of the Elm language are that&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;e0a8&quot; id=&quot;e0a8&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;It’s a functional language and therefore the learning curve is steeper for programmers from imperative backgrounds.&lt;/li&gt;
&lt;li name=&quot;c2f2&quot; id=&quot;c2f2&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;You probably can’t use it on the server side (not as versatile as Javascript).&lt;/li&gt;
&lt;li name=&quot;f10c&quot; id=&quot;f10c&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;It lacks some of the higher-level capabilities of other functional languages like Haskell.&lt;/li&gt;
&lt;li name=&quot;5f0b&quot; id=&quot;5f0b&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;The strict dependency semantics put pressure on Elm library maintainers to upgrade immediately when their dependencies change, so as not to block downstream upgrades.&lt;/li&gt;
&lt;/ol&gt;&lt;p name=&quot;79cc&quot; id=&quot;79cc&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Notice anything missing from this list? Even though Elm is a small language with a small community, that doesn’t affect the Elm experience in a noticeable way.&lt;/p&gt;
&lt;p name=&quot;2a61&quot; id=&quot;2a61&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Now I strongly prefer Elm for any new client-facing web app. Elm has other surface benefits, like &lt;a href=&quot;http://elm-lang.org/blog/blazing-fast-html&quot; data-href=&quot;http://elm-lang.org/blog/blazing-fast-html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;great performance&lt;/a&gt;, &lt;a href=&quot;http://package.elm-lang.org/&quot; data-href=&quot;http://package.elm-lang.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;decent library support&lt;/a&gt;, and &lt;a href=&quot;https://guide.elm-lang.org/interop/javascript.html&quot; data-href=&quot;https://guide.elm-lang.org/interop/javascript.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;thoughtfully-designed&lt;/a&gt; JS interop, but for me, the upside of Elm is that it gives me confidence in my code.&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 16:09:50 +0000</pubDate>
<dc:creator>lyddonb</dc:creator>
<og:title>Elm changed my mind about unpopular languages – Real Kinetic Blog</og:title>
<og:url>https://blog.realkinetic.com/elm-changed-my-mind-about-unpopular-languages-190a23f4a834</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/0*Nvtop5fMg_OffOk3.</og:image>
<og:description>Have you tried using software from way off the beaten path?</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.realkinetic.com/elm-changed-my-mind-about-unpopular-languages-190a23f4a834?gi=5cd19a7edb4f</dc:identifier>
</item>
<item>
<title>A Hacker Has Wiped a Spyware Company’s Servers</title>
<link>https://motherboard.vice.com/en_us/article/3k7a5k/hacker-wipes-spyware-retina-x-flexispy</link>
<guid isPermaLink="true" >https://motherboard.vice.com/en_us/article/3k7a5k/hacker-wipes-spyware-retina-x-flexispy</guid>
<description>&lt;p&gt;Last year, a vigilante hacker broke into the servers of a company that sells spyware to everyday consumers and wiped their servers, deleting photos captured from monitored devices. A year later, the hacker has done it again.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Thursday, the hacker said he started wiping some cloud servers that belong to Retina-X Studios, a Florida-based company that sells spyware products targeted at parents and employers, but that are also used by people to spy on their partners without their consent.&lt;/p&gt;

&lt;p&gt;Retina-X was one of two companies that were breached last year in a series of hacks that &lt;a href=&quot;https://motherboard.vice.com/en_us/article/vvabv3/hackers-why-they-hit-stalkerware-flexispy-retina-x&quot; target=&quot;_blank&quot;&gt;exposed the fact that many otherwise ordinary people surreptitiously install spyware on their partners’ and children’s phones in order to spy on them.&lt;/a&gt; This software has been called “stalkerware” by some. This spyware allows people to have practically full access to the smartphone or computer of their targets. Whoever controls the software can see the photos the target snaps with their phone, read their text messages, or see what websites they go to, and track their location.&lt;/p&gt;
&lt;p&gt;A Retina-X spokesperson said in an email Thursday that the company hasn’t detected a new data breach since last year. Friday morning, after the hacker told us he had deleted much of Retina-X’s data, the company again said it had not been hacked. But Motherboard confirmed that the hacker does indeed have access to its servers.&lt;/p&gt;
&lt;p&gt;Friday, Motherboard created a test account using Retina-X’s PhoneSheriff spyware in order to verify the hacker’s claims. We downloaded and installed PhoneSheriff onto an Android phone and used the phone’s camera to take a photo of our shoes.&lt;/p&gt;
&lt;p&gt;“I have 2 photos of shoes,” the hacker told us moments later.&lt;/p&gt;
&lt;p&gt;The hacker also described other photos we had on the device, told us the email account we used to register the account, and then deleted the data from our PhoneSheriff account.&lt;/p&gt;
&lt;p&gt;“None of this should be online at all,” the hacker told Motherboard, claiming that he had deleted a total of 1 terabyte of data.&lt;/p&gt;

&lt;p&gt;“Aside from the technical flaws, I really find this category of software disturbing. In the US, it's mainly targeted to parents,” the hacker said, explaining his motivations for going after Retina-X. “Edward Snowden has said that privacy is what gives you the ability to share with the world who you are on your own terms, and to protect for yourself the parts of you that you're still experimenting with. I don't want to live in a world where younger generations grow up without that right.”&lt;/p&gt;
&lt;p&gt;In the first Retina-X data breach last year, the hacker was able to access private photos, messages, and other sensitive data from people who were monitored using one of Retina-X’s products. The private data was stored in containers provided by cloud provider Rackspace. The hacker found the key and credentials to those containers inside the Android app of PhoneSheriff, one of Retina-X’s spyware products. The API key and the credentials were stored in plaintext, meaning the hacker could take them and gain access to the server.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;This time, the hacker said the API key was obfuscated, but it was still relatively easy for him to obtain it and break in again. Because he feared another hacker getting in and then posting the private photos online, the hacker decided to wipe the containers again.&lt;/p&gt;
&lt;p&gt;Shortly after Motherboard first reported the Retina-X breach in February of last year, a second hacker independently approached us, and said they already had been inside the company’s systems for some time. The hacker provided other internal files from Retina-X, some of which Motherboard verified at the time.&lt;/p&gt;

&lt;p&gt;Answering a series of questions about what Retina-X changed after last year’s hack, a spokesperson wrote in an email that “we have been taking steps to enhance our data security measures. Sharing details of security measures could only serve to potentially compromise those efforts.”&lt;/p&gt;
&lt;p&gt;“Retina-X Studios is committed to protecting the privacy of its users and we have cooperated with investigating authorities,” the spokesperson wrote. “Unfortunately, as we are well aware, the perpetrators of these egregious actions against consumers and private companies are often never identified and brought to justice.”&lt;/p&gt;
&lt;div class=&quot;article__media&quot;&gt;&lt;img src=&quot;https://vice-web-statics-cdn.vice.com/images/blank.png&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1518807199861-Screen-Shot-2018-02-16-at-13143-PM.png&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;At the end of 2016, the hacker gained access to the servers of Retina-X, which makes &lt;a href=&quot;http://www.retinax.com/products.php&quot; target=&quot;_blank&quot;&gt;several spyware products&lt;/a&gt;, and started collecting data and moving inside the company’s networks. Weeks later, the hacker shared samples of some of the data he accessed and stole with Motherboard. But he didn’t post any of it online. Instead, he wiped some of the servers he got into, as &lt;a href=&quot;http://www.phonesheriff.com/blog/retina-x-studios-server-breached-by-hackers/&quot; target=&quot;_blank&quot;&gt;the company later admitted&lt;/a&gt; in February of 2017.&lt;/p&gt;
&lt;p&gt;The new alleged hack comes just a few days after the hacker resurfaced online. At the beginning of February, the hacker started to dump online some of the old data he stole from Retina-X in late 2016. The hacker is now using a &lt;a href=&quot;https://motherboard.vice.com/en_us/article/783akg/mastodon-is-like-twitter-without-nazis-so-why-are-we-not-using-it&quot; target=&quot;_blank&quot;&gt;Mastodon&lt;/a&gt; account called “Precise Buffalo” to share &lt;a href=&quot;https://social.tchncs.de/@precisebuffalo/99465546218658774&quot; target=&quot;_blank&quot;&gt;screenshots&lt;/a&gt; recounting how he broke in, &lt;a href=&quot;https://social.tchncs.de/@precisebuffalo/99477110587656365&quot; target=&quot;_blank&quot;&gt;as well as raw data&lt;/a&gt; from the breach, though no private data from victims and targets.&lt;/p&gt;

&lt;p&gt;In February of 2017, &lt;a href=&quot;https://motherboard.vice.com/en_us/topic/when-spies-come-home&quot; target=&quot;_blank&quot;&gt;a Motherboard investigation&lt;/a&gt; based on data provided by hackers showed that tens of thousands of people—teachers, construction workers, lawyers parents, jealous lovers—use stalkerware apps. Some of those people use the stalkerware apps to spy on their own partners without their consent, something that is illegal in the United States and &lt;a href=&quot;https://motherboard.vice.com/en_us/article/bmbpvv/i-see-you-a-domestic-violence-survivor-talks-about-being-surveilled-by-her-ex&quot; target=&quot;_blank&quot;&gt;is often associated with domestic abuse and violence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Retina-X was not the only spyware company hacked last year. Other hackers also breached &lt;a href=&quot;https://motherboard.vice.com/en_us/article/aemeae/meet-flexispy-the-company-getting-rich-selling-stalkerware-to-jealous-lovers&quot; target=&quot;_blank&quot;&gt;FlexiSpy&lt;/a&gt;, an infamous provider of spyware that has actively marketed its apps to jealous lovers. At the time, &lt;a href=&quot;https://motherboard.vice.com/en_us/article/vvabv3/hackers-why-they-hit-stalkerware-flexispy-retina-x&quot; target=&quot;_blank&quot;&gt;the hackers promised that their two victims—FlexiSpy and Retina-X—were only the first in line&lt;/a&gt;, and that they would target more companies that sell similar products.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Additional reporting by Joseph Cox and Jason Koebler.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Read more:&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;https://motherboard.vice.com/en_us/article/nejmnz/when-technology-takes-hostages-the-rise-of-stalkerware&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;&lt;em&gt;When Technology Takes Hostages: The Rise of 'Stalkerware'&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Got a tip? You can contact this reporter securely on Signal at +1 917 257 1382, OTR chat at lorenzo@jabber.ccc.de, or email lorenzo@motherboard.tv&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Get six of our favorite Motherboard stories every day&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;http://motherboard.club/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;&lt;em&gt;by signing up for our newsletter.&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 15:46:32 +0000</pubDate>
<dc:creator>petethomas</dc:creator>
<og:type>article</og:type>
<og:title>A Hacker Has Wiped a Spyware Company’s Servers—Again</og:title>
<og:image>https://video-images.vice.com/articles/5a8482afc9018c5dfa64377a/lede/1518804885488-IMG_4152.jpeg?crop=1xw:0.7494xh;0xw,0.0676xh&amp;resize=1200:*</og:image>
<og:url>https://motherboard.vice.com/en_us/article/3k7a5k/hacker-wipes-spyware-retina-x-flexispy</og:url>
<og:description>&quot;I don't want to live in a world where younger generations grow up without privacy.&quot;</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://motherboard.vice.com/en_us/article/3k7a5k/hacker-wipes-spyware-retina-x-flexispy</dc:identifier>
</item>
<item>
<title>Google&amp;#039;s CardDAV server isn&amp;#039;t standards compliant (2014)</title>
<link>https://evertpot.com/google-carddav-issues/</link>
<guid isPermaLink="true" >https://evertpot.com/google-carddav-issues/</guid>
<description>&lt;p&gt;&lt;time datetime=&quot;2014-10-15 19:03:49 +0000&quot;&gt;October 15, 2014&lt;/time&gt;&lt;/p&gt;&lt;p&gt;For &lt;a href=&quot;https://fruux.com/&quot;&gt;fruux&lt;/a&gt;, we’ve decided to implement syncing with Google Contacts some time ago, allowing people to do bi-directional sync between their fruux and Google Contacts address book.&lt;/p&gt;
&lt;p&gt;Bi-directional sync is not particularly easy, but since Google implemented &lt;a href=&quot;http://tools.ietf.org/html/rfc2426&quot;&gt;CardDAV&lt;/a&gt; support &lt;a href=&quot;http://gmailblog.blogspot.ca/2012/09/a-new-way-to-sync-google-contacts.html&quot;&gt;some time ago&lt;/a&gt;, and I’m pretty well versed at that protocol, I thought it was doable.&lt;/p&gt;
&lt;p&gt;I was wrong.&lt;/p&gt;
&lt;p&gt;I’m writing this blog post as a general warning to &lt;em&gt;not&lt;/em&gt; use Google’s CardDAV server for well, pretty much anything. It’s a huge mistake, and until they fix the massive mistakes in their interpretation of the protocol, you are much better off using their proprietary &lt;a href=&quot;https://developers.google.com/google-apps/contacts/v3/&quot;&gt;Contacts API&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;data-loss&quot;&gt;Data-loss&lt;/h2&gt;
&lt;p&gt;Lets start with the most glaring issue, the loss of data. The primary data-format that’s being used in CardDAV is &lt;a href=&quot;http://tools.ietf.org/html/rfc2426&quot;&gt;vCard&lt;/a&gt;, in particular version 3.0.&lt;/p&gt;
&lt;p&gt;There are certain things that you can expect when you use vCards with CardDAV. In particular, if you add some information to your vCard and send it to the server, with a &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; request, you also expect that information back with &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Google’s CardDAV server silently wipes out all kinds of data it doesn’t care about. Both the very important stuff, such as properties, but also other relevant meta-data such as parameters and groups that influence how a vCard may be interpreted.&lt;/p&gt;
&lt;p&gt;The effect for the end-user is that a user may create vCards and add a bunch of information to a contact, which gets discarded by Google, and upon the next sync, also gets removed from the users local version.&lt;/p&gt;
&lt;h2 id=&quot;rejection-of-valid-vcards-and-error-handling&quot;&gt;Rejection of valid vCards and error handling&lt;/h2&gt;
&lt;p&gt;We’ve sent hundreds of thousands of valid vCards to Google’s CardDAV server. The server rejects a whopping 15% of all the vCards we send it. Note that these are not vCards we produce. We receive them from other CardDAV clients, and since we get millions of them, this is statistically a decent source on what kind of vCards appear in the wild.&lt;/p&gt;
&lt;p&gt;The biggest issue we’re having with this though, is that we’re not getting any feedback.&lt;/p&gt;
&lt;p&gt;No, this isn’t just a &lt;code class=&quot;highlighter-rouge&quot;&gt;400 Bad Request&lt;/code&gt; we’re getting back, we’re not actually receiving any TCP packets back, at all. Any (valid) vCard that the CardDAV server does not understand, will result in our HTTP requests timing out.&lt;/p&gt;
&lt;p&gt;There’s no clear pattern to what they do and do not support. We’ve noticed that almost every vCard with an attachment is rejected, and after dropping the attachments, things will start working… but there’s also a large amount of cards that get rejected for certain Google accounts, but work fine in other accounts.&lt;/p&gt;
&lt;h2 id=&quot;slowness&quot;&gt;Slowness&lt;/h2&gt;
&lt;p&gt;Nearly any write operation you do on Google’s CardDAV server will take 10-20 seconds to complete. This may not seem like a big deal, but many of our users have address books with well over 2000 contacts.&lt;/p&gt;
&lt;p&gt;Given that our HTTP requests time out after 1 minute, we retry HTTP requests 2 times before failing, and 15% of requests fail by timing out, this means that for an address book with 2000 contacts, this would take over 22 hours to complete.&lt;/p&gt;
&lt;h2 id=&quot;uid-and-urls&quot;&gt;UID and urls&lt;/h2&gt;
&lt;p&gt;When syncing with a CardDAV system, especially with one that discards data whenever it feels like it, you’ll need to keep some kind of reference to the vCard you’re sending, so you can keep the important data local.&lt;/p&gt;
&lt;p&gt;CardDAV provides two identifiers that are unique and stable id’s.&lt;/p&gt;
&lt;p&gt;Google’s CardDAV server discards both, and replaces them with their own. From the perspective of any CardDAV client, Google makes it appear as if a new contact is sent. That contact is deleted on the server, and a new contact appears on the server that’s similar, but not entirely (see Data-loss).&lt;/p&gt;
&lt;p&gt;For very simple clients that may be sufficient, but even for example Apple’s Contacts app on OS X, which uses ID’s to group contacts together, loses this relationship as soon as the card is sent to Google.&lt;/p&gt;
&lt;h2 id=&quot;lack-of-documentation&quot;&gt;Lack of documentation&lt;/h2&gt;
&lt;p&gt;The official &lt;a href=&quot;https://developers.google.com/google-apps/carddav/&quot;&gt;documentation&lt;/a&gt; for the server conveniently just refers to the open standards, but since Google’s system couldn’t be further from being a CardDAV-compliant server, there’s little to no information about why they do the things they do.&lt;/p&gt;
&lt;p&gt;For instance, if they only choose to support an extremely limited subset of vCards, ignoring many often-used features, it would have been great if that was documented.&lt;/p&gt;
&lt;h2 id=&quot;the-response&quot;&gt;The response&lt;/h2&gt;
&lt;p&gt;Normally, when running into bugs like this, I’m quite forgiving. I wrote a &lt;a href=&quot;http://sabre.io/dav/&quot;&gt;reasonably popular server&lt;/a&gt; myself, I know that standards are hard and it’s not easy to write a well behaving server from scratch.&lt;/p&gt;
&lt;p&gt;So the first thing I did was to try to contact the relevant developers.&lt;/p&gt;
&lt;p&gt;Out of respect and privacy I will withold their response, but I was met with disinterest, and kind of got the impression I was overstepping my boundaries by even suggesting that there may be one or two bugs in their system.&lt;/p&gt;
&lt;p&gt;This was in August 2013, and nothing has changed since.&lt;/p&gt;
&lt;h2 id=&quot;in-conclusion&quot;&gt;In conclusion&lt;/h2&gt;
&lt;p&gt;The fact that Google advertises their servers as supporting CardDAV is an insult to anyone who does try to be standards compliant.&lt;/p&gt;
&lt;p&gt;The Google CardDAV server has similarities to what we call CardDAV. For very simple, controlled stuff, it may be possible to pretend it is.&lt;/p&gt;
&lt;p&gt;For anything advanced, avoid it at all cost. I’ve made the mistake of trying to work around various issues, when in reality that time could have been better spent porting our code to the Google Contacts API. Which is much simpler, but it’s predictable and behaves sanely.&lt;/p&gt;
&lt;p&gt;If you are a CardDAV client developer and you’re thinking of syncing with Google, keep the following in mind:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Google only supports a very small subset of vCards and will silently discard or mangle any of your user’s data that it doesn’t support.&lt;/li&gt;
&lt;li&gt;About 15% of normal vCards will be rejected by Google without telling you why. Their system will just time out your http request.&lt;/li&gt;
&lt;li&gt;It’s extremely slow, which can be problematic for mobile clients and when you have to handle sync for many users.&lt;/li&gt;
&lt;li&gt;You’ll need to add additional heuristics to maintain referential integrity to your contacts.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Furthermore, if you’re writing an actual vCard sync service that targets Google, I think the only sane way to implement this is to:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Maintain an additional database, as Google’s can’t be trusted.&lt;/li&gt;
&lt;li&gt;After sending vCards, immediately also retrieve it to find out how Google mangled it.&lt;/li&gt;
&lt;li&gt;After a change was made on the Google contacts side, retrieve the updated vCard, compare it to the last version you received, and apply the differences to the &lt;em&gt;correct&lt;/em&gt; copy of the vCards.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Another issue with this is that it’s hard to process semantic updates of vCards. vCard properties may have a &lt;code class=&quot;highlighter-rouge&quot;&gt;PID&lt;/code&gt; parameter to uniquely identify properties, so you know what has been updated, but this is a vCard 4 feature, and even if you did specify it, Google would just discard it anyway.&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 13:31:34 +0000</pubDate>
<dc:creator>bariumbitmap</dc:creator>
<og:title>Why Google's CardDAV server isn't.</og:title>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://evertpot.com/google-carddav-issues/</dc:identifier>
</item>
<item>
<title>Rust things I miss in C</title>
<link>https://people.gnome.org/~federico/blog/rust-things-i-miss-in-c.html</link>
<guid isPermaLink="true" >https://people.gnome.org/~federico/blog/rust-things-i-miss-in-c.html</guid>
<description>&lt;p&gt;Librsvg feels like it is reaching a tipping point, where suddenly it seems like it would be easier to just port some major parts from C to Rust than to just add accessors for them. Also, more and more of the meat of the library is in Rust now.&lt;/p&gt;
&lt;p&gt;I'm switching back and forth a lot between C and Rust these days, and C feels very, very primitive these days.&lt;/p&gt;

&lt;p&gt;I fell in love with the C language about 24 years ago. I learned the basics of it by reading a Spanish translation of &lt;a href=&quot;https://en.wikipedia.org/wiki/The_C_Programming_Language&quot;&gt;The C Programming Language by K&amp;amp;R&lt;/a&gt; second edition. I had been using Turbo Pascal before in a reasonably low-level fashion, with pointers and manual memory allocation, and C felt refreshing and empowering.&lt;/p&gt;
&lt;p&gt;K&amp;amp;R is a great book for its &lt;em&gt;style of writing&lt;/em&gt; and its conciseness of programming. This little book even taught you how to implement a simple &lt;code&gt;malloc()&lt;/code&gt;/&lt;code&gt;free()&lt;/code&gt;, which was completely enlightening. Even low-level constructs that seemed part of the language could be implemented in the language itself!&lt;/p&gt;
&lt;p&gt;I got good at C over the following years. It is a small language, with a small standard library. It was probably the perfect language to implement Unix kernels in 20,000 lines of code or so.&lt;/p&gt;
&lt;p&gt;The GIMP and GTK+ taught me how to do fancy object orientation in C. GNOME taught me how to maintain large-scale software in C. 20,000 lines of C code started to seem like a project one could more or less fully understand in a few weeks.&lt;/p&gt;
&lt;p&gt;But our code bases are not that small anymore. Our software now has &lt;em&gt;huge&lt;/em&gt; expectations on the features that are available in the language's standard library.&lt;/p&gt;
&lt;h2&gt;Some good experiences with C&lt;/h2&gt;
&lt;p&gt;Reading the POV-Ray code source code for the first time and learning how to do object orientation and inheritance in C.&lt;/p&gt;
&lt;p&gt;Reading the GTK+ source code and learning a C style that was legible, maintainable, and clean.&lt;/p&gt;
&lt;p&gt;Reading SIOD's source code, then the early Guile sources, and seeing how a Scheme interpreter can be written in C.&lt;/p&gt;
&lt;p&gt;Writing the initial versions of Eye of Gnome and fine-tuning the microtile rendering.&lt;/p&gt;
&lt;h2&gt;Some bad experiences with C&lt;/h2&gt;
&lt;p&gt;In the Evolution team, when everything was crashing. We had to buy a Solaris machine just to be able to buy Purify; there was no Valgrind back then.&lt;/p&gt;
&lt;p&gt;Debugging gnome-vfs threading deadlocks.&lt;/p&gt;
&lt;p&gt;Debugging Mesa and getting nowhere.&lt;/p&gt;
&lt;p&gt;Taking over the intial versions of Nautilus-share and seeing that it never &lt;code&gt;free()&lt;/code&gt;d anything.&lt;/p&gt;
&lt;p&gt;Trying to refactor code where I had no idea about the memory management strategy.&lt;/p&gt;
&lt;p&gt;Trying to turn code into a library when it is full of global variables and no functions are &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;But anyway — let's get on with things in Rust I miss in C.&lt;/p&gt;

&lt;p&gt;One of the first blog posts I read about Rust was &quot;&lt;a href=&quot;http://blog.skylight.io/rust-means-never-having-to-close-a-socket/&quot;&gt;Rust means never having to close a socket&lt;/a&gt;&quot;. Rust borrows C++'s ideas about &lt;a href=&quot;http://wiki.c2.com/?ResourceAcquisitionIsInitialization&quot;&gt;Resource Acquisition Is Initialization (RAII)&lt;/a&gt;, Smart Pointers, adds in the single-ownership principle for values, and gives you automatic, deterministic resource management in a very neat package.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Automatic: you don't &lt;code&gt;free()&lt;/code&gt; by hand. Memory gets deallocated, files get closed, mutexes get unlocked when they go out of scope. If you are wrapping an external resource, you just implement the &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch15-03-drop.html&quot;&gt;Drop&lt;/a&gt; trait and that's basically it. The wrapped resource feels like part of the language since you don't have to babysit its lifetime by hand.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deterministic: resources get created (memory allocated, initialized, files opened, etc.), and they get destroyed when they go out of scope. There is no garbage collection: things really get terminated when you close a brace. You start to see your program's data lifetimes as a tree of function calls.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;After forgetting to free/close/destroy C objects all the time, or worse, figuring out where code that I didn't write forgot to do those things (or did them &lt;em&gt;twice&lt;/em&gt;, incorrectly)... I don't want to do it again.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; really is a vector of whose elements are the size of &lt;code&gt;T&lt;/code&gt;. It's not an array of pointers to individually allocated objects. It gets compiled &lt;em&gt;specifically&lt;/em&gt; to code that can only handle objects of type &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After writing many janky macros in C to do similar things... I don't want to do it again.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch17-00-oop.html&quot;&gt;Rust is not a Java-like object-oriented language&lt;/a&gt;. Instead it has traits, which at first seem like Java interfaces — an easy way to do dynamic dispatch, so that if an object implements &lt;code&gt;Drawable&lt;/code&gt; then you can assume it has a &lt;code&gt;draw()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;However, traits are more powerful than that.&lt;/p&gt;
&lt;h2&gt;Associated types&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html&quot;&gt;Traits can have associated types&lt;/a&gt;. As an example, Rust provies the &lt;code&gt;Iterator&lt;/code&gt; trait which you can implement:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-&amp;gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Self&lt;/span&gt;::&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means that whenever you implement &lt;code&gt;Iterator&lt;/code&gt; for some iterable object, you also have to specify an &lt;code&gt;Item&lt;/code&gt; type for the things that will be produced. If you call &lt;code&gt;next()&lt;/code&gt; and there are more elements, you'll get back a &lt;code&gt;Some(YourElementType)&lt;/code&gt;. When your iterator runs out of items, it will return &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Associated types can refer to &lt;em&gt;other&lt;/em&gt; traits.&lt;/p&gt;
&lt;p&gt;For example, in Rust, you can use &lt;code&gt;for&lt;/code&gt; loops on anything that implements the &lt;code&gt;IntoIterator&lt;/code&gt; trait:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;IntoIterator&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;/// The type of the elements being iterated over.&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;/// Which kind of iterator are we turning this into?&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IntoIter&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Self&lt;/span&gt;::&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;Self&lt;/span&gt;::&lt;span class=&quot;n&quot;&gt;IntoIter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When implementing this trait, you must provide both the type of the &lt;code&gt;Item&lt;/code&gt; which your iterator will produce, and &lt;code&gt;IntoIter&lt;/code&gt;, the actual type that implements &lt;code&gt;Iterator&lt;/code&gt; and that holds your iterator's state.&lt;/p&gt;
&lt;p&gt;This way you can build webs of types that refer to each other. You can have a trait that says, &quot;I can do foo and bar, but only if you give me a type that can do this and that&quot;.&lt;/p&gt;

&lt;p&gt;I already posted about &lt;a href=&quot;https://people.gnome.org/~federico/blog/rant-on-string-slices.html&quot;&gt;the lack of string slices in C&lt;/a&gt; and how this is a pain in the ass once you get used to having them.&lt;/p&gt;

&lt;p&gt;Instead of&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Having to invoke &lt;code&gt;pkg-config&lt;/code&gt; by hand or with Autotools macros&lt;/li&gt;
&lt;li&gt;Wrangling include paths for header files...&lt;/li&gt;
&lt;li&gt;... and library files.&lt;/li&gt;
&lt;li&gt;And basically depending on the user to ensure that the correct versions of libraries are installed,&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You write a &lt;code&gt;Cargo.toml&lt;/code&gt; file which lists the names and versions of your dependencies. These get downloaded from a well-known location, or from elsewhere if you specify.&lt;/p&gt;
&lt;p&gt;You don't have to fight dependencies. It just works when you &lt;code&gt;cargo build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;C makes it very hard to have unit tests for several reasons:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Internal functions are often &lt;code&gt;static&lt;/code&gt;. This means they can't be called outside of the source file that defined them. A test program either has to &lt;code&gt;#include&lt;/code&gt; the source file where the static functions live, or use &lt;code&gt;#ifdef&lt;/code&gt;s to remove the &lt;code&gt;static&lt;/code&gt;s only during testing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have to write Makefile-related hackery to link the test program to only part of your code's dependencies, or to only part of the rest of your code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have to pick a testing framework. You have to register tests against the testing framework. You have to &lt;em&gt;learn&lt;/em&gt; the testing framework.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In Rust you write&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;cp&quot;&gt;#[test]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_that_foo_works&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expected_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;anywhere in your program or library, and when you type &lt;code&gt;cargo test&lt;/code&gt;, IT JUST FUCKING WORKS. That code only gets linked into the test binary. You don't have to compile anything twice by hand, or write Makefile hackery, or figure out how to extract internal functions for testing.&lt;/p&gt;
&lt;p&gt;This is a very killer feature for me.&lt;/p&gt;

&lt;p&gt;Rust generates documentation from comments in Markdown syntax. Code in the docs &lt;em&gt;gets run as tests&lt;/em&gt;. You can illustrate how a function is used &lt;em&gt;and&lt;/em&gt; test it at the same time:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;sd&quot;&gt;/// Multiples the specified number by two&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;///&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/// ```&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/// assert_eq!(multiply_by_two(5), 10);&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/// ```&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multiply_by_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-&amp;gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your example code &lt;em&gt;gets run as tests&lt;/em&gt; to ensure that your documentation stays up to date with the actual code.&lt;/p&gt;

&lt;p&gt;Rust has hygienic macros that avoid all of C's problems with things in macros that inadvertently shadow identifiers in the code. You don't need to write macros where every symbol has to be in parentheses for &lt;code&gt;max(5 + 3, 4)&lt;/code&gt; to work correctly.&lt;/p&gt;

&lt;p&gt;All the bugs in C that result from inadvertently converting an &lt;code&gt;int&lt;/code&gt; to a &lt;code&gt;short&lt;/code&gt; or &lt;code&gt;char&lt;/code&gt; or whatever — Rust doesn't do them. You have to explicitly convert.&lt;/p&gt;

&lt;p&gt;Enough said.&lt;/p&gt;

&lt;p&gt;In Rust, it is considered a bug in the language if something written in &quot;safe Rust&quot; (what you would be allowed to write outside &lt;code&gt;unsafe {}&lt;/code&gt; blocks) results in undefined behavior. You can shift-right a negative integer and it will do exactly what you expect.&lt;/p&gt;

&lt;p&gt;You know how &lt;code&gt;gcc&lt;/code&gt; warns you if you &lt;code&gt;switch()&lt;/code&gt; on an enum but don't handle all values? That's like a little baby.&lt;/p&gt;
&lt;p&gt;Rust has &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch18-03-pattern-syntax.html&quot;&gt;pattern matching&lt;/a&gt; in various places. It can do that trick for enums inside a &lt;code&gt;match()&lt;/code&gt; expression. It can do destructuring so you can return multiple values from a function:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;f64&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sin_cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-&amp;gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;f64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;f64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;f64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos_angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can &lt;code&gt;match()&lt;/code&gt; on strings. YOU CAN MATCH ON FUCKING STRINGS.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;green&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;it's red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;green&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;it's green&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;it's something else&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You know how this is illegible?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
my_func(true, false, false)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How about this instead, with pattern matching on function arguments:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fubarize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Frobnify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bazificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fubarize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;nc&quot;&gt;Fubarize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;           &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Frobnify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;nc&quot;&gt;Frobnify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;           &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bazificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;nc&quot;&gt;Bazificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frob&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fubarize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Frobnify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bazificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I've talked at length about this. No more returning a boolean with no extra explanation for an error, no ignoring errors inadvertently, no exception handling with nonlocal jumps.&lt;/p&gt;

&lt;p&gt;If you write a new type (say, a struct with a ton of fields), you can &lt;code&gt;#[derive(Debug)]&lt;/code&gt; and Rust will know how to automatically print that type's contents for debug output. You no longer have to write a special function that you must call in gdb by hand just to examine a custom type.&lt;/p&gt;

&lt;p&gt;No more passing function pointers and a &lt;code&gt;user_data&lt;/code&gt; by hand.&lt;/p&gt;

&lt;p&gt;I haven't done the &quot;&lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch16-00-concurrency.html&quot;&gt;fearless concurrency&lt;/a&gt;&quot; bit yet, where the compiler is able to prevent data races in threaded code. I imagine it being a game-changer for people who write concurrent code on an everyday basis.&lt;/p&gt;
&lt;p&gt;C is an old language with primitive constructs and primitive tooling. It was a good language for small uniprocessor Unix kernels that ran in trusted, academic environments. It's no longer a good language for the software of today.&lt;/p&gt;
&lt;p&gt;Rust is not easy to learn, but I think it is completely worth it. It's hard because it demands a lot from your understanding of the code you want to write. I think it's one of those languages that make you a better programmer and that let you tackle more ambitious problems.&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 11:36:06 +0000</pubDate>
<dc:creator>heinrich5991</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://people.gnome.org/~federico/blog/rust-things-i-miss-in-c.html</dc:identifier>
</item>
<item>
<title>The duties of John von Neumann&amp;#039;s assistant (1993)</title>
<link>https://shitpost.plover.com/m/math.jobs-you-dont-want.html</link>
<guid isPermaLink="true" >https://shitpost.plover.com/m/math.jobs-you-dont-want.html</guid>
<description>&lt;td class=&quot;mainsection&quot; bgcolor=&quot;#F3F3F3&quot; readability=&quot;62.595903165736&quot;&gt;&lt;p&gt;The following is one of my favorite excerpts; I typed it in and have carried it around for 25 years. It appears on pp.220–221 of &lt;a href=&quot;https://www.maa.org/sites/default/files/pdf/upload_library/22/Ford/Lorch219-230.pdf&quot;&gt;Edgar R. Lorch, &lt;em&gt;Szeged in 1934&lt;/em&gt;&lt;/a&gt;, American Mathematical Monthly, vol. 100, #3, pp.219–230.&lt;/p&gt;
&lt;blockquote readability=&quot;39&quot;&gt;
&lt;p&gt;All of us Fellows were terrified what would happen to us if we couldn't locate a spot for next year. At this time the political super-potentates of the mathematical scene were centered in Princeton, N.J., where the Institute of Advanced Study had recently been established. The School of Mathematics was its leading school. There were about five mathematics professors at the Institute. In order to further distinguish them from ordinary mortals teaching at Columbia, Yale, or other universities, each professor had an assistant. There was tremendous variation in the duties of these assistants. It was traditional belief that Einstein's assistant did nothing. The only requirement for him was to be a Jewish exile from Nazi Germany. Hermann Weyl's assistant had normal duties: preparing in mimeographed form his professor's lectures on group theory. I cannot imagine what Alexander's or Veblen's assistants did — probably not much.&lt;/p&gt;
&lt;p&gt;In early spring these potentates got together, counted up the mathematical plums to be handed out for the year, and made a list of the available talent who constituted the target space on which these plums were to be mapped. Then they sent the customary letters to the candidates: a three-paragraph personal letter to the candidates who had been hit, and a one-paragraph note of non-success to the poor souls who did not make it. One day I learned that one of my friends had received his letter — a good one. I gingerly went home, and sure enough, there was a letter from the Institute. The type-print covered the whole page — success! I would be able to live another year.&lt;/p&gt;
&lt;p&gt;The letter was really exciting. I was being offered the job of assistant to John von Neumann! I had heard him lecture several times. He was brilliant, spoke very fast, his English was quite fluent, he made remarkably few errors.&lt;/p&gt;
&lt;p&gt;I made a trip to Princeton and met with Veblen, who was running the Institute. “What,” asked I, “are the duties of an assistant to Professor von Neumann?” Veblen answered with a mixture of surprise and disdain, that a mere private second class should ask such a question about a four star general. His answer staggered me. Here were the four principal duties of von Neumann's assistant:&lt;/p&gt;
&lt;ol readability=&quot;20&quot;&gt;&lt;li readability=&quot;12&quot;&gt;
&lt;p&gt;To attend von Neumann's lectures on operator theory on Mondays, Tuesdays, and Wednesdays, take copious notes, complete unfinished proofs, see them through the secretarial jungle, and promptly circulate them to all American university libraries. This task alone was consuming the entire energies of a younger person, who had to be very sharp, fast, clever, and tough. These notes ran to over 600 pages.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;11&quot;&gt;
&lt;p&gt;To be von Neumann's assistant as Editor of the &lt;em&gt;Annals of Mathematics&lt;/em&gt;. This meant reading through every manuscript accepted for publication, underlining Greek letters in red and German letters in green, and circling italics. Also writing in the margins all necessary instructions to printers. The following anecdote illustrates the hazards of being editorial assistant of the &lt;em&gt;Annals&lt;/em&gt; in the early thirties. A manuscript was submitted by the brilliant Soviet mathematician, Lev Pontryagin. Since paper was then exceptionally scarce in the Soviet Union, Pontryagin had taken wrapping paper, torn it into appropriate-sized pieces, and gone to work on his typewriter. Unfortunately, Pontryagin was blind. The wrapping paper was torn unevenly, and a good portion of the words and symbols in the margins were missing. No matter. The &lt;em&gt;Annals&lt;/em&gt; editorial assistant retyped the paper, supplying all the missing symbols. What a hero!&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;To go once a week to the printers of the &lt;em&gt;Annals of Mathematics&lt;/em&gt; in Baltimore in order to instruct them in the art of typesetting mathematical symbols with subscripts, superscripts, subsubscripts, etc. The &lt;em&gt;Annals of Mathematics&lt;/em&gt; had been printed in Hamburg, Germany by the firm of Lutke and Wolk. In view of increasing anti-Semitism under Hitler, the German connection was given up in favor of printing in the United States. But no American printer had ever before set up mathematical symbols! They were complete illiterates. Solution: Let von Neumann's assistant teach them!&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;To translate into English von Neumann's numerous 100-page papers. Now that von Neumann was a professor in an American institute, it was thought that his papers should appear in English, not German. Since von Neumann was provided with an assistant, it was natural that the assistant should do this.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;You may recall that this was extracted from an article titled &lt;em&gt;Szeged in 1934&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That is because the author, Lorch, decided that he was not cut out for the job, and fled to Hungary.&lt;/p&gt;
&lt;br clear=&quot;all&quot; /&gt;
&lt;/td&gt;
</description>
<pubDate>Mon, 19 Feb 2018 09:34:53 +0000</pubDate>
<dc:creator>AndrewDucker</dc:creator>
<og:title>The duties of John von Neumann's assistant (ANOTHER SHITPOST!!1!)</og:title>
<og:type>article</og:type>
<og:image>https://pic.blog.plover.com/shitpost/TOP.png</og:image>
<og:url>https://shitpost.plover.com/m/math.jobs-you-dont-want.html</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://shitpost.plover.com/m/math.jobs-you-dont-want.html</dc:identifier>
</item>
<item>
<title>Ask HN: Is it &amp;#039;normal&amp;#039; to struggle so hard with work?</title>
<link>https://news.ycombinator.com/item?id=16411662</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=16411662</guid>
<description>This question might come across as dumb, especially for a 30 year old, but I come from a culture where this aspect of work was never emphasized and at this point, I don't know who to ask.
&lt;p&gt;Basically, since as long as I can remember, I've had issues motivating myself to work and focusing on a single task.&lt;/p&gt;&lt;p&gt;I've used everything from rewards (&quot;If I work for X hours, I'll play a video game&quot;) and punishment (&quot;If I don't work for X hours, I'm a complete failure&quot;) to get myself to work.&lt;/p&gt;
&lt;p&gt;I have to come up with elaborate new schemes to get myself to focus. I've tried awarding myself &quot;points&quot; for doing a task, turning my work into a virtual RPG. I've tried keeping elaborate spreadsheets of my work habits. I've tried the Seinfeld method of mapping out my &quot;win&quot; and &quot;fail&quot; days.&lt;/p&gt;
&lt;p&gt;Essentially, I come up with a new tactic to motivate myself every couple of months. If I don't do so, I find myself struggling to meet my goals and distracted.&lt;/p&gt;
&lt;p&gt;Part of the reason for this is perhaps the nature of my work. I'm a freelancer and have been one since I graduated from college. I make a decent enough earning because I've acquired a niche set of in-demand skills. But I struggle to meet deadlines and never have enough dedication to meet any of my long-term tasks (such as building an app or starting a business).&lt;/p&gt;
&lt;p&gt;For years, I thought this was &quot;normal&quot;. But I'm now starting to think that maybe I just don't have a regular case of procrastination.&lt;/p&gt;
&lt;p&gt;Does anyone else feel this way? Is work such a complicated endeavor for you as well? Am I suffering from some form of undiagnosed ADHD?&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 09:03:27 +0000</pubDate>
<dc:creator>throwawayqdhd</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=16411662</dc:identifier>
</item>
<item>
<title>Working remotely, 4 years in</title>
<link>https://jvns.ca/blog/2018/02/18/working-remotely--4-years-in/</link>
<guid isPermaLink="true" >https://jvns.ca/blog/2018/02/18/working-remotely--4-years-in/</guid>
<description>&lt;p&gt;I live in Montreal. 4 years ago, I decided to take a job working remotely for a company based in San Francisco. At the time, I was worried that it wouldn’t work out – I’d never worked remotely before, so it was a pretty big unknown for me. You can see me struggling with it on this blog after &lt;a href=&quot;https://jvns.ca/blog/2014/06/06/working-remote/&quot;&gt;3 months&lt;/a&gt; and &lt;a href=&quot;https://jvns.ca/blog/2014/10/22/working-remote-8-months-in/&quot;&gt;8 months&lt;/a&gt;. But &lt;a href=&quot;https://twitter.com/avibryant&quot;&gt;Avi&lt;/a&gt; (one of the people who interviewed me, who works remotely) convinced me that it was a reasonable thing to try, and I could see that it was working for him, and I &lt;em&gt;really&lt;/em&gt; liked all the people who interviewed me, so I decided to give it a shot.&lt;/p&gt;
&lt;p&gt;It worked out. It obviously hasn’t always been 100% perfect in every way, but working remotely has been a great career move for me. I’ve learned a ton from my coworkers and have been able to do some really cool projects that I’m proud of. So here are some thoughts about what I think has made it work for me.&lt;/p&gt;
&lt;p&gt;As usual this isn’t advice, and I’m not saying that you should work remotely. I’ve only done remote work at one company (Stripe) and I am only one person (even other remotes at Stripe will have different experiences than me!).&lt;/p&gt;
&lt;h3 id=&quot;what-s-scary-about-working-remote&quot;&gt;What’s scary about working remote?&lt;/h3&gt;
&lt;p&gt;When I started writing this post, I &lt;a href=&quot;https://twitter.com/b0rk/status/944620024303702021&quot;&gt;tweeted&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;been working remote for almost 4 years now and was thinking about writing a post about it. what would be useful to say?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got a really overwhelming response – more than a hundred people replied to that tweet with questions! In this post I’m going to try to answer some of those questions.&lt;/p&gt;
&lt;p&gt;I’d venture that the reason people are so curious is that working remote is a big, scary leap, and one that a lot of people are interested in potentially making. I think the questions I got can roughly be broken down into 3 kinds of concerns about working remote:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Personal mental health/productivity concerns: Will I get lonely? Will I be too distracted when working from home? Can I maintain good work/life balance? Will the travel impact my personal life?&lt;/li&gt;
&lt;li&gt;Basic ability to do one’s job: Will I miss out on conversations in the office? How will communication work? Will people forget I exist?&lt;/li&gt;
&lt;li&gt;Career growth: Can I take responsibility for really important projects? Can I get promoted? Can I be a leader?&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I’m going to talk about these in reverse order – I have the least to say about “will I get lonely” because although I think it’s a really important issue and it’s been a struggle for me sometimes, it’s varies a lot from person to person and I’m not sure what to say about it other than “leaving your house is generally a good idea” :)&lt;/p&gt;
&lt;h3 id=&quot;what-s-good-about-working-remote&quot;&gt;What’s good about working remote?&lt;/h3&gt;
&lt;p&gt;Before we get into the struggles of working remote, let’s talk about some of the benefits!&lt;/p&gt;
&lt;p&gt;The two main benefits are the obvious ones – I get to live where I want (Montreal) and have the job that I want. And San Francisco tech companies in general pay a lot more than Montreal tech companies, so working for a SF tech company while living outside SF is great.&lt;/p&gt;
&lt;p&gt;A few other benefits:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I have a lot of control over my working environment. It’s relatively easy to close Slack and focus.&lt;/li&gt;
&lt;li&gt;I basically haven’t had to set an alarm for 4 years.&lt;/li&gt;
&lt;li&gt;There’s a nice community of remotes across the company. I’ve gotten to know a lot of wonderful people.&lt;/li&gt;
&lt;li&gt;I can work from another city/country if I want (like I went to Berlin for 6 weeks in 2016 and it wasn’t disruptive, especially since my 2 teammates at the time lived in Europe).&lt;/li&gt;
&lt;li&gt;I live in a slightly shifted timezone (3 hours ahead of many people I work with), so I can get stuff done before anybody gets to work.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;let-s-talk-about-career-development&quot;&gt;Let’s talk about career development&lt;/h3&gt;
&lt;p&gt;Here’s a question from Twitter!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think it’d be great to read about your experiences around career development (promotions, mentoring). I hear from a lot of remote devs that they mostly accept it’s not possible. And I’d also be interested to know about your experiences being mentored.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While working remote, I’ve been promoted more than once, mentored an intern, led large projects, made major organizational changes (I redid our engineering ladders last year), taught onboarding classes for new developers, and learned a lot from a lot of fantastic people. I am not a manager, but my current manager is remote and I think he does a fantastic job.&lt;/p&gt;
&lt;p&gt;I think the main reason that this has worked for me is that I work in an organization which has a lot of remotes and very good support for remotes. A few other things that have helped me:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Communicate a lot. (write lots of emails! Have lots of 1:1 conversations! Maybe overcommunicate!)&lt;/li&gt;
&lt;li&gt;Maintain a good network of people on various teams&lt;/li&gt;
&lt;li&gt;Have great remote role models that inspire me &amp;amp; show me that I can also be successful while working remote&lt;/li&gt;
&lt;li&gt;Have a lot of people who have invested a lot in helping me be successful ❤ (which i try to pay forward when I can)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;How do you learn from your colleagues remotely?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I work at a company with a huge number of really talented people. I was worried that I wouldn’t be able to learn from them because I work remotely. I don’t think this has been true (I learned a lot!).&lt;/p&gt;
&lt;p&gt;However! When working remotely I do think you have to be much more intentional about how you construct your relationships with your coworkers. If I don’t explicitly decide to talk to someone, it’s very possible that I’ll literally never talk to them. (like there’s no chance I’ll run into them serendipitously in the office).&lt;/p&gt;
&lt;p&gt;Here are 3 different ways I’ve learned from more experienced people.&lt;/p&gt;
&lt;p&gt;Way 1: Meet 1:1 with the person every week.&lt;/p&gt;
&lt;p&gt;One pattern that has been incredibly valuable is – meet with $person (on my team) 1:1 every week for months/years and get advice from them about whatever I’m currently working on. One important thing to me in this kind of relationship is that the person be continuously invested/engaged in my work – it’s way more useful to get advice from someone who’s familiar with everything I’ve been doing for the last year than from someone just swooping in with their thoughts.&lt;/p&gt;
&lt;p&gt;Way 2: Work with the person on a specific project.&lt;/p&gt;
&lt;p&gt;Earlier this year, I wanted to improve our engineering levels. I don’t think I could have done this on my own, but I partnered with someone more experienced to do it! I did all the legwork (writing the initial level definitions, interviewing, getting feedback, incorporating that feedback, writing the final document), and he helped me make sure I was approaching the project in the right way and getting feedback from the right people. I learned a lot from this!&lt;/p&gt;
&lt;p&gt;Way 3: Ask the person a question every few months.&lt;/p&gt;
&lt;p&gt;There are a few people who I talk to pretty infrequently (maybe once every few months) but when I talk to them it’s very helpful! I usually try to go to them with really specific questions about things I know that they know a lot about. For example, I had a very useful conversation about what it means to be a tech lead with a tech lead on another team recently!&lt;/p&gt;
&lt;h3 id=&quot;remote-communication&quot;&gt;Remote communication&lt;/h3&gt;
&lt;p&gt;A &lt;em&gt;ton&lt;/em&gt; of people asked me questions about what I think of as sort of basic job health – how do you make sure your coworkers don’t ignore you / leave you out of discussions, how do you communicate, etc.&lt;/p&gt;
&lt;p&gt;My current theory about this is – as long as I work on a team with a lot of other remotes, everything will be fine. Working as the only remote on a team of people who are all in person seems like hard mode – I have never done it and I’m not that interested in trying that. That said, I’ve tried to answer a few specific questions here. Here they are!&lt;/p&gt;
&lt;h3 id=&quot;how-do-you-stay-plugged-into-spontaneous-conversations-around-the-office&quot;&gt;How do you stay plugged into spontaneous conversations around the office?&lt;/h3&gt;
&lt;p&gt;I don’t. My team (if I’m counting right) is 50% remote (6 remotes, 6 people in the office). I think engineering overall is maybe 20-25% remote but I’m not sure.&lt;/p&gt;
&lt;p&gt;I think this is actually a really important point to understand about remote work – on the remote teams I’ve been on, the the whole team has adopted a working style where all important team communication happens over Slack / video calls / email. IMO if your team is mostly remote, you’re forced to adopt a remote-first working style.&lt;/p&gt;
&lt;h3 id=&quot;how-do-you-have-idle-watercooler-discussions&quot;&gt;How do you have idle/watercooler discussions?&lt;/h3&gt;
&lt;p&gt;Spontaneous conversations with coworkers are really important though! I have 2 things I do to make sure I’m talking to people in an unstructured way from time to time.&lt;/p&gt;
&lt;p&gt;First, I have 5-6 weekly 1:1s with different people with no agenda. Most of them are with people on my team, and I talk to 1 person not on my team. I find these really helpful for talking through things we’re working on and what’s going on in the company. The other thing I do is – when I visit San Francisco where the main office is, I schedule lots of 30-minute chats with people just to catch up. These are a huge part of staying connected for me!&lt;/p&gt;
&lt;p&gt;One weird thing about the pattern of having weekly 1:1s with the same 5-6 people is – it means the number of people at work who I regularly talk to face-to-face is pretty small. This seems to be work okay but it’s definitely different from how my work relationships would look if I worked in an office.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://donut.ai&quot;&gt;https://donut.ai&lt;/a&gt; is a cool system for pairing people up at random to talk and I’ve liked it when I’ve used it.&lt;/p&gt;
&lt;h3 id=&quot;what-happens-if-you-spend-a-week-stuck-on-a-problem&quot;&gt;What happens if you spend a week stuck on a problem?&lt;/h3&gt;
&lt;p&gt;One concern I hear sometimes is – if you’re struggling for a week to fix a bug, will people notice? Or will people just think you’re not doing anything that week?&lt;/p&gt;
&lt;p&gt;I haven’t found this to be a big problem – sometimes I’ll spend 1 week trying to debug the same issue. I just make sure I communicate to my team that’s what I’m doing! Once I realize it’s going to take a while to fix, I try to tell people I’m planning to spend a long time working on the bug because I think it’s serious and worth spending time on (which is good, because if someone disagrees, we can talk about it!), document my progress, and I’ll generally talk about what I’m struggling with in Slack or in my 1:1 meetings with people throughout the week. Sometimes they’ll have ideas that help get me unstuck!&lt;/p&gt;
&lt;p&gt;So if I spend a week working on a tricky bug, the result is people usually understand why I spent so long working on it, and once it’s fixed we can celebrate!&lt;/p&gt;
&lt;h3 id=&quot;calendar-management&quot;&gt;Calendar management&lt;/h3&gt;
&lt;p&gt;One challenging thing about all these weekly meetings I use to communicate is making sure I don’t fragment my calendar too much – it’s important to have enough time to focus! The meetings are all important – if I didn’t have the meetings, I’d be out of touch and couldn’t make decisions about what I should be &lt;em&gt;doing&lt;/em&gt; with my focus time – but it’s important not to let them take over :)&lt;/p&gt;
&lt;p&gt;here are things I do to keep my calendar under control so I have time to focus and can leave work on time:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;try to cluster meetings together (have a 1.5 hour meeting block so I only get interrupted once)&lt;/li&gt;
&lt;li&gt;block off 4-hour chunks of “focus time” in my calendar. People are good at respecting that.&lt;/li&gt;
&lt;li&gt;add an “end of day” block on my calendar at 5:30pm EST every day. This means that people know not to schedule things with me after I’m done for the day. Sometimes it’s unavoidable because 5:30 EST is 2:30 in the home office, but people are really respectful and always ask if it’s okay first.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;i-m-not-an-introvert-and-i-like-working-remotely&quot;&gt;I’m not an introvert, and I like working remotely&lt;/h3&gt;
&lt;p&gt;One stereotype about remote workers is that we’re all introverts! I’m not sure if I’m really an introvert – I really like having people around me and talking to people helps me think. I think it can actually be really &lt;strong&gt;useful&lt;/strong&gt; to be somewhat extroverted when working remotely, for a few reasons.&lt;/p&gt;
&lt;p&gt;When I started out, I needed to learn a lot of things pretty quickly to get started – at the time I was working with Hadoop and doing a bunch of data engineering, and I had literally never heard of Hadoop. It was really important for me then (and now!) not to be too self-conscious about asking questions when I didn’t know what something was or was stuck.&lt;/p&gt;
&lt;p&gt;It’s also important to actively cultivate relationships with the people who I work with, so when in San Francisco I spend a ton of time talking to people (like I’ll often have nonstop meetings for several hours). I think if I was more of an introvert it would be really exhausting to do that.&lt;/p&gt;
&lt;p&gt;Also I think it can be a little easier for your work to get kind of lost / unrecognized when working remote. So it’s been useful for me to err on the side of overcommunicating about what I’m up to and what I’m planning.&lt;/p&gt;
&lt;h3 id=&quot;what-s-the-setup-like-for-meetings-with-people-in-the-office-does-it-work-well&quot;&gt;What’s the setup like for meetings with people in the office, does it work well?&lt;/h3&gt;
&lt;p&gt;There are basically 2 possibilities either I’m having a 1:1 meeting with someone (where we just use their webcam / laptop microphone), or I’m in a group meeting and we use a conference room’s A/V setup.&lt;/p&gt;
&lt;p&gt;Meeting rooms have a really good A/V setup I can always hear people well and they can hear me well and see me. This is a huge deal – it can be really alienating to be in a meeting where people can’t hear you well and you have to keep repeating yourself. I can’t imagine working remotely without good videoconferencing technology.&lt;/p&gt;
&lt;h3 id=&quot;how-do-you-stay-productive-and-also-separate-work-life-at-home&quot;&gt;How do you stay productive and also separate work/life at home?&lt;/h3&gt;
&lt;p&gt;I try to stop working by 6pm or so. I usually work from my couch but have a coworking space I go to sometimes and sometimes work from cafes. A lot of people have written a lot about how it’s important to maintain a really clear work/life separation at home (have an office, use a coworking space). I won’t argue with them but I don’t really do that.&lt;/p&gt;
&lt;p&gt;I’m used to working at home and now I find being at the main office a lot more distracting than working from home.&lt;/p&gt;
&lt;h3 id=&quot;working-remote-is-a-huge-change&quot;&gt;Working remote is a huge change&lt;/h3&gt;
&lt;p&gt;This is a pretty positive post because I enjoy working remotely now and I think it’s worked out well, but I think it’s important to understand that it’s a huge change in working style. I’ve had to be a lot more careful and intentional about how I communicate with people at work. I really struggled with feeling lonely/disconnected for at least a year after I started – it was a big adjustment and I think even a year or so after I started it wasn’t totally clear to me if it was something that was going to work for me long term.&lt;/p&gt;
&lt;p&gt;These days I have a good grasp of how to communicate with folks, I know what to do if I start to feel a little disconnected, and I’ve been able to do work I’m proud of and I think even change the engineering culture at work a little bit :). I don’t feel like working remote ever gets in the way of anything I want to accomplish.&lt;/p&gt;
&lt;p&gt;I’m really glad that the folks who hired me took a chance and hired me to work remotely for them even though I’d never done it before!&lt;/p&gt;
</description>
<pubDate>Mon, 19 Feb 2018 07:39:56 +0000</pubDate>
<dc:creator>samdk</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://jvns.ca/blog/2018/02/18/working-remotely--4-years-in/</dc:identifier>
</item>
</channel>
</rss>