<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Bitcoin: A Peer-to-Peer Electronic Cash System (2008) [pdf]</title>
<link>https://bitcoin.org/bitcoin.pdf</link>
<guid isPermaLink="true" >https://bitcoin.org/bitcoin.pdf</guid>
<description>&lt;a href=&quot;https://bitcoin.org/bitcoin.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Fri, 08 Dec 2017 23:56:42 +0000</pubDate>
<dc:creator>sova</dc:creator>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://bitcoin.org/bitcoin.pdf</dc:identifier>
</item>
<item>
<title>Apple is close to acquiring Shazam, sources say</title>
<link>https://techcrunch.com/2017/12/08/sources-apple-is-acquiring-music-recognition-app-shazam/</link>
<guid isPermaLink="true" >https://techcrunch.com/2017/12/08/sources-apple-is-acquiring-music-recognition-app-shazam/</guid>
<description>&lt;img src=&quot;https://tctechcrunch2011.files.wordpress.com/2017/12/shazam-app-icon-ios.jpg?w=738&quot; class=&quot;&quot;/&gt;&lt;p id=&quot;speakable-summary&quot;&gt;As &lt;a target=&quot;_blank&quot; href=&quot;https://techcrunch.com/2017/12/08/spotify-tencent-share-swap/&quot; rel=&quot;noopener&quot;&gt;Spotify continues to inch towards a public listing&lt;/a&gt;, Apple is making a move of its own to step up its game in music services. Sources tell us that the company is close to acquiring &lt;a target=&quot;_blank&quot; href=&quot;http://shazam.com&quot; rel=&quot;noopener&quot;&gt;Shazam&lt;/a&gt;, the popular app that lets people identify any song, TV show, film or advert in seconds, by listening to an audio clip or (in the case of, say, an ad) a visual fragment, and then takes you to content relevant to that search.&lt;/p&gt;&lt;p&gt;We have heard that the deal is being signed this week, and will be announced on Monday, although that could always change.&lt;/p&gt;
&lt;p&gt;One source describes the deal as in the nine figures; another puts it at around £300 million ($401 million). We are still asking around. Notably, though, the numbers we’ve heard are lower than the $1.02 billion (according to &lt;a target=&quot;_blank&quot; href=&quot;https://my.pitchbook.com/profile/50961-79/company/profile#board-members&quot; rel=&quot;noopener&quot;&gt;PitchBook&lt;/a&gt;) post-money valuation the company had in its last funding round, in 2015.&lt;/p&gt;
&lt;p&gt;In all, Shazam has raised &lt;a target=&quot;_blank&quot; href=&quot;https://www.crunchbase.com/organization/shazam&quot; rel=&quot;noopener&quot;&gt;$143.5 million&lt;/a&gt; from investors that include Kleiner Perkins, London’s DN Capital, IVP and strategic investors Sony Music, Universal Music and Access Industries (which owns Warner Music). Kleiner Perkins &lt;a target=&quot;_blank&quot; href=&quot;https://www.crunchbase.com/organization/soundhound&quot; rel=&quot;noopener&quot;&gt;also invested in competitor SoundHound.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Shazam last noted that it passed 1 billion downloads, but that was back in September 2016, meaning those numbers are likely higher now.&lt;/p&gt;
&lt;p&gt;But in the world of apps, high numbers do not always translate into profits: In September 2017, &lt;a target=&quot;_blank&quot; href=&quot;https://s3-eu-west-1.amazonaws.com/document-api-images-prod/docs/Yhb2RxavnLbT2QmOqLhydDxzXM458NXoUw5X-14BA5k/application-pdf?AWSAccessKeyId=ASIAJY5NVDNGCTLIHP6A&amp;amp;Expires=1512756227&amp;amp;Signature=WK7%2F2Hi6QubIDngTPYm6Nmr35r0%3D&amp;amp;x-amz-security-token=FQoDYXdzEKf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDNK%2Bgc5aMHtEZ%2B2A5SK3A1GdjsAmjAwnRPKhysiqULTcqXEn6WGMqVdR6AZGBqoxLXl06xj7H0N%2FErbRs5MESI6OLhIOD3Jteeaofuo2ZhgMgvUObKQAf3oppHUZCXyWWK9bCSOKredAG%2FsUWEx72nUnsdax%2BHszEnR3z3Z%2Bsy23zO3W1uuT7q3uAlJgL60f%2Bd4nxX%2BI2oZF82A9Sx%2FA7V3sgzkJOmpX4ayvb2Pghr%2Bx5TGN82OnfRg12AWCHEyMBzwqAKHP1T5RRL8e3YSmMJFwSCSBebwlToVLTDrq28638%2FJYSHJMovMZum0hh6MzxtUT8YCVjg5YNPcA7Z9euvtZygGcHTJBvPtJrkoiwLj4M0fXQMwsvuKNXLpiFPtdeDjU5RLUZxni7rGx45k9B8XTGLMbLlUHNCCJ9tSjKRZHA6lP3cppaLFJ4s5ag0FBooRh0z3ZzaFERpsZFNaePEUax2H8lqfR7%2FLscyZzDua2iPirTPG2KKDAnDFPXEJWcTBaY%2B%2FlBmH2gh12yD1iWWsteToYoa7qE9g85xTj7OjzsAcibPOH6LrQ3Af57fmp3dEo0LNRFqcmwUPSHI51%2BDSXTPgmqdUo3LOq0QU%3D&quot; rel=&quot;noopener&quot;&gt;Shazam reportedly&lt;/a&gt; made £40.3 million ($54 million) in revenues in its 2016 fiscal year, which was a turnaround from the declines between FY 2014 and 2015. It made a statutory pre-tax loss of £4 million ($5.3 million) in 2016, which was still a loss but significantly smaller than the £16.6 million loss in FY 2015.&lt;/p&gt;
&lt;p&gt;The company’s CEO Rich Riley noted earlier this year, however, that operating at or near profitability is the intention as it’s been growing; and he also hinted that the company was, as a result, likely an &lt;a target=&quot;_blank&quot; href=&quot;http://www.businessinsider.de/shazam-ceo-rich-riley-interview-shazam-codes-and-snapchat-integration-2017-3?r=US&amp;amp;IR=T&quot; rel=&quot;noopener&quot;&gt;acquisition target&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Shazam launched way back in 1999, well before the days of apps, as a service you reached by way of a SMS code — in fact, its first name was 2580, after the number you typed in the UK to access the service.&lt;/p&gt;

&lt;p&gt;Since those early days, it’s launched a number of related services. Artists on Shazam lets you follow famous people and see what music they are Shazamming.&lt;/p&gt;
&lt;p&gt;Its augmented reality brand marketing service lets you discover content based on pictures that you snap with the app. “You came for music, stay to experience McDonald’s Karaoke, MTN Dew VR Racing and much more,” is the company’s pitch on this feature.&lt;/p&gt;
&lt;p&gt;It also integrates with other apps like Snapchat and Apple’s Siri, and it &lt;a target=&quot;_blank&quot; href=&quot;http://www.wsj.com/articles/music-app-maker-shazam-finally-turns-a-profitbut-not-from-music-1475134203&quot; rel=&quot;noopener&quot;&gt;currently sends lots of traffic&lt;/a&gt; to other music apps like Spotify and Apple Music, which pays it when those clicks convert to purchases.&lt;/p&gt;
&lt;p&gt;It’s not clear what will carry on post acquisition, and which of these might be something that Apple would integrate into its own business (and how), but it’s notable that much of what Shazam does is very synergistic with what Apple is working on already: AR, and more features to attract more users to the Apple Music platform.&lt;/p&gt;
&lt;p&gt;Apple has made dozens of other acquisitions, and one of the biggest has been in the area of music: it &lt;a target=&quot;_blank&quot; href=&quot;https://techcrunch.com/2014/05/28/apple-buys-beats-electronics-for-3b/&quot; rel=&quot;noopener&quot;&gt;acquired Beats for $3 billion&lt;/a&gt; in 2014, which became the basis for Apple Music. That service has around 30 million users as of September of this year. As a point of comparison, Spotify has over 60 million paying subscribers, with 140 million overall.&lt;/p&gt;
&lt;p&gt;We’ve reached out to Shazam and Apple for comment. We’ll update this story as we learn more.&lt;/p&gt;
&lt;small&gt;Featured Image: TechCrunch&lt;/small&gt;</description>
<pubDate>Fri, 08 Dec 2017 20:46:31 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:title>Sources: Apple is acquiring music recognition app Shazam</og:title>
<og:description>As Spotify continues to inch towards a public listing, Apple is making a move of its own to step up its game in music services. Sources tell us that the..</og:description>
<og:image>https://tctechcrunch2011.files.wordpress.com/2017/12/shazam-app-icon-ios.jpg</og:image>
<og:url>http://social.techcrunch.com/2017/12/08/sources-apple-is-acquiring-music-recognition-app-shazam/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2017/12/08/sources-apple-is-acquiring-music-recognition-app-shazam/</dc:identifier>
</item>
<item>
<title>Clojure 1.9 is now available</title>
<link>http://blog.cognitect.com/blog/clojure19</link>
<guid isPermaLink="true" >http://blog.cognitect.com/blog/clojure19</guid>
<description>&lt;div class=&quot;sqs-layout sqs-grid-12 columns-12&quot; data-layout-label=&quot;Post Body&quot; data-type=&quot;item&quot; data-updated-on=&quot;1512752008522&quot; id=&quot;item-5a2ac1fef9619aeb0ad70bd3&quot;&gt;
&lt;div class=&quot;row sqs-row&quot;&gt;
&lt;div class=&quot;col sqs-col-12 span-12&quot;&gt;
&lt;div class=&quot;sqs-block image-block sqs-block-image sqs-col-5 span-5 float float-right&quot; data-block-type=&quot;5&quot; id=&quot;block-yui_3_17_2_1_1512751524004_21628&quot;&gt;
&lt;div class=&quot;sqs-block-content&quot;&gt;
&lt;div class=&quot;image-block-outer-wrapper layout-caption-hidden design-layout-inline&quot;&gt;
&lt;div class=&quot;intrinsic&quot;&gt;
&lt;div class=&quot;image-block-wrapper has-aspect-ratio&quot; data-description=&quot;&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://static1.squarespace.com/static/5372821be4b0aefc6719057e/t/5a2ac244e2c483448c9ca916/1512752241497/clojure.png&quot; alt=&quot;clojure.png&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;thumb-image&quot; alt=&quot;clojure.png&quot; data-src=&quot;https://static1.squarespace.com/static/5372821be4b0aefc6719057e/t/5a2ac244e2c483448c9ca916/1512752241497/clojure.png&quot; data-image=&quot;https://static1.squarespace.com/static/5372821be4b0aefc6719057e/t/5a2ac244e2c483448c9ca916/1512752241497/clojure.png&quot; data-image-dimensions=&quot;150x150&quot; data-image-focal-point=&quot;0.5,0.5&quot; data-load=&quot;false&quot; data-image-id=&quot;5a2ac244e2c483448c9ca916&quot; data-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sqs-block html-block sqs-block-html&quot; data-block-type=&quot;2&quot; id=&quot;block-a53f8ee0b7f030ad6cab&quot;&gt;
&lt;div class=&quot;sqs-block-content&quot;&gt;
&lt;p&gt;Clojure 1.9 is now available! &lt;/p&gt;
&lt;p&gt;Clojure 1.9 introduces two major new features: integration with spec and command line tools.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;spec&lt;/strong&gt; (&lt;a href=&quot;https://clojure.org/about/spec&quot;&gt;rationale&lt;/a&gt;, &lt;a href=&quot;https://clojure.org/guides/spec&quot;&gt;guide&lt;/a&gt;) is a library for describing the structure of data and functions with support for:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Validation&lt;/li&gt;
&lt;li&gt;Error reporting&lt;/li&gt;
&lt;li&gt;Destructuring&lt;/li&gt;
&lt;li&gt;Instrumentation&lt;/li&gt;
&lt;li&gt;Test-data generation&lt;/li&gt;
&lt;li&gt;Generative test generation&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Clojure integrates spec via two new libraries (still in alpha):&lt;/p&gt;
&lt;p&gt;This modularization facilitates refinement of spec separate from the Clojure release cycle.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;command line tools&lt;/strong&gt; (&lt;a href=&quot;https://clojure.org/guides/deps_and_cli&quot;&gt;guide&lt;/a&gt;, &lt;a href=&quot;https://clojure.org/reference/deps_and_cli&quot;&gt;reference&lt;/a&gt;) provide:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Quick and easy install&lt;/li&gt;
&lt;li&gt;Clojure REPL and runner&lt;/li&gt;
&lt;li&gt;Use of Maven and local dependencies&lt;/li&gt;
&lt;li&gt;A functional API for classpath management (&lt;a href=&quot;https://github.com/clojure/tools.deps.alpha&quot;&gt;tools.deps.alpha&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The installer is available for Mac developers in brew, for Linux users in a script, and for more platforms in the future.&lt;/p&gt;
&lt;p&gt;For more information, see the &lt;a href=&quot;https://github.com/clojure/clojure/blob/master/changes.md&quot;&gt;complete list&lt;/a&gt; of all changes in Clojure 1.9 for more details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thanks to all of the community members who contributed to Clojure 1.9 (first time contributors in bold):&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adam Clements&lt;/strong&gt;&lt;br/&gt;Andy Fingerhut&lt;br/&gt;Brandon Bloom&lt;br/&gt;&lt;strong&gt;Cameron Desautels&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Chad Taylor&lt;/strong&gt;&lt;br/&gt;Chris Houser&lt;br/&gt;&lt;strong&gt;David Bürgin&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Eli Lindsey&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Gerrit Jansen Van Vuuren&lt;/strong&gt;&lt;br/&gt;Ghadi Shayban&lt;br/&gt;&lt;strong&gt;Greg Leppert&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Jason Whitlark&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Johan Mena&lt;/strong&gt;&lt;br/&gt;Jozef Wagner&lt;br/&gt;&lt;strong&gt;Lee Yen-Chin&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Matthew Boston&lt;/strong&gt;&lt;br/&gt;Michael Blume&lt;br/&gt;Michał Marczyk&lt;br/&gt;Nicola Mometto&lt;br/&gt;&lt;strong&gt;Ruslan Al-Fakikh&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Steffen Dienst&lt;/strong&gt;&lt;br/&gt;Steve Miner&lt;br/&gt;&lt;strong&gt;Yegor Timoshenko&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Zhuang XiaoDan&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 08 Dec 2017 19:51:39 +0000</pubDate>
<dc:creator>myth_drannon</dc:creator>
<og:title>Clojure 1.9</og:title>
<og:url>http://blog.cognitect.com/blog/clojure19</og:url>
<og:type>article</og:type>
<og:description>Clojure 1.9 is now available!  Clojure 1.9 introduces two major new features: integration with spec and command line tools. spec (rationale, guide) is a library for describing the structure of data and functions with support for: Validation Error reporting Destructuring Instrumentation Test-data gen</og:description>
<og:image>http://static1.squarespace.com/static/5372821be4b0aefc6719057e/t/5a2ac244e2c483448c9ca916/1512752241497/clojure.png?format=1000w</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.cognitect.com/blog/clojure19</dc:identifier>
</item>
<item>
<title>Mozilla’s revenue increased significantly in 2016</title>
<link>https://www.ghacks.net/2017/12/02/mozillas-revenue-increased-significantly-in-2016/</link>
<guid isPermaLink="true" >https://www.ghacks.net/2017/12/02/mozillas-revenue-increased-significantly-in-2016/</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;p&gt;Mozilla, makers of the Firefox web browser, &lt;a href=&quot;https://www.mozilla.org/en-US/foundation/annualreport/2016/&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;released&lt;/a&gt; the State of Mozilla annual financial report for the year 2016, and things could not look better from a financial point of view.&lt;/p&gt;
&lt;p&gt;The Mozilla Foundation and subsidiaries saw revenue increase in 2016 by 99 million US Dollars from 421 million US Dollars &lt;a href=&quot;https://www.ghacks.net/2016/12/02/mozilla-is-doing-well-financially/&quot; data-wpel-link=&quot;internal&quot;&gt;in 2015&lt;/a&gt; to 520 million US Dollars in 2016.&lt;/p&gt;
&lt;p&gt;Expenses on the other hand did not increase at the same rate. Expenses sat at 337 million US Dollars in 2015, and are reported as 360 million US Dollars in 2016.&lt;/p&gt;
&lt;p&gt;The bulk of the revenue, 503 million out of the 520 million US Dollars comes from royalties. While Mozilla does not provide details on those, the bulk here comes from deals with companies like Yahoo, Baidu or Yandex which get their search engines promoted in Firefox.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-139271&quot; src=&quot;https://cdn.ghacks.net/wp-content/uploads/2017/12/mozilla-revenue-2016.png&quot; alt=&quot;mozilla revenue 2016&quot; width=&quot;682&quot; height=&quot;394&quot; srcset=&quot;//cdn.ghacks.net/wp-content/uploads/2017/12/mozilla-revenue-2016.png 682w, //cdn.ghacks.net/wp-content/uploads/2017/12/mozilla-revenue-2016-660x381.png 660w, //cdn.ghacks.net/wp-content/uploads/2017/12/mozilla-revenue-2016-100x58.png 100w&quot; sizes=&quot;(max-width: 682px) 100vw, 682px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ghacks.net/2014/11/19/the-next-firefox-default-search-engine-yahoo-search/&quot; data-wpel-link=&quot;internal&quot;&gt;Mozilla changed its strategy in regards to search engines in Firefox in 2014&lt;/a&gt; when it switched from selecting one global partner to selecting regional partners instead. The organization selected Yahoo as the default search provider in the United States for instance, and agreed on a five year contract that made Yahoo the default in the US for that time.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ghacks.net/2017/11/15/mozilla-drops-yahoo-as-firefoxs-default-search-provider/&quot; data-wpel-link=&quot;internal&quot;&gt;Mozilla ditched Yahoo recently&lt;/a&gt; however in favor of Google, two years before the five year contract would be up for renewal. The terms of the new deal with Google have not been revealed yet, and it remains to be seen whether this new deal will give Mozilla's revenue another boost in 2017.&lt;/p&gt;
&lt;p&gt;The organization launched Firefox 57, a new version of the web browser recently designed to future proof Firefox by dropping legacy components and focusing on WebExtensions instead, an inter-browser standard that most web browsers support these days.&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;ctaText&quot;&gt;Read also:&lt;/span&gt;  &lt;span class=&quot;postTitle&quot;&gt;Where are those Anonymous Firefox add-on ratings coming from?&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The impact this move has on Mozilla won't be seen until the organization releases its 2018 report, considering that the switch happened at the end of the year.&lt;/p&gt;
&lt;h3&gt;Closing Words&lt;/h3&gt;
&lt;p&gt;It is a good thing that Mozilla is doing well financially. While the organization's revenue pales in comparison to Google's, Microsoft's or Apple's, its approach to development, privacy and openness is refreshingly different from that of the other major players in the browser market.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now You:&lt;/strong&gt; What do you think will Mozilla focus on in 2018 and beyond?&lt;/p&gt;
&lt;div id=&quot;snippet-box&quot;&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/Article&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;snippet-image&quot; itemprop=&quot;image&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/ImageObject&quot;&gt;&lt;img width=&quot;180&quot; src=&quot;https://cdn.ghacks.net/wp-content/uploads/2017/12/mozilla-revenue-2016.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aio-info&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Article Name&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;headline&quot;&gt;Mozilla's revenue increased significantly in 2016&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;description&quot;&gt;Mozilla, makers of the Firefox web browser, released the State of Mozilla annual financial report for the year 2016, and things could not look better from a financial point of view.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Author&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;name&quot;&gt;Martin Brinkmann&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Publisher&lt;/p&gt;
&lt;div itemprop=&quot;publisher&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/Organization&quot;&gt;
&lt;p&gt;&lt;span itemprop=&quot;name&quot;&gt;Ghacks Technology News&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Logo&lt;/p&gt;
&lt;div class=&quot;snippet-data-img&quot; itemprop=&quot;logo&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/ImageObject&quot;&gt;&lt;img width=&quot;180&quot; src=&quot;https://cdn.ghacks.net/wp-content/uploads/2005/10/ghacks-technology-news.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;&lt;div id=&quot;post-author&quot;&gt;
&lt;div class=&quot;profile-content&quot; readability=&quot;29.099041533546&quot;&gt;
&lt;h4&gt;About Martin Brinkmann&lt;/h4&gt;
&lt;p&gt;Martin Brinkmann is a journalist from Germany who founded Ghacks Technology News Back in 2005. He is passionate about all things tech and knows the Internet and computers like the back of his hand.&lt;/p&gt;
&lt;p&gt;You can follow Martin on &lt;a href=&quot;https://www.facebook.com/ghacks&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ghacks&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://plus.google.com/115604903045061277330?rel=author&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;Google+&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;&lt;p id=&quot;breadcrumbs&quot;&gt;You are here: &lt;span xmlns:v=&quot;http://rdf.data-vocabulary.org/#&quot;&gt;&lt;span typeof=&quot;v:Breadcrumb&quot;&gt;&lt;a href=&quot;https://www.ghacks.net/&quot; rel=&quot;v:url&quot; property=&quot;v:title&quot; data-wpel-link=&quot;internal&quot;&gt;Home&lt;/a&gt; &amp;gt; &lt;span rel=&quot;v:child&quot; typeof=&quot;v:Breadcrumb&quot;&gt;&lt;a href=&quot;https://www.ghacks.net/category/firefox/&quot; rel=&quot;v:url&quot; property=&quot;v:title&quot; data-wpel-link=&quot;internal&quot;&gt;Firefox&lt;/a&gt; &amp;gt; &lt;span class=&quot;breadcrumb_last&quot;&gt;Mozilla’s revenue increased significantly in 2016&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</description>
<pubDate>Fri, 08 Dec 2017 18:06:04 +0000</pubDate>
<dc:creator>tiff</dc:creator>
<og:type>article</og:type>
<og:title>Mozilla's revenue increased significantly in 2016 - gHacks Tech News</og:title>
<og:description>Mozilla, makers of the Firefox web browser, released the State of Mozilla annual financial report for the year 2016, and things could not look better from a financial point of view.</og:description>
<og:url>https://www.ghacks.net/2017/12/02/mozillas-revenue-increased-significantly-in-2016/</og:url>
<og:image>https://cdn.ghacks.net/wp-content/uploads/2017/12/mozilla-revenue-2016.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ghacks.net/2017/12/02/mozillas-revenue-increased-significantly-in-2016/</dc:identifier>
</item>
<item>
<title>Learn to sell</title>
<link>http://blairreeves.me/2017/12/06/learn-to-sell/</link>
<guid isPermaLink="true" >http://blairreeves.me/2017/12/06/learn-to-sell/</guid>
<description>&lt;p&gt;&lt;span&gt;From time to time, I get asked for career advice. Sometimes it’s folks looking to get into product management, and others just curious about working in technology generally. I’ve thought a lot about what type of advice I can give that would actually be useful.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A big problem with an awful lot of career advice you hear, particularly in tech circles, is that it’s hopelessly tainted by&lt;/span&gt; &lt;a href=&quot;https://xkcd.com/1827/&quot;&gt;&lt;span&gt;survivorship bias&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. Almost all life/career advice from famous rich people is usually useless for this very reason. Beyond that, it seems like the most popular advice you see is “learn to code.” I think this is a mistake, and not very useful for most people. Learning to write code and develop web applications has definitely been a positive in my life, but it’s probably only been marginally advantageous career-wise. I’d certainly encourage anyone to learn, but mostly for personal enrichment, not career advancement.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead, here’s my pitch: go do a stint in Sales. If I were early in my career and looking to boost my long-term trajectory, I think is where I would try to start. Even in mid-career, where I am now, it’s something I think about often. More tech professionals should consider it. Hear me out.&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Sales really, really matters&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;When you listen to the tech industry talk about itself (which it does constantly), it would be easy to think that everyone is a developer; or that developers/engineers are the most important people around, and the only ones who really matter. This is really dumb.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In&lt;/span&gt; &lt;a href=&quot;http://www.buildingforbusiness.com&quot;&gt;&lt;strong&gt;our book on enterprise Product Management&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;, I included this quote from Philip Kotler:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span&gt;“&lt;/span&gt;&lt;em&gt;&lt;span&gt;The sales department isn’t the whole company, but the whole company better be the sales department.&lt;/span&gt;&lt;/em&gt;&lt;span&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;I find it remarkable how little the tech world talks about software sales, given how central it is to everything we do. Sales is the whole reason we build anything; it’s how we assign value to what we do. If someone doesn’t trade some value in exchange for your product, then what you have isn’t really worth anything. It doesn’t matter how brilliant your software engineering is if no one buys it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are certain swaths of the tech startup world that recoil from Sales. There’s a certain fantasy that exists of “products that sell themselves,” which don’t require a company to invest in either the personnel nor company orientation to serve customers. There’s a reason why non-startups don’t have this attitude: the companies that do never break out of the startup phase. Those companies that see Sales as a grubby and unpleasant chore, rather than what the whole company is about, generally don’t last long.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Fortunately, most healthy software companies see Sales as an absolutely core function, which is why pretty much every one is always hiring good salespeople. For those with a hunger to learn, this provides a terrific opportunity.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Sales gets a bad rap&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;On the flip side, software sales suffers from a reputation for growth-hackery, spammy tactics that we all hate. If you work in this field, your inbox is probably as full as mine is of irrelevant and annoying spam email from salespeople whose products you don’t care about. It’s a huge turnoff. Trust me – I get it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But after working with a lot of good enterprise salespeople (as well as some bad ones), one thing I’ve learned is that they&lt;/span&gt; &lt;em&gt;&lt;span&gt;also&lt;/span&gt;&lt;/em&gt; &lt;span&gt;dislike these kinds of “spray and pray” lead-generation tactics. Casting a wide net is simply part of the game, of course, but wasting your prospect’s time is bad selling. Every good sales professional knows this, which is why the best ones put in the time, effort and attention to detail to make their pitches – even the opening ones – as tailored and relevant as possible. That might only mean increasing their response rate from 2% to 3%, but that’s a big lift when you’re talking about warm enterprise software leads.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“Good” sales practices are less widely appreciated because they don’t piss people off and so aren’t constantly discussed. Great salespeople, at every level, are able to contribute value to their company and are quickly recognized as such.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Sales experience is golden&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;No one is more connected with customers than the folks in Sales, and as such, they gain a great deal of political power. Customer feedback, after all, is worth its weight in gold. Outperforming salespeople are quickly recognized and tend to get a direct line to the most senior executives in the company (at least, in any functional firm). Everyone wants to make that year’s President’s Club.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another major bonus to consider is that great salespeople have nearly bulletproof job security. The biggest cause of sales personnel attrition is leaving for another company that offers a more lucrative compensation plan. Salespeople&lt;/span&gt; &lt;em&gt;&lt;span&gt;who perform&lt;/span&gt;&lt;/em&gt; &lt;span&gt;are almost never fired, and among the last to be laid off (for obvious reasons). Of course, others leave because they just want a role that’s slower-paced, or simply aren’t good at customer relations (which is a good reason to get out of Sales).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One downside to all that popularity is that good salespeople sometimes find it hard to transition to a different role, because everyone wants them to stay in Sales. This can be overcome, but the pressure is there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The tradeoff for being such a valuable member of a company is that Sales is really hard work. Everyone knows that Sales is often a high pressure position (get those deals signed before end of quarter!), has a steep learning curve (gotta learn the product fast!) and requires travel. But the thing that scares off most people, I find, is the uncertainty being on a quota compensation plan.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I wish more people understood was that&lt;/span&gt; &lt;em&gt;&lt;span&gt;most&lt;/span&gt;&lt;/em&gt; &lt;span&gt;quota plans are actually less scary than I, too, used to think, and some can even be tailored for individuals (higher base comp versus commission, etc.). Good sales organizations understand that there are factors beyond any individual’s control, and don’t want to lose good employees; but nevertheless, you have to reward performance. If you’re a high-performer, quota compensation plans can be incredibly lucrative, which is a good enough reason as any to consider a Sales gig.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Those gigs come in all sorts of flavors, but the most common varieties are thus:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Entry level:&lt;/strong&gt; Lead Development Reps (LDRs). These are the folks doing the hard work of cold calling, sending tons of emails, doing prospect/company research and developing cold leads into warm ones. Typically you have a couple of LDRs assigned to one Account Executive, but often working with a team of others. Good LDRs usually get promoted to Account Executives.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mid level:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Account Executive – this is a fancy title for “seller” that is called an “executive” to puff prospects’ egos. Often, this person takes warm leads from their assigned LDRs and develops a relationship with a prospect to sell their given portfolio. They are the point person in navigating the account relationship towards a deal.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Solution Consultant (AKA “Sales Engineer”) – this person assists the Account Exec in doing product demos and working with the prospect’s technical team on finer points of implementation and strategy&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Solution Architect – this role is more common in larger companies with multiple product portfolios. This person helps the Account Exec and the prospect design more complicated, cross-portfolio solutions that involve a lot of customization and negotiation over lots of different products&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;For an entry-level candidate, LDR experience can be a trial by fire, but one that gives that person a solid base of experience that they can use. It also tends to pay pretty well – certainly better than the first jobs I did right out of college. If I’d known then what I do now…&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For my own part, I thought seriously about going into a seller position back when I was at IBM. A different role opened up first, though, so I took it instead, and that is part of what has led to my development as a Product Manager today. I like this role, and don’t have any plans to do anything different for now; but down the line, who knows? I, like many other PMs I know, am also attracted to sales engineering roles, because it allows us to keep one foot on the technical and strategic side while also working directly with customers, which is often fun.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Bottom line:&lt;/strong&gt; think about doing Sales, because that’s really where everything starts, and your results are more driven by personal performance than almost anywhere else in a company. Product, Marketing, Customer Success, even Engineering – all of these functions fundamentally derive from what Sales first makes happen, and your sales experience will almost always be considered immensely valuable in those roles down the road.&lt;/span&gt;&lt;/p&gt;


&lt;hr/&gt;&lt;center&gt;
&lt;/center&gt;
</description>
<pubDate>Fri, 08 Dec 2017 16:19:07 +0000</pubDate>
<dc:creator>ntang</dc:creator>
<og:type>article</og:type>
<og:title>Learn to sell - Blair Reeves</og:title>
<og:description>From time to time, I get asked for career advice. Sometimes it’s folks looking to get into product management, and others just curious about working in technology generally. I’ve thought a lot about what type of advice I can give that would actually be useful. A big problem with an awful lot of career advice … Continue reading &quot;Learn to sell&quot;</og:description>
<og:url>http://blairreeves.me/2017/12/06/learn-to-sell/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blairreeves.me/2017/12/06/learn-to-sell/</dc:identifier>
</item>
<item>
<title>Modern Front-end in Rails</title>
<link>https://evilmartians.com/chronicles/evil-front-part-1</link>
<guid isPermaLink="true" >https://evilmartians.com/chronicles/evil-front-part-1</guid>
<description>&lt;div class=&quot;post__intro&quot;&gt;
&lt;p&gt;An opinionated guide to modern, modular, component-based approach to handling your presentation logic in Rails that does not depend on any front-end framework. Follow our three-part tutorial to learn the bare minimum of up-to-date front-end techniques by example and finally make sense of it all.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;heres-to-confused-ones&quot;&gt;Here’s to confused ones&lt;/h2&gt;
&lt;p&gt;Being a fresh Rails full-stack developer out in the wild is a confusing endeavor nowadays. A “classic Rails” way to handle front-end with Asset Pipeline, Sprockets, CoffeeScript and Sass looks outdated in 2017. A lot of choices made back in the times of Rails 3.1 do not live up to modern expectations. Sticking with the “old way” means passing on everything that happened in the front-end community over the past half decade: the rise of &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; as a JavaScript package manager to rule them all, the emergence of ES6 as a go-to JS syntax, the winning streak of &lt;a href=&quot;https://babeljs.io/&quot;&gt;transpilers&lt;/a&gt; and &lt;a href=&quot;https://stateofjs.com/2016/buildtools/&quot;&gt;build tools&lt;/a&gt;, the &lt;a href=&quot;https://twitter.com/codeinarocket/status/914851470599745536&quot;&gt;ever-growing&lt;/a&gt; embrace of &lt;a href=&quot;http://postcss.org/&quot;&gt;PostCSS&lt;/a&gt; as an alternative to CSS pre-processors. Not to mention the astounding success of front-end frameworks like React and Vue that change the very way we think about front-end code: &lt;em&gt;components&lt;/em&gt; instead of “pages”.&lt;/p&gt;
&lt;p&gt;Trying to cram all that complexity in one developer’s head (especially for someone who is just starting out) results in a &lt;a href=&quot;https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4&quot;&gt;well-described&lt;/a&gt; cognitive fatigue.&lt;/p&gt;
&lt;p&gt;However, the feeling of being left behind the pack, the growing difficulty to talk shop with “front-end guys”, and the creeping anxiety about job prospects should not be your only reason to question an established workflow. Programmers are rational people, after all.&lt;/p&gt;
&lt;h2 id=&quot;whats-wrong-with-the-asset-pipeline&quot;&gt;What’s wrong with the Asset Pipeline?&lt;/h2&gt;
&lt;p&gt;Let’s not argue—the “old way” still works. You can still rely on a standard Rails front-end setup (and use CoffeeScript) to achieve results: your view templates, scripts, and styles will still be handled by Asset Pipeline: concatenated, minified, delivered. In production, where it all counts, they will still come in the form of two big unreadable (for humans, at least) files: one for scripts and one for styles.&lt;/p&gt;
&lt;p&gt;As developers, however, we usually care about&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;isolated, reusable, testable code that is easy to reason about;&lt;/li&gt;
&lt;li&gt;short “code change → visible result” cycle;&lt;/li&gt;
&lt;li&gt;straightforward dependency management; and&lt;/li&gt;
&lt;li&gt;well-maintained tools.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sure, “classic” Rails gives our code &lt;em&gt;some structure&lt;/em&gt;: there are separate folders for view templates, javascripts, stylesheets and images. But as the front-end complexity grows, navigating them quickly becomes a cognitive drain.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If we are not careful enough with “classic Rails full-stack way”, we end up with the global dumpster of all things CSS and JS, littered with dead code, in no time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Speed is another reason to consider a switch. The problem is &lt;a href=&quot;https://www.google.com/search?&amp;amp;q=rails%20sprockets%20is%20slow&quot;&gt;well documented&lt;/a&gt; and Heroku even has a dedicated &lt;a href=&quot;https://blog.heroku.com/speeding-up-sprockets&quot;&gt;guide&lt;/a&gt; about optimizing Asset Pipeline performance, admitting that handling assets is the &lt;em&gt;slowest&lt;/em&gt; part of deploying a Rails app: “&lt;em&gt;On average, it’s over 20x slower than installing dependencies via &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;&lt;/em&gt;”.&lt;/p&gt;
&lt;p&gt;In development, changing a line of CSS and reloading a page to see the result may also take some time—and those seconds add up quick.&lt;/p&gt;
&lt;p&gt;What about dependencies? With Asset Pipeline, keeping them up-to-date becomes a major hassle. In order to add a JavaScript library to your project you can either load its code from CDN, cut and paste it into &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/assets&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor/assets&lt;/code&gt;, or wait for someone to wrap it into a gem. Meanwhile, JavaScript community manages the same with a single command: &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; or, most recently, &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn add&lt;/code&gt; . Same goes for updating. Yarn gives us the convenience of Bundler—for JavaScript.&lt;/p&gt;
&lt;p&gt;Finally, Sprockets, the build tool behind Asset Pipeline, does not look well-maintained, and for quite some time:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Sprockets and Webpack GitHub pulse&quot; class=&quot;post-media__object&quot; width=&quot;983&quot; height=&quot;318&quot; src=&quot;https://cdn.evilmartians.com/front/posts/evil-front-part-1/sprockets_webpack_pulse-b3991b5.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Sprockets have become a bit rusty over the last 5 years (left). Webpack’s pulse over the same time frame (right)&lt;/p&gt;
&lt;h2 id=&quot;wind-of-change&quot;&gt;Wind of change&lt;/h2&gt;
&lt;p&gt;In 2017, DHH and Rails community have finally started changing things around. Rails 5.1 &lt;a href=&quot;http://weblog.rubyonrails.org/2017/4/27/Rails-5-1-final/&quot;&gt;brought&lt;/a&gt; us &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt; integration with the &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;webpacker&lt;/a&gt; gem, &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; through &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt;, out-of-the-box support for Babel, React, Vue and PostCSS (and even for &lt;a href=&quot;http://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;, if you are feeling adventurous).&lt;/p&gt;
&lt;p&gt;Asset Pipeline and CoffeeScript, however, still maintain their hold: starting a project with bare &lt;code class=&quot;highlighter-rouge&quot;&gt;rails new&lt;/code&gt; gives you the “good old way”. While searching the web for JS-related topics, you still have to transpile code examples in your head in order to make any sense of them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t fret, though, as your Rails app can adopt all the modern practices &lt;em&gt;now&lt;/em&gt;, and we are going to cover the basics together. All you need to start is some basic knowledge of Rails, JavaScript and CSS. We will also leverage latest Rails 5.1+ features to keep configuration and tooling to the minimum.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this series of tutorials, we will share some of the best practices developed at Evil Martians to build a modern sensible front-end.&lt;/p&gt;
&lt;h2 id=&quot;block-mentality&quot;&gt;Block mentality&lt;/h2&gt;
&lt;p&gt;React teaches us to &lt;a href=&quot;https://reactjs.org/docs/thinking-in-react.html&quot;&gt;think in components&lt;/a&gt;. Other modern front-end frameworks follow the lead. Modularity is the philosophy behind common CSS methodologies such as &lt;a href=&quot;http://getbem.com/introduction/&quot;&gt;BEM&lt;/a&gt;. The idea is simple: every logical part of your UI should be self-contained.&lt;/p&gt;
&lt;p&gt;Rails has a built-in way to break your views into logical parts—&lt;a href=&quot;http://guides.rubyonrails.org/layouts_and_rendering.html#using-partials&quot;&gt;view partials&lt;/a&gt;. But if your partial relies on JavaScript, as any modern component probably does, you have to reach for it in a far-away folder, under &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets/javascripts&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What if we could bring everything together and have partials, their respective scripts and styles together—in the &lt;em&gt;same place&lt;/em&gt;?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That way we can rely on the smarts of modern build tools to only bundle the components we actually use. And whenever we want to change something—we know exactly where to look.&lt;/p&gt;
&lt;p&gt;The approach we are going to showcase does not rely on React, Vue or Elm architecture, and purposefully so: you are free to learn those tools on your own, but you don’t have to take a steep learning curve right now. You can use tools that already come with Rails to gradually adopt a modern front-end mindset.&lt;/p&gt;
&lt;h2 id=&quot;sass-vs-postcss&quot;&gt;Sass vs. PostCSS&lt;/h2&gt;
&lt;p&gt;Rails loves Sass. We, however, tend to stick to PostCSS. First of all, it is &lt;a href=&quot;https://github.com/postcss/benchmark&quot;&gt;36.4 times faster&lt;/a&gt; than the built-in Ruby Sass that handles CSS processing in Rails. It is written in 100% pure JavaScript. It is easily extendable and customisable with &lt;a href=&quot;https://www.postcss.parts/&quot;&gt;numerous plugins&lt;/a&gt;. One of them, &lt;a href=&quot;http://cssnext.io/features/&quot;&gt;cssnext&lt;/a&gt;, comes out of the box and generates polyfills for features that are not supported by browsers yet, but only as long as it is necessary. And you can still use PostCSS on top of your favorite pre-processor—if you ever find a reason for that.&lt;/p&gt;
&lt;h2 id=&quot;what-are-we-building&quot;&gt;What are we building?&lt;/h2&gt;
&lt;p&gt;It is finally time to get our hands dirty. To demonstrate a new approach to front-end, we will build a standard run-of-the-mill chat application with minimal authentication and ActionCable. Let’s call it &lt;code class=&quot;highlighter-rouge&quot;&gt;evil_chat&lt;/code&gt;. The example is not too complex, but is still sophisticated enough to make our experience “full-stack”.&lt;/p&gt;
&lt;p&gt;In our project, we are going to say goodbye to Assets Pipeline and default Rails generators that create a bunch of &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.coffee&lt;/code&gt; files. We are going to keep ERB as the default templating engine, leaving you to explore alternatives like Slim or Haml at your own pace.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;A new frontend folder in your app&quot; class=&quot;post-media__object&quot; width=&quot;812&quot; height=&quot;412&quot; src=&quot;https://cdn.evilmartians.com/front/posts/evil-front-part-1/folder_structure-e863c9b.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;On the left, folder structure for Evil Front&lt;/p&gt;
&lt;p&gt;We are also going to revisit the folder structure. Everything will now happen in the new &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend&lt;/code&gt; folder at the top level of our application. It will replace &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets&lt;/code&gt; completely.&lt;/p&gt;
&lt;p&gt;Don’t worry if it does not quite make sense yet, let’s take it step by step.&lt;/p&gt;
&lt;h2 id=&quot;how-do-i-start-my-project&quot;&gt;How do I start my project?&lt;/h2&gt;
&lt;p&gt;So, bare &lt;code class=&quot;highlighter-rouge&quot;&gt;rails new&lt;/code&gt; doesn’t cut it anymore. Here is your new magic line (we assume the app’s name is &lt;code class=&quot;highlighter-rouge&quot;&gt;evil_chat&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails new evil_chat --skip-coffee --skip-sprockets --skip-turbolinks --webpack --database&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;postgresql  -T
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you see, we no longer need CoffeeScript or any of the &lt;a href=&quot;https://github.com/rails/sprockets-rails&quot;&gt;Sprockets-related&lt;/a&gt; functionality. &lt;code class=&quot;highlighter-rouge&quot;&gt;-T&lt;/code&gt; is optional, it skips creating test files, as testing is beyond the scope of this tutorial. We will use PostgreSQL as our default database with &lt;code class=&quot;highlighter-rouge&quot;&gt;--database=postgresql&lt;/code&gt;, as it will make our app easier to deploy on &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; once we’re done.&lt;/p&gt;
&lt;p&gt;The most important option is &lt;code class=&quot;highlighter-rouge&quot;&gt;--webpack&lt;/code&gt;. It tells Rails to use the &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;webpacker&lt;/a&gt; gem to bundle all our assets with Webpack. Now our project comes with a set of modern tools:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; folder that contains all our JS dependencies (it’s also added to your &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; so you don’t commit thousand of extra files in your repo by mistake)&lt;/li&gt;
&lt;li&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; to declare all your dependencies, as well as &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn.lock&lt;/code&gt; which means you can add packages with a (fancier) &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn add&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.babelrc&lt;/code&gt; file configured for transforming ES6 into JavaScript code compliant with any browser that currently has more than &lt;a href=&quot;http://browserl.ist/?q=%3E+1%25&quot;&gt;1% of market share&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.postcssrc.yml&lt;/code&gt; already configured with &lt;a href=&quot;https://www.npmjs.com/package/postcss-smart-import&quot;&gt;postcss-smart-import&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/postcss-cssnext&quot;&gt;postcss-cssnext&lt;/a&gt; plugins that allow you to use all the features described in &lt;a href=&quot;http://cssnext.io/features/&quot;&gt;cssnext&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Some things are forgotten, though. Notably, a global config for &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt;, that tools like &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt; are going to need to correctly process your code to be cross-browser compliant. Gladly that one is easy to fix, just create a file in your project’s root:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch .browserslistrc
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;article class=&quot;post__note&quot;&gt;&lt;p&gt;Well, not really, but you can certainly get away with this much knowledge&lt;/p&gt;
&lt;/article&gt;&lt;p&gt;Now open this file and add a single line: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; 1%&lt;/code&gt;. That’s all there is to know about browser compatibility!&lt;/p&gt;
&lt;p&gt;Another thing we better do right from the start is to reconfigure the default behaviour of Rails generators. We don’t need them to put anything into &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets&lt;/code&gt;, as (spoiler!) we are going to remove this folder altogether in a next step. Open &lt;code class=&quot;highlighter-rouge&quot;&gt;application.rb&lt;/code&gt; and add these lines:&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/application.rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generators&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test_framework&lt;/span&gt;  &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stylesheets&lt;/span&gt;     &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;javascripts&lt;/span&gt;     &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;helper&lt;/span&gt;          &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;channel&lt;/span&gt;         &lt;span class=&quot;ss&quot;&gt;assets: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time to perform the desecration of Asset Pipeline. &lt;strong&gt;Remove&lt;/strong&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;But how do we replace it? Follow these steps:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--webpack&lt;/code&gt; option in our &lt;code class=&quot;highlighter-rouge&quot;&gt;rails new&lt;/code&gt; had created a folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;app/javascript&lt;/code&gt;. &lt;strong&gt;Move it to the root of your project&lt;/strong&gt; and rename it to &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend&lt;/code&gt; (or choose your own fancy name, but “frontend” makes most sense). Keep the insides intact: &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt; inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend/packs&lt;/code&gt; will serve as our &lt;a href=&quot;https://webpack.js.org/concepts/#entry&quot;&gt;Webpack “entry” point&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code class=&quot;highlighter-rouge&quot;&gt;application.html.erb&lt;/code&gt; and replace &lt;code class=&quot;highlighter-rouge&quot;&gt;javascript_include_tag &quot;application&quot;&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;javascript_pack_tag &quot;application&quot;&lt;/code&gt;. One word in a method name makes all the difference: &lt;code class=&quot;highlighter-rouge&quot;&gt;include_tag&lt;/code&gt; inserts a reference to an app-wide JavaScript file compiled by Sprockets (old way), &lt;code class=&quot;highlighter-rouge&quot;&gt;pack_tag&lt;/code&gt; brings in a Webpack &lt;em&gt;bundle&lt;/em&gt; generated from the entry point, which is our &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend/packs/application.js&lt;/code&gt; (new way). While at it, move the pack tag down from the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; to the very end of the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, right after the &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; statement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;stylesheet_link_tag 'application', media: 'all'&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;stylesheet_pack_tag 'application'&lt;/code&gt;. We are going to use CSS on a per-component basis with the help of Webpack and ES6 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; statement. That means all our styles will be handled by webpacker too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to let webpacker know where to look for files to bundle, as we have just renamed the default folder. As of &lt;a href=&quot;http://weblog.rubyonrails.org/2017/8/30/webpacker-3-0/&quot;&gt;webpacker 3.0&lt;/a&gt;, configuration is done through &lt;code class=&quot;highlighter-rouge&quot;&gt;webpacker.yml&lt;/code&gt; file inside of Rails &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt; folder. Make sure first few lines look like these to reflect the change in our folder structure:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;&amp;amp;default&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;source_path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;frontend&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;source_entry_path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;packs&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;public_output_path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;packs&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;cache_path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tmp/cache/webpacker&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;Our ERB partials are going to live in &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend&lt;/code&gt; folder as well, and our controllers wouldn’t know how to find them, unless we tell them so in &lt;code class=&quot;highlighter-rouge&quot;&gt;application_controller.rb&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/application_controller.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :exception&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# That's all there is:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;prepend_view_path&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;frontend&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;As of webpacker 3.0, we &lt;a href=&quot;http://weblog.rubyonrails.org/2017/8/30/webpacker-3-0/&quot;&gt;no longer need a separate process&lt;/a&gt; to compile assets on-demand in development, but if we want to make use of automatic page refresh on every change in JS/CSS code, we still need to run &lt;code class=&quot;highlighter-rouge&quot;&gt;webpacker-dev-server&lt;/code&gt; alongside with &lt;code class=&quot;highlighter-rouge&quot;&gt;rails s&lt;/code&gt;. For that we need a Procfile, so let’s create one:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch Procfile
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Put this inside:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;server: bin/rails server
assets: bin/webpack-dev-server
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With Procfile in place, you can launch all your processes with a single command using a tool like &lt;a href=&quot;https://github.com/ddollar/foreman&quot;&gt;Foreman&lt;/a&gt;, but we highly recommend using our alternative: the &lt;a href=&quot;https://evilmartians.com/chronicles/introducing-overmind-and-hivemind&quot;&gt;Hivemind&lt;/a&gt;. You can also take a look at its big brother &lt;a href=&quot;https://github.com/DarthSim/overmind&quot;&gt;Overmind&lt;/a&gt;, as it will allow you to use &lt;code class=&quot;highlighter-rouge&quot;&gt;pry&lt;/code&gt; for debugging without interrupting any running processes.&lt;/p&gt;
&lt;h2 id=&quot;smoke-test&quot;&gt;Smoke test&lt;/h2&gt;
&lt;p&gt;Time to test if our new setup is working correctly. Let’s add some simple code to our &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt; (found under &lt;code class=&quot;highlighter-rouge&quot;&gt;packs&lt;/code&gt;) to manipulate our DOM and then make sure webpacker handles it well. First, we need to generate a basic controller and provide a default route:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails g controller pages home
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/routes.rb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pages#home&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure to remove everything from &lt;code class=&quot;highlighter-rouge&quot;&gt;views/pages/home.html.erb&lt;/code&gt;, so it contains no code at all. Now in &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt; remove everything that is there and replace it with this:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// frontend/packs/application.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./application.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;afterbegin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Webpacker works!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s also create an &lt;code class=&quot;highlighter-rouge&quot;&gt;application.css&lt;/code&gt; file in the same folder to check that our styles are processed too (with PostCSS):&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* frontend/packs/application.css */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;lightyellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time to launch our server for the first time! We assume you already have &lt;a href=&quot;https://github.com/DarthSim/hivemind&quot;&gt;Hivemind&lt;/a&gt; installed, if not—use &lt;code class=&quot;highlighter-rouge&quot;&gt;foreman&lt;/code&gt; or a similar process manager (but, seriously, consider Hivemind, it’s &lt;a href=&quot;https://evilmartians.com/chronicles/introducing-overmind-and-hivemind&quot;&gt;awesome&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;hivemind
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:3000&lt;/code&gt; and see the result:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;A smoke test for our app&quot; class=&quot;post-media__object&quot; width=&quot;1255&quot; height=&quot;847&quot; src=&quot;https://cdn.evilmartians.com/front/posts/evil-front-part-1/smoke_test-37c0723.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If it does not burn, it works!&lt;/p&gt;
&lt;p&gt;And here is a cool little thing about Webpack. If you go to &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt;, change “Webpacker works!” to something else and save the file, you will see changes in your browser without having to hit a “Refresh” button.&lt;/p&gt;
&lt;p&gt;Now, before we start writing any &lt;em&gt;real&lt;/em&gt; code, let’s make sure we write it in style.&lt;/p&gt;
&lt;h2 id=&quot;okay-how-do-i-lint-my-js&quot;&gt;Okay, how do I lint my JS?&lt;/h2&gt;
&lt;article class=&quot;post__note&quot;&gt;&lt;p&gt;Prettier also integrates with all popular editors so you can reformat your code with a touch of a button. ESLint also has plugins for all main editors to give you instant visual feedback.&lt;/p&gt;
&lt;/article&gt;&lt;p&gt;There are so many ways to write JavaScript and with &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript&quot;&gt;syntax being updated on yearly basis now&lt;/a&gt;, it is so easy to get confused before you even start. The semicolons/&lt;a href=&quot;https://feross.org/never-use-semicolons/&quot;&gt;no semicolons&lt;/a&gt; debate never gets old, for instance. Instead of arguing over each peculiarity of JavaScript syntax, it’s easier to stick with some opinionated code formatter, such as &lt;a href=&quot;https://standardjs.com/&quot;&gt;Standard&lt;/a&gt; or &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt;. We choose Prettier (and yes, it has semicolons by default, but you can easily &lt;a href=&quot;https://github.com/prettier/prettier#semicolons&quot;&gt;turn it off&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We are going to set up some automated linting with &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt;, so our code style is always kept in check. We are also going to rely on &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb JavaScript Style Guide&lt;/a&gt; that contains a lot of best practices for writing maintainable JS code.&lt;/p&gt;
&lt;p&gt;Let’s add some &lt;code class=&quot;highlighter-rouge&quot;&gt;devDependencies&lt;/code&gt; to our &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, as for now it only contains &lt;code class=&quot;highlighter-rouge&quot;&gt;webpack-dev-server&lt;/code&gt;. This is how it should look like after we make it cater to our JS linting needs:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;evil_chat_codealong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;private&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;@rails/webpacker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^3.0.1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;webpack-dev-server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^2.9.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;babel-eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^8.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^4.8.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eslint-config-airbnb-base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^12.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eslint-config-prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^2.6.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eslint-import-resolver-webpack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.8.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eslint-plugin-import&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^2.7.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eslint-plugin-prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^2.3.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^4.2.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;pre-commit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.2.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.7.3&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lint-staged&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pre-commit&lt;/code&gt; will come handy later, when we add some hooks to our &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; commands. This way we make sure that less-then-ideal code will never even make it to a repository.&lt;/p&gt;
&lt;p&gt;One last touch: we need &lt;code class=&quot;highlighter-rouge&quot;&gt;.eslintrc&lt;/code&gt; file in our root folder so ESLint knows how to apply our rules.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch .eslintrc
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Put this inside:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint-config-airbnb-base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;plugins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;env&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;browser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;prettier/prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;babel-eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;settings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;import/resolver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;resolve&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;frontend&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node_modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The order of elements under &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;extends&quot;&lt;/code&gt; key is important: this way we are telling ESLint to first apply Airbnb rules, and whenever there is a conflict with Prettier format guides, prefer the latest. We also need to add a key &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;import/resolver&quot;&lt;/code&gt; for our &lt;code class=&quot;highlighter-rouge&quot;&gt;eslint-import-resolver-webpack&lt;/code&gt; dependency: it makes sure that whatever you &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; in your JS files actually exists in the folders handled by Webpack (in our case, it’s a &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend&lt;/code&gt; folder).&lt;/p&gt;
&lt;h2 id=&quot;what-about-css&quot;&gt;What about CSS?&lt;/h2&gt;
&lt;p&gt;CSS needs some linting too! We are also going to normalize it with a well-respected tool &lt;a href=&quot;https://github.com/necolas/normalize.css/&quot;&gt;normalize.css&lt;/a&gt;. We will be relying on &lt;a href=&quot;https://stylelint.io/&quot;&gt;stylelint&lt;/a&gt; to detect errors and convention violations in our stylesheets. Let’s add two more development dependencies in our &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;stylelint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^8.1.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;stylelint-config-standard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^17.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will also need a &lt;code class=&quot;highlighter-rouge&quot;&gt;.stylelintrc&lt;/code&gt; file in our root — to instruct our linter.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch .stylelintrc
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint-config-standard&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, add &lt;code class=&quot;highlighter-rouge&quot;&gt;normalize.css&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;dependencies&quot;&lt;/code&gt; key in &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; (not &lt;code class=&quot;highlighter-rouge&quot;&gt;devDevdependencies&lt;/code&gt; this time!), so that part of your package listing looks like this:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;@rails/webpacker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^3.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;normalize.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^7.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now it is time to introduce some &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks&quot;&gt;git hooks&lt;/a&gt; so all checks will run automatically on each &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;. For that, we will add a &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;scripts&quot;&lt;/code&gt; key to our &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(yarn bin)/lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;config/webpack/**/*.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;frontend/**/*.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;frontend/**/*.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint --fix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pre-commit&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, every time we commit, all staged files will be examined for errors and reformatted automatically.&lt;/p&gt;
&lt;p&gt;Our final &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; should look like the contents of this &lt;a href=&quot;https://gist.github.com/progapandist/0c28831364c560d982b8bbed48226c96&quot;&gt;gist&lt;/a&gt;.&lt;br/&gt;To install all new dependencies, run &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn&lt;/code&gt; in your Terminal.&lt;/p&gt;
&lt;p&gt;I know you can not wait to see our automated linting in action. Try going to your &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend/packs/application.js&lt;/code&gt; and removing a semicolon. Then run &lt;code class=&quot;highlighter-rouge&quot;&gt;git add . &amp;amp;&amp;amp; git commit -m &quot;testing JS linting&quot;&lt;/code&gt; and see that semicolon being added right back. See? No sloppy style anymore.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Linter's config&quot; class=&quot;post-media__object&quot; width=&quot;535&quot; height=&quot;346&quot; src=&quot;https://cdn.evilmartians.com/front/posts/evil-front-part-1/plugins-ba21e6c.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If everything was set up correctly, our project’s root should contain all those files&lt;/p&gt;
&lt;h2 id=&quot;our-first-component-no-react-involved&quot;&gt;Our first component (no React involved)&lt;/h2&gt;
&lt;p&gt;Just to give you a taste of what will be happening in Part 2 of this guide, let’s create our first component.&lt;/p&gt;
&lt;p&gt;First, let’s get rid of our &lt;code class=&quot;highlighter-rouge&quot;&gt;application.css&lt;/code&gt;, we only needed that one for a smoke test. Delete all code from &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt; too. From now on, our &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt; will only contain import statements. This our entry point, a place where everything comes together. We will need some other place to keep app-wide stylesheets and javascripts, so let’s create one. We will call this new folder &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir frontend/init
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch frontend/init/index.js
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch frontend/init/index.css
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we need to register our new folder inside our &lt;em&gt;entry point.&lt;/em&gt; Add this line to your &lt;code class=&quot;highlighter-rouge&quot;&gt;packs/application.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// frontend/packs/application.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;init&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now some code for our new files. Here is our &lt;code class=&quot;highlighter-rouge&quot;&gt;init/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// frontend/init/index.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./index.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for &lt;code class=&quot;highlighter-rouge&quot;&gt;init/index.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* frontend/init/index.css */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;normalize.css/normalize.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;Helvetica Neue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Helvetica&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;24px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All we do here is applying some general styling to all fonts in our app. Our &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; folder will also be the first to go into the bundle, so it makes sense to include our &lt;code class=&quot;highlighter-rouge&quot;&gt;normalize.css&lt;/code&gt; here. Later we can use the same folder to set up polyfills or error monitoring—any functionality that does not relate directly to our components and needs to be loaded as soon as possible.&lt;/p&gt;
&lt;p&gt;Okay, &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; is a special case, so what about the components?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Each component is a folder with three files in it: one for ERB partial, one for scripts, and one for styles.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All our components will be located in the &lt;code class=&quot;highlighter-rouge&quot;&gt;components&lt;/code&gt; folder inside our &lt;code class=&quot;highlighter-rouge&quot;&gt;frontend&lt;/code&gt;. Let’s create one, along with the first component that will simply be called &lt;code class=&quot;highlighter-rouge&quot;&gt;page&lt;/code&gt; (think of it as a template for our layout):&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir -p frontend/components/page
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch frontend/components/page/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;_page.html.erb,page.css,page.js&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note that we are not calling our component’s JS file &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;, this name is reserved for our &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; folder. We choose to name our JS files the same as our components so that later, when we have multiple open tabs in our editor, we can quickly figure out where we are. This practice is not common (in other tutorials you will see mostly &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; for components), but saves a lot of time when writing code.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We don’t have any component-related JS logic yet, so our &lt;code class=&quot;highlighter-rouge&quot;&gt;page.js&lt;/code&gt; still consists of a single import statement for a CSS file:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// frontend/components/page/page.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./page.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our &lt;code class=&quot;highlighter-rouge&quot;&gt;page.css&lt;/code&gt; has some component-related styling:&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* frontend/components/page/page.css */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.page&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100vh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, our &lt;code class=&quot;highlighter-rouge&quot;&gt;_page.html.erb&lt;/code&gt; contains markup. Note the we can use all ERB goodies here and leverage the &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; statement that will allow us to &lt;em&gt;nest&lt;/em&gt; components one inside another.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- frontend/components/page/_page.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%= yield %&amp;gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don’t forget to reference our new component in &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt; by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;import &quot;components/page/page&quot;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;A structure for the first component&quot; class=&quot;post-media__object&quot; width=&quot;632&quot; height=&quot;305&quot; src=&quot;https://cdn.evilmartians.com/front/posts/evil-front-part-1/components_first_structure-95e773f.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A structure of our “frontend” folder at this point of tutorial&lt;/p&gt;
&lt;p&gt;Now let’s add some ERB code to our &lt;code class=&quot;highlighter-rouge&quot;&gt;home.html.erb&lt;/code&gt; view:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- app/views/pages/home.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%= render &quot;components/page/page&quot; do %&amp;gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Hello from our first component!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;% end %&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time for to see our first component in action! Launch the server again and refresh the page. Fingers crossed, you are going to see something like that:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;A structure for the first component&quot; class=&quot;post-media__object&quot; width=&quot;994&quot; height=&quot;348&quot; src=&quot;https://cdn.evilmartians.com/front/posts/evil-front-part-1/first_component_works-87c1250.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A browser and console output for out first working component&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Congratulations, you have completed Part 1 of our tutorial! Stay tuned for Part 2 where our application will finally take shape and we will introduce components needed for our chat-related functionality. We will also add a helper to render our components with less typing.&lt;/p&gt;
</description>
<pubDate>Fri, 08 Dec 2017 14:35:21 +0000</pubDate>
<dc:creator>galfarragem</dc:creator>
<og:title>Evil Front Part 1: Modern Front-end in Rails — Martian Chronicles</og:title>
<og:description>An opinionated guide to modern, modular, component-based approach to handling your presentation logic in Rails that does not depend on any front-end framework. Follow our three-part tutorial to learn the bare minimum of up-to-date front-end techniques by example and finally make sense of it all. Part 1: goodbye Asset Pipeline, code organization, linting.</og:description>
<og:url>https://evilmartians.com/chronicles/evil-front-part-1</og:url>
<og:type>article</og:type>
<og:image>https://cdn.evilmartians.com/front/posts/evil-front-part-1/cover-1386775.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://evilmartians.com/chronicles/evil-front-part-1</dc:identifier>
</item>
<item>
<title>macOS lock screen: “I just sent my session pass to my whole team”</title>
<link>https://twitter.com/BenoitLetondor/status/939127296266588160</link>
<guid isPermaLink="true" >https://twitter.com/BenoitLetondor/status/939127296266588160</guid>
<description>I open my MBP, type the session password, hit return, nothing happen. I realize that the password field is not focused, I click on it, type the pass again and it works.
The focus was on the Slack window behind, I just sent my session pass to my whole team 😱 WTF &lt;a href=&quot;https://mobile.twitter.com/AppleSupport&quot; class=&quot;twitter-atreply dir-ltr&quot; dir=&quot;ltr&quot; data-mentioned-user-id=&quot;3309375033&quot; data-screenname=&quot;AppleSupport&quot;&gt;@AppleSupport&lt;/a&gt;</description>
<pubDate>Fri, 08 Dec 2017 13:44:31 +0000</pubDate>
<dc:creator>fofolo</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/BenoitLetondor/status/939127296266588160</dc:identifier>
</item>
<item>
<title>Oregon punished an engineer for criticizing red-light cameras. He fought and won</title>
<link>https://www.washingtonpost.com/news/morning-mix/wp/2017/12/08/criticizing-red-light-cameras-is-not-a-punishable-offense-oregon-concedes</link>
<guid isPermaLink="true" >https://www.washingtonpost.com/news/morning-mix/wp/2017/12/08/criticizing-red-light-cameras-is-not-a-punishable-offense-oregon-concedes</guid>
<description>&lt;div class=&quot;inline-content inline-photo inline-photo-normal&quot;&gt; &lt;img class=&quot;unprocessed placeholder&quot; data-hi-res-src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https://img.washingtonpost.com/news/morning-mix/wp-content/uploads/sites/21/2017/12/IFJ_2459-1024x683.jpg&amp;amp;w=1484&quot; data-low-res-src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https://img.washingtonpost.com/news/morning-mix/wp-content/uploads/sites/21/2017/12/IFJ_2459-1024x683.jpg&amp;amp;w=480&quot; data-raw-src=&quot;https://img.washingtonpost.com/news/morning-mix/wp-content/uploads/sites/21/2017/12/IFJ_2459-1024x683.jpg&quot; src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https://img.washingtonpost.com/news/morning-mix/wp-content/uploads/sites/21/2017/12/IFJ_2459-1024x683.jpg&amp;amp;w=60&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;pb-caption&quot;&gt;Mats Järlström points to a red-light camera. (Institute for Justice)&lt;/span&gt;&lt;/div&gt;&lt;p&gt;Mats Järlström is, by all accounts, an engineer. He graduated from engineering school in Sweden, served as an airplane-camera mechanic in the Swedish Air Force and worked in research and development at an electronics manufacturer. For the past 20 years, he has earned a living designing and repairing audio equipment.&lt;/p&gt;
&lt;p&gt;He is not, however, a “licensed professional” in the state of Oregon, where he put down roots in the early 1990s. So when Järlström did his own study of the timing mechanisms in the state’s red-light cameras and found them flawed, Oregon officials hit him with a $500 fine for “unlicensed practice of engineering.”&lt;/p&gt;
&lt;p&gt;Järlström was inspired by the $150 ticket his wife got in the mail in May after driving through an intersection with a red-light camera in Beaverton, Ore. His research showed that the mathematical formula used in the timing of yellow lights was outdated and unfair to drivers.&lt;/p&gt;
&lt;div class=&quot;inline-content inline-video&quot;&gt;

&lt;div class=&quot;inline-video-caption&quot;&gt;&lt;span class=&quot;pb-caption&quot;&gt;When Mats Järlström presented research to Oregon state officials and local media that said the red-light cameras in his area were inaccurate, the Oregon State Board of Examiners for Engineering and Land Surveying tried to silence him. (Institute for Justice)&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;When he presented his findings to state officials and local media, the Oregon State Board of Examiners for Engineering and Land Surveying tried to silence him. A nearly two-year investigation by the board found he had violated a state law that says only state-licensed engineers can speak publicly about technical matters. Järlström, in turn, filed a federal lawsuit alleging violations of his First Amendment rights.&lt;/p&gt;
&lt;p&gt;This week, more than four years after his wife’s ticket, Järlström got some long-awaited relief. On Monday, Oregon’s attorney general conceded that the engineering board had trampled on his free speech rights, &lt;a href=&quot;http://www.oregonlive.com/portland/index.ssf/2017/12/state_board_concedes_it_violat.html&quot; target=&quot;_blank&quot;&gt;the Oregonian reported&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“We have admitted to violating Mr. Järlström’s rights,” Christina L. Beatty-Walters, senior assistant attorney general, told a federal magistrate judge in Portland, according to the Oregonian. The state’s action against Järlström under the state’s Professional Engineer Registration Act “was not narrowly tailored to any compelling state interests,” she added in court filings.&lt;/p&gt;
&lt;p&gt;As long as Järlström doesn’t act in a commercial or professional manner, he is free to speak out about red-light cameras without fear of punishment, state attorneys said.&lt;/p&gt;
&lt;p&gt;The state has already cut a check to Järlström for $500, but the traffic-camera saga is not over. Oregon wants the lawsuit thrown out, but Järlström and his attorneys from the Institute for Justice want the law itself declared unconstitutional. They say others have been improperly investigated and fined for protected speech.&lt;/p&gt;
&lt;p&gt;“The existence of these laws and the way they’ve been applied time and time again has violated free speech rights,” attorney Samuel Gedge told the court, according to the Oregonian. “Past history suggests the board can’t be trusted on how the laws should be applied constitutionally.”&lt;/p&gt;
&lt;p&gt;In one case cited by Järlström’s attorneys, a Portland City Commissioner Dan Saltzman was investigated after a voter’s pamphlet described his background as an “environmental engineer.” Like Järlström, he had studied engineering but lacked state-issued bona fides. In another case, the state board used the law to fine a local activist $1,000 for criticizing a proposed new power plant, as &lt;a href=&quot;http://reason.com/blog/2017/04/26/after-challenging-red-light-cameras-oreg&quot; target=&quot;_blank&quot;&gt;Reason reported&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Järlström’s interest in traffic cameras has grown into a passion. He says the original formula for calculating the duration of yellow lights dates back to the 1950s and only accounts for cars driving in straight lines. Cars in turning lanes need more time to slow down and make a legal right-hand turn, he says.&lt;/p&gt;
&lt;p&gt;“Anyone should be able to talk about the traffic signals if they’re too long or too short or anything without being penalized,” Järlström said in an &lt;a href=&quot;https://www.youtube.com/watch?v=Wi4brP0sXSQ&quot; target=&quot;_blank&quot;&gt;Institute for Justice&lt;/a&gt; video earlier this year.&lt;/p&gt;
&lt;div class=&quot;inline-content inline-video&quot;&gt;

&lt;div class=&quot;inline-video-caption&quot;&gt;&lt;span class=&quot;pb-caption&quot;&gt;The first patented electric traffic signal went into operation 100 years ago. PostTV looks into how a modern traffic signal system keeps traffic flowing—or not—in a busy city like Washington, D.C. (Jason Aldag/The Washington Post)&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;After researching the issue in his spare time, he sought to publicize his findings. He corresponded with one of the physicists who worked on the original yellow-light formula. He spoke at a transportation conference in Los Angeles. And he shared his work with media outlets, including “60 Minutes.”&lt;/p&gt;
&lt;p&gt;He also shared his ideas with the Oregon State Board of Examiners for Engineering and Land Surveying. That’s what got him in trouble.&lt;/p&gt;
&lt;p&gt;The board said Järlström was breaking the law and ordered him to “stop any further references” to his work until he registered as an engineer, his lawsuit says. He continued to publicize his work, and even shared a mathematical formula he believed would improve the timing of yellow lights.&lt;/p&gt;
&lt;p&gt;In early 2015, the board opened a “law enforcement case” against him, according to his lawsuit. In talking about his traffic-light theories, the board found, he had indicated he was a licensed engineer, violating state law. He paid the $500 fine in late 2016.&lt;/p&gt;
&lt;p&gt;“I stated that I was a Swedish electronics engineer, but I based all the things from freedom of speech,” Järlström said in the &lt;a href=&quot;https://www.youtube.com/watch?v=Wi4brP0sXSQ&quot; target=&quot;_blank&quot;&gt;Institute for Justice&lt;/a&gt; video. “I was just talking. That’s literally what I did.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More from Morning Mix:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.washingtonpost.com/news/morning-mix/wp/2017/12/08/the-solar-eclipse-burned-a-crescent-wound-on-a-womans-retina-she-wasnt-wearing-proper-glasses/&quot; target=&quot;_blank&quot;&gt;The solar eclipse burned a crescent wound on a woman’s retina. She wasn’t wearing proper glasses.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.washingtonpost.com/news/morning-mix/wp/2017/12/08/body-cam-captures-police-dog-attacking-innocent-woman-taking-out-her-garbage/&quot; target=&quot;_blank&quot;&gt;Body cam captures police dog attacking innocent woman taking out her garbage&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 08 Dec 2017 12:15:34 +0000</pubDate>
<dc:creator>notlob</dc:creator>
<og:type>article</og:type>
<og:url>https://www.washingtonpost.com/news/morning-mix/wp/2017/12/08/criticizing-red-light-cameras-is-not-a-punishable-offense-oregon-concedes/</og:url>
<og:image>https://www.washingtonpost.com/pbox.php?url=http://www.washingtonpost.com/news/morning-mix/wp-content/uploads/sites/21/2017/12/IFJ_2459.jpg&amp;w=1484&amp;op=resize&amp;opt=1&amp;filter=antialias&amp;t=20170517</og:image>
<og:title>Oregon punished an engineer for criticizing red-light cameras. He fought back and won.</og:title>
<og:description>A state panel fined an engineer who found flaws in the timing of the cameras.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.washingtonpost.com/news/morning-mix/wp/2017/12/08/criticizing-red-light-cameras-is-not-a-punishable-offense-oregon-concedes/</dc:identifier>
</item>
<item>
<title>Microsoft leaks TLS private key for cloud ERP product</title>
<link>https://medium.com/matthias-gliwka/microsoft-leaks-tls-private-key-for-cloud-erp-product-10b56f7d648</link>
<guid isPermaLink="true" >https://medium.com/matthias-gliwka/microsoft-leaks-tls-private-key-for-cloud-erp-product-10b56f7d648</guid>
<description>&lt;h3 name=&quot;c196&quot; id=&quot;c196&quot; class=&quot;graf graf--h3 graf-after--h3&quot;&gt;… and it was still in use for more than 100 days after the initial report&lt;/h3&gt;
&lt;p name=&quot;7ff6&quot; id=&quot;7ff6&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;At my old job, I was working as a software developer customizing the Microsoft ERP product Dynamics 365 for Finance and Operations (formerly known as Dynamics AX). To provide some context: ERP stands for &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;E&lt;/strong&gt;nterprise &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;R&lt;/strong&gt;esource &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;P&lt;/strong&gt;lanning and is software which supports all critical core business processes of a company like purchasing, manufacturing, product planning, sales, finance and many others by integrating those into one application with a single database.&lt;/p&gt;
&lt;p name=&quot;1a7b&quot; id=&quot;1a7b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Last year Microsoft started to offer it’s ERP product as a web-based cloud-hosted SaaS solution. The software is hosted in Azure managed by Microsoft. It’s accessible through a comprehensive control panel (Life Cycle Services) which empowers the user to manage every single aspect of the environment, like the deployment of changes to the software or applying updates.&lt;/p&gt;
&lt;p name=&quot;6d88&quot; id=&quot;6d88&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;One quite useful feature is direct RDP access to the machine running the software to debug issues with the application. A normal deployment is divided into at least three systems: development, user acceptance testing (also referred to as “sandbox”) and production. The user acceptance system mirrors the setup of the production environment with a single exception: while there’s no way to access the production servers besides through the web interface, the sandbox environment offers administrative RDP access. &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;And that’s where the fun begins ;-)&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;5acd&quot; id=&quot;5acd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;After a long workday while being off the clock I accessed a sandbox environment via RDP to take a look and learn how Microsoft would set up a server hosting such a business critical application. The hostname for a sandbox environment is &lt;em class=&quot;markup--em markup--p-em&quot;&gt;customername.sandbox.operations.dynamics.com&lt;/em&gt;. A quick glance at the certificates inside the built-in “Certificate Manager” revealed something shocking:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*FZu2IlFTZuDKIMChpR4m6w.png&quot; data-width=&quot;800&quot; data-height=&quot;444&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*FZu2IlFTZuDKIMChpR4m6w.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*FZu2IlFTZuDKIMChpR4m6w.png&quot;/&gt;&lt;/div&gt;
Certificate Manager running on affected sandbox environment showing the wildcard certificate
&lt;p name=&quot;afd1&quot; id=&quot;afd1&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Sitting there in plain sight was a valid TLS certificate for the common name *.sandbox.operations.dynamics.com &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;and the corresponding private key — by the courtesy of Microsoft IT SSL SHA2 CA! This certificate is shared across all sandbox environments, even those hosted for other Microsoft customers. It’s used to encrypt the web traffic between the users of the software and the server. All you need to extract this certificate is access to ANY sandbox environment.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;bb63&quot; id=&quot;bb63&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I still could not believe my eyes, so clearly the next goal was to export the private key to make sure it’s actually possible to export it and use it outside the system. In Windows, the private keys are marked as non-exportable by default and the Certificate Manager refuses to export those. A short C++ program hooking the internal certificate API functions called to check whether a certificate is exportable and a couple minutes later, I had the private key in my hands.&lt;/p&gt;
&lt;p name=&quot;3faa&quot; id=&quot;3faa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The implications of this are far-reaching: an attacker, which has the ability to listen and/or interject himself between the connection from the user to the server (man in the middle), can impersonate the server and thus read all communication in clear text. Furthermore, an attacker can modify the communication and thus insert malicious content. Since the attacker can use the original TLS certificate, there’s no warning or error on the client side. Just the green padlock indicating a secure connection. The users of this user acceptance (sandbox) systems are high-value targets. They are usually in key positions at the respective organization and have access to valuable information. The sandbox system itself often also contains sensitive information to make the tests more realistic. There is even a feature to copy the production database into the sandbox environment to enable this use case.&lt;/p&gt;
&lt;p name=&quot;0605&quot; id=&quot;0605&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This left me with the question, whether the production environment was affected. A quick look at the certificate served by a production system accessible at &lt;em class=&quot;markup--em markup--p-em&quot;&gt;customername.operations.dynamics.com&lt;/em&gt; revealed, that it was indeed a wildcard certificate (*.operations.dynamics.com). Since the production system has no direct RDP access, it’s not possible to simply extract the certificate as described above. One possible attack vector was the capability to deploy customization (.NET assemblies, .sql scripts, configuration files etc.) onto a production system which enables an attacker to execute code in the production environment. Because there’s no way anybody would let me deploy this on a customer live production environment and there’s no chance to acquire one of those environments for simple testing (licensing issues and associated cost, special agreements), my research had to stop there. While the ability to execute code on a target system in my opinion usually increases the likelihood of exploitation, considering all the known facts I’m not in a position to determine if production systems were affected or not. A Microsoft spokesperson later commented that “[c]ontrols exist in production environments that render the described technique ineffective [..]”.&lt;/p&gt;
&lt;p name=&quot;ed95&quot; id=&quot;ed95&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Another theoretically feasible attack vector is to redirect the victim to an production environment controlled by the attacker using some man-in-the-middle attach technique. Since both environments used the same certificate and the attacker has control over his system, he could get the user to enter sensitive information into his own environment.&lt;/p&gt;
&lt;p name=&quot;8eda&quot; id=&quot;8eda&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With the TLS private key in hand, it was time to contact the Microsoft Security Response Center (MSRC) via PGP-encrypted mail (&lt;a href=&quot;mailto:secure@microsoft.com&quot; data-href=&quot;mailto:secure@microsoft.com&quot; class=&quot;markup--anchor markup--p-anchor&quot; target=&quot;_blank&quot;&gt;secure@microsoft.com&lt;/a&gt;). While I couldn’t believe that the TLS certificate was exposed like this, the communication with Microsoft was even more disturbing:&lt;/p&gt;
&lt;p name=&quot;752f&quot; id=&quot;752f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’ve sent this initial successful message on 08/17/17:&lt;/p&gt;
&lt;blockquote name=&quot;97e6&quot; id=&quot;97e6&quot; class=&quot;graf graf--blockquote graf-after--p&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Hello,&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;4f13&quot; id=&quot;4f13&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;I’ve noticed a vulnerability in the Microsoft managed Azure hosted Dynamics 365 for Operations environments.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;8ed6&quot; id=&quot;8ed6&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;7.706013363029&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Each separate customer environment (called AOS in the Dynamics world — Windows Server 2012 R2 — IIS, accessible by MS customers via RDP) uses the same wildcard server certificate (including the private key) for the domain *.&lt;/em&gt;&lt;a href=&quot;http://sandbox.operations.dynamics.com/&quot; data-href=&quot;http://sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;, meaning the service hosted for Acme Inc. at&lt;/em&gt; &lt;a href=&quot;http://acme.sandbox.operations.dynamics.com/&quot; data-href=&quot;http://acme.sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;acme.sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;uses the same TLS wildcard certificate as Evil Inc. hosted at&lt;/em&gt; &lt;a href=&quot;http://evil.sandbox.operations.dynamics.com/&quot; data-href=&quot;http://evil.sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;evil.sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;758d&quot; id=&quot;758d&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Reproduction steps / possible attack scenario:&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;274e&quot; id=&quot;274e&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;6.6176470588235&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Involved parties: &lt;br/&gt; — Bob working as CFO at ACME Inc, Environment hosted at&lt;/em&gt; &lt;a href=&quot;http://acme.sandbox.operations.dynamics.com/&quot; data-href=&quot;http://acme.sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;acme.sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;&lt;br/&gt; — Attacker Eve trying to steal ACMEs trade secrets working at the competitor Evil Inc, Environment hosted at&lt;/em&gt; &lt;a href=&quot;http://evil.sandbox.operations.dynamics.com/&quot; data-href=&quot;http://evil.sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;evil.sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;8e4b&quot; id=&quot;8e4b&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;9.7507886435331&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Steps:&lt;br/&gt; 1. Attacker Eve visits&lt;/em&gt; &lt;a href=&quot;http://lcs.dynamics.com/&quot; data-href=&quot;http://lcs.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;lcs.dynamics.com&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;and acceses the Azure VM hosting the environment of Evil Inc using the provided RDP file and Administrator credentials — this is the intended way to access your own environment.&lt;br/&gt; 2. Attacker Eve uses the tool “mimikatz” on this VM to export the public and private key pair of the wildcard certificate for *.&lt;/em&gt;&lt;a href=&quot;http://sandbox.operations.dynamics.com/&quot; data-href=&quot;http://sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt; — Eve has rightfully full administrative access on the hosted azure environment so this is no issue&lt;br/&gt; 3. Attacker Eve uses this certificate for a man in the middle attack against Bob and poses as&lt;/em&gt; &lt;a href=&quot;http://acme.sandbox.dynamics.com/&quot; data-href=&quot;http://acme.sandbox.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;acme.sandbox.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;&lt;br/&gt; 4. Bob access the&lt;/em&gt; &lt;a href=&quot;http://acme.sandbox.operations.dynamics.com/&quot; data-href=&quot;http://acme.sandbox.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;acme.sandbox.operations.dynamics.com&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;environment, the traffic gets MITMd by Eve. The attacker has full access to the data being transmitted. Since Dynamics 365 for Operations is an ERP System, it’s a high value target. Bob doesn’t see any difference, since the certificate in use is a legitimate one.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;3626&quot; id=&quot;3626&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Mitigation:&lt;br/&gt; During the creation of the environment issue an individual certificate unique for each customer environment.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;906c&quot; id=&quot;906c&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;9.3153153153153&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;I haven’t checked the production environment because of legal and ethical reasons, however visiting&lt;/em&gt; &lt;a href=&quot;http://acme.operations.dynamics.com/&quot; data-href=&quot;http://acme.operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;acme.operations.dynamics.com&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;also is being served with a wild card certificate issued for *.&lt;/em&gt;&lt;a href=&quot;http://operations.dynamics.com/&quot; data-href=&quot;http://operations.dynamics.com/&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;operations.dynamics.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;. Since Eve could deploy code to the production environment, it should be possible to extract this certificate, too.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;c243&quot; id=&quot;c243&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Please let me know if i can be of any assistance. Furthermore, please keep me updated about the status.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;86ba&quot; id=&quot;86ba&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Best regards,&lt;br/&gt; Matthias Gliwka&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;bdd9&quot; id=&quot;bdd9&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;Later I’ve sent a follow-up email containing an encrypted copy of the previously extracted private key.&lt;/p&gt;
&lt;p name=&quot;2ee8&quot; id=&quot;2ee8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Having not received a initial response informing me that somebody at Microsoft received my report, three days later I’ve sent a follow-up mail asking for confirmation, that they got my report. Five days after my initial report I receive this answer:&lt;/p&gt;
&lt;blockquote name=&quot;2f8b&quot; id=&quot;2f8b&quot; class=&quot;graf graf--blockquote graf-after--p&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Hello,&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;10bb&quot; id=&quot;10bb&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Thank you for following up on this thread. From how I am interpreting this report, it sounds as though the attacker has already received or bypassed admin credentials. As such, this typically would not meet the bar for security servicing.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;6eee&quot; id=&quot;6eee&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Can you provide a scenario where the attacker does not have, or did not bypass, admin credentials — or, a case where the admin credentials were somehow stolen?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;35b1&quot; id=&quot;35b1&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Regards,&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;4c4d&quot; id=&quot;4c4d&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;MSRC&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;cffa&quot; id=&quot;cffa&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;I’ve replied with a more detailed explanation of the problem, but until today never got any response to this email thread. Anticipating that I would never get any answer on this thread (which proved to be true) I tried to reach out to an individual working at the PKI Operations team inside Microsoft, which manages the public CA and compliance work. I’ve sent out my mail detailing the problem on 08/23/17 in hope that PKI Operations could reach out to MSRC and make them aware of this issue. On the same day, I’ve got a very friendly response notifying me that he’s reaching out to MSRC. A day later I get this response:&lt;/p&gt;
&lt;blockquote name=&quot;fd1d&quot; id=&quot;fd1d&quot; class=&quot;graf graf--blockquote graf-after--p&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Wanted to update you that I’ve been chatting with a senior manager in MSRC. He isn’t able to find your case based on the number you gave below. Any chance you have the actual case number?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;f28c&quot; id=&quot;f28c&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;I did not yet receive a case number from the MSRC team, all I had until now was only the CRM ticket number in the subject line. Did I maybe make a mistake while copy-pasting the CRM ticket number in the previous mail? To make sure it’s the correct number I forwarded the reply I’ve got from the MSRC team (see above) with the ticket number in the subject line to the individual at PKI Operations. He informed me, that the MSRC team could not find my mail. So we agreed that I would send a new mail to the MSRC mailbox (&lt;a href=&quot;mailto:secure@microsoft.com&quot; data-href=&quot;mailto:secure@microsoft.com&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;secure@microsoft.com&lt;/a&gt;) from a different mail address.&lt;/p&gt;
&lt;p name=&quot;2d92&quot; id=&quot;2d92&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This time around I actually got a case number a few hours later:&lt;/p&gt;
&lt;blockquote name=&quot;c84b&quot; id=&quot;c84b&quot; class=&quot;graf graf--blockquote graf-after--p&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Thank you very much for your report.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;d9c1&quot; id=&quot;d9c1&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;I have opened case 40397 and the case manager, Sean will be in touch when there is more information.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;803e&quot; id=&quot;803e&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;[…]&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;4f23&quot; id=&quot;4f23&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;If at any time you have questions or want to share more information, please respond to this message.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;b742&quot; id=&quot;b742&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Regards,&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;1e11&quot; id=&quot;1e11&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Microsoft Security Response Center&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;a7b4&quot; id=&quot;a7b4&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;With the new case number, I’ve contacted the very helpful individual at PKI Operations and two days later got this response:&lt;/p&gt;
&lt;blockquote name=&quot;6e6b&quot; id=&quot;6e6b&quot; class=&quot;graf graf--blockquote graf-after--p&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Update, the folks at MSRC still aren’t able to find this case, but the manager involved a bunch more people, so we are all looking into this 😊&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;bb88&quot; id=&quot;bb88&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;A day later the individual at PKI Operations informed me that MSRC has found the mail and is &lt;em class=&quot;markup--em markup--p-em&quot;&gt;actively engaged.&lt;/em&gt; I’m very thankful for the effort put in by the individual to get my report in front of the right people, though in an ideal world this step should not have been necessary.&lt;/p&gt;
&lt;p name=&quot;9ce5&quot; id=&quot;9ce5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Since I still haven’t heard from MSRC a week later, I’ve continued to follow-up on a weekly basis.&lt;/p&gt;
&lt;p name=&quot;2548&quot; id=&quot;2548&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;To be clear: I did not expect resolution of the problem within a couple of weeks, all I wanted was a simple response like “Yep, we’ve got your mail and a human is looking into it” directly from the MSRC team.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;d047&quot; id=&quot;d047&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There are so many stories online &lt;a href=&quot;https://arstechnica.com/information-technology/2015/03/microsoft-takes-4-years-to-recover-privileged-tls-certificate-addresses/&quot; data-href=&quot;https://arstechnica.com/information-technology/2015/03/microsoft-takes-4-years-to-recover-privileged-tls-certificate-addresses/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;like this one&lt;/a&gt;, where the ticket did not get any attention for years. Since Dynamics 365 for Finance and Operations is business critical software and the data transferred over the TLS connection is of very sensitive nature I wanted to make sure that somebody is actually working on this problem.&lt;/p&gt;
&lt;p name=&quot;1941&quot; id=&quot;1941&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At the end of September after various follow-up mails, I still have not received a single response from MSRC on both threads. So I’ve sent them an mail detailing that this would be my last attempt to contact them and a full disclosure would trigger, if they would not respond within the next 10 days.&lt;/p&gt;
&lt;p name=&quot;c833&quot; id=&quot;c833&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Ten days later having received no response from MSRC, out of desperation and curiosity I’ve tried to contact the regular Microsoft support using their online chat feature in hope they could get me in touch with someone in the organisation or at least forward a message to them. I’ve detailed what happened until now and explained, that I’m trying to reach the MSRC team. A few minutes later, I’ve received this phone number from the support: (562) 981–7600. Could that be the real deal? A call to this number revealed, that it belongs to the &lt;a href=&quot;https://www.msrc.org/&quot; data-href=&quot;https://www.msrc.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Marine Spill Response Corporation&lt;/a&gt; (MSRC), &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;the largest, dedicated oil spill and emergency response organization in the United States.&lt;/em&gt;&lt;/strong&gt; I’m sure a leaked TLS certificate is a serious offense, but is a different kind of leak which needs a different kind of expertise to be handled ;-)&lt;/p&gt;
&lt;p name=&quot;81ca&quot; id=&quot;81ca&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In a last-ditch effort, I even tried to reach out to them via twitter.&lt;/p&gt;

&lt;p name=&quot;eb11&quot; id=&quot;eb11&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;I’ve almost given up at this point in time, but to my surprise, I received a response on twitter followed by a mail a couple of days later ensuring me that “the servicing team for this endpoint [is] expressly committed to fixing this issue as soon as possible. I will keep you posted with updates.”&lt;/p&gt;
&lt;p name=&quot;f7b5&quot; id=&quot;f7b5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At this point, it should be clear to the reader, that neither of those things happened. The certificate was still out there in use — more than 100 days after the initial discovery. Follow-ups remained unanswered.&lt;/p&gt;
&lt;p name=&quot;9aa1&quot; id=&quot;9aa1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Frustrated with the experience, I started to write this blog post with the intent to do a “Full Disclosure”, but then decided against it due to the nature of the affected systems. Instead, I’ve decided to contact journalists at German IT news outlets via PGP encrypted mail.&lt;/p&gt;
&lt;p name=&quot;4ed1&quot; id=&quot;4ed1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Hanno Böck, a freelance journalist writing for many German outlets including Golem.de responded to my inquiry and as a result of our communication directly engaged with Microsoft’s public relations office and opened a &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1421820&quot; data-href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1421820&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;ticket&lt;/a&gt; on the Mozilla bug tracker.&lt;/p&gt;
&lt;p name=&quot;2f1c&quot; id=&quot;2f1c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The “Baseline Requirements Certificate Policy”, a policy document stating all requirements which have to be met in order for a certificate issuing entity to be included into the trust store of most browsers, issued by the “CA/Browser Forum” states that “the CA SHALL revoke a Certificate within 24 hours […]”. As a web browser vendor Mozilla does a good job at making sure those policies are being followed, which was the reason for opening a ticket with them.&lt;/p&gt;
&lt;p name=&quot;9213&quot; id=&quot;9213&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Not even a week later a new case manager at MSRC finally replied to my ticket that all wildcard certificates associated with Dynamics 365 for Finance and Operations have been revoked and replaced with customer-environment-specific ones.&lt;/p&gt;
&lt;p name=&quot;2e50&quot; id=&quot;2e50&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You can find the story published by Hanno Böck @ Golem here (now in English as well): &lt;a href=&quot;https://www.golem.de/news/microsoft-dynamics-365-wildcard-certificate-with-a-private-key-for-everyone-1712-131544.html&quot; data-href=&quot;https://www.golem.de/news/microsoft-dynamics-365-wildcard-certificate-with-a-private-key-for-everyone-1712-131544.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;https://www.golem.de/news/microsoft-dynamics-365-wildcard-certificate-with-a-private-key-for-everyone-1712-131544.html&lt;/a&gt;&lt;/p&gt;
&lt;p name=&quot;89d6&quot; id=&quot;89d6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;While the specific security issue is now resolved, this experience showed me once more that there are many unresolved problems of systemic nature in the way the integrity of computing systems and digital communication is ensured. But that’s a topic for another blog post.&lt;/p&gt;
&lt;p name=&quot;0573&quot; id=&quot;0573&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;You can reach out to me via twitter (@cerebuild) or e-mail at matthias@gliwka.eu. You can find the legal notice required by German law on most websites&lt;/em&gt; &lt;a href=&quot;https://medium.com/@gliwka/legal-notice-4e1714db9a29&quot; data-href=&quot;https://medium.com/@gliwka/legal-notice-4e1714db9a29&quot; class=&quot;markup--anchor markup--p-anchor&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;here&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;9b9f&quot; id=&quot;9b9f&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Noteworthy dates:&lt;br/&gt;08/14/17 — Initial discovery of the leaked certificate&lt;br/&gt;08/17/17 — First successful contact to MSRC (thread #1)&lt;br/&gt;08/22/17 — Response from MSRC, detailing that it doesn’t meet the bar for security servicing (thread #1). Last mail from MSRC on this thread.&lt;br/&gt;08/22/17 — Mail sent to MSRC detailing why this issue should be dealt with (thread #1)&lt;br/&gt;08/23/17 — First mail to individual at PKI Operations&lt;br/&gt;08/23/17 — Response from PKI Operations&lt;br/&gt;08/24/17 — Response from PKI Operations that MSRC is not able to find my case&lt;br/&gt;08/24/17 — Forwarded MSRC mail (thread #1) to PKI Operations&lt;br/&gt;08/25/17 — Response from PKI Operations that MSRC is still trying to find the mail&lt;br/&gt;08/25/17 — Offered to re-send the mail to MSRC using a different mail address to PKI Operations&lt;br/&gt;08/25/17 — Sent problem description to MSRC again (thread #2)&lt;br/&gt;08/25/17 — Received a reply from MSRC with a case number (thread #2). This was the last mail received from MSRC on this thread.&lt;br/&gt;08/26/17 — Forwarded mail with the case number to PKI Operations&lt;br/&gt;08/28/17 — Received mail from PKI Operations detailing that MSRC was still looking for the new case (thread #2)&lt;br/&gt;08/29/17 — Received mail from PKI Operations that MSRC found the mail.&lt;br/&gt;09/01/17 — Received mail from individual at PKI Operations that he’s dropping off this, because MSRC is “actively engaged”&lt;br/&gt;09/07/17 — Follow-up with MSRC (thread #2) — No response&lt;br/&gt;09/12/17 — Follow-up with MSRC (thread #2) — No response&lt;br/&gt;09/18/17 — Follow-up with MSRC (thread #2) — No response&lt;br/&gt;09/26/17 — Follow-up with MSRC (thread #2) — No response&lt;br/&gt;10/04/17 — Tweet to @msftsecresponse&lt;br/&gt;10/10/17 — Finally got the first response via Twitter + mail&lt;br/&gt;11/15/17 — Last follow-up&lt;br/&gt;11/29/17 — Ticket on Mozilla’s Bug Tracker and second line of communication with Microsoft has been opened by the journalist Hanno Böck&lt;br/&gt;12/05/17 — Issue has been fixed by Microsoft, got reply from MSRC&lt;/p&gt;
</description>
<pubDate>Fri, 08 Dec 2017 12:11:58 +0000</pubDate>
<dc:creator>mgliwka</dc:creator>
<og:title>Microsoft leaks TLS private key for cloud ERP product</og:title>
<og:url>https://medium.com/matthias-gliwka/microsoft-leaks-tls-private-key-for-cloud-erp-product-10b56f7d648</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*FZu2IlFTZuDKIMChpR4m6w.png</og:image>
<og:description>… and it was still in use for more than 100 days after the initial report</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/matthias-gliwka/microsoft-leaks-tls-private-key-for-cloud-erp-product-10b56f7d648</dc:identifier>
</item>
<item>
<title>Looking Forward to 2018</title>
<link>https://letsencrypt.org//2017/12/07/looking-forward-to-2018.html</link>
<guid isPermaLink="true" >https://letsencrypt.org//2017/12/07/looking-forward-to-2018.html</guid>
<description>&lt;p&gt;Let’s Encrypt had a great year in 2017. We more than doubled the number of active (unexpired) certificates we service to 46 million, we just about tripled the number of unique domains we service to 61 million, and we did it all while maintaining a stellar security and compliance track record. Most importantly though, &lt;a href=&quot;https://letsencrypt.org/stats/&quot;&gt;the Web went from 46% encrypted page loads to 67%&lt;/a&gt; according to statistics from Mozilla - a gain of 21 percentage points in a single year - incredible. We’re proud to have contributed to that, and we’d like to thank all of the other people and organizations who also worked hard to create a more secure and privacy-respecting Web.&lt;/p&gt;&lt;p&gt;While we’re proud of what we accomplished in 2017, we are spending most of the final quarter of the year looking forward rather than back. As we wrap up our own planning process for 2018, I’d like to share some of our plans with you, including both the things we’re excited about and the challenges we’ll face. We’ll cover service growth, new features, infrastructure, and finances.&lt;/p&gt;

&lt;p&gt;We are planning to double the number of active certificates and unique domains we service in 2018, to 90 million and 120 million, respectively. This anticipated growth is due to continuing high expectations for HTTPS growth in general in 2018.&lt;/p&gt;
&lt;p&gt;Let’s Encrypt helps to drive HTTPS adoption by offering a free, easy to use, and globally available option for obtaining the certificates required to enable HTTPS. HTTPS adoption on the Web took off at an unprecedented rate from the day Let’s Encrypt launched to the public.&lt;/p&gt;
&lt;p&gt;One of the reasons Let’s Encrypt is so easy to use is that our community has done great work making client software that works well for a wide variety of platforms. We’d like to thank everyone involved in the development of over 60 &lt;a href=&quot;https://letsencrypt.org/docs/client-options/&quot;&gt;client software options for Let’s Encrypt&lt;/a&gt;. We’re particularly excited that support for the ACME protocol and Let’s Encrypt is &lt;a href=&quot;https://letsencrypt.org/2017/10/17/acme-support-in-apache-httpd.html&quot;&gt;being added to the Apache httpd server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other organizations and communities are also doing great work to promote HTTPS adoption, and thus stimulate demand for our services. For example, browsers are starting to make their users more aware of the risks associated with unencrypted HTTP (e.g. &lt;a href=&quot;https://blog.mozilla.org/security/2017/01/20/communicating-the-dangers-of-non-secure-http/&quot;&gt;Firefox&lt;/a&gt;, &lt;a href=&quot;https://security.googleblog.com/2017/04/next-steps-toward-more-connection.html&quot;&gt;Chrome&lt;/a&gt;). Many hosting providers and CDNs are making it easier than ever for all of their customers to use HTTPS. &lt;a href=&quot;https://https.cio.gov/&quot;&gt;Government&lt;/a&gt; &lt;a href=&quot;https://www.canada.ca/en/treasury-board-secretariat/services/information-technology/strategic-plan-2017-2021.html#toc8-3-2&quot;&gt;agencies&lt;/a&gt; are waking up to the need for stronger security to protect constituents. The media community is working to &lt;a href=&quot;https://securethe.news/&quot;&gt;Secure the News&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We’ve got some exciting features planned for 2018.&lt;/p&gt;
&lt;p&gt;First, we’re planning to introduce an ACME v2 protocol API endpoint and &lt;a href=&quot;https://letsencrypt.org/2017/07/06/wildcard-certificates-coming-jan-2018.html&quot;&gt;support for wildcard certificates&lt;/a&gt; along with it. Wildcard certificates will be free and available globally just like our other certificates. We are planning to have a public test API endpoint up by January 4, and we’ve set a date for the full launch: Tuesday, February 27.&lt;/p&gt;
&lt;p&gt;Later in 2018 we plan to introduce ECDSA root and intermediate certificates. ECDSA is generally considered to be the future of digital signature algorithms on the Web due to the fact that it is more efficient than RSA. Let’s Encrypt will currently sign ECDSA keys from subscribers, but we sign with the RSA key from one of our intermediate certificates. Once we have an ECDSA root and intermediates, our subscribers will be able to deploy certificate chains which are entirely ECDSA.&lt;/p&gt;

&lt;p&gt;Our CA infrastructure is capable of issuing millions of certificates per day with multiple redundancy for stability and a wide variety of security safeguards, both physical and logical. Our infrastructure also generates and signs nearly 20 million OCSP responses daily, and serves those responses nearly 2 billion times per day. We expect issuance and OCSP numbers to double in 2018.&lt;/p&gt;
&lt;p&gt;Our physical CA infrastructure currently occupies approximately 70 units of rack space, split between two datacenters, consisting primarily of compute servers, storage, HSMs, switches, and firewalls.&lt;/p&gt;
&lt;p&gt;When we issue more certificates it puts the most stress on storage for our databases. We regularly invest in more and faster storage for our database servers, and that will continue in 2018.&lt;/p&gt;
&lt;p&gt;We’ll need to add a few additional compute servers in 2018, and we’ll also start aging out hardware in 2018 for the first time since we launched. We’ll age out about ten 2u compute servers and replace them with new 1u servers, which will save space and be more energy efficient while providing better reliability and performance.&lt;/p&gt;
&lt;p&gt;We’ll also add another infrastructure operations staff member, bringing that team to a total of six people. This is necessary in order to make sure we can keep up with demand while maintaining a high standard for security and compliance. Infrastructure operations staff are systems administrators responsible for building and maintaining all physical and logical CA infrastructure. The team also manages a 24/7/365 on-call schedule and they are primary participants in both security and compliance audits.&lt;/p&gt;

&lt;p&gt;We pride ourselves on being an efficient organization. In 2018 Let’s Encrypt will secure a large portion of the Web with a budget of only $3.0M. For an overall increase in our budget of only 13%, we will be able to issue and service twice as many certificates as we did in 2017. We believe this represents an incredible value and that contributing to Let’s Encrypt is one of the most effective ways to help create a more secure and privacy-respecting Web.&lt;/p&gt;
&lt;p&gt;Our 2018 fundraising efforts are off to a strong start with Platinum sponsorships from Mozilla, Akamai, OVH, Cisco, Google Chrome and the Electronic Frontier Foundation. The Ford Foundation has renewed their grant to Let’s Encrypt as well. We are seeking additional sponsorship and grant assistance to meet our full needs for 2018.&lt;/p&gt;
&lt;p&gt;We had originally budgeted $2.91M for 2017 but we’ll likely come in under budget for the year at around $2.65M. The difference between our 2017 expenses of $2.65M and the 2018 budget of $3.0M consists primarily of the additional infrastructure operations costs previously mentioned.&lt;/p&gt;

&lt;p&gt;We depend on contributions from our community of users and supporters in order to provide our services. If your company or organization would like to &lt;a href=&quot;https://letsencrypt.org/become-a-sponsor/&quot;&gt;sponsor&lt;/a&gt; Let’s Encrypt please email us at &lt;a href=&quot;mailto:sponsor@letsencrypt.org&quot;&gt;sponsor@letsencrypt.org&lt;/a&gt;. We ask that you make an &lt;a href=&quot;https://letsencrypt.org/donate/&quot;&gt;individual contribution&lt;/a&gt; if it is within your means.&lt;/p&gt;
&lt;p&gt;We’re grateful for the industry and community support that we receive, and we look forward to continuing to create a more secure and privacy-respecting Web!&lt;/p&gt;
</description>
<pubDate>Fri, 08 Dec 2017 07:53:30 +0000</pubDate>
<dc:creator>l1n</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://letsencrypt.org//2017/12/07/looking-forward-to-2018.html</dc:identifier>
</item>
</channel>
</rss>