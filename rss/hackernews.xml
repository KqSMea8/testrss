<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Let&amp;#039;s Encrypt tls-sni-01 disabled due to credible vulnerability report</title>
<link>https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5a55777ed9a9c1024c00b241</link>
<guid isPermaLink="true" >https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5a55777ed9a9c1024c00b241</guid>
<description>&lt;div class=&quot;row&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;col-xs-12 col-md-2&quot;&gt;
&lt;p class=&quot;pull-left text event_inner_title&quot;&gt;Components&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;col-xs-12 col-md-10&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;incident_section event_inner_text&quot;&gt;acme-staging-v02.api.letsencrypt.org (Staging), acme-staging.api.letsencrypt.org (Staging), acme-v01.api.letsencrypt.org (Production)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot; readability=&quot;6.5&quot;&gt;

&lt;div class=&quot;col-xs-12 col-md-10&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;incident_section event_inner_text&quot;&gt;High Assurance Datacenter 1, High Assurance Datacenter 2&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;div class=&quot;row&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;incident_time&quot;&gt;January 10, 2018 02:16 UTC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Investigating]&lt;/strong&gt; &lt;span id=&quot;statusio_incident_message_5a55777ed9a9c1024c00b246&quot; class=&quot;incident_message_details&quot;&gt;The tls-sni challenge has been disabled due to strong credibility of a vulnerability report.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 10 Jan 2018 02:56:36 +0000</pubDate>
<dc:creator>regecks</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5a55777ed9a9c1024c00b241</dc:identifier>
</item>
<item>
<title>Trends to Avoid When Founding a Startup</title>
<link>http://www.fast.ai/2018/01/08/startups/</link>
<guid isPermaLink="true" >http://www.fast.ai/2018/01/08/startups/</guid>
<description>&lt;span class=&quot;post-date&quot;&gt;08 Jan 2018 &lt;em&gt;Rachel Thomas&lt;/em&gt;&lt;/span&gt; &lt;span&gt;[ &lt;a href=&quot;http://www.fast.ai/tag/advice&quot;&gt;&lt;code class=&quot;highligher-rouge&quot;&gt;&lt;nobr&gt;advice&lt;/nobr&gt;&lt;/code&gt;&lt;/a&gt; ]&lt;/span&gt;
&lt;p&gt;&lt;em&gt;This post was inspired by a round-table discussion I led on the topics of founding start-ups and personal branding at the &lt;a href=&quot;http://wimlworkshop.org/2017/&quot;&gt;Women in Machine Learning Workshop&lt;/a&gt;, co-located with deep learning conference &lt;a href=&quot;https://nips.cc/&quot;&gt;NIPS&lt;/a&gt;. I covered &lt;a href=&quot;http://www.fast.ai/2017/12/18/personal-brand/&quot;&gt;personal branding in a previous post&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I first moved to San Francisco in 2012, I was thrilled by how many startups there are here; the culture seemed so creative! Then I realized that most of the startups were &lt;strong&gt;indistinguishable&lt;/strong&gt; from one another: nearly everyone was following the &lt;strong&gt;same destructive trends&lt;/strong&gt; which are &lt;strong&gt;bad for employees&lt;/strong&gt; and &lt;strong&gt;bad for products&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you are working on a startup, I want you to know that there are options in how to to do things. After working at several startups and watching friends found start-ups, I took the leap and started fast.ai, together with Jeremy Howard. We are unusual in many ways: we have no interest in growing our tiny team; we are allergic to traditional venture capital; and we don’t plan to hire any deep learning PhDs. Yet we are still having a big impact!&lt;/p&gt;
&lt;img class=&quot;image&quot; width=&quot;450&quot; src=&quot;http://www.fast.ai/images/nikkei.jpg&quot; alt=&quot;fast.ai founders Jeremy and Rachel speaking at the Nikkei Innovation Forum&quot;/&gt; fast.ai founders Jeremy and Rachel speaking at the Nikkei Innovation Forum
&lt;p&gt;If you are going to avoid making the same mistakes that so many entrepreneurs have made, the first step is to be able to recognize them. I’ve identified 5 dominant narratives in Bay Area Tech start-ups that not only harm employees, but lead to weaker companies and worse products. This post offers a high-level overview, and I’ll dig into the trends in greater detail in future posts (adding links as I do so):&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Venture Capital&lt;/strong&gt; often pushes what could’ve been a successful small business to over-expand and ultimately fail; prevents companies from focusing their priorities; distracts from finding a monetization plan; causes conflict due to the misalignment of incentives between VCs and founders; and is full of far too many unethical bullies and thugs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hypergrowth&lt;/strong&gt; is nearly impossible to manage and leads to communication failures, redundant work, burnout, and high employee attrition.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trying to be “like a family”&lt;/strong&gt; severely limits your pool of potential employees, leaves you unprepared for conflict or HR incidents, and sets employees up to feel betrayed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attempting to productionize a PhD thesis&lt;/strong&gt; is rarely a good business plan. The priorities and values of academia and business are drastically different.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hiring a bunch of academic researchers&lt;/strong&gt; will not improve your product and harms your company by diverting so many resources (unless your goal is an aquihire).&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I recognize that there are many startups following these trends that have high-valuations on paper. However, that does not mean that these companies will succeed in the long-term (we’ve already seen many highly valued, high profile startups fail in recent years).&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-1-venture-capital&quot;&gt;Negative trend 1: Venture Capital&lt;/h2&gt;
&lt;p&gt;Imagine you were to create a business where you could profitably support yourself and 10 employees selling a product your customers liked, and after running it for 10 years you sold it for $10 million, of which half ended up in your pocket and half with your employees. Most VCs would consider that an &lt;strong&gt;abject failure&lt;/strong&gt;. They are looking for at least 100x returns, because all of their profits come from the one or two best performers in their portfolio.&lt;/p&gt;
&lt;p&gt;Therefore, VCs often push companies to grow too quickly, before they’ve nailed down product-market fit and monetization. Growing at a slow, sustainable rate helps keep your priorities in order. Funding yourself (through part-time consulting, saving up money in advance, and/or getting a simple product to market quickly) will force you to stay smaller and grow more slowly than VC funded businesses, but &lt;strong&gt;this is good&lt;/strong&gt;. Staying small keeps you focused on a &lt;strong&gt;small number of high-impact features&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I have seen a lot of deeply unethical, bullying, and downright illegal behavior by venture capitalists against close friends of mine. This is not just a few bad actors: the behavior is wide-spread, including by many well-known and ultra-wealthy investors (although founders often don’t speak out about it because of fear of professional repercussions).&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-2-hypergrowth&quot;&gt;Negative trend 2: Hypergrowth&lt;/h2&gt;
&lt;p&gt;Hypergrowth typically involves: &lt;strong&gt;chaos&lt;/strong&gt;, &lt;strong&gt;inefficiency&lt;/strong&gt;, and &lt;strong&gt;severe burn-out&lt;/strong&gt; (none of which is good for your business) I’ve worked at several companies that have doubled in size in just a year. It was always painful and chaotic. Communication broke down. There was duplicate and redundant work. Company politics became increasingly destructive. Burnout was endemic and many people quit. In all cases, &lt;strong&gt;the quality of the product suffered&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Management is hard, and management of hypergrowth is an order of magnitude harder. So many start-ups work their employees into the ground for the sake of short-term growth. Burnout is a very real and expensive problem in the tech industry, and hypergrowth routinely leads to burnout.&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-3-our-startup-is-like-a-family&quot;&gt;Negative trend 3: “Our startup is like a family”&lt;/h2&gt;
&lt;p&gt;Many startups claim that they’re creating a family-like culture amongst their employees: they don’t just work together, they go out after work, share the same hobbies, and are best friends. Doing this &lt;strong&gt;severely limits&lt;/strong&gt; your pool of potential employees. Employees with &lt;strong&gt;health problems, long commutes, families, outside hobbies, outside friendships, or from under-represented groups&lt;/strong&gt; may all struggle to thrive in such a culture.&lt;/p&gt;
&lt;p&gt;Secondly, you are making a promise you can’t keep, which sets people up for &lt;strong&gt;feeling betrayed&lt;/strong&gt;. You’re not actually a family; you are a company. You will need to make hard decisions for the sake of the business. You can’t actually offer people anything remotely close to lifelong loyalty or security, and it’s dishonest to implicitly do so.&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-4-ai-specific-productionizing-your-phd-thesis&quot;&gt;Negative trend 4 (AI specific): Productionizing your PhD thesis&lt;/h2&gt;
&lt;p&gt;The best approach to starting a start-up is to address a problem that people in the business world have. Your PhD thesis is not doing this, and it is highly unlikely that it will give you a competitive edge. You and your adviser picked your thesis topic because it’s an interesting technical problem with good opportunities to publish, &lt;strong&gt;not&lt;/strong&gt; because it has a large opportunity for impact in an underserved market with few barriers to entry.&lt;/p&gt;
&lt;p&gt;In the business world, products are not evaluated on underlying theoretical novelty, but on implementation, ease-of-use, effectiveness, and how they relate to revenues.&lt;/p&gt;
&lt;h2 id=&quot;negative-trend-5-ai-specific-hiring-a-bunch-of-phds&quot;&gt;Negative trend 5 (AI specific): Hiring a bunch of PhDs&lt;/h2&gt;
&lt;p&gt;You almost certainly do not need a bunch of PhDs. There are so many things that go into a successful product beyond the algorithm: the product-market fit, software engineering that productionizes and deploys it, the act of selling it, supporting your users, etc. And even for highly technical aspects like deep learning, fast.ai has shown that people with 1-year of coding experience can become world-class deep learning practitioners; you don’t need to hire Stanford PhDs. By diverting valuable resources into academic research at your startup, you are hurting the product.&lt;/p&gt;
&lt;h2 id=&quot;my-journey-to-fastai&quot;&gt;My journey to fast.ai&lt;/h2&gt;
&lt;p&gt;Whilst avoiding these trends, fast.ai has accomplished far more than I ever expected in our first year and a half: over 100,000 people have started our &lt;a href=&quot;http://course.fast.ai/&quot;&gt;Practical Deep Learning for Coders course&lt;/a&gt; and fast.ai students have landed new jobs, launched companies, had their work &lt;a href=&quot;https://medium.com/@timanglade/how-hbos-silicon-valley-built-not-hotdog-with-mobile-tensorflow-keras-react-native-ef03260747f3&quot;&gt;shown on HBO&lt;/a&gt;, been &lt;a href=&quot;https://www.forbes.com/sites/mariyayao/2017/04/10/why-we-need-to-democratize-ai-machine-learning-education/#7b9552a81197&quot;&gt;featured in Forbes&lt;/a&gt;, won hackathons, and been accepted to the Google Brain AI Residency. Fast.ai has been mentioned in the &lt;a href=&quot;https://hbr.org/cover-story/2017/07/the-business-of-artificial-intelligence&quot;&gt;Harvard Business Review&lt;/a&gt; and the &lt;a href=&quot;https://www.nytimes.com/2017/10/22/technology/artificial-intelligence-experts-salaries.html&quot;&gt;New York Times&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fast.ai is solving a problem that I experienced first-hand: how hard it can be to break into deep learning and gain practical AI knowledge if you don’t have the “right” background and didn’t train with the academic stars of the field. I have seen and experienced some of the &lt;strong&gt;obstacles facing outsiders: inequality, discrimination, and lack of access&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I grew up in Texas (not in a major city) and attended a poor, predominantly Black public high school that was later ranked in &lt;strong&gt;the bottom 2% of Texas schools&lt;/strong&gt;. We had far fewer resources and opportunities compared to the wealthier, predominantly White schools around us. In graduate school, the sexism and harassment I experienced led me to abandon my dreams of becoming a math professor, although &lt;a href=&quot;https://medium.com/tech-diversity-files/if-you-think-women-in-tech-is-just-a-pipeline-problem-you-haven-t-been-paying-attention-cb7a2073b996&quot;&gt;I then experienced similar problems in the the tech industry&lt;/a&gt;. When I first became interested in deep learning in 2013, I found that &lt;a href=&quot;https://vimeo.com/214233053&quot;&gt;experts weren’t writing down the practical methods&lt;/a&gt; they used to actually get their research to work, instead just publishing the theory. I believe deep learning will have a huge impact across all industries, and I want the creators of this technology to be a more diverse and less exclusive group.&lt;/p&gt;
&lt;p&gt;With fast.ai, I’m finally able to do work completely in line with my values, on a tiny team characterized by trust and respect. Having a small team forces us to prioritize ruthlessly, and to focus only on what we value most or think will be highest impact. Something that has surprised me with fast.ai is how much I’ve been able to invest in my own career and own skills, in ways that I never could in previous jobs. Jeremy and I are committed to fast.ai for the long term, so neither of us has any interest in burning out. We believe you can have an impact with your work, without destroying your health and relationships.&lt;/p&gt;
&lt;p&gt;I’d love to see more small companies building useful products in a healthy and sustainable way.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;To discuss this post at Hacker News, &lt;a href=&quot;javascript:window.location=%22http://news.ycombinator.com/submitlink?u=%22+encodeURIComponent(document.location)+%22&amp;amp;t=%22+encodeURIComponent(&amp;quot;Five%20Trends%20to%20Avoid%20When%20Founding%20a%20Startup&amp;quot;)&quot;&gt;click here&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 10 Jan 2018 00:12:24 +0000</pubDate>
<dc:creator>rmason</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.fast.ai/2018/01/08/startups/</dc:identifier>
</item>
<item>
<title>James Dolan, co-creator of SecureDrop, has died</title>
<link>https://freedom.press/news/tribute-james-dolan-co-creator-securedrop-who-has-tragically-passed-away-age-36/</link>
<guid isPermaLink="true" >https://freedom.press/news/tribute-james-dolan-co-creator-securedrop-who-has-tragically-passed-away-age-36/</guid>
<description>&lt;p&gt;Beyond a couple references on our website, that New Yorker story is virtually all that is in the public domain about James’s involvement in the project—and that’s how he preferred it. James was an intensely private and modest person, and despite the fact the SecureDrop soon got a lot of attention when Freedom of the Press Foundation (FPF) took the project over, he constantly insisted that Aaron deserved all the credit.&lt;/p&gt;
&lt;p&gt;Yet SecureDrop would not currently exist without James, and he deserves all the commendation in the world for making it what it is today.&lt;/p&gt;
&lt;p&gt;In January 2013, Aaron Swartz himself committed suicide as the US government was attempting to prosecute him for violating the Computer Fraud and Abuse Act related to allegedly copying academic articles from JSTOR. SecureDrop was an unrelated side project he was working on at the time. A few months after Aaron’s tragic death, Kevin Poulsen donated the SecureDrop project to FPF, in the hopes that we could revive it and get it in a place where more news organizations could use it.&lt;/p&gt;
&lt;p&gt;At that point, James was literally the only person in the world who knew all the ins and outs of the system, how to install it, and how to make it better. He had a high-paying computer security job at a large company by then, but I asked him if he’d be willing to come work for us so we could try to get SecureDrop into more newsrooms. We had hardly any money at the time, yet he immediately agreed—even though it meant taking an 80% pay cut. (Later, he would even refuse to accept a raise, insisting that we use any new funding to hire additional people to work on the project instead.)&lt;/p&gt;
&lt;p&gt;He was our first full-time employee at Freedom of the Press Foundation, and quickly set out to teach other developers, contributors, and anyone interested in how the system worked. He poured his heart and soul into the work, traveling to newsrooms around North America to teach IT staffs and journalists in person how to install and use SecureDrop. He completely reworked the installation process, he pushed us to get independent security audits of the system, and he helped us hire the initial team that would take over SecureDrop once he was gone.&lt;/p&gt;
&lt;p&gt;James’s encyclopedic knowledge of computer and network security was a key reason why newsrooms were comfortable adopting SecureDrop when it was still seen as something relatively new and unknown.&lt;/p&gt;
&lt;p&gt;James left FPF in August of 2015 after he felt the project was in a place where it could survive without him. Ever since, he had been working on the security team at &lt;a href=&quot;https://www.classy.org/&quot;&gt;Classy&lt;/a&gt;, a crowdfunding site for non-profit organizations located in San Diego.&lt;/p&gt;
&lt;p&gt;We don’t know why James took his own life; we do know, however, he long suffered from PTSD from his time serving in the Marines during the Iraq War. It was an experience that affected him in multiple ways. He often cited the Iraq War as his inspiration for wanting to help journalists and whistleblowers; it made him realize governments needed to be much more transparent and accountable.&lt;/p&gt;
&lt;p&gt;Memorial services have not yet been finalized, but if you knew James personally, please feel free to reach out to us through &lt;a href=&quot;https://freedom.press/contact/&quot;&gt;our contact form&lt;/a&gt;, and we are happy to keep you informed of anything we learn.&lt;/p&gt;
&lt;p&gt;Finally, if you suffer from depression or PTSD and are considering harming yourself, please reach out to &lt;a href=&quot;https://suicidepreventionlifeline.org/&quot;&gt;Suicide Prevention Lifeline&lt;/a&gt;. Some of our best and brightest minds have suffered in silence, and sometimes keep loved ones in the dark. Please know that you are not alone.&lt;/p&gt;
&lt;p&gt;It is impossible to overstate how fundamentally important James Dolan was to the development of both Freedom of the Press Foundation and SecureDrop. We are heartbroken he is gone, but we are also eternally grateful to have known and worked with him.&lt;/p&gt;
</description>
<pubDate>Tue, 09 Jan 2018 19:39:28 +0000</pubDate>
<dc:creator>uptown</dc:creator>
<og:title>A tribute to James Dolan, co-creator of SecureDrop, who has tragically passed away at age 36</og:title>
<og:url>https://freedom.press/news/tribute-james-dolan-co-creator-securedrop-who-has-tragically-passed-away-age-36/</og:url>
<og:type>article</og:type>
<og:description>In memory of computer security expert James Dolan, 1981-2017. </og:description>
<og:image>https://freedom.press/media/images/dolan.width-1600.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://freedom.press/news/tribute-james-dolan-co-creator-securedrop-who-has-tragically-passed-away-age-36/</dc:identifier>
</item>
<item>
<title>A letter about Google AMP</title>
<link>http://ampletter.org/</link>
<guid isPermaLink="true" >http://ampletter.org/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;/&gt;&lt;title&gt;AMP letter&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;123.02578304049&quot;&gt;
&lt;header readability=&quot;3&quot;&gt;
&lt;/header&gt;&lt;article class=&quot;container&quot; lang=&quot;en&quot; readability=&quot;38.70382471651&quot;&gt;&lt;p&gt;We are a community of individuals who have a significant interest in the development and health of the World Wide Web (“the Web”), and &lt;strong&gt;we are deeply concerned&lt;/strong&gt; about &lt;a href=&quot;https://ampproject.org&quot;&gt;Accelerated Mobile Pages&lt;/a&gt; (“AMP”), a Google project that purportedly seeks to improve the user experience of the Web.&lt;/p&gt;
&lt;p&gt;In fact, AMP keeps users within Google’s domain and diverts traffic away from other websites for the benefit of Google. At a scale of billions of users, this has the effect of further &lt;strong&gt;reinforcing Google’s dominance of the Web&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We acknowledge the problem of Web pages being slow to load, relative to alternative, proprietary technologies such as &lt;a href=&quot;https://instantarticles.fb.com/&quot;&gt;Facebook Instant Articles&lt;/a&gt; and &lt;a href=&quot;https://developer.apple.com/news-publisher/&quot;&gt;Apple News&lt;/a&gt;. Publishers (especially in news media) have long faced difficult choices and poor incentives, leading to bad decisions and compromises, and ultimately to terrible user experiences.&lt;/p&gt;
&lt;p&gt;Search engines are in a powerful position to wield influence to solve this problem. However, Google has chosen to create a premium position at the top of their search results (for articles) and a “lightning” icon (for all types of content), which are only accessible to publishers that use a Google-controlled technology, served by Google from their infrastructure, on a Google URL, and placed within a Google controlled user experience. (&lt;a href=&quot;https://developers.google.com/search/docs/guides/about-amp&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The AMP format is not in itself, a problem, but two aspects of its implementation reinforce the position of Google as a de facto standard platform for content, as Google seeks to drive uptake of AMP with content creators:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Content that “opts in” to AMP and the associated hosting within Google’s domain is granted preferential search promotion, including (for news articles) a position above all other results.&lt;/li&gt;
&lt;li&gt;When a user navigates from Google to a piece of content Google has recommended, they are, unwittingly, remaining within Google’s ecosystem.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;If Google’s objective with AMP is indeed to improve user experience on the Web, then we suggest some simple changes that would do that while still allowing the Web to remain dynamic, competitive and consumer-oriented:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Instead of granting premium placement in search results only to AMP, provide the same perks to all pages that meet an objective, neutral performance criterion such as &lt;a href=&quot;https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index&quot;&gt;Speed Index&lt;/a&gt;. Publishers can then use any technical solution of their choice.&lt;/li&gt;
&lt;li&gt;Do not display third-party content within a Google page unless it is clear to the user that they are looking at a Google product. It is perfectly acceptable for Google to launch a “news reader”, but it is not acceptable to display a page that carries only third party branding on what is actually a Google URL, nor to require that third party to use Google’s hosting in order to appear in search results.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;We don’t want to stop Google’s development of AMP, and these changes do not require that. We also applaud search engines that give ranking preference to fast-loading pages. AMP can remain one of a range of technologies that give publishers high quality options for delivering Web pages quickly and making users happy.&lt;/p&gt;
&lt;p&gt;However, publishers should not be compelled by Google’s search dominance to put their content under a Google umbrella. &lt;strong&gt;The Web is not Google, and should not be just Google.&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Sincerely,&lt;/p&gt;
&lt;h2&gt;As individuals&lt;/h2&gt;
&lt;h2&gt;On behalf of organisations&lt;/h2&gt;
&lt;p class=&quot;note&quot;&gt;Signatories are listed in alphabetical order of family name. If you would like to sign this letter please make a &lt;a href=&quot;https://github.com/amp-letter/amp-letter&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;container&quot; lang=&quot;fr&quot; readability=&quot;59.792578935239&quot;&gt;&lt;p&gt;Nous sommes une communauté d’individus ayant un intérêt particulier pour le développement et la bonne santé du World Wide Web (“le Web”), et sommes fortement préoccupés par les “Accelerated Mobile Pages” (AMP), un projet de Google qui prétend améliorer l’expérience utilisateur sur le web.&lt;/p&gt;
&lt;p&gt;En réalité, AMP enferme les utilisateurs et utilisatrices dans l’espace de Google en reroutant le trafic des autres sites au profit de Google. À l’échelle de milliards d’utilisateurs et d’utilisatrices, cela renforce la position déjà largement dominante de Google sur le web.&lt;/p&gt;
&lt;p&gt;Nous reconnaissons le problème de la lenteur de chargement des pages sur le web, par rapport à d’autres technologies propriétaires alternatives telles que Facebook Instant Articles et Apple News. Dans le but de maximiser leurs recettes, les éditeurs de contenu (particulièrement la presse) ont depuis toujours dû faire face à de mauvais choix et des incitations fallacieuses qui ont mené à des décisions qui leur sont nuisibles ainsi qu’aux utilisateurs et utilisatrices qui souffrent d’une mauvaise expérience d’utilisation.&lt;/p&gt;
&lt;p&gt;Les moteurs de recherche se trouvent dans une position privilégiée pour exercer leur influence dans la résolution de ce problème. En revanche, Google en a profité pour créer un placement préférentiel en haut des pages de résultats pour les articles et une icône “éclair” pour tous types de contenus, uniquement accessibles aux éditeurs qui utilisent une technologie contrôlée par Google, servie par Google via leur infrastructure, sur une adresse web (URL) Google, et insérée dans une expérience utilisateur contrôlée par Google.&lt;/p&gt;
&lt;p&gt;Le format AMP n’est pas un souci en soi, mais deux aspects de sa mise en œuvre renforcent la position de Google en tant que standard de facto pour la création et l’hébergement de contenu, à mesure que Google promeut AMP auprès de ceux qui en produisent:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Tout contenu qui choisit de supporter AMP ainsi que l’hébergement affilié sous le domaine Google acquiert une promotion privilégiée dans les résultats de recherche, y compris (pour les articles) un placement au dessus des autres résultats.&lt;/li&gt;
&lt;li&gt;Les utilisateurs et utilisatrices naviguant depuis Google vers un contenu recommandé par Google restent, sans le savoir, dans l’enceinte de l’écosystème Google.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Si l’objectif de Google avec AMP est en réalité d’améliorer l’expérience utilisateur sur le web, alors nous suggérons de simples changements qui serviraient cette cause tout en permettant au web de rester dynamique, compétitif et tourné vers les consommateurs:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Au lieu de réserver un placement préférentiel pour les seuls contenus AMP dans les résultats de recherche, il suffirait de procurer des privilèges similaires à toute page qui satisferait à des critères de performance neutres et objectifs, comme, par exemple, le Speed Index. Les éditeurs pourront ainsi utiliser la solution technique de leur choix.&lt;/li&gt;
&lt;li&gt;Ne pas intégrer de contenus tiers externes dans une page Google, à moins qu’il ne soit clair pour l’utilisateur ou l’utilisatrice d’avoir affaire à un produit Google. Il est parfaitement acceptable que Google lance un “lecteur de nouvelles”, mais il n’est ni acceptable de servir une page n’affichant que du contenu tiers depuis une URL de Google, ni d’obliger le tiers à utiliser l’hébergement de Google pour apparaître plus en évidence dans les résultats de recherche.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Nous ne cherchons pas à stopper le développement de AMP par Google, et ces changements ne le requièrent pas. Aussi, nous approuvons la promotion par les moteurs de recherche des pages performantes. AMP peut demeurer l’une des technologies qui donnent aux éditeurs le choix entre une variété d’options de grande qualité afin de servir des pages Web rapidement et de rendre leur utilisation plus satisfaisante.&lt;/p&gt;
&lt;p&gt;Cependant, les éditeurs ne devraient pas être contraints, par la domination de Google parmi les moteurs de recherche, à mettre leur contenu sous l’égide de Google. Le Web n’est pas Google à lui seul, et ne devrait pas se réduire uniquement à Google.&lt;/p&gt;
&lt;p&gt;Sincèrement,&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;For signatories please refer to the &lt;a href=&quot;http://ampletter.org/?lang=en&quot; data-langswitch=&quot;en&quot;&gt;English version&lt;/a&gt;. Translations are provided for information but should not be considered normative.&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;container&quot; lang=&quot;ja&quot; readability=&quot;41.86641221374&quot;&gt;&lt;p&gt;私たちはワールド・ワイド・ウェブにおける健全さと発展に関して大いに関心を持っている個人達であり、私たちは、ウェブにおけるユーザ体験を向上させる、と喧伝しているGoogleのプロジェクト、AMP(Accelerated Mobile Pages)に対して深い憂慮を抱いています。&lt;/p&gt;
&lt;p&gt;実際にAMPはGoogleのドメイン内にユーザを留め、Googleの利益のためにトラフィックを他のウェブサイトから迂回させています。数十億のユーザを有するGoogleにおいて、そうすることは、より完全なウェブの独占を推し進めることと同義と言えるでしょう。&lt;/p&gt;
&lt;p&gt;Facebookのインスタント・アーティクルやAppleニュースなどのような独自の技術と比べ、ウェブページの読み込みが遅いという問題は確かに存在しています。パブリッシャーは(特に報道メディアにおいては)難しい選択と不十分なインセンティブに長い間直面しており、売上げを最大化するために間違った意志決定や妥協をし、最終的には酷いユーザ体験を提供することになってしまっています。&lt;/p&gt;
&lt;p&gt;検索エンジンはこの問題の解決に対して影響を与える強大なポジションを有しています。しかし、GoogleはGoogleがコントロールするユーザ体験の中、GoogleのURLで、Googleが所有するインフラから、Googleが有する技術を利用したパブリッシャーに対してのみ、その検索結果で記事に対して、よりよい表示場所を提供し、またそれ以外のコンテンツには特別なアイコンを表示させるという方法をとっています。(参照)&lt;/p&gt;
&lt;p&gt;AMPのフォーマットそれ自体は問題ではなく、AMPの利用率が上がるにつれ、その実装のうち以下の2点がGoogleのコンテンツプラットフォームとしてのポジションをデファクト・スタンダード化することにつながっています。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;AMPの利用を”選択”し、Googleのドメインでホストされたコンテンツは検索結果において優先的なプロモーションが許され、ニュースコンテントにおいてはほかの検索結果よりも上位に表示される点&lt;/li&gt;
&lt;li&gt;ユーザがGoogleが推奨するコンテントへナビゲートした際、ユーザは気がつかないうちにGoogleのエコシステム内に留まっている点&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;AMPにおけるGoogleの目標が純粋にウェブのユーザ体験を向上させる事に向けられているなら、以下のシンプルな変更を行うことでウェブをダイナミックで、競争原理の働く、利用者を中心としたままにすることができるでしょう。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;AMPにのみ検索結果での優遇的ポジションを提供するのではなく、Speed Indexのような中立的なパフォーマンス評価を使って同等の目標を達していると判断できる全てのページに対して、同じ処遇を提供するべきだと考えています。そうすることでパブリッシャーは各自の技術的選択をが可能になります&lt;/li&gt;
&lt;li&gt;ユーザが明確にGoogleのプロダクトを閲覧していると分かる形でなければ、Googleのページ内に第三者のコンテントを表示させない。Googleが「ニュースリーダー」を提供することにはなんら問題はありませんが、GoogleのURLであるにも関わらず、第三者のブランディングを表示することや、第三者がGoogleによるホスティングを行わない限り検索結果で上位に表示されない、といったことは受け入れがたい&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Googleに対しAMPの開発を辞めて欲しいと提案しているわけではなく、これらの変更にはその必要もありません。検索結果において読み込みが速いページに対してよいランキングを与えることは素晴らしいことだと思います。AMPがユーザに対して早いウェブページを提供し、ユーザを幸せにするためにパブリッシャーが活用できる高品質な選択肢の1つとしての存在であり続けることは可能でしょう。&lt;/p&gt;
&lt;p&gt;しかし、パブリッシャーがGoogleの検索における独占的な地位を背景にコンテントをGoogleの中に入れざるを得ない状況は避けるべきだと考えています。 ウェブはGoogleではありませんし、Googleのみがウェブではないのですから。&lt;/p&gt;
&lt;p&gt;敬具&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;For signatories please refer to the &lt;a href=&quot;http://ampletter.org/?lang=en&quot; data-langswitch=&quot;en&quot;&gt;English version&lt;/a&gt;. Translations are provided for information but should not be considered normative.&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;container&quot; lang=&quot;es&quot; readability=&quot;59.769585253456&quot;&gt;&lt;p&gt;Somos una comunidad de individuos con un gran interés en la salud y el desarrollo de la World Wide Web (“la Web”), y estamos profundamente preocupados con Accelerated Mobile Pages (“AMP”), un proyecto de Google que supuestamente busca mejorar la experiencia de usuario en la Web.&lt;/p&gt;
&lt;p&gt;De hecho, AMP mantiene a los usuarios dentro del dominio de Google y desvía hacia fuera el tráfico de otras páginas Web en beneficio de Google. Con una escala de mil millones de usuarios, AMP tiene la consecuencia de reforzar aún más el dominio que Google tiene en la Web.&lt;/p&gt;
&lt;p&gt;Entendemos el problema de que las páginas Web sean lentas para cargarse, en comparación a otras tecnologías propietarias como Facebook Instant Articles y Apple News. Los editores (sobre todo los medios de comunicación) llevan tiempo enfrentándose a cuestiones difíciles e incentivos malos, que les ha llevado a malas decisiones y concesiones, resultando en una mala experiencia de usuario.&lt;/p&gt;
&lt;p&gt;Los motores de búsqueda se encuentran en una posición poderosa para influenciar en la solución al problema. Google ha decidido crear una posición destacada en la parte superior de sus resultados de búsqueda (para artículos) y un icono de un rayo (para todos los tipos de contenidos), que solo están disponibles para publicadores que utilicen una tecnología controlada por Google, servida por Google utilizando su infraestructura, en una URL de Google, y colocada dentro de una experiencia de usuario controlada por Google.&lt;/p&gt;
&lt;p&gt;El formato AMP no es un problema en sí mismo, pero hay dos aspectos de su implementación que refuerzan la posición de Google como la plataforma estandarizada para contenidos, ya que Google busca incrementar la popularidad de AMP ante los creadores de contenido:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Al contenido que utiliza AMP y se aloja en el dominio de Google se le concede una condición privilegiada en los resultados de búsqueda, incluyendo (para artículos de noticias) una posición por encima de todos los demás resultados.&lt;/li&gt;
&lt;li&gt;Cuando un usuario navega desde Google a un contenido que Google ha recomendado, están, inconscientemente, quedándose en el entorno de Google.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Si el objetivo de Google con AMP es, efectivamente, mejorar la experiencia de usuario en la Web, recomendamos unos simples cambios que bastarían, a la vez que permitirían a la Web permanecer dinámica, competitiva y orientada a los consumidores:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;En lugar de solamente ofrecer una posición privilegiada en los resultados de búsqueda a AMP, proporcionar los mismos beneficios a todas las páginas que alcancen un criterio de rendimiento objetivo y neutral, tal como el speed index. Los publicadores podrán entonces utilizar la solución técnica que deseen.&lt;/li&gt;
&lt;li&gt;No mostrar contenido de terceros dentro de una página de Google salvo que quede claro para el usuario que están mirando un producto de Google. Es perfectamente aceptable que Google lance un “lector de noticias”, pero no es aceptable mostrar una página que solo lleva la imagen corporativa de un tercero en lo que es realmente una URL de Google, ni exigir que un tercero utilice el alojamiento de Google para aparecer en los resultados de búsqueda.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;No queremos parar el desarrollo de AMP por parte de Google, y estos cambios no lo requieren. También aplaudimos a los motores de búsqueda que ofrecen una mejor posición en los resultados de búsqueda a páginas que carguen rápido. AMP puede permanecer como una más de un rango de tecnologías que dan a los editores opciones de alta calidad para servir páginas Web rápidamente y complaciendo a los usuarios.&lt;/p&gt;
&lt;p&gt;Sin embargo, los editores no deberían sentirse, por el dominio de Google, obligados a poner su contenido bajo el paraguas de Google. La Web no es Google, y no debería ser sólo Google.&lt;/p&gt;
&lt;p&gt;Cordialmente,&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;For signatories please refer to the &lt;a href=&quot;http://ampletter.org/?lang=en&quot; data-langswitch=&quot;en&quot;&gt;English version&lt;/a&gt;. Translations are provided for information but should not be considered normative.&lt;/p&gt;
&lt;/article&gt;&lt;div class=&quot;container lang-switcher&quot;&gt;
&lt;h2&gt;Available in:&lt;/h2&gt;
&lt;/div&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 09 Jan 2018 18:39:36 +0000</pubDate>
<dc:creator>lainon</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://ampletter.org/</dc:identifier>
</item>
<item>
<title>Building for the Blockchain</title>
<link>http://blog.ycombinator.com/building-for-the-blockchain/</link>
<guid isPermaLink="true" >http://blog.ycombinator.com/building-for-the-blockchain/</guid>
<description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you’re here, we assume that you’re a developer/hacker who’s intrigued by the blockchain. You’re convinced that you understand how it works and now you’re itching to figure out what the blockchain means for you and your developer skill set.&lt;/p&gt;
&lt;p&gt;If you need more of a primer we’d recommend starting with the &lt;a href=&quot;https://bitcoin.org/bitcoin.pdf&quot;&gt;bitcoin white paper&lt;/a&gt; and &lt;a href=&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;&gt;Ethereum white paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our goal in this post is to:&lt;br/&gt;1. Explain how blockchain development differs from existing development paradigms&lt;br/&gt;2. Provide context for the opportunities and challenges in this space&lt;br/&gt;3. Point you to resources that will give you the foundation to start developing in this new paradigm&lt;/p&gt;
&lt;h2&gt;Paradigm Shifts for Developers&lt;/h2&gt;
&lt;p&gt;Internet applications benefit from network effects because they maintain centralized silos of information. Built upon shared, open protocols (e.g. TCP/IP, HTTP), companies like Yelp, Facebook, and Amazon benefit from having all of their users – and, as a result, data – in one place. This way they not only have an advantage over competitors with less data but also complete control over the way they monetize the data. &lt;a href=&quot;http://www.usv.com/blog/fat-protocols&quot;&gt;In the words&lt;/a&gt; of crypto investor Joel Monegro, the current Internet paradigm captures most of its value through &lt;em&gt;fat&lt;/em&gt; application layers, whereas the &lt;em&gt;thin&lt;/em&gt;, underlying communication protocols capture minimal value.&lt;/p&gt;
&lt;p&gt;Alternatively, the distribution of value in the blockchain paradigm can be described with &lt;em&gt;fat&lt;/em&gt; protocols and a &lt;em&gt;thin&lt;/em&gt; application layer. This paradigm shift is possible due to the innovation of cryptographic tokens, which are described well by Albert Wagner of USV:&lt;/p&gt;
&lt;p&gt;“Historically the only way to make money from a protocol was to create software that implemented it and then try to sell this software (or more recently to host it)… With [cryptographic] tokens, however, the creators of a protocol can ‘monetize’ it directly and will in fact benefit more as others build businesses on top of that protocol.”&lt;/p&gt;
&lt;p&gt;Previously, the creators of open communication protocols for the Internet, largely &lt;a href=&quot;https://en.wikipedia.org/wiki/DARPA&quot;&gt;DARPA&lt;/a&gt; researchers and non-profit contributors, could not align financial incentives with protocol development. In contrast, protocol creators today can issue “tokens”, like Bitcoin and Ethereum, that represent the value of their decentralized protocols.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.usv.com/blog/fat-protocols&quot;&gt;Monegro believes&lt;/a&gt; that this paradigm shift affects the way that developers should think about their applications: “The combination of shared open data with an incentive system that prevents “winner-take-all” markets changes the game at the application layer and creates an entire new category of companies with fundamentally different business models at the protocol layer.”&lt;/p&gt;
&lt;h2&gt;Ethereum&lt;/h2&gt;
&lt;p&gt;We’ve come to the understanding that in the blockchain paradigm, developers can capture value through protocol innovation. To continue our discussion, we review how blockchain technologies evolved to eventually cater to developers. Eight years ago, Bitcoin was conceived as a virtual currency that removed the need for centralized financial systems. Initially, developers actually tried building applications upon the Bitcoin blockchain by storing data in the blockchain itself, but it turned out to be pretty inefficient (as described in &lt;a href=&quot;http://joel.mn/post/104755282493/the-shared-data-layer-of-the-blockchain&quot;&gt;another old Joel post&lt;/a&gt;!). One of these developers, Vitalik Buterin, was frustrated by Bitcoin’s immobilism and risk averse culture for adopting new developer-friendly features. So, he built his own platform, Ethereum.&lt;/p&gt;
&lt;p&gt;While Bitcoin was originally intended to serve as a new medium for financial store of value, Ethereum was invented to serve as a Turing complete developer environment. In Ethereum, developers write smart contracts in the Solidity programming language, and those smart contracts are run in the Ethereum Virtual Machine (EVM). Here, we observe an opportunity for developers to fork and implement their own blockchains to serve different purposes. To do so, however, would require rekindling developer support and network effects that existing blockchain technologies had previously achieved. Today, building on top of existing networks like Ethereum allows developers to become stakeholders in not only their own applications, but also the underlying protocol.&lt;/p&gt;
&lt;h2&gt;Dapps, App Coins, and Smart Contracts&lt;/h2&gt;
&lt;p&gt;Today’s blockchain developers often build decentralized applications, or dapps, on top of existing protocols to address specific markets and end users. In doing so, developers can issue &lt;a href=&quot;https://blog.0xproject.com/the-difference-between-app-coins-and-protocol-tokens-7281a428348c&quot;&gt;tokens, or app coins&lt;/a&gt;, that are used to execute certain “functions” of the dapps themselves, not unlike Chuck-E-Cheese tokens are used for specific purposes like skeeball. These “functions” are the “smart contracts” that promise a dapp’s services in return for a digital asset, thereby removing the need for a middle-man to ensure the transaction. In other words, smart contracts promise that for one Chuck-E-Cheese token, you can exchange one game of skeeball.&lt;/p&gt;
&lt;p&gt;As the functionality of the dapp becomes more sought after, the fixed number of app coins increase in value as a function of supply and demand. In other words, if it turns out that the Chuck-E-Cheese experience is truly remarkable and highly-demanded, the fixed supply of tokens become more valuable. This is the underlying principle that informs all ICOs (initial coin offerings), in which dapp developers solicit investment by offering app coins in return for capital to fund their projects.&lt;/p&gt;
&lt;p&gt;But wait, you might ask, “Why not use an existing token as opposed to issuing your own, dapp-specific token in the first place?” Dapp-specific app coins enable small-scale economies that facilitate the application’s purpose. These &lt;a href=&quot;http://blog.ycombinator.com/the-token-effect/&quot;&gt;tokens&lt;/a&gt; serve as scarce resources that can be regulated and governed to more closely align with the functionality of a dapp. This is where Ethereum comes back into the picture — with Ethereum, developers can very easily issue their own tokens for the specified use of their own dapps.&lt;/p&gt;
&lt;h2&gt;Early Opportunities&lt;/h2&gt;
&lt;p&gt;With an understanding of the underlying mechanisms of dapps, it’s important to think carefully about how decentralization would benefit your end users. Rather than jumping into a list of side projects, swapping relational databases for blockchain implementations, we urge you to consider the benefits of decentralization. For instance, &lt;a href=&quot;https://augur.net/&quot;&gt;Augur&lt;/a&gt; creates prediction markets by relying on decentralized participants to make correct predictions because they share financial incentives.&lt;/p&gt;
&lt;p&gt;At a meta-level, there are also opportunities for innovation in the developer stack. Many blockchain developers liken the maturity of the blockchain tools and frameworks to those of the web during early days of the Internet. We spoke to Ben Yu of &lt;a href=&quot;https://streamtoken.net/&quot;&gt;Stream&lt;/a&gt;, who described this as a new opportunity for developers: “There is extremely low-hanging fruit in making the field more accessible, and a lot of technical infrastructure needs to be built up to bring blockchain from 1994, in internet terms, to 2017.”&lt;/p&gt;
&lt;p&gt;With the innovation of the blockchain, many have identified the opportunity to build a new, decentralized web stack that does not depend on centralized government or corporate entities. The traditional web stack is composed of building blocks like TCP/IP, DNS, databases, web servers, authentication systems and CDNs, and we are in the midst of replicating these components by using platforms like Ethereum as the base layer.&lt;/p&gt;
&lt;h2&gt;Challenges of Immutability&lt;/h2&gt;
&lt;p&gt;Unfortunately, a technology that is likened to the early iterations of JavaScript almost certainly comes with challenges, the most apparent of which is related to the immutability of new protocols. Developers cannot change the underlying blockchain or higher-level smart contracts. Libraries or contracts cannot be easily versioned. The recent Parity bug that &lt;a href=&quot;http://mashable.com/2017/11/08/ethereum-parity-bug/&quot;&gt;locked 150MM USD in funds&lt;/a&gt;, among many other similar incidents, reminds us of the urgent need to build “future-proof” architectures.&lt;/p&gt;
&lt;p&gt;Brandon Millman, an &lt;a href=&quot;http://0xproject.com&quot;&gt;engineer at 0x&lt;/a&gt;, described how blockchain immutability affects the way he thinks about security concerns: “Being in this space means being a lot more careful, especially because people’s money is at risk. Part of the benefit of the blockchain paradigm is that if you’re holding onto your private key, it’s hard for people to take money from you, but a lot of scams are getting you to willingly send your money to the wrong place instead of reaching in to steal money from your wallet.”&lt;/p&gt;
&lt;p&gt;Developers, especially those accustomed to the fast pace of the startup world, are forced to consider tradeoffs between speed and security. As Ben Yu of Stream describes, “You have to move extremely fast, because the space is going enormously fast, but you can’t move fast and break things, which is the traditional philosophy for development being done now. If you break things, you lose hundreds of millions of dollars.”&lt;/p&gt;
&lt;p&gt;Building on the blockchain requires a different level of planning. Developers can no longer apply hot-fixes or overnight patches, because they no longer have centralized control over entire systems. Instead, introducing system changes often involves hard forking entire protocols, or in some cases, providing separate sources for protocol parameters that aren’t tied directly into the blockchain.&lt;/p&gt;
&lt;h2&gt;Ethereum’s Limitations&lt;/h2&gt;
&lt;p&gt;Beyond the general challenges of immutability, Ethereum includes several limitations that blockchain developers might encounter. For one, Ethereum is unable to access real time data from outside the blockchain. Developers need to rely on trusted third party data providers, &lt;a href=&quot;http://www.oraclize.it/&quot;&gt;called oracles&lt;/a&gt;, to provide smart contracts with outside information like weather, random numbers, or currency values.&lt;/p&gt;
&lt;p&gt;Moreover, Ethereum’s specification prevents real-time computations. Processing of block transactions takes upwards of 15 seconds (which is lightning fast compared to Bitcoin’s 10 minutes). As a result, developers need to write asynchronous code with front-end frameworks that can update states accordingly (like React).&lt;/p&gt;
&lt;p&gt;With Ethereum, you are also tied to paying for your transactions by the operation with gas that translates into Ethereum’s ether. As a result, using the current version of Solidity, you could very feasibly find yourself hitting a transaction limit if the computation you intend to perform is too expensive (like verifying checkmate in a &lt;a href=&quot;https://medium.com/@graycoding/lessons-learned-from-making-a-chess-game-for-ethereum-6917c01178b6&quot;&gt;game of chess&lt;/a&gt;). As a result, on-chain computations because become costly in terms of money and network bandwidth. There are interesting alternatives like &lt;a href=&quot;https://truebit.io/&quot;&gt;Truebit&lt;/a&gt; to perform more intensive computation off-chain.&lt;/p&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;In general, it can certainly feel overwhelming getting into this space. It’s an interdisciplinary field, spanning domains of economics, game theory, finance, computer science, math, cryptography, and more. However, that also means that there’s a lot of surface area to contribute.&lt;/p&gt;
&lt;p&gt;Brandon of 0x recommends diving into areas where you have some interest or experience instead of trying to learn everything at once: “If you’ve done JS development beforehand, there are a lot of JS libraries that you can contribute to. While you will definitely need to know [how everything fits together] eventually, you don’t need to feel like you need to take an entire course initially.”&lt;/p&gt;
&lt;p&gt;In the spirit of decentralization, most of the code for projects on the blockchain are also available through open-source. There are a number of good resources to get your hands dirty:&lt;/p&gt;
&lt;p&gt;In addition, the developer communities are remarkably receptive and helpful. Check out:&lt;/p&gt;
&lt;p&gt;If you learn primarily by coding up your own projects, here are some ideas to get started:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Build your own wallet. It can be a be a web, mobile app or desktop app.&lt;/li&gt;
&lt;li&gt;Create your own ERC-20 token and deploy it on the test net.&lt;/li&gt;
&lt;li&gt;Modify crypto kitties (dogs, tanks, zombies…) and deploy it on the test net.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Looking Forward&lt;/h2&gt;
&lt;p&gt;In its current state, yes, blockchain development is messy. No, there aren’t clean frameworks and tools analogous to those that exist for modern web development. But why not see the blockchain’s nascent state as an opportunity to impact a paradigm-shifting technology?&lt;/p&gt;
&lt;p&gt;On the blockchain, you don’t need to deploy any centralized servers, which means that there’s no single point of failure. If your whole stack is decentralized, there is no trusted third party involved making it censorship resistant, and your database is publicly verifiable. As the new paradigm offers opportunity to publicly share data, we observe a supreme advantage to decentralizing databases. This is the future we’re building towards on the Blockchain— where information and power are distributed systematically by cutting out the middleman.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=16107597&quot;&gt;Comment on Hacker News&lt;/a&gt;..&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Thanks to Ben Yu (Stream) and Brandon Millman (0x) for lending their time to be interviewed, and thanks to Niharika Bedekar, Craig Cannon, Claire Shu for reading drafts of this post.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 09 Jan 2018 17:00:23 +0000</pubDate>
<dc:creator>vincentschen</dc:creator>
<og:title>Building for the Blockchain</og:title>
<og:url>http://blog.ycombinator.com/building-for-the-blockchain/</og:url>
<og:type>article</og:type>
<og:description>Our goal in this post is to: 1. Explain how blockchain development differs from existing development paradigms. 2. Provide context for the opportunities and challenges in this space. 3. Point you to resources that will give you the foundation to start developing in this new paradigm.</og:description>
<og:image>http://blog.ycombinator.com/wp-content/uploads/2018/01/Building-for-the-Blockchain.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.ycombinator.com/building-for-the-blockchain/</dc:identifier>
</item>
<item>
<title>Meltdown Proof-of-Concept</title>
<link>https://github.com/IAIK/meltdown/</link>
<guid isPermaLink="true" >https://github.com/IAIK/meltdown/</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;This repository contains several applications, demonstrating the &lt;a href=&quot;https://meltdown.help&quot; rel=&quot;nofollow&quot;&gt;Meltdown bug&lt;/a&gt;. For technical information about the bug, refer to the paper:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://meltdown.help/meltdown.pdf&quot; rel=&quot;nofollow&quot;&gt;Meltdown&lt;/a&gt; by Lipp, Schwarz, Gruss, Prescher, Haas, Mangard, Kocher, Genkin, Yarom, and Hamburg&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The applications in this repository are built with &lt;a href=&quot;https://github.com/IAIK/Meltdown/tree/master/libkdump&quot;&gt;libkdump&lt;/a&gt;, a library we developed for the paper. This library simplifies exploitation of the bug by automatically adapting to certain properties of the environment.&lt;/p&gt;
&lt;h2&gt;Videos&lt;/h2&gt;
&lt;p&gt;This repository contains two videos demonstrating Meltdown&lt;/p&gt;
&lt;h2&gt;Demos&lt;/h2&gt;
&lt;p&gt;This repository contains five demos to demonstrate different use cases. All demos are tested on Ubuntu 16.04 with an Intel Core i7-6700K, but they should work on any Linux system with any modern Intel CPU since 2010.&lt;/p&gt;
&lt;p&gt;For best results, we recommend a fast CPU that supports Intel TSX (e.g. any Intel Core i7-5xxx, i7-6xxx, or i7-7xxx). Furthermore, every demo should be pinned to one CPU core, e.g. with taskset.&lt;/p&gt;
&lt;h3&gt;Build dependency for demos&lt;/h3&gt;
&lt;p&gt;As a pre-requisite, you need to install glibc-static on your machine.&lt;/p&gt;
&lt;p&gt;For RPM-based systems:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo yum install -y glibc-static
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Demo #1: A first test (&lt;code&gt;test&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;This is the most basic demo. It uses Meltdown to read accessible addresses from the own address space, not breaking any isolation mechanisms.&lt;/p&gt;
&lt;p&gt;If this demo does not work for you, the remaining demos most likely won't work either. The reasons are manifold, e.g., the CPU could be too slow, not support out-of-order execution, the high-resolution timer is not precise enough (especially in VMs), the operating system does not support custom signal handlers, etc.&lt;/p&gt;
&lt;h4&gt;Build and Run&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
make
taskset 0x1 ./test
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you see an output similar to this&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Expect: Welcome to the wonderful world of microarchitectural attacks
   Got: Welcome to the wonderful world of microarchitectural attacks
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then the basic demo works.&lt;/p&gt;
&lt;h3&gt;Demo #2: Breaking KASLR (&lt;code&gt;kaslr&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;Starting with Linux kernel 4.12, KASLR (Kernel Address Space Layout Randomizaton) is active by default. This means, that the location of the kernel (and also the direct physical map which maps the entire physical memory) changes with each reboot.&lt;/p&gt;
&lt;p&gt;This demo uses Meltdown to leak the (secret) randomization of the direct physical map. This demo requires root privileges to speed up the process. The paper describes a variant which does not require root privileges.&lt;/p&gt;
&lt;h4&gt;Build and Run&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
make
sudo taskset 0x1 ./kaslr
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a few seconds, you should see something similar to this&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[+] Direct physical map offset: 0xffff880000000000
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Demo #3: Reliability test (&lt;code&gt;reliability&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;This demo tests how reliable physical memory can be read. For this demo, you either need the direct physical map offset (e.g. from demo #2) or you have to disable KASLR by specifying &lt;code&gt;nokaslr&lt;/code&gt; in your kernel command line.&lt;/p&gt;
&lt;h4&gt;Build and Run&lt;/h4&gt;
&lt;p&gt;Build and start &lt;code&gt;reliability&lt;/code&gt;. If you have KASLR enabled, the first parameter is the offset of the direct physical map. Otherwise, the program does not require a parameter.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
make
sudo taskset 0x1 ./reliability 0xffff880000000000
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a few seconds, you should get an output similar to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[-] Success rate: 99.93% (read 1354 values)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Demo #4: Read physical memory (&lt;code&gt;physical_reader&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;This demo reads memory from a different process by directly reading physical memory. For this demo, you either need the direct physical map offset (e.g. from demo #2) or you have to disable KASLR by specifying &lt;code&gt;nokaslr&lt;/code&gt; in your kernel command line.&lt;/p&gt;
&lt;p&gt;In principal, this program can read arbitrary physical addresses. However, as the physical memory contains a lot of non-human-readable data, we provide a test tool (&lt;code&gt;secret&lt;/code&gt;), which puts a human-readable string into memory and directly provides the physical address of this string.&lt;/p&gt;
&lt;h4&gt;Build and Run&lt;/h4&gt;
&lt;p&gt;For the demo, first run &lt;code&gt;secret&lt;/code&gt; (as root) to get the physical address of a human-readable string:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
make
sudo ./secret
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It should output something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[+] Secret: If you can read this, this is really bad
[+] Physical address of secret: 0x390fff400
[+] Exit with Ctrl+C if you are done reading the secret
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let the &lt;code&gt;secret&lt;/code&gt; program running, and start &lt;code&gt;physical_reader&lt;/code&gt;. The first parameter is the physical address printed by &lt;code&gt;secret&lt;/code&gt;. If you do not have KASLR disabled, the second parameter is the offset of the direct physical map.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
taskset 0x1 ./physical_reader 0x390fff400 0xffff880000000000
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a few seconds, you should get an output similar to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[+] Physical address       : 0x390fff400
[+] Physical offset        : 0xffff880000000000
[+] Reading virtual address: 0xffff880390fff400

If you can read this, this is really bad
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Demo #5: Dump the memory (&lt;code&gt;memdump&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;This demo dumps the content of the memory. As demo #3 and #4, it uses the direct physical map, to dump the contents of the physical memory in a hexdump-like format.&lt;/p&gt;
&lt;p&gt;Again, as the physical memory contains a lot of non-human-readable content, we provide a test tool to fill large amounts of the physical memory with human-readable strings.&lt;/p&gt;
&lt;h4&gt;Build and Run&lt;/h4&gt;
&lt;p&gt;For the demo, first run &lt;code&gt;memory_filler&lt;/code&gt; to fill the memory with human-readable strings. The first argument is the amount of memory (in gigabytes) to fill.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
make
./memory_filler 9
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the &lt;code&gt;memdump&lt;/code&gt; tool to dump memory contents. If you executed &lt;code&gt;memory_filler&lt;/code&gt; before, you should see some string fragments. If you have Firefox or Chrome with multiple tabs running, you might also see parts of the websites which are open or were recently closed.&lt;/p&gt;
&lt;p&gt;The first parameter is the physical address at which the dump should begin (leave empty to start at the first gigabyte). If you do not have KASLR disabled, the second parameter is the offset of the direct physical map.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
taskset 0x1 ./memdump 0x240000000 0xffff880000000000 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; start at 9 GB&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get a hexdump of parts of the memory (potentially even containing secrets such as passwords, see example in the paper), e.g.:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; 240001c9f: | 00 6d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | .m.............. |
 24000262f: | 00 7d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | .}.............. |
 24000271f: | 00 00 00 00 00 00 00 00 00 00 00 00 65 6e 20 75 | ............en u |
 24000272f: | 73 65 72 20 73 70 61 63 65 20 61 6e 64 20 6b 65 | ser space and ke |
 24000273f: | 72 6e 65 6c 57 65 6c 63 6f 6d 65 20 74 6f 20 74 | rnelWelcome to t |
 24000298f: | 00 61 72 79 20 62 65 74 77 65 65 6e 20 75 73 65 | .ary between use |
 24000299f: | 72 20 73 70 61 63 65 20 61 6e 64 20 6b 65 72 6e | r space and kern |
 2400029af: | 65 6c 42 75 72 6e 20 61 66 74 65 72 20 72 65 61 | elBurn after rea |
 2400029bf: | 64 69 6e 67 20 74 68 69 73 20 73 74 72 69 6e 67 | ding this string |
 240002dcf: | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 c8 | ................ |
 2400038af: | 6a 75 73 74 20 73 70 69 65 64 20 6f 6e 20 61 00 | just spied on a. |
 240003c8f: | 00 00 1e 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................ |
 24000412f: | 00 00 00 00 00 00 00 00 00 00 00 00 65 74 73 2e | ............ets. |
 24000413f: | 2e 2e 57 65 6c 63 6f 6d 65 20 74 6f 20 74 68 65 | ..Welcome to the |
 2400042ff: | 00 00 00 00 00 00 00 00 00 6e 67 72 61 74 75 6c | .........ngratul |
 24000430f: | 61 74 69 6f 6e 73 2c 20 79 6f 75 20 6a 75 73 74 | ations, you just |
 24000431f: | 20 73 70 69 65 64 20 6f 6e 20 61 6e 20 61 70 70 |  spied on an app |
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Warnings&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Warning #1&lt;/strong&gt;: We are providing this code as-is. You are responsible for protecting yourself, your property and data, and others from any risks caused by this code. This code may cause unexpected and undesirable behavior to occur on your machine. This code may not detect the vulnerability on your machine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning #2&lt;/strong&gt;: If you find that a computer is susceptible to the Meltdown bug, you may want to avoid using it as a multi-user system. Meltdown breaches the CPU's memory protection. On a machine that is susceptible to the Meltdown bug, one process can read all pages used by other processes or by the kernel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning #3&lt;/strong&gt;: This code is only for testing purposes. Do not run it on any productive systems. Do not run it on any system that might be used by another person or entity.&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Tue, 09 Jan 2018 16:57:59 +0000</pubDate>
<dc:creator>__init</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/2519532?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>IAIK/meltdown</og:title>
<og:url>https://github.com/IAIK/meltdown</og:url>
<og:description>meltdown - This repository contains several applications, demonstrating the Meltdown bug.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/IAIK/meltdown/</dc:identifier>
</item>
<item>
<title>Legends of the Ancient Web (2017)</title>
<link>http://idlewords.com/talks/ancient_web.htm</link>
<guid isPermaLink="true" >http://idlewords.com/talks/ancient_web.htm</guid>
<description>&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.001.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;15&quot;&gt;
&lt;p&gt;Possibly my favorite technical work is a book that predates information technology by 2300 years, the Book of Ecclesiastes.&lt;/p&gt;
&lt;p&gt;If you're not familiar with it, Ecclesiastes is a rant by an angry, elderly atheist that through some editorial oversight found its way into the Bible.&lt;/p&gt;
&lt;p&gt;It is full of wisdom about technology, and how it interacts with human folly.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.003.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;14&quot;&gt;
&lt;p&gt;The author of Ecclesiastes had this to say about technological progress:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&quot;There is no remembrance of the former generations; neither shall there be any remembrance of the latter generations that are to come, among those that shall come after.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Today I want to talk about one of those forgotten generations, secure in the knowledge that no matter how bad my talk, it won't be remembered.&lt;/p&gt;
&lt;p&gt;I want to talk about the political history of radio.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/radio_dish.gif&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;15&quot;&gt;
&lt;p&gt;If you didn't know radio existed, the whole thing would sound like a bunch of pseudoscientific hokum.&lt;/p&gt;
&lt;p&gt;So-called &quot;radio waves&quot; are invisible, transmit energy, easily penetrate matter, including stone walls and human bodies, and can be heard hundreds or even thousands of kilometers away if you prepare the right occult configuration of metal wires.&lt;/p&gt;
&lt;p&gt;Right.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;25.5&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.018.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;26&quot;&gt;
&lt;p&gt;Radio was predicted in 1864 by James Clark Maxwell, who showed that a wiggling magnetic field could conjure up a companion electric field, and that the two would kind of egg each other on and sustain each other, propagating away at a constant speed.&lt;/p&gt;
&lt;p&gt;That speed just happened to be the observed speed of light. This was too much of a coincidence for Maxwell, who (correctly) posited that light itself must be an electromagnetic phenomenon.&lt;/p&gt;
&lt;p&gt;In 1886, Hertz demonstrated that these mutually sustaining waves were real, and could be detected. For a long time they were called Hertzian waves in his honor. (Asked about a practical use for radio, Hertz said &quot;it's of no use whatsoever&quot;.)&lt;/p&gt;
&lt;p&gt;In 1895, Marconi built the first practical radio system, which could transmit and receive bursts of noise over a short distance—a wireless telegraph.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;28&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.019.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;31&quot;&gt;
&lt;p&gt;Like the Internet, radio technology was on the horizon for a long time before it arrived, and it arrived in a rudimentary form that didn't strike anyone as a qualitatively new technology, let alone one that could upend politics.&lt;/p&gt;
&lt;p&gt;The world that radio arrived in already had ways to communicate in real time over long distances—telegraphs and telephones. It wasn't clear at the outset that Hertzian waves could be detected at distances much greater than a few hundred meters, let alone that they might become a practical method to transmit the human voice.&lt;/p&gt;
&lt;p&gt;At best, they might prove a useful method for detecting lightning at a distance, or communicating with ships at sea.&lt;/p&gt;
&lt;p&gt;The world that radio was born into had a group of telegraphy enthusiasts who ran their own little networks, the Usenet of their day. And there was also an assortment of thriving small-scale telephone networks, including rural ones where the telephone wires were run over barbed wire fencing, connecting thirty or forty farms on a circuit.&lt;/p&gt;
&lt;p&gt;Some of these people became the first radio &quot;hams&quot;—amateur hobbyists.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;18.035066505441&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.017.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;19.933494558646&quot;&gt;
&lt;p&gt;The first radio sets used a spark gap and could only send buzzing sounds, so people communicated in Morse code. This was the &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/On_the_Internet,_nobody_knows_you%27re_a_dog&quot;&gt;on the Internet, nobody knows you're a dog&lt;/a&gt;&quot; period of amateur radio. Some intrepid women who found a way to make and operate a set enjoyed the freedom the pseudonymous radio subculture of the time offered them.&lt;/p&gt;
&lt;p&gt;We forget how complete the isolation was in rural areas in the days before mass media. Many of the most active radio enthusiasts lived out in the sticks, a dynamic that comes up again and again with new communications technologies.&lt;/p&gt;
&lt;p&gt;Over time, the range of these devices improved to where they could cover dozens of kilometers. People also learned how to amplify radio signals. The Navy became seriously interested in wireless sets as a military technology, and made them mandatory on ships.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14.141634980989&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.022.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;16.579847908745&quot;&gt;
&lt;p&gt;An article about how early radio hobbyists created headaches for the Navy &lt;a href=&quot;http://earlyradiohistory.us/1909amat.htm&quot;&gt;conveys some of the flavor&lt;/a&gt; of this era:&lt;/p&gt;
&lt;blockquote readability=&quot;25&quot;&gt;
&lt;p&gt;&quot;When the wireless telegraph operator at the Portsmouth Navy Yard tried, a week ago last Saturday, to reach the fleet that was returning from its voyage around the world, he was able to catch only a single message, and that was from the cruiser Yankton a thousand miles in advance of the other ships.&lt;/p&gt;
&lt;p&gt;The trouble was that the air was full of unimportant electric messages sent by young amateur operators in the region of Boston. The number of such amateurs who are experimenting with this new form of telegraphy is surprising; and their feats are interesting and picturesque.&lt;/p&gt;
&lt;p&gt;One boy, for example, in a New York suburb, has a wireless installation which is practically entirely the work of his own hands. In the evening or after school hours he often sits at his instrument and &quot;talks&quot; with one or another of half a dozen of his friends who have similar installations, or &quot;listens&quot; at random to the messages with which the air is filled.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.971134020619&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.025.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;13.451546391753&quot;&gt;
&lt;p&gt;A wonderful website called &lt;a href=&quot;http://earlyradiohistory.us/&quot;&gt;Early Radio History&lt;/a&gt; has collected a number of these articles. The read just like newspaper profiles of the early web pioneers, a mix of condescension at their nerdiness and appreciation of their technical achievements.&lt;/p&gt;
&lt;p&gt;The biggest difference in tone is that living in your mom's basement was considered a responsible sign of adulthood in 1912. It meant that you weren't out in the streets, doing God knows what, and might actually make something of yourself.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;20&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.026.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;19&quot;&gt;
&lt;p&gt;News of the Titanic sinking in 1912 is slow to arrive in Washington, because so many people are trying to forward it at the same time, and the crosstalk slows the message down. At this point, President Taft starts grumbling about regulation.&lt;/p&gt;
&lt;p&gt;In 1914, war breaks out in Europe. Despite pleas from amateur radio hams, the American government bans all civilian radio use for the duration of the war. For five years, amateur radio is dead. The Navy even makes an attempt right after the war to buy out every radio operator and get a monopoly, until Congress slaps them down.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;18.507772020725&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/radio_boys.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;18.507772020725&quot;&gt;
&lt;p&gt;The ban is lifted in 1919, precipitating a full-on radio boom very reminiscent of the dot-com bubble. Money starts pouring in. Everything is radio themed. There's young adult fiction being published about boys and girls who use radio to solve crimes and have adventures—the Radio Boys series. Fortunes are made and lost speculating on radio companies.&lt;/p&gt;
&lt;p&gt;Every business is told that radio will transform their lives. Jewelers, for example, will no longer have to lease a dedicated telegraph line to get an exact time signal for their high-end watches. Their trade journal &lt;a href=&quot;http://earlyradiohistory.us/1919jewl.htm&quot;&gt;publishes an article&lt;/a&gt; explaining what the ether is, how it works, how you send waves through it, and how you can save a bundle by getting your official time from the Navy radio transmitter at Arlington.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;29&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.023.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;31&quot;&gt;
&lt;p&gt;But mass-market radio also means the end of the informal, participatory radio web that preceded it. Now you need a license and a budget to play the game.&lt;/p&gt;
&lt;p&gt;Corporations take over, and within a few years there are just a couple of giants running the national radio networks, to the point where one of them is broken up, back when breaking up monopolies was still a thing we did. The work becomes professionalized.&lt;/p&gt;
&lt;p&gt;The industry, which in the beginning had been run on a mix of enthusiasm and government money, finds its way to a workable business model: advertising. The big players wage a war over copyright to determine how artists should get paid for broadcasts over this new medium.&lt;/p&gt;
&lt;p&gt;In just a few years, radio completes the transition from an eclectic group of participatory amateurs, to a mass audience of passive consumers and a professional class of producers. It assumes its place along newsprint as a mass medium.&lt;/p&gt;
&lt;p&gt;But unlike newspapers or the telegraph, this new medium can reach into people's homes, and talk to them in a human voice.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.961974110032&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.027.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;19.385113268608&quot;&gt;
&lt;p&gt;It doesn't take long for politically talented people to discover how to use radio for their own ends.&lt;/p&gt;
&lt;p&gt;One of these early pioneers in the United States is Charles Coughlin, a Catholic priest and early religious broadcaster who notices that his angry rants on political topics net him a much bigger audience than his discourses on religion.&lt;/p&gt;
&lt;p&gt;By the middle of the 1930's, Coughlin has an active audience of ten million tuning in to hear him rail against against bankers and international conspiracies, in a way that sounds uncomfortably familiar in 2017.&lt;/p&gt;
&lt;p&gt;Here's Father Coughlin at the top of his game, &lt;a href=&quot;https://www.youtube.com/watch?v=oPBooPu28QY&amp;amp;t=46s&quot;&gt;yelling about banks&lt;/a&gt;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;29.818773234201&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.028.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;31.742565055762&quot;&gt;
&lt;p&gt;The other great political radio talent in America is the new President, Franklin Roosevelt.&lt;/p&gt;
&lt;p&gt;Facing a hostile press controlled by his opponents, Roosevelt decides to speak directly to the people in a series of what he terms &quot;fireside chats&quot;.&lt;/p&gt;
&lt;p&gt;These are not delivered in the bombastic style of political speeches, or in the angry right-wing talk radio style pioneered by Father Coughlin, but conversationally, as if the President were at home with you in your parlor.&lt;/p&gt;
&lt;p&gt;Roosevelt exploits the intimacy of radio, speaking to people gathered in their homes, in the evening, in the company of friends and loved ones. Here's &lt;a href=&quot;https://www.youtube.com/watch?v=r6nYKRLOFWg&quot;&gt;what his first fireside chat sounded like&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You wouldn't think that a lecture about the banking system could be very appealing. But in an atmosphere of crisis, people listen. For the first time, they can directly hear their leader discuss an issue of enormous consequence to their lives, in their own homes.&lt;/p&gt;
&lt;p&gt;These fireside chats help win Roosevelt a lasting popularity that will confound his enemies over the years. He will go on to win re-election three times.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;27&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.029.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;26.5&quot;&gt;
&lt;p&gt;Saul Bellow wrote about what it was like to experience one of Roosevelt's broadcasts:&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;drivers had pulled over, parking bumper to bumper, and turned on their radios to hear Roosevelt. They had rolled down the windows and opened the car doors. Everywhere the same voice, its odd Eastern accent, which in anyone else would have irritated Midwesterners. You could follow without missing a single word as you strolled by. You felt joined to these unknown drivers, men and women smoking their cigarettes in silence, not so much considering the President's words as affirming the rightness of his tone and taking assurance from it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Right there, in that Saul Bellow quote, we also find a warning about the danger of this intimate new medium.&lt;/p&gt;
&lt;p&gt;&quot;Not considering but affirming.&quot;&lt;/p&gt;
&lt;p&gt;This is the power that radio has to persuade through emotion, repetition, familiarity, and tone, rather than facts or argument. A good radio broadcast makes you feel like a part of something bigger, even as you listen alone.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15.405940594059&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.030.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;14.443069306931&quot;&gt;
&lt;p&gt;Europe also finds a first-class radio genius, in the person of Joseph Goebbels, the Nazi propaganda minister.&lt;/p&gt;
&lt;p&gt;One of Goebbels's first acts after the Nazis seize power in 1933 is to start the production of cheap radios, the &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Volksempf%C3%A4nger&quot;&gt;Volksempfänger&lt;/a&gt;&lt;/em&gt;, or &quot;people's receiver&quot;. Goebbels believes it essential to the success of National Socialism that there be a radio in every home, and a loudspeaker at the workplace.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;26&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.032.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;27&quot;&gt;
&lt;p&gt;At the same time as it is changing politics, radio technology revolutionizes the ability to make war.&lt;/p&gt;
&lt;p&gt;Portable radio sets give armies what they lacked in World War I—a way to communicate in real time while in motion.&lt;/p&gt;
&lt;p&gt;During the First World War, armies had been paralyzed by a lack of real-time communication. Battles were run by timetable, with no way to coordinate between soldiers and artillery.&lt;/p&gt;
&lt;p&gt;The Blitzkrieg tactics of World War II would not have been possible if every tank crew, without exception, had not had a radio.&lt;/p&gt;
&lt;p&gt;Radio would come to play a pivotal role in that war, as a weapon (radar was born in that war), a source of intelligence, a means of command, and a propaganda tool.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;21&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/hitler_speech.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;24.5&quot;&gt;
&lt;p&gt;At his trial after the war, Albert Speer argued that radio was also an essential prerequisite for the political rise of the Third Reich:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;Hitler's dictatorship differed in one fundamental point from all its predecessors in history.&lt;/p&gt;&lt;p&gt;His was the first dictatorship that made the complete use of all technical means for domination of its own country. Through technical devices like the radio and loudspeaker, 80 million people were deprived of independent thought.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Speer made this claim while on trial for his life, so it was in his interest to disclaim personal agency. But there is some truth mixed in with his dissembling.&lt;/p&gt;
&lt;p&gt;Radio was a force of persuasion different in kind from anything the world had seen before. Those who learned to use it first for political ends had a tremendous advantage.&lt;/p&gt;
&lt;p&gt;In less than four decades, radio had completed the journey from fledgeling technology, to nerdy hobby, to big business, to potent political weapon.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;25.5&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.031.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;28&quot;&gt;
&lt;p&gt;This trajectory must have come as a shock to its pioneers.&lt;/p&gt;
&lt;p&gt;At its birth, it seemed like radio would only be a force for good. How could something that connects people together be anything but beneficial?&lt;/p&gt;
&lt;p&gt;Radio brought music into hospitals and nursing homes, it eased the profound isolation of rural life, it let people hear directly from their elected representatives. It brought laugher and entertainment into every parlor, saved lives at sea, gave people weather forecasts for the first time.&lt;/p&gt;
&lt;p&gt;But radio waves are just oscillating electromagnetic fields. They really don't care how we use them. All they want is to go places at the speed of light.&lt;/p&gt;
&lt;p&gt;It is hard to accept that good people, working on technology that benefits so many, with nothing but good intentions, could end up building a powerful tool for the wicked.&lt;/p&gt;
&lt;p&gt;But we can't afford to re-learn this lesson every time.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;40.665551839465&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.036.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;41.633779264214&quot;&gt;
&lt;p&gt;During the Rwandan genocide in 1994, one radio station, Radio Télévision Libre des Mille Collines, is estimated to have &lt;a href=&quot;https://academic.oup.com/qje/article-abstract/129/4/1947/1853091&quot;&gt;instigated the deaths of 50,000 people&lt;/a&gt;. They radicalized and goaded on the killers with a mix of jokes, dance music, and hatred.&lt;/p&gt;
&lt;p&gt;It's no accident that whenever there's a coup, the first thing the rebels seize is the radio station.&lt;/p&gt;
&lt;p&gt;Technology interacts with human nature in complicated ways, and part of human nature is to seek power over others, and manipulate them. Technology concentrates power.&lt;/p&gt;
&lt;p&gt;We have to assume the new technologies we invent will concentrate power, too. There is always a gap between mass adoption and the first skillful political use of a medium. With the Internet, we are crossing that gap right now.&lt;/p&gt;
&lt;p&gt;It's possible that people like Putin, or the campaign that won the Brexit vote, or the Trump campaign in the United States, are the geniuses of this new medium, like Roosevelt was in his day.&lt;/p&gt;
&lt;p&gt;But I worry that they're just beginners. I don't think we've even seen a Father Coughlin of the Internet, let alone a Goebbels, when it comes to making effective political use of the technology we've deployed at scale.&lt;/p&gt;
&lt;p&gt;We're not taking the threat seriously.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;18&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.033.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;19&quot;&gt;
&lt;p&gt;Google had a conference last week called Google I/O, where they showed off some truly amazing technology. The theme of it was AI in everything, both directly in their products, and by improving the tools they make available for everyone else. The subtext was that nothing but good could come out of moving these techniques into the real world as fast as possible.&lt;/p&gt;
&lt;p&gt;Left unsaid was the fact that to train the AI, and to fund the whole enterprise, you need a program of mass surveillance. It's significant to me that none of the companies that make their money from such surveillance are comfortable talking about their business model.&lt;/p&gt;
&lt;p&gt;But it's that business model that's enabling authoritarians.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14.44099378882&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.034.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;16.366459627329&quot;&gt;
&lt;p&gt;You don't get a clear warning that you're working on something that's bad for the world. They put you to work designing a machine that answers to &quot;OK Google&quot;, not &quot;OK Goebbels&quot;.&lt;/p&gt;
&lt;p&gt;And I bet even Goebbels' engineers could rationalize to themselves that the people's radio made lives better, and was an interesting engineering challenge.&lt;/p&gt;
&lt;p&gt;But being ashamed of your own business model is a clear warning that you’re not working on the &lt;a href=&quot;https://www.youtube.com/watch?v=hn1VxaMEjRU&quot;&gt;side of the angels&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Outcomes matter, not intentions.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;25&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.037.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;28&quot;&gt;
&lt;p&gt;The Book of Ecclesiastes has this to say about mass surveillance:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;Do not revile the king even in your thoughts,&lt;br /&gt;Or curse the rich in your bedroom,&lt;br /&gt;Because a bird in the sky may carry your words,&lt;br /&gt;And a bird on the wing may report what you say.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Our life now is full of these birds on the wing. Radios don't just talk to us anymore, they listen, and they know how to whisper algorithmically-targeted messages to us in ways we’ll find persuasive.&lt;/p&gt;
&lt;p&gt;It is a scary world we're building. And building it this way is a choice, not a necessity. We can't un-invent the Internet, but we can decide that the right way to fund it is not by building a Panopticon.&lt;/p&gt;
&lt;p&gt;I know you didn't come to this conference to hear a political talk. But the work you do matters a lot. Your choices matter a lot.&lt;/p&gt;
&lt;p&gt;To quote Ecclesiastes again: &quot;&lt;em&gt;As fish are caught in a cruel net, or birds are taken in a snare, so men are trapped by evil times that fall unexpectedly upon them.&lt;/em&gt;&quot;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;34&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.038.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;39&quot;&gt;
&lt;p&gt;I want to finish with a true story from here in Poland.&lt;/p&gt;
&lt;p&gt;Jan Hanasz was one of a group of radio astronomers in the city of Toruń, and the leader of the Toruń branch of Solidarity, the trade union that was banned in 1981.&lt;/p&gt;
&lt;p&gt;In the fall of 1982, his underground chapter of Solidarity decided to make some broadcasts, to lift people's spirits.&lt;/p&gt;
&lt;p&gt;People in Warsaw had tried making illegal broadcasts from rooftops, but these transmitters were too easy for the Security Bureau to find by triangulation. The radio astronomers had a more clever idea.&lt;/p&gt;
&lt;p&gt;One of them calculated how far the broadcast from a low-powered radio transmitter could reach if it was suspended from a balloon, and the figure he came up with was surprisingly high—a few kilometers at least.&lt;/p&gt;
&lt;p&gt;The group thought about using weather balloons, but those would be too easy to trace. Instead, they settled on inflatable beach balls that could be purchased in a sporting goods store.&lt;/p&gt;
&lt;p&gt;A chemist colleague provided them with a supply of hydrogen, which they kept in a fire extinguisher.&lt;/p&gt;
&lt;p&gt;I like to imagine this extinguisher hanging on a hook in the lab, being used to prank people. &quot;Hey Jacek, let me put out your cigarette!&quot;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;20.5&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.041.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;29&quot;&gt;
&lt;p&gt;Someone else in the group figured out how to make a lightweight antenna out of copper foil.&lt;/p&gt;
&lt;p&gt;The part they had the most trouble finding was a tape deck, not because it was suppressed by the Polish government, but because the Americans had put an embargo on advanced electronics.&lt;/p&gt;
&lt;p&gt;Eventually, a colleague in France arranged to send them used automobile tape decks that they could strip down to make as light as possible.&lt;/p&gt;
&lt;p&gt;As Hanasz describes it in an interview:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&quot;The underground press would announce broadcasts in advance. Sometimes they pasted flyers on walls. People knew to scan the UHF band at a certain hour. We didn't announce a specific frequency range so that there wouldn't be interference.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The broadcasts began with a long call signal: &quot;THIS IS RADIO SOLIDARITY TORUŃ&quot;, to give people time to tune their radios, followed by fifteen minutes of programming. The limiting factor was battery life.&lt;/p&gt;
&lt;p&gt;Quoting Hanasz again:&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;It was a really safe undertaking—no one got caught. The Security Bureau boys knew about the broadcasts in advance because of our flyers.&lt;/p&gt;&lt;p&gt;Radio direction finding vans roved around the city but couldn't pinpoint the transmitter. We were able to watch them search. Once they even wound up on the banks of the Vistula, completely lost.&lt;/p&gt;&lt;p&gt;Seeing the Security Bureau so helpless brought laughter and satisfaction to people who were tired of the repression of martial law.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;29.5&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/bolek_lolek.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;34&quot;&gt;
&lt;p&gt;In 1982, eleven clandestine Radio Solidarity radio stations were shut down across Poland. The scientists who cooperated in the balloon project were risking serious jail time in addition to the loss of their career and livelihood.&lt;/p&gt;
&lt;p&gt;Their act of defiance didn't bring down the state. It didn't do much more than give hope and brighten the day of a few hundred people. But it went straight back to that first idealistic promise of radio: that there existed magic, invisible rays that had the power to erase the distance between people, bypass all intermediaries, and penetrate even the thickest walls.&lt;/p&gt;
&lt;p&gt;I tell this story to reassure you that just because everything is heavy and political right now, it doesn't mean we can't also fight these fights on our own terms, as nerds.&lt;/p&gt;
&lt;p&gt;The Utopian qualities that made us love the web have not disappeared, even as it's become centralized and corporate, and we can find ways to defend and express them in our work.&lt;/p&gt;
&lt;p&gt;The important thing is to recognize that there is a fight, and a need for individual acts of creative resilience.&lt;/p&gt;
&lt;p&gt;We have to make sure that the powerful don't get comfortable using our tools. And we have to find ways to dismantle the surveillance economy before it becomes a poltical weapon turned against our democracy.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;24.5&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://static.pinboard.in/ancient/thumbs/law.042.thumb.jpg&quot; /&gt;&lt;/td&gt;
&lt;td readability=&quot;24.5&quot;&gt;
&lt;p&gt;I'd like to leave you with a final quote from Ecclesiastes. This one would be perfect for a graduation speech:&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&quot;Whatsoever thy hand findeth to do, do it with thy might; for there is no work, nor device, nor knowledge, nor wisdom, in the grave, whither thou goest.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I hope your journey to the grave is long and enjoyable! And I hope you find work to do that, in later years, you will turn back and look on with pride.&lt;/p&gt;
&lt;p&gt;Whether for good or bad, you are the pioneers in a field that is changing the world. The decisions that you make matter.&lt;/p&gt;
&lt;p&gt;Please think about that in the weeks and months to come, not just as tech workers, but as citizens and as fellow human beings.&lt;/p&gt;
&lt;p&gt;Thank you for your time!&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Tue, 09 Jan 2018 14:25:37 +0000</pubDate>
<dc:creator>panic</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://idlewords.com/talks/ancient_web.htm</dc:identifier>
</item>
<item>
<title>Apple&amp;#039;s privacy feature costs ad companies millions</title>
<link>https://www.theguardian.com/technology/2018/jan/09/apple-tracking-block-costs-advertising-companies-millions-dollars-criteo-web-browser-safari</link>
<guid isPermaLink="true" >https://www.theguardian.com/technology/2018/jan/09/apple-tracking-block-costs-advertising-companies-millions-dollars-criteo-web-browser-safari</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/technology/internet&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Internet&lt;/a&gt; advertising firms are losing hundreds of millions of dollars following the introduction of a new privacy feature from Apple that prevents users from being tracked around the web.&lt;/p&gt;
&lt;p&gt;Advertising technology firm Criteo, one of the largest in the industry, says that the Intelligent Tracking Prevention (ITP) feature for Safari, which holds 15% of the global browser market, is &lt;a draggable=&quot;true&quot; href=&quot;http://markets.businessinsider.com/news/stocks/Criteo-Provides-An-Update-On-Its-Q4-2017-Outlook-And-On-The-Impact-On-Its-Business-From-Apple-s-ITP-1011390212&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;likely to cut its 2018 revenue&lt;/a&gt; by more than a fifth compared to projections made before ITP was announced.&lt;/p&gt;
&lt;p&gt;With annual revenue in 2016 topping $730m, the overall cost of the privacy feature on just one company is likely to be in the hundreds of millions of dollars.&lt;/p&gt;
&lt;p&gt;Dennis Buchheim, general manager of the Interactive &lt;a href=&quot;https://www.theguardian.com/media/advertising&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Advertising&lt;/a&gt; Bureau’s Tech Lab, said that the feature would impact the industry widely.&lt;/p&gt;
&lt;p&gt;“We expect a range of companies are facing similar negative impacts from Apple’s &lt;a href=&quot;https://www.theguardian.com/technology/safari&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Safari&lt;/a&gt; tracking changes. Moreover, we anticipate that Apple will retain ITP and evolve it over time as they see fit,” Buchheim told the Guardian.&lt;/p&gt;
&lt;p&gt;“There will surely be some continued efforts to ‘outwit’ ITP, but we recommend &lt;a href=&quot;https://iabtechlab.com/blog/understanding-reacting-to-apple-safari-browser-tracking-changes/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;more sustainable, responsible approaches in the short-term&lt;/a&gt;,” Buchheim added. “We also want to work across the industry (ideally including Apple) longer-term to address more robust, cross-device advertising targeting and measurement capabilities that are also consumer friendly.”&lt;/p&gt;
&lt;h2&gt;‘Sabotage’&lt;/h2&gt;
&lt;p&gt;ITP was announced in June 2017 and released for iPhones, iPads and Macs in September. The feature prevents &lt;a href=&quot;https://www.theguardian.com/technology/apple&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Apple&lt;/a&gt; users from being tracked around the internet through careful management of “cookies”, small pieces of code that allow an advertising technology company to continually identify users as they browse.&lt;/p&gt;
&lt;details data-snippet-id=&quot;2396a713-380e-4abc-869b-09b2c369906a&quot; data-snippet-type=&quot;qanda&quot; class=&quot;atom atom--snippet atom--snippet--qanda&quot;&gt;&lt;span class=&quot;atom--snippet__label&quot;&gt;Q&amp;amp;A&lt;/span&gt;
&lt;h4 class=&quot;atom--snippet__headline&quot;&gt;What is a cookie?&lt;/h4&gt;
&lt;button class=&quot;atom__button atom__button--large atom__button--rounded atom--snippet__handle&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;is-on&quot;&gt; Show&lt;/span&gt; &lt;span class=&quot;is-off&quot;&gt; Hide&lt;/span&gt;&lt;/button&gt;
&lt;div class=&quot;atom--snippet__body&quot;&gt;
&lt;p&gt;A cookie is a small text file a website can drop on to a visitor's computer when it wants to remember something about them. The contents of a shopping trolley, perhaps, or whether or not they are logged in to the site at all.&lt;/p&gt;
&lt;p&gt;But cookies can also be used in less user-friendly ways. An advertising network can drop a cookie on a visitor's computer, and then read that same cookie at every new website the visitor arrives at that displays that network's adverts. This process lets the network track users around the web, building up a profile of their browsing habits to better target them for adverts.&lt;/p&gt;
&lt;/div&gt;
&lt;footer class=&quot;atom--snippet__footer&quot;&gt;&lt;div class=&quot;atom--snippet__feedback&quot;&gt;
&lt;div&gt;Was this helpful?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;atom--snippet__ack&quot; hidden=&quot;&quot; aria-role=&quot;alert&quot; aria-live=&quot;polite&quot;&gt;Thank you for your feedback.&lt;/div&gt;
&lt;/footer&gt;&lt;/details&gt;&lt;p&gt;Its launch &lt;a href=&quot;https://www.theguardian.com/technology/2017/sep/18/apple-stopping-ads-follow-you-around-internet-sabotage-advertising-industry-ios-11-and-macos-high-sierra-safari-internet&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;sparked complaints from the advertising industry&lt;/a&gt;, which called ITP “sabotage”. An open letter signed by six advertising trade bodies called on Apple “to rethink its plan … [that risks] disrupting the valuable digital advertising ecosystem that funds much of today’s digital content and services.”&lt;/p&gt;
&lt;p&gt;It also accused the company of ignoring internet standards, which say that a cookie should remain on a computer until it expires naturally or is manually removed by a user. Instead, the industry said, Apple is replacing those standards “with an amorphous set of shifting rules that will hurt the user experience and sabotage the economic model for the internet”.&lt;/p&gt;
&lt;p&gt;In response, Apple noted that: “Ad tracking technology has become so pervasive that it is possible for ad tracking companies to recreate the majority of a person’s web browsing history. This information is collected without permission and is used for ad re-targeting, which is how ads follow people around the internet.”&lt;/p&gt;
&lt;p&gt;Initially, many advertisers believed they had found a technological way around some of the restrictions put in place by ITP. Criteo, which took advantage of that loophole, had initially expected revenue to drop by only 9-13%, the company said. But in December, Apple closed that work-around on its mobile devices as part of the iOS 11.2 update, causing the ad-tech firm to update its projected impact to its current estimate of 22% “relative to our pre-ITP base case projections”.&lt;/p&gt;
&lt;p&gt;The company has not given up hope, however. “We are focused on developing an alternative sustainable solution for the long term, built on our best-in-class user privacy standards, aligning the interests of Apple users, publishers and advertisers,” Criteo said in a press release. “This solution is still under development and its effectiveness cannot be assessed at this early stage.”&lt;/p&gt;
&lt;p&gt;There is more pain to come for the advertising industry. Google has announced a built-in adblocker for its Chrome, which holds over 55% of the &lt;a href=&quot;http://gs.statcounter.com/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;global browser market&lt;/a&gt; according to data from Statcounter. Google has been &lt;a href=&quot;https://www.theguardian.com/technology/2017/jun/02/google-build-adblocker-intrusive-ads-chrome-browser&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;testing the feature since June 2017&lt;/a&gt; and &lt;a href=&quot;https://www.theregister.co.uk/2017/12/20/google_ad_blocking_yes_but_what/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;will roll it out to all users in February&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unlike Safari’s ITP, however, Chrome’s adblocker has been created in partnership with the ad industry. The feature only blocks what the company calls “intrusive ads”, such as autoplaying video and audio, popovers which block content, or interstitial ads that take up the entire screen.&lt;/p&gt;
</description>
<pubDate>Tue, 09 Jan 2018 14:07:20 +0000</pubDate>
<dc:creator>oneeyedpigeon</dc:creator>
<og:url>http://www.theguardian.com/technology/2018/jan/09/apple-tracking-block-costs-advertising-companies-millions-dollars-criteo-web-browser-safari</og:url>
<og:description>Ad-tech firm Criteo likely to cut its 2018 revenue by more than a fifth after Apple blocked ‘pervasive’ tracking on web browser Safari</og:description>
<og:image>https://i.guim.co.uk/img/media/1e7a0b2ce7932ac12684527842a6070a5e9ffb33/161_198_3124_1874/master/3124.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxNi8wNS8yNS9vdmVybGF5LWxvZ28tMTIwMC05MF9vcHQucG5n&amp;s=da576857a27fd309695fc50d4aba7d4c</og:image>
<og:type>article</og:type>
<og:title>No tracking, no revenue: Apple's privacy feature costs ad companies millions</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/technology/2018/jan/09/apple-tracking-block-costs-advertising-companies-millions-dollars-criteo-web-browser-safari</dc:identifier>
</item>
<item>
<title>The day I accidentally killed a little boy</title>
<link>http://www.bbc.co.uk/news/stories-42309681</link>
<guid isPermaLink="true" >http://www.bbc.co.uk/news/stories-42309681</guid>
<description>&lt;figure class=&quot;media-landscape no-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Maryann Gray&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/659B/production/_99511062_4bfcc7e8-afb6-432f-959e-cb203321c090.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;/span&gt;
            
        &lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;In 1977 Maryann Gray was a 22-year-old college graduate with her whole life ahead of her, when a little boy darted out in front of her car. For years, Maryann didn't talk about Brian, but she thought about him constantly - and his death has had a lasting influence on her life.&lt;/p&gt;&lt;p&gt;I was in a terrific mood that day. I was moving from the little college town of Oxford in rural Ohio into a big old rambling house in Cincinnati with a bunch of other people. I was so excited. &lt;/p&gt;&lt;p&gt;I'd been in graduate school but I'd decided I was going to leave.  I was happy not knowing what was coming next. I was going to get a job, have fun, see where my passions led me.&lt;/p&gt;&lt;p&gt;I was at the house - we called it an urban commune - painting the room I was moving into. When I finished I thought I'd drive back to my apartment in Oxford which was all packed up and ready for the move - it was a warm day in June and I thought it would be great to take a swim. &lt;/p&gt;&lt;p&gt;The road started out as freeway but quickly became a rural highway, one lane in each direction. The speed limit was 45 or 50mph, fairly fast for that kind of road, it was quite busy and I was in a line of cars doing the speed limit.&lt;/p&gt;&lt;p&gt;I passed a little outpost of houses whose mailboxes were on the opposite side of the street. As I passed the houses a little blond boy darted out, moving from the mailbox to his house. I saw him at the last second. I tried to swerve. There was no way to miss him. &lt;/p&gt;&lt;p&gt;I hit the little boy and he flew up into the air and then landed on the pavement. I pulled over and ran across the street. &lt;/p&gt;&lt;p&gt;I was so distressed that I don't really remember those minutes. I was hiding behind a bush and screaming. I heard myself and I thought, &quot;What is that? Who's doing that?&quot; &lt;/p&gt;&lt;p&gt;And then I realised it was me. &lt;/p&gt;&lt;figure class=&quot;media-portrait no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;The boy was receiving first aid in the road. There were lots of people attending to him and people gathering on the side of the road. &lt;/p&gt;&lt;p&gt;I was very, very frightened. I knew I had done something terrible.&lt;/p&gt;&lt;p&gt;It took 20 minutes for the police to arrive. They didn't wait for an ambulance, they just put the boy in the back of a police car and left. &lt;/p&gt;&lt;p&gt;I'd hit the boy right in front of his house and some neighbours had gone to get his mother. She came out of her house screaming her son's name in agony. She wanted to go to him but the neighbours held her back. Then she started to collapse on her front stoop and they had to hold her up. &lt;/p&gt;&lt;p&gt;It was loud, it was confused, it was very upsetting.&lt;/p&gt;&lt;p&gt;I approached the police. I came forward, raised my hand and said, &quot;I did it, I did it.&quot; They didn't know I was the one who hit him, I guess nobody saw it. &lt;/p&gt;&lt;p&gt;They sat me in the back of a police car and put a rookie up front to keep an eye on me. I wrote out a statement and talked to them at some length. They looked for skid marks on the road and took some measurements.&lt;/p&gt;&lt;p&gt;The lead officer came back and said, &quot;I just have to tell you the boy died.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Find out more&lt;/h2&gt;&lt;p&gt;Maryann Gray spoke to &lt;a href=&quot;http://www.bbc.co.uk/programmes/p002vsxt&quot; class=&quot;story-body__link&quot;&gt;Outlook&lt;/a&gt; on the BBC World Service. &lt;/p&gt;&lt;p&gt;You can listen again on the &lt;a href=&quot;http://www.bbc.co.uk/programmes/p05t5z1b&quot; class=&quot;story-body__link&quot;&gt;BBC iPlayer&lt;/a&gt;.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;I'd been praying that maybe it wasn't as bad as it looked, that maybe he would be OK. I remember just leaning over and crying, and then trying very hard to get hold of myself. &lt;/p&gt;&lt;p&gt;The police agreed to let me wait in one of the neighbour's houses. She was so kind. She had a daughter just a few years younger than me and I think she knew that her daughter could just as easily have been the perpetrator, like me, or the victim - Brian was his name. &lt;/p&gt;&lt;p&gt;The lead officer came and told me that they were not arresting me - there was no indication that I was negligent or distracted or impaired in any way - but he gave me a little lecture saying, &quot;This child died, that's a terrible thing, you need to make sure that you never do this again.&quot; &lt;/p&gt;&lt;p&gt;I was pretty angry because the idea that I would do it again was just beyond comprehension.&lt;/p&gt;&lt;p&gt;I called my parents in New York City and I told my mother what had happened. I was crying and I said, &quot;It was an accident, it was an accident.&quot; And my mom said, &quot;Of course it was an accident.&quot; &lt;/p&gt;&lt;figure class=&quot;media-portrait no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;My father came out the next day. He made a condolence call to the family that had lost their child which must have been unbelievably painful. He stopped by the neighbour's house to thank them for being so kind to me. He dealt with the car which had to go to a body shop. He got a lawyer so that if there was going to be any legal action I would have protection. &lt;/p&gt;&lt;aside class=&quot;quote&quot;&gt;&lt;div class=&quot;quote-inner&quot;&gt;
&lt;span class=&quot;icon-quote&quot;/&gt;&lt;blockquote class=&quot;quote&quot;&gt;I was deeply worried at a very unconscious level about whether I was a good person or whether I was a bad person&lt;/blockquote&gt;
&lt;/div&gt;&lt;/aside&gt;&lt;p&gt;He just tried to make sure that everything that could be taken care of was taken care of.&lt;/p&gt;&lt;p&gt;I spent the first night at a friend's house, compulsively telling the story of what happened, and then I went back to my apartment, the one that was all packed up and not a very cheerful place, and basically hid there for about a week.&lt;/p&gt;&lt;p&gt;I'd very much been a good girl who worked hard to get good grades and fulfil the expectations of my parents and my professors, but I think I grew up feeling like I always came up a little short and so after the accident I think I was deeply worried at a very unconscious level about whether I was a good person or whether I was a bad person.&lt;/p&gt;&lt;p&gt;There's a belief system that many people adhere to that we create the condition of our lives - so an angry person perceives an angry or hostile world, and a loving person experiences a kind, giving world. So I thought, &quot;What kind of a person has this experience? I must be a very dangerous person.&quot; &lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;When I got my car back I tried to drive but I kept hallucinating. I would be driving down the road and think I saw somebody walking into the street so I'd slam on the brakes, but there would be nobody there. That's a very dangerous thing to do - I was so frightened I gave up the car for about two years. &lt;/p&gt;&lt;p&gt;I had flashbacks that would pop into my brain unexpectedly. I could be in the middle of a conversation, washing the dishes, or doing the grocery shopping, and all of a sudden I would be visualising this child flying through the air after I hit him, or a puddle of blood on the road - horrible images.&lt;/p&gt;&lt;p&gt;I spent several years punishing myself by really pushing people away from me. I dated men who treated me very poorly, I didn't really have friends, I was irritable a lot, and my housemates didn't particularly enjoy having me around so I moved out of the commune into an apartment where I could just be by myself.&lt;/p&gt;&lt;p&gt;Two years after the accident I moved to California to start a different graduate programme in psychology and that really was a new beginning. I was intellectually engaged and doing work that I felt was important and helpful and that felt really good. &lt;/p&gt;&lt;p&gt;I pretty much stopped talking about the accident, on advice from my parents, who said that if people knew I had done this they would think about me differently.&lt;/p&gt;&lt;p&gt;I often refer to this little boy, Brian, as my ghost, because he became a part of me. His voice in my mind became this very punitive, angry voice that would say, &quot;Don't get too happy, remember what happened the last time you got happy? You killed a child, you killed me.&quot; &lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;You may also be interested in:&lt;/h2&gt;&lt;p&gt;I heard that voice many times every day, and so although I enjoyed my studies and I loved living in California, there was always that voice holding me back. I had killed a child and I could never forget that. &lt;/p&gt;&lt;p&gt;I thought about Brian the day I got married. I thought about Brian the day my father died. I thought about Brian the day I defended my dissertation. I thought about Brian the day I started a new job. He lived with me. &lt;/p&gt;&lt;p&gt;I married in my early 30s. I told my husband that I'd had this accident but we never talked about it. He didn't ask and I didn't want to impose my pain on him - this was my issue to deal with and I didn't really feel I had the right to ask for comfort. &lt;/p&gt;&lt;figure class=&quot;media-portrait no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Before the accident I couldn't have imagined a life without children. I was the most in-demand babysitter in the neighbourhood when I was at high school. I loved doing it - I would rather babysit than go out with friends. &lt;/p&gt;&lt;aside class=&quot;quote&quot;&gt;&lt;div class=&quot;quote-inner&quot;&gt;
&lt;span class=&quot;icon-quote&quot;/&gt;&lt;blockquote class=&quot;quote&quot;&gt;I was very fearful around children - all I could see was the pool where they might drown, the stairs that they might fall down, the knife that they might cut themselves with&lt;/blockquote&gt;
&lt;/div&gt;&lt;/aside&gt;&lt;p&gt;During that first week after the accident when I was hiding inside my apartment, I heard a voice. I call it an auditory hallucination. The voice said in this very biblical, Old Testament, angry way, &quot;You have taken a child from his mother and as your punishment you can never have your own child&quot;.&lt;/p&gt;&lt;p&gt;I didn't talk about that for at least 20 years. For all that time. &lt;/p&gt;&lt;p&gt;I was very fearful around children - all I could see were the sharp corners that they might fall against, or the pool where they might drown, the stairs that they might fall down, the knife that they might cut themselves with. &lt;/p&gt;&lt;p&gt;I didn't want to raise a frightened child and I didn't think I would be a good mother, so I decided against having children which is a huge regret, but was the right decision for me. I think I would have had a very hard time mothering. &lt;/p&gt;&lt;p&gt;I wanted to get through a set of life benchmarks that are pretty typical - finish my education, get a good job and find a life partner - and soon after, in the mid to late 90s, I decided it was time to go into therapy. &lt;/p&gt;&lt;p&gt;I had carried these memories around with me and they had taken over a large part of my inner life and kept me separate from other people. My friends knew I was a nervous driver, but they didn't know why.  I might be feeling down one day and the accident would be on my mind but I couldn't talk about it.&lt;/p&gt;&lt;p&gt;People thought they knew me but I didn't talk about probably the most significant event in my life. &lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;In 2003 there was an accident at Santa Monica Farmers Market. An elderly man had ploughed into a group of people with his car and lots of people had been killed and injured. I lived nearby and we were watching the news coverage on TV and could hear the helicopters overhead. &lt;/p&gt;&lt;aside class=&quot;quote&quot;&gt;&lt;div class=&quot;quote-inner&quot;&gt;
&lt;span class=&quot;icon-quote&quot;/&gt;&lt;blockquote class=&quot;quote&quot;&gt;I wrote a letter to Brian's mother - I told her I had taken this name to honour the memory of her son, that Brian lived in my heart as I knew he did in hers&lt;/blockquote&gt;
&lt;/div&gt;&lt;/aside&gt;&lt;p&gt;It was just carnage, it was a terrible scene.&lt;/p&gt;&lt;p&gt;People were on the TV screaming that this 86-year-old man was a murderer, but the idea that he meant to do it just horrified me.&lt;/p&gt;&lt;p&gt;I was distressed by the accident and it was on my mind so much that I closed the door to my office and banged out some words about the empathy I felt for the driver as well as the victims, about my experience, and about the lack of support for people who have accidentally killed other people. &lt;/p&gt;&lt;p&gt;At the time I was in a writing workshop, and I sent what I'd written to the woman who led my group. She called and said, &quot;You should send this to National Public Radio.&quot;&lt;/p&gt;&lt;p&gt;If I had thought there was any chance that they would actually run it I'd probably never have done it. But I sent it off and the next thing I knew NPR were calling, asking me to come in and record the piece.&lt;/p&gt;&lt;p&gt;I was very anxious about it but I thought somebody needed to show some compassion for this guy and others who had accidentally killed. &lt;/p&gt;&lt;p&gt;The piece was broadcast two or three days after the accident. &lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Where to get help&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://accidentalimpacts.org/&quot; class=&quot;story-body__link-external&quot;&gt;Accidental Impacts&lt;/a&gt; is a website run by Maryann Gray that offers information and support for people trying to cope with causing a serious accident&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;I was told that I should be prepared for hate mail, for negative comments on the internet, for people calling to harass me. But what happened was completely positive, there was a huge outpouring of support. Close friends that I had never told heard me on the radio and were uniformly compassionate and supportive. They told me I was strong for speaking out and that they were so sorry I had suffered.  &lt;/p&gt;&lt;p&gt;Something flowered inside, I felt a great sense of relief and much more connected to the people around me, and to the world. It was like coming out.&lt;/p&gt;&lt;p&gt;I also heard from other people who had accidentally killed people and who'd had experiences similar to mine, the post-traumatic symptoms - the flashbacks, feeling disconnected, difficulty concentrating, and, of course, guilt and shame.&lt;/p&gt;&lt;p&gt;It was very powerful because none of us had ever talked to anybody who'd had the same experience. &lt;/p&gt;&lt;p&gt;I had thought about contacting Brian's family for years but had held back because I wasn't sure that they would want to hear from me. I didn't have a lot of money, but I did make an anonymous donation of several thousand dollars to his brother's college to pay part of his tuition. &lt;/p&gt;&lt;p&gt;Then about 10 years ago I went to Israel on a trip. I'm Jewish and I went with my rabbi and other people from the temple that I belonged to. While I was there I took a Hebrew name, Bracha, which means blessing. I chose it in honour of Brian. &lt;/p&gt;&lt;p&gt;When I got home I wrote a letter to Brian's mother. I told her I had taken this name to honour the memory of her son, that Brian lived in my heart as I knew he did in hers. &lt;/p&gt;&lt;p&gt;I sent the letter. &lt;/p&gt;&lt;p&gt;It turned out that she had died, so her mail was being forwarded to her surviving son, Brian's older brother. &lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;One day I was sitting in my office, I picked up the phone and it was him. He'd read the letter and found me online.&lt;/p&gt;&lt;p&gt;We spoke for about 45 minutes. It was an emotional conversation. He was very angry, he told me how much his family had suffered. &lt;/p&gt;&lt;p&gt;They had stopped celebrating Christmas because it was too close to Brian's birthday and all the usual happy family occasions were muted for them forever. They never changed Brian's room, they kept it the same, so there was a constant reminder of their son. &lt;/p&gt;&lt;p&gt;None of them ever really stopped grieving. &lt;/p&gt;&lt;p&gt;As we talked he really softened. He hadn't known I'd made a condolence call and had a brief conversation with his father in the days after the accident. His father had been very kind to me and that had a big impact on him. &lt;/p&gt;&lt;aside class=&quot;quote&quot;&gt;&lt;div class=&quot;quote-inner&quot;&gt;
&lt;span class=&quot;icon-quote&quot;/&gt;&lt;blockquote class=&quot;quote&quot;&gt;I do forgive myself, but I'm terrified that I'll hurt somebody else&lt;/blockquote&gt;
&lt;/div&gt;&lt;/aside&gt;&lt;p&gt;At the end of the conversation I said, &quot;What do you want to ask me? You can ask me anything.&quot; &lt;/p&gt;&lt;p&gt;He said, &quot;Were you speeding?&quot; &lt;/p&gt;&lt;p&gt;And I said, &quot;No, I wasn't speeding. I'm sorry, I'm so sorry, but your brother darted out into the road.&quot; &lt;/p&gt;&lt;p&gt;He said, &quot;I know. Wrong time, wrong place.&quot; &lt;/p&gt;&lt;p&gt;In that moment I felt forgiven and I think perhaps he was able to feel a kind of pure grief, untinged by the anger that had coloured his mourning. &lt;/p&gt;&lt;p&gt;When we got off the phone I certainly didn't feel like we were friends but I felt like we had this amazing bond, because we were still mourning this child, and we will always have that in common. &lt;/p&gt;&lt;p&gt;I do forgive myself, but I'm terrified that I'll hurt somebody else. I live in Los Angeles and I drive all the time, but I'm very cautious.  &lt;/p&gt;&lt;p&gt;I have tried to honour Brian, his family and my own experience by reaching out and being a better person, but I don't think I'll ever be at peace with the fact that I killed a child. I will never cease to be horrified by that. &lt;/p&gt;&lt;p&gt;&lt;i&gt;All photographs courtesy of Maryann Gray.&lt;/i&gt;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;&lt;i&gt;Join the conversation - find us on &lt;/i&gt;&lt;a href=&quot;https://www.facebook.com/BBCStories/&quot; class=&quot;story-body__link-external&quot;&gt;Facebook&lt;/a&gt;&lt;i&gt;, &lt;/i&gt;&lt;a href=&quot;https://www.instagram.com/bbcstories/&quot; class=&quot;story-body__link-external&quot;&gt;Instagram&lt;/a&gt;&lt;i&gt; and &lt;/i&gt;&lt;a href=&quot;https://twitter.com/BBCstories&quot; class=&quot;story-body__link-external&quot;&gt;Twitter&lt;/a&gt;&lt;i&gt;.&lt;/i&gt;&lt;/p&gt;
    </description>
<pubDate>Tue, 09 Jan 2018 12:46:37 +0000</pubDate>
<dc:creator>sjcsjc</dc:creator>
<og:title>The day I accidentally killed a little boy</og:title>
<og:type>article</og:type>
<og:description>Maryann Gray was a 22-year-old graduate when a tragic accident on an everyday car journey changed her life forever.</og:description>
<og:url>http://www.bbc.co.uk/news/stories-42309681</og:url>
<og:image>https://ichef-1.bbci.co.uk/news/1024/branded_news/659B/production/_99511062_4bfcc7e8-afb6-432f-959e-cb203321c090.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.co.uk/news/stories-42309681</dc:identifier>
</item>
<item>
<title>Introduction to reverse engineering and assembly</title>
<link>http://kakaroto.homelinux.net/2017/11/introduction-to-reverse-engineering-and-assembly/</link>
<guid isPermaLink="true" >http://kakaroto.homelinux.net/2017/11/introduction-to-reverse-engineering-and-assembly/</guid>
<description>&lt;p&gt;I recently wrote a blog post giving an introduction to reverse engineering and assembly language on the &lt;a href=&quot;https://puri.sm/posts/primer-to-reverse-engineering-intel-fsp/&quot;&gt;Purism blog&lt;/a&gt;. Considering that my last blog post on my own website is from 3 years ago and this post is useful beyond the needs of just &lt;a href=&quot;https://puri.sm&quot;&gt;Purism&lt;/a&gt;, I thought it might have a nice home in my own personal blog as well, so here’s a copy paste of the entire blog post, as is.&lt;/p&gt;


&lt;hr class=&quot;ttfmake-hr&quot;/&gt;
&lt;p&gt;Recently, I’ve finished &lt;strong&gt;reverse engineering the Intel FSP-S “entry” code,&lt;/strong&gt; that is from the entry point (FspSiliconInit) all the way to the end of the function and all the subfunctions that it calls. This is only some initial foray into reverse engineering the FSP as a whole, but reverse engineering is something that takes a lot of time and effort. Today’s blog post is here to illustrate that, and to lay the foundations for understanding what I’ve done with the FSP code (in a future blog post).&lt;/p&gt;
&lt;p&gt;Over the years, many people asked me to teach them what I do, or to explain to them how to reverse engineer assembly code in general. Sometimes I hear the infamous “How hard can it be?” catchphrase. Last week someone I was discussing with thought that the assembly language is just like a regular programming language, but in binary form—it’s easy to make that mistake if you’ve never seen what assembly is or looks like. Historically, I’ve always said that reverse engineering and ASM is “too complicated to explain” or that “If you need help to get started, then you won’t be able to finish it on your own” and various other vague responses—I often wanted to explain to others why I said things like that but I never found a way to do it. You see, when something is complex, it’s easy to say that it’s complex, but it’s much harder to explain to people &lt;em&gt;why&lt;/em&gt; it’s complex.&lt;/p&gt;
&lt;p&gt;I was lucky to recently stumble onto a little function while reverse engineering the Intel FSP, a function that was both simple and complex, where figuring out what it does was an interesting challenge that I can easily walk you through. This function wasn’t a difficult thing to understand, and by far, it’s not one of the hard or complex things to reverse engineer, but this one is “small and complex enough” that it’s a perfect example to explain, without writing an entire book or getting into the more complex aspects of reverse engineering. So &lt;strong&gt;today’s post serves as a “primer” guide to reverse engineering&lt;/strong&gt; for all of those interested in the subject. &lt;strong&gt;It is a required read in order to understand the next blog posts I would be writing about the Intel FSP.&lt;/strong&gt; Ready? Strap on your geek helmet and let’s get started!&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr class=&quot;ttfmake-hr&quot;/&gt;&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I might make false statements in the blog post below, some by mistake, some intentionally for the purpose of vulgarizing the explanations. For example, when I say below that there are 9 registers in X86, I know there are more (SSE, FPU, or even just the DS or EFLAGS registers, or purposefully not mentioning EAX instead of RAX, etc.), but I just don’t want to complicate matters by going too wide in my explanations.&lt;/p&gt;
&lt;hr class=&quot;ttfmake-hr&quot;/&gt;
&lt;p&gt;First things first, you need to understand some basic concepts, such as “what is ASM exactly”. I will explain some basic concepts but not &lt;em&gt;all&lt;/em&gt; the basic concepts you might need. I will assume that you know at least what a programming language is and know how to write a simple “hello world” in at least one language, otherwise you’ll be completely lost.&lt;/p&gt;
&lt;p&gt;So, ASM is the Assembly language, but it’s not the actual binary code that executes on the machine. It is however, very similar to it. To be more exact, the assembly language is a textual representation of the binary instructions given to the microprocessor. You see, when you compile your regular C program into an executable, the compiler will transform all your code into some very, very, very basic instructions. Those instructions are what the CPU will understand and execute. By combining a lot of small, simple and specific instructions, you can do more complex things. That’s the basis of any programming language, of course, but with assembly, the building blocks that you get are very limited. Before I’ll talk about instructions, I want to explain two concepts first which you’ll need to follow the rest of the story.&lt;/p&gt;
&lt;h2&gt;The stack&lt;/h2&gt;
&lt;p&gt;First I’ll explain what “the stack” is.  You may have heard of it before, or maybe you didn’t, but the important thing to know is that when you write code, you have two types of memory:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The first one is your “dynamic memory”, that’s when you call ‘malloc’ or ‘new’ to allocate new memory, this goes from your RAM upward (or left-to-right), in the sense that if you allocate 10 bytes, you’ll first get address 0x1000 for example, then when you allocate another 30 bytes, you’ll get address 0x100A, then if you allocate another 16 bytes, you’ll get 0x1028, etc.&lt;/li&gt;
&lt;li&gt;The second type of memory that you have access to is the &lt;em&gt;stack,&lt;/em&gt; which is different, instead it grows downward (or right-to-left), and it’s used to store local variables in a function. So if you start with the stack at address 0x8000, then when you enter a function with 16 bytes worth of local variables, your stack now points to address 0x7FF0, then you enter another function with 64 bytes worth of local variables, and your stack now points to address 0x7FB0, etc. The way the stack works is by “stacking” data into it, you “push” data in the stack, which puts the variable/data into the stack and moves the stack pointer down, you can’t remove an item from anywhere in the stack, you can always only remove (pop) the last item you added (pushed). A stack is actually an abstract type of data, like a list, an array, a dictionary, etc. You can read more about what a stack is on &lt;a href=&quot;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&quot;&gt;wikipedia&lt;/a&gt; and it shows you how you can add and remove items on a stack with this image:&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/b/b4/Lifo_stack.png&quot; alt=&quot;&quot; width=&quot;773&quot; height=&quot;540&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The image shows you what we call a LIFO (Last-In-First-Out) and that’s what a stack is. In the case of the computer’s stack, it grows downward in the RAM (as opposed to upward in the above image) and is used to store local variables as well as the return address for your function (the instruction that comes after the call to your function in the parent function). So when you look at a stack, you will see multiple “frames”, you’ll see your current function’s stack with all its variables, then the return address of the function that called it, and above it, you’ll see the previous function’s frame with its own variables and the address of the function that called it, and above, etc. all the way to the main function which resides at the top of the stack.&lt;/p&gt;
&lt;p&gt;Here is another image that exemplifies this:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/ProgramCallStack2_en.png/350px-ProgramCallStack2_en.png&quot; alt=&quot;&quot; width=&quot;350&quot; height=&quot;416&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;The registers&lt;/h2&gt;
&lt;p&gt;The second thing I want you to understand is that the processor has multiple “registers”. You can think of a register as a variable, but there are only 9 total registers on x86, with only 7 of them usable. So, on the x86 processor, the various registers are: EAX, EBX, ECX, EDX, EDI, ESI, EBP, ESP, EIP.&lt;/p&gt;
&lt;p&gt;There are two registers in there that are special:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The EIP (Instruction Pointer) contains the address of the current instruction being executed.&lt;/li&gt;
&lt;li&gt;The ESP (Stack Pointer) contains the address of the stack.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Access to the registers is extremely fast when compared to accessing the data in the RAM (the stack also resides on the RAM, but towards the end of it) and most operations (instructions) have to happen on registers. You’ll understand more when you read below about instructions, but basically, you can’t use an instruction to say “add value A to value B and store it into address C”, you’d need to say “move value A into register EAX, then move value B into register EBX, then add register EAX to register EBX and store the result in register ECX, then store the value of register ECX into the address C”.&lt;/p&gt;
&lt;h2&gt;The instructions&lt;/h2&gt;
&lt;p&gt;Let’s go back to explaining instructions now. As I explained before, the instructions are the basic building blocks of the programs, and they are very simple, they take the form of:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
INS OP1, OP2, OP3
&lt;/pre&gt;
&lt;br/&gt;Where “INS” is the instruction”, and OP1, OP2, OP3 is what we call the “operand”, most instructions will only take 2 operands, some will take no operands, some will take one operand and others will take 3 operands. The operands are usually registers. Sometimes, the operand can be an actual value (what we call an “immediate value”) like “1”, “2” or “3”, etc. and sometimes, the operand is a relative position from a register, like for example “[%eax + 4]” meaning the address pointed to by the %eax register + 4 bytes. We’ll see more of that shortly. For now, let’s give you the list of the most common and used instructions:
&lt;ul&gt;&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_176.html&quot;&gt;MOV&lt;/a&gt;“: move data from one operand into another&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_5.html&quot;&gt;ADD&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_308.html&quot;&gt;SUB&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_210.html&quot;&gt;MUL&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_72.html&quot;&gt;DIV&lt;/a&gt;“: Add, Substract, Multiply, Divide one operand with another and store the result in a register&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_12.html&quot;&gt;AND&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_219.html&quot;&gt;OR&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_330.html&quot;&gt;XOR&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_218.html&quot;&gt;NOT&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_216.html&quot;&gt;NEG&lt;/a&gt;“: Perform logical and/or/xor/not/negate operations on the operand&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_285.html&quot;&gt;SHL&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_285.html&quot;&gt;SHR&lt;/a&gt;“: Shift Left/Shift Right the bits in the operand&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_35.html&quot;&gt;CMP&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_315.html&quot;&gt;TEST&lt;/a&gt;“: Compare one register with an operand&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_147.html&quot;&gt;JMP&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_146.html&quot;&gt;JZ&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_146.html&quot;&gt;JNZ&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_146.html&quot;&gt;JB&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_146.html&quot;&gt;JS&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_146.html&quot;&gt;etc&lt;/a&gt;.”: Jump to another instruction (Jump unconditionally, Jump if Zero, Jump if Not Zero, Jump if Below, Jump if Sign, etc.)&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_269.html&quot;&gt;PUSH&lt;/a&gt;/&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_248.html&quot;&gt;POP&lt;/a&gt;“: Push an operand into the stack, or pop a value from the stack into a register&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_26.html&quot;&gt;CALL&lt;/a&gt;“: Call a function. This is the equivalent of doing a “PUSH %EIP+4” + “JMP”. I’ll get into calling conventions later..&lt;/li&gt;
&lt;li&gt;“&lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_280.html&quot;&gt;RET&lt;/a&gt;“: Return from a function. This is the equivalent of doing a “POP %EIP”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;That’s about it, that’s what most programs are doing. Of course, there’s a lot more instructions, you can see a full list &lt;a href=&quot;http://x86.renejeschke.de/&quot;&gt;here&lt;/a&gt;, but you’ll see that most of the other instructions are very obscure or very specific or variations on the above instructions, so really, this represents most of the instructions you’ll ever encounter.&lt;/p&gt;
&lt;p&gt;I want to explain one thing before we go further down: there is an additional register I didn’t mention before called the &lt;a href=&quot;https://en.wikipedia.org/wiki/FLAGS_register&quot;&gt;FLAGS register&lt;/a&gt;, which is basically just a status register that contains “flags” that indicate when some arithmetic condition happened on the last arithmetic operation. For example, if you add 1 to 0xFFFFFFFF, it will give you ‘0’ but the “&lt;a href=&quot;https://en.wikipedia.org/wiki/Overflow_flag&quot;&gt;Overflow flag&lt;/a&gt;” will be set in the FLAGS register. If you substract 5 from 0, it will give you 0xFFFFFFFB and the “&lt;a href=&quot;https://en.wikipedia.org/wiki/Sign_flag&quot;&gt;Sign flag&lt;/a&gt;” will be set because the result is negative, and if you substract 3 from 3, the result will be zero and the “&lt;a href=&quot;https://en.wikipedia.org/wiki/Zero_flag&quot;&gt;Zero flag&lt;/a&gt;” will be set.&lt;/p&gt;
&lt;p&gt;I’ve shown you the “CMP” instruction which is used to compare a register with an operand, but you might be wondering, “What does it mean exactly to ‘compare’?” Well, it’s simple, the CMP instruction is the same thing as the SUB instruction, in that, it substracts one operand from another, but the difference is that it doesn’t store the result anywhere. However, it does get your flags updated in the FLAGS register. For example, if I wanted to compare %EAX register with the value ‘2’, and %EAX contains the value 3, this is what’s going to happen: you will substract 2 from the value, the result will be 1, but you don’t care about that, what you care about is that the ZF (Zero flag) is not set, and the SF (Sign flag is not set), which means that %eax and ‘2’ are not equal (otherwise, ZF would be set), and that the value in %eax is superior to 2 (because SF is not set), so you know that “%eax &amp;gt; 2” and that’s what the CMP does.&lt;/p&gt;
&lt;p&gt;The TEST instruction is very similar but it does a logical AND on the two operands for testing, so it’s used for comparing logical values instead of arithmetic values (“TEST %eax, 1” can be used to check if %eax contains an odd or even number for example).&lt;/p&gt;
&lt;p&gt;This is useful because the next bunch of instructions I explained in the list above is conditional Jump instructions, like “JZ” (jump if zero) or “JB” (jump if below), or “JS” (jump if sign), etc. This is what is used to implement “if, for, while, switch/case, etc.” it’s as simple as doing a “CMP” followed by a “JZ” or “JNZ” or “JB”, “JA”, “JS”, etc.&lt;/p&gt;
&lt;p&gt;And if you’re wondering what’s the difference between a “Jump if below” and “Jump if sign” and “Jump if lower”, since they all mean that the comparison gave a negative result, right? Well, the “jump if below” is used for unsigned integers, while “jump if lower” is used for signed integers, while “jump if sign” can be misleading. An unsigned 3 – 4 would give us a very high positive result…  something like that, in practice, JB checks the &lt;a href=&quot;https://en.wikipedia.org/wiki/Carry_flag&quot;&gt;Carry Flag&lt;/a&gt;, while JS checks the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sign_flag&quot;&gt;Sign Flag&lt;/a&gt; and JL checks if the Sign Flag is equal to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Overflow_flag&quot;&gt;Overflow flag&lt;/a&gt;. See the &lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_146.html&quot;&gt;Conditional Jump&lt;/a&gt; page for more details.&lt;/p&gt;
&lt;h2&gt;A practical example&lt;/h2&gt;
&lt;p&gt;Here’s a very small and simple practical example, if you have a simple C program like this:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
int main() {
   return add_a_and_b(2, 3);
}

int add_a_and_b(int a, int b) {
   return a + b;
}
&lt;/pre&gt;
&lt;br/&gt;It would compile into something like this:&lt;pre&gt;
_main:
   push   3                ; Push the second argument '3' into the stack
   push   2                ; Push the first argument '2' into the stack
   call   _add_a_and_b     ; Call the _add_a_and_b function. This will put the address of the next
                           ; instruction (add) into the stack, then it will jump into the _add_a_and_b
                           ; function by putting the address of the first instruction in the _add_a_and_b
                           ; label (push %ebx) into the EIP register
   add    %esp, 8          ; Add 8 to the esp, which effectively pops out the two values we just pushed into it
   ret                     ; Return to the parent function.... 

_add_a_and_b:
   push   %ebx             ; We're going to modify %ebx, so we need to push it to the stack
                           ; so we can restore its value when we're done
   mov    %eax, [%esp+8]   ; Move the first argument (8 bytes above the stack pointer) into EAX
   mov    %ebx, [%esp+12]  ; Move the second argument (12 bytes above the stack pointer) into EBX
   add    %eax, %ebx       ; Add EAX and EBX and store the result into EAX
   pop    %ebx             ; Pop EBX to restore its previous value
   ret                     ; Return back into the main. This will pop the value on the stack (which was
                           ; the address of the next instruction in the main function that was pushed into
                           ; the stack when the 'call' instruction was executed) into the EIP register
&lt;/pre&gt;
&lt;br/&gt;Yep, something as simple as that, can be quite complicated in assembly. Well, it’s not really that complicated actually, but a couple of things can be confusing.
&lt;p&gt;You have only 7 usable registers, and one stack. Every function gets its arguments passed through the stack, and can return its return value through the %eax register. If every function modified every register, then your code will break, so every function has to ensure that the other registers are unmodified when it returns (other than %eax). You pass the arguments on the stack and your return value through %eax, so what should you do if need to use a register in your function? Easy: you keep a copy on the stack of any registers you’re going to modify so you can restore them at the end of your function. In the _&lt;em&gt;add_a_and_b &lt;/em&gt;function, I did that for the %ebx register as you can see. For more complex function, it can get a lot more complicated than that, but let’s not get into that for now (for the curious: compilers will create what we call a “prologue” and an “epilogue” in each function. In the prologue, you store the registers you’re going to modify, set up the %ebp (base pointer) register to point to the base of the stack when your function was entered, which allows you to access things without keeping track of the pushes/pops you do throughout the function, then in the epilogue, you pop the registers back, restore %esp to the value that was saved in %ebp, before you return).&lt;/p&gt;
&lt;p&gt;The second thing you might be wondering about is with these lines:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
mov %eax, [%esp+8]
mov %ebx, [%esp+12]
&lt;/pre&gt;
&lt;br/&gt;And to explain it, I will simply show you this drawing of the stack’s contents when we call those two instructions above:
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-43904&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/stack-300x259.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;259&quot;/&gt;&lt;/p&gt;
&lt;p&gt;For the purposes of this exercise, we’re going to assume that the _main function is located in memory at the address 0xFFFF0000, and that each instructoin is 4 bytes long (the size of each instruction can vary depending on the instruction and on its operands). So you can see, we first pushed 3 into the stack, %esp was lowered, then we pushed 2 into the stack, %esp was lowered, then we did a ‘call _add_a_and_b’, which stored the address of the next instruction (4 instructions into the main, so ‘_main+16’) into the stack and esp was lowered, then we pushed %ebx, which I assumed here contained a value of 0, and the %esp was lowered again. If we now wanted to access the first argument to the function (2), we need to access %esp+8, which will let us skip the saved %ebx and the ‘Return address’ that are in the stack (since we’re working with 32 bits, each value is 4 bytes). And in order to access the second argument (3), we need to access %esp+12.&lt;/p&gt;
&lt;h2&gt;Binary or assembly?&lt;/h2&gt;
&lt;p&gt;One question that may (or may not) be popping into your mind now is “wait, isn’t this supposed to be the ‘computer language’, so why isn’t this binary?” Well, it is… in a way. As I explained earlier, “the assembly language is a textual representation of the binary instructions given to the microprocessor”, what it means is that those instructions are given to the processor as is, there is no transformation of the instructions or operands or anything like that. However, the instructions are given to the microprocessor in binary form, and the text you see above is just the textual representation of it.. kind of like how “68 65 6c 6c 6f” is the hexadecimal representation of the ASCII text “hello”. What this means is that each instruction in assembly language, which we call a ‘mnemonic’ represents a binary instruction, which we call an ‘opcode’, and you can see the opcodes and mnemonics in the &lt;a href=&quot;http://x86.renejeschke.de/&quot;&gt;list&lt;/a&gt; of x86 instructions I gave you above. Let’s take the &lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_26.html&quot;&gt;CALL&lt;/a&gt; instruction for example. The opcode/mnemonic list is shown as:&lt;/p&gt;
&lt;table class=&quot;box&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Opcode&lt;/th&gt;
&lt;th&gt;Mnemonic&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;E8 cw&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL rel16&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call near, relative, displacement relative to next instruction&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;E8 cd&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL rel32&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call near, relative, displacement relative to next instruction&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;FF /2&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL r/m16&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call near, absolute indirect, address given in r/m16&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;FF /2&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL r/m32&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call near, absolute indirect, address given in r/m32&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;9A cd&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL ptr16:16&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call far, absolute, address given in operand&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;9A cp&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL ptr16:32&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call far, absolute, address given in operand&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;FF /3&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL m16:16&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call far, absolute indirect, address given in m16:16&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;FF /3&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;&lt;code&gt;CALL m16:32&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;grid&quot;&gt;Call far, absolute indirect, address given in m16:32&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;This means that this same “CALL” mnemonic can have multiple addresses to call. Actually, there are four different possitiblities, each having a 16 bits and a 32 bits variant. The first possibility is to call a function with a relative displacement (Call the function 100 bytes below this current position), or an absolute address given in a register (Call the function whose address is stored in %eax) or an absolute address given as a pointer (Call the function at address 0xFFFF0100), or an absolute address given as an offset to a segment (I won’t explain segments now). In our example above, the “call _add_a_and_b” was probably stored as a call relative to the current position with 12 bytes below the current instruction (4 bytes per instruction, and we have the CALL, ADD, RET instructions to skip). This means that the instruction in the binary file was encoded as “E8 00 00 00 0C” (The E8 opcode to mean a “CALL near, relative”, and the “00 00 00 0C” to mean 12 bytes relative to the current instruction). Now, the most observant of you have probably noticed that this CALL instruction takes 5 bytes total, not 4, but as I said above, we will assume it’s 4 bytes per instruction just for the sake of keeping things simple, but yes, the CALL (in this case) is 5 bytes, and other instructions will sometimes have more or less bytes as well.&lt;/p&gt;
&lt;p&gt;I chose the CALL function above for example, because I think it’s the least complicated to explain.. other instructions have even more complicated opcodes and operands (See the &lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_5.html&quot;&gt;ADD&lt;/a&gt; and &lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_4.html&quot;&gt;ADC&lt;/a&gt; (Add with Cary) instructions for example, you’ll notice the same opcodes shared between them even, so they are the same instruction, but it’s easy to give them separate mnemonics to differentiate their behaviors).&lt;/p&gt;
&lt;p&gt;Here’s a screenshot showing a side by side view of the Assembly of a function with the hexadecimal view of the binary:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large wp-image-44228&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/ida_hex-1024x475.png&quot; alt=&quot;&quot; width=&quot;960&quot; height=&quot;445&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see, I have my cursor on address 0xFFF6E1D6 on the assembly view on the left, which is also highlighted on the hex view on the right. That address is a CALL instruction, and you can see the equivalent hex of “E8 B4 00 00 00”, which means it’s a CALL near, relative (E8 being the opcode for it) and the function is 0xB4 (180) bytes below our current position of 0xFFF6E1D6.&lt;/p&gt;
&lt;p&gt;If you open the file with a hexadecimal editor, you’ll only see the hex view on the right, but you need to put the file into a Disassembler (such as the IDA disassembler which I’m using here, but there are cheaper alternatives as well, &lt;a href=&quot;https://en.wikibooks.org/wiki/X86_Disassembly/Disassemblers_and_Decompilers&quot;&gt;the list&lt;/a&gt; can be long), and the disassembler will interpret those binary opcodes to show you the textual assembly representation which is much much easier to read.&lt;/p&gt;

&lt;p&gt;Now that you have the basics, let’s do a quick reverse engineering exercise… This is a very simple function that I’ve reversed recently, it comes from the SiliconInit part of the FSP, and it’s used to validated the UPD configuration structure (used to tell it what to do).&lt;/p&gt;
&lt;p&gt;Here is the Assembly code for that function:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-43908&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/validate_upd_config.png&quot; alt=&quot;&quot; width=&quot;854&quot; height=&quot;660&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This was disassembled using &lt;a href=&quot;https://www.hex-rays.com/products/ida/&quot;&gt;IDA&lt;/a&gt; 7.0 (The Interactive DisAssembler) which is an incredible (but expensive) piece of software. There are other disassemblers which can do similar jobs, but I prefer IDA personally. Let’s first explain what you see on the screen.&lt;/p&gt;
&lt;p&gt;On the left side, you see “seg000:FFF40xxx” this means that we are in the segment “seg000” at the address 0xFFF40xxx. I won’t explain what a segment is, because you don’t need to know it. The &lt;em&gt;validate_upd_config&lt;/em&gt; function starts at address 0xFFF40311 in the RAM, and there’s not much else to understand. You can see how the address increases from one instruction to the next, it can help you calculate the size in bytes that each instruction takes in RAM for example, if you’re curious of course… (the XOR is 2 bytes, the CMP is 2 bytes, etc.).&lt;/p&gt;
&lt;p&gt;As you’ve seen in my previous example, anything after a semicolon (“;”) is considered a comment and can be ignored. The “CODE XREF” comments are added by IDA to tell us that this code has a cross-references (is being called by) some other code. So when you see “CODE XREF: validate_upd_config+9” (at 0xFF40363, the RETN instruction), it means this instruction is being called (referenced by) from the function validate_upd_config and the “+9” means 9 bytes into the function (so since the function starts at 0xFFF40311, it means it’s being called from the instruction at offset 0xFFF4031A. The little “up” arrow next to it means that it comes from above the current position in the code, and if you follow the grey lines on the left side of the screen, you can follow that call up to the address 0xFFF4031A which contains the instruction “jnz short locret_FFF40363”. I assume the “j” letter right after the up arrow is to tell us that the reference comes from a “jump” instruction.&lt;/p&gt;
&lt;p&gt;As you can see in the left side of the screen, there are a lot of arrows, that means that there’s a lot of jumping around in the code, even though it’s not immediatly obvious. The awesome IDA software has a “layout view” which gives us a much nicer view of the code, and it looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-43911&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/validate_upd_config_graph.png&quot; alt=&quot;&quot; width=&quot;867&quot; height=&quot;778&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Now you can see each block of code separately in their own little boxes, with arrows linking all of the boxes together whenever a jump happens. The green arrows mean that it’s a conditional jump when the condition is successful, while the red arrows means the condition was not successful. This means that a “JZ” will show a green arrow towards the code it would jump to if the result is indeed zero, and a red arrow towards the block where the result is not zero. A blue arrow means that it’s an unconditional jump.&lt;/p&gt;
&lt;p&gt;I usually always do my reverse engineering using the layout view, I find it much easier to read/follow, but for the purpose of this exercise, I will use the regular linear view instead, so I think it will be easier for you to follow with that instead. The reason is mostly because the layout view doesn’t display the address of each instruction, and it’s easier to have you follow along if I can point out exactly which instruction I’m looking it by mentioning its address.&lt;/p&gt;
&lt;p&gt;Now that you know how to read the assembly code, you understand the various instructions, I feel you should be ready to reverse engineering this very simple assembly code (even though it might seem complex at first). I just need to give you the following hints first:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Because I’ve already reversed engineering it, you get the beautiful name “validate_upd_config” for the function, but technically, it was simply called “sub_FFF40311”&lt;/li&gt;
&lt;li&gt;I had already reverse engineered the function that called it so I know that this function is receiving its arguments in an unusual way. The arguments aren’t pushed to the stack, instead, the first argument is stored in %ecx, and the second argument is stored in %edx&lt;/li&gt;
&lt;li&gt;The first argument (%ecx, remember?) is an enum to indicate what type of UPD structure to validate, let me help you out and say that type ‘3’ is the FSPM_UPD (The configuration structure for the FSPM, the MemoryInit function), and that type ‘5’ is the FSPS_UPD (The configuration structure for the FSPS, the SiliconInit function).&lt;/li&gt;
&lt;li&gt;Reverse engineering is really about reading one line at a time, in a sequential manner, keep track of which blocks you reversed and be patient. You can’t look at it and expect to understand the function by viewing the big picture.&lt;/li&gt;
&lt;li&gt;It is very very useful in this case to have a dual monitor, so you can have one monitor for the assembly, and the other monitor for your C code editor. In my case, I actually recently bought an ultra-wide monitor and I split screen between my IDA window and my emacs window and it’s great. It’s hard otherwise to keep going back and forth between the assembly and the C code. That being said, I would suggest you do the same thing here and have a window on the side showing you the assembly image above (not the layout view) while you read the explanation on how to reverse engineer it below.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Got it? All done? No? Stop sweating and hyperventilating… I’ll explain exactly how to reverse engineer this function in the next paragraph, and you will see how simple it turns out to be!&lt;/p&gt;
&lt;h2&gt;Let’s get started!&lt;/h2&gt;
&lt;p&gt;The first thing I do is write the function in C. Since I know the name and its arguments already, I’ll do that:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
void validate_upd_config (uint8_t action, void *config) {
}
&lt;/pre&gt;
&lt;br/&gt;Yeah, there’s not much to it yet, and I set it to return “void” because I don’t know if it returns anything else, and I gave the first argument “action” as a “uint8_t” because in the parent function it’s used a single byte register (I won’t explain for now how to differentiate 1-byte, 2-bytes, 4-bytes and 8-bytes registers). The second argument is a pointer, but I don’t know it’s a pointer to what kind of structure exactly, so I just set it as a &lt;em&gt;void *&lt;/em&gt;.
&lt;p&gt;The first instruction is a “xor eax, eax”. What does this do? It XORs the eax register with the eax register and stores the result in the eax register itself, which is the same thing as “mov eax, 0”, because &lt;em&gt;1 XOR 1= 0&lt;/em&gt; and &lt;em&gt;0 XOR 0 = 0&lt;/em&gt;, so if every bit in the eax register is logically XORed with itself, it will give 0 for the result. If you’re asking yourself “Why did the compiler decide to do ‘xor eax, eax’ instead of ‘mov eax, 0’ ?” then the answer is simple: “Because it takes less CPU clock cycles to do a XOR, than to do a move”, which means it’s more optimized and it will run faster. Besides, the XOR takes 2 bytes as you can see above (the address of the instructions jumped from FFF40311 to FFF40313), while a “mov eax, 0” would have taken 5 bytes. So it also helps keep the code smaller.&lt;/p&gt;
&lt;p&gt;Alright, so now we know that eax is equal to 0, let’s keep that in mind and move along (I like to keep track of things like that as comments in my C code). Next instruction does a “cmp ecx, 3”, so it’s comparing ecx, which we already know is our first argument (uint8_t action), ok, it’s a comparison, not much to do here, again let’s keep that in mind and continue… the next instruction does a “jnz short loc_FFF40344”, which is more interesting, so if the previous comparison is NOT ZERO, then jump to the label loc_FFF40344 (for now ignore the “short”, it just helps us differentiate between the various mnemonics, and it means that the jump is a relative offset that fits in a “short word” which means 2 bytes, and you can confirm that the jnz instruction does indeed take only 2 bytes of code). Great, so there’s a jump if the result is NOT ZERO, which means that if the result is zero, the code will just continue, which means if the ecx register (action variable) is EQUAL (substraction is zero) to 3, the code will continue down to the next instruction instead of jumping… let’s do that, and in the meantime we’ll update our C code:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
void validate_upd_config (uint8_t action, void *config) {
   // eax = 0
   if (action == 3) {
      // 0xFFF40318 
   } else {
      // loc_FFF40344
   }
}
&lt;/pre&gt;
&lt;br/&gt;The next instruction is “test edx, edx”.  We know that the edx register is our second argument which is the pointer to the configuration structure. As I explained above, the “test” is just like a comparison, but it does an AND instead of a substraction, so basically, you AND edx with itself.. well, of course, that has no consequence, &lt;em&gt;1 AND 1 = 1&lt;/em&gt;, and &lt;em&gt;0 AND 0 = 0&lt;/em&gt;, so why is it useful to test a register against itself? Simply because the TEST will update our FLAGS register… so when the next instruction is “JZ” it basically means “Jump if the edx register was zero”… And yes, doing a “TEST edx, edx”  is more optimized than doing a “CMP edx, 0”, you’re starting to catch on, yeay!
&lt;p&gt;And indeed, the next instruction is “jz locret_FFF40363”, so if the edx register is ZERO, then jump to locret_FFF40363, and if we look at that locret_FFF40363, it’s a very simple “retn” instruction. So our code becomes:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
void validate_upd_config (uint8_t action, void *config) {
  // eax = 0
  if (action == 3) {
    if (config == NULL)
       return; 
  } else {
    // loc_FFF40344
  }
}
&lt;/pre&gt;
&lt;br/&gt;Next! Now it gets slightly more complicated… the instruction is: “cmp dword ptr [edx], 554C424Bh”, which means we do a comparison of a dword (4 bytes), of the data pointed to by the pointer edx, with no offset (“[edx]” is the same as saying “edx[0]” if it was a C array for example), and we compare it to the value 554C424Bh… the “h” at the end means it’s a hexadecimal value, and with experience you can quickly notice that the hexadecimal value is all within the ASCII range, so using a Hex to ASCII converter, we realize that those 4 bytes represent the ASCII letters “KBLU” (which is why I manually added them as a comment to that instruction, so I won’t forget). So basically the instruction compares the first 4 bytes of the structure (the content pointed to by the edx pointer) to the string “KBLU”. The next instruction does a “jnz loc_FFF4035E” which means that if the comparison result is NOT ZERO (so, if they are not equal) we jump to loc_FFF4035E.
&lt;p&gt;Instead of continuing sequentially, I will see what that loc_FFF4035E contains (of course, I did the same thing in all the previous jumps, and had to decide if I wanted to continue reverse engineering the jump or the next instruction, in this case, it seems better for me to jump, you’ll see why soon). The loc_FFF4035E label contains the following instruction: “mov, eax, 80000002h”, which means it stores the value 0x80000002 into the eax register, and then it jumps to (not really, it just naturally flows to the next instruction which happens to be the label) locret_FFF40363, which is just a “retn”. This makes our code into this:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
uint32_t validate_upd_config (uint8_t action, void *config) {
  // eax = 0
  if (action == 3) {
    if (config == NULL)
       return 0; 
    if (((uint32_t *)config)[0] != 0x554C524B)
       return 0x80000002;
  } else {
    // loc_FFF40344
  }
}
&lt;/pre&gt;
&lt;br/&gt;The observant here will notice that I’ve changed the function prototype to return a uint32_t instead of “void” and my previous “return” has become “return 0” and the new code has a “return 0x80000002”. That’s because I realized at this point that the “eax” register is used to return a uint32_t value. And since the first instruction was “xor eax, eax”, and we kept in the back of our mind that “eax is initialized to 0”, it means that the use case with the (config == NULL) will return 0. That’s why I made all these changes…
&lt;p&gt;Very well, let’s go back to where we were, since we’ve exhausted this jump, we’ll jump back in reverse to go back to the address FFF40322 and continue from there to the next instruction. It’s a “cmp dword ptr [edx+4], 4D5F4450h”, which compares the dword at edx+4 to 0x4D5F4450, which I know to be the ASCII for “PD_M”; this means that the last 3 instructions are used to compare the first 8 bytes of our pointer to “KBLUPD_M”… ohhh, light bulb above our heads, it’s comparing the pointer to the Signature of the FSPM_UPD structure (don’t forget, you weren’t supposed to know that the function is called validate_upd_config, or that the argument is a config pointer… just that it’s a pointer)! OK, now it makes sense, and while we’re at it—and since we are, of course, reading the FSP integration guide PDF, we then also realize what the 0x80000002 actually means. At this point, our code now becomes:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
EFI_STATUS validate_upd_config (uint8_t action, void *config) {
  if (action == 3) {
    FSPM_UPD *upd = (FSPM_UPD *) config;
    if (upd == NULL)
       return EFI_SUCCESS; 
    if (upd-&amp;amp;gt;FspUpdHeader.Signature != 0x4D5F4450554C524B /* 'KBLUPD_M'*/)
       return EFI_INVALID_PARAMETERS;
  } else {
    // loc_FFF40344
  }
}
&lt;/pre&gt;
&lt;br/&gt;Yay, this is starting to look like something… Now you probably got the hang of it, so let’s do things a little faster now.
&lt;ul&gt;&lt;li&gt;The next line “cmp [edx+28h], eax” compares edx+0x28 to eax. Thankfully, we know now that edx points to the FSPM_UPD structure, and we can calculate that at offset 0x28 inside that structure, it’s the field StackBase within the FspmArchUpd field…&lt;/li&gt;
&lt;li&gt;and also, we still have in the back of our minds that ‘eax’ is initialized to zero, so, we know that the next 2 instructions are just checking if upd-&amp;gt;FspmArchUpd.StackBase is == NULL.&lt;/li&gt;
&lt;li&gt;Then we compare the StackSize with 0x26000, but the comparison is using “jb” for the jump, which is “jump if below”, so it checks if StackSize &amp;lt; 0x26000,&lt;/li&gt;
&lt;li&gt;finally it does a “test” with “edx+30h” (which is the BootloaderTolumSize field) and 0xFFF, then it does an unconditional jump to loc_FFF4035C, which itself does a “jz” to the return..&lt;/li&gt;
&lt;li&gt;which means if (BootloaderTolumSize  &amp;amp; 0xFFF  == 0) it will return whatever EAX contained (which is zero),&lt;/li&gt;
&lt;li&gt;but if it doesn’t, then it will continue to the next instruction which is the “mov eax, 80000002h”.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So, we end up with this code:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
EFI_STATUS validate_upd_config (uint8_t action, void *config) {
  // eax = 0
  if (action == 3) {
    FSPM_UPD *upd = (FSPM_UPD *) config;
    if (upd == NULL)
       return 0;
    if (upd-&amp;amp;gt;FspUpdHeader.Signature != 0x4D5F4450554C524B /* 'KBLUPD_M'*/)
       return EFI_INVALID_PARAMETERS;
    if (upd-&amp;amp;gt;FspmArchUpd.StackBase == NULL)
        return EFI_INVALID_PARAMETERS;
    if (upd-&amp;amp;gt;FspmArchUpd.StackSize &amp;amp;lt; 0x2600)
        return EFI_INVALID_PARAMETERS;
    if (upd-&amp;amp;gt;FspmArchUpd.BootloaderTolumSize &amp;amp;amp; 0xFFF)
        return EFI_INVALID_PARAMETERS;
  } else {
    // loc_FFF40344
  }
  return EFI_SUCCESS
}
&lt;/pre&gt;
&lt;br/&gt;Great, we just solved half of our code! Don’t forget, we jumped one way instead of another at the start of the function, now we need to go back up and explore the second branch of the code (at offset 0xFFF40344). The code is very similar, but it checks for “KBLUPD_S” Signature, and nothing else. Now we can also remove any comment/notes we have (such as the note that eax is initialized to 0) and clean up, and simplify the code if there is a need.
&lt;p&gt;So our function ends up being (this is the final version of the function):&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
EFI_STATUS validate_upd_config (uint8_t action, void *config) {
  if (action == 3) {
    FSPM_UPD *upd = (FSPM_UPD *) config;
    if (upd == NULL)
       return EFI_SUCCESS;
    if (upd-&amp;amp;gt;FspUpdHeader.Signature != 0x4D5F4450554C524B /* 'KBLUPD_M'*/)
       return EFI_INVALID_PARAMETERS;
    if (upd-&amp;amp;gt;FspmArchUpd.StackBase == NULL)
        return EFI_INVALID_PARAMETERS;
    if (upd-&amp;amp;gt;FspmArchUpd.StackSize &amp;amp;lt; 0x2600)
        return EFI_INVALID_PARAMETERS;
    if (upd-&amp;amp;gt;FspmArchUpd.BootloaderTolumSize &amp;amp;amp; 0xFFF)
        return EFI_INVALID_PARAMETERS;
  } else {
    FSPS_UPD *upd = (FSPS_UPD *) config;
    if (upd == NULL)
        return EFI_SUCCESS;
    if (upd-&amp;amp;gt;FspUpdHeader.Signature != 0x535F4450554C524B /* 'KBLUPD_S'*/)
        return EFI_INVALID_PARAMETERS;
  }
  return EFI_SUCCESS
}
&lt;/pre&gt;
&lt;br/&gt;Now this wasn’t so bad, was it? I mean, it’s time consuming, sure, it can be a little disorienting if you’re not used to it, and you have to keep track of which branches (which blocks in the layout view) you’ve already gone through, etc. but the function turned out to be quite small and simple. After all, it was mostly only doing CMP/TEST and JZ/JNZ.
&lt;p&gt;That’s pretty much all I do when I do my reverse engineering, I go line by line, I understand what it does, I try to figure out how it fits into the bigger picture, I write equivalent C code to keep track of what I’m doing and to be able to understand what happens, so that I can later figure out what the function does exactly… Now try to imagine doing that for hundreds of functions, some of them that look like this (random function taken from the FSPM module):&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-44230&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/long_function.png&quot; alt=&quot;&quot; width=&quot;1147&quot; height=&quot;770&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can see on the right, the graph overview which shows the entirety of the function layout diagram. The part on the left (the assembly) is represented by the dotted square on the graph overview (near the middle). You will notice some arrows that are thicker than the others, that’s used in IDA to represent loops. On the left side, you can notice one such thick green line coming from the bottom and the arrow pointing to a block inside our view. This means that there’s a jump condition below that can jump back to a block that is above the current block and this is basically how you do a for/while loop with assembly, it’s just a normal jump that points backwards instead of forwards.&lt;/p&gt;

&lt;p&gt;At the beginning of this post, I mentioned a challenging function to reverse engineer. It’s not extremely challenging—it’s complex enough that you can understand the kind of things I have to deal with sometimes, but it’s simple enough that anyone who was able to follow up until now should be able to understand it (and maybe even be able to reverse engineer it on their own).&lt;/p&gt;
&lt;p&gt;So, without further ado, here’s this very simple function:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-43921&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/sub_fff4023f.png&quot; alt=&quot;&quot; width=&quot;417&quot; height=&quot;172&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Since I’m a very nice person, I renamed the function so you won’t know what it does, and I removed my comments so it’s as virgin as it was when I first saw it. Try to reverse engineer it. Take your time, I’ll wait:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-44375&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/sloth.jpg&quot; alt=&quot;&quot; width=&quot;1000&quot; height=&quot;750&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Alright, so, the first instruction is a “call $+5”, what does that even mean?&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;When I looked at the hex dump, the instruction was simply “E8 00 00 00 00” which according to our previous &lt;a href=&quot;http://x86.renejeschke.de/html/file_module_x86_id_26.html&quot;&gt;CALL opcode table&lt;/a&gt; means “Call near, relative, displacement relative to next instruction”, so it wants to call the instruction 0 bytes from the next instruction. Since the call opcode itself is taking 5 bytes, that means it’s doing a call to its own function but skipping the call itself, so it’s basically jumping to the “pop eax”, right? Yes…  but it’s not actually jumping to it, it’s “calling it”, which means that it just pushed into the stack the return address of the function… which means that our stack contains the address 0xFFF40244 and our next instruction to be executed is the one at the address 0xFFF40244. That’s because, if you remember, when we do a “ret”, it will pop the return address from the stack into the EIP (instruction pointer) register, that’s how it knows where to go back when the function finishes.&lt;/li&gt;
&lt;li&gt;So, then the instruction does a “pop eax” which will pop that return address into EAX, thus removing it from the stack and making the call above into a regular jump (since there is no return address in the stack anymore).&lt;/li&gt;
&lt;li&gt;Then it does a “sub eax, 0FFF40244h”, which means it’s substracting 0xFFF40244 from eax (which should contain 0xFFF40244), so eax now contains the value “0”, right? You bet!&lt;/li&gt;
&lt;li&gt;Then it adds to eax, the value “0xFFF4023F”, which is the address of our function itself. So, eax now contains the value 0xFFF4023F.&lt;/li&gt;
&lt;li&gt;It will then substract from EAX, the value pointed to by [eax-15], which means the dword (4 bytes) value at the offset 0xFFF4023F – 0xF, so the value at 0xFFF40230, right… that value is 0x1AB (yep, I know, you didn’t have this information)… so, 0xFFF4023F – 0x1AB = 0xFFF40094!&lt;/li&gt;
&lt;li&gt;And then the function returns.. with the value 0xFFF40094 in EAX, so it returns 0xFFF40094, which happens to be the pointer to the FSP_INFO_HEADER structure in the binary.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;So, the function just returns 0xFFF40094, but why did it do it in such a convoluted way? The reason is simple: because the FSP-S code is technically meant to be loaded in RAM at the address 0xFFF40000, but it can actually reside anywhere in the RAM when it gets executed. Coreboot for example doesn’t load it in the right memory address when it executes it, so instead of returning the wrong address for the structure and crashing (remember, most of the jumps and calls use relative addresses, so the code should work regardless of where you put it in memory, but in this case returning the wrong address for a structure in memory wouldn’t work), the code tries to dynamically verify if it has been relocated and if it is, it will calculate how far away it is from where it’s supposed to be, and calculate where in memory the FSP_INFO_HEADER structure ended up being.&lt;/p&gt;
&lt;p&gt;Here’s the explanation why:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the FSP was loaded into a different memory address, then the “call $+5” would put the exact memory address of the next instruction into the stack, so when you pop it into eax then substract from it the expected address 0xFFF40244, this means that eax will contain the &lt;strong&gt;offset&lt;/strong&gt; from where it was supposed to be.&lt;/li&gt;
&lt;li&gt;Above, we said eax would be equal to zero, yes, that’s true, but &lt;em&gt;only&lt;/em&gt; in the usecase where the FSP is in the right memory address, as expected, otherwise, eax would simply contain the offset. Then you add to it 0xFFFF4023F which is the address of our function, and with the offset, that means eax now contains the exact memory address of the current function, wherever it was actually placed in RAM!&lt;/li&gt;
&lt;li&gt;Then when it grabs the value 0x1AB (because that value is stored in RAM 15 bytes before the start of the function, that will work just fine) and substracts it from our current position, it gives us the address in RAM of the FSP_INFO_HEADER (because the compiler knows that the structure is located exactly 0x1AB bytes before the current function). This just makes everything be relative.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Isn’t that great!? 😉 It’s so simple, but it does require some thinking to figure out what it does and some thinking to understand why it does it that way… but then you end up with the problem of “How do I write this in C”? Honestly, I don’t know how, I just wrote this in my C file:&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
// Use Position-independent code to make this relocatable
void *get_fsp_info_header() {
    return 0xFFF40094; 
}
&lt;/pre&gt;
&lt;br/&gt;I think the compiler takes care of doing all that magic on its own when you use the -fPIC compiler option (for gcc), which means “Position-Independent Code”.

&lt;p&gt;On my side, &lt;strong&gt;I’ve finished reverse engineering the FSP-S entry code&lt;/strong&gt;—from the entry point (FspSiliconInit) all the way to the end of the function and all the subfunctions that it calls.&lt;/p&gt;
&lt;p&gt;This only represents 9 functions however, and about 115 lines of C code; I haven’t yet fully figured out where exactly it’s going in order to execute the rest of the code. What happens is that the last function it calls (it actually jumps into it) grabs a variable from some area in memory, and within that variable, it will copy a value into the ESP, thus replacing our stack pointer, and then it does a “RETN”… which means that it’s not actually returning to the function that called it (coreboot), it’s returning… “somewhere”, depending on what the new stack contains, but I don’t know where (or how) this new stack is created, so I need to track it down in order to find what the return address is, find where the “retn” is returning us into, so I can unlock plenty of new functions and continue reverse engineering this.&lt;/p&gt;
&lt;p&gt;I’ve already made some progress on that front (I know where the new stack tells us to return into) but you will have to wait until my next blog post before I can explain it all to you. It’s long and complicated enough that it needs its own post, and this one is long enough already.&lt;/p&gt;

&lt;p&gt;You never really know what to expect when you start reverse engineering assembly. Here are some other stories from my past experiences.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I once spent a few days reverse engineering a function until about 30% of it when I finally realized that the function was… the C++ “+ operator” of the std::string class (which by the way, with the use of C++ templates made it excruciatingly hard to understand)!&lt;/li&gt;
&lt;li&gt;I once had to reverse engineer over 5000 lines of assembly code that all resolved into… 7 lines of C code. The code was for creating a hash and it was doing a lot of manipulation on data with different values on every iteration. There was a LOT of xor, or, and, shifting left and right of data, etc., which took maybe a hundred or so lines of assembly and it was all inside a loop, which the compiler decided that—to optimize it—it would unravel the loop (this means that instead of doing a jmp, it will just copy-paste the same code again), so instead of having to reverse engineer the code once and then see that it’s a loop that runs 64 times, I had to reverse engineer the same code 64 times because it was basically getting copy-pasted by the compiler in a single block but the compiler was “nice” enough that it was using completely different registers for every repetition of the loop, and the data was getting shifted in a weird way and using different constants and different variables at every iteration, and—as if that wasn’t enough— every 1/4th of the loop, changing the algorithm and making it very difficult to predict the pattern, forcing me to completely reverse engineer the 5000+ assembly lines into C, then slowly refactor and optimize the C code until it became that loop with 7 lines of code inside it… If you’re curious you can see the code &lt;a href=&quot;https://github.com/tomhennigan/amsn/blob/master/amsn/utils/webcamsn/src/kidhash.c#L39&quot;&gt;here&lt;/a&gt; at line 39, where there is some operation common to all iterations, then 4 different operations depending on which iteration we are doing, and the variables used for each operation changes after each iteration (P, PP, PPP and PPPP get swapped every time), and the constant values and the indices used are different for each iteration as well (see &lt;a href=&quot;https://github.com/tomhennigan/amsn/blob/master/amsn/utils/webcamsn/src/constants.h&quot;&gt;constants.h&lt;/a&gt;). It was complicated and took a long while to reverse engineer.&lt;/li&gt;
&lt;li&gt;Below is the calling graph of the PS3 firmware I worked on some years ago. All of these functions have been entirely reverse engineered (each black rectangle is actually an entire function, and the arrows show which function calls which other function), and the result was the &lt;a href=&quot;https://github.com/kakaroto/ps3xport&quot;&gt;ps3xport&lt;/a&gt; tool. As you can see, sometimes a function can be challenging to reverse, and sometimes a single function can call so many nested functions that it can get pretty complicated to keep track of what is doing what and how everything fits together. That function at the top of the graph was probably very simple, but it brought with it so much complexity because of a single “call”:&lt;br/&gt;&lt;a href=&quot;https://puri.sm/wp-content/uploads/2017/11/wingraph.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-43928 size-large&quot; src=&quot;https://puri.sm/wp-content/uploads/2017/11/wingraph-1024x382.png&quot; alt=&quot;&quot; width=&quot;960&quot; height=&quot;358&quot;/&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In conclusion:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reverse engineering isn’t just about learning a new language, it’s a very different experience from “learning Java/Python/Rust after you’ve mastered C”, because of the way it works; it can sometimes be very easy and boring, sometimes it will be very challenging for a very simple piece of code.&lt;/li&gt;
&lt;li&gt;It’s all about perseverance, being very careful (it’s easy to get lost or make a mistake, and very hard to track down and fix a mistake/typo if you make one), and being &lt;em&gt;very&lt;/em&gt; patient. We’re talking days, weeks, &lt;em&gt;months.&lt;/em&gt; That’s why reverse engineering is something that very few people do (compared to the number of people who do general software development). Remember also that our first example was 82 bytes of code, and the second one was only 19 bytes long, and most of the time, when you need to reverse engineer something, it’s many hundreds of KBs of code.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;All that being said, the satisfaction you get when you finish reverse engineering some piece of code, when you &lt;em&gt;finally&lt;/em&gt; understand how it works and can reproduce its functionality with open source software of your own, cannot be described with words. The feeling of achievement that you get makes all the efforts worth it!&lt;/p&gt;
&lt;p&gt;I hope this write-up helps everyone get a fresh perspective on what it means to “reverse engineer the code”, why it takes so long, and why it’s rare to find someone with the skills, experience and patience to do this kind of stuff for months—as it can be frustrating, and we sometimes need to take a break from it and do something else in order to renew our brain cells.&lt;/p&gt;
</description>
<pubDate>Tue, 09 Jan 2018 10:16:16 +0000</pubDate>
<dc:creator>seiflotfy</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://kakaroto.homelinux.net/2017/11/introduction-to-reverse-engineering-and-assembly/</dc:identifier>
</item>
</channel>
</rss>