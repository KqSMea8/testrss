<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>&quot;@&quot; on Twitter</title>
<link>https://twitter.com/intent/user?user_id=71996998</link>
<guid isPermaLink="true" >https://twitter.com/intent/user?user_id=71996998</guid>
<description>&lt;p&gt;I can't sign in to the account on Twitter for Android. I get an error message when try to look at replies to my own tweets on Chrome for iOS. I CAN see replies on Chrome for Android. I can't RT or RT with comment on any set up, but I can see from my notifications that some can.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Apr 2018 18:02:55 +0000</pubDate>
<dc:creator>isp</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://twitter.com/intent/user?user_id=71996998</dc:identifier>
</item>
<item>
<title>Tesla&amp;#039;s Simultaneous Brilliance and Incompetence Revealed in Teardown of Model 3</title>
<link>https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3</link>
<guid isPermaLink="true" >https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3&quot;&gt;https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16942149&quot;&gt;https://news.ycombinator.com/item?id=16942149&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 207&lt;/p&gt;&lt;p&gt;# Comments: 158&lt;/p&gt;</description>
<pubDate>Fri, 27 Apr 2018 16:39:39 +0000</pubDate>
<dc:creator>Maro</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.forbes.com/forbes/welcome/?toURL=https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/&amp;refURL=http://www.google.co.uk/url?sa=t&amp;source=web&amp;cd=1&amp;referrer=http://www.google.co.uk/url?sa=t&amp;source=web&amp;cd=1</dc:identifier>
</item>
<item>
<title>Credit card fraud warning signs</title>
<link>http://www.candyjapan.com/fraudulent-transaction-warning-signs</link>
<guid isPermaLink="true" >http://www.candyjapan.com/fraudulent-transaction-warning-signs</guid>
<description>&lt;p&gt;I run a site called &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;Candy Japan&lt;/a&gt;, which ships boxes of Japanese surprise candies to subscribers around the world, twice a month.&lt;/p&gt;
&lt;p&gt;At one point I was thrilled when I was suddenly seeing a lot of new orders coming in. But then, weeks later, I noticed a problem. A lot of these new orders turned out to be fake. Dealing with the chargebacks, I started wondering how I might have noticed such orders before accepting them.&lt;/p&gt;
&lt;p&gt;I've written before about &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/candy-japan-hit-with-credit-card-fraud&quot;&gt;getting hit by credit card fraud&lt;/a&gt; and &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/how-i-got-credit-card-fraud-somewhat-under-control&quot;&gt;how to make your store less attractive for fraudsters&lt;/a&gt;. In this post I'll share some of the warning signs I've learned to pay attention to. These merely signal you to pay particularly close attention to an order – there can also be real orders that match some of these.&lt;/p&gt;
&lt;h2&gt;Address is in the US... or is it?&lt;/h2&gt;
&lt;p&gt;Some countries will have more fraudulent orders originating from them than others. Fraudsters also know that their country can raise suspicion, so sometimes they will enter their address otherwise correctly, but just change the country to &quot;United States&quot;.&lt;/p&gt;
&lt;p&gt;If you just casually browse your new orders, you might not notice this and accidentally ship the order. Later on when the post attempts to deliver it, they will at some point realize that the country is wrong and reroute it to the correct country -&amp;gt; fraudster gets their package.&lt;/p&gt;
&lt;h2&gt;Address is nonsensical&lt;/h2&gt;
&lt;p&gt;Sometimes addresses just make no sense. For example the street address isn't within the ZIP code provided, or the address has huge parts of it missing. For example something along the lines of &quot;Maple Street, 10001 New York&quot;.&lt;/p&gt;
&lt;p&gt;In these cases the purpose of the order might not be to actually get the package, but rather just to check whether a stolen credit card number works or not.&lt;/p&gt;
&lt;h2&gt;Using reshipping centers&lt;/h2&gt;
&lt;p&gt;One time I received an order with other warning signs, but that had a valid US shipping address. I decided to look it up on street view.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Shipping trucks parked outside a reshipping center&quot; src=&quot;https://www.candyjapan.com/static/trucks.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There were shipping trucks parked outside. Googling the address revealed this to be a reshipping center – a company that accepts packages inside the US and then ships them forward to other countries. There are perfectly valid reasons to use these companies, I've used them myself. For example you might have moved abroad, but still want to have an address in your home country.&lt;/p&gt;
&lt;p&gt;Another reason would be that you might want to place an order with a store that doesn't do international shipping. However I do have international shipping, so there should be no reason to use a reshipping center. Unless of course you are trying to hide your actual location, which is a big warning sign. Nowadays I look up any suspicious order on street view, just to see if it might be a reshipping center.&lt;/p&gt;
&lt;h2&gt;Using throwaway email addresses&lt;/h2&gt;
&lt;p&gt;There are sites that offer disposable email addresses. You get limitless instant inboxes for any names you want, and can check them without having to register separately for each. Again there are good reasons to use these, for example for avoiding spam when you have to provide an email address for a site that demands it, but that you don't want to have your real email address.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mailinator.com&quot;&gt;&lt;img alt=&quot;Mailinator landing page&quot; src=&quot;https://www.candyjapan.com/static/mailinator.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Still I have found that if an order originates from one of these, it usually has other warning signs as well.&lt;/p&gt;
&lt;h2&gt;Using an inconsistent and unlikely email address&lt;/h2&gt;
&lt;p&gt;By &quot;inconsistent&quot; I mean that the first and last name implied by the email address does not match the name in the shipping address. By &quot;unlikely&quot; I mean one that no reasonable person would want to have, usually containing a big batch of numbers in it. An example that would be both inconsistent and unlikely would be john.smith.938924@gmail.com even while the name in the shipping address contains a totally different name.&lt;/p&gt;
&lt;p&gt;Again not a sure sign, but this tends to be a feature of fraudulent orders. Often you just can't be quite sure and have to make a judgement call. One time when I tried googling for an address, I found that the person was also active on a forum for trading stolen credit card details. That was a bad sign. More often I will find a legit-looking personal blog which mentions their email address, that's great sign that it's a trustworthy subscriber.&lt;/p&gt;
&lt;h2&gt;Thanks for reading&lt;/h2&gt;
&lt;p&gt;Two bonus signs for the end. You can use a Geo IP database to check if the shipping address country differs from the IP address country. That's a weak sign (people do place orders while traveling, or to friends in other countries), but can break the tie if there is another suspicion. Another one is seeing if the order happened during a batch of other fraudulent orders. If you suddenly get 6 orders and 5 of them are fraud, and 1 you're not sure about, it's more likely to be fraudulent as well.&lt;/p&gt;
&lt;p&gt;Thanks for reading. If you would like to try some candy yourself, you can &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;sign up here&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Apr 2018 16:38:24 +0000</pubDate>
<dc:creator>hamstercat</dc:creator>
<og:title>Credit card fraud warning signs</og:title>
<og:description>Avoid accepting fraudulent credit card orders by paying attention to these warning signs.</og:description>
<og:url>https://www.candyjapan.com/behind-the-scenes/fraudulent-transaction-warning-signs</og:url>
<og:type>article</og:type>
<og:image>https://www.candyjapan.com/static/credit-card-fraud_s.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.candyjapan.com/behind-the-scenes/fraudulent-transaction-warning-signs</dc:identifier>
</item>
<item>
<title>NPR Retracts Story &amp;#039;The Man Who Spent $100K To Remove A Lie From Google&amp;#039;</title>
<link>https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</link>
<guid isPermaLink="true" >https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</guid>
<description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Editor's note on April 11, 2018:&lt;/strong&gt;&lt;/em&gt; NPR has retracted the story that was previously on this page because it did not meet our standards. &quot;Fairness&quot; is one of our guiding principles, and to that end &lt;a href=&quot;http://ethics.npr.org/category/b-fairness/&quot;&gt;we have pledged&lt;/a&gt; to &quot;make every effort to gather responses from those who are the subjects of criticism.&quot; In this instance, that did not happen. The story referred to one individual as the &quot;author&quot; of a website that another person said had posted defamatory information about him. It also described the author's motivation as vindictive. But NPR did not contact the alleged author. Upon review, NPR cannot say for certain who the author or authors were or what their motivation was. In fact, in court proceedings, the people listed as &quot;staff editors&quot; of the site were identified only by initials, and we have not been able to establish their identities. In addition, our account made it sound as if the website targeted a single individual. In fact, the website included information and commentary about at least 12 other people. The reporting mistakes substantially undercut the story. We will continue to report about the issue of privacy in the digital age. As we do, we will work hard to make sure the reports live up to our promise to produce content that meets &quot;the highest standards of public service in journalism.&quot;&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;</description>
<pubDate>Fri, 27 Apr 2018 16:17:36 +0000</pubDate>
<dc:creator>jessaustin</dc:creator>
<og:title>NPR: Story 'The Man Who Spent $100K To Remove A Lie From Google' Has Been Retracted</og:title>
<og:url>https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</og:url>
<og:type>article</og:type>
<og:description>NPR has retracted the story because it did not meet our standards.</og:description>
<og:image>https://media.npr.org/include/images/facebook-default-wide.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</dc:identifier>
</item>
<item>
<title>EU agrees on total ban of bee-harming pesticides</title>
<link>https://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</link>
<guid isPermaLink="true" >https://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</guid>
<description>&lt;p&gt;The European Union will ban the world’s most widely used insecticides from all fields due to the serious danger they pose to bees.&lt;/p&gt;
&lt;p&gt;The ban on neonicotinoids, approved by member nations on Friday, is expected to come into force by the end of 2018 and will mean they can only be used in closed greenhouses.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/environment/bees&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Bees&lt;/a&gt; and other insects are vital for global food production as they pollinate three-quarters of all crops. The plummeting numbers of pollinators in recent years has been blamed, in part, on the widespread use of pesticides. The EU banned the use of neonicotinoids on flowering crops that attract bees, such as oil seed rape, in 2013.&lt;/p&gt;
&lt;p&gt;But in February, a &lt;a href=&quot;https://www.theguardian.com/environment/2018/feb/28/total-ban-on-bee-harming-pesticides-likely-after-major-new-eu-analysis&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;major report from the European Union’s scientific risk assessors&lt;/a&gt; (Efsa) concluded that the high risk to both honeybees and wild bees resulted from any outdoor use, because the pesticides contaminate soil and water. This leads to the pesticides appearing in wildflowers or succeeding crops. A recent study of &lt;a href=&quot;https://www.theguardian.com/environment/2017/oct/05/honey-tests-reveal-global-contamination-by-bee-harming-pesticides&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;honey samples revealed global contamination by neonicotinoids&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vytenis Andriukaitis, European commissioner for Health and Food Safety, welcomed Friday’s vote: “The commission had proposed these measures months ago, on the basis of the scientific advice from Efsa. Bee health remains of paramount importance for me since it concerns biodiversity, food production and the environment.”&lt;/p&gt;
&lt;p&gt;The ban on the three main neonicotinoids has widespread public support, with almost 5 million people signing a &lt;a href=&quot;https://secure.avaaz.org/campaign/en/save_the_bees_neonics_loc_ns&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;petition from campaign group Avaaz&lt;/a&gt;. “Banning these toxic pesticides is a beacon of hope for bees,” said Antonia Staats at Avaaz. “Finally, our governments are listening to their citizens, the scientific evidence and farmers who know that bees can’t live with these chemicals and we can’t live without bees.”&lt;/p&gt;
&lt;p&gt;Martin Dermine, at Pesticide Action Network &lt;a href=&quot;https://www.theguardian.com/world/europe-news&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Europe&lt;/a&gt;, said: “Authorising neonicotinoids a quarter of a century ago was a mistake and led to an environmental disaster. Today’s vote is historic.”&lt;/p&gt;
&lt;p&gt;However, the pesticide manufacturers and some farming groups have accused the EU of being overly cautious and suggested crop yields could fall, a &lt;a href=&quot;https://www.theguardian.com/environment/2017/apr/06/farms-could-slash-pesticide-use-without-losses-research-reveals&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;claim rejected by others&lt;/a&gt;. “European agriculture will suffer as a result of this decision,” said Graeme Taylor, at the European Crop Protection Association. “Perhaps not today, perhaps not tomorrow, but in time decision makers will see the clear impact of removing a vital tool for farmers.”&lt;/p&gt;
&lt;p&gt;The UK’s National Farmers’ Union (NFU) said the ban was regrettable and not justified by the evidence. Guy Smith, NFU deputy president, said: “The pest problems that neonicotinoids helped farmers tackle have not gone away. There is a real risk that these restrictions will do nothing measurable to improve bee health, while compromising the effectiveness of crop protection.”&lt;/p&gt;
&lt;p&gt;A spokesman for the UK Department of Environment, Food and Rural Affairs welcomed the ban, but added: “We recognise the impact a ban will have on farmers and will continue to work with them to explore alternative approaches.” In November, UK environment secretary &lt;a draggable=&quot;true&quot; href=&quot;https://www.theguardian.com/environment/2017/nov/09/uk-will-back-total-ban-on-bee-harming-pesticides-michael-gove-reveals&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Michael Gove overturned the UK’s previous opposition&lt;/a&gt; to a full outdoor ban.&lt;/p&gt;
&lt;p&gt;Neonicotinoids, which are nerve agents, have been shown &lt;a href=&quot;https://www.theguardian.com/environment/2012/mar/29/crop-pesticides-honeybee-decline&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;to cause a wide range of harm to individual bees&lt;/a&gt;, such as damaging memory and reducing queen numbers.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-1 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;But this evidence has strengthened recently to show &lt;a href=&quot;https://www.theguardian.com/environment/2017/jun/29/pesticides-damage-survival-of-bee-colonies-landmark-study-shows&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;damage to colonies of bees&lt;/a&gt;. Other research has also revealed that &lt;a href=&quot;https://www.theguardian.com/environment/2017/oct/18/warning-of-ecological-armageddon-after-dramatic-plunge-in-insect-numbers&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;75% of all flying insects have disappeared&lt;/a&gt; in Germany and probably much further afield, prompting warnings of “ecological armageddon”.&lt;/p&gt;
&lt;p&gt;Prof Dave Goulson, at the University of Sussex, said the EU ban was logical given the weight of evidence but that disease and lack of flowery habitats were also harming bees. “Also, if these neonicotinoids are simply replaced by other similar compounds, then we will simply be going round in circles. What is needed is a move towards truly sustainable farming,” he said.&lt;/p&gt;
&lt;p&gt;Some experts are worried that the exemption for greenhouses means neonicotinoids will be washed out into water courses, where &lt;a href=&quot;https://www.theguardian.com/environment/2013/may/01/study-links-insecticide-invertebrate-die-off&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;they can severely harm aquatic life&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Prof Jeroen van der Sluijs, at the University of Bergen, Norway, said neonicotinoids will also continue to be used in flea treatments for pets and in stables and animal transport vehicles, which account for about a third of all uses: “Environmental pollution will continue.”&lt;/p&gt;
&lt;p&gt;The EU decision could have global ramifications, according to Prof Nigel Raine, at the University of Guelph in Canada: “Policy makers in other jurisdictions will be paying close attention to these decisions. We rely on both farmers and pollinators for the food we eat. Pesticide regulation is a balancing act between unintended consequences of their use for non-target organisms, including pollinators, and giving farmers the tools they need to control crop pests.”&lt;/p&gt;


</description>
<pubDate>Fri, 27 Apr 2018 10:07:32 +0000</pubDate>
<dc:creator>YeGoblynQueenne</dc:creator>
<og:url>http://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</og:url>
<og:description>The world’s most widely used insecticides will be banned from all fields within six months, to protect both wild and honeybees that are vital to crop pollination</og:description>
<og:image>https://i.guim.co.uk/img/media/0b34271cbf2342fe18e93372f64e6ed1b019dec8/0_37_6720_4032/master/6720.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxOC8wMS8zMS9mYWNlYm9va19kZWZhdWx0LnBuZw&amp;s=58cb5cc794b5248b9fcba957db972f9d</og:image>
<og:type>article</og:type>
<og:title>EU agrees total ban on bee-harming pesticides</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</dc:identifier>
</item>
<item>
<title>Two Koreas Agree to End War This Year, Pursue Denuclearization</title>
<link>https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</guid>
<description>&lt;p&gt;North Korean leader Kim Jong Un and South Korean President Moon Jae-in agreed Friday to finally end a seven-decade war this year, and pursue the “complete denuclearization” of the Korean Peninsula.&lt;/p&gt;


&lt;p&gt;U.S. President Donald Trump hailed the move, declaring “KOREAN WAR TO END!” on Twitter. He’s agreed to meet with Kim at a time and place yet to be determined.&lt;/p&gt;


&lt;div class=&quot;thirdparty-embed&quot;&gt;
&lt;div class=&quot;thirdparty-embed__container&quot; readability=&quot;6.9134078212291&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot; data-conversation=&quot;none&quot; readability=&quot;7.3743016759777&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;KOREAN WAR TO END! The United States, and all of its GREAT people, should be very proud of what is now taking place in Korea!&lt;/p&gt;
— Donald J. Trump (@realDonaldTrump) &lt;a href=&quot;https://twitter.com/realDonaldTrump/status/989820401596366849?ref_src=twsrc%5Etfw&quot;&gt;April 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Kim and Moon embraced after signing the deal during a &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/politics/articles/2018-04-26/kim-jong-un-set-to-make-history-with-short-walk-into-south-korea&quot; title=&quot;Kim Urges Frequent Talks After Declaring Korean ‘Era of Peace’&quot; target=&quot;_blank&quot;&gt;historic meeting&lt;/a&gt; on their militarized border, the first time a North Korean leader set foot on the southern side. They announced plans to replace the 1953 armistice that ended hostilities with a peace treaty by year’s end.&lt;/p&gt;


&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-327137920&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iIkcM6wCXudk/v0/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iIkcM6wCXudk/v0/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;photo&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;news-figure-caption-text caption&quot; readability=&quot;35&quot;&gt;
&lt;p&gt;Kim Jong Un, left, and Moon Jae-in, hold hands as they cross the Military Demarcation Line in Paju.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Source: Inter-Korean Summit Press Corps/Pool via Bloomberg&lt;/p&gt;

&lt;p&gt;Their statement on a “common goal of realizing, through complete denuclearization, a nuclear-free Korean Peninsula,” stopped short of the “complete, verifiable and irreversible denuclearnization” long sought by the U.S. and its allies. The statement didn’t elaborate on what the term meant and Kim didn’t personally utter the word during remarks Friday.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://www.bloomberg.com/news/photo-essays/2018-04-27/kim-jong-un-meets-moon-jae-in-in-pictures&quot; itemprop=&quot;StoryLink&quot; itemscope=&quot;itemscope&quot; target=&quot;_blank&quot;&gt;When Kim Met Moon: In Pictures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“We have agreed to share a firm determination to open a new era in which all Korean people enjoy prosperity and happiness on a peaceful land without war,” Kim told reporters, without taking questions.&lt;/p&gt;
&lt;p&gt;The agreement follows a rapid thaw in tensions on the peninsula after a flurry of North Korean missile tests and a hydrogen bomb detonation last year. The deal was expected to set up meeting soon between Kim and Trump soon, which would be the first summit between a North Korean leader and a sitting American president.&lt;/p&gt;
&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;Still, it was Kim’s symbolism-laden encounter with Moon -- the third summit between leaders of the nations since the Korean War and the first since 2007 -- that captivated much of the world Friday. The event marked Kim’s first live, unfiltered appearance on world television: South Koreans gathered around screens to watch Moon lead him past a military honor guard while a band played “Arirang,” an unofficial Korean anthem.&lt;/p&gt;

&lt;p&gt;Moon said their agreement to seek a peace treaty represented a “fundamental change” for the peninsula. The leaders agreed to hold military talks next month and seek a “phased disarmament,” without providing more details.&lt;/p&gt;
&lt;h3&gt;Uneasy Truce&lt;/h3&gt;
&lt;p&gt;South Korea refused to participate in talks to end the Korean War, leaving an uneasy truce between North Korea and China on one side and United Nations forces -- led by the U.S. -- on the other. Although China long ago withdrew its troops, more than 28,000 American personnel remained based in South Korea, which the Kim regime views as an enduring threat.&lt;/p&gt;

&lt;p&gt;“It all sounds good,” William Rhodes, former senior vice chairman of Citigroup Inc., told Bloomberg Television. “The question is how are you going to verify any denuclearization.”&lt;/p&gt;
&lt;p&gt;Investors saw Friday’s deal easing risks. The cost of insuring South Korea’s sovereign bonds against non-payment fell 1.75 basis points to 44.75 basis points as of 6:10 p.m. in Seoul, Barclays Plc prices showed. The credit-default swap contracts, are on track for their lowest close since March 14, according to data provider CMA.&lt;/p&gt;
&lt;p&gt;The question is whether the agreement can last longer than earlier ones by Moon’s predecessors that collapsed amid disputes over inspections, weapons tests and economic aid. North Korea, which committed to not pursuing nuclear weapons in 1992, now has an estimated 60 nuclear bombs and missiles believed capable of reaching any U.S. cities. -- a step Trump has threatened war to stop.&lt;/p&gt;
&lt;h3&gt;Kim Optimistic&lt;/h3&gt;
&lt;p&gt;The announcement was followed by a tersely worded commentary from Kim’s Korean Central News Agency decrying sanctions and calling on the U.S. to drop its “anachronistic hostile policy toward” North Korea.&lt;/p&gt;
&lt;p&gt;Any progress on dismantling the Kim’s weapons program would likely be slow and fraught, and involve visits by international inspectors. Prior efforts involving Kim’s late father when he was leader collapsed in acrimony, with North Korea blaming the U.S. for failure to adhere to the agreements.&lt;/p&gt;
&lt;p&gt;Yet at least on Friday, optimism prevailed.&lt;/p&gt;
&lt;p&gt;“There’ll be no victory without pain, no glory without frustration,” Kim said. “One day, we will remember this day with joy for overcoming challenges and hardship.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;— With assistance by Heesu Lee, Sam Kim, and Kyungji Cho&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 27 Apr 2018 09:34:06 +0000</pubDate>
<dc:creator>almost_usual</dc:creator>
<og:description>North Korean leader Kim Jong Un and South Korean President Moon Jae-in agreed Friday to finally end a seven-decade war this year, and pursue the “complete denuclearization” of the Korean Peninsula.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iTu0Qj1Gt1ow/v1/1200x734.jpg</og:image>
<og:title>Two Koreas Agree to End War This Year, Pursue Denuclearization</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</dc:identifier>
</item>
<item>
<title>Researchers have identified a new DNA structure called the i-motif inside cells</title>
<link>https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</link>
<guid isPermaLink="true" >https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</guid>
<description>&lt;div readability=&quot;35&quot;&gt;
&lt;div class=&quot;story-summary-text&quot; readability=&quot;40&quot;&gt;
&lt;p&gt;It’s DNA, but not as we know it. In a world first, Australian researchers have identified a new DNA structure – called the i-motif – inside cells. A twisted ‘knot’ of DNA, the i-motif has never before been directly seen inside living cells. The new findings, from the Garvan Institute of Medical Research, are published today in the leading journal Nature Chemistry.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div readability=&quot;37&quot;&gt;
&lt;p&gt;&lt;strong&gt;Journal/conference:&lt;/strong&gt; Nature Chemistry&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Organisation/s:&lt;/strong&gt; Garvan Institute of Medical Research, The University of New South Wales, The University of Sydney&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;169&quot;&gt;
&lt;h2&gt;Media Release&lt;/h2&gt;
&lt;strong&gt;From:&lt;/strong&gt; Garvan Institute of Medical Research
&lt;p&gt;It’s DNA, but not as we know it.&lt;/p&gt;
&lt;p&gt;In a world first, Australian researchers have identified a new DNA structure – called the i-motif – inside cells. A twisted ‘knot’ of DNA, the i-motif has never before been directly seen inside living cells.&lt;/p&gt;
&lt;p&gt;The new findings, from the Garvan Institute of Medical Research, are published today in the leading journal &lt;em&gt;Nature Chemistry.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Deep inside the cells in our body lies our DNA. The information in the DNA code – all 6 billion A, C, G and T letters – provides precise instructions for how our bodies are built, and how they work.&lt;/p&gt;
&lt;p&gt;The iconic ‘double helix’ shape of DNA has ca­ptured the public imagination since 1953, when James Watson and Francis Crick famously uncovered the structure of DNA. However, it’s now known that short stretches of DNA can exist in other shapes, in the laboratory at least – and scientists suspect that these different shapes might play an important role in how and when the DNA code is ‘read’.&lt;/p&gt;
&lt;p&gt;The new shape looks entirely different to the double-stranded DNA double helix.&lt;/p&gt;
&lt;p&gt;“When most of us think of DNA, we think of the double helix,” says Associate Professor Daniel Christ (Head, Antibody Therapeutics Lab, Garvan) who co-led the research. “This new research reminds us that totally different DNA structures exist – and could well be important for our cells.”&lt;/p&gt;
&lt;p&gt;“The i-motif is a four-stranded ‘knot’ of DNA,” says Associate Professor Marcel Dinger (Head, Kinghorn Centre for Clinical Genomics, Garvan),.who co-led the research with A/Prof Christ.&lt;/p&gt;
&lt;p&gt;“In the knot structure, C letters on the same strand of DNA bind to each other – so this is very different from a double helix, where ‘letters’ on opposite strands recognise each other, and where Cs bind to Gs [guanines].”&lt;/p&gt;
&lt;p&gt;Although researchers have seen the i-motif before and have studied it in detail, it has only been witnessed &lt;em&gt;in vitro&lt;/em&gt; – that is, under artificial conditions in the laboratory, and not inside cells.&lt;/p&gt;
&lt;p&gt;In fact, scientists in the field have debated whether i-motif ‘knots’ would exist at all inside living things – a question that is resolved by the new findings.&lt;/p&gt;
&lt;p&gt;To detect the i-motifs inside cells, the researchers developed a precise new tool – a fragment of an antibody molecule – that could specifically recognise and attach to i-motifs with a very high affinity. Until now, the lack of an antibody that is specific for i-motifs has severely hampered the understanding of their role.&lt;/p&gt;
&lt;p&gt;Crucially, the antibody fragment didn’t detect DNA in helical form, nor did it recognise ‘G-quadruplex structures’ (a structurally similar four-stranded DNA arrangement).&lt;/p&gt;
&lt;p&gt;With the new tool, researchers uncovered the location of ‘i-motifs’ in a range of human cell lines. Using fluorescence techniques to pinpoint where the i-motifs were located, they identified numerous spots of green within the nucleus, which indicate the position of i-motifs.&lt;/p&gt;
&lt;p&gt;“What excited us most is that we could see the green spots – the i-motifs – appearing and disappearing over time, so we know that they are forming, dissolving and forming again,” says Dr Mahdi Zeraati, whose research underpins the study’s findings.&lt;/p&gt;
&lt;p&gt;The researchers showed that i-motifs mostly form at a particular point in the cell’s ‘life cycle’ – the late G1 phase, when DNA is being actively ‘read’. They also showed that i-motifs appear in some promoter regions (areas of DNA that control whether genes are switched on or off) and in telomeres, ‘end sections’ of chromosomes that are important in the aging process.&lt;/p&gt;
&lt;p&gt;Dr Zeraati says, “We think the coming and going of the i-motifs is a clue to what they do. It seems likely that they are there to help switch genes on or off, and to affect whether a gene is actively read or not.”&lt;/p&gt;
&lt;p&gt;“We also think the transient nature of the i-motifs explains why they have been so very difficult to track down in cells until now,” adds A/Prof Christ.&lt;/p&gt;
&lt;p&gt;A/Prof Marcel Dinger says, “It’s exciting to uncover a whole new form of DNA in cells – and these findings will set the stage for a whole new push to understand what this new DNA shape is really for, and whether it will impact on health and disease.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;–––ENDS–––&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Featured paper: &lt;/strong&gt;Mahdi Zeraati, David B. Langley, Peter Schofield, Aaron L. Moye, Romain Rouet, William E. Hughes, Tracey M. Bryan, Marcel E. Dinger and Daniel Christ&lt;strong&gt;. I-motif DNA structures are formed in the nuclei of human cells.&lt;/strong&gt; &lt;em&gt;Nature Chemistry&lt;/em&gt; 2018 DOI: 10.1038/s41557-018-0046-3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Support: &lt;/strong&gt;This work was supported by the National Health and Medical Research Council (Australia) and the Australian Research Council.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About the Garvan Institute: &lt;/strong&gt;The Garvan Institute of Medical Research is one of Australia's largest medical research institutions and is at the forefront of next-generation genomic DNA sequencing in Australia. Garvan’s main research areas are: cancer, diabetes and metabolism, genomics and epigenetics, immunology and inflammation, osteoporosis and bone biology, and neuroscience. Garvan’s mission is to make significant contributions to medical science that will change the directions of science and medicine and have major impacts on human health. www.garvan.org.au&lt;/p&gt;

&lt;/div&gt;</description>
<pubDate>Fri, 27 Apr 2018 09:12:38 +0000</pubDate>
<dc:creator>braythwayt</dc:creator>
<og:title>Found: a new form of DNA in our cells</og:title>
<og:type>article</og:type>
<og:image>https://www.scimex.org/__data/assets/image/0005/317489/Screenshot-2018-04-19-22.50.05.png</og:image>
<og:url>https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</og:url>
<og:description>Found: a new form of DNA in our cells It’s DNA, but not as we know it. In a world first, Australian researchers have identified a new DNA structure – called the i-motif – inside cells. A twisted ‘knot’ of DNA, the i-motif has never before been directly seen insi</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</dc:identifier>
</item>
<item>
<title>Ask HN: What are some examples of beautiful x86 assembly code?</title>
<link>https://news.ycombinator.com/item?id=16938934</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=16938934</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;16939558&quot; readability=&quot;3.0944055944056&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941362&quot; readability=&quot;2.8949416342412&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942539&quot; readability=&quot;4.2753036437247&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944616&quot; readability=&quot;4.9259259259259&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.462962962963&quot;&gt;&lt;tr readability=&quot;4.9259259259259&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6944444444444&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.9245901639344&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Yes, I made the videos a few years ago. This video series is mostly for beginners as it goes pretty slowly.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The exercises are open source and can be found here: &lt;a href=&quot;https://github.com/xorpd/asm_prog_ex&quot; rel=&quot;nofollow&quot;&gt;https://github.com/xorpd/asm_prog_ex&lt;/a&gt; I think that more experienced developers can take the instruction set and bash through the exercises. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942708&quot; readability=&quot;3.5396825396825&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7698412698413&quot;&gt;&lt;tr readability=&quot;3.5396825396825&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I think it’s created by the man himself - having been through it it’s a very thorough coverage of the basic instruction set without delving too much into the windows specifics (it uses FASM syntax from what I recall)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940073&quot; readability=&quot;2.6395939086294&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940010&quot; readability=&quot;5.4428571428571&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7214285714286&quot;&gt;&lt;tr readability=&quot;5.4428571428571&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.9892857142857&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.8054474708171&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Can someone more versed in x86 explain to me how this works?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It's been a long time since I've done any assembly, and that was MIPS, but I don't see how there's any sort of exit condition or anything. I'm guessing there's more to xadd than `x + y = z`? &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940032&quot; readability=&quot;3.0387596899225&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940311&quot; readability=&quot;2.1724137931034&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940430&quot; readability=&quot;1.125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940770&quot; readability=&quot;6.1675675675676&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.0837837837838&quot;&gt;&lt;tr readability=&quot;6.1675675675676&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;If &lt;em&gt;all&lt;/em&gt; functions took (rax, rbx, rcx, ...) and you had loop statement that defrements rcx and jumps unless zero, then how would &lt;em&gt;you&lt;/em&gt; write fib-function’s body?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940925&quot; readability=&quot;2.52&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.26&quot;&gt;&lt;tr readability=&quot;2.52&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;240&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;You raise a good question. At one time you would have only one loop running through the system as per my understanding. I am a little lost here.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943916&quot; readability=&quot;13.471698113208&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7358490566038&quot;&gt;&lt;tr readability=&quot;13.471698113208&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;280&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In a single-core cpu, the operating system's scheduler manages the register state for each process: basically, when switching from one context to another, it dumps the old process' registers to memory, and loads the register state to the new one. From the user's point of view, the register state will appear unaffected by different processes: your loop register will not changed by other processes and threads. There is no parallelism, so only one program and register state is active at once, but there is concurrency (if the OS supports it). On a multi-core processor, each core has its own set of registers, so the scheduler could theoretically run a multiple processes uninterupted on one core per process.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943830&quot; readability=&quot;7.7254437869822&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8627218934911&quot;&gt;&lt;tr readability=&quot;7.7254437869822&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;280&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.691124260355&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.896214896215&quot;&gt;&lt;span class=&quot;c5a&quot;&gt;I think this is the biggest problem with learning x86 assembly (or ARM or anything else) on modern systems (or more specifically modern operating systems).&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c5a&quot;&gt;It’s sometimes difficult to think about the assembly code in situ when you start to think about the operating system doing a ton of context switching and paging etc. in the background, which can distract your thought process from what’s right in front of you (as well as the operating system’s software interrupts / system calls on top of the basic ISA, which is another abstraction!)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c5a&quot;&gt;Older systems had the currently running program as the entire context of the system at that point in time - in a similar way to embedded programming, which is imho a much easier realm to learn assembly in once you’ve got a bit of basic electronics under your belt! &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944682&quot; readability=&quot;4.4859813084112&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2429906542056&quot;&gt;&lt;tr readability=&quot;4.4859813084112&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;This is correct, from the snippet given - what the other commentators are failing to say is that they're assuming the registers are initialised &quot;offstage&quot; by some other part of the program.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942962&quot; readability=&quot;3.5735294117647&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7867647058824&quot;&gt;&lt;tr readability=&quot;3.5735294117647&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The code above I believe is the point to jump to when the register has been assigned some value for x. Think along the same lines as a function call once the pre-amble is out of the way (or a ‘goto’ by someone who knows when to use it!)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943861&quot; readability=&quot;4.95&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.475&quot;&gt;&lt;tr readability=&quot;4.95&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;It's a hardware register, so it has always has a value (in 64-bit mode, at least), whether or not the program explicitly sets it.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940869&quot; readability=&quot;1.1034482758621&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943801&quot; readability=&quot;2.1111111111111&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941860&quot; readability=&quot;1.4814814814815&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943922&quot; readability=&quot;1.2285714285714&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939386&quot; readability=&quot;11.702265372168&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8511326860841&quot;&gt;&lt;tr readability=&quot;11.702265372168&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.3139158576052&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.922822491731&quot;&gt;&lt;span class=&quot;c00&quot;&gt;My interest, save for occasional tweak in ARM boot code, is mostly historical. Grew up on Z-80 assembly but really enjoy PDP-11 code for didactic purposes. You can easily see that the rise of optimising C compilers was helped by divergence from PDP instruction set. Not ever since C idioms map down so nicely.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;strlen():&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  LEN:   MOV #-1, R0
  1⊙     INC R0
         TSTB (R1)+
         BNE 1⊙
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;or take strcpy():&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  COPY:  MOVB (R1)+, (R0)+
         BNE COPY
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;versus the C version:&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  void strcpy(char *s, char *t) 
  {
    while (*s++ = *t++)
      ;
  }
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;It translates to the optimal machine code verbatim. It does not require any smarts of the compiler, at the expense of understanding on the side of the programmer. This is made possible by orthogonality of the instruction set, which in less well thought out designs was hacked around with special instructions (like LDIR on Z80). The price for that is you have to make compiler optimize these situations.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939659&quot; readability=&quot;20.645435244161&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.322717622081&quot;&gt;&lt;tr readability=&quot;20.645435244161&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.014861995754&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;29.485632183908&quot;&gt;&lt;span class=&quot;c00&quot;&gt;That's remarkably close to 68k str-functions.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Page 133 &lt;a href=&quot;http://www.atarimania.com/documents/Asm_Lang_Prog_68K_Family.pdf&quot; rel=&quot;nofollow&quot;&gt;http://www.atarimania.com/documents/Asm_Lang_Prog_68K_Family...&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  * STRLEN - RETURNS LENGTH OP NULL TERMINATED STRING IN D0
  * A0 -&amp;gt; STRING
  STRLEN: MOVE.L A0,-(SP) SAVE REG
          CLR.L  D0       INITIALIZE
  STRLENI:TST.B  (A0)+    NULL?
          BEQ    STRLENR  YES, RETURN
          ADDQ.L #1, D0   BUMB COUNT
          BRA    STRLENI  LOOP
  STRLENR:MOVE.L (SP)+,A0 RESTORE REG
          RTS

  We might also want to copy a string:
  
  * STRCPY - COPY A NULL TERMINATED STRING
  * A0 -&amp;gt; SOURCE STRING
  * A1 -&amp;gt; DESTINATION STRING
  STRCPY: MOVEM.L A0-A1,-(SP) SAVE REGS
  STRCPY1:MOVE.B  (A0)+,(A1)+ MOVE A BYTE
          BNE     STRCPY1     GET ANOTHER IF NOT NULL
          MOVEM.L (SP)+/A0-A1 RESTORE REGS
          RTS
  
  Next, we will want to compare two strings:
  
  * STRCMP - COMPARE TWO NULL TERMINATED STRINGS
  * A0 -&amp;gt; STRING 1
  * A1 -&amp;gt; STRING 2
  STRCMP: MOVEM.L A0-A1,-(SP)  SAVE REGS
  STRCMP1:CMPM.B  (A0)+,(A1)+  COMPARE BYTES
          BNE     STRRET       RETURN IF DIFFERENT
          TST.B   -1(A0)       HAVE WE HIT A NULL?
          BNE     STRCMP1      NOW MORE BYTES LEFT
  STRRET: MOVEM.L (SP)+,A0-A1  RESTORE REGS
          RTS
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Although I guess I'd implement strlen more like this (not sure if it works, been a &lt;em&gt;long&lt;/em&gt; time since I last wrote anything for 68k):&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  strlen:   movem.l a0-a1,-(sp)
            move.l  a0, a1   ; copy a0 to a1
  slenloop: tst.b   (a0)+
            bne     slenloop
            addq.l  #1, a1
            sub.l   a0, a1
            move.l  a1, d0
            movem.l (sp)+,a0-a1
            rts
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Just two instructions in the inner loop. But not sure whether address registers supported addq etc.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939737&quot; readability=&quot;5.0675675675676&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.5337837837838&quot;&gt;&lt;tr readability=&quot;5.0675675675676&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.222972972973&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.6484375&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Wow it's close indeed, even stack manipulation looks the same. Would be&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  MOV  R0, -(SP)
  ....
  MOV  (SP)+, R0
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;for the PDP code.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940555&quot; readability=&quot;18.466042154567&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.2330210772834&quot;&gt;&lt;tr readability=&quot;18.466042154567&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.634660421546&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;24.84993997599&quot;&gt;&lt;span class=&quot;c00&quot;&gt;My faster (?, see [0]) strlen seems to compile (using MIT 68k syntax):&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  &amp;gt; cat &amp;gt; test.asm
  strlen:   movem.l %a0-%a1,-(%sp)
            movl    %a0, %a1     ;# copy a0 to a1
  slenloop: tst.b   (%a0)+
            bne.b   slenloop
            addq.l  #1, %a1
            sub.l   %a0, %a1
            move.l  %a1, %d0
            movem.l (%sp)+,%a0-%a1
            rts
  ^D

  &amp;gt; m68k-linux-gnu-as test.asm &amp;amp;&amp;amp; m68k-linux-gnu-objdump -d a.out
  a.out:     file format elf32-m68k
  
  Disassembly of section .text:
  
  00000000 &amp;lt;strlen&amp;gt;:
     0: 48e7 00c0       moveml %a0-%a1,%sp@-
     4: 2248            moveal %a0,%a1
  
  00000006 &amp;lt;slenloop&amp;gt;:
     6: 4a18            tstb %a0@+
     8: 66fc            bnes 6 &amp;lt;slenloop&amp;gt;
     a: 5289            addql #1,%a1
     c: 93c8            subal %a0,%a1
     e: 2009            movel %a1,%d0
    10: 4cdf 0300       moveml %sp@+,%a0-%a1
    14: 4e75            rts
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;I wonder whether it actually works... I think same idea should be translatable to PDP-11 as well.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;[0]: It runs slower for short strings, though. Not sure where the break even point is. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940799&quot; readability=&quot;17.384737678855&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.6923688394277&quot;&gt;&lt;tr readability=&quot;17.384737678855&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.487281399046&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;28.437348423605&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Previous one didn't work, because I mixed up a0 and a1 pointers when subtracting.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But that gave me a new idea: copy pointer to d0 and complement the difference instead of addq, saving a1 register (+stack operations) and a move-instruction:&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  strlen:   move.l  %a0,-(%sp)
            movl    %a0, %d0   ;# d0 = a0;
  slenloop: tst.b   (%a0)+     ;# test *a0, post incr
            bneb    slenloop   ;# loop if non-zero
            sub.l   %a0, %d0   ;# d0 = d0 - a0;
            not.l   %d0        ;# d0 = ~d0;
            move.l  (%sp)+,%a0
            rts                ;# d0 is the return value
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Equivalent C-code (&lt;a href=&quot;http://cpp.sh/2oecd&quot; rel=&quot;nofollow&quot;&gt;http://cpp.sh/2oecd&lt;/a&gt;):&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  #include &amp;lt;stdio.h&amp;gt;
  #include &amp;lt;stdint.h&amp;gt;
  
  size_t strlen68k(char* a0) {
      int zero_flag;
      uintptr_t d0 = (uintptr_t) a0;
      do {
          // tstb (%a0)+
          if (*a0 == 0) 
              zero_flag = 1;
          else
              zero_flag = 0;
          a0++; // (%a0)+ (post increment)
      } while(!zero_flag); // bneb slenloop
      d0 = d0 - (uintptr_t) a0; // sub.l %a0, %d0
      d0 = ~d0;  // not.l %d0
      return d0;
  }
  
  void strlen_test(char* str) {
      printf(&quot;str \&quot;%s\&quot; length is %lu\n&quot;, str, strlen68k(str));
  }
  
  int main(void) {
      strlen_test(&quot;&quot;);
      strlen_test(&quot;a&quot;);
      strlen_test(&quot;abcd&quot;);
      return 0;
  }
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Again, untested, but I think it probably works. I guess this is also faster for all string lengths &amp;gt;0 as well.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This idea &lt;em&gt;might&lt;/em&gt; not work on PDP-11 anymore, depending on how binary arithmetic is implemented. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940887&quot; readability=&quot;3.1636363636364&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941510&quot; readability=&quot;3.1578947368421&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944525&quot; readability=&quot;1.6137931034483&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944794&quot; readability=&quot;9.572192513369&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7860962566845&quot;&gt;&lt;tr readability=&quot;9.572192513369&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.0935828877005&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;17.833333333333&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In my work book club we've been reading the book &quot;zero bugs&quot; by Kate Thompson.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The first half is some fun writing with stock good advice for software development, and the second half is a bunch of code examples the author finds interesting, many of which are in various flavors of assembly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;(I have no affiliation with the author, publisher, nor any other ulterior motive. Office consensus is that this is the best book we've done a book club around - highly recommended as just plain fun to read, if you're already writing software.) &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939310&quot; readability=&quot;2.9230769230769&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939625&quot; readability=&quot;2.7755102040816&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16945681&quot; readability=&quot;2.13&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939200&quot; readability=&quot;3.8648648648649&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943238&quot; readability=&quot;3.7058823529412&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944800&quot; readability=&quot;0.72352941176471&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939128&quot; readability=&quot;1.8813559322034&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942291&quot; readability=&quot;1.8646616541353&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942578&quot; readability=&quot;2.4923076923077&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2461538461538&quot;&gt;&lt;tr readability=&quot;2.4923076923077&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I was going to ask why? But then I read the single faq at the end: because I thought it would be funny...&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944139&quot; readability=&quot;6.3636363636364&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.1818181818182&quot;&gt;&lt;tr readability=&quot;6.3636363636364&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6363636363636&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8916408668731&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In addition to being funny, it's appealing to me to have the option of generating assembly to perform a task in such a way that a human looking at the assembly would have enormous difficulty in determining what is performed. As suggested by its name, it serves as a nice obfuscator.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It also fully avoids all branches. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16945222&quot; readability=&quot;1.6402877697842&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941117&quot; readability=&quot;35.460490463215&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;17.730245231608&quot;&gt;&lt;tr readability=&quot;35.460490463215&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;22.655313351499&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;44.844720496894&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Duff's device, as emitted by GCC[0], is a bit on the verbose side but still quite neat. In particular the single-instruction computed goto that uses a look-up table made up of 8 quad-words, filled in by the linker.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Note the '.section .rodata' directive which actually places the quads pointers, seemingly interleaved with code, in a read-only data section.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Note also the dec/test/jle instructions implementing the while loop occur &lt;em&gt;before&lt;/em&gt; the last of the eight copy operations, and interleaved with the next-to-last copy operation.&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  duff:
  .LFB0:
          .cfi_startproc
          lea     eax, [rdi+7]
          mov     r8d, 8
          mov     rcx, rdx
          cdq
          idiv    r8d
          mov     r9d, eax
          mov     eax, edi
          cdq
          idiv    r8d
          cmp     edx, 7
          ja      .L2
          mov     edx, edx
          jmp     [QWORD PTR .L4[0+rdx*8]]
          .section        .rodata
          .align 8
          .align 4
  .L4:
          .quad   .L3
          .quad   .L5
          .quad   .L6
          .quad   .L7
          .quad   .L8
          .quad   .L9
          .quad   .L10
          .quad   .L11
          .text
  .L11:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L10:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L9:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L8:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L7:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L6:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L5:
          mov     al, BYTE PTR [rsi]
          dec     r9d
          inc     rsi
          test    r9d, r9d
          mov     BYTE PTR [rcx], al
          jle     .L2
  .L3:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
          jmp     .L11
  .L2:
          ret
          .cfi_endproc&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;___&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;edit: formatting, &lt;em&gt;sigh&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;[0] v 7.3.0 64bit; gcc -S -Os -masm=intel &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942162&quot; readability=&quot;6.4&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2&quot;&gt;&lt;tr readability=&quot;6.4&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.8&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.1761658031088&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Note the '.section .rodata' directive which places ..., seemingly interleaved with code, in a read-only data section.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It only specifies which section that part of &quot;code&quot; goes into, the linker pools it all up in a binary image and fills in the address for the tags when linking as directed by the linker script[0].&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;[0]: &lt;a href=&quot;https://sourceware.org/binutils/docs/ld/Simple-Example.html&quot; rel=&quot;nofollow&quot;&gt;https://sourceware.org/binutils/docs/ld/Simple-Example.html&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941440&quot; readability=&quot;1.3884297520661&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941450&quot; readability=&quot;1.6280487804878&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939836&quot; readability=&quot;6.1721854304636&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942270&quot; readability=&quot;1.4791666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939366&quot; readability=&quot;5.3823529411765&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6911764705882&quot;&gt;&lt;tr readability=&quot;5.3823529411765&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.2794117647059&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.011824324324&quot;&gt;&lt;span class=&quot;c00&quot;&gt;IBM PC x86 BIOS code:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://github.com/kaneton/appendix-bios&quot; rel=&quot;nofollow&quot;&gt;https://github.com/kaneton/appendix-bios&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;OT: This brings back memories of tinkering with the MS-DOS boot process. Back then, the BIOS would read the MBR and copy its contents to 0x7C00 and start execution from there. So you could assemble your own code (using no less than MS-DOS debug) and plonk it into the MBR. I remember doing things like fooling the boot loader into thinking there's less ram than there actually was (639kB instead of 640kB) and using the unaccounted 1kB for placing your own code that could be triggered by a captured interrupt... Fun times! &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939788&quot; readability=&quot;1.4838709677419&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942281&quot; readability=&quot;10.291316526611&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.1456582633053&quot;&gt;&lt;tr readability=&quot;10.291316526611&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;So yes, this was a TSR, except that it resided in unaccounted for memory. Also, since you put it into the MBR, it would get loaded into ram automatically with every boot, and no fiddling with autoexec.bat or anything where it could be easily discovered. All this of course, in trying to understand the fascinating world of viruses.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940361&quot; readability=&quot;3.2056737588652&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6028368794326&quot;&gt;&lt;tr readability=&quot;3.2056737588652&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Maybe stealthiness? TSRs could be viewed with the right tools, IIRC. This seems like a technique to hide code?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940937&quot; readability=&quot;3.3061889250814&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941079&quot; readability=&quot;1.9130434782609&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943436&quot; readability=&quot;1.265306122449&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941481&quot; readability=&quot;3.2539682539683&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939143&quot; readability=&quot;0.090909090909091&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941560&quot; readability=&quot;4.2059800664452&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943311&quot; readability=&quot;0.90243902439024&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939506&quot; readability=&quot;5.2957746478873&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6478873239437&quot;&gt;&lt;tr readability=&quot;5.2957746478873&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;[xchg rax,rax] has a collection of interesting snippets. You can either try to reason what they're doing yourself, or there are a variety of writeups out there for each of the snippets.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943529&quot; readability=&quot;1.5775862068966&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942898&quot; readability=&quot;4.4444444444444&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2222222222222&quot;&gt;&lt;tr readability=&quot;4.4444444444444&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;My favourite was a function to swap either a byte, word or dword with a single ret. The function would have three entry points, calling itself recursively like hanoi-towers.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943307&quot; readability=&quot;2.5490196078431&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2745098039216&quot;&gt;&lt;tr readability=&quot;2.5490196078431&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.3986928104575&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.7368421052632&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I remember I wrote a 6 bytes code to destroy information on the whole hard drive.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Kind of opposite of what you're asking for :) &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944789&quot; readability=&quot;7.9772727272727&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.9886363636364&quot;&gt;&lt;tr readability=&quot;7.9772727272727&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.3181818181818&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.722222222222&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The following snippet swaps two values (rax, rcx) only if they are out of order (i.e. rax &amp;gt; rcx). It does so without using any branches.&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  mov rdx, rax
  cmp rax, rcx
  cmovg rax, rcx
  cmovg rcx, rdx&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939650&quot; readability=&quot;1.4166666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939684&quot; readability=&quot;7.75&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.875&quot;&gt;&lt;tr readability=&quot;7.75&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.171875&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;19.876390605686&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Pretty incredible that such world changing code fits on one page.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It’s ineresting that when tools are new, like ASM in 1978, they give high leverage to the first to use them. Microsoft was able to leverage a small amount of code into a world changing platform. Now it would be nearly impossible to do the same with a team the same size.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But in 2018, the nascent state of ML tools looks similar to the nascent state of programming tools in 1978. And indeed we are seeing entire companies built around relatively basic AI in the scheme of things. As first movers these companies have the same kind of leverage with respect to AI that Microsoft did to Software in the 1980s.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Perhaps in 2058 someone will share a link to a Tensorflow script and we will all marvel at its terseness and apparent simplicity. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939893&quot; readability=&quot;3.6825396825397&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8412698412698&quot;&gt;&lt;tr readability=&quot;3.6825396825397&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.1428571428571&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8297872340426&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Pretty incredible that such world changing code fits on one page.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;What code are you looking at? I see &quot;Microsoft BASIC for 6502 Original Source Code&quot; which runs for 6955 lines. By my reasoning that is more than a hundred pages. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939963&quot; readability=&quot;6.3830508474576&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.1915254237288&quot;&gt;&lt;tr readability=&quot;6.3830508474576&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Ok, “one page” may not be a technically fair description (though it does fit on a web page). Still, I think most programmers would agree that nowadays, few world changing technologies can be expressed in 6955 lines of code. That’s what I mean by high leverage.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943557&quot; readability=&quot;1.6350364963504&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940961&quot; readability=&quot;1.9942196531792&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941080&quot; readability=&quot;12.718309859155&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3591549295775&quot;&gt;&lt;tr readability=&quot;12.718309859155&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Well what we were doing for pe encryptors (will try to dig out some code from tapes when I get back into civilization :D) was generating a code that was driving execution flow using SEH (structured exception handling), sometimes the code executed as intended, sometimes the exception was trigered (with faulty code, again generated) to continue at completely different part of code. This was the complete pain in the &quot;neck&quot; to debug (timing the code execution is a great way to tell if someone is debugging it, and you just continue into some other generated code that is missleading the reverser), and completely impossible to solve on paper (well, with huge amount of knowlidge and a lot of time, you could do it :D). That's why I am laughing with todays overuse of try/catch/throws, we were using it to obfuscate execution flow and today it is used in normal coding with same devastating effect :D&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940656&quot; readability=&quot;1.7329192546584&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943403&quot; readability=&quot;5.804347826087&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.9021739130435&quot;&gt;&lt;tr readability=&quot;5.804347826087&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.5605590062112&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.7171052631579&quot;&gt;&lt;span class=&quot;c00&quot;&gt;not quite the assembly, but you may look at small intros at &lt;a href=&quot;https://www.pouet.net/prodlist.php&quot; rel=&quot;nofollow&quot;&gt;https://www.pouet.net/prodlist.php&lt;/a&gt; of sizes 32 bytes and so on.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;many intros are provided with source codes, and others could easily be viewed in disassemblers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;especially look at intros by such brilliant people like Digimind and Řrřola. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943578&quot; readability=&quot;2.4435483870968&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2217741935484&quot;&gt;&lt;tr readability=&quot;2.4435483870968&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I was quite impressed with the Wolf3D rendering engine when somebody released the code years back.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939533&quot; readability=&quot;3.0046948356808&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943162&quot; readability=&quot;1.4065934065934&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940963&quot; readability=&quot;1.4656488549618&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939135&quot; readability=&quot;0.73170731707317&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941488&quot; readability=&quot;2.3814432989691&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943302&quot; readability=&quot;4.3446601941748&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1723300970874&quot;&gt;&lt;tr readability=&quot;4.3446601941748&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Yeah, but with the side effect of clearing the flag registers. So can't be used between operations that rely on flags. Alternatively it is great to break false flag dependency.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942213&quot; readability=&quot;3.3609467455621&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6804733727811&quot;&gt;&lt;tr readability=&quot;3.3609467455621&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Truly beautiful, I was so ecstatic when this clicked with me when I was first learning assembly. So much depth in one &quot;simple&quot; instruction.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941424&quot; readability=&quot;2.9732620320856&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944301&quot; readability=&quot;0.78048780487805&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Fri, 27 Apr 2018 07:02:53 +0000</pubDate>
<dc:creator>xelxebar</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=16938934</dc:identifier>
</item>
<item>
<title>Illegal prime</title>
<link>https://en.wikipedia.org/wiki/Illegal_prime</link>
<guid isPermaLink="true" >https://en.wikipedia.org/wiki/Illegal_prime</guid>
<description>&lt;div id=&quot;mw-content-text&quot; lang=&quot;en&quot; dir=&quot;ltr&quot; class=&quot;mw-content-ltr&quot;&gt;&lt;div class=&quot;mw-parser-output&quot;&gt;&lt;p&gt;An &lt;b&gt;illegal prime&lt;/b&gt; is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_number&quot; title=&quot;Prime number&quot;&gt;prime number&lt;/a&gt; that represents information whose possession or distribution is forbidden in some &lt;a href=&quot;https://en.wikipedia.org/wiki/Legal_jurisdiction&quot; class=&quot;mw-redirect&quot; title=&quot;Legal jurisdiction&quot;&gt;legal jurisdictions&lt;/a&gt;. One of the first illegal primes was found in 2001. When interpreted in a particular way, it describes a &lt;a href=&quot;https://en.wikipedia.org/wiki/Computer_program&quot; title=&quot;Computer program&quot;&gt;computer program&lt;/a&gt; that bypasses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_rights_management&quot; title=&quot;Digital rights management&quot;&gt;digital rights management&lt;/a&gt; scheme used on &lt;a href=&quot;https://en.wikipedia.org/wiki/DVD&quot; title=&quot;DVD&quot;&gt;DVDs&lt;/a&gt;. Distribution of such a program in the &lt;a href=&quot;https://en.wikipedia.org/wiki/United_States&quot; title=&quot;United States&quot;&gt;United States&lt;/a&gt; is illegal under the &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act&quot; title=&quot;Digital Millennium Copyright Act&quot;&gt;Digital Millennium Copyright Act&lt;/a&gt;.&lt;sup id=&quot;cite_ref-gloss_1-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-gloss-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; An illegal prime is a kind of &lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_number&quot; title=&quot;Illegal number&quot;&gt;illegal number&lt;/a&gt;.&lt;/p&gt;
&lt;p/&gt;

&lt;p/&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;History&quot;&gt;History&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;thumb tright&quot;&gt;
&lt;div class=&quot;thumbinner&quot; style=&quot;width:252px;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/File:DeCSS.PNG&quot; class=&quot;image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/DeCSS.PNG/250px-DeCSS.PNG&quot; width=&quot;250&quot; height=&quot;175&quot; class=&quot;thumbimage&quot; srcset=&quot;//upload.wikimedia.org/wikipedia/commons/thumb/a/a9/DeCSS.PNG/375px-DeCSS.PNG 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a9/DeCSS.PNG/500px-DeCSS.PNG 2x&quot; data-file-width=&quot;604&quot; data-file-height=&quot;422&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;thumbcaption&quot;&gt;

The &lt;a href=&quot;https://en.wikipedia.org/wiki/DeCSS&quot; title=&quot;DeCSS&quot;&gt;DeCSS&lt;/a&gt; code can be used by a computer to circumvent a DVD's &lt;a href=&quot;https://en.wikipedia.org/wiki/Copy_protection&quot; title=&quot;Copy protection&quot;&gt;copy protection&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;One of the earliest illegal prime numbers was generated in March 2001 by &lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Phil_Carmody&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;Phil Carmody (page does not exist)&quot;&gt;Phil Carmody&lt;/a&gt;. Its &lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_numeral_system&quot; class=&quot;mw-redirect&quot; title=&quot;Binary numeral system&quot;&gt;binary&lt;/a&gt; representation corresponds to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_compression&quot; title=&quot;Data compression&quot;&gt;compressed&lt;/a&gt; version of the &lt;a href=&quot;https://en.wikipedia.org/wiki/C_(programming_language)&quot; title=&quot;C (programming language)&quot;&gt;C&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Source_code&quot; title=&quot;Source code&quot;&gt;source code&lt;/a&gt; of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Computer_program&quot; title=&quot;Computer program&quot;&gt;computer program&lt;/a&gt; implementing the &lt;a href=&quot;https://en.wikipedia.org/wiki/DeCSS&quot; title=&quot;DeCSS&quot;&gt;DeCSS&lt;/a&gt; decryption algorithm, which can be used by a computer to circumvent a DVD's &lt;a href=&quot;https://en.wikipedia.org/wiki/Copy_protection&quot; title=&quot;Copy protection&quot;&gt;copy protection&lt;/a&gt;.&lt;sup id=&quot;cite_ref-gloss_1-1&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-gloss-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-2&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Protests against the indictment of DeCSS author &lt;a href=&quot;https://en.wikipedia.org/wiki/Jon_Lech_Johansen&quot; title=&quot;Jon Lech Johansen&quot;&gt;Jon Lech Johansen&lt;/a&gt; and legislation prohibiting publication of DeCSS code took many forms.&lt;sup id=&quot;cite_ref-3&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt; One of them was the representation of the illegal code in a form that had an &lt;i&gt;intrinsically archivable&lt;/i&gt; quality. Since the bits making up a computer program also represent a number, the plan was for the number to have some special property that would make it archivable and publishable (one method was to print it on a T-shirt). The &lt;a href=&quot;https://en.wikipedia.org/wiki/Primality&quot; class=&quot;mw-redirect&quot; title=&quot;Primality&quot;&gt;primality&lt;/a&gt; of a number is a fundamental property of &lt;a href=&quot;https://en.wikipedia.org/wiki/Number_theory&quot; title=&quot;Number theory&quot;&gt;number theory&lt;/a&gt; and is therefore not dependent on legal definitions of any particular jurisdiction.&lt;/p&gt;
&lt;p&gt;The large prime database of The &lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_Pages&quot; title=&quot;Prime Pages&quot;&gt;Prime Pages&lt;/a&gt; website records the top 20 primes of various special forms; one of them is proof of primality using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Elliptic_curve_primality_proving&quot; class=&quot;mw-redirect&quot; title=&quot;Elliptic curve primality proving&quot;&gt;elliptic curve primality proving&lt;/a&gt; (ECPP) &lt;a href=&quot;https://en.wikipedia.org/wiki/Algorithm&quot; title=&quot;Algorithm&quot;&gt;algorithm&lt;/a&gt;. Thus, if the number were large enough and proved prime using ECPP, it would be published.&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Discovery&quot;&gt;Discovery&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Specifically, Carmody applied &lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet%27s_theorem_on_arithmetic_progressions&quot; title=&quot;Dirichlet's theorem on arithmetic progressions&quot;&gt;Dirichlet's theorem&lt;/a&gt; to several prime candidates of the form &lt;i&gt;k&lt;/i&gt;·256&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; + &lt;i&gt;b&lt;/i&gt;, where &lt;i&gt;k&lt;/i&gt; was the &lt;a href=&quot;https://en.wikipedia.org/wiki/Decimal&quot; title=&quot;Decimal&quot;&gt;decimal&lt;/a&gt; representation of the original compressed file. Multiplying by a power of 256 adds as many trailing &lt;a href=&quot;https://en.wikipedia.org/wiki/Null_character&quot; title=&quot;Null character&quot;&gt;null characters&lt;/a&gt; to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gzip&quot; title=&quot;Gzip&quot;&gt;gzip&lt;/a&gt; file as indicated in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponentiation&quot; title=&quot;Exponentiation&quot;&gt;exponent&lt;/a&gt; which would still result in the DeCSS C code when unzipped.&lt;/p&gt;
&lt;p&gt;Of those prime candidates, several were identified as &lt;a href=&quot;https://en.wikipedia.org/wiki/Probable_prime&quot; title=&quot;Probable prime&quot;&gt;probable prime&lt;/a&gt; using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_source&quot; class=&quot;mw-redirect&quot; title=&quot;Open source&quot;&gt;open source&lt;/a&gt; program OpenPFGW, and one of them was proved prime using the ECPP algorithm implemented by the Titanix software.&lt;sup id=&quot;cite_ref-4&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-5&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt; Even at the time of discovery in 2001, this 1401-digit number, of the form &lt;i&gt;k&lt;/i&gt;·256&lt;sup&gt;2&lt;/sup&gt; + 2083, was too small to be mentioned, so Carmody created a 1905-digit prime, of the form &lt;i&gt;k&lt;/i&gt;·256&lt;sup&gt;211&lt;/sup&gt; + 99, that was the tenth largest prime found using ECPP, a remarkable achievement by itself and worthy of being published on the lists of the highest prime numbers.&lt;sup id=&quot;cite_ref-gloss_1-2&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_note-gloss-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; In a way, by having this number independently published for a completely unrelated reason to the DeCSS code, he had been able to evade legal responsibility for the original software.&lt;/p&gt;
&lt;p&gt;Following this, Carmody discovered a 1811 digit prime -- this one being non-compressed, directly &lt;a href=&quot;https://en.wikipedia.org/wiki/Executable&quot; title=&quot;Executable&quot;&gt;executable&lt;/a&gt; machine language in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&quot; title=&quot;Executable and Linkable Format&quot;&gt;ELF&lt;/a&gt; format for &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux&quot; title=&quot;Linux&quot;&gt;Linux&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Intel_80386&quot; title=&quot;Intel 80386&quot;&gt;i386&lt;/a&gt;, implementing the same DeCSS functionality.&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;See_also&quot;&gt;See also&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/AACS_encryption_key_controversy&quot; title=&quot;AACS encryption key controversy&quot;&gt;AACS encryption key controversy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HDCP#Master_key_release&quot; class=&quot;mw-redirect&quot; title=&quot;HDCP&quot;&gt;HDCP master key release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Library_of_Babel&quot; title=&quot;The Library of Babel&quot;&gt;The Library of Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_number&quot; title=&quot;Normal number&quot;&gt;Normal number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/PlayStation_3_homebrew#Private_key_compromised&quot; title=&quot;PlayStation 3 homebrew&quot;&gt;PlayStation 3 private key compromised&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Prior_art&quot; title=&quot;Prior art&quot;&gt;Prior art&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Streisand_effect&quot; title=&quot;Streisand effect&quot;&gt;Streisand effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Texas_Instruments_signing_key_controversy&quot; title=&quot;Texas Instruments signing key controversy&quot;&gt;Texas Instruments signing key controversy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;References&quot;&gt;References&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;reflist&quot; style=&quot;list-style-type: decimal;&quot;&gt;
&lt;div class=&quot;mw-references-wrap&quot;&gt;
&lt;ol class=&quot;references&quot;&gt;&lt;li id=&quot;cite_note-gloss-1&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;^ &lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-gloss_1-0&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;a&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-gloss_1-1&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-gloss_1-2&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;c&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation web&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://primes.utm.edu/glossary/page.php?sort=Illegal&quot;&gt;&quot;Prime glossary - Illegal prime&quot;&lt;/a&gt;. Primes.utm.edu. 1999-10-06&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;2013-03-26&lt;/span&gt;&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Prime+glossary+-+Illegal+prime&amp;amp;rft.pub=Primes.utm.edu&amp;amp;rft.date=1999-10-06&amp;amp;rft_id=http%3A%2F%2Fprimes.utm.edu%2Fglossary%2Fpage.php%3Fsort%3DIllegal&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AIllegal+prime&quot; class=&quot;Z3988&quot;/&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;cite_note-2&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-2&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation web&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://primes.utm.edu/curios/page.php?number_id=1214&quot;&gt;&quot;Prime Curios – first known non-trivial executable prime&quot;&lt;/a&gt;. Primes.utm.edu. 2001-09-10&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;2013-03-26&lt;/span&gt;&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Prime+Curios+%E2%80%93+first+known+non-trivial+executable+prime&amp;amp;rft.pub=Primes.utm.edu&amp;amp;rft.date=2001-09-10&amp;amp;rft_id=http%3A%2F%2Fprimes.utm.edu%2Fcurios%2Fpage.php%3Fnumber_id%3D1214&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AIllegal+prime&quot; class=&quot;Z3988&quot;/&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;cite_note-3&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-3&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;Hamilton, David P. &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://www.cs.cmu.edu/~dst/DeCSS/Gallery/wsj-04-12-2001.html&quot;&gt;&quot;Banned Code Lives in Poetry and Song&quot;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;cite_note-4&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-4&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.theregister.co.uk/2001/03/19/dvd_descrambler_encoded_in_illegal/&quot;&gt;DVD descrambler encoded in ‘illegal’ prime number&lt;/a&gt; (Thomas C. Greene, &lt;i&gt;The Register&lt;/i&gt;, Mon 19 March 2001)&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;cite_note-5&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Illegal_prime#cite_ref-5&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation web&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://primes.utm.edu/curios/page.php?number_id=953&quot;&gt;&quot;Prime Curios - first illegal prime&quot;&lt;/a&gt;. Primes.utm.edu&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;2013-03-26&lt;/span&gt;&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Prime+Curios+-+first+illegal+prime&amp;amp;rft.pub=Primes.utm.edu&amp;amp;rft_id=http%3A%2F%2Fprimes.utm.edu%2Fcurios%2Fpage.php%3Fnumber_id%3D953&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AIllegal+prime&quot; class=&quot;Z3988&quot;/&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;External_links&quot;&gt;External links&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://web.archive.org/web/20011212144451/http://fatphil.org/maths/illegal1.html&quot;&gt;The first illegal prime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://fatphil.org/maths/illegal2.html&quot;&gt;Phil Carmody's page discussing executable primes.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div role=&quot;navigation&quot; class=&quot;navbox&quot; aria-labelledby=&quot;Prime_number_classes&quot; style=&quot;padding:3px&quot;&gt;
&lt;table class=&quot;nowraplinks collapsible autocollapse navbox-inner&quot; style=&quot;border-spacing:0;background:transparent;color:inherit&quot;&gt;&lt;tr&gt;&lt;th scope=&quot;col&quot; class=&quot;navbox-title&quot; colspan=&quot;2&quot;&gt;
&lt;div class=&quot;plainlinks hlist navbar mini&quot;&gt;
&lt;ul&gt;&lt;li class=&quot;nv-view&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Template:Prime_number_classes&quot; title=&quot;Template:Prime number classes&quot;&gt;&lt;abbr title=&quot;View this template&quot; style=&quot;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;&quot;&gt;v&lt;/abbr&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;nv-talk&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Template_talk:Prime_number_classes&quot; title=&quot;Template talk:Prime number classes&quot;&gt;&lt;abbr title=&quot;Discuss this template&quot; style=&quot;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;&quot;&gt;t&lt;/abbr&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;nv-edit&quot;&gt;&lt;a class=&quot;external text&quot; href=&quot;https://en.wikipedia.org/w/index.php?title=Template:Prime_number_classes&amp;amp;action=edit&quot;&gt;&lt;abbr title=&quot;Edit this template&quot; style=&quot;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;&quot;&gt;e&lt;/abbr&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;Prime_number_classes&quot; style=&quot;font-size:114%;margin:0 4em&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_number&quot; title=&quot;Prime number&quot;&gt;Prime number&lt;/a&gt; classes&lt;/div&gt;
&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;By formula&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fermat_number&quot; title=&quot;Fermat number&quot;&gt;Fermat&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;2&lt;sup&gt;2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt; + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mersenne_prime&quot; title=&quot;Mersenne prime&quot;&gt;Mersenne&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;2&lt;sup&gt;&lt;i&gt;p&lt;/i&gt;&lt;/sup&gt; − 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Double_Mersenne_number&quot; title=&quot;Double Mersenne number&quot;&gt;Double Mersenne&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;2&lt;sup&gt;2&lt;sup&gt;&lt;i&gt;p&lt;/i&gt;&lt;/sup&gt;−1&lt;/sup&gt; − 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Wagstaff_prime&quot; title=&quot;Wagstaff prime&quot;&gt;Wagstaff&lt;/a&gt; &lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;(2&lt;sup&gt;&lt;i&gt;p&lt;/i&gt;&lt;/sup&gt; + 1)/3&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Proth_number&quot; title=&quot;Proth number&quot;&gt;Proth&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;k&lt;/i&gt;·2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Factorial_prime&quot; title=&quot;Factorial prime&quot;&gt;Factorial&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;n&lt;/i&gt;! ± 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Primorial_prime&quot; title=&quot;Primorial prime&quot;&gt;Primorial&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;sub&gt;n&lt;/sub&gt;&lt;/i&gt;# ± 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Euclid_number&quot; title=&quot;Euclid number&quot;&gt;Euclid&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;sub&gt;n&lt;/sub&gt;&lt;/i&gt;# + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pythagorean_prime&quot; title=&quot;Pythagorean prime&quot;&gt;Pythagorean&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;4&lt;i&gt;n&lt;/i&gt; + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pierpont_prime&quot; title=&quot;Pierpont prime&quot;&gt;Pierpont&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;2&lt;sup&gt;&lt;i&gt;u&lt;/i&gt;&lt;/sup&gt;·3&lt;sup&gt;&lt;i&gt;v&lt;/i&gt;&lt;/sup&gt; + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Quartan_prime&quot; title=&quot;Quartan prime&quot;&gt;Quartan&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;x&lt;/i&gt;&lt;sup&gt;4&lt;/sup&gt; + &lt;i&gt;y&lt;/i&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Solinas_prime&quot; title=&quot;Solinas prime&quot;&gt;Solinas&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;2&lt;sup&gt;&lt;i&gt;a&lt;/i&gt;&lt;/sup&gt; ± 2&lt;sup&gt;&lt;i&gt;b&lt;/i&gt;&lt;/sup&gt; ± 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cullen_number&quot; title=&quot;Cullen number&quot;&gt;Cullen&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;n&lt;/i&gt;·2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Woodall_number&quot; title=&quot;Woodall number&quot;&gt;Woodall&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;n&lt;/i&gt;·2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; − 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cuban_prime&quot; title=&quot;Cuban prime&quot;&gt;Cuban&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;x&lt;/i&gt;&lt;sup&gt;3&lt;/sup&gt; − &lt;i&gt;y&lt;/i&gt;&lt;sup&gt;3&lt;/sup&gt;)/(&lt;i&gt;x&lt;/i&gt; − &lt;i&gt;y&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Carol_number&quot; title=&quot;Carol number&quot;&gt;Carol&lt;/a&gt; &lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;(2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; − 1)&lt;sup&gt;2&lt;/sup&gt; − 2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Kynea_number&quot; title=&quot;Kynea number&quot;&gt;Kynea&lt;/a&gt; &lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;(2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; + 1)&lt;sup&gt;2&lt;/sup&gt; − 2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Leyland_number&quot; title=&quot;Leyland number&quot;&gt;Leyland&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;x&lt;sup&gt;y&lt;/sup&gt;&lt;/i&gt; + &lt;i&gt;y&lt;sup&gt;x&lt;/sup&gt;&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Thabit_number&quot; title=&quot;Thabit number&quot;&gt;Thabit&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;3·2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; − 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mills%27_constant&quot; title=&quot;Mills' constant&quot;&gt;Mills&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;⌊&lt;i&gt;A&lt;/i&gt;&lt;sup&gt;3&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;⌋&lt;/span&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Integer_sequence_prime&quot; title=&quot;Integer sequence prime&quot;&gt;By integer sequence&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fibonacci_prime&quot; title=&quot;Fibonacci prime&quot;&gt;Fibonacci&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Lucas_number&quot; title=&quot;Lucas number&quot;&gt;Lucas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pell_number&quot; title=&quot;Pell number&quot;&gt;Pell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Newman–Shanks–Williams_prime&quot; title=&quot;Newman–Shanks–Williams prime&quot;&gt;Newman–Shanks–Williams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Perrin_number&quot; title=&quot;Perrin number&quot;&gt;Perrin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Partition_(number_theory)&quot; title=&quot;Partition (number theory)&quot;&gt;Partitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bell_number&quot; title=&quot;Bell number&quot;&gt;Bell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Motzkin_number&quot; title=&quot;Motzkin number&quot;&gt;Motzkin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;By property&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Wieferich_prime&quot; title=&quot;Wieferich prime&quot;&gt;Wieferich&lt;/a&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Wieferich_pair&quot; title=&quot;Wieferich pair&quot;&gt;pair&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Wall–Sun–Sun_prime&quot; title=&quot;Wall–Sun–Sun prime&quot;&gt;Wall–Sun–Sun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Wolstenholme_prime&quot; title=&quot;Wolstenholme prime&quot;&gt;Wolstenholme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Wilson_prime&quot; title=&quot;Wilson prime&quot;&gt;Wilson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Lucky_number&quot; title=&quot;Lucky number&quot;&gt;Lucky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fortunate_number&quot; title=&quot;Fortunate number&quot;&gt;Fortunate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ramanujan_prime&quot; title=&quot;Ramanujan prime&quot;&gt;Ramanujan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pillai_prime&quot; title=&quot;Pillai prime&quot;&gt;Pillai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_prime&quot; title=&quot;Regular prime&quot;&gt;Regular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Strong_prime&quot; title=&quot;Strong prime&quot;&gt;Strong&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Stern_prime&quot; title=&quot;Stern prime&quot;&gt;Stern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Supersingular_prime_(for_an_elliptic_curve)&quot; title=&quot;Supersingular prime (for an elliptic curve)&quot;&gt;Supersingular (elliptic curve)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Supersingular_prime_(moonshine_theory)&quot; title=&quot;Supersingular prime (moonshine theory)&quot;&gt;Supersingular (moonshine theory)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Good_prime&quot; title=&quot;Good prime&quot;&gt;Good&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Super-prime&quot; title=&quot;Super-prime&quot;&gt;Super&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Higgs_prime&quot; title=&quot;Higgs prime&quot;&gt;Higgs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Highly_cototient_number&quot; title=&quot;Highly cototient number&quot;&gt;Highly cototient&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;Base-dependent&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Happy_number&quot; title=&quot;Happy number&quot;&gt;Happy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dihedral_prime&quot; title=&quot;Dihedral prime&quot;&gt;Dihedral&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Palindromic_prime&quot; title=&quot;Palindromic prime&quot;&gt;Palindromic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Emirp&quot; title=&quot;Emirp&quot;&gt;Emirp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Repunit&quot; title=&quot;Repunit&quot;&gt;Repunit&lt;/a&gt; &lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;(10&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; − 1)/9&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Permutable_prime&quot; title=&quot;Permutable prime&quot;&gt;Permutable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Circular_prime&quot; title=&quot;Circular prime&quot;&gt;Circular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Truncatable_prime&quot; title=&quot;Truncatable prime&quot;&gt;Truncatable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Strobogrammatic_prime&quot; class=&quot;mw-redirect&quot; title=&quot;Strobogrammatic prime&quot;&gt;Strobogrammatic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Minimal_prime_(recreational_mathematics)&quot; title=&quot;Minimal prime (recreational mathematics)&quot;&gt;Minimal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Weakly_prime_number&quot; title=&quot;Weakly prime number&quot;&gt;Weakly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Full_reptend_prime&quot; title=&quot;Full reptend prime&quot;&gt;Full reptend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Unique_prime&quot; title=&quot;Unique prime&quot;&gt;Unique&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Primeval_number&quot; title=&quot;Primeval number&quot;&gt;Primeval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Self_number&quot; title=&quot;Self number&quot;&gt;Self&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Smarandache–Wellin_number&quot; title=&quot;Smarandache–Wellin number&quot;&gt;Smarandache–Wellin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;Patterns&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Twin_prime&quot; title=&quot;Twin prime&quot;&gt;Twin&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt; + 2&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bi-twin_chain&quot; title=&quot;Bi-twin chain&quot;&gt;Bi-twin chain&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;n&lt;/i&gt; − 1, &lt;i&gt;n&lt;/i&gt; + 1, 2&lt;i&gt;n&lt;/i&gt; − 1, 2&lt;i&gt;n&lt;/i&gt; + 1, …&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_triplet&quot; title=&quot;Prime triplet&quot;&gt;Triplet&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt; + 2 or &lt;i&gt;p&lt;/i&gt; + 4, &lt;i&gt;p&lt;/i&gt; + 6&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_quadruplet&quot; title=&quot;Prime quadruplet&quot;&gt;Quadruplet&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt; + 2, &lt;i&gt;p&lt;/i&gt; + 6, &lt;i&gt;p&lt;/i&gt; + 8&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_k-tuple&quot; title=&quot;Prime k-tuple&quot;&gt;&lt;i&gt;k&lt;/i&gt;−Tuple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cousin_prime&quot; title=&quot;Cousin prime&quot;&gt;Cousin&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt; + 4&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sexy_prime&quot; title=&quot;Sexy prime&quot;&gt;Sexy&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt; + 6&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Chen_prime&quot; title=&quot;Chen prime&quot;&gt;Chen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sophie_Germain_prime&quot; title=&quot;Sophie Germain prime&quot;&gt;Sophie Germain&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, 2&lt;i&gt;p&lt;/i&gt; + 1&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cunningham_chain&quot; title=&quot;Cunningham chain&quot;&gt;Cunningham chain&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, 2&lt;i&gt;p&lt;/i&gt; ± 1, …&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Safe_prime&quot; title=&quot;Safe prime&quot;&gt;Safe&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt;, (&lt;i&gt;p&lt;/i&gt; − 1)/2&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Primes_in_arithmetic_progression&quot; title=&quot;Primes in arithmetic progression&quot;&gt;Arithmetic progression&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;&lt;i&gt;p&lt;/i&gt; + &lt;i&gt;a·n&lt;/i&gt;, &lt;i&gt;n&lt;/i&gt; = 0, 1, …&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Balanced_prime&quot; title=&quot;Balanced prime&quot;&gt;Balanced&lt;/a&gt; (&lt;span class=&quot;texhtml texhtml-big&quot; style=&quot;font-size:90%;&quot;&gt;consecutive &lt;i&gt;p&lt;/i&gt; − &lt;i&gt;n&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt;, &lt;i&gt;p&lt;/i&gt; + &lt;i&gt;n&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;By size&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Titanic_prime&quot; title=&quot;Titanic prime&quot;&gt;Titanic&lt;/a&gt; &lt;small&gt;(1,000+ digits)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gigantic_prime&quot; title=&quot;Gigantic prime&quot;&gt;Gigantic&lt;/a&gt; &lt;small&gt;(10,000+ digits)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Megaprime&quot; title=&quot;Megaprime&quot;&gt;Mega&lt;/a&gt; &lt;small&gt;(1,000,000+ digits)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Largest_known_prime_number&quot; title=&quot;Largest known prime number&quot;&gt;Largest known&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Complex_number&quot; title=&quot;Complex number&quot;&gt;Complex numbers&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Eisenstein_prime&quot; title=&quot;Eisenstein prime&quot;&gt;Eisenstein prime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_integer&quot; title=&quot;Gaussian integer&quot;&gt;Gaussian prime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Composite_number&quot; title=&quot;Composite number&quot;&gt;Composite numbers&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pseudoprime&quot; title=&quot;Pseudoprime&quot;&gt;Pseudoprime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Almost_prime&quot; title=&quot;Almost prime&quot;&gt;Almost prime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Semiprime&quot; title=&quot;Semiprime&quot;&gt;Semiprime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interprime&quot; title=&quot;Interprime&quot;&gt;Interprime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;Related topics&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Probable_prime&quot; title=&quot;Probable prime&quot;&gt;Probable prime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Industrial-grade_prime&quot; title=&quot;Industrial-grade prime&quot;&gt;Industrial-grade prime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;mw-selflink selflink&quot;&gt;Illegal prime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Formula_for_primes&quot; title=&quot;Formula for primes&quot;&gt;Formula for primes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Prime_gap&quot; title=&quot;Prime gap&quot;&gt;Prime gap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;First 50 primes&lt;/th&gt;
&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;
&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/2_(number)&quot; class=&quot;mw-redirect&quot; title=&quot;2 (number)&quot;&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/3_(number)&quot; class=&quot;mw-redirect&quot; title=&quot;3 (number)&quot;&gt;3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/5_(number)&quot; class=&quot;mw-redirect&quot; title=&quot;5 (number)&quot;&gt;5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/7_(number)&quot; class=&quot;mw-redirect&quot; title=&quot;7 (number)&quot;&gt;7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/11_(number)&quot; title=&quot;11 (number)&quot;&gt;11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/13_(number)&quot; title=&quot;13 (number)&quot;&gt;13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/17_(number)&quot; title=&quot;17 (number)&quot;&gt;17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/19_(number)&quot; title=&quot;19 (number)&quot;&gt;19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/23_(number)&quot; title=&quot;23 (number)&quot;&gt;23&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/29_(number)&quot; title=&quot;29 (number)&quot;&gt;29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/31_(number)&quot; title=&quot;31 (number)&quot;&gt;31&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/37_(number)&quot; title=&quot;37 (number)&quot;&gt;37&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/41_(number)&quot; title=&quot;41 (number)&quot;&gt;41&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/43_(number)&quot; title=&quot;43 (number)&quot;&gt;43&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/47_(number)&quot; title=&quot;47 (number)&quot;&gt;47&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/53_(number)&quot; title=&quot;53 (number)&quot;&gt;53&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/59_(number)&quot; title=&quot;59 (number)&quot;&gt;59&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/61_(number)&quot; title=&quot;61 (number)&quot;&gt;61&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/67_(number)&quot; title=&quot;67 (number)&quot;&gt;67&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/71_(number)&quot; title=&quot;71 (number)&quot;&gt;71&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/73_(number)&quot; title=&quot;73 (number)&quot;&gt;73&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/79_(number)&quot; title=&quot;79 (number)&quot;&gt;79&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/83_(number)&quot; title=&quot;83 (number)&quot;&gt;83&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/89_(number)&quot; title=&quot;89 (number)&quot;&gt;89&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/97_(number)&quot; title=&quot;97 (number)&quot;&gt;97&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/101_(number)&quot; title=&quot;101 (number)&quot;&gt;101&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/103_(number)&quot; title=&quot;103 (number)&quot;&gt;103&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/107_(number)&quot; title=&quot;107 (number)&quot;&gt;107&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/109_(number)&quot; title=&quot;109 (number)&quot;&gt;109&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/113_(number)&quot; title=&quot;113 (number)&quot;&gt;113&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/127_(number)&quot; title=&quot;127 (number)&quot;&gt;127&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/131_(number)&quot; title=&quot;131 (number)&quot;&gt;131&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/137_(number)&quot; title=&quot;137 (number)&quot;&gt;137&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/139_(number)&quot; title=&quot;139 (number)&quot;&gt;139&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/149_(number)&quot; title=&quot;149 (number)&quot;&gt;149&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/151_(number)&quot; title=&quot;151 (number)&quot;&gt;151&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/157_(number)&quot; title=&quot;157 (number)&quot;&gt;157&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/163_(number)&quot; title=&quot;163 (number)&quot;&gt;163&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/167_(number)&quot; title=&quot;167 (number)&quot;&gt;167&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/173_(number)&quot; title=&quot;173 (number)&quot;&gt;173&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/179_(number)&quot; title=&quot;179 (number)&quot;&gt;179&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/181_(number)&quot; title=&quot;181 (number)&quot;&gt;181&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/191_(number)&quot; title=&quot;191 (number)&quot;&gt;191&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/193_(number)&quot; title=&quot;193 (number)&quot;&gt;193&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/197_(number)&quot; title=&quot;197 (number)&quot;&gt;197&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/199_(number)&quot; title=&quot;199 (number)&quot;&gt;199&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/211_(number)&quot; title=&quot;211 (number)&quot;&gt;211&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/223_(number)&quot; title=&quot;223 (number)&quot;&gt;223&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/227_(number)&quot; title=&quot;227 (number)&quot;&gt;227&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/229_(number)&quot; title=&quot;229 (number)&quot;&gt;229&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;navbox-abovebelow&quot; colspan=&quot;2&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_prime_numbers&quot; title=&quot;List of prime numbers&quot;&gt;List of prime numbers&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;


&lt;!-- 
NewPP limit report
Parsed by mw1339
Cached time: 20180428034831
Cache expiry: 1900800
Dynamic content: false
CPU time usage: 0.136 seconds
Real time usage: 0.170 seconds
Preprocessor visited node count: 978/1000000
Preprocessor generated node count: 0/1500000
Post&amp;#8208;expand include size: 43482/2097152 bytes
Template argument size: 1960/2097152 bytes
Highest expansion depth: 12/40
Expensive parser function count: 1/500
Unstrip recursion depth: 0/20
Unstrip post&amp;#8208;expand size: 4049/5000000 bytes
Lua time usage: 0.042/10.000 seconds
Lua memory usage: 2.26 MB/50 MB
--&gt;
&lt;!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  116.091      1 -total
 58.20%   67.560      1 Template:Reflist
 45.47%   52.787      3 Template:Cite_web
 26.79%   31.106      1 Template:Prime_number_classes
 23.80%   27.634      1 Template:Navbox
 14.81%   17.197      1 Template:Use_dmy_dates
 10.16%   11.791      1 Template:DMCA
  8.58%    9.964      1 Template:Dated_maintenance_category
  7.97%    9.251     32 Template:Math
  5.85%    6.791      1 Template:FULLROOTPAGENAME
--&gt;
&lt;/div&gt;
&lt;!-- Saved in parser cache with key enwiki:pcache:idhash:160529-0!canonical and timestamp 20180428034854 and revision id 838611100
 --&gt;
&lt;noscript&gt;&lt;img src=&quot;https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&quot; alt=&quot;&quot; title=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; style=&quot;border: none; position: absolute;&quot;/&gt;&lt;/noscript&gt;&lt;/div&gt;					&lt;div class=&quot;printfooter&quot;&gt;
						Retrieved from &quot;&lt;a dir=&quot;ltr&quot; href=&quot;https://en.wikipedia.org/w/index.php?title=Illegal_prime&amp;amp;oldid=838611100&quot;&gt;https://en.wikipedia.org/w/index.php?title=Illegal_prime&amp;amp;oldid=838611100&lt;/a&gt;&quot;					&lt;/div&gt;
								&lt;div class=&quot;visualClear&quot;/&gt;
							</description>
<pubDate>Fri, 27 Apr 2018 06:57:15 +0000</pubDate>
<dc:creator>deadghost</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://en.wikipedia.org/wiki/Illegal_prime</dc:identifier>
</item>
<item>
<title>Intel&amp;#039;s 10nm Is Broken, Delayed Until 2019</title>
<link>https://www.tomshardware.com/news/intel-cpu-10nm-earnings-amd,36967.html</link>
<guid isPermaLink="true" >https://www.tomshardware.com/news/intel-cpu-10nm-earnings-amd,36967.html</guid>
<description>&lt;p&gt;&lt;span class=&quot;imgContent imgRight&quot;&gt;&lt;span class=&quot;iZoom&quot;&gt;&lt;img class=&quot;lazy&quot; data-src=&quot;https://img.purch.com/intel-manufacturing-16-jpg/w/195/aHR0cDovL21lZGlhLmJlc3RvZm1pY3JvLmNvbS9OL1AvNzY4MDg1L29yaWdpbmFsL0ludGVsLU1hbnVmYWN0dXJpbmctMTYuanBn&quot; big-src=&quot;https://img.purch.com/intel-manufacturing-16-jpg/o/aHR0cDovL21lZGlhLmJlc3RvZm1pY3JvLmNvbS9OL1AvNzY4MDg1L29yaWdpbmFsL0ludGVsLU1hbnVmYWN0dXJpbmctMTYuanBn&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Intel announced its financial results today, and although it posted yet another record quarter, the company unveiled serious production problems with its 10nm process. As a result, Intel announced that it is shipping yet more 14nm iterations this year. They'll come as Whiskey Lake processors destined for the desktop and Cascade Lake Xeons for the data center. &lt;/p&gt;
&lt;p&gt;Intel nailed a nearly perfect quarter with top-line numbers that include record Q1 revenue of $16.8 billion, which is up 16% year-over-year (YoY). The company also raised its guidance for the full year to $67.5 billion, which is a $2.5 billion bump over its previous guidance, but we'll circle back to those numbers later.&lt;/p&gt;
&lt;h3&gt;The 10nm Problems&lt;/h3&gt;
&lt;p&gt;Overall, Intel had a stellar quarter, but it originally promised that it would deliver the 10nm process back in 2015. After several delays, the company assured that it would deliver 10nm processors to market in 2017. That was further refined to the second half of this year.&lt;/p&gt;
&lt;p&gt;On the earnings call today, Intel announced that it had delayed high-volume 10nm production to an unspecified time in 2019. Meanwhile, its competitors, like TSMC, are beginning high volume manufacturing of 7nm alternatives.&lt;/p&gt;
&lt;p&gt;Recent semiconductor node naming conventions aren't based on traditional measurements, so they're more of a marketing exercise than a science-based metric. That means that TSMC's 7nm isn't entirely on par with Intel's 10nm process. However, continued process node shrinks at other fabs show that other companies are successfully outmaneuvering the production challenges of smaller lithographies.&lt;/p&gt;
&lt;p&gt;Intel's CEO Brian Krzanich repeatedly pressed the point that the company is shipping Cannon Lake in low volume, but the company hasn't pointed to specific customers or products. &lt;a target=&quot;_blank&quot; href=&quot;https://www.tomshardware.com/news/intel-ces-10nm-processor,36289.html&quot;&gt;And we've asked&lt;/a&gt;. As we pointed out earlier this year, the delay may seem a minor matter, but Intel has sold processors based on the underlying Skylake microarchitecture since 2015, and it's been stuck at the 14nm process since 2014. That means Intel is on the fourth (or fifth) iteration of the same process, which has hampered its ability to bring new microarchitectures to market. That doesn't bode well for a company that regularly claims its process node technology is three years ahead of its competitors.&lt;span class=&quot;imgContent imgRight&quot;&gt;&lt;span class=&quot;iZoom&quot;&gt;&lt;img class=&quot;lazy&quot; data-src=&quot;https://img.purch.com/intel-manufacturing-8-jpg/w/195/aHR0cDovL21lZGlhLmJlc3RvZm1pY3JvLmNvbS9QL1gvNzY4MTY1L29yaWdpbmFsL0ludGVsLU1hbnVmYWN0dXJpbmctOC5qcGc=&quot; big-src=&quot;https://img.purch.com/intel-manufacturing-8-jpg/o/aHR0cDovL21lZGlhLmJlc3RvZm1pY3JvLmNvbS9QL1gvNzY4MTY1L29yaWdpbmFsL0ludGVsLU1hbnVmYWN0dXJpbmctOC5qcGc=&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Krzanich explained that the company &quot;bit off a little too much on this thing&quot; by increasing 10nm density 2.7X over the 14nm node. By comparison, Intel increased density by only 2.4X when it moved to 14nm. Although the difference may be small, Krzanich pointed out that the industry average for density improvements is only 1.5-2X per node transition. Because of the production difficulties with 10nm, Intel has revised its density target back to 2.4X for the transition to the 7nm node. Intel will also lean more on heterogeneous architectures with its EMIB technology (which we &lt;a href=&quot;https://www.tomshardware.com/news/intel-emib-interconnect-fpga-chiplet,35316.html&quot; target=&quot;_blank&quot;&gt;covered here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;10nm is Intel's last process based on traditional photolithography, and though Krzanich didn’t dive deep into details, he listed the lithography technique as a significant contributor to the low 10nm yields. The company will switch to EUV at 7nm. Currently, Intel's multipatterning process is generating too many yield-reducing defects to produce 10nm cost-effectively. Krzanich says the company has identified the issue and is moving to correct it, but the fixes will take an unspecified amount of time to impact yields significantly. Intel was unwilling to commit to high volume production in the first half of 2019, so it's possible 10nm will be delayed until the second half of the year. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We continue to make progress on our 10-nanometer process. We are shipping in low volume and yields are improving, but the rate of improvement is slower than we anticipated. As a result, volume production is moving from the second half of 2018 into 2019&lt;strong&gt;. We understand the yield issues and have defined improvements for them, but they will take time to implement and qualify.&lt;/strong&gt; We have leadership products on the roadmap that continue to take advantage of 14-nanometer, with Whiskey Lake for clients and Cascade Lake for the data center coming later this year.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Krzanich’s statement says that while Intel has defined the fixes, it hasn’t actually tested them in high-volume manufacturing. That means the company could turn back to the drawing board soon if the fixes aren’t effective.&lt;/p&gt;
&lt;p&gt;That's likely the impetus for Intel's confirmation today that it &lt;a href=&quot;https://www.tomshardware.com/news/amd-intel-jim-keller-hire,36963.html&quot;&gt;realigned its critical Technology and Manufacturing Group&lt;/a&gt;, which produces the company's silicon, under new leadership. Intel also made a timely pre-earnings-call announcement today that it had &lt;a target=&quot;_blank&quot; href=&quot;https://www.tomshardware.com/news/amd-intel-jim-keller-hire,36963.html&quot;&gt;brought in famed chip architect Jim Keller to head up its silicon design initiatives&lt;/a&gt;. This was likely a move to assure investors that the 10nm production issues have Intel's full attention.&lt;/p&gt;
&lt;p&gt;Unfortunately, process technologies require extensive incubation periods, so it could take some time before leadership changes have a significant impact on Intel's roadmap. Intel's obviously bringing the pieces together quickly, but its competitors, such as AMD, are executing well on their future architectures. AMD already &lt;a target=&quot;_blank&quot; href=&quot;https://www.tomshardware.com/news/amd-earnings-call-tsmc-7nm-gpu,36957.html&quot;&gt;has working 7nm GPUs in its labs&lt;/a&gt; and projects it will sample 7nm EPYC 2 processors this year. Both will be in volume production early next year.&lt;/p&gt;
&lt;h3&gt;Thoughts&lt;br/&gt;&lt;/h3&gt;
&lt;p&gt;Intel's late 10nm process has led to stagnation on the microarchitecture development front, and the problems are even larger than they appear on the surface. As the financial results below clearly outline, &lt;a href=&quot;https://www.tomshardware.com/news/intel-cpu-market-jobs-cut,31640.html&quot; target=&quot;_blank&quot;&gt;the company is successfully diversifying&lt;/a&gt; into AI, the data center, autonomous driving, 5G, FPGAs, and IoT, among other climes. &lt;a href=&quot;https://www.tomshardware.com/news/amd-loses-raja-kofuri-to-intel,35885.html&quot; target=&quot;_blank&quot;&gt;It's even added GPUs&lt;/a&gt; to the list.&lt;/p&gt;
&lt;p&gt;Unfortunately, Intel's process technology touches every segment of all that tech, as well as the chips that power them. 10nm's late arrival could hamper Intel's competitiveness in nearly all of those segments, and all this comes as Intel is expanding into &lt;em&gt;new&lt;/em&gt; segments that already have dominant and entrenched players with deep pockets. Krzanich did point out that Intel has improved 14nm's performance by 70% since its debut in 2014, but the company will surely reach a diminishing point of returns soon.&lt;/p&gt;
&lt;p&gt;Intel's relatively flat R&amp;amp;D spend (+3%) is certainly not encouraging, given the current climate. The company will likely switch to second-gen 10nm+ due to its yield issues with 10nm, but it did not confirm the change during the earnings call. Krzanich did say the company will not skip to the 7nm node. Instead, it will apply its learning from the 10nm node to the 7nm process.&lt;/p&gt;
&lt;p&gt;Krzanich also admitted that the company's density lead over competing fabs is shrinking. Intel has long been the keeper of the Moore's Law flame, and the company has continued to insist that the Law is still alive long after other companies have conceded that it expired. We'll have to see if Intel changes its messaging, but we're a long time removed from the Tick-Tock cadence. Considering that Intel hasn't delivered a smaller process in significant volumes since 2014, it's fair to say that the original Moore's Law is officially dead.&lt;/p&gt;
&lt;h3&gt;The Financials&lt;/h3&gt;
&lt;p&gt;Intel's Client Computing Group (CCG) posted strong financial results. The group focuses on processors for laptops and desktops and has been under an extended assault from AMD, which continues to enjoy brisk momentum. Intel's CCG group posted $8.2 billion in revenue, a 3% YoY gain, but this is largely due to increased average selling prices and strength in enthusiast processor sales.&lt;/p&gt;

&lt;p&gt;The company suffered an 8% decline in notebook processor sales and a 6% reduction in desktop CPU sales compared to last year. Intel cites a shrinking addressable market as a key contributor, but a recent market report from &lt;a target=&quot;_blank&quot; href=&quot;https://www.idc.com/getdoc.jsp?containerId=prUS43734318&quot;&gt;IDC&lt;/a&gt; says that PC volumes were flat, while competing bean counter &lt;a target=&quot;_blank&quot; href=&quot;https://www.gartner.com/newsroom/id/3871149&quot;&gt;Gartner&lt;/a&gt; says that PC shipments declined 1.4% compared to the first quarter of last year. Intel did notch a 4% gain in laptop sales compared to last year.&lt;/p&gt;
&lt;p&gt;It isn't clear how much of this decline is due to AMD's continued success, but AMD told us that it has gained up to 50% of the CPU sales to DIYers at retailers like Amazon and Newegg. AMD also &lt;a target=&quot;_blank&quot; href=&quot;https://www.tomshardware.com/news/amd-earnings-call-tsmc-7nm-gpu,36957.html&quot;&gt;reported a 95% increase in its CPU and graphics business&lt;/a&gt; last quarter, but it's hard to determine how much of that stems from processor sales alone.&lt;/p&gt;

&lt;p&gt;Intel's Data Center Group (DCG) grew revenue 24% on sales of pricey Xeon Scalable models, but Intel is reducing its guidance for server sales in the second half of the year, citing &quot;tougher competition going into the second half.&quot; That is likely in reference to the combination of AMD's EPYC processors and new ARM competitors from Qualcomm.&lt;/p&gt;
&lt;p&gt;Intel has spent the last year transitioning to &quot;data-centric&quot; businesses, which are largely composed of data center processors. This comes as the company reduces its reliance on the bread-and-butter PC segment. DCG contributed 46% of Intel's revenue in Q1, so that plan is apparently on track. &lt;/p&gt;
&lt;p&gt;Intel's Non-Volatile Storage Group segment produces NAND and 3D XPoint. NSG revenue is also up 20%, while the Programmable Solutions Group, which produces FPGAs, is up 17%.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Apr 2018 04:17:20 +0000</pubDate>
<dc:creator>ry4n413</dc:creator>
<og:url>https://www.tomshardware.com/news/intel-cpu-10nm-earnings-amd,36967.html</og:url>
<og:title>Intel's 10nm Is Broken, Delayed Until 2019</og:title>
<og:description>Intel announced its financial results today, and although it posted yet another record quarter, Intel unveiled serious production problems with its 10nm process.</og:description>
<og:image>https://img.purch.com/o/aHR0cHM6Ly9pbWcucHVyY2guY29tL3cvNTAwL2FIUjBjRG92TDIxbFpHbGhMbUpsYzNSdlptMXBZM0p2TG1OdmJTOU9MMUF2TnpZNE1EZzFMMjl5YVdkcGJtRnNMMGx1ZEdWc0xVMWhiblZtWVdOMGRYSnBibWN0TVRZdWFuQm4=</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tomshardware.com/news/intel-cpu-10nm-earnings-amd,36967.html</dc:identifier>
</item>
</channel>
</rss>