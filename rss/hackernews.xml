<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>We’re sorry, and we’re not rolling out the fees change</title>
<link>https://blog.patreon.com/not-rolling-out-fees-change/</link>
<guid isPermaLink="true" >https://blog.patreon.com/not-rolling-out-fees-change/</guid>
<description>&lt;div class=&quot;fixed-counters&quot;&gt;
&lt;div class=&quot;essb_links essb_counters essb_displayed_shortcode essb_share essb_template_default4-retina essb_1929862094 print-no&quot; id=&quot;essb_displayed_shortcode_1929862094&quot; data-essb-postid=&quot;6813&quot; data-essb-position=&quot;shortcode&quot; data-essb-button-style=&quot;icon&quot; data-essb-template=&quot;default4-retina&quot; data-essb-counter-pos=&quot;hidden&quot; data-essb-url=&quot;https://blog.patreon.com/not-rolling-out-fees-change/&quot; data-essb-twitter-url=&quot;https://blog.patreon.com/not-rolling-out-fees-change/&quot; data-essb-instance=&quot;1929862094&quot;&gt;
&lt;ul class=&quot;essb_links_list essb_force_hide_name essb_force_hide&quot;&gt;&lt;li class=&quot;essb_item essb_link_facebook nolightbox&quot;/&gt;
&lt;li class=&quot;essb_item essb_link_twitter nolightbox&quot;/&gt;
&lt;li class=&quot;essb_item essb_link_linkedin nolightbox&quot;/&gt;
&lt;li class=&quot;essb_item essb_link_mail nolightbox&quot;/&gt;
&lt;li class=&quot;essb_item essb_totalcount_item&quot; data-counter-pos=&quot;hidden&quot;&gt;&lt;span class=&quot;essb_totalcount essb_t_r_big&quot; title=&quot;&quot; data-shares-text=&quot;shares&quot;&gt;&lt;span class=&quot;essb_t_nb&quot;&gt;16.1K&lt;span class=&quot;essb_t_nb_after&quot;&gt;shares&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;span&gt;Creators and Patrons,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We’ve heard you loud and clear. We’re not going to rollout the changes to our payments system that&lt;/span&gt; &lt;a href=&quot;https://blog.patreon.com/updating-patreons-fee-structure/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;we announced last week&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. We still have to fix the problems that those changes addressed, but we’re going to fix them in a different way, and we’re going to work&lt;/span&gt; &lt;em&gt;&lt;span&gt;with you to come up with the specifics,&lt;/span&gt;&lt;/em&gt; &lt;span&gt;as we should have done the first time around. Many of you lost patrons, and you lost income. No apology will make up for that, but nevertheless, I’m sorry. It is our core belief that you should own the relationships with your fans. These are&lt;/span&gt; &lt;em&gt;&lt;span&gt;your&lt;/span&gt;&lt;/em&gt; &lt;span&gt;businesses, and they are&lt;/span&gt; &lt;em&gt;&lt;span&gt;your&lt;/span&gt;&lt;/em&gt; &lt;span&gt;fans.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I’ve spent hours and hours on the phone with creators, and so has the Patreon team. Your feedback has been crystal clear:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;The new payments system disproportionately impacted $1 – $2 patrons. We have to build a better system for them.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Aggregation is highly-valued, and we underestimated that.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Fundamentally, creators should own the business decisions with their fans, not Patreon. We overstepped our bounds and injected ourselves into that relationship, against our core belief as a business.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;We recognize that we need to be better at involving you more deeply and earlier in these kinds of decisions and product changes. Additionally, we need to give you a more flexible product and platform to allow you to own the way you run your memberships.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I know it will take a long time for us to earn back your trust. But we are utterly devoted to your success and to getting you&lt;/span&gt; &lt;strong&gt;sustainable, reliable income&lt;/strong&gt; &lt;span&gt;for being a creator. We will work harder than ever to build you tools, functionality, and income, and our team won’t rest until Patreon is making that happen.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you haven’t sent us a note yet, or if you don’t see your concerns listed above, please leave us your feedback &lt;a href=&quot;https://jamiec1.typeform.com/to/gvucuX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thanks for continuing to create. We are nothing without you, and we know that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Jack&lt;/span&gt;&lt;/p&gt;


</description>
<pubDate>Wed, 13 Dec 2017 18:13:35 +0000</pubDate>
<dc:creator>JoshTriplett</dc:creator>
<og:type>article</og:type>
<og:title>We messed up. We’re sorry, and we’re not rolling out the fees change.</og:title>
<og:description>Creators and Patrons, We’ve heard you loud and clear. We’re not going to rollout the changes to our payments system</og:description>
<og:url>https://blog.patreon.com/not-rolling-out-fees-change/</og:url>
<og:image>https://blog.patreon.com/wp-content/uploads/2017/12/servicefeeblogpost3.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.patreon.com/not-rolling-out-fees-change/</dc:identifier>
</item>
<item>
<title>A plane flying over Germany drawing a Christmas tree</title>
<link>https://www.flightradar24.com/AIB232E/fd1fd63</link>
<guid isPermaLink="true" >https://www.flightradar24.com/AIB232E/fd1fd63</guid>
<description>&lt;p&gt;BROWSER COMPATIBILITY WARNING&lt;/p&gt;
&lt;p&gt;3D view is not compatible with your current web browser.&lt;/p&gt;
&lt;p&gt;Some functionality may not work as intended or may cause your browser to crash.&lt;/p&gt;
&lt;div class=&quot;row&quot;&gt;We recommend installing &lt;a class=&quot;link&quot; target=&quot;_blank&quot; href=&quot;http://www.google.com/chrome&quot;&gt;Google Chrome&lt;/a&gt; for best experience.&lt;/div&gt;


&lt;p&gt;I understand, start 3D view anyway&lt;/p&gt;
</description>
<pubDate>Wed, 13 Dec 2017 15:08:50 +0000</pubDate>
<dc:creator>Jamie452</dc:creator>
<og:title>Flightradar24.com - Live flight tracker!</og:title>
<og:url>https://www.flightradar24.com/AIB232E/fd1fd63</og:url>
<og:type>website</og:type>
<og:description>View flight from Hamburg to Hamburg on Flightradar24</og:description>
<og:image>https://www.flightradar24.com/flights/get-static-map?data=Y2xpZW50PWdtZS1mbGlnaHRyYWRhcjI0YWIxJnNpemU9MTIwMHg2MzAmbWFwdHlwZT1yb2FkbWFwJm1hcmtlcnM9YW5jaG9yOmNlbnRlcnxpY29uOmh0dHBzOi8vd3d3LmZsaWdodHJhZGFyMjQuY29tL3N0YXRpYy9pbWFnZXMvbWFwX21hcmtlcl9zdGFydC5wbmd8NTMuNTI5OTk5LDkuODMwMDAwJm1hcmtlcnM9YW5jaG9yOjMyLDU2fGljb246aHR0cHM6Ly93d3cuZmxpZ2h0cmFkYXIyNC5jb20vc3RhdGljL2ltYWdlcy9haXJwb3J0X3Bpbl9ibHVlLnBuZ3w1My41Mjk5OTksOS44MzAwMDAmcGF0aD1jb2xvcjoweGVhNWIwY2ZmfGdlb2Rlc2ljOnRydWV8d2VpZ2h0OjN8NTMuNTI5OTk5LDkuODMwMDAwfDUzLjUyOTk5OSw5LjgzMDAwMCZzaWduYXR1cmU9a1lodnhvV0NIa21EVWU2TkQ4QktTNXRXZWx3PQ==</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.flightradar24.com/AIB232E/fd1fd63</dc:identifier>
</item>
<item>
<title>Universities spend millions on accessing results of publicly funded research</title>
<link>https://theconversation.com/universities-spend-millions-on-accessing-results-of-publicly-funded-research-88392</link>
<guid isPermaLink="true" >https://theconversation.com/universities-spend-millions-on-accessing-results-of-publicly-funded-research-88392</guid>
<description>&lt;p&gt;University research is generally funded from the public purse. The results, however, are published in peer-reviewed academic journals, many of which charge subscription fees.&lt;/p&gt;
&lt;p&gt;I had to use freedom of information laws to determine how much universities in New Zealand spend on journal subscriptions to give researchers and students access to the latest research - and I found they paid almost US$15 million last year to just four publishers.&lt;/p&gt;
&lt;p&gt;There are additional costs, too. Paywalls on research hold up scientific progress and limit the public’s access to the latest information.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &lt;a href=&quot;https://theconversation.com/not-just-available-but-also-useful-we-must-keep-pushing-to-improve-open-access-to-research-86058&quot;&gt;Not just available, but also useful: we must keep pushing to improve open access to research&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;The project took more than three years because universities originally refused to release the information. I had to make a complaint to the Ombudsman, the government official charged with determining whether information from the state sector should be publicly disclosed.&lt;/p&gt;
&lt;p&gt;The Ombudsman’s &lt;a href=&quot;https://doi.org/10.6084/m9.figshare.5673583&quot;&gt;final opinion&lt;/a&gt; ruled unambiguously that the public’s right to know outweighs any commercial interests of the publishers and universities.&lt;/p&gt;
&lt;h2&gt;The cost of knowledge&lt;/h2&gt;
&lt;p&gt;The following points stand out in a preliminary analysis of spending by New Zealand universities on subscriptions to journals from Elsevier, Springer, Wiley and Taylor &amp;amp; Francis between 2013 and 2016.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;The total amount spent on the four publishers is substantial, around US$14.9 million in 2016 (the total spending on all publishers is likely at least 2-3 times that). The University of Auckland, with 33000 students and 2200 academic and research staff, spent US$3.8 million, including US$1.6 million on Elsevier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The mean expenditure per academic/research staff member in 2016 was around US$1800.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The University of Canterbury is getting a much worse deal than the others, 35% above the mean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The rate of increase of subscription costs (17%) over the period clearly exceeds the Consumer Price Index inflation rate over the period (2-3% in New Zealand, USA and Europe).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The publisher with the highest percentage increase over the period was Taylor &amp;amp; Francis (33%).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Obtaining the information&lt;/h2&gt;
&lt;p&gt;Many journal subscription prices are high (for example, the prominent biology journal Cell is over US$2000 per year), especially given that the funding for the research typically comes from public sources.&lt;/p&gt;
&lt;p&gt;With the advent of the internet, many people predicted a major drop in expenditure on journals, but the opposite &lt;a href=&quot;http://lj.libraryjournal.com/2017/04/publishing/new-world-same-model-periodicals-price-survey-2017/#_&quot;&gt;has occurred&lt;/a&gt;. One reason is that the main commercial publishers use anti-competitive practices such as bundling of unrelated journals (so-called “&lt;a href=&quot;http://econ.ucsb.edu/%7Etedb/Journals/BundleContracts.html&quot;&gt;Big Deals&lt;/a&gt;”) and &lt;a href=&quot;https://www.youtube.com/watch?v=4JsNT1gKe7I&quot;&gt;confidentiality clauses in contracts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Price secrecy allows sellers to use differential pricing and weaken the negotiating situation of buyers, leading to market inefficiency. The fact that &lt;a href=&quot;https://en.wikipedia.org/wiki/Ingelfinger_rule&quot;&gt;each journal has a monopoly&lt;/a&gt; on its specific content means that journals cannot be easily substituted by others.&lt;/p&gt;
&lt;p&gt;In 2014, Timothy Gowers and others used freedom of information laws to &lt;a href=&quot;https://gowers.wordpress.com/2014/04/24/elsevier-journals-some-facts/&quot;&gt;extract the relevant price information from universities in the UK&lt;/a&gt;. In 2009, less extensive &lt;a href=&quot;http://www.pnas.org/content/111/26/9425.abstract&quot;&gt;work in the USA&lt;/a&gt; had also been done by Ted Bergstrom and colleagues. Data from &lt;a href=&quot;https://avointiede.fi/web/openscience/publisher_costs&quot;&gt;Finland&lt;/a&gt; and &lt;a href=&quot;http://www.vsnu.nl/en_GB/cost-of-publication&quot;&gt;Netherlands&lt;/a&gt; has recently been made public.&lt;/p&gt;
&lt;p&gt;I requested data from seven of New Zealand’s eight universities, which collectively have around 8400 academic/research staff and 130000 students. The process was long and required persistence. Following the Ombudsman’s ruling, the universities complied, supplying me with data on spending on journals from Elsevier, Springer, Wiley and Taylor &amp;amp; Francis.&lt;/p&gt;

&lt;p&gt;There are some subtleties, such as assumptions about exchange rate conversions and exactly which products from the listed publishers the money is spent on. Interested readers can consult the &lt;a href=&quot;https://doi.org/10.6084/m9.figshare.5656054&quot;&gt;raw data&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Is open access the answer?&lt;/h2&gt;
&lt;p&gt;The restricted access inherent in the subscription model makes it hard for journalists, politicians and the general public to use scholarship for better evidence-based decision making.&lt;/p&gt;
&lt;p&gt;Recently, open access journals have emerged. They place no barriers on readers but still have production costs. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_access#Journals:_gold_open_access&quot;&gt;“Gold Open Access” model&lt;/a&gt;, in which authors or funders typically pay for each article, has become popular with traditional publishers. They often set the article processing charge level at around US$2000 to US$3000.&lt;/p&gt;
&lt;p&gt;The analysis above implies that wholesale conversion to such article processing charges will not save money for universities. &lt;a href=&quot;http://bjoern.brembs.net/2017/11/is-a-cost-neutral-transition-to-open-access-realistic/&quot;&gt;Several independent estimates&lt;/a&gt; put a reasonable article processing charge at no more than US$500 (less in some disciplines).&lt;/p&gt;
&lt;p&gt;The key problem is not the particular model of payment for journal article production and distribution, but the dysfunctional market in publishing services. Although they are a large part of the problem, commercial publishers are not entirely to blame. For example, the research community uses historical journal reputation to evaluate researchers, making it harder for new, better run journals to enter the market.&lt;/p&gt;
&lt;h2&gt;The right kind of open access&lt;/h2&gt;
&lt;p&gt;Even with the best will in the world, there is an inevitable time lag for new journals to become established. To make faster progress, it is necessary to decouple the ownership of current journal titles from the provision of editorial and publication services, so that competition among publishers helps to control prices. This reclaiming of community control is the most fundamental of the recently formalised &lt;a href=&quot;http://fairoa.org&quot;&gt;Fair Open Access Principles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;New organisations such as &lt;a href=&quot;http://mathoa.org/&quot;&gt;MathOA&lt;/a&gt;, &lt;a href=&quot;http://psyoa.org&quot;&gt;PsyOA&lt;/a&gt;, &lt;a href=&quot;http://lingoa.eu&quot;&gt;LingOA&lt;/a&gt; and the &lt;a href=&quot;http://fairoa.org&quot;&gt;Fair Open Access Alliance&lt;/a&gt; have been set up to facilitate large-scale conversion of subscription journals to an open access model, with community control of journals and no direct author payments. This of course involves mass defections by editorial boards.&lt;/p&gt;
&lt;p&gt;We expect that global savings of at least 75% of current payments to journals can be made by using modern publishing providers such as &lt;a href=&quot;https://scholasticahq.com/&quot;&gt;Scholastica&lt;/a&gt; and &lt;a href=&quot;https://www.ubiquitypress.com/&quot;&gt;Ubiquity&lt;/a&gt;, and by reallocating subscription payments toward article processing charges. What is the research community waiting for?&lt;/p&gt;
</description>
<pubDate>Wed, 13 Dec 2017 09:59:42 +0000</pubDate>
<dc:creator>versteegen</dc:creator>
<og:title>Universities spend millions on accessing results of publicly funded research</og:title>
<og:description>Universities in New Zealand spent close to US$15 million on subscriptions to just four publishers in 2016, data that was only released following a request to the Ombudsman.</og:description>
<og:type>article</og:type>
<og:image>https://images.theconversation.com/files/198056/original/file-20171207-31552-nb47pq.jpg?ixlib=rb-1.1.0&amp;q=45&amp;auto=format&amp;w=1356&amp;h=668&amp;fit=crop</og:image>
<og:url>http://theconversation.com/universities-spend-millions-on-accessing-results-of-publicly-funded-research-88392</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://theconversation.com/universities-spend-millions-on-accessing-results-of-publicly-funded-research-88392</dc:identifier>
</item>
<item>
<title>Avast open-sources its machine-code decompiler</title>
<link>https://blog.avast.com/avast-open-sources-its-machine-code-decompiler</link>
<guid isPermaLink="true" >https://blog.avast.com/avast-open-sources-its-machine-code-decompiler</guid>
<description>&lt;span class=&quot;meta&quot;&gt;&lt;a href=&quot;https://blog.avast.com/author/threat-intelligence-team&quot;&gt;&lt;span class=&quot;meta-author-image&quot;&gt;&lt;img src=&quot;https://blog.avast.com/hubfs/authors/blog.png?t=1513189714580&quot; /&gt;&lt;/span&gt;&lt;/a&gt; &lt;span class=&quot;meta-author&quot;&gt;&lt;a href=&quot;https://blog.avast.com/author/threat-intelligence-team&quot;&gt;Threat Intelligence Team&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;meta-added&quot;&gt;&lt;span&gt;,&lt;/span&gt; 12 December 2017&lt;/span&gt;&lt;/span&gt;&lt;p class=&quot;perex&quot;&gt;After seven years of development, Avast open-sources its machine-code decompiler for platform-independent analysis of executable files.&lt;/p&gt;
&lt;span id=&quot;hs_cos_wrapper_post_body&quot; class=&quot;hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text&quot; data-hs-cos-general-type=&quot;meta_field&quot; data-hs-cos-type=&quot;rich_text&quot;&gt;&lt;/span&gt;
&lt;p&gt;&lt;span id=&quot;hs_cos_wrapper_post_body&quot; class=&quot;hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text&quot; data-hs-cos-general-type=&quot;meta_field&quot; data-hs-cos-type=&quot;rich_text&quot;&gt;&lt;span&gt;Avast released its analytical tool, RetDec, to help the cybersecurity community fight malicious software. The tool allows anyone to study the code of applications to see what the applications do, without running them. Let's fight the bad guys together!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As we announced in our&lt;/span&gt; &lt;a href=&quot;https://botconf2017.sched.com/event/CtGx/retdec-an-open-source-machine-code-decompiler&quot;&gt;&lt;span&gt;Botconf 2017&lt;/span&gt;&lt;/a&gt; &lt;span&gt;presentation at the beginning of December (&lt;/span&gt;&lt;a href=&quot;https://retdec.com/web/files/publications/retdec-slides-botconf-2017.pdf&quot;&gt;&lt;span&gt;slides&lt;/span&gt;&lt;/a&gt;&lt;span&gt;), RetDec, our machine-code decompiler, is now open, which means anyone can freely use it, study its source code, modify it, and redistribute it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The goal behind open sourcing RetDec is to provide a generic tool to transform platform-specific code, such as x86/PE executable files, into a higher form of representation, such as C source code. By&lt;/span&gt; &lt;em&gt;&lt;span&gt;generic&lt;/span&gt;&lt;/em&gt;&lt;span&gt;, we mean that the tool should not be limited to a single platform, but rather support a variety of platforms, including different architectures, file formats, and compilers. At Avast, RetDec is actively used for analysis of malicious samples for various platforms, such as x86/PE and ARM/ELF.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The source code of the decompiler and other related tools is now available&lt;/span&gt; &lt;a href=&quot;https://github.com/avast-tl/retdec&quot;&gt;&lt;span&gt;on GitHub&lt;/span&gt;&lt;/a&gt; &lt;span&gt;under the MIT license. By open-sourcing the decompiler, we would like to make its use more widespread and invite others to cooperate with us on its continued development.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;What is a decompiler?&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Before we dive into how RetDec works, let’s briefly explain how decompilers work, in general.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A decompiler is a program that takes an executable file as its input and attempts to transform it into a high-level representation while preserving its functionality. For example, the input file may be&lt;/span&gt; &lt;em&gt;&lt;span&gt;application.exe&lt;/span&gt;&lt;/em&gt;&lt;span&gt;, and the output can be source code in a higher-level programming language, such as C. A decompiler is, therefore, the exact opposite of a compiler, which compiles source files into executable files; this is why decompilers are sometimes also called&lt;/span&gt; &lt;em&gt;&lt;span&gt;reverse compilers&lt;/span&gt;&lt;/em&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;By preserving a program's functionality, we want the source code to reflect what the input program does as accurately as possible; otherwise, we risk assuming the program does one thing, when it really does another.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Generally, decompilers are unable to perfectly reconstruct original source code, due to the fact that a lot of information is lost during the compilation process. Furthermore, malware authors often use various obfuscation and anti-decompilation tricks to make the decompilation of their software as difficult as possible.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;RetDec addresses the above mentioned issues by using a large set of supported architectures and file formats, as well as in-house heuristics and algorithms to decode and reconstruct applications. RetDec is also the only decompiler of its scale using a proven LLVM infrastructure and provided for free, licensed under MIT.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Decompilers can be used in a variety of situations. The most obvious is reverse engineering when searching for bugs, vulnerabilities, or analyzing malicious software. Decompilation can also be used to retrieve lost source code when comparing two executables, or to verify that a compiled program does exactly what is written in its source code.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;You may have already heard about disassemblers and may think that a decompiler is basically the same thing. Wrong. There are several important differences between a decompiler and a disassembler. The former tries to reconstruct an executable file into a platform-agnostic, high-level source code, while the latter gives you low-level, platform-specific assembly instructions. The assembly output is non-portable, error-prone when modified, and requires specific knowledge about the instruction set of the target processor. Another positive aspect of decompilers is the high-level source code they produce, like  C source code, which can be read by people who know nothing about the assembly language for the particular processor being analyzed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We would like to note that many different types of decompilers exist. RetDec is a&lt;/span&gt; &lt;em&gt;&lt;span&gt;machine-code&lt;/span&gt;&lt;/em&gt; &lt;span&gt;decompiler, which means it only supports the decompilation of programs executing native processor code (e.g. for Intel x86). A machine-code decompiler is thus unable to decompile bytecode (e.g. .NET, Python, Java).&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Introducing RetDec:  Avast's machine-code decompiler&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;RetDec is a machine-code decompiler that has been in development since 2011. It was originally created as a joint project by the  &lt;/span&gt;&lt;a href=&quot;http://www.fit.vutbr.cz/.en&quot;&gt;&lt;span&gt;Faculty of Information Technology of the Brno University of Technology&lt;/span&gt;&lt;/a&gt; &lt;span&gt;in the Czech Republic, and AVG Technologies. Since the acquisition of AVG Technologies by Avast in 2016, Avast has continued to develop the decompiler.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=320&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg&quot; alt=&quot;Avast_blog_retargetable_decompiler-1.jpg&quot; width=&quot;320&quot; srcset=&quot;https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=160&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg 160w, https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=320&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg 320w, https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=480&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg 480w, https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=640&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg 640w, https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=800&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg 800w, https://blog.avast.com/hs-fs/hubfs/Avast_blog_retargetable_decompiler-1.jpg?t=1513189714580&amp;amp;width=960&amp;amp;name=Avast_blog_retargetable_decompiler-1.jpg 960w&quot; sizes=&quot;(max-width: 320px) 100vw, 320px&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The name RetDec stands for&lt;/span&gt; &lt;em&gt;&lt;span&gt;Retargetable Decompiler&lt;/span&gt;&lt;/em&gt;&lt;span&gt;. We have already explained what a decompiler is, but what is a&lt;/span&gt; &lt;em&gt;&lt;span&gt;retargetable&lt;/span&gt;&lt;/em&gt; &lt;span&gt;decompiler? We decided to give the decompiler the name because it is not limited to a single target architecture, operating system, or executable file format.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To give you an idea what the decompiler can do, let’s look at an overview of its features:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Supported file formats: ELF, PE, Mach-O, COFF, AR (archive), Intel HEX, and raw machine code.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Supported architectures (32b only): Intel x86, ARM, MIPS, PIC32, and PowerPC.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Static analysis of executable files with detailed information.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Compiler and packer detection.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Loading and instruction decoding.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Signature-based removal of statically linked library code.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Extraction and utilization of debugging information (DWARF, PDB).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Reconstruction of instruction idioms.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Detection and reconstruction of C++ class hierarchies (RTTI, vtables).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Demangling of symbols from C++ binaries (GCC, MSVC, Borland).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Reconstruction of functions, types, and high-level constructs.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Integrated disassembler.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Output in two high-level languages: C and a Python-like language.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Generation of call graphs, control-flow graphs, and various statistics.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;IDA plugin that allows decompilation of files directly from the IDA disassembler.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;That sounds great! Where can I try the decompiler?&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The easiest way to try out the decompiler is via our&lt;/span&gt; &lt;a href=&quot;https://retdec.com/decompilation/&quot;&gt;&lt;span&gt;web service&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. From your favorite web browser, you simply upload the executable file you want to decompile and press the decompilation button. After the decompilation finishes, you can view the results:&lt;/span&gt;&lt;/p&gt;
&lt;img src=&quot;https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=680&amp;amp;height=302&amp;amp;name=retargeting_decompiler_1.png&quot; alt=&quot;retargeting_decompiler_1.png&quot; width=&quot;680&quot; height=&quot;302&quot; srcset=&quot;https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=340&amp;amp;height=151&amp;amp;name=retargeting_decompiler_1.png 340w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=680&amp;amp;height=302&amp;amp;name=retargeting_decompiler_1.png 680w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=1020&amp;amp;height=453&amp;amp;name=retargeting_decompiler_1.png 1020w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=1360&amp;amp;height=604&amp;amp;name=retargeting_decompiler_1.png 1360w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=1700&amp;amp;height=755&amp;amp;name=retargeting_decompiler_1.png 1700w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_1.png?t=1513189714580&amp;amp;width=2040&amp;amp;height=906&amp;amp;name=retargeting_decompiler_1.png 2040w&quot; sizes=&quot;(max-width: 680px) 100vw, 680px&quot; /&gt;&lt;p&gt;&lt;span&gt;If you have IDA disassembler installed, you can use our&lt;/span&gt; &lt;a href=&quot;https://retdec.com/idaplugin/&quot;&gt;&lt;span&gt;IDA plugin&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to perform decompilations directly within IDA:&lt;/span&gt;&lt;/p&gt;
&lt;img src=&quot;https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=680&amp;amp;height=413&amp;amp;name=retargeting_decompiler_2.png&quot; alt=&quot;retargeting_decompiler_2.png&quot; width=&quot;680&quot; height=&quot;413&quot; srcset=&quot;https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=340&amp;amp;height=207&amp;amp;name=retargeting_decompiler_2.png 340w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=680&amp;amp;height=413&amp;amp;name=retargeting_decompiler_2.png 680w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=1020&amp;amp;height=620&amp;amp;name=retargeting_decompiler_2.png 1020w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=1360&amp;amp;height=826&amp;amp;name=retargeting_decompiler_2.png 1360w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=1700&amp;amp;height=1033&amp;amp;name=retargeting_decompiler_2.png 1700w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_2.png?t=1513189714580&amp;amp;width=2040&amp;amp;height=1239&amp;amp;name=retargeting_decompiler_2.png 2040w&quot; sizes=&quot;(max-width: 680px) 100vw, 680px&quot; /&gt;&lt;p&gt;&lt;span&gt;If you want a more programmatic access, you can use our REST API, which allows anyone to write applications that interact with RetDec by sending HTTP requests. The easiest (and recommended) way of using the decompiler via the API is by using&lt;/span&gt; &lt;a href=&quot;https://github.com/s3rvac/retdec-python&quot;&gt;&lt;span&gt;retdec-python&lt;/span&gt;&lt;/a&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;img src=&quot;https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=456&amp;amp;height=513&amp;amp;name=retargeting_decompiler_3.png&quot; alt=&quot;retargeting_decompiler_3.png&quot; width=&quot;456&quot; height=&quot;513&quot; srcset=&quot;https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=228&amp;amp;height=257&amp;amp;name=retargeting_decompiler_3.png 228w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=456&amp;amp;height=513&amp;amp;name=retargeting_decompiler_3.png 456w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=684&amp;amp;height=770&amp;amp;name=retargeting_decompiler_3.png 684w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=912&amp;amp;height=1026&amp;amp;name=retargeting_decompiler_3.png 912w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=1140&amp;amp;height=1283&amp;amp;name=retargeting_decompiler_3.png 1140w, https://blog.avast.com/hs-fs/hubfs/retargeting_decompiler_3.png?t=1513189714580&amp;amp;width=1368&amp;amp;height=1539&amp;amp;name=retargeting_decompiler_3.png 1368w&quot; sizes=&quot;(max-width: 456px) 100vw, 456px&quot; /&gt;&lt;p&gt;&lt;span&gt;Finally, since the source code of the decompiler is available&lt;/span&gt; &lt;a href=&quot;https://github.com/avast-tl/retdec&quot;&gt;&lt;span&gt;on GitHub&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, you can build, install, and use our decompiler directly on your PC. Currently, RetDec supports the Linux and Microsoft Windows operating systems.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We hope that you will find our decompiler useful. If you have any questions or would like to provide feedback, feel free to&lt;/span&gt; &lt;a href=&quot;https://retdec.com/contact/&quot;&gt;&lt;span&gt;contact us&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For more information, we encourage you to visit the&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://retdec.com/&quot;&gt;RetDec home page&lt;/a&gt;. More of &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://avast.github.io/&quot; target=&quot;_blank&quot;&gt;Avast's open-sourced projects can be found on our Github page&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;


</description>
<pubDate>Wed, 13 Dec 2017 07:12:59 +0000</pubDate>
<dc:creator>matt_d</dc:creator>
<og:description>After seven years of development, Avast open-sources its machine-code decompiler for platform-independent analysis of executable files.</og:description>
<og:title>Avast open-sources its machine-code decompiler</og:title>
<og:image>https://blog.avast.com/hubfs/Avast_blog_retargetable_decompiler.jpg?t=1513189714580#keepProtocol</og:image>
<og:url>https://blog.avast.com/avast-open-sources-its-machine-code-decompiler</og:url>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.avast.com/avast-open-sources-its-machine-code-decompiler</dc:identifier>
</item>
<item>
<title>France to ban mobile phones in primary, junior and middle schools</title>
<link>https://www.theguardian.com/world/2017/dec/11/france-to-ban-mobile-phones-in-schools-from-september</link>
<guid isPermaLink="true" >https://www.theguardian.com/world/2017/dec/11/france-to-ban-mobile-phones-in-schools-from-september</guid>
<description>&lt;p&gt;The French government is to ban students from using mobile phones in the country’s primary, junior and middle schools.&lt;/p&gt;
&lt;p&gt;Children will be allowed to bring their phones to school, but not allowed to get them out at any time until they leave, even during breaks.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;A proposed ban was included in Emmanuel Macron’s successful presidential election campaign this year.&lt;/p&gt;
&lt;p&gt;Jean-Michel Blanquer, the French education minister, said the measure would come into effect from the start of the next school year in September 2018. It will apply to all pupils from the time they start school at age of six – up to about 15 when they start secondary school.&lt;/p&gt;
&lt;p&gt;Blanquer said some education establishments already prohibited pupils from using their mobiles.&lt;/p&gt;
&lt;p&gt;“Sometimes you need a mobile for teaching reasons … for urgent situations, but their use has to be somehow controlled,” he told RTL radio.&lt;/p&gt;
&lt;p&gt;The minister said the ban was also a “public health message to families”, adding: “It’s good that children are not too often, or even at all, in front of a screen before the age of seven.”&lt;/p&gt;
&lt;p&gt;The French headteachers’ union was skeptical that the ban could be enforced.&lt;/p&gt;
&lt;p&gt;“This new announcement from the [education] ministry leaves us dubious because we’re having trouble understanding what is the real issue here. In general, we’re used to them being logical and pragmatic about things, and here, we can’t find the logic or the pragmatism in the announcements,” said Philippe Vincent, the union’s deputy general secretary.&lt;/p&gt;
&lt;p&gt;Outside one middle school in the centre of Paris, pupils asked about the measure seemed unimpressed. “I don’t understand how it will work. Who will take the phones, where will they put them … how will we get them back?” said one 13-year-old boy.&lt;/p&gt;
&lt;p&gt;At another school, Mathilde, 12, said: “It’s ridiculous. At my school, we don’t use them in class or during recess, so what’s the problem? If anyone’s caught using one in the toilets or at lunchtime, the phones are confiscated immediately and the person is given detention.”&lt;/p&gt;
&lt;p&gt;Parents seemed uncertain too. “It’s probably a good idea when the kids are in school, but they can’t ban them bringing them to school,” said Sabine. “My daughter goes to school and comes home on her own, and at this time of year it’s dark so early, so I want her to have a phone with her. It’s reassuring.”&lt;/p&gt;
&lt;p&gt;She added: “But rather than a ban, wouldn’t it be better to install a signal blocker in schools?”&lt;/p&gt;
&lt;p&gt;Blanquer has already suggested schools could install lockers for phones, though many city centre schools have little room for them.&lt;/p&gt;
&lt;p&gt;“Are we going to transform a school into a giant locker?” said Vincent. “I’ve done a little calculation myself: 5,300 state schools with an average 500 pupils each, that makes around 3 million lockers.”&lt;/p&gt;
&lt;p&gt;Parents’ organisations say any ban would pose a significant logistical problem.&lt;/p&gt;
&lt;p&gt;“How is the school going to stock them? And how are they going to make sure they’re given back to the owner at the end of school?” Gérard Pommier, head of the Federation of Parents in State Schools.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Education officials are now studying how the mobile ban can be put into effect.&lt;/p&gt;
&lt;p&gt;“In ministerial meetings, we leave our phones in lockers before going in. It seems to me that this as doable for any human group, including a class,” Blanquer said in September.&lt;/p&gt;
&lt;p&gt;The minister has also supported the introduction of school uniforms, but has said he is opposed to the measure being obligatory throughout the country.&lt;/p&gt;
&lt;p&gt;He has also announced that each school must set up a choir before January 2019. Le Parisien newspaper said the government had set aside €20m for the measure. Government officials said joining the choir would be voluntary and a “complement to obligatory music lessons” that exist already&lt;/p&gt;

</description>
<pubDate>Wed, 13 Dec 2017 06:05:36 +0000</pubDate>
<dc:creator>non_sequitur</dc:creator>
<og:url>http://www.theguardian.com/world/2017/dec/11/france-to-ban-mobile-phones-in-schools-from-september</og:url>
<og:description>Pupils, teachers and parents seem less than convinced by measure prohibiting use in primary, junior and middle schools</og:description>
<og:image>https://i.guim.co.uk/img/media/de0ad1f0d352c89f042ab80708664db78433fec3/0_638_5657_3394/master/5657.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxNi8wNS8yNS9vdmVybGF5LWxvZ28tMTIwMC05MF9vcHQucG5n&amp;s=0f711b0a81e956ae18674c9ff09315b8</og:image>
<og:type>article</og:type>
<og:title>France to ban mobile phones in schools from September</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/world/2017/dec/11/france-to-ban-mobile-phones-in-schools-from-september</dc:identifier>
</item>
<item>
<title>Internet traffic for Google, Facebook, Apple was briefly rerouted to Russia</title>
<link>https://bgpmon.net/popular-destinations-rerouted-to-russia/</link>
<guid isPermaLink="true" >https://bgpmon.net/popular-destinations-rerouted-to-russia/</guid>
<description>

Early this morning (UTC) our systems detected a suspicious event where many prefixes for high profile destinations were being announced by an unused Russian Autonomous System.&lt;p&gt;Starting at 04:43 (UTC) 80 prefixes normally announced by organizations such Google, Apple, Facebook, Microsoft, Twitch, NTT Communications and Riot Games were now detected in the global BGP routing tables with an Origin AS of 39523 (DV-LINK-AS), out of Russia.&lt;/p&gt;&lt;p&gt;Looking at timeline we can see two event windows of about three minutes each. The first one started at 04:43 UTC and ended at around 04:46 UTC. The second event started 07:07 UTC and finished at 07:10 UTC.&lt;/p&gt;&lt;p&gt;Even though these events were relatively short lived, they were significant because it was picked up by a large number of peers and because of several new more specific prefixes that are not normally seen on the Internet. So let’s dig a little deeper.&lt;/p&gt;&lt;p&gt;One of the interesting things about this incident is the prefixes that were affected are all network prefixes for well known and high traffic internet organizations. The other odd thing is that the Origin AS 39523 (DV-LINK-AS) hasn’t been seen announcing any prefixes for many years (with one exception below), so why does it all of sudden appear and announce prefixes for networks such as Google?&lt;/p&gt;&lt;p&gt;If we look at a few AS paths we see that 39523 is always the origin, while the next hop transit AS is always 31133 PJSC MegaFon. We also see that the announcements were picked up further and made reachable by a few large ISP’s such as:&lt;/p&gt;&lt;p&gt;xx 6939 31133 39523 (path via Hurricane Electric)&lt;br/&gt;xx 6461 31133 39523 (path via Zayo)&lt;br/&gt;xx 2603 31133 39523 (path via Nordunet)&lt;br/&gt;xx 4637 31133 39523 (path via Telstra)&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://stat.ripe.net/173.194.122.0%2F24#tabId=routing&quot;&gt;&lt;img src=&quot;https://bgpmon.net/wp-content/uploads/2017/12/Screen-Shot-2017-12-12-at-10.01.31-AM-1024x553.png&quot; alt=&quot;&quot; width=&quot;614&quot; height=&quot;331&quot; class=&quot;aligncenter size-large wp-image-1411&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;What makes this incident suspicious is the prefixes that were affected are all high profile destinations, as well as several more specific prefixes that aren’t normally seen on the Internet. This means that this isn’t a simple leak, but someone is intentionally inserting these more specific prefixes, possibly with the intent the attract traffic.&lt;br/&gt;Loyal readers will remember our blog post from earlier this year involving another Russian network: “&lt;a href=&quot;https://bgpmon.net/bgpstream-and-the-curious-case-of-as12389/&quot;&gt;The curious case of as12389&lt;/a&gt;”. This event is somewhat similar in that it appears targeted.&lt;/p&gt;&lt;pre&gt;
$ whois -h whois.ripe.net AS39523


% Information related to 'AS39523'

% Abuse contact for 'AS39523' is 'support@dv-link.ru'

aut-num: AS39523
as-name: DV-LINK-AS
org: ORG-VII2-RIPE
sponsoring-org: ORG-ATS13-RIPE
import: from AS31133 accept ANY
export: to AS31133 announce AS39523
import: from AS3216 accept ANY
export: to AS3216 announce AS39523
admin-c: VIIN1-RIPE
tech-c: VIIN1-RIPE
status: ASSIGNED
mnt-by: RIPE-NCC-END-MNT
mnt-by: RIPE-DB-MNT
mnt-by: MNT-DV-LINK
mnt-routes: RIPE-DB-MNT
mnt-routes: MNT-DV-LINK
created: 2017-11-24T14:49:44Z
last-modified: 2017-11-24T14:49:44Z
source: RIPE
&lt;/pre&gt;&lt;p&gt;When checking the RIPE whois data (above) we see that this AS 39523 has only recently been assigned. However, while going through our historical data, we also noticed that AS 39523 was in fact once active earlier this year although it could be that it intended to stay hidden.&lt;br/&gt;Let's go back to another blog post from earlier this year: &lt;a href=&quot;https://bgpmon.net/bgp-leak-causing-internet-outages-in-japan-and-beyond&quot;&gt;The Google - Verizon leak in August&lt;/a&gt;.&lt;br/&gt;During that incident we got some interesting insights into Google’s peering relationships. Interestingly one of the paths that appeared during that leak was the prefix 66.232.224.0/24 with the following ASpath 701 15169 32007 39523.&lt;/p&gt;&lt;p&gt;39523 is the same Russian AS that appeared as the origin AS today. 32007 is an Equinix AS 15169 is Google and 701 verizon. So in august Google learned a path to 66.232.224.0/24 (Kohls Department store) with origin 39523. Without knowing more about this prefixes, it looks strange and unexpected for Google to learn a 'Kohls Department store' Prefix via this path.&lt;/p&gt;&lt;p&gt;Whatever caused the incident today, it’s another clear example of how easy it is to re-route traffic for 3rd parties, intentionally or by accident. It also is a good reminder for every major ISP to filter customers.&lt;/p&gt;

</description>
<pubDate>Wed, 13 Dec 2017 06:01:44 +0000</pubDate>
<dc:creator>couchand</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://bgpmon.net/popular-destinations-rerouted-to-russia/</dc:identifier>
</item>
<item>
<title>TP-Link firmware sends six DNS requests and one NTP query every 5 seconds</title>
<link>https://www.ctrl.blog/entry/tplink-aggressive-ntp</link>
<guid isPermaLink="true" >https://www.ctrl.blog/entry/tplink-aggressive-ntp</guid>
<description>&lt;p&gt;You should probably avoid TP-Link products if you’re on a tight bandwidth budget. &lt;strong&gt;By design,&lt;/strong&gt; TP-Link firmware sends six DNS requests and one NTP query every 5 seconds, for a total of 715,4 MB per month.&lt;/p&gt;
&lt;span id=&quot;more-7123&quot;/&gt;
&lt;p&gt;The firmware of some TP-Link repeaters — &lt;strong&gt;but not routers&lt;/strong&gt; — including all 2017 models are very talkative on NTP, to a total of 715,4 MB per month. NTP is the network time protocol used to synchronize clocks across the web. To put this number in context: an always-on Windows device will use around 1,6 KB per month on NTP.&lt;/p&gt;
&lt;p&gt;TP-Link’s firmware doesn’t have any sort of DNS caching, and they query DNS about 6 NTP server pool addresses every 5 seconds followed by an NTP request to one of them. An always-on Windows client sends 1 DNS and 1 NTP request once a week. (If you power cycle or suspend your device, it will send one additional request.)&lt;/p&gt;
&lt;p&gt;This means your TP-Link product is using about 1,38 KB every 5 seconds — or 23,85 MBs per day — on timekeeping. For comparison, a 5-minute check would be considered a pretty aggressive checking interval, and would only consume 11,92 MB per month.&lt;/p&gt;
&lt;section&gt;&lt;h3&gt;But why‽&lt;/h3&gt;
&lt;p&gt;This behavior isn’t a bug from TP-Link’s perspective. They misuse DNS and NTP as a stand-in for an internet connectivity test feature. These types of tests are normally &lt;a href=&quot;https://www.ctrl.blog/entry/network-connection-http-checks&quot; title=&quot;“How caching affects internet connectivity tests”&quot;&gt;implemented over HTTP&lt;/a&gt; and only check against remote servers every 5–45 minutes.&lt;/p&gt;
&lt;aside class=&quot;adco adu-in&quot;&gt;&lt;small&gt;Advertisement&lt;/small&gt;&lt;ins class=&quot;adsbygoogle adu-fb adu-fr&quot; data-ad-client=&quot;ca-pub-1835247814769107&quot; data-ad-format=&quot;rectangle&quot; data-ad-slot=&quot;9890932244&quot;/&gt;&lt;/aside&gt;&lt;p&gt;The feature as TP-Link has implemented it is overly aggressive, and they don’t even have the decency to direct the traffic at their own servers. Instead, they misuse public infrastructure provided by volunteers (like the NTP project pool servers), universities, and the US government.&lt;/p&gt;
&lt;p&gt;TP-Link repeaters don’t seem to modify their behavior based on whether there is a working internet connection or not. (Except for providing a DHCP server when they fail to detect another DHCP server, but that is irrelevant for this discussion.) I may be mistaken, but as far as I’ve been able to observe by studying the network traffic and behaviors of my TP-Link RE650 – it only controls the string “Internet Status: Connected”. Wasting 715,4 MB per month for a single string on a web administration interface that the customer is only likely to visit once a year is &lt;strong&gt;outright stupid.&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;h3&gt;More details!&lt;/h3&gt;
&lt;p&gt;TP-Link has hardcoded the following non-configurable NTP servers and server pools in their firmware:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;time.nist.gov, time-a.nist.gov, time-b.nist.gov, time-nw.nist.gov&lt;/li&gt;
&lt;li&gt;au.pool.ntp.org, nz.pool.ntp.org&lt;/li&gt;
&lt;li&gt;133.100.9.2, 128.138.140.44, 192.36.144.22&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The first sets of servers are operated by the US National Institute of Standards and Technology (NIST). The second is the Australian and New Zealand public NTP project time server pools. The IP addresses are owned by universities in Japan, Colorado; US, and Sweden respectively.&lt;/p&gt;
&lt;p&gt;The NTP Pool project asks device manufacturers and vendors to register (and optionally sponsor) their own pools through the service (e.g. &lt;samp&gt;tplink.pool.ntp.org&lt;/samp&gt;), and emphasize that they “must absolutely not use the default pool.ntp.org zone names”. They also request that vendors don’t check more often than every 5 minutes at the most. I find it interesting that TP-Link chose to use the Australia and New Zealand server pools in their firmware globally.&lt;/p&gt;
&lt;p&gt;The six DNS requests add up to about 75 bytes each with a median response size of 125 bytes. An NTP request is another 90 bytes plus a 90 byte response. Multiply this by one request per 5 seconds throughout the day, and then finally add up the monthly figure and you’ll end up at 715,4 MB.&lt;/p&gt;
&lt;p&gt;The number can be reduced by about 15 % if your router has a caching DNS server and you’re extremely lucky with request timings. The NTP pool addresses have very short caching lifespans, and they may even have expired before they reach your router.&lt;/p&gt;
&lt;/section&gt;&lt;section&gt;&lt;h3&gt;Mitigation&lt;/h3&gt;
&lt;p&gt;You can avoid buying TP-Link products to avoid this problem.&lt;/p&gt;
&lt;p&gt;You can’t turn this behavior off in TP-Link’s web administration interface nor in their management app for mobile. You can’t change the NTP server addresses it targets either.&lt;/p&gt;
&lt;p&gt;You can setup firewall rules rate-limiting your TP-Link product to one outgoing connection on UDP to port 123 (NTP) to limit the NTP traffic (which makes up for 93,31 MB out of the month total data usage).&lt;/p&gt;
&lt;p&gt;You can likewise rate limit connections to the three hardcoded IP addresses. If your TP-Link product is running in access point mode, you can also safely limit its DNS queries (UDP out to port 53). Please note that this will also prevent you from checking for firmware updates on the device; and you’ll have to rely on &lt;a href=&quot;https://www.ctrl.blog/entry/tplink-firmware-outdated-downloads&quot; title=&quot;“TP-Link serves outdated or no firmware at all on 30% of its European websites”&quot;&gt;TP-Link’s unreliable website&lt;/a&gt; to find firmware updates instead.&lt;/p&gt;
&lt;p&gt;Your home router may not have the features required to configure firewall rules that meet these requirements. It’s not uncommon for network routers aimed at the home market only to have configurable incoming and not outgoing firewalls.&lt;/p&gt;
&lt;p&gt;You should also complain to TP-Link Support. This is a broken feature that generates a ton of unnecessary data and they should fix it. To save everyone a bit of time, you may refer them to this article. (Send them the one linked above while you’re at it!)&lt;/p&gt;
&lt;/section&gt;&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;715,4 MB isn’t trivial when you’re paying by the megabyte or you have a tight monthly data quota. This bug can run up a significant monthly cost for TP-Link customers who are on mobile, satellite, or other expensive internet connection options. Customers are also unlikely to be aware that it is their TP-Link products that are secretly eating up their data quotas.&lt;/p&gt;
&lt;p&gt;This is a small amount of data for a high-speed uncapped broadband consumer. However, let us wildly speculate that TP-Link has sold 100 million of these devices. That is 2,385 PB (petabytes) or 2385 TB (terabytes) per day transmitted to public DNS and NTP infrastructure. It’s starting to resemble a small distributed denial of service (DDoS) botnet attack by this point.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tp-link.com.my/news-details-17669.html&quot; title=&quot;“TP-Link Sales Revenue Tops $2.1 billion in 2016”&quot;&gt;TP-Link sold 161 million devices in 2016&lt;/a&gt;, but it’s unspecified what type of devices were sold.&lt;/p&gt;
</description>
<pubDate>Wed, 13 Dec 2017 02:19:01 +0000</pubDate>
<dc:creator>phikai</dc:creator>
<og:title>TP-Link repeater firmware squanders 715 MB/month</og:title>
<og:description>TP-Link firmware sends aggressive amount of DNS and NTP requests to provide a pointless feature.</og:description>
<og:url>https://www.ctrl.blog/entry/tplink-aggressive-ntp</og:url>
<og:type>article</og:type>
<og:image>https://www.ctrl.blog/media/tplink-time-1072x603.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ctrl.blog/entry/tplink-aggressive-ntp</dc:identifier>
</item>
<item>
<title>Fish: A user-friendly command line shell for macOS, Linux, etc</title>
<link>https://fishshell.com/</link>
<guid isPermaLink="true" >https://fishshell.com/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;fish shell&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=920&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;A smart and user-friendly command line shell&quot;/&gt;&lt;meta name=&quot;author&quot; content=&quot;ridiculous_fish&quot;/&gt;&lt;link href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/2.2.2/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link href=&quot;assets/css/fish_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;22.989473684211&quot;&gt;
&lt;div class=&quot;container-narrow&quot; readability=&quot;10.673684210526&quot;&gt;&lt;img class=&quot;logo&quot; src=&quot;https://fishshell.com/assets/img/Terminal_Logo_CRT_Small.png&quot; alt=&quot;Logo of Fish&quot;/&gt;&lt;div class=&quot;jumbotron&quot; readability=&quot;9&quot;&gt;

&lt;p class=&quot;lead&quot;&gt;fish is a smart and user-friendly command line&lt;br/&gt;shell for macOS, Linux, and the rest of the family.&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;hr/&gt;&lt;h3&gt;Teach me to fish&lt;/h3&gt;
&lt;a href=&quot;https://fishshell.com/docs/current/tutorial.html&quot; class=&quot;btn btn-large tutorial-link&quot;&gt;Tutorial&lt;/a&gt; &lt;a href=&quot;https://fishshell.com/docs/current/index.html&quot; class=&quot;btn btn-large docs-link&quot;&gt;Documentation&lt;/a&gt; &lt;a href=&quot;https://fishshell.com/docs/current/faq.html&quot; class=&quot;btn btn-large faq-link&quot;&gt;FAQ&lt;/a&gt;
&lt;hr/&gt;&lt;h3&gt;Go fish&lt;/h3&gt;
&lt;div class=&quot;tab-content download_tabs over-pos&quot;&gt;
&lt;div class=&quot;download_tab block_links tab-pane active&quot; id=&quot;get_fish_osx&quot; readability=&quot;6.6350210970464&quot;&gt;



&lt;div class=&quot;over-pos&quot; readability=&quot;8.029197080292&quot;&gt;
&lt;h4&gt;&lt;a class=&quot;tab_link&quot; href=&quot;https://fishshell.com/files/2.7.0/fish-2.7.0.app.zip&quot;&gt;App&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a class=&quot;tab_link&quot; href=&quot;https://fishshell.com/files/2.7.0/fish-2.7.0.app.zip&quot;&gt;&lt;img src=&quot;https://fishshell.com/assets/img/Terminal_Logo_LCD_Small.png&quot; alt=&quot;Terminal logo&quot; class=&quot;app-download&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;10.6+&lt;br/&gt;&lt;a href=&quot;https://fishshell.com/#&quot; onclick=&quot;document.getElementById('app_explanation').style.display = 'block'; return false;&quot;&gt;No installation required&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;fish.app bundles the fish shell with an AppleScript that launches it in Terminal.&lt;br/&gt;Nothing is installed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;download_tab tab-pane&quot; id=&quot;get_fish_windows&quot; readability=&quot;5.5949367088608&quot;&gt;
&lt;div readability=&quot;7.1724137931034&quot;&gt;
&lt;h4&gt;&lt;a class=&quot;tab_link&quot; href=&quot;https://cygwin.com&quot;&gt;Cygwin&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a class=&quot;tab_link&quot; href=&quot;https://cygwin.com&quot;&gt;&lt;img src=&quot;https://fishshell.com/assets/img/cyg_icon.png&quot; alt=&quot;Cygwin&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fish is available in &lt;strong&gt;setup&lt;/strong&gt;,&lt;br/&gt;in the Shells category.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;download_tab block_links tab-pane&quot; id=&quot;get_fish_tarball&quot; readability=&quot;6&quot;&gt;
&lt;div readability=&quot;7.7142857142857&quot;&gt;
&lt;h4&gt;&lt;a class=&quot;tab_link&quot; href=&quot;https://fishshell.com/files/2.7.0/fish-2.7.0.tar.gz&quot;&gt;fish-2.7.0.tar.gz&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a class=&quot;tab_link&quot; href=&quot;https://fishshell.com/files/2.7.0/fish-2.7.0.tar.gz&quot;&gt;&lt;img src=&quot;https://fishshell.com/assets/img/tarball_icon.png&quot; alt=&quot;Tarball Icon&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;span class=&quot;mono&quot;&gt;./configure; make; sudo make install&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p class=&quot;app-filesize&quot;&gt;&lt;small&gt;File size: 5.8 MB&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;SHA1: &lt;span class=&quot;mono app-sha1&quot;&gt;2825834253954a6eb6c2ff3019c15ab92febba74&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr/&gt;&lt;h3&gt;Release History&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://fishshell.com/release_notes.html&quot; class=&quot;release-notes-title&quot;&gt;&lt;strong&gt;Release Notes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul class=&quot;release-notes&quot;&gt;&lt;li&gt;2.7.0, released November 23, 2017&lt;/li&gt;
&lt;li&gt;2.6.0, released June 3, 2017 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.6.0/fish-2.6.0.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.5.0, released February 3, 2017 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.5.0/fish-2.5.0.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.4.0, released November 8, 2016 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.4.0/fish-2.4.0.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.3.1, released July 3, 2016 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.3.1/fish-2.3.1.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.3.0, released May 20, 2016 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.3.0/fish-2.3.0.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.2.0, released July 12, 2015 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.2.0/fish-2.2.0.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.1.2, released February 24, 2015 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.1.2/fish-2.1.2.tar.gz&quot;&gt;tarball&lt;/a&gt;)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.1.1, released September 26, 2014 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.1.1/fish-2.1.1.tar.gz&quot;&gt;tarball&lt;/a&gt; - note that there are known issues on macOS)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.1.0, released October 28, 2013 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.1.0/fish-2.1.0.tar.gz&quot;&gt;tarball&lt;/a&gt; - note that there are known security vulnerabilities)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;2.0.0, released May 17, 2013 &lt;small&gt;(&lt;a href=&quot;https://fishshell.com/files/2.0.0/fish-2.0.0.tar.gz&quot;&gt;tarball&lt;/a&gt; - note that there are known security vulnerabilities)&lt;/small&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h3&gt;Development&lt;/h3&gt;
fish development is &lt;a href=&quot;https://github.com/fish-shell/fish-shell&quot;&gt;hosted on GitHub&lt;/a&gt;. To clone the git repository:
&lt;p&gt;git clone https://github.com/fish-shell/fish-shell.git&lt;/p&gt;
Build instructions are provided at the &lt;a href=&quot;https://github.com/fish-shell/fish-shell/#building&quot;&gt;bottom of the GitHub page&lt;/a&gt;.
&lt;hr/&gt;&lt;h3&gt;Need Help?&lt;/h3&gt;
&lt;/div&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 13 Dec 2017 00:30:28 +0000</pubDate>
<dc:creator>NanoWar</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://fishshell.com/</dc:identifier>
</item>
<item>
<title>AWS Single Sign-On</title>
<link>https://aws.amazon.com/about-aws/whats-new/2017/12/announcing-aws-single-sign-on--sso/</link>
<guid isPermaLink="true" >https://aws.amazon.com/about-aws/whats-new/2017/12/announcing-aws-single-sign-on--sso/</guid>
<description>&lt;div class=&quot;&quot; readability=&quot;22.469910371319&quot;&gt;
&lt;p&gt;With AWS SSO, you can easily manage SSO access and user permissions to all of your accounts in AWS Organizations centrally. Further, by using the AWS SSO application configuration wizard, you can create Security Assertion Markup Language (SAML) 2.0 integrations and extend SSO access to any of your SAML-enabled applications. AWS SSO also includes built-in SAML integrations to many business applications, such as Salesforce, Box, and Office 365. With just a few clicks, you can enable a highly available SSO service without the upfront investment and on-going maintenance costs of operating your own SSO infrastructure.&lt;/p&gt;
&lt;p&gt;There is no additional cost to enable AWS SSO. It is now available in the US East (N. Virginia) Region.&lt;/p&gt;
&lt;p&gt;To learn more about AWS SSO, visit &lt;a href=&quot;https://aws.amazon.com/single-sign-on/&quot;&gt;AWS Single Sign-On&lt;/a&gt;. &lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 13 Dec 2017 00:23:03 +0000</pubDate>
<dc:creator>yeukhon</dc:creator>
<og:title>Announcing AWS Single Sign-On (SSO)</og:title>
<og:type>company</og:type>
<og:url>//aws.amazon.com/about-aws/whats-new/2017/12/announcing-aws-single-sign-on--sso/</og:url>
<og:image>https://a0.awsstatic.com/main/images/logos/aws_logo_smile_1200x630.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/about-aws/whats-new/2017/12/announcing-aws-single-sign-on--sso/</dc:identifier>
</item>
<item>
<title>The State of JavaScript 2017</title>
<link>http://stateofjs.com/2017/introduction/</link>
<guid isPermaLink="true" >http://stateofjs.com/2017/introduction/</guid>
<description>&lt;p&gt;A few years back, a JavaScript survey would've been a simple matter. Question 1: are you using jQuery? Question 2: any comments? Boom, done!&lt;/p&gt;
&lt;p&gt;But as we all know, things have changed. The JavaScript ecosystem is richer than ever, and even the most experienced developer can start to hesitate when considering the multitude of options available at every stage.&lt;/p&gt;
&lt;p&gt;This is where this survey comes in: we asked over a hundred questions to more than 28,000 developers all over the world, covering topics going from front-end libraries all the way to back-end frameworks.&lt;/p&gt;
&lt;p&gt;We believe the result is the most complete picture of the state of JavaScript currently available, and we're excited to share it with you!&lt;/p&gt;
&lt;p&gt;P.S. if all this data ever feels overwhelming, I'm sure you'll find a way to &lt;em&gt;console&lt;/em&gt; yourself…&lt;/p&gt;
</description>
<pubDate>Wed, 13 Dec 2017 00:12:57 +0000</pubDate>
<dc:creator>beefman</dc:creator>
<og:type>article</og:type>
<og:url>http://stateofjs.com</og:url>
<og:image>http://stateofjs.com/images/javascript2017-white.png</og:image>
<og:description>A short survey about current popular JavaScript technologies.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stateofjs.com/2017/introduction/</dc:identifier>
</item>
</channel>
</rss>