<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Bash Infinity: Standard library and boilerplate framework for Bash</title>
<link>https://github.com/niieani/bash-oo-framework</link>
<guid isPermaLink="true" >https://github.com/niieani/bash-oo-framework</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/niieani/bash-oo-framework?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/123fa5e46e0ed5515f98fcb6cef62804261a54d0/68747470733a2f2f6261646765732e6769747465722e696d2f6e696965616e692f626173682d6f6f2d6672616d65776f726b2e737667&quot; alt=&quot;Join the chat at https://gitter.im/niieani/bash-oo-framework&quot; data-canonical-src=&quot;https://badges.gitter.im/niieani/bash-oo-framework.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bash Infinity is a standard library and a boilerplate framework for writing tools using &lt;strong&gt;bash&lt;/strong&gt;. It's modular and lightweight, while managing to implement some concepts from C#, Java or JavaScript into bash. The Infinity Framework is also plug &amp;amp; play: include it at the beginning of your existing script to import any of the individual features such as error handling, and start using other features gradually.&lt;/p&gt;
&lt;p&gt;The aim of Bash Infinity is to maximize readability of bash scripts, minimize the amount of code repeat and create a central repository for well-written, and a well-tested standard library for bash.&lt;/p&gt;
&lt;p&gt;Bash Infinity transforms the often obfuscated &quot;bash syntax&quot; to a cleaner, more modern syntax.&lt;/p&gt;
&lt;p&gt;Disclaimer: Not all of the modules work with earlier versions of bash, as I test with &lt;strong&gt;bash 4&lt;/strong&gt;. However, it should be possible (and relatively easy) to &lt;a href=&quot;https://github.com/niieani/bash-oo-framework#porting-to-bash-3&quot;&gt;port non-working parts&lt;/a&gt; to earlier versions.&lt;/p&gt;

&lt;p&gt;Single-file release and dynamic loading is not available for v2.0 yet. To load the framework locally, &lt;a href=&quot;https://github.com/niieani/bash-oo-framework#how-to-use&quot;&gt;read on&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;automatic error handling with exceptions and visual stack traces (&lt;code&gt;util/exception&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;named parameters in functions (instead of $1, $2...) (&lt;code&gt;util/namedParameters&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;passing arrays and maps as parameters (&lt;code&gt;util/variable&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;try-catch&lt;/strong&gt; implementation (&lt;code&gt;util/tryCatch&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;throwing custom &lt;strong&gt;exceptions&lt;/strong&gt; (&lt;code&gt;util/exception&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;import&lt;/strong&gt; keyword for clever sourcing of scripts Ã  la &lt;em&gt;require-js&lt;/em&gt; (&lt;code&gt;oo-bootstrap&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;handy aliases for &lt;strong&gt;colors&lt;/strong&gt; and &lt;strong&gt;powerline&lt;/strong&gt; characters to increase readability in the output of your scripts (&lt;code&gt;UI/Color&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;well-formatted, colorful &lt;strong&gt;logging&lt;/strong&gt; to &lt;em&gt;stderr&lt;/em&gt; or custom delegate functions (&lt;code&gt;util/log&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unit test&lt;/strong&gt; library (&lt;code&gt;util/test&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;standard library for the type system with plenty of useful functions (&lt;code&gt;util/type&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;operational chains for &lt;strong&gt;functional programming&lt;/strong&gt; in bash (&lt;code&gt;util/type&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type system&lt;/strong&gt; for object-oriented scripting (&lt;code&gt;util/class&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;All of the features are modular and it's easy to only import the ones you'd like to use, without importing the rest of the framework. For example, the named parameters or the try-catch modules are self-contained in individual files.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;import util/exception
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;One of the highlight features is error handling that should work out of the box. If the script generates an error it will break and display a call stack:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/niieani/bash-oo-framework/master/docs/exception.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/niieani/bash-oo-framework/master/docs/exception.png&quot; alt=&quot;example call stack&quot; title=&quot;Example Call Stack&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may also force an error by &lt;code&gt;throw&lt;/code&gt;ing your own Exception:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
e=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;The hard disk is not connected properly!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; throw
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's useful for debugging, as you'll also get the call stack if you're not sure where the call is coming from.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exceptions&lt;/strong&gt; combined with &lt;em&gt;try &amp;amp; catch&lt;/em&gt; give you safety without having to run with &lt;strong&gt;-o errexit&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you do something wrong, you'll get a detailed exception backtrace, highlighting the command where it went wrong in the line from the source. The script execution will be halted with the option to continue or break. On the other hand if you expect a part of block to fail, you can wrap it in a &lt;code&gt;try&lt;/code&gt; block, and handle the error inside a &lt;code&gt;catch&lt;/code&gt; block.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;import util/namedParameters
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In any programing language, it makes sense to use meaningful names for variables for greater readability. In case of Bash, that means avoiding using positional arguments in functions. Instead of using the unhelpful &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; and so on within functions to access the passed in values, you may write:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;testPassingParams&lt;/span&gt;() {

    [string] hello
    [string[4]] anArrayWithFourElements
    l&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;2 [string[]] anotherArrayWithTwo
    [string] anotherSingle
    [reference] table   &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; references only work in bash &amp;gt;=4.3&lt;/span&gt;
    [...rest] anArrayOfVariedSize

    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$hello&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${anArrayWithFourElements[0]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${anArrayWithFourElements[1]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$3&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${anArrayWithFourElements[2]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$4&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; etc...&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${anotherArrayWithTwo[0]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$6&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${anotherArrayWithTwo[1]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$7&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$anotherSingle&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$8&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${table[test]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;works&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    table[inside]&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;adding a new value&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; I'm using * just in this example:&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${anArrayOfVariedSize[*]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${&lt;span class=&quot;pl-k&quot;&gt;*:&lt;/span&gt;10}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; correct
}

fourElements&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;( a1 a2 &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;a3 with spaces&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; a4 )
twoElements&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;( b1 b2 )

&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; -A assocArray
assocArray[test]&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;works&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

testPassingParams &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;first&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${fourElements[@]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${twoElements[@]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;single with spaces&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; assocArray &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;and more... &lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;even more...&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${assocArray[inside]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;adding a new value&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The system will automatically assign:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;$1&lt;/strong&gt; to &lt;strong&gt;$hello&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$anArrayWithFourElements&lt;/strong&gt; will be an array of params with values from $2 till $5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$anotherArrayWithTwo&lt;/strong&gt; will be an array of params with values from $6 till $7&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$8&lt;/strong&gt; to &lt;strong&gt;$anotherSingle&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$table&lt;/strong&gt; will be a reference to the variable whose name was passed in as the 9th parameter&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$anArrayOfVariedSize&lt;/strong&gt; will be a bash array containing all the following params (from $10 on)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In other words, not only you can call your parameters by their names (which makes up for a more readable core), you can actually pass arrays easily (and references to variables - this feature needs bash &amp;gt;=4.3 though)! Plus, the mapped variables are all in the local scope. This module is pretty light and works in bash 3 and bash 4 (except for references - bash &amp;gt;=4.3) and if you only want to use it separately from this project, get the file /lib/system/02_named_parameters.sh.&lt;/p&gt;
&lt;p&gt;Note: For lengths between 2-10 there are aliases for arrays, such as &lt;code&gt;[string[4]]&lt;/code&gt;, if you need anything more, you need to use the syntax &lt;code&gt;l=LENGTH [string[]]&lt;/code&gt;, like shown in the above example. Or, make your own aliases :).&lt;/p&gt;

&lt;p&gt;After bootstrapping, you may use &lt;code&gt;import&lt;/code&gt; to load either the library files or your own files. The command will ensure they're only loaded once. You may either use a relative path from the file you're importing, a path relative to the file that first included the framework, or an absolute path. &lt;code&gt;.sh&lt;/code&gt; suffix is optional. You can also load all the files inside of a directory by simply including the path to that directory instead of the file.&lt;/p&gt;

&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
import util/tryCatch
import util/exception &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; needed only for Exception::PrintException&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample usage:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
try {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; something...&lt;/span&gt;
    cp &lt;span class=&quot;pl-k&quot;&gt;~&lt;/span&gt;/test &lt;span class=&quot;pl-k&quot;&gt;~&lt;/span&gt;/test2
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; something more...&lt;/span&gt;
} catch {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;The hard disk is not connected properly!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Caught Exception:&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;UI.Color.Red&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$__BACKTRACE_COMMAND__&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;UI.Color.Default&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;File: &lt;span class=&quot;pl-smi&quot;&gt;$__BACKTRACE_SOURCE__&lt;/span&gt;, Line: &lt;span class=&quot;pl-smi&quot;&gt;$__BACKTRACE_LINE__&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# printing a caught exception couldn't be simpler, as it's stored in &quot;${__EXCEPTION__[@]}&quot;&lt;/span&gt;
    Exception::PrintException &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${__EXCEPTION__[@]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If any command fails (i.e. returns anything else than 0) in the &lt;code&gt;try&lt;/code&gt; block, the system will automatically start executing the &lt;code&gt;catch&lt;/code&gt; block. Braces are optional for the &lt;code&gt;try&lt;/code&gt; block, but required for &lt;code&gt;catch&lt;/code&gt; if it's multiline.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;try&lt;/code&gt; is executed in a subshell, therefore you cannot assign any variables inside of it.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;import util/log
&lt;/code&gt;
&lt;/pre&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; using colors:&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;UI.Color.Blue&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;I'm blue...&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;UI.Color.Default&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; enable basic logging for this file by declaring a namespace&lt;/span&gt;
namespace myApp
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; make the Log method direct everything in the namespace 'myApp' to the log handler called DEBUG&lt;/span&gt;
Log::AddOutput myApp DEBUG

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; now we can write with the DEBUG output set&lt;/span&gt;
Log &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Play me some Jazz, will ya? &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;UI.Powerline.Saxophone&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; redirect error messages to STDERR&lt;/span&gt;
Log::AddOutput error STDERR
subject=error Log &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Something bad happened.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; reset outputs&lt;/span&gt;
Log::ResetAllOutputsAndFilters

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; You may also hardcode the use for the StdErr output directly:&lt;/span&gt;
Console::WriteStdErr &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;This will be printed to STDERR, no matter what.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both the colors and the Powerline characters fallback gracefully on systems that don't support them. To see Powerline icons, you'll need to use a powerline-patched font.&lt;/p&gt;
&lt;p&gt;For the list of available colors and emoji's take a look into &lt;a href=&quot;https://github.com/niieani/bash-oo-framework/blob/master/lib/UI/Color.sh&quot;&gt;lib/UI/Color.sh&lt;/a&gt;. Fork and contribute more!&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/niieani/bash-oo-framework#advanced-logging&quot;&gt;Advanced Logging&lt;/a&gt; below to learn more about advanced logging capabilities.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;import util/variable
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The Variable utility offers lossless dumping of arrays and associative array (referred here to as &lt;code&gt;maps&lt;/code&gt;) declarations by the use of the &lt;code&gt;@get&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Combined with the &lt;code&gt;util/namedParameters&lt;/code&gt; module, you can pass in either as individual parameters.&lt;/p&gt;
&lt;p&gt;A more readable way of specifying the will to pass a variable by it's declaration is to simply refer to the variable as &lt;code&gt;$var:yourVariableName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In bash &amp;gt;=4.3, which supports references, you may pass by reference. This way any changes done to the variable within the function will affect the variable itself. To pass a variable by reference, use the syntax: &lt;code&gt;$ref:yourVariableName&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
array someArray=( &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;one&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;two&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; )
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; the above is an equivalent of: declare -a someArray=( 'one' 'two' )&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; except this one creates a $var:someArray method handler&lt;/span&gt;

&lt;span class=&quot;pl-en&quot;&gt;passingArraysInput&lt;/span&gt;() {
  [array] passedInArray

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; chained usage, see below for more details:&lt;/span&gt;
  &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:passedInArray &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; \
    { map &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;echo &quot;${index} - $(var: item)&quot;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; } \
    { forEach &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;var: item toUpper&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; }

  &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:passedInArray push &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;will work only for references&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
}

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;passing by $var:&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# 2 ways of passing a copy of an array (passing by it's definition)&lt;/span&gt;
passingArraysInput &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;@get someArray&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
passingArraysInput &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someArray

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# no changes yet&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someArray toJSON

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;passing by $ref:&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# in bash &amp;gt;=4.3, which supports references, you may pass by reference&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# this way any changes done to the variable within the function will affect the variable itself&lt;/span&gt;
passingArraysInput &lt;span class=&quot;pl-smi&quot;&gt;$ref&lt;/span&gt;:someArray

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# should show changes&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someArray toJSON
&lt;/pre&gt;&lt;/div&gt;

&lt;pre&gt;
&lt;code&gt;import util/type
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The framework offers a standard library for the primitive types, such as string or array manipulations to make common tasks simpler and more readable.&lt;/p&gt;
&lt;p&gt;There are three ways to make use of the standard library.&lt;/p&gt;
&lt;h3&gt;1. Create variables by their handle-creating declaration&lt;/h3&gt;
&lt;p&gt;If you create your variables using the oo-framework's handle-creating declarations, you can execute methods of the standard library by referring to your variable as: &lt;code&gt;$var:yourVariable someMethod someParameter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Available handle-creating declarations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;integer&lt;/li&gt;
&lt;li&gt;array&lt;/li&gt;
&lt;li&gt;map&lt;/li&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Since bash doesn't support boolean variables natively, the boolean variable is a special case that always needs to be declared and modified using the handle-creating declaration.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; create a string someString&lt;/span&gt;
string someString=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;My 123 Joe is 99 Mark&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; saves all matches and their match groups for the said regex:&lt;/span&gt;
array matchGroups=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someString getMatchGroups &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;([0-9]+) [a-zA-Z]+&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; lists all matches in group 1:&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:matchGroups every 2 1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# group 0, match 1&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someString match &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;([0-9]+) [a-zA-Z]+&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; 0 1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; calls the getter - here it prints the value&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someString
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. Invoke the methods with &lt;code&gt;var:&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you didn't create your variables with their handles, you can also use the method &lt;code&gt;var:&lt;/code&gt; to access them.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; create a string someString&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; someString=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;My 123 Joe is 99 Mark&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; saves all matches and their match groups for the said regex:&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; -a matchGroups=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;var: someString getMatchGroups &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;([0-9]+) [a-zA-Z]+&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; lists all matches in group 1:&lt;/span&gt;
var: matchGroups every 2 1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# group 0, match 1&lt;/span&gt;
var: someString match &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;([0-9]+) [a-zA-Z]+&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; 0 1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; calls the getter - here it prints the value&lt;/span&gt;
var: someString
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3. Pipe the variable declaration directly to the method&lt;/h3&gt;
&lt;p&gt;Finally, you can also pipe the variable declarations to the methods you wish to invoke.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; create a string someString&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; someString=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;My 123 Joe is 99 Mark&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; saves all matches and their match groups for the said regex:&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; -a matchGroups=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;@get someString &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; string.getMatchGroups &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;([0-9]+) [a-zA-Z]+&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; lists all matches in group 1:&lt;/span&gt;
@get matchGroups &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; array.every 2 1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# group 0, match 1&lt;/span&gt;
@get someString &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; string.match &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;([0-9]+) [a-zA-Z]+&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; 0 1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; prints the value&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$someString&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Adding to the Standard Library&lt;/h2&gt;
&lt;p&gt;You can add your own, custom methods to the Standard Library by declaring them like:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;string.makeCool&lt;/span&gt;() {
  @resolve:this &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# this is required is you want to make use of the pipe passing&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;local&lt;/span&gt; outValue=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cool value: &lt;span class=&quot;pl-smi&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  @return outValue
}

string someString=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;nice&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:someString makeCool
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; prints &quot;cool value: nice&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See more info on writing classes below.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;import util/type
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The type system in Bash Infinity allows you to chain methods together in a similar fashion one might pipe the output from one command to the other, or chain methods in C#, Java or JavaScript (think JQuery's pseudo-monad style).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;declare&lt;/span&gt; -a someArray=( &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;one&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;two&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; )

var: someArray &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; \
  { map &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;echo &quot;${index} - $(var: item)&quot;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; } \
  { forEach &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;var: item toUpper&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; above command will result in a definition of an array:&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; ( '0 - ONE' '1 - TWO' )&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Methods available in the next chain depend on the return type of the previously executed method.&lt;/p&gt;

&lt;p&gt;It's really simple and straight-forward, like with most modern languages.&lt;/p&gt;
&lt;p&gt;Keywords for definition:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;class:YourName()&lt;/strong&gt; - defining a class&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Keywords to use inside of the class definition:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;method ClassName.FunctionName()&lt;/strong&gt; - Use for defining methods that have access to &lt;em&gt;$this&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;public SomeType yourProperty&lt;/strong&gt; - define public properties (works in all types of classes)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;private SomeType _yourProperty&lt;/strong&gt; - as above, but accessible only for internal methods&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$this&lt;/strong&gt; - This variable is available inside the methods, used to refer to the current type&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;this&lt;/strong&gt; - Alias of $var:this, used to invoke methods or get properties of an object&lt;/li&gt;
&lt;li&gt;NOT YET IMPLEMENTED: &lt;strong&gt;extends SomeClass&lt;/strong&gt; - inherit from a base class&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;After a class has been defined, you need to invoke &lt;code&gt;Type::Initialize NameOfYourType&lt;/code&gt; or &lt;code&gt;Type::InitializeStatic NameOfYourStaticType&lt;/code&gt; if you want to make your class a singleton.&lt;/p&gt;
&lt;p&gt;Here's an example that shows how to define your own classes:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
import util/namedParameters util/class

&lt;span class=&quot;pl-en&quot;&gt;class:Human&lt;/span&gt;() {
  public string name
  public integer height
  public array eaten

  &lt;span class=&quot;pl-en&quot;&gt;Human.__getter__&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;I'm a human called &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;this name&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;this height&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; cm tall.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }

  &lt;span class=&quot;pl-en&quot;&gt;Human.Example&lt;/span&gt;() {
    [array]     someArray
    [integer]   someNumber
    [...rest]   arrayOfOtherParams

    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Testing &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;var: someArray toString&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; and &lt;span class=&quot;pl-smi&quot;&gt;$someNumber&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Stuff: &lt;span class=&quot;pl-smi&quot;&gt;${arrayOfOtherParams[*]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; returning the first passed in array&lt;/span&gt;
    @return someArray
  }

  &lt;span class=&quot;pl-en&quot;&gt;Human.Eat&lt;/span&gt;() {
    [string] food

    this eaten push &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$food&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; will return a string with the value:&lt;/span&gt;
    @return:value &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$this&lt;/span&gt; just ate &lt;span class=&quot;pl-smi&quot;&gt;$food&lt;/span&gt;, which is the same as &lt;span class=&quot;pl-smi&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }

  &lt;span class=&quot;pl-en&quot;&gt;Human.WhatDidHeEat&lt;/span&gt;() {
    this eaten toString
  }

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; this is a static method, hence the :: in definition&lt;/span&gt;
  &lt;span class=&quot;pl-en&quot;&gt;Human::PlaySomeJazz&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;UI.Powerline.Saxophone&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; required to initialize the class&lt;/span&gt;
Type::Initialize Human

&lt;span class=&quot;pl-en&quot;&gt;class:SingletonExample&lt;/span&gt;() {
  private integer YoMamaNumber = 150

  &lt;span class=&quot;pl-en&quot;&gt;SingletonExample.PrintYoMama&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Number is: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;this YoMamaNumber&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; required to initialize the static class&lt;/span&gt;
Type::InitializeStatic SingletonExample
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can use both the &lt;code&gt;Human&lt;/code&gt; and the &lt;code&gt;SingletonExample&lt;/code&gt; classes:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; create an object called 'Mark' of type Human&lt;/span&gt;
Human Mark

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; call the string.= (setter) method&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Mark name = &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Mark&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; call the integer.= (setter) method&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Mark height = 180

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; adds 'corn' to the Mark.eaten array and echoes the output&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Mark Eat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;corn&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; adds 'blueberries' to the Mark.eaten array and echoes the uppercased output&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Mark &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; { Eat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;blueberries&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; } { toUpper }

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; invoke the getter&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Mark

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; invoke the method on the static instance of SingletonExample&lt;/span&gt;
SingletonExample PrintYoMama
&lt;/pre&gt;&lt;/div&gt;

&lt;pre&gt;
&lt;code&gt;import util/test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/niieani/bash-oo-framework/master/docs/unit.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/niieani/bash-oo-framework/master/docs/unit.png&quot; alt=&quot;unit tests&quot; title=&quot;Unit tests for the framework itself&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly to &lt;a href=&quot;https://github.com/sstephenson/bats&quot;&gt;Bats&lt;/a&gt;, you can use the unit test module to test Bash scripts or any UNIX program. Test cases consist of standard shell commands. Like Bats, Infinity Framework uses Bash's errexit (set -e) option when running test cases. Each test is run in a subshell, and is independent from one another. To quote from Bats:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If every command in the test case exits with a 0 status code (success), the test passes. In this way, each line is an assertion of truth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you need to do more advanced testing, or need to be able to run your tests on shells other than bash 4, I'd still recommend Bats.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
it &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;should make a number and change its value&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
try
    integer aNumber=10
    aNumber = 12
    &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$aNumber&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
expectPass

it &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;should make basic operations on two arrays&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
try
    array Letters
    array Letters2

    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters push &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello Bobby&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters push &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello Maria&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters contains &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello Bobby&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters contains &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello Maria&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters2 push &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello Midori,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                        Best regards!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters2 concatAdd &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters

    &lt;span class=&quot;pl-smi&quot;&gt;$var&lt;/span&gt;:Letters2 contains &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hello Bobby&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
expectPass
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can you believe this is bash?! ;-)&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;import util/log
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here's an example of how to use the power of advanced logging provided by the Infinity Framework.&lt;/p&gt;
&lt;p&gt;In every file you are logging from, you may name the logging scope (namespace). If you won't do it, it'll be the filename, minus the extension. It's better to name though, as filenames can conflict. Thanks to scopes, you can specify exactly what and how you want to log.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
namespace myApp

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# ADD OUTPUT OF &quot;myApp&quot; TO DELEGATE STDERR&lt;/span&gt;
Log::AddOutput myApp STDERR

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# LET'S TRY LOGGING SOMETHING:&lt;/span&gt;
Log &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;logging to stderr&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above will simply print &quot;logging to stderr&quot; to STDERR. As you saw we used the logger output called &quot;STDERR&quot;. It is possible to create and register your own loggers:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# LET'S MAKE A CUSTOM LOGGER:&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;myLoggingDelegate&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hurray: &lt;span class=&quot;pl-smi&quot;&gt;$*&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# WE NEED TO REGISTER IT:&lt;/span&gt;
Log::RegisterLogger MYLOGGER myLoggingDelegate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we can set it up so that it direct only logs from a specific function to the our custom logger output:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# WE WANT TO DIRECT ALL LOGGING WITHIN FUNCTION myFunction OF myApp TO MYLOGGER&lt;/span&gt;
Log::AddOutput myApp/myFunction MYLOGGER

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# LET'S DECLARE THAT FUNCTION:&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;myFunction&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hey, I am a function!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    Log &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;logging from myFunction&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# AND RUN:&lt;/span&gt;
myFunction
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above code should print:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Hey, I am a function!
Hurray: logging from myFunction
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see, logging automatically redirected the logger from our function from our previously registered STDERR to our more specifically defined MYLOGGER. If you wish to keep logging to both loggers, you can disable the specificity filter:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
Log::DisableFilter myApp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now if we run the function &lt;code&gt;myFunction&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;The output will be:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Hey, I am a function!
Hurray: logging from myFunction
logging from myFunction
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can be even more specific and redirect messages with specific &lt;em&gt;subjects&lt;/em&gt; to other loggers, or mute them altogether:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;# Assuming we're in the same file, let's reset first&lt;/span&gt;
Log::ResetAllOutputsAndFilters

Log::AddOutput myApp/myFunction MYLOGGER

&lt;span class=&quot;pl-en&quot;&gt;myFunction&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hey, I am a function!&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    Log &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;logging from myFunction&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    subject=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;unimportant&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; Log &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;message from myFunction&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And let's change our custom logger a little, to support the subject:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;myLoggingDelegate&lt;/span&gt;() {
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Hurray: &lt;span class=&quot;pl-smi&quot;&gt;$subject&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$*&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now when we run &lt;code&gt;myFunction&lt;/code&gt;, we should get:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Hey, I am a function!
Hurray:  logging from myFunction
Hurray: unimportant message from myFunction
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To filter (or redirect) messages with subject &lt;code&gt;unimportant&lt;/code&gt; within &lt;code&gt;myFunction&lt;/code&gt; of &lt;code&gt;myApp&lt;/code&gt;'s file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
Log::AddOutput myApp/myFunction/unimportant VOID
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To filter any messages with subject &lt;code&gt;unimportant&lt;/code&gt; within &lt;code&gt;myApp&lt;/code&gt;'s file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
Log::AddOutput myApp/unimportant VOID
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or any messages with subject &lt;code&gt;unimportant&lt;/code&gt; anywhere:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
Log::AddOutput unimportant VOID
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, running &lt;code&gt;myFunction&lt;/code&gt; will print:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Hey, I am a function!
Hurray: logging from myFunction
&lt;/code&gt;
&lt;/pre&gt;

&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Clone or download this repository. You'll only need the &lt;strong&gt;/lib/&lt;/strong&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a new script just outside of that directory and at the top place this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${BASH_SOURCE[0]&lt;span class=&quot;pl-k&quot;&gt;%/*&lt;/span&gt;}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;/lib/oo-bootstrap.sh&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You may of course change the name of the &lt;strong&gt;/lib/&lt;/strong&gt; directory to your liking, just change it in the script too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Out-of-box you only get the import functionality. If you wish to use more features, such as the typing system, you'll need to import those modules as follows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; load the type system&lt;/span&gt;
import util/log util/exception util/tryCatch util/namedParameters

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; load the standard library for basic types and type the system&lt;/span&gt;
import util/class
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To import the unit test library you'll need to &lt;code&gt;import lib/types/util/test&lt;/code&gt;. The first error inside of the test will make the whole test fail.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When using &lt;code&gt;util/exception&lt;/code&gt; or &lt;code&gt;util/tryCatch&lt;/code&gt; don't use &lt;code&gt;set -o errexit&lt;/code&gt; or &lt;code&gt;set -e&lt;/code&gt; - it's not necessary, because error handling will be done by the framework itself.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Feel free to fork, suggest changes or new modules and file a pull request. The two features that I'd love to add are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;unit tests for all important methods&lt;/li&gt;
&lt;li&gt;port to bash 3 (preferably a dynamic port that imports the right file for the right version)&lt;/li&gt;
&lt;li&gt;a web generator for a single file version of the boilerplate (with an option to select modules of your choice)&lt;/li&gt;
&lt;li&gt;more functions for the standard library for primitive types (arrays, maps, strings, integers)&lt;/li&gt;
&lt;li&gt;useful standard classes are very welcome too&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main challenge in porting to &lt;strong&gt;bash 3&lt;/strong&gt; lays with creating a polyfill for associative arrays (probably by using every other index for the keys in an array), which are used by the type system. The other challenge would be to remove the global declarations (&lt;code&gt;declare -g&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If a function's been adapted or copied from the web or any other libraries out there, I always mention it in a comment within the code.&lt;/p&gt;
&lt;p&gt;Additionally, in the making of the v1 of Bash Infinity I took some inspiration from object-oriented bash libraries:&lt;/p&gt;
&lt;p&gt;More bash goodness:&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 10 Aug 2018 03:30:07 +0000</pubDate>
<dc:creator>jpatokal</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/563469?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>niieani/bash-oo-framework</og:title>
<og:url>https://github.com/niieani/bash-oo-framework</og:url>
<og:description>bash-oo-framework - Bash Infinity is a modern boilerplate / framework / standard library for bash</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/niieani/bash-oo-framework</dc:identifier>
</item>
<item>
<title>Microsoft threatens to stop hosting Gab unless posts are removed</title>
<link>http://thehill.com/policy/technology/401129-microsoft-threatens-to-boot-gab-over-neo-nazis-hate-speech-posts</link>
<guid isPermaLink="true" >http://thehill.com/policy/technology/401129-microsoft-threatens-to-boot-gab-over-neo-nazis-hate-speech-posts</guid>
<description>&lt;p&gt;A neo-Nazi deleted two posts on Gab, a social media company popular with the alt-right and white supremacists, after Microsoft's cloud computing service threatened to block the platform.&lt;/p&gt;
&lt;p&gt;GabÂ said inÂ &lt;a href=&quot;https://twitter.com/getongab/status/1027550072932851713&quot;&gt;a tweet&lt;/a&gt;Â ThursdayÂ thatÂ Microsoft ordered it toÂ take down a pair of anti-SemiticÂ messages written by Patrick Little, a neo-Nazi who ran for Senate in California.Â Azure said if Gab did not comply in two days it would suspend its cloud services for the microblogging site, effectively taking it down.&lt;/p&gt;
&lt;p&gt;Little on Thursday afternoonÂ voluntarily &lt;a href=&quot;https://twitter.com/getongab/status/1027604682275995649&quot;&gt;deleted&lt;/a&gt; the posts.&lt;/p&gt;
&lt;p&gt;Littleâs posts had advocated for physically harming Jews. In one post, Little said he wouldÂ livestreamÂ himself destroyingÂ anÂ unspecified Holocaust memorial in the U.S.&lt;/p&gt;
&lt;p&gt;In a letter to Gab, Microsoft had said that the &quot;Azure Safeguards team received a complaint about malicious activityâ on their platform. The company told Gab that it is âresponsible for addressing complaints from third partiesâ for violating Azureâs service terms.&lt;/p&gt;
&lt;p&gt;Microsoft defended its decision in a separate statement.&lt;/p&gt;
&lt;p&gt;&quot;Microsoft received a complaint about specific posts on Gab.ai that advocate âritual death by tortureâ and the âcomplete eradicationâ of all Jews. After an initial review, we have concluded that this content incites violence, is not protected by the First Amendment, and violates Microsoft Azureâs acceptable use policy,&quot; Microsoft said in a statement to The Hill.Â &lt;/p&gt;
&lt;p&gt;Gab has been adopted by members of the alt-right and white supremacists who have been barred from other social media platforms. The company though insists its only committed to free speech and does not support any positions or ideologies.&lt;/p&gt;
&lt;p&gt;Microsoftâs action comes as a wave of platforms has begun to crack down on Infowars, a site which has promoted conspiracy theories. Over the past two weeks, Spotify, Apple, FacebookÂ andÂ YouTube have all booted Infowars from parts of their platforms.&lt;/p&gt;
&lt;p&gt;Little and Infowars are different ideologically, but the moves appear to a part of a larger effort to curb harmful speech online.&lt;/p&gt;
&lt;p&gt;Infowars founder Alex Jones, for example, pushed false conspiracy theories that the students in the Parkland, Fla. shooting this year were crisis actors, and claimed that the Sandy Hook Elementary shooting in 2012 was staged.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Updated at 3:52 p.m.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 09 Aug 2018 19:24:48 +0000</pubDate>
<dc:creator>anigbrowl</dc:creator>
<og:type>article</og:type>
<og:title>Neo-Nazi deletes anti-Semitic posts from 'alt-right' Twitter</og:title>
<og:url>http://thehill.com/policy/technology/401129-microsoft-threatens-to-boot-gab-over-neo-nazis-hate-speech-posts</og:url>
<og:description>The social media platform Gab is hosted on Microsoft's cloud computing services.</og:description>
<og:image>http://thehill.com/sites/default/files/microsoft_062018.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://thehill.com/policy/technology/401129-microsoft-threatens-to-boot-gab-over-neo-nazis-hate-speech-posts</dc:identifier>
</item>
<item>
<title>America&amp;#039;s first big offshore wind farm sets record low price</title>
<link>https://reneweconomy.com.au/americas-first-big-offshore-wind-farm-sets-record-low-price-of-6-5c-kwh-45126/</link>
<guid isPermaLink="true" >https://reneweconomy.com.au/americas-first-big-offshore-wind-farm-sets-record-low-price-of-6-5c-kwh-45126/</guid>
<description>&lt;div class=&quot;entry-content-inner padding-left&quot;&gt;
&lt;div class=&quot;pf-content&quot;&gt;
&lt;div class=&quot;printfriendly pf-alignright&quot;&gt;&lt;a href=&quot;https://reneweconomy.com.au/americas-first-big-offshore-wind-farm-sets-record-low-price-of-6-5c-kwh-45126/#&quot; rel=&quot;nofollow&quot; onclick=&quot;window.print(); return false;&quot; class=&quot;noslimstat&quot; title=&quot;Printer Friendly, PDF &amp;amp; Email&quot;&gt;&lt;img src=&quot;https://cdn.printfriendly.com/buttons/print-button-nobg.png&quot; alt=&quot;Print Friendly, PDF &amp;amp; Email&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Americaâs first commercial-scale offshore wind farm is expected to save electricity consumers in the state of Massachusetts around $1.4 billion over 20 years, by supplying power about 18 per cent cheaper than any alternative sources.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-08-01/first-big-u-s-offshore-wind-offers-1-4-billion-to-customers&quot;&gt;Bloomberg reports&lt;/a&gt; that the 800MW Vineyard Wind project â a yet-to-be-built joint effort of Avangrid and Copenhagen Infrastructure Partners â is expected to provide electricity and renewable energy credits for 6.5 cents a kilowatt-hour (8.5c/kWh AUD) over the life of its 20-year contract.&lt;/p&gt;
&lt;p&gt;âThis total price is materially below the levelized projected costs of buying the same amount of wholesale energy and RECs in the market, which is projected to be a total levelized price of 7.9 cents/KWh,â &lt;a href=&quot;https://macleanenergy.files.wordpress.com/2018/08/doer-83c-filing-letter-dpu-18-76-18-77-18-78august-1-2018.pdf&quot;&gt;a letter from the state Department of Energy Resources&lt;/a&gt; said on Wednesday.&lt;/p&gt;
&lt;div class=&quot;code-block code-block-9&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-4737885209238599&quot; data-ad-slot=&quot;8795554017&quot; data-ad-format=&quot;auto&quot; data-full-width-responsive=&quot;true&quot;/&gt; &lt;/div&gt;
&lt;p&gt;This was confirmed by the CEO of the project, Lars Thaaning Pedersen, who said in a statement that federal tax credits and a long-term power-purchase agreement had helped the wind farm âoffer an attractive priceâ to consumers.&lt;/p&gt;
&lt;p&gt;âAt a total levelized price of 6.5c/kWh for energy and RECs, the Vineyard Wind offshore wind generation long-term contracts provide a highly cost-effective source of clean energy generation for Massachusetts customers,â the letter said.&lt;/p&gt;
&lt;p&gt;âAs shown in the EDCsâ filings,â the letter continues, âon average, these contracts are expected to reduce customersâ monthly bills, all else being equal, approximately 0.1 per cent to 1.5 per cent.â&lt;/p&gt;
&lt;p&gt;According to Bloomberg, that makes the wind farm âÂ off the coast of Marthaâs Vineyard â about 18 per cent cheaper than other generation alternatives, and lower in cost than even the wind industry expected.&lt;/p&gt;
&lt;p&gt;âThatâs pretty shocking for us,â said Bloomberg NEF wind analyst Tom Harries. âI think the wider industry expected much higher prices.&lt;/p&gt;
&lt;p&gt;âThe general consensus was that it would take a while for new markets to reach levels weâve seen in Europe and the U.S. seems to be doing this pretty fast,â he said.&lt;/p&gt;
&lt;p&gt;âThe repercussions of this are it will probably awaken a lot of other coastal states to the value of offshore wind.â&lt;/p&gt;

&lt;p&gt;Offshore wind, while nowhere near as well established as its onshore cousin, has been slowly catching up, both on price and installations.&lt;/p&gt;
&lt;p&gt;According to a 2018 report by the International Renewable Energy Agency, IRENA, auction results in 2016 and 2017, for offshore wind projects due to be commissioned in 2020 and beyond, signalled a step-change that would take costs down to between 6-10c/KWh (USD).&lt;/p&gt;
&lt;p&gt;Last year, a UK renewables auction saw two developers win the rights to build offshore wind farms for around USD 7.5c/kWh; a price â &lt;a href=&quot;https://reneweconomy.com.au/uk-renewables-auctions-set-record-low-price-offshore-wind-58427/&quot;&gt;as we reported here&lt;/a&gt; â that was 50 per cent below the guaranteed development price for offshore wind of just two years before, and well below the cost of nuclear in the UK.&lt;/p&gt;
&lt;p&gt;As prices continue to fall, Bloomberg NEF has forecast installation growth of around 16 per cent a year, through 2030, driven by the UK, Germany, Netherlands and China.&lt;/p&gt;
&lt;p&gt;Construction of the Vineyard Wind project is set to start in 2019, and to have the plant sending power to the Massachusetts grid by 2021.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;printfriendly-bottom&quot;&gt;&lt;a href=&quot;https://reneweconomy.com.au/americas-first-big-offshore-wind-farm-sets-record-low-price-of-6-5c-kwh-45126/#&quot; rel=&quot;nofollow&quot; onclick=&quot;window.print(); return false;&quot; class=&quot;noslimstat&quot; title=&quot;Printer Friendly, PDF &amp;amp; Email&quot;&gt;&lt;img src=&quot;https://cdn.printfriendly.com/buttons/print-button-nobg.png&quot; alt=&quot;Print Friendly, PDF &amp;amp; Email&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 09 Aug 2018 18:01:34 +0000</pubDate>
<dc:creator>Osiris30</dc:creator>
<og:type>article</og:type>
<og:title>Americaâs first big offshore wind farm sets record low price of 6.5c/kWh</og:title>
<og:url>https://reneweconomy.com.au/americas-first-big-offshore-wind-farm-sets-record-low-price-of-6-5c-kwh-45126/</og:url>
<og:description>First commercial-scale offshore wind farm in US expected to save electricity consumers around $1.4bn over 20 years, by supplying power 18% cheaper than alternative sources.</og:description>
<og:image>https://reneweconomy.com.au/wp-content/uploads/2017/06/offshorewind-copy-3.jpg</og:image>
<dc:language>en-AU</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://reneweconomy.com.au/americas-first-big-offshore-wind-farm-sets-record-low-price-of-6-5c-kwh-45126/</dc:identifier>
</item>
<item>
<title>A Dutch first: Ingenious BMW theft attempt</title>
<link>https://mrooding.me/a-dutch-first-ingenious-bmw-theft-attempt-5f7f49a96ec8</link>
<guid isPermaLink="true" >https://mrooding.me/a-dutch-first-ingenious-bmw-theft-attempt-5f7f49a96ec8</guid>
<description>&lt;p name=&quot;0ae5&quot; id=&quot;0ae5&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;It was Sunday afternoon when I installed the roof rack on my new BMW F30 320i. We were about to go on a 2 week trip to France and were intending to leave next Friday.&lt;/p&gt;
&lt;p name=&quot;2ee6&quot; id=&quot;2ee6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;During that night, my girlfriend and I were fast asleep, when at 03:45 the doorbell rang. We looked at each other dazed. I got out of bed and attempted to journey downstairs in my boxers when the doorbell rang again. Before opening the door I went into the living room to gaze out of the window. A police car with 2 policemen was standing in front of our house. I opened the door and was welcomed with the question whether I owned a BMW with a specific license plate. They said that a car burglary had taken place. The follow-up question was whether or not the alarm system was linked to an emergency call center. I knew my car was equipped with a class 3 alarm system but wasnât sure whether or not that meant that it actually communicated with an external call center. They told me that the call they received was from an emergency call center so it must have an external connection.&lt;/p&gt;
&lt;h3 name=&quot;06a6&quot; id=&quot;06a6&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Mere vandalism?&lt;/h3&gt;
&lt;p name=&quot;9f55&quot; id=&quot;9f55&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;After putting on some clothes, we went to the car to inspect the damage. The front window on the passengerâs side was partially broken. After looking around the car, I entered the car through the driverâs door and tries to turn on the interior lighting. For some reason, none of the interior lighting buttons worked. Being sure that they werenât broken before, but probably out of sheer tiredness, I didnât think much of it at that time. I only cared for it not being stolen. I looked around the car and couldnât find anything missing or out of order. Was this simply a case of vandalism?&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*_djdK0inzgoACB_PtcyKag.jpeg&quot; data-width=&quot;2542&quot; data-height=&quot;1906&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*_djdK0inzgoACB_PtcyKag.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*_djdK0inzgoACB_PtcyKag.jpeg&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;90b7&quot; id=&quot;90b7&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The police advised me to report it first thing in the morning. I decided to seal the window with a duct-taped garbage bag and went back to bed for the 1.5 hours I had before my alarm clock went off.&lt;/p&gt;
&lt;h3 name=&quot;a6b7&quot; id=&quot;a6b7&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The nextÂ day&lt;/h3&gt;
&lt;p name=&quot;c76f&quot; id=&quot;c76f&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The first thing next morning was a phone call to my insurance company and to Car Glass, the glass repair company. I was able to get an appointment for 10:30 the same day. When it was time to head out to Car Glass, I switched on the ignition and faced a severe error and a warning on the BMW iDrive interface. The severe error stated that there was an issue with the passengerâs side seatbelt. The warning stated that the SOS button on the ceiling wasnât in contact with BMW anymore.&lt;/p&gt;
&lt;p name=&quot;f65a&quot; id=&quot;f65a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The window was replaced within 30 minutes and I hoped that maybe after replacing the window, the warning and error notifications would also disappear. Unfortunately, this was not the case. I decided to call the local BMW dealer. They advised me to drop by in the afternoon so that they could take a look at it.&lt;/p&gt;
&lt;h3 name=&quot;b234&quot; id=&quot;b234&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;A nastyÂ surprise&lt;/h3&gt;
&lt;p name=&quot;dc4b&quot; id=&quot;dc4b&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;That afternoon, on my way home, I dropped by the BMW dealer. After explaining the situation, one of the service employees followed me to my car. He looked all around, trying to figure out what the burglars were trying to achieve. After being puzzled for a while, another service employee joined the search. Neither of them had a clue why the car would suddenly malfunction like this, just because of a broken window.&lt;/p&gt;
&lt;p name=&quot;777f&quot; id=&quot;777f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It felt like they were about to dismiss the issues and ask me to come back after my holiday when one of the service employees saw a small opening on the inside of the jamb. He pulled it away. We were able to see one end of the airbag and also a wire loom running through the jamb up to the ceiling of the car. After close inspection, I noticed that the wire loom was cut through.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Qwnir2hM1mUOOEOSWKbwwA.jpeg&quot; data-width=&quot;1364&quot; data-height=&quot;1818&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Qwnir2hM1mUOOEOSWKbwwA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Qwnir2hM1mUOOEOSWKbwwA.jpeg&quot;/&gt;&lt;/div&gt;
The interior panel of the jamb after pulling itÂ away
&lt;p name=&quot;45f0&quot; id=&quot;45f0&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;My first thought at that time was, does the interior alarm actually still work? We closed the doors and locked the car. Not all too surprising, the alarm light underneath the interior mirror didnât blink as it normally would. At that time, the service employee strongly advised me not to take my car home.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*riVuGESkDE84bSwx8ftWOg.jpeg&quot; data-width=&quot;1364&quot; data-height=&quot;1818&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*riVuGESkDE84bSwx8ftWOg.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*riVuGESkDE84bSwx8ftWOg.jpeg&quot;/&gt;&lt;/div&gt;
Cut through cableÂ loom
&lt;h3 name=&quot;d461&quot; id=&quot;d461&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Digging deeper&lt;/h3&gt;
&lt;p name=&quot;b511&quot; id=&quot;b511&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;He explained that behind the air vents located on the ceiling, 2 sensors are located for detecting break-ins. The first is a radar, used for movement detection inside the car. The other one was an air pressure sensor, used for detecting sudden changes in air pressure. This is the sensor that will, among other things, detect a broken window.&lt;/p&gt;
&lt;p name=&quot;2cc4&quot; id=&quot;2cc4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We looked at each other, less puzzled than before. It was crystal clear that these burglars were not ignorant. They knew exactly what they were doing. Their grand scheme was to make it look like a simple break-in without theft, while cleverly disabling the internal alarm systems, and covering their tracks as best as possible.&lt;/p&gt;
&lt;p name=&quot;1f66&quot; id=&quot;1f66&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Most likely, if I parked the car in front of our house the next night, they would break in again, without triggering an alarm. That would give them more than enough time to bypass the ignition interlock and steal the car entirely.&lt;/p&gt;
&lt;p name=&quot;185a&quot; id=&quot;185a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The service employee told me that heâd never seen this before and after asking around in the local dealership, nobody seemed to have heard of this modus operandi for stealing a BMW.&lt;/p&gt;
&lt;h3 name=&quot;2da6&quot; id=&quot;2da6&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The follow-up&lt;/h3&gt;
&lt;p name=&quot;394a&quot; id=&quot;394a&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;When I went back to the dealer a few days later to return the replacement rental car, I spoke to a different employee who was wondering which external call center rang the police. He told me that a class 3 alarm system doesnât have a tracking option. I told him about the cut wire and how it disabled the SOS button. His thought was that it was actually the BMW call center which is hooked up to the SOS button. His suspicion was that, as soon as the button loses connection with BMW, they get notified.&lt;/p&gt;
&lt;p name=&quot;d043&quot; id=&quot;d043&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I decided to call the police to inquire about the phone call. The officer I spoke to was unable to tell me which phone number or external call center it was, but that it was, in fact, a call center. The message they passed on was that there was either a burglary attempt or that my car was involved in an accident. They gave the police the exact coordinates of my car and it only took the surveilling car 5 minutes to get to the car. I explained the burglarâs modus operandi to the officer, and she would pass on the message, hoping that this would prevent other attempts.&lt;/p&gt;
&lt;p name=&quot;e130&quot; id=&quot;e130&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The BMW service employee also told me that he rang the national BMW damage repair center. They confirmed that they also never seen a car theft attempt like this before.&lt;/p&gt;
&lt;p name=&quot;9f89&quot; id=&quot;9f89&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;As both the Dutch police and BMW in the Netherlands has never witnessed this modus operandi, I hope that by sharing this story I will be able to save other people from actually having their cars stolen in this way.&lt;/p&gt;
&lt;h3 name=&quot;a480&quot; id=&quot;a480&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;TL;DR&lt;/h3&gt;
&lt;p name=&quot;263b&quot; id=&quot;263b&quot; class=&quot;graf graf--p graf-after--h3 graf--trailing&quot;&gt;So, if you find your passengerâs front side window broken and a warning regarding the SOS button having lost connection to BMW appears, immediately contact your dealer and make sure itâs parked at the dealerâs or in a secured area.&lt;/p&gt;
</description>
<pubDate>Thu, 09 Aug 2018 17:26:46 +0000</pubDate>
<dc:creator>rapnie</dc:creator>
<og:title>A Dutch first: Ingenious BMW theft attempt â Ramblings of a Dutch dev</og:title>
<og:url>https://mrooding.me/a-dutch-first-ingenious-bmw-theft-attempt-5f7f49a96ec8</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*_djdK0inzgoACB_PtcyKag.jpeg</og:image>
<og:description>It was Sunday afternoon when I installed the roof rack on my new BMW F30 320i. We were about to go on a 2 week trip to France and wereâ¦</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://mrooding.me/a-dutch-first-ingenious-bmw-theft-attempt-5f7f49a96ec8?gi=cf8e55a65f1b</dc:identifier>
</item>
<item>
<title>Show HN: Retool â build internal tools faster</title>
<link>https://tryretool.com</link>
<guid isPermaLink="true" >https://tryretool.com</guid>
<description>&lt;p&gt;2. Search your users&lt;/p&gt;
&lt;p&gt;Data, meet TextBox. Table, meet data.&lt;/p&gt;
&lt;p&gt;Retool connects to anything: APIs, databases, etc. To pull in data, you write queries in an interface you're familiar with: GUIs for HTTP APIs, SQL for Postgres.&lt;/p&gt;
&lt;p&gt;These queries can refer to other components. So in the SQL query, we use the value of a &lt;code&gt;TextBox&lt;/code&gt;. And whenever &lt;code&gt;TextBox&lt;/code&gt; changes, the SQL query automatically updates.&lt;/p&gt;
&lt;p&gt;Then we connect the &lt;code&gt;Table&lt;/code&gt; to the SQL query. And because the SQL query depends on the &lt;code&gt;TextBox&lt;/code&gt;, typing in it filters the &lt;code&gt;Table&lt;/code&gt; itself.&lt;/p&gt;
</description>
<pubDate>Thu, 09 Aug 2018 16:56:13 +0000</pubDate>
<dc:creator>dvdhsu</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://tryretool.com/</dc:identifier>
</item>
<item>
<title>Chemists discover how blue light speeds blindness</title>
<link>https://phys.org/news/2018-08-chemists-blue.html</link>
<guid isPermaLink="true" >https://phys.org/news/2018-08-chemists-blue.html</guid>
<description>&lt;div class=&quot;first-block&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;image-block-ins&quot;&gt;&lt;a href=&quot;https://3c1703fe8d.site.internapcdn.net/newman/gfx/news/hires/2018/utoledochemi.jpg&quot; title=&quot;Dr. Ajith Karunarathne examined toxic oxygen generation by retinal during blue light exposure. Credit: Dan Miller, The University of Toledo&quot;&gt;&lt;img src=&quot;https://3c1703fe8d.site.internapcdn.net/newman/csz/news/800/2018/utoledochemi.jpg&quot; alt=&quot;UToledo chemists discover how blue light speeds blindness&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
Dr. Ajith Karunarathne examined toxic oxygen generation by retinal during blue light exposure. Credit: Dan Miller, The University of Toledo
&lt;p&gt;Blue light from digital devices and the sun transforms vital molecules in the eye's retina into cell killers, according to optical chemistry research at The University of Toledo.&lt;/p&gt;
&lt;/div&gt;&lt;section class=&quot;article-banner first-banner&quot;&gt;
&lt;/section&gt;&lt;p&gt;The process outlined in the study, which was recently published in the journal &lt;em&gt;Scientific Reports&lt;/em&gt;, leads to &lt;a href=&quot;https://phys.org/tags/age-related+macular+degeneration/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;age-related macular degeneration&lt;/a&gt;, a leading cause of blindness in the United States.&lt;/p&gt;
&lt;p&gt;&quot;We are being exposed to blue light continuously, and the eye's cornea and lens cannot block or reflect it,&quot; Dr. Ajith Karunarathne, assistant professor in the UT Department of Chemistry and Biochemistry, said. &quot;It's no secret that blue light harms our vision by damaging the eye's retina. Our experiments explain how this happens, and we hope this leads to therapies that slow macular degeneration, such as a new kind of eye drop.&quot;&lt;/p&gt;
&lt;p&gt;Macular degeneration, an incurable eye disease that results in significant vision loss starting on average in a person's 50s or 60s, is the death of photoreceptor &lt;a href=&quot;https://phys.org/tags/cells/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;cells&lt;/a&gt; in the retina. Those cells need &lt;a href=&quot;https://phys.org/tags/molecules/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;molecules&lt;/a&gt; called retinal to sense light and trigger a cascade of signaling to the brain.&lt;/p&gt;
&lt;p&gt;&quot;You need a continuous supply of retinal molecules if you want to see,&quot; Karunarathne said. &quot;Photoreceptors are useless without retinal, which is produced in the eye.&quot;&lt;/p&gt;
&lt;p&gt;Karunarathne's lab found that blue light exposure causes retinal to trigger reactions that generate poisonous chemical molecules in photoreceptor cells.&lt;/p&gt;
&lt;p&gt;&quot;It's toxic. If you shine blue light on retinal, the retinal kills &lt;a href=&quot;https://phys.org/tags/photoreceptor+cells/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;photoreceptor cells&lt;/a&gt; as the signaling molecule on the membrane dissolves,&quot; Kasun Ratnayake, a Ph.D. student researcher working in Karunarathne's cellular photo chemistry group, said. &quot;Photoreceptor cells do not regenerate in the eye. When they're dead, they're dead for good.&quot;&lt;/p&gt;
&lt;p&gt;Karunarathne introduced retinal molecules to other cell types in the body, such as cancer cells, heart cells and neurons. When exposed to blue light, these cell types died as a result of the combination with retinal. Blue light alone or retinal without blue light had no effect on cells.&lt;/p&gt;
&lt;p&gt;&quot;No activity is sparked with green, yellow or red light,&quot; Karunarathne said. &quot;The retinal-generated toxicity by blue light is universal. It can kill any cell type.&quot;&lt;/p&gt;
&lt;p&gt;The researcher found that a molecule called alpha tocoferol, a Vitamin E derivative and a natural antioxidant in the eye and body, stops the cells from dying. However, as a person ages or the immune system is suppressed, people lose the ability to fight against the attack by retinal and blue light.&lt;/p&gt;
&lt;p&gt;&quot;That is when the real damage occurs,&quot; Karunarathne said.The lab currently is measuring light coming from television, cell phone and tablet screens to get a better understanding of how the cells in the eyes respond to everyday blue light exposure.&lt;/p&gt;
&lt;p&gt;&quot;If you look at the amount of light coming out of your cell phone, it's not great but it seems tolerable,&quot; Dr. John Payton, visiting assistant professor in the UT Department of Chemistry and Biochemistry, said. &quot;Some &lt;a href=&quot;https://phys.org/tags/cell+phone/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;cell phone&lt;/a&gt; companies are adding blue-light filters to the screens, and I think that is a good idea.&quot;&lt;/p&gt;
&lt;p&gt;To protect your eyes from blue light, Karunarathne advises to wear sunglasses that can filter both UV and blue &lt;a href=&quot;https://phys.org/tags/light/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;light&lt;/a&gt; outside and avoid looking at your cell phones or tablets in the dark.&lt;/p&gt;
&lt;p&gt;&quot;Every year more than two million new cases of age-related &lt;a href=&quot;https://phys.org/tags/macular+degeneration/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;macular degeneration&lt;/a&gt; are reported in the United States,&quot; Karunarathne said. &quot;By learning more about the mechanisms of blindness in search of a method to intercept toxic reactions caused by the combination of retinal and &lt;a href=&quot;https://phys.org/tags/blue+light/&quot; rel=&quot;tag&quot; class=&quot;textTag&quot;&gt;blue light&lt;/a&gt;, we hope to find a way to protect the vision of children growing up in a high-tech world.&quot;&lt;/p&gt;
&lt;p class=&quot;news-relevant&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/WebPage&quot;&gt;&lt;a href=&quot;https://phys.org/news/2018-08-chemists-blue.html#&quot; id=&quot;inl-rel-href&quot;&gt;&lt;img class=&quot;toolsicon ic-rel&quot; src=&quot;https://cf3e497594.site.internapcdn.net/tmpl/v5/img/1x1.gif&quot; width=&quot;14&quot; height=&quot;16&quot; alt=&quot;&quot;/&gt;&lt;/a&gt; &lt;strong&gt;Explore further:&lt;/strong&gt; &lt;a itemprop=&quot;relatedLink&quot; href=&quot;https://medicalxpress.com/news/2017-12-fruit-breakthrough-human.html&quot;&gt;Fruit fly breakthrough may help human blindness research&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More information:&lt;/strong&gt; Kasun Ratnayake et al, Blue light excited retinal intercepts cellular signaling, &lt;em&gt;Scientific Reports&lt;/em&gt; (2018). &lt;a data-doi=&quot;1&quot; href=&quot;http://dx.doi.org/10.1038/s41598-018-28254-8&quot; target=&quot;_blank&quot;&gt;DOI: 10.1038/s41598-018-28254-8&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;footer class=&quot;post-floor clearfix&quot; readability=&quot;17.300970873786&quot;&gt;&lt;div class=&quot;post-copyright&quot; readability=&quot;25.380281690141&quot;&gt;
&lt;p&gt;&lt;strong&gt;Journal reference:&lt;/strong&gt; &lt;a rel=&quot;news&quot; class=&quot;textTag&quot; href=&quot;https://phys.org/journals/scientific-reports/&quot;&gt;Scientific Reports&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Provided by:&lt;/strong&gt; University of Toledo&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;post-rating&quot; id=&quot;rank&quot;&gt;
&lt;div id=&quot;flip-box&quot;&gt;
&lt;div class=&quot;flip&quot;&gt;
&lt;p&gt;&lt;span id=&quot;shares&quot;&gt;1303&lt;/span&gt; shares &lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/footer&gt;</description>
<pubDate>Thu, 09 Aug 2018 15:27:53 +0000</pubDate>
<dc:creator>maxwell</dc:creator>
<og:title>Chemists discover how blue light speeds blindness</og:title>
<og:description>Blue light from digital devices and the sun transforms vital molecules in the eye's retina into cell killers, according to optical chemistry research at The University of Toledo.</og:description>
<og:image>https://3c1703fe8d.site.internapcdn.net/newman/gfx/news/hires/2018/utoledochemi.jpg</og:image>
<og:type>article</og:type>
<og:url>https://phys.org/news/2018-08-chemists-blue.html</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://phys.org/news/2018-08-chemists-blue.html</dc:identifier>
</item>
<item>
<title>I don&amp;#039;t trust Signal</title>
<link>https://drewdevault.com/2018/08/08/Signal.html</link>
<guid isPermaLink="true" >https://drewdevault.com/2018/08/08/Signal.html</guid>
<description>&lt;p&gt;Occasionally when Signal is in the press and getting a lot of favorable discussion, I feel the need to step into various forums, IRC channels, and so on, and explain why I donât trust Signal. Letâs do a blog post instead.&lt;/p&gt;&lt;p&gt;Off the bat, let me explain that I expect a tool which claims to be secure to actually be secure. I donât view âbut that makes it harder for the average personâ as an acceptable excuse. If Edward Snowden and Bruce Schneier are going to spout the virtues of the app, I expect it to &lt;em&gt;actually&lt;/em&gt; be secure when it matters - when vulnerable people using it to encrypt sensitive communications are targeted by smart and powerful adversaries.&lt;/p&gt;
&lt;p&gt;Making promises about security without explaining the tradeoffs you made in order to appeal to the average user is unethical. Tradeoffs are necessary - but self-serving tradeoffs are not, and itâs your responsibility to clearly explain the drawbacks and advantages of the tradeoffs you make. If you make broad and inaccurate statements about your communications product being âsecureâ, then when the political prisoners who believed you are being tortured and hanged, itâs on you. The stakes are serious. Let me explain why I donât think Signal takes them seriously.&lt;/p&gt;
&lt;h2 id=&quot;google-play&quot;&gt;Google Play&lt;/h2&gt;
&lt;p&gt;Why do I make a big deal out of Google Play and Google Play Services? Well, some people might trust Google, the company. But up against nation states, itâs no contest - Google has ties to the NSA, has been served secret subpoenas, and is literally the worldâs largest machine designed for harvesting and analyzing private information about their users. Hereâs what Google Play Services &lt;em&gt;actually&lt;/em&gt; is: &lt;strong&gt;a rootkit&lt;/strong&gt;. Google Play Services lets Google do silent background updates on apps on your phone and give them any permission they want. Having Google Play Services on your phone means your phone is not secure.&lt;sup id=&quot;fnref:1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;For the longest time, Signal wouldnât work without Google Play Services, but Moxie (the founder of Open Whisper Systems and maintainer of Signal) finally fixed this in 2017. There was also a long time when Signal was only available on the Google Play Store. Today, you can &lt;a href=&quot;https://signal.org/android/apk/&quot;&gt;download the APK directly from signal.org&lt;/a&gt;, butâ¦ well, weâll get to that in a minute.&lt;/p&gt;
&lt;h2 id=&quot;f-droid&quot;&gt;F-Droid&lt;/h2&gt;
&lt;p&gt;Thereâs an alternative to the Play Store for Android. &lt;a href=&quot;https://f-droid.org&quot;&gt;F-Droid&lt;/a&gt; is an open source app âstoreâ (repository would be a better term here) which only includes open source apps (which Signal thankfully is). By no means does Signal have to &lt;em&gt;only&lt;/em&gt; be distributed through F-Droid - itâs certainly a compelling alternative. This has been proposed, and Moxie has &lt;a href=&quot;https://github.com/signalapp/Signal-Android/issues/127&quot;&gt;definitively shut the discussion down&lt;/a&gt;. Admittedly this is from 2013, but his points and the arguments against them havenât changed. Let me quote some of his positions and my rebuttals:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;No upgrade channel. Timely and automatic updates are perhaps the most effective security feature we could ask for, and not having them would be a real blow for the project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;F-Droid supports updates. If youâre concerned about moving your updates quickly through the (minimal) bureaucracy of F-Droid, you can always run your own repository. Maybe this is a lot of work?&lt;sup id=&quot;fnref:2&quot;/&gt; I wonder how the workload compares to &lt;a href=&quot;https://signal.org/blog/signal-and-giphy-update/&quot;&gt;animated gif search&lt;/a&gt;, a very important feature for security concious users. I bet that &lt;a href=&quot;https://signal.org/blog/signal-foundation/&quot;&gt;50 million dollar donation&lt;/a&gt; could help, given how many people operate F-Droid repositories on a budget of $0.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;No app scanning. The nice thing about market is the server-side APK scanning and signature validation they do. If you start distributing APKs around the internet, itâs a reversion back to the PC security model and all of the malware problems that came with it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Try searching the Google Play Store for âflashlightâ and look at the permissions of the top 5 apps that come up. All of them are harvesting and selling the personal information of their users to advertisers. Is this some kind of joke? F-Droid is a curated repository, like Linux distributions. Google Play is a malware distributor. Packages on F-Droid are reviewed by a human being and are &lt;a href=&quot;https://f-droid.org/en/docs/Signing_Process/&quot;&gt;cryptographically signed&lt;/a&gt;. If you run your own F-Droid repo this is even less of a concern.&lt;/p&gt;
&lt;p&gt;Iâm not going to address all of Moxieâs points here, because thereâs a deeper problem to consider. Iâll get into more detail shortly. You can read the 6-year-old threads tearing Moxieâs arguments apart over and over again until GitHub added the feature to lock threads, if you want to see a more in-depth rebuttal.&lt;/p&gt;
&lt;h2 id=&quot;the-apk-direct-download&quot;&gt;The APK direct download&lt;/h2&gt;
&lt;p&gt;Last year Moxie added an official APK download to signal.org. He said this was up for â&lt;a href=&quot;https://github.com/signalapp/Signal-Android/issues/127#issuecomment-286223680&quot;&gt;harm reduction&lt;/a&gt;â, to avoid people using unofficial builds they find around the net. The download page is covered in warnings telling you that itâs for advanced users only, itâs insecure, would you please go to the Google Play store you stupid user. I wonder, has Moxie considered communicating to people the risks of using the Google Play version?&lt;sup id=&quot;fnref:3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The APK direct download doesnât even accomplish the stated goal of âharm reductionâ. The user has to manually verify the checksum, and figure out how to do it on a phone, no less. A checksum isnât a signature, by the way - if your government- or workplace- or abusive-spouse-installed certificate authority gets in the way they can replace the APK &lt;em&gt;and&lt;/em&gt; its checksum with whatever they want. The app has to update itself, using a similarly insecure mechanism. F-Droid handles updates and actually signs their packages. This is a no brainer, Moxie, why havenât you put Signal on F-Droid yet?&lt;/p&gt;
&lt;h2 id=&quot;why-is-signal-like-this&quot;&gt;Why is Signal like this?&lt;/h2&gt;
&lt;p&gt;So if you donât like all of this, if you donât like how Moxie approaches these issues, if you want to use something else, what do you do?&lt;/p&gt;
&lt;p&gt;Moxie knows about everything Iâve said in this article. Heâs a very smart guy and I am under no illusions that he doesnât understand everything Iâve put forth. I donât think that Moxie makes these choices because he thinks theyâre the right thing to do. He makes arguments which donât hold up, derails threads, leans on logical fallacies, and loops back around to long-debunked positions when he runs out of ideas. I think this is deliberate. An open source software team reads this article as a list of things they can improve on and gets started. Moxie reads this and prepares for war. Moxie canât come out and say it openly, but heâs made the decisions he has made because they serve his own interests.&lt;/p&gt;
&lt;p&gt;Lots of organizations which are pretending they donât make self-serving decisions at their customerâs expense rely on argumentative strategies like Moxie does. If you can put together an argument which on the surface appears reasonable, but requires in-depth discussion to debunk, passerby will be reassured that your position is correct, and that the dissenters are just trolls. They wonât have time to read the lengthy discussion which demonstrates that your conclusions are wrong, especially if you draw the discussion out like Moxie does. It can be hard to distinguish these from genuine positions held by the person youâre talking to, but when it conveniently allows them to make self-serving plays, itâs a big red flag.&lt;/p&gt;
&lt;p&gt;This is a strong accusation, I know. The thing which convinced me of its truth is Signalâs centralized design and hostile attitude towards forks. In open source, when a project is making decisions and running things in a way you donât like, you can always fork the project. This is one of the fundamental rights granted to you by open source. It has a side effect Moxie doesnât want, however. It reduces his power over the project. Moxie has a clever solution to this: centralized servers and trademarks.&lt;/p&gt;
&lt;h2 id=&quot;trust-federation-and-peer-to-peer-chat&quot;&gt;Trust, federation, and peer-to-peer chat&lt;/h2&gt;
&lt;p&gt;Truly secure systems do not require you to trust the service provider. This is the point of end-to-end encryption. But we have to trust that Moxie is running the server software he says he is. We have to trust that he isnât writing down a list of people weâve talked to, when, and how often. We have to trust not only that Moxie is trustworthy, but given that Open Whisper Systems is based in San Francisco we have to trust that he hasnât received a national security letter, too (by the way, Signal doesnât have a warrant canary). Moxie can &lt;em&gt;tell&lt;/em&gt; us he doesnât store these things, but he could. &lt;strong&gt;Truly secure systems donât require trust&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There are a couple of ways to solve this problem, which can be used in tandem. We can stop Signal from knowing when weâre talking to each other by using peer-to-peer chats. This has some significant drawbacks, namely that both users have to be online at the same time for their messages to be delivered to each other. You can still fall back to peer-to-server-to-peer when one peer is offline, however. But this isnât the most important of the two solutions.&lt;/p&gt;
&lt;p&gt;The most important change is federation. Federated services are like email, in that Alice can send an email from gmail.com to Bobâs yahoo.com address. I should be able to stand up a Signal server, on my own hardware where I am in control of the logs, and communicate freely with other Signal servers, including Open Whisperâs servers. This distributes the security risks across hundreds of operators in many countries with various data extradition laws. This turns what would today be easy for the United States government to break and makes it much, much more difficult. Federation would also open the possibility for bridging the gap with several other open source secure chat platforms to all talk on the same federated network - which would spurn competition and be a great move for users of all chat platforms.&lt;/p&gt;
&lt;p&gt;Moxie forbids you from distributing branded builds of the Signal app, and if you rebrand he forbids you from using the official Open Whisper servers. Because his servers donât federate, that means that users of Signal forks &lt;em&gt;cannot talk to Signal users&lt;/em&gt;. This is a truly genius move. No fork of Signal&lt;sup id=&quot;fnref:4&quot;/&gt; to date has ever gained any traction, and never will, because you canât talk to any Signal users with them. In fact, there are no third-party applications which can interact with Signal users in any way. Moxie can write as many blog posts which appeal to wispy ideals and âmoving ecosystemsâ as he wants&lt;sup id=&quot;fnref:5&quot;/&gt;, but those are all &lt;em&gt;really&lt;/em&gt; convenient excuses for an argument which allows him to design systems which serve his own interests.&lt;/p&gt;
&lt;p&gt;No doubt these are non-trivial problems to solve. But I have &lt;em&gt;personally&lt;/em&gt; been involved in open source projects which have collectively solved similarly difficult problems a thousand times over with a combined budget on the order of tens of thousands of dollars.&lt;/p&gt;
&lt;p&gt;What were you going to do with that 50 million dollars again?&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;P.S. If youâre looking for good alternatives to Signal, I can recommend &lt;a href=&quot;https://matrix.org/blog/home/&quot;&gt;Matrix&lt;/a&gt; or &lt;a href=&quot;https://tox.chat/&quot;&gt;Tox&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;2018-08-08 15:27 UTC: Added Tox to recommendations&lt;/small&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 09 Aug 2018 13:29:05 +0000</pubDate>
<dc:creator>Bl4ckb0ne</dc:creator>
<og:title>I donât trust Signal</og:title>
<og:description>Occasionally when Signal is in the press and getting a lot of favorable discussion, I feel the need to step into various forums, IRC channels, and so on, and explain why I donât trust Signal. Letâs do a blog post instead.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://drewdevault.com/2018/08/08/Signal.html</dc:identifier>
</item>
<item>
<title>A PhD should be about improving society, not chasing academic kudos</title>
<link>https://www.theguardian.com/higher-education-network/2018/aug/09/a-phd-should-be-about-improving-society-not-chasing-academic-kudos</link>
<guid isPermaLink="true" >https://www.theguardian.com/higher-education-network/2018/aug/09/a-phd-should-be-about-improving-society-not-chasing-academic-kudos</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;W&lt;/span&gt;&lt;/span&gt;hen you look at the stats, itâs hard not to conclude that the current PhD system is fundamentally broken. Mental health issues are rife: approximately one-third of PhD students are at risk of &lt;a href=&quot;http://www.sciencemag.org/careers/2017/04/phd-students-face-significant-mental-health-challenges&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;having or developing a psychiatric disorder like depression&lt;/a&gt;. The high level of dropouts is similarly worrying â and possibly another symptom of the same problem. Research suggests that on average &lt;a href=&quot;https://www.chronicle.com/article/PhD-Attrition-How-Much-Is/140045&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;50% of PhD students&lt;/a&gt; leave graduate school without finishing â with numbers higher at some institutions.&lt;/p&gt;
&lt;p&gt;Whatâs more, aspiring scientists who manage to finish usually take much longer than originally planned. For instance, a PhD in Germany is supposed to take three years, according to university regulations, but most students need &lt;a href=&quot;https://www.academics.de/ratgeber/promotion-dauer&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;five years to complete one&lt;/a&gt;. In the US, meanwhile, the average completion time for a PhD in education sciences surpasses &lt;a href=&quot;https://www.nytimes.com/2007/10/03/education/03education.html&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;13 years&lt;/a&gt;. The result is that in most countries, PhD students usually donât graduate until they are &lt;a href=&quot;https://www.eui.eu/ProgrammesAndFellowships/AcademicCareersObservatory/CareerComparisons/AgeComparisons&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;well into their 30s&lt;/a&gt;.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Although &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/28922403&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;80% of science students&lt;/a&gt; start their PhD with the intention to pursue a career in science, theirenthusiasm typically wanes to the point that just 55% plan to continue in academia when nearing graduation. In any case, most are unlikely to be able to continue. One study found that for every 200 people who complete a PhD, only seven will get a permanent academic post and &lt;a href=&quot;https://www.theguardian.com/education/2015/apr/21/phd-cant-find-academic-job-university&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;only one will become a professor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Many academics enter science to change the world for the better. Yet it can often feel like contemporary academia is more about chasing citations. Most academic work is shared only with a particular scientific community, rather than policymakers or businesses, which makes it &lt;a href=&quot;https://www.straitstimes.com/opinion/prof-no-one-is-reading-you&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;entirely disconnected from practice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Take my example. I research how to mitigate the social impact of hydropower dams. &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/full/10.1002/jid.3246&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;My core paper&lt;/a&gt; on this topic has been cited three times so far. I read in the promotions guidelines at my university that if I want to be promoted from assistant to associate professor I need to accumulate significant citations. As a result, I have now published a paper in which &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S0921344917302835&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;I reviewed 114 definitions&lt;/a&gt; of a current academic buzzword, circular economy, to propose the 115th definition of this term.&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;It can often feel like contemporary academia is âabout chasing citations rather than changing the world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;In academic terms, this paper is a hit: itâs been cited &lt;a href=&quot;https://scholar.google.com/citations?user=GIMcJiEAAAAJ&amp;amp;hl=nl&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;39 times&lt;/a&gt; since its publication. It is in the top 3% of all research outputs ever tracked by &lt;a href=&quot;https://bodleian.altmetric.com/details/25357001#score&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Altmetric&lt;/a&gt;, a tool measuring a paperâs influence among academics on social media. People Iâve never met before come up to me at conferences to congratulate me. But Iâm not celebrating: this paper symbolises everything thatâs broken in the academy. Academics love definitions, not solutions.&lt;/p&gt;
&lt;p&gt;I wish the academy would incentivise scholars to improve society, not chase citations. I want us to reimagine a PhD that is designed not to win kudos within the academic community, but rather aimed at discovering something new that will be useful for practitioners and have real social impact.&lt;/p&gt;
&lt;p&gt;This new PhD would see students go out into the field and talk to practitioners from day one of their research, rather than spending the first year (or more) reading obscure academic literature.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/education/students&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Students&lt;/a&gt; would then co-create the content of their theses with their supervisor as well as practitioners in their field of research.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 2&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Instead of labouring over every sentence of a 100,000-word dissertation locked away in an office, PhD students would share a concise 2,000-word draft with those practitioners to collect targeted feedback. They would finish their PhD when they have made a difference in the real world.&lt;/p&gt;
&lt;p&gt;Itâs time to disrupt the current PhD system to make it better for early-career researchers. We need to move away from a self-referential culture in which academics&lt;a href=&quot;https://theconversation.com/academics-can-change-the-world-if-they-stop-talking-only-to-their-peers-55713&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;talk only to their peers&lt;/a&gt;. Confucius said one of the core principles of the academy should be as follows: âThe essence of knowledge is, having it, to apply itâ. Reminding ourselves of this may help to fix the broken PhD machine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.theguardian.com/info/2018/apr/04/sign-up-guardian-higher-education-network-newsletter&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Join&lt;/a&gt; the higher education network for more comment, analysis and job opportunities, direct to your inbox. Follow us on Twitter &lt;a href=&quot;https://twitter.com/GdnHigherEd&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;@gdnhighered&lt;/a&gt;. And if you have an idea for a story, please read our guidelines and email your pitch to us at &lt;a href=&quot;mailto:highereducationnetwork@theguardian.com&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;highereducationnetwork@theguardian.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Looking for a higher education job? Or perhaps you need to recruit university staff? Take a look at &lt;a href=&quot;https://jobs.theguardian.com/jobs/higher-education/?INTCMP=gdnwb_copts_editorial_jobs_HighEdJoinUsContainer_&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Guardian Jobs,&lt;/a&gt; the higher education specialist&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;


</description>
<pubDate>Thu, 09 Aug 2018 13:11:28 +0000</pubDate>
<dc:creator>lingz</dc:creator>
<og:url>http://www.theguardian.com/higher-education-network/2018/aug/09/a-phd-should-be-about-improving-society-not-chasing-academic-kudos</og:url>
<og:description>Too much research is aimed at insular academic circles rather than the real world. Letâs fix this broken system</og:description>
<og:image>https://i.guim.co.uk/img/media/9c66fe4fc9b3c082017916024f2b28bf203f820e/0_530_5245_3147/master/5245.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly9hc3NldHMuZ3VpbS5jby51ay9pbWFnZXMvb3ZlcmxheXMvNTM4OGZjODViNTQ0N2E4M2NmMWNlMTg5YTVhMjE1NzMvdGctb3BpbmlvbnMucG5n&amp;s=7ec198dccd6f8f87b1a41d19b8e8bd45</og:image>
<og:type>article</og:type>
<og:title>A PhD should be about improving society, not chasing academic kudos | Julian Kircherr</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/higher-education-network/2018/aug/09/a-phd-should-be-about-improving-society-not-chasing-academic-kudos</dc:identifier>
</item>
<item>
<title>Problem Solving and Clojure 1.9 with Rich Hickey</title>
<link>https://www.case-podcast.org/20-problem-solving-and-clojure-19-with-rich-hickey</link>
<guid isPermaLink="true" >https://www.case-podcast.org/20-problem-solving-and-clojure-19-with-rich-hickey</guid>
<description>&lt;header&gt;&lt;h2&gt;Problem Solving and Clojure 1.9 with Rich Hickey&lt;/h2&gt;
&lt;time&gt;May 03, 2018&lt;/time&gt;&lt;/header&gt;&lt;section class=&quot;post-media-player&quot;/&gt;&lt;section class=&quot;post-downloads&quot;&gt;
&lt;/section&gt;&lt;section class=&quot;post-social-media&quot;&gt;&lt;section class=&quot;post-social-buttons&quot; data-title=&quot;Problem Solving and Clojure 1.9 with Rich Hickey&quot; data-url=&quot;http://www.case-podcast.org/20-problem-solving-and-clojure-19-with-rich-hickey&quot;&gt;   &lt;/section&gt;&lt;/section&gt;&lt;section readability=&quot;5.8529411764706&quot;&gt;&lt;p&gt;Joy Clark talks with Rich Hickey about Clojure and Datomic and the reasons that Rich decided to design them the way that he did. They discuss the dependency problem and how we should change our method of developing libraries so that we do not introduce breaking changes. Rich also introduces Clojure spec and describes what it can be used for and how it differs from a static type system. To wrap up the episode, they talk about the best way to solve a problem (and know it is the right problem!) and Rich gives some advice on how to develop software and what technologies are worth looking into.&lt;/p&gt;
&lt;a href=&quot;https://www.case-podcast.org/20-problem-solving-and-clojure-19-with-rich-hickey/transcript&quot;&gt;Read transcript&lt;/a&gt;&lt;/section&gt;&lt;section class=&quot;post-show-notes&quot;&gt;&lt;h3&gt;Show Notes&lt;/h3&gt;
&lt;/section&gt;</description>
<pubDate>Thu, 09 Aug 2018 12:51:11 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<og:title>Problem Solving and Clojure 1.9 with Rich Hickey</og:title>
<og:description>Joy Clark talks with Rich Hickey about Clojure and Datomic and the reasons that Rich decided to design them the way that he did. They discuss the dependency problem and how we should change our method of developing libraries so that we do not introduce breaking changes. Rich also introduces Clojure spec and describes what it can be used for and how it differs from a static type system. To wrap up the episode, they talk about the best way to solve a problem (and know it is the right problem!) and Rich gives some advice on how to develop software and what technologies are worth looking into.</og:description>
<og:type>website</og:type>
<og:url>https://www.case-podcast.org/20-problem-solving-and-clojure-19-with-rich-hickey/transcript</og:url>
<og:image>https://images.podigee.com/0x,s4gbIsFSYAj2BO2hCuw_w2Hd2dkwbiJZ44UvGZNvcy5E=/https://cdn.podigee.com/uploads/u861/CaSE-logo1485898745be6c.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.case-podcast.org/20-problem-solving-and-clojure-19-with-rich-hickey</dc:identifier>
</item>
<item>
<title>Julia 1.0</title>
<link>https://julialang.org/blog/2018/08/one-point-zero</link>
<guid isPermaLink="true" >https://julialang.org/blog/2018/08/one-point-zero</guid>
<description>&lt;p class=&quot;metadata&quot;&gt;&lt;span class=&quot;timestamp&quot;&gt;08 Aug 2018&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The much anticipated 1.0 release of &lt;a href=&quot;https://julialang.org&quot;&gt;Julia&lt;/a&gt; is the culmination of nearly a decade of work to build a language for greedy programmers. JuliaCon2018 celebrated the event with a reception where the community officially &lt;a href=&quot;https://www.youtube.com/watch?v=1jN5wKvN-Uk#t=3850&quot;&gt;set the version to 1.0.0 together&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Julia was &lt;a href=&quot;https://julialang.org/blog/2012/02/why-we-created-julia&quot;&gt;first publicly announced&lt;/a&gt; with a number of strong demands on the language:&lt;/p&gt;
&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;We want a language thatâs open source, with a liberal license. We want the speed of C with the dynamism of Ruby. We want a language thatâs homoiconic, with true macros like Lisp, but with obvious, familiar mathematical notation like Matlab. We want something as usable for general programming as Python, as easy for statistics as R, as natural for string processing as Perl, as powerful for linear algebra as Matlab, as good at gluing programs together as the shell. Something that is dirt simple to learn, yet keeps the most serious hackers happy. We want it interactive and we want it compiled.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A vibrant and thriving community has grown up around this language, with people from all around the world iteratively refining and shaping Julia in pursuit of that goal. Over 700 people have contributed to Julia itself and even more people have made thousands of amazing open source Julia packages. All told, we have built a language that is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Julia was designed from the beginning for high performance. Julia programs compile to efficient native code for multiple platforms via LLVM.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;General&lt;/strong&gt;: It uses multiple dispatch as a paradigm, making it easy to express many object-oriented and functional programming patterns. The standard library provides asynchronous I/O, process control, logging, profiling, a package manager, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic&lt;/strong&gt;: Julia is dynamically-typed, feels like a scripting language, and has good support for interactive use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Technical&lt;/strong&gt;: It excels at numerical computing with a syntax that is great for math, many supported numeric data types, and parallelism out of the box. Juliaâs multiple dispatch is a natural fit for defining number and array-like data types.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optionally typed&lt;/strong&gt;: Julia has a rich language of descriptive data types, and type declarations can be used to clarify and solidify programs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Composable&lt;/strong&gt;: Juliaâs packages naturally work well together. Matrices of unit quantities, or data table columns of currencies and colors, just work â and with good performance.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Try Julia by &lt;a href=&quot;https://julialang.org/downloads/&quot;&gt;downloading version 1.0 now&lt;/a&gt;. If youâre upgrading code from Julia 0.6 or earlier, we encourage you to first use the transitional 0.7 release, which includes deprecation warnings to help guide you through the upgrade process. Once your code is warning-free, you can change to 1.0 without any functional changes. The registered packages are in the midst of taking advantage of this stepping stone and releasing 1.0-compatible updates.&lt;/p&gt;
&lt;p&gt;The single most significant new feature in Julia 1.0, of course, is a commitment to language API stability: code you write for Julia 1.0 will continue to work in Julia 1.1, 1.2, etc. The language is âfully baked.â The core language devs and community alike can focus on packages, tools, and new features built upon this solid foundation.&lt;/p&gt;
&lt;p&gt;But Julia 1.0 in not just about stability, it also introduces several new, powerful and innovative language features. Some of the new features since version 0.6 include:&lt;/p&gt;
&lt;ul readability=&quot;40.071474461934&quot;&gt;&lt;li readability=&quot;2.8103727714749&quot;&gt;
&lt;p&gt;A brand new built-in &lt;a href=&quot;https://docs.julialang.org/en/latest/stdlib/Pkg/&quot;&gt;package manager&lt;/a&gt; brings enormous performance improvements and makes it easier than ever to install packages and their dependencies. It also supports per-project package environments and recording the exact state of a working application to share with othersâand with your future self. Finally, the redesign also introduces seamless support for private packages and package repositories. You can install and manage private packages with the same tools as youâre used to for the open source package ecosystem. The &lt;a href=&quot;https://www.youtube.com/watch?v=GBi__3nF-rM&quot;&gt;presentation at JuliaCon&lt;/a&gt; provides a good overview of the new design and behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5.6126126126126&quot;&gt;
&lt;p&gt;Julia has a new &lt;a href=&quot;https://julialang.org/blog/2018/06/missing&quot;&gt;canonical representation for missing values&lt;/a&gt;. Being able to represent and work with missing data is fundamental to statistics and data science. In typical Julian fashion, the new solution is general, composable and high-performance. Any generic collection type can efficiently support missing values simply by allowing elements to include the pre-defined value &lt;code class=&quot;highlighter-rouge&quot;&gt;missing&lt;/code&gt;. The performance of such âunion-typedâ collections would have been too slow in previous Julia versions, but compiler improvements now allow Julia to match the speed of custom C or C++ missing data representations in other systems, while also being far more general and flexible.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The built-in &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt; type can now safely hold arbitrary data. Your program wonât fail hours or days into a job because of a single stray byte of invalid Unicode. All string data is preserved while indicating which characters are valid or invalid, allowing your applications to safely and conveniently work with real world data with all of its inevitable imperfections.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.6808510638298&quot;&gt;
&lt;p&gt;Broadcasting is already a core language feature with convenient syntaxâand itâs now more powerful than ever. In Julia 1.0 itâs simple to &lt;a href=&quot;https://julialang.org/blog/2018/05/extensible-broadcast-fusion&quot;&gt;extend broadcasting to custom types&lt;/a&gt; and implement efficient optimized computations on GPUs and other vectorized hardware, paving the way for even greater performance gains in the future.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;Named tuples are a new language feature which make representing and accessing data by name efficient and convenient. You can, for example, represent a row of data as &lt;code class=&quot;highlighter-rouge&quot;&gt;row = (name=&quot;Julia&quot;, version=v&quot;1.0.0&quot;, releases=8)&lt;/code&gt; and access the &lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt; column as &lt;code class=&quot;highlighter-rouge&quot;&gt;row.version&lt;/code&gt; with the same performance as the less convenient &lt;code class=&quot;highlighter-rouge&quot;&gt;row[2]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The dot operator can now be overloaded, allowing types to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;obj.property&lt;/code&gt; syntax for meanings other than getting and setting struct fields. This is especially useful for smoother interop with class-based languages such as Python and Java. Property accessor overloading also allows the syntax for getting a column of data to match named tuple syntax: you can write &lt;code class=&quot;highlighter-rouge&quot;&gt;table.version&lt;/code&gt; to access the &lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt; column of a table just as &lt;code class=&quot;highlighter-rouge&quot;&gt;row.version&lt;/code&gt; accesses the &lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt; field of a single row.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;Juliaâs optimizer has gotten smarter in more ways than we can list here, but a few highlights are worth mentioning. The optimizer can now propagate constants through function calls, allowing much better dead-code elimination and static evaluation than before. The compiler is also much better at avoiding allocation of short-lived wrappers around long-lived objects, which frees programmers to use convenient high-level abstractions without performance costs.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Parametric type constructors are now always called with the same syntax as they are declared. This eliminates an obscure but confusing corner of language syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;The iteration protocol has been completely redesigned to make it easier to implement many kinds of iterables. Instead of defining methods of three different generic functionsâ&lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;âone now defines one- and two-argument methods of the &lt;code class=&quot;highlighter-rouge&quot;&gt;iterate&lt;/code&gt; function. This often allows iteration to be conveniently defined with a single definition with a default value for the start state. More importantly, it makes it possible to implement iterators that only know if theyâre done once theyâve tried and failed to produce a value. These kinds of iterators are ubiquitous in I/O, networking, and producer/consumer patterns; Julia can now express these iterators in a straightforward and correct manner.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Scope rules have been simplified. Constructs that introduce local scopes now do so consistently, regardless of whether a global binding for a name already exists or not. This eliminates the âsoft/hard scopeâ distinction that previously existed and means that now Julia can always statically determine whether variables are local or global.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;The language itself is significantly leaner, with many components split out into âstandard libraryâ packages that ship with Julia but arenât part of the âbaseâ language. If you need them, theyâre an import away (no installation required) but theyâre no longer forced on you. In the future, this will also allow standard libraries to be versioned and upgraded independently of Julia itself, allowing them to evolve and improve at a faster rate.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Weâve done a thorough review of all of Juliaâs APIs to improve consistency and usability. Many obscure legacy names and inefficient programming patterns have been renamed or refactored to more elegantly match Juliaâs capabilities. This has prompted changes to make working with collections more consistent and coherent, to ensure that argument ordering follows a consistent standard throughout the language, and to incorporate (the now faster) keyword arguments into APIs where appropriate.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;A number of new external packages are being built specifically around the new capabilities of Julia 1.0. For example:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The data processing and manipulation ecosystem is being revamped to take advantage of the new missingness support.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jrevels/Cassette.jl&quot;&gt;Cassette.jl&lt;/a&gt; provides a powerful mechanism to inject code-transformation passes into Juliaâs compiler, enabling post-hoc analysis and extension of existing code. Beyond instrumentation for programmers like profiling and debugging, this can even implement automatic differentiation for machine learning tasks.&lt;/li&gt;
&lt;li&gt;Heterogeneous architecture support has been greatly improved and is further decoupled from the internals of the Julia compiler. Intel KNLs just work in Julia. Nvidia GPUs are programmed using the &lt;a href=&quot;https://github.com/JuliaGPU/CUDAnative.jl&quot;&gt;CUDANative.jl&lt;/a&gt; package, and a port to Google TPUs is in the works.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are countless other improvements, both large and small. For a complete list of changes, see the &lt;a href=&quot;https://docs.julialang.org/en/release-0.7/NEWS/&quot;&gt;0.7 NEWS file&lt;/a&gt;. In our original &lt;a href=&quot;https://julialang.org/blog/2012/02/why-we-created-julia&quot;&gt;âWhy We Created Juliaâ blog post&lt;/a&gt; in 2012, we wrote&lt;/p&gt;
&lt;blockquote readability=&quot;6.656862745098&quot;&gt;
&lt;p&gt;Itâs not complete, but itâs time for a 1.0 releaseâthe language weâve created is called &lt;a href=&quot;https://julialang.org&quot;&gt;Julia&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We may have jumped the gun a bit with mentioning an impending 1.0 release, but the time has finally arrived and it is a heck of a release. We are truly proud of whatâs been accomplished by the thousands of people who have contributed in so many ways to this truly modern language for numerical and general programming.&lt;/p&gt;
</description>
<pubDate>Thu, 09 Aug 2018 12:04:37 +0000</pubDate>
<dc:creator>montalbano</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://julialang.org/blog/2018/08/one-point-zero</dc:identifier>
</item>
</channel>
</rss>