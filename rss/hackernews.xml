<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Sen. Wyden Confirms Cell-Site Simulators Disrupt Emergency Calls</title>
<link>https://www.eff.org/deeplinks/2018/08/blog-post-wyden-911-disruption-css</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2018/08/blog-post-wyden-911-disruption-css</guid>
<description>&lt;p&gt;&lt;span&gt;Sen. Ron Wyden &lt;a href=&quot;https://www.washingtonpost.com/business/2018/08/24/fbi-surveillance-devices-may-interfere-with-calls-us-senator-says/&quot;&gt;has sent a letter&lt;/a&gt; to the U.S. Department of Justice concerning disruptions to 911 emergency services caused by law enforcement’s use of &lt;a href=&quot;https://eff.org/document/eff-one-pager-cell-site-simulators&quot;&gt;cell-site simulators&lt;/a&gt; (CSS, also known as IMSI catchers or Stingrays). In the letter, Sen. Wyden states that:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;16&quot;&gt;
&lt;p&gt;&lt;span&gt;Senior officials from the Harris Corporation—the manufacturer of the cell-site simulators used most frequently by U.S. law enforcement agencies—have confirmed to my office that Harris’ cell-site simulators completely disrupt the communications of targeted phones for as long as the surveillance is ongoing. According to Harris, targeted phones cannot make or receive calls, send or receive text messages, or send or receive any data over the Internet. Moreover, while the company claims its cell-site simulators include a feature that detects and permits the delivery of emergency calls to 9-1-1, its officials admitted to my office that this feature has not been independently tested as part of the Federal Communication Commission’s certification process, nor were they able to confirm this feature is capable of detecting and passing-through 9-1-1 emergency communications made by people who are deaf, hard of hearing, or speech disabled using Real-Time Text technology.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;The full text of the letter &lt;a href=&quot;https://eff.org/files/2018/08/27/wyden-stingray-jamming-letter-to-doj.pdf&quot;&gt;can be read here&lt;/a&gt; [PDF].&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Researchers of CSS technology have long suspected that using such technologies, even professionally designed and marketed CSS’s, would have a detrimental effect on emergency services, and now—for the first time—we have confirmation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It is striking, but unfortunately not surprising, that law enforcement has been allowed to use these technologies and has continued to use them despite the significant and undisclosed risk to public safety posed by disabling 911 service, not to mention the &lt;a href=&quot;https://www.eff.org/node/89287&quot;&gt;myriad privacy concerns&lt;/a&gt; related to CSS use. What’s more, a cell-site simulator wouldn’t just disrupt service for the specific person or persons being tracked but would likely disrupt service for every mobile device in the area as it tricks every phone in the area into connecting to the fake base station in search of the target phone. This could be especially dangerous during a natural disaster when IMSI catchers are being used to locate missing persons in damaged buildings or other infrastructure, cutting off 911 service at a time like that could be a grave danger to others trapped in dangerous situations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Harris Corporation claims that they have the ability to detect and deliver calls to 911, but they admit that this feature hasn’t been tested. Put bluntly, there is no way for the public or policy makers to know if this technology works as intended.  Thanks to the onerous non-disclosure agreements that customers of Harris Corp and other CSS vendors’ customers have regularly been required to enter into there is very little public information about how CSS work and what their capabilities are. Even if a security researcher did audit a CSS, the results would be unlikely to ever see the light of day.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Furthermore, even if Harris’ technology works the way they claim it does, they are far from the only manufacturer of CSS devices. There are several other companies that manufacture such technology and we know even less about the workings of their technologies or whether they have any protections against blocking 911 calls. Cell-site simulators are now easy to acquire or build, with homemade devices costing less than $1000 in parts. Criminals, spies, and anyone else with malicious intent could easily build a CSS specifically to disrupt phone service, or use it without caring whether it disrupts 911 service.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The only way to stop the public safety and public privacy threats that cell-site simulators pose is to increase the security of our mobile communications infrastructure at every layer. All companies involved in mobile communications from the network layer (AT&amp;amp;T, T-Mobile, Verizon, etc.) to the hardware layer (Qualcomm, Samsung, Intel), to the software layer (Apple, Google) need to work together to ensure that our cellular infrastructure is safe, secure, and private from attacks by spys, criminals, and rogue law enforcement.  For their part, policymakers such as Sen. Wyden can help by continuing to provide transparency on how IMSI catchers work and are used, and funds to upgrade our aging cellular infrastructure.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For more information about cell-site simulators please consult our &lt;a href=&quot;https://www.eff.org/pages/cell-site-simulatorsimsi-catchers&quot;&gt;Street-Level Surveillance guides&lt;/a&gt; on law enforcement surveillance technology.&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 13:00:54 +0000</pubDate>
<dc:creator>DiabloD3</dc:creator>
<og:type>article</og:type>
<og:title>Sen. Wyden Confirms Cell-Site Simulators Disrupt Emergency Calls</og:title>
<og:url>https://www.eff.org/deeplinks/2018/08/blog-post-wyden-911-disruption-css</og:url>
<og:description>Sen. Ron Wyden has sent a letter to the U.S. Department of Justice concerning disruptions to 911 emergency services caused by law enforcement’s use of cell-site simulators (CSS, also known as IMSI catchers or Stingrays). In the letter, Sen. Wyden states that:Senior officials from the Harris...</og:description>
<og:image>https://www.eff.org/files/banner_library/sls-cellsite-2018-notext.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2018/08/blog-post-wyden-911-disruption-css</dc:identifier>
</item>
<item>
<title>WideNES – Peeking Past the Edge of NES Games</title>
<link>http://prilik.com/blog/wideNES</link>
<guid isPermaLink="true" >http://prilik.com/blog/wideNES</guid>
<description>&lt;p&gt;In the mid 1980s, the Nintendo Entertainment System (NES) was &lt;em&gt;the&lt;/em&gt; home console to have. Boasting the best sound, the best graphics, and the best games of any home-console to date, it pushed the envelope for what home-gaming could be. To this day, titles like &lt;em&gt;Super Mario Bros.&lt;/em&gt;, &lt;em&gt;The Legend of Zelda&lt;/em&gt;, and &lt;em&gt;Metroid&lt;/em&gt; are hailed as some of the best games of all time.&lt;/p&gt;
&lt;p&gt;Well, it’s been over 30 years since the NES was released, and while those classic games have aged well, the same can’t be said for the hardware they ran on. With a screen-resolution of just 256x240, the NES didn’t give games all that much screen real-estate to work with. Nevertheless, intrepid game developers squeezed amazing, iconic worlds into NES games: the maze-like dungeons of &lt;em&gt;The Legend of Zelda&lt;/em&gt;, the sprawling planet of &lt;em&gt;Metroid&lt;/em&gt;, or the colorful levels of &lt;em&gt;Super Mario Bros.&lt;/em&gt;. And yet, due to the NES’s hardware limitations, gamers only ever experienced these worlds a single 256x240 viewport at a time…&lt;/p&gt;
&lt;p&gt;Until now.&lt;/p&gt;
&lt;p&gt;Introducing: &lt;strong&gt;wideNES&lt;/strong&gt;. A new way to experience NES classics.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://prilik.com/blog/resources/wideNES/wideNES_metroid.gif&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/wideNES_smb1.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;wideNES&lt;/strong&gt; is a novel technique to &lt;em&gt;automatically&lt;/em&gt; and &lt;em&gt;interactively&lt;/em&gt; map-out NES games, &lt;em&gt;in real time&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As players move within a level, wideNES records the screen, gradually building-up a map of what’s been explored. On subsequent playthroughs of the level, wideNES syncs the action on-screen to the generated map, effectively letting players see more of the level by “peeking” past the edge of the NES’s screen! Best of all, wideNES’s approach to mapping games is &lt;em&gt;totally generalized&lt;/em&gt;, enabling a wide range of NES games to work with wideNES right out of the box!&lt;/p&gt;
&lt;p&gt;But how does it work?&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;If you’d like to try wideNES before reading up on how it works, no problem! &lt;a href=&quot;https://prilik.com/ANESE&quot;&gt;ANESE&lt;/a&gt; is a NES emulator I wrote myself, and at the moment, it is the only emulator that implements wideNES. Fair warning though, ANESE is &lt;em&gt;not&lt;/em&gt; the best NES emulator out there, both in terms of UI and accuracy. Most options (including enabling wideNES) are only exposed via command line, and although many popular titles work just fine, some titles might not work as expected.&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;how-widenes-works&quot;&gt;How wideNES works&lt;/h2&gt;
&lt;p&gt;Before diving into the details, it’s important to briefly discuss how the NES renders graphics.&lt;/p&gt;
&lt;h3 id=&quot;pushing-pixels-with-the-ppu&quot;&gt;Pushing Pixels with the PPU&lt;/h3&gt;
&lt;p&gt;Sitting at the heart of the NES is the venerable MOS 6502 CPU. In the late 70s and early 80s, the 6502 was &lt;em&gt;everywhere&lt;/em&gt;, powering iconic machines like the Commodore 64, Apple II, and many more. It was cheap, easy to program, and &lt;em&gt;just&lt;/em&gt; powerful enough to be dangerous.&lt;/p&gt;
&lt;p&gt;Complimenting the NES’s 6502 was a powerful graphics co-processor called the &lt;em&gt;Picture Processing Unit&lt;/em&gt; (PPU). In comparison to basic video co-processors present in older 6502 based systems, the PPU was a huge step-up in usability. For example, half a decade prior to the NES’s release, the Atari 2600 used a 6502 to issue graphics commands to it’s co-processor &lt;em&gt;every-single scanline&lt;/em&gt;, leaving little time for the CPU to execute game-logic. On the other hand, the PPU only requires a couple commands &lt;em&gt;per frame&lt;/em&gt;, leaving plenty of time for the 6502 to deliver interesting and innovative gameplay.&lt;/p&gt;
&lt;p&gt;The PPU is a fascinating chip, rendering graphics in a way unlike any modern GPU, and it would take a &lt;a href=&quot;http://www.dustmop.io/blog/2015/04/28/nes-graphics-part-1/&quot;&gt;whole series of articles&lt;/a&gt; to fully explain how it works. Since wideNES only relies on a small subset of the PPU features to work, this brief overview of the PPU’s features should suffice:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Resolution: 256x240px @60Hz&lt;/li&gt;
&lt;li&gt;Runs independently from the CPU
&lt;ul&gt;&lt;li&gt;Communicates with CPU using &lt;em&gt;Memory Mapped I/O&lt;/em&gt; (address range 0x2000 - 0x2007)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2 rendering layers: The &lt;strong&gt;Sprite&lt;/strong&gt; layer, and the &lt;strong&gt;Background&lt;/strong&gt; layer
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Sprite Layer&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;Sprites can be individually positioned anywhere on-screen&lt;/li&gt;
&lt;li&gt;Great for moving objects: player, enemies, projectiles&lt;/li&gt;
&lt;li&gt;Up to 64 8x8px sprites&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Background Layer&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;Locked to grid&lt;/li&gt;
&lt;li&gt;Great for static elements: platforms, large obstacles, decoration&lt;/li&gt;
&lt;li&gt;Enough VRAM to store 64x30 8x8px tiles
&lt;ul&gt;&lt;li&gt;Effective &lt;em&gt;internal&lt;/em&gt; resolution of 512x240, with a 256x240 viewport&lt;/li&gt;
&lt;li&gt;Supports &lt;strong&gt;&lt;em&gt;hardware scrolling&lt;/em&gt;&lt;/strong&gt; to change the 256x240 viewport
&lt;ul&gt;&lt;li&gt;PPUSCROLL register (address 0x2005) controls viewport X/Y offset&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;With that &lt;em&gt;incredibly&lt;/em&gt; brief overview out of the way, lets move on to the interesting bit: how does wideNES work?&lt;/p&gt;
&lt;h3 id=&quot;the-basic-idea&quot;&gt;The Basic Idea&lt;/h3&gt;
&lt;p&gt;At the end of each frame, the CPU updates the PPU on what has changed. This involves setting new sprite positions, new level data, and —crucially for wideNES— &lt;em&gt;new viewport offsets&lt;/em&gt;. Since wideNES runs in an emulator, it’s really easy to track the values written to the PPUSCROLL register, which means it’s incredibly easy to calculate how much of the screen has scrolled between any two frames!&lt;/p&gt;
&lt;p&gt;Hmm, what would happen if instead of painting each new frame &lt;em&gt;directly over&lt;/em&gt; the old frame, new frames are instead painted &lt;em&gt;overlapping&lt;/em&gt; the previous frame, but offset by the current screen scroll? Well, over time, more and more of the level would be left on-screen, gradually building up a complete picture of the level!&lt;/p&gt;
&lt;p&gt;To test if the idea had any merit, I jumped right in and hacked together a first implementation.&lt;/p&gt;
&lt;p&gt;Compile… Run… Load &lt;em&gt;Super Mario Bros.&lt;/em&gt;…&lt;/p&gt;
&lt;p&gt;Voila!&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/smb1_v1.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It worked!&lt;/p&gt;
&lt;p&gt;Kinda…&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Without even going into the details of wideNES’s implementation, it should be obvious that the technique has a major limitation: A complete map of the game is only possible if a player manually explores the entire game.&lt;/p&gt;
&lt;p&gt;What if there was some way to extract levels from &lt;em&gt;raw&lt;/em&gt; NES ROMs?! Could such a technique even exist??&lt;/p&gt;
&lt;p&gt;Nah, probably not.&lt;/p&gt;
&lt;p&gt;If you take any 2 NES games, there is only 1 thing they are guaranteed to have in common: they both run on an NES. Other than that, all bets are off! This inconsistency is a real pain, since there are essentially limitless ways for NES games to store level data!&lt;/p&gt;
&lt;p&gt;While some folks have extracted complete levels by reverse engineering how &lt;em&gt;a couple of&lt;/em&gt; games store level data (sometimes making full-fledged &lt;a href=&quot;https://www.romhacking.net/utilities/298/&quot;&gt;level editors&lt;/a&gt;!), doing so is far from simple, requiring plenty of hard work, dedication, and clever thinking.&lt;/p&gt;
&lt;p&gt;Trying to extract level data from a NES ROM would be equivalent to determining which sections of the ROM are code (as opposed to data), which is hard, since &lt;a href=&quot;https://stackoverflow.com/questions/5299576/finding-all-the-code-in-a-given-binary-is-equivalent-to-the-halting-problem-r&quot;&gt;finding all code in a given binary is equivalent to the Halting problem&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;wideNES takes a much simpler approach: Instead of guessing how games pack level data in ROM, wideNES will simply run the game and watch the output!&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;scrolling-past-255&quot;&gt;Scrolling past 255&lt;/h3&gt;
&lt;p&gt;The NES is a 8-bit system, which means the PPUSCROLL register only accepts 8-bit values. This limits the maximum scroll-offset to just 255px, i.e: the largest 8-bit number. Not-so coincidentally, the NES’s screen resolution is 240x256 pixels, so a 255px offset is &lt;em&gt;just-enough&lt;/em&gt; to scroll the entire screen.&lt;/p&gt;
&lt;p&gt;But what happens about scrolling &lt;em&gt;past&lt;/em&gt; 255?&lt;/p&gt;
&lt;p&gt;First, games will reset the PPUSCROLL register to 0. This explains why &lt;em&gt;SMB&lt;/em&gt; would bounce-back to the start whenever Mario moved too-far right.&lt;/p&gt;
&lt;p&gt;Next, to compensate for PPUSCROLL’s 8-bit limitations, games will updates a different PPU register: PPUCTRL (address 0x2000). The bottom 2 bits of PPUCTRL define the “origin” of the current scene in full-frame increments. For example: writing a value of 1 shifts the viewport right by 256px, a value of 2 will shift the viewport down by 240px. This PPUCTRL offset &lt;em&gt;stacks&lt;/em&gt; with the PPUSCROLL register, enabling the screen to scroll up to 512px left-to-right, or up to 480px top-to-bottom.&lt;/p&gt;
&lt;p&gt;But hold on a sec, isn’t there only enough VRAM for 2 screens-worth of level? What happens when the viewport scrolls too far to the right and “overshoots” VRAM? To handle this case, the PPU implements wrapping behavior, so that any sections of the viewport outside of designated VRAM will simply wrap-around to the opposite-end of VRAM.&lt;/p&gt;
&lt;p&gt;This wrapping behavior, in conjunction with some clever PPUSCROLL and PPUCTRL manipulation, allows NES games to give the illusion of infinitely tall/wide worlds! By lazily-loading in more of the level ahead of the viewport, and gradually scrolling into it, players never realize that they are actually “running in circles” within VRAM!&lt;/p&gt;
&lt;p&gt;This excellent illustration from the nesdev wiki shows how &lt;em&gt;Super Mario Bros.&lt;/em&gt; uses these features to have levels longer than 2 screens:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;https://wiki.nesdev.com/w/images/a/ae/SMB1_scrolling_seam.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To get back to the question at hand: how does wideNES handle scrolling past 256?&lt;/p&gt;
&lt;p&gt;Well, to be perfectly honest, wideNES &lt;em&gt;completely ignores&lt;/em&gt; the PPUCTRL register, and simply looks that the PPUSCROLL delta between frames!&lt;/p&gt;
&lt;p&gt;If PPUSCROLL unexpectedly jumps up to ~256, that typically indicates that the player character moved left/up a screen, whereas if it unexpectedly jumps down to ~0, that typically indicates that the player moved right/down a screen.&lt;/p&gt;
&lt;p&gt;While this heuristic might seem simple —and it is— it actually works great!&lt;/p&gt;
&lt;p&gt;After implementing the heuristic, &lt;em&gt;Super Mario Bros.&lt;/em&gt;, &lt;em&gt;Metroid&lt;/em&gt;, and many other games worked near-perfectly!&lt;/p&gt;
&lt;p&gt;I was excited, so I went ahead and loaded up another NES classic, &lt;em&gt;Super Mario Bros. 3&lt;/em&gt;….&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/smb3_v1.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Hmm… That’s not good.&lt;/p&gt;
&lt;h3 id=&quot;ignoring-static-screen-elements&quot;&gt;Ignoring Static Screen Elements&lt;/h3&gt;
&lt;p&gt;Many games have static-UI elements at the edges of the screen. In &lt;em&gt;SMB3&lt;/em&gt;’s case, there is a blue column on the left-side of the screen, and a status-bar at the bottom of the screen.&lt;/p&gt;
&lt;p&gt;By default, wideNES samples in 16-pixel increments from the edges of the screen, which means any static elements at the edges are sampled! Not good!&lt;/p&gt;
&lt;p&gt;To work around this issue, wideNES implements several rules and heuristics that try to detect and mask-off static screen elements automatically.&lt;/p&gt;
&lt;p&gt;In general, there are 3 different types of static screen elements used in NES games: HUDs, Masks, and Status Bars.&lt;/p&gt;
&lt;h4 id=&quot;huds---non-issue&quot;&gt;HUDs - Non-issue&lt;/h4&gt;
&lt;p&gt;If a game overlays it’s HUD on-top of the level, chances are the HUD is comprised of several Sprites. Eg: the HUD in &lt;em&gt;Metroid&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Thankfully, these HUDs are a non-issue, as wideNES simply ignores the sprite layer at the moment. Nice!&lt;/p&gt;
&lt;h4 id=&quot;masks---easy-peasy&quot;&gt;Masks - Easy Peasy&lt;/h4&gt;
&lt;p&gt;The PPU has feature which allows games to mask-off the leftmost 8px of the background layer. It is activated by setting the 2nd bit of the PPUMASK register (address 0x2001). While many games use this feature, explaining &lt;em&gt;why&lt;/em&gt; they do so is outside of the scope of this article.&lt;/p&gt;
&lt;p&gt;Detecting if the mask is on is incredibly simple: wideNES simply watches the value of PPUMASK, and ignores the leftmost 8px whenever the 2nd bit of the register is set!&lt;/p&gt;
&lt;p&gt;Implementing this simple rule seemed to fix &lt;em&gt;SMB3&lt;/em&gt;:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/smb3_v2.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;…well, &lt;em&gt;almost&lt;/em&gt;.&lt;/p&gt;
&lt;h4 id=&quot;status-bars---the-tricky-bit&quot;&gt;Status Bars - The tricky bit&lt;/h4&gt;
&lt;p&gt;Due to PPU limitations, there can only be 64 sprites on-screen at any give time, and furthermore, there can only be 8 sprites on a &lt;em&gt;particular scanline&lt;/em&gt; at any given time. This limitation discourages games from building complex HUDs from sprites, and pushes games to use segments of the background layer to display information.&lt;/p&gt;
&lt;p&gt;Aside from masks, the PPU doesn’t really provide any easy way to divide the background layer between the play-area and the status-area. As such, games got creative, leading to a multitude of &lt;em&gt;unorthodox&lt;/em&gt; ways to create status bars…&lt;/p&gt;
&lt;p&gt;wideNES implements several different heuristics to detect different-types of status bars, but in the interest of time, i’ll touch upon one of the more interesting heuristics: Mid-Frame IRQ tracking.&lt;/p&gt;
&lt;h3 id=&quot;mid-frame-irq-tracking&quot;&gt;Mid-Frame IRQ Tracking&lt;/h3&gt;
&lt;p&gt;Unlike modern GPUs, which have large internal framebuffers, the PPU has &lt;em&gt;no frame-buffer whatsoever!&lt;/em&gt; To save on space, the PPU stores scenes as a grid of 64x32 8x8 pixel tiles. Instead of resolving the pixel data ahead of time, tiles are stored as &lt;em&gt;pointers&lt;/em&gt; into CHR Memory (Character Memory), which contains the actual pixel data.&lt;/p&gt;
&lt;p&gt;Since the NES was developed in the 80s, the PPU was not built with modern display technology in mind. Instead of rendering full-frames at a time, the PPU outputs NTSC video designed to be displayed on a CRT, which outputs video &lt;em&gt;pixel by pixel&lt;/em&gt;, &lt;em&gt;scanline by scanline&lt;/em&gt;, top to bottom, left to right.&lt;/p&gt;
&lt;p&gt;Why is all this important?&lt;/p&gt;
&lt;p&gt;Well, since the PPU renders frames top-to-bottom, scanline-by-scanline, it is possible to send the PPU instructions &lt;em&gt;mid-frame&lt;/em&gt; to create otherwise impossible video effects! These effects could be as simple as changing the palette, or as advanced as, you guessed it, creating Status Bars!&lt;/p&gt;
&lt;p&gt;To explain how mid-frame PPU writes can generate Status Bars, I’ve captured a raw dump of a slice of the PPU’s VRAM and CHR Memory at a particular frame &lt;em&gt;SMB3&lt;/em&gt;:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/raw_vram_level.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Everything looks normal, nothing fancy… except look at the Status Bar! It’s completely garbled!&lt;/p&gt;
&lt;p&gt;Now, look at the same raw dump, but captured after scanline 196…&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/raw_vram_status.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Yes, the level looks terrible, but the status bar is completely intact!&lt;/p&gt;
&lt;p&gt;What’s going on??&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SMB3&lt;/em&gt; sets a timer to fire an IRQ precisely after rendering scanline 195. It puts the following instructions in the IRQ handler:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set PPUSCROLL to (0,0) (ensuring a fixed status bar)&lt;/li&gt;
&lt;li&gt;Swap the tilemap in CHR Memory (un-garble the status-bar’s graphics)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Since the rest of the level has already been rendered, the PPU won’t “retroactively” update the frame. Instead, it will keep-on rendering with these new parameters, outputting a nice, un-garbled status bar!&lt;/p&gt;
&lt;p&gt;To get back to wideNES, by listening for any mid-frame IRQs and noting the scanline at which they occurred at, wideNES can ignore any subsequent scanlines in the recording! Alternatively, if the IRQ occurs at a scanline less than 240 / 2, all &lt;em&gt;previous&lt;/em&gt; scanlines are ignored, as an early scanline IRQ implies there could be a status bar at the &lt;em&gt;top&lt;/em&gt; of the screen.&lt;/p&gt;
&lt;p&gt;Once this heuristic is in-place &lt;em&gt;Super Mario Bros. 3&lt;/em&gt; works perfectly!&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/smb3_v3.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;I briefly considered using a Computer Vision library such as OpenCV to detect status-bars (and other mostly-static regions of the screen), but I eventually decided against it. Using a huge, complex, and opaque Computer Vision library ran opposite to the ethos of wideNES, which tries to rely on small, simple, and transparent rules and heuristics to achieve results.&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;detecting-scenes&quot;&gt;Detecting “Scenes”&lt;/h3&gt;
&lt;p&gt;Aside from a few notable examples (such as &lt;em&gt;Metroid&lt;/em&gt;), NES games tend &lt;em&gt;not&lt;/em&gt; to take place within a single huge, uninterrupted level. Instead, most NES games are split into many smaller, separate “scenes” with doors or transition screens to move between them.&lt;/p&gt;
&lt;p&gt;Since wideNES has no concept of “scenes,” bad things happen when scene changes occur…&lt;/p&gt;
&lt;p&gt;For example, here is the first scene transition in &lt;em&gt;Castlevania&lt;/em&gt;, where Simon Belmont enters Dracula’s castle:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/castlevania_no_scene.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Oh, that’s not good! wideNES completely overwrote the last bit of the level with the first bit of the new level!&lt;/p&gt;
&lt;p&gt;Clearly, wideNES needed some way to detect when a scene changes. But how?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Perceptual Hashing!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unlike &lt;em&gt;cryptographic&lt;/em&gt; hash functions, which seek to scatter similar inputs randomly across the output space, &lt;em&gt;perceptual&lt;/em&gt; hash functions strive to keep similar inputs “close” to one another in the output space. This makes perceptual hashes perfect for detecting similar images!&lt;/p&gt;
&lt;p&gt;Perceptual hash functions can get incredibly complex, with some being able to detect similar images even if one has been rotated, scaled, stretched, and color shifted. Fortunately, wideNES doesn’t need a complex hash function, since each frame is guaranteed to be the exact same size. As such, wideNES makes use of probably the simplest perceptual hash out there: &lt;em&gt;summing up every pixel on-screen!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It’s simple, but it works pretty well!&lt;/p&gt;
&lt;p&gt;For example, look how much the scene transitions stand-out when plotting the perceptual hash over time in &lt;em&gt;The Legend of Zelda&lt;/em&gt;:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/perceptual_hash_zelda.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;At the moment, wideNES uses a fixed-threshold between perceptual hash values to trigger a scene transition, but this is far from ideal. Different games can use different palettes, and there are many cases when wideNES thinks there is a scene transition when there isn’t. Ideally, wideNES should use a a dynamic-threshold, but at the moment, a fixed-threshold will do.&lt;/p&gt;
&lt;p&gt;With this new heuristic in place, wideNES effectively detects Simon entering the castle in &lt;em&gt;Castlevania&lt;/em&gt; and switches to a fresh-canvas appropriately.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;http://prilik.com/blog/resources/wideNES/castlevania_with_scene.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And with that, the final big puzzle-piece of wideNES slid into place.&lt;/p&gt;
&lt;p&gt;After implementing some basic serialization, I was finally able to boot-up a NES game, play though some levels, and automatically generate maps of the levels!&lt;/p&gt;
&lt;h2 id=&quot;whats-next-for-widenes&quot;&gt;What’s next for wideNES?&lt;/h2&gt;
&lt;p&gt;wideNES is composed of two distinct parts: wideNES &lt;em&gt;Core&lt;/em&gt;, which is the actual rules/heuristics behind the technique, and the concrete implementation of wideNES within ANESE.&lt;/p&gt;
&lt;h3 id=&quot;improving-widenes-core&quot;&gt;Improving wideNES &lt;em&gt;Core&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;First of all, wideNES tends to detect scene transitions too aggressively. The number of false-positives could be minimized by using a better perceptual-hashing algorithm, or by switching to a dynamic-threshold between perceptual-hashes.&lt;/p&gt;
&lt;p&gt;Detecting static screen elements also needs more work. For example, &lt;em&gt;Megaman IV&lt;/em&gt; has a mid-frame IRQ, but no status bar, leading wideNES to mistakenly ignore a sizable chunk of the playfield. While that particular case can be fixed with some manual adjustment, it would be better to have smarter heuristics instead.&lt;/p&gt;
&lt;p&gt;Several NES games scroll the screen in “unique” ways. One high-profile example of this is &lt;em&gt;The Legend of Zelda&lt;/em&gt;, which uses PPUSCROLL to scroll horizontally, yet scrolls vertically using a totally different register, PPUADDR. &lt;em&gt;Zelda&lt;/em&gt; is a pretty popular title, so wideNES implements a heuristic just for &lt;em&gt;Zelda&lt;/em&gt;. There are other games with similar “unique” scroll modes which would also require custom heuristics.&lt;/p&gt;
&lt;p&gt;It would be useful to have some way to “stitch-together” identical scenes. For example, if one plays through &lt;em&gt;Super Mario Bros.&lt;/em&gt; Level 1, but takes the pipe to the underground coin-stash, wideNES will create two separate scenes for Level 1: Scene A, the level up-to the point where Mario enters the coin-zone, and Scene B, the level from when Mario exits the pipe to the flagpole. If the game is then reloaded and Level 1 is replayed &lt;em&gt;without&lt;/em&gt; entering the pipe, wideNES will just simply update Scene A to have the full full-level, but leave Scene B “dangling.”&lt;/p&gt;
&lt;p&gt;Lastly, wideNES should keep-track of scene-transitions. With that data, it would be possible to build a graph of scene transitions, making it possible to generate world-maps for games that are &lt;em&gt;not&lt;/em&gt; composed of a single, large world.&lt;/p&gt;
&lt;h3 id=&quot;improving-aneses-widenes-implementation&quot;&gt;Improving ANESE’s wideNES implementation&lt;/h3&gt;
&lt;p&gt;At the moment, wideNES’s only implementation is within ANESE, a NES emulator I wrote myself. ANESE is a very, &lt;em&gt;very&lt;/em&gt; spartan emulator, with most options hidden behind CLI flags, and with the only UI implemented being a basic file-picker overlay! It is far, &lt;em&gt;far&lt;/em&gt; from “production ready.”&lt;/p&gt;
&lt;p&gt;Aside from the UI though, ANESE and wideNES could both use some compatibility and performance improvements. ANESE was the first large emulator I’ve written, and it shows!&lt;/p&gt;
&lt;p&gt;There are quite a few compatibility issues, with several games playing incorrectly / not booting at all. Fortunately, just because ANESE isn’t a great emulator, does not mean that wideNES is a bad technique. The principles wideNES relies on are solid, and should be easy to implement in other emulators!&lt;/p&gt;
&lt;p&gt;Performance wise, ANESE and wideNES are not the greatest, and even some relatively powerful PCs can sometimes dip below 60fps! There are many optimizations that should be implemented in ANESE and wideNES. Aside from general improvements in ANESE core, there are lots of improvements to how wideNES records frames, renders the map, and samples hashes.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;While i’ve discussed the major aspects of how wideNES works, there many smaller techniques that I wasn’t able to cover. For example, wideNES keeps a map of each frame’s true-hash and it’s scroll values, which are used to allow “reentrant” scenes. This feature, and many more, are described in the heavily-commented source for wideNES, available on the &lt;a href=&quot;https://prilik.com/ANESE/wideNES&quot;&gt;wideNES project page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Working on wideNES has been a truly awesome experience, but with another semester at the University of Waterloo right around the corner, I doubt i’ll get the chance to work on wideNES for a while. wideNES is at a point where it mostly works, and i’m glad I could write this post discussing some of the tech behind it!&lt;/p&gt;
&lt;p&gt;Try wideNES yourself, and tell me what you think! Download &lt;a href=&quot;https://prilik.com/ANESE&quot;&gt;ANESE&lt;/a&gt;, boot up some &lt;em&gt;Super Mario Bros.&lt;/em&gt;, or &lt;em&gt;The Legend of Zelda&lt;/em&gt;, or &lt;em&gt;Metroid&lt;/em&gt;, and have some fun!&lt;/p&gt;

</description>
<pubDate>Tue, 28 Aug 2018 05:29:01 +0000</pubDate>
<dc:creator>nickburlett</dc:creator>
<og:title>wideNES - Peeking Past the Edge of NES Games</og:title>
<og:description>If I write something interesting, it will probably be published over here!</og:description>
<og:url>http://prilik.com/blog/wideNES.html</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://prilik.com/blog/wideNES</dc:identifier>
</item>
<item>
<title>JupyterCon: I don&amp;#039;t like Notebooks [slides]</title>
<link>https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI</link>
<guid isPermaLink="true" >https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI</guid>
<description>&lt;div class=&quot;shape&quot; title=&quot;Rounded Rectangle&quot; readability=&quot;16&quot;&gt;
&lt;p&gt;as notebook experts, the problem here is obvious to you&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;(also this is a &lt;span&gt;really&lt;/span&gt; simple example)&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;for beginners, with dozens of cells and more complex code, this is utterly confusing&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;(I know this because they come to me with their problems)&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;shape&quot; title=&quot;&quot;&gt;
&lt;p&gt;@joelgrus #jupytercon&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Tue, 28 Aug 2018 05:22:11 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<og:title>I Don't Like Notebooks - Joel Grus - #JupyterCon 2018</og:title>
<og:type>article</og:type>
<og:url>https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/preview?_escaped_fragment_&amp;usp=embed_facebook</og:url>
<og:image>https://lh6.googleusercontent.com/Y1Rb2wztFy8k7o6DaNMTQmkDcleI3OTq0AlnM9owtgJBItJSKscmjBVd8gNUtqnMpE4FLA=w1200-h630-p</og:image>
<og:description>I Don't Like Notebooks hi, I'm Joel, and I don't like notebooks Joel Grus (@joelgrus) #JupyterCon 2018</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/preview?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Is Rails still relevant in 2018?</title>
<link>https://blog.eq8.eu/article/is-rails-still-relevant-in-2018.html</link>
<guid isPermaLink="true" >https://blog.eq8.eu/article/is-rails-still-relevant-in-2018.html</guid>
<description>&lt;p&gt;Few days ago I’ve received email where I was asked for an advice from a web developer who was considering switching from Ruby to something else. I was asked in the email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you would start from scratch, what would you choose: Ruby, Elixir or maybe even JS for the backend?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another important part of the email was that he was mainly interested in writing own side projects where main consideration is development speed and ease.&lt;/p&gt;
&lt;p&gt;I’ve started to write a response when I’ve realized the email is quite long. So I’ve decided to turn it into an article.&lt;/p&gt;
&lt;p&gt;So for those interested on my take on this here it is.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First I’ll go trough some philosophical points of web-development, work life and then I’ll shine some light on the technologies themself to better explain what they aim for.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;tldr-&quot;&gt;TL;DR ?&lt;/h3&gt;
&lt;p&gt;To long to read ? I’ll place the conclusion to the top of the article then and you don’t have to read the rest.&lt;/p&gt;
&lt;p&gt;In retrospect I would choose “Ruby on Rails” as my primary technology again even in 2018.&lt;/p&gt;
&lt;p&gt;I like the projects that this technology attracts (startups mostly) and people similar to me I meet on the journey. So it’s my personal choice, you may be different.&lt;/p&gt;
&lt;p&gt;Rails is not obsolete, Ruby is not dying (they are more awesome then ever before) market for this technologies is really good ($$$).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anyone who want to fight my opinions pleas read the entire article first. Thank you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I would focus on my primary tool (Rails) at the same time I would keep learning plain Ruby, Elixir, Phoenix and JavaScript as my side tools (everyone can find 20 minutes a day).&lt;/p&gt;
&lt;p&gt;I wouldn’t spend too much time learning programming languages outside that list as you need more tools in your toolbox but too many tools may get your toolbox cluttered and not really able to have the skill required to operate the tool. Rather learn underlying technologies an problems, like Databases, Caching, Coding practices, DevOps, team maintenance, testing, …&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can learn new programming languages when you are senior developer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;they-are-just-tools&quot;&gt;They are just tools&lt;/h3&gt;
&lt;p&gt;Any programming language any library any framework any database any coding rules: they are just tools.&lt;/p&gt;
&lt;p&gt;You may want to use hammer when you are nailing a nail to the wall, or maybe when you want to smash bricks you would use a bigger hammer. But using hammer to fix a car may not be good idea.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/equivalent/equivalent.github.io/master/assets/2018/web-developer-is-a-lifestyle.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Truth is that during your career you will be forced to use / try / learn multiple different technologies and different product development approaches. &lt;strong&gt;Being a web developer is not a job but a lifestyle !&lt;/strong&gt;. It’s a never ending cycle of self improvement.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Re “lifestyle”: I’m not talking about work-life balance, I’m talking about work-life mindset. Developer is like a MMA fighter, you will have to learn and endlessly practice different martial arts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So you need to realize that it’s not just programming languages that are important but also technologies that the programming language works with (databases, cloud solutions, caching, libraries ….). Also important are architectures(&lt;a href=&quot;https://skillsmatter.com/skillscasts/11594-lrug-march&quot;&gt;Monolith vs Microservices&lt;/a&gt;), team organization practices(e.g. &lt;a href=&quot;http://agilemanifesto.org&quot;&gt;agile&lt;/a&gt;, Scrum, Kamban, &lt;a href=&quot;http://www.extremeprogramming.org&quot;&gt;XP&lt;/a&gt;, &lt;a href=&quot;https://guides.github.com/introduction/flow/&quot;&gt;github-flow&lt;/a&gt;,…), coding practices &amp;amp; styles(&lt;a href=&quot;https://www.youtube.com/watch?v=TMuno5RZNeE&amp;amp;t=960s&quot;&gt;SOLID&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Data,_context_and_interaction&quot;&gt;DCI&lt;/a&gt;, &lt;a href=&quot;https://martinfowler.com/bliki/BoundedContext.html&quot;&gt;bounded contexts&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=RdE-d_EhzmA&quot;&gt;OODD&lt;/a&gt;, many many more …) Programming language is just the glue.&lt;/p&gt;
&lt;p&gt;You can work with the fastest programming language out there, but still if you have no idea how to effectively query in a MySQL database you will create supper slow application.&lt;/p&gt;
&lt;h3 id=&quot;developer-happiness&quot;&gt;Developer happiness&lt;/h3&gt;
&lt;p&gt;You will work with that programming language 8-10 (maybe even 16) hours a day. &lt;strong&gt;Don’t underestimate the importance of “developer happiness”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If tools that you work with or the project that you work for doesn’t make you happy then it’s you that failed not the Programming language.&lt;/p&gt;
&lt;p&gt;I love my job because I’ve picked a job with the right set of technologies, with the right team, with the right project that has the right set of values.&lt;/p&gt;
&lt;p&gt;Junior developers often have to sustain jobs that they may not like to gain experience but I honestly don’t understand how in the year 2018 any &lt;strong&gt;decent&lt;/strong&gt; senior role web-developer may be miserable in his job. There are definitely days that are stressful or frustrating but those are temporary states. But miserable ? Either change the project/job, the technology, or the way how you work (e.g. push for &lt;a href=&quot;https://basecamp.com/books/remote&quot;&gt;remote working&lt;/a&gt;). If none of that is possible then you are probably not that decent web-developer after all and try work on your self improvement harder (then revisit this paragraph in couple of months.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/equivalent/equivalent.github.io/master/assets/2018/10-year-experience.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Working 10 years as a web-developer doesn’t mean you have 10 year experience. Maybe you just repeated the same year 10 times !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;no-winners&quot;&gt;No winners&lt;/h3&gt;
&lt;p&gt;There is no “bad” programming language, only badly chosen project where you would use that programming language.&lt;/p&gt;
&lt;p&gt;Way to often I hear or read software developers dismiss languages like Ruby as too slow” not realizing that their strength was never the speed. Lot of times when you investigate background of those claims you will discover that someone was trying to fit couple of thousand request to non-&lt;a href=&quot;https://en.wikipedia.org/wiki/Load_balancing_(computing)&quot;&gt;load balanced&lt;/a&gt; server or had no idea what &lt;a href=&quot;https://edgeguides.rubyonrails.org/caching_with_rails.html&quot;&gt;caching&lt;/a&gt; is.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Developer need’s to focus to optimize overall performance of application with tools like &lt;a href=&quot;https://newrelic.com&quot;&gt;newrelic&lt;/a&gt; not focus on how many loop cycles the language can handle. You are building real life applications used by real people.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Often I read developers complaining about languages like Java as too complex or non-pragmatic for real applications. Those languages were designed for enterprise use where applications are developed in larger teams with the desire to run couple of decades. For example banks will choose Java over Ruby without hesitation. The main reason is that Java almost never drops a feature (even the bad ideas in languages are supported pretty much forever once they were released). Ruby feeling less pressure from enterprise giants can afford to do radical changes that may break code but introduce better features more often.&lt;/p&gt;
&lt;p&gt;If you are working on Google size project with a billion users you may not want to use Ruby. At the same time if you are at that size it will be nearly impossible to deal with a monolith application. You would most likely deal with a form of microservice architecture where the limitations of the language would be hidden behind smaller chunks of application running on different servers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;more on &lt;a href=&quot;https://blog.eq8.eu/talk/architecture.html&quot;&gt;monolith vs microservice&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s often to see some major companies move from one language to another simply because the language no longer make sense for their scenarios. Years ago Twitter moved away from Ruby because they became this giant social media monster. Github needed to refactor parts of it application to different technology as well. That doesn’t mean the original language was a mistake. It was good choice at the time that helped them to grown into what they are now.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This happens not only with programming languages, but also with databases (SQL vs NoSQL), or storage solutions (Dropbox moved away from AWS S3), or.. pretty much anything ! It’s only programming languages people tend to freak out for some reason.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/equivalent/equivalent.github.io/master/assets/2018/one-does-not-language.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It’s perfectly normal to let go.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also we see this countless times with monolith applications becoming refactored into microservices when they become too successful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are startup that has only couple of thousands in founding to develop a successful application from scratch you will burn that money before you ever launch the product if you choose something unnecessary complex like Java or even Elixir Phoenix&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes Elixir &amp;amp; Phoenix is awesome and really really productive but lets be honest here: Rails is much faster for product development speed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a brand new startups without previous web-development experience drafts out requirements for they “revolutionary” project, almost always one of the requirements is: “it needs to support million users”. Because it’s obvious that the product will be overnight success. The ego plays huge role in downfall of many such companies. Six months after the launch they will probably have couple of thousand users not more. It’s ok to prepare for a larger traffic but honestly don’t kid yourself.&lt;/p&gt;
&lt;p&gt;Investment in supporting overoptimistic expectations always comes with price of delivery time. You can build same feature in couple of days, weeks or months depending whether it needs to withstand traffic from couple of hundreds, thousands or hundred-thousands of users.&lt;/p&gt;
&lt;p&gt;In highly competitive market survive those startups that are able to adapt existing features to requirements or introduce new features quickly. Those that won’t be able to keep up fade in time. Your customers and investors don’t care that your application can potentially handle two million users if the application experience sucks so bad than only couple of hundred will use it.&lt;/p&gt;
&lt;p&gt;Like I said it’s always goes from project to project. You may be building a chat application where Ruby would struggle from day one and Elixir will dominate. You really need to analyze the bottlenecks of the project.&lt;/p&gt;
&lt;p&gt;Reason why I stick with Ruby (and mainly Rails) is simple: I love to work on projects where I develop many interesting features rather than I spend months optimizing the heck out of same one feature. I deliberately choose projects that are neither too large or too small. Medium size projects are always fun and challenging just the right way.&lt;/p&gt;
&lt;p&gt;So really ask yourself what projects would you want to work on in couple of years and according to that choose the technology.&lt;/p&gt;
&lt;h3 id=&quot;community&quot;&gt;Community&lt;/h3&gt;
&lt;p&gt;Don’t underestimate the size and nature of the community as well. Too small language community may mean that there are not that many libraries and senior developers willing to jump to fix the bugs.&lt;/p&gt;
&lt;p&gt;Too larger programming language communities may get toxic pretty quickly. It may not sound as a big deal but I’ve heard stories where community around certain language was quite cool and open minded when it was small but as soon as they start dominating market and gaining popularity they become more a &lt;a href=&quot;https://en.wikipedia.org/wiki/Political_correctness&quot;&gt;political correctness&lt;/a&gt; group. Long story short some decent friendly developers were highly criticized over minor jokes they say on social media.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m not going to name that language as it would just spawn a fire of outrage comments from that community. It would just prove my point but at the same time I’m not suicidal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;languages&quot;&gt;Languages&lt;/h2&gt;
&lt;p&gt;Ok lets finally analyze the languages in question:&lt;/p&gt;
&lt;p&gt;Ruby is an excellent &lt;strong&gt;Object Oriented programming&lt;/strong&gt; language where the primary goal (in my opinion) is excellent OOP experience and developer happiness. But speed of the code is not a primary goal.&lt;/p&gt;
&lt;p&gt;Ruby on Rails is web framework built upon Ruby language where the primary goal is productivity and developer happiness. Speed of the code and true decoupled OOP experience is not the main goal and socket connection is ok but not great.&lt;/p&gt;
&lt;p&gt;Elixir is excellent &lt;strong&gt;functional programming&lt;/strong&gt; language where the primary goal (in my opinion) is multi-core processing (code speed) and socket connection support while keeping in mind developer happiness and reasonable productivity.&lt;/p&gt;
&lt;p&gt;Elixir also has Phoenix web framework but more you read about it more you understand that it’s really collection of libraries that go hand in hand with Elixir primary goals.&lt;/p&gt;
&lt;p&gt;Therefore Elixir vs Ruby vs Ruby on Rails :)&lt;/p&gt;
&lt;p&gt;My explanation sounds really similar but devil is in the details:&lt;/p&gt;
&lt;h4 id=&quot;ruby&quot;&gt;Ruby&lt;/h4&gt;
&lt;p&gt;More you will learn deeper concepts of object oriented programming (SOLID principles, object composition, DCI, object oriented decomposition and design, simple design, bounded contexts, DDD, BDD, TDD, etc..) you will discover how well Ruby works with these concepts.&lt;/p&gt;
&lt;p&gt;My opinion is that Ruby is the best language to express yourself which is more important than some developers tend to admit. Most of your career you will work in a team. It’s important to understand what you and your colleague try to say with the code (it’s called language after all)&lt;/p&gt;
&lt;p&gt;It’s often misconception that one cannot build much usable web-applications with Ruby without Rails. There are several alternatives out there (e.g.: &lt;a href=&quot;https://hanamirb.org&quot;&gt;https://hanamirb.org&lt;/a&gt;, &lt;a href=&quot;http://sinatrarb.com&quot;&gt;http://sinatrarb.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Remember that Ruby is generic programming language not just web-development language. During past 9 years I’ve manage to build several dozen custom plain Ruby CLI tools for personal use and companies I’ve worked for. Applications like &lt;a href=&quot;https://www.sketchup.com&quot;&gt;Google Sketchup&lt;/a&gt; are running Ruby and in Japan Ruby is quite a preferred language.&lt;/p&gt;
&lt;p&gt;Every now and then you can find an article that Ruby is dead but rarely those articles provide any evidence. Usually those articles are just developers personal opinions or personal experiences not tackling global data. Just because one company decides to use other technology doesn’t means that the entire language is dead.&lt;/p&gt;
&lt;p&gt;Ruby is very much alive:&lt;/p&gt;
&lt;p&gt;…just because Ruby is not the major player doesn’t mean that that is bad. Like I’ve explained in the community section, it may be actually preferred state.&lt;/p&gt;
&lt;p&gt;Ruby is around for over 25 years now. It will not go away that soon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To provide full perspective more often with evidence you read how Rails is falling in favor e.g. &lt;a href=&quot;https://thenextweb.com/dd/2017/07/26/ruby-rails-major-coding-bootcamp-ditches-due-waning-interest/&quot;&gt;this article&lt;/a&gt; on how Rails is being replaced in coding bootcamps. I’ll get to that in next section&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;ruby-on-rails&quot;&gt;Ruby on Rails&lt;/h4&gt;
&lt;p&gt;Rails a framework (collection of libraries that work well together) but is also a philosophy on how to write code so you build your products fast.&lt;/p&gt;
&lt;p&gt;Many developers from different languages jump into Rails world without realizing history and highly different system of values:&lt;/p&gt;
&lt;p&gt;More you read and truly understand intention of Rails you will discover that the way how authors propose solving problems in 2018 are similar then those from 10 years ago because they just work. Server rendered HTML &amp;amp; CSS with sprinkles of JavaScript (and yes RJS is still a thing).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Proof that that approach works is Basecamp and Shopify revenue (they are profitable) and developers are happy (&lt;a href=&quot;https://m.signalvnoise.com/employee-benefits-at-basecamp-d2d46fd06c58&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Many things in Rails are coupled together because they make developer more productive. For example the way how Rails models write directly to database or how Frontend is coupled with Backend by default.&lt;/p&gt;
&lt;p&gt;Now the biggest trend out there these days are SPA (&lt;a href=&quot;https://en.wikipedia.org/wiki/Single-page_application&quot;&gt;single page applications&lt;/a&gt; to which Rails is not oppose to, Rails authors just prefers not to use SPA.&lt;/p&gt;
&lt;p&gt;So you can build SPA frontend with Rails but it will definitely have it’s own unique taste. Only recently &lt;a href=&quot;https://guides.rubyonrails.org/5_1_release_notes.html#optional-webpack-support&quot;&gt;Webpack&lt;/a&gt; was introduced to Rails 5 as standard thing. Up till certain point Rails Asset pipeline (via ruby gems) render SPA lib was common thing. This created tension between Rails Backend developers and Frontend only developers that dislike this shotgun marriage of JS and Rails.&lt;/p&gt;
&lt;p&gt;Another approach is to just generate Rails application as an &lt;a href=&quot;https://edgeguides.rubyonrails.org/api_app.html&quot;&gt;API only&lt;/a&gt; and just have SPA on a completely separate VM but that add extra step for DevOps and developer team synchronization as you are literally building two different projects now.&lt;/p&gt;
&lt;p&gt;So the point is that Rails prefers not to use SPA but if you want to use SPA there is at least 3 different ways how to use them now days. This in my opinion sends a confusing message to Rails newcomers that wont to learn and also coding bootcamps that want to teach latest technology “trends” like SPA. So they just drop off Rails in favor plain JS backend.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ll explain why in section reserved for JavaScript language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That’s why it may seen that Rails is dropping in favor. But is not. Boot camps may just gave up Rails but startups are still choosing it for new projects.&lt;/p&gt;
&lt;p&gt;Remember one thing from this. Just because something is trendy it doesn’t mean it’s the only way how to do it. We seen this several years ago with NoSQL databases. There was a huge movement on how databases like MongoDB, Casandra, Riak will completely replace SQL database like MySQL or PostgreSQL. And guess what, they didn’t. There are scenarios where you want to use SQL database there are scenarios where NoSQL database makes more sense.&lt;/p&gt;
&lt;p&gt;Another similar trend these days is Microservices. Same scenario. Everyone is saying how microservices are the “best practice” how to do applications in 2018, yet they don’t explain you will run out of money before you release the product.&lt;/p&gt;
&lt;p&gt;Anyway, developers may find Rails good for monolith applications but for microservice you may find it bit too heavy in memory. So you would pick something lighter like Sinatra.&lt;/p&gt;
&lt;p&gt;Same will apply for “best practices of coding”, “best practices of testing”, deployments, …&lt;/p&gt;
&lt;p&gt;Every team and project is different. It’s up to you to sit down and discuss with your team how you are going to build the project, what technologies you want to use and create a plan to which you would stick to. Worst thing you can do to a project is to change opinions all the time.&lt;/p&gt;
&lt;p&gt;So if your main concern is “development speed and ease” then I would go with Rails without SPA (turbolinks is more powerful than you think). Especially if it’s just one man project (not a team of developers)&lt;/p&gt;
&lt;p&gt;If your main goal is to have a separate team of FE only developers that will write just SPA JavaScript and team of BE developers that will just provide SPA then go with Rails API only option (&lt;code&gt;rails new myapp --api&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;If this API needs to really handle lot of traffic use Rails but maybe check engine alternatives like &lt;a href=&quot;https://github.com/eventmachine/eventmachine&quot;&gt;Eventmachine&lt;/a&gt; That being said, default Rails Puma webserver is really powerful too. And if you learn to apply &lt;a href=&quot;https://guides.rubyonrails.org/caching_with_rails.html&quot;&gt;caching&lt;/a&gt; properly you can get away with a lot.&lt;/p&gt;
&lt;p&gt;If you need mega traffic on your API (like millions of requests) then Elixir/Phoenix may be much better choice.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I heard a story in one podcast that in one USA city had their crime reporting software running on Rails on like 6 servers on average due to heavy traffic. They refactored it to Elixir and they have it on 2 servers. They really need just one server as average load is 30% but they keep two servers up just in case one goes down.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;elixir--phoenix&quot;&gt;Elixir &amp;amp; Phoenix&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt; is an excellent &lt;strong&gt;functional programming language&lt;/strong&gt; where primary goal (in my opinion) is multi-core processing (code speed) and socket connection support while keeping in mind developer happiness and reasonable productivity.&lt;/p&gt;
&lt;p&gt;Phoenix is web framework built in Elixir language but more you read about it it’s really collection of libraries that go hand in hand with Elixir primary goals. So there is not a major philosophy fight between language and framework.&lt;/p&gt;
&lt;p&gt;Elixir is built upon &lt;a href=&quot;https://en.wikipedia.org/wiki/Erlang_(programming_language)&quot;&gt;Erlang VM&lt;/a&gt; which is really powerful functional programming language designed for telecommunication industry where you need to guarantee fault tolerant system If you have telecommunication tower deep in the forest it better run on &lt;code&gt;99.9999999%&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other requirement of telecommunication industry that Erlang fulfils is that one communication tower can take over responsibility of the other tower so caller don’t experience interruptions. Some smart people noticed that this distribution capability matches multicore communication requirements and therefore if you have server machine with lot of CPU cores (like 32, 64 and even more) Erlang will be able to effectively execute your application on all of them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You may argue that there are already lot of OOP languages (like Java or even Ruby) that handles multicore. Well newsflash, all OOP languages sucks at multicore processing. Yes you can do it but you will not get to results like with Functional programming languages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Root of all evil is state.&lt;/strong&gt; It’s supper hard to exchange state without mutations between CPU cores. As OOP is functions+state you are done.&lt;/p&gt;
&lt;p&gt;Functional programming languages don’t mutate state that means no side effects. (I’m explaining it in more depth &lt;a href=&quot;https://blog.eq8.eu/article/lessons-learned-from-functional-programming-as-a-ruby-developer.html&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/equivalent/equivalent.github.io/master/assets/2018/state-mutations.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So as Elixir is built upon Erlang this benefit is passed on to it too.&lt;/p&gt;
&lt;p&gt;Another important point is socket connections. You see any webserver can handle request&amp;amp;response type of communication. But when you are building real time application (e.g. chat, videocall) you need to use “sockets” that means to hold connection on your server.&lt;/p&gt;
&lt;p&gt;Now Rails or Java can handle couple of thousands on one server at once.&lt;/p&gt;
&lt;p&gt;Erlang &amp;amp; Elixir can handle like 2 million connections (&lt;a href=&quot;https://blog.whatsapp.com/196/1-million-is-so-2011&quot;&gt;Erlang proof&lt;/a&gt;, &lt;a href=&quot;https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections&quot;&gt;Elixir proof&lt;/a&gt;). Truth be told those are light connections on a huge like 40 core CPU and 128 GB RAM server but still pretty impressive.&lt;/p&gt;
&lt;p&gt;So Elixir and Phoenix are truly awesome. Why is not everyone using it?. Like I said everything comes with a price. Doh Phoenix and Elixir are trying to do all the best to help developers be productive, when you are a technology that promises such a huge scale you need to introduce practices that need to be decoupled =&amp;gt; bit slower for developers.&lt;/p&gt;
&lt;p&gt;Good example of this how a “model” writes to database. Module (with schema) need to call a changeset, changeset call repository, repository writes to database (&lt;a href=&quot;http://whatdidilearn.info/2018/01/28/introduction-to-ecto-and-models.html&quot;&gt;example&lt;/a&gt;). That’s 3 manual steps where in Rails you have in in one&lt;/p&gt;
&lt;p&gt;Now this 3 steps is much better practice from coding perspective. You are writing clean decoupled easy to test code. But it will definitely take more time than with Rails. Rails has worse coding practice but implementation is focused on productivity and faster implementation time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s not a design choice. Functional programming is more explicit way of writing code, so you need to pass everything, therefore it complicates your code (again that’s both good and bad thing)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So if you are building application to withstand lot of traffic, or application that will heavily rely on socket communication or you are working for company that can afford longer delivery time: Go with Elixir and Phoenix&lt;/p&gt;
&lt;p&gt;Please watch some talks from Elixir and Phoenix before you jump on the train. Not to distract you but to get you more motivated and understand philosophy not just code. Here are two I recommend:&lt;/p&gt;
&lt;h4 id=&quot;javascript&quot;&gt;JavaScript&lt;/h4&gt;
&lt;p&gt;At least minimum level of JavaScript knowledge is essential for frontend web-development when one is building fullstack side project. So given or take JavaScript must be learned to some degree.&lt;/p&gt;
&lt;p&gt;For backend I’ve tried it couple of years ago on a side projects and didn’t like the experience so I’ve never really returned to it. I’m not saying it’s good or bad I just feel it’s not the right choice for me. I’m pretty sure there are many happy Backend JS developers out there I’m just not one of them. That’s why I’ll not say much on JS in this article.&lt;/p&gt;
&lt;p&gt;One good argument that I’ve heard is that the developer in modern web-applications can write backend in NodeJS (JavaScript), frontend in React or Angular or VueJS (all JavaScript), BE and FE will be communicating with each other via JSON (JavaScript object exchange) and the database can be MongoDB where you store JSON documents.&lt;/p&gt;
&lt;p&gt;So entire experience of web-development feels like you just need to know one programming language. No wonder that coding bootcamps prefere to learn JS these days as it’s a simpler for them.&lt;/p&gt;
&lt;p&gt;But like I’ve said in previous sections that’s not true forever. Sooner or later you will reach a point in your professional life where you will have to add more tools to your toolbox.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also when developing BE with Node JS you will work with “event loop” which is bit different philosophy than you would be used to with synchronous Ruby MRI. If you have no idea what I’m talking about and you understand Ruby try to play around with &lt;a href=&quot;https://github.com/eventmachine/eventmachine&quot;&gt;eventmachine&lt;/a&gt; it’s similar principle than Node JS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One more benefit of JavaScript is also that is supported language on many FaaS providers (serverless) like &lt;a href=&quot;https://aws.amazon.com/lambda/&quot;&gt;AWS Lambda&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;one-last-note&quot;&gt;One last note&lt;/h3&gt;
&lt;p&gt;There are many many things you need to learn (There are still many things I need to learn) No mater what you choose be prepared you will have to read, study and implement many coding practices in your free time otherwise you will suck no mater what is the language.&lt;/p&gt;
&lt;p&gt;Recommended topics to start with for next couple of years:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;try both object oriented and functional programming&lt;/li&gt;
&lt;li&gt;SOLID principles, DCI, Simple design, Object composition&lt;/li&gt;
&lt;li&gt;learn design patterns (e.g. &lt;a href=&quot;https://martinfowler.com/eaaCatalog/&quot;&gt;M. Fawler&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;DDD (domain driven design)&lt;/li&gt;
&lt;li&gt;Bounded Contexts&lt;/li&gt;
&lt;li&gt;why to use of TDD and BDD and why to stop using TDD and BDD&lt;/li&gt;
&lt;li&gt;try FE development even if you are BE developer&lt;/li&gt;
&lt;li&gt;learn how to be a professional (e.g.book &lt;a href=&quot;https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073&quot;&gt;Clean Coder&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;try microservices, then stop using them.&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;Techniques like TDD or SOLID principles are good, but they are not unquestionable truth (Yes I said it!) Don’t be religious about them. Definitely worth learning and to apply them when needed, definitely not worth breaking a stable productive team because of them. Much better practice is to be a good team member.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most importantly work on your own project in a free time. Do the experiments there not on your job project. Bring the knowledge to your job.&lt;/p&gt;
&lt;p&gt;Worst attitude developer can have is “I’m not going to learn in my free time, I’ll just learn on the spot in my company”. Web developer is a lifestyle not a job. Deal with it!&lt;/p&gt;
&lt;h3 id=&quot;discussion&quot;&gt;Discussion&lt;/h3&gt;
</description>
<pubDate>Tue, 28 Aug 2018 03:08:09 +0000</pubDate>
<dc:creator>bdcravens</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.eq8.eu/article/is-rails-still-relevant-in-2018.html</dc:identifier>
</item>
<item>
<title>What You Need to Know Before Considering a PhD</title>
<link>http://www.fast.ai/2018/08/27/grad-school/</link>
<guid isPermaLink="true" >http://www.fast.ai/2018/08/27/grad-school/</guid>
<description>&lt;span class=&quot;post-date&quot;&gt;Written: 27 Aug 2018 by &lt;em&gt;Rachel Thomas&lt;/em&gt;&lt;/span&gt;
&lt;p&gt;&lt;em&gt;My newest Ask-A-Data-Scientist post addresses the question of whether to pursue a PhD. You can find my previous &lt;a href=&quot;http://www.fast.ai/topics/#advice&quot;&gt;Ask-A-Data-Scientist advice columns here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Question: I’m an undergrad student passionate about machine learning, and I feel a bit of pressure to get a PhD. Would it maybe make more sense to go into industry for a couple years and then consider going back to school? Any advice you have would be greatly appreciated.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Conversations around whether or not to do a PhD often suffer from &lt;em&gt;selection bias&lt;/em&gt;: people considering PhDs ask successful people with PhDs for their advice. On the other side, there are many people doing fascinating and cutting-edge work without PhDs, who are less likely to be asked for advice on the topic. Other important factors, such as the disproportionately high rate of depression amongst graduate students or the opportunity cost of doing a PhD, are rarely discussed. As someone with a math PhD, I regret spending so many years over-focusing on a narrow area, while neglecting many other important skills. Once I joined the workforce, I felt like I was playing catch-up on many crucial skills and experiences!&lt;/p&gt;
&lt;h2 id=&quot;understanding-opportunity-costs&quot;&gt;Understanding Opportunity Costs&lt;/h2&gt;
&lt;p&gt;I grossly underestimated how much I could learn by working in industry. I believed the falsehood that the best way to always keep learning is to stay in academia, and I didn’t have a good grasp on the opportunity costs of doing a PhD. My undergraduate experience had been magical, and I had always both excelled at and enjoyed being in school. The idea of getting paid to be in school sounded like a sweet deal!&lt;/p&gt;
&lt;p&gt;As I wrote about &lt;a href=&quot;http://www.fast.ai/2016/10/08/teaching-philosophy/&quot;&gt;here&lt;/a&gt;, I later realized that my traditional academic success was actually a weakness, as I’d learned how to solve problems I was given, but not how to how to find and scope interesting problems on my own. I think for many top students (my former self included), &lt;strong&gt;getting a PhD feels like a “safe” option: it’s a well-defined path to doing something considered prestigious&lt;/strong&gt;. But this can just be a way of postponing many necessary personal milestones: of learning to define and set your own goals apart from a structured academic system and of connecting more deeply with your own intrinsic motivations and values.&lt;/p&gt;
&lt;p&gt;At the time, I felt like I was learning a lot during my PhD: taking advanced courses, reading papers, conducting research, regularly giving presentations, organizing two conferences in my field, coordinating a student-run graduate course, serving as an elected representative for grad students in my department, and writing a thesis. In hindsight, all of these were part of &lt;strong&gt;a narrower range of skills&lt;/strong&gt; than I realized, and many of these skills were &lt;strong&gt;less transferable&lt;/strong&gt; than I’d hoped. For instance, academic writing is very different from the type of writing I do through my blogging (which reaches a much wider audience!), and understanding academic politics was very different from startup politics, since the structure and incentives are so different.&lt;/p&gt;
&lt;img class=&quot;image&quot; width=&quot;500&quot; src=&quot;http://www.fast.ai/images/woc3.jpg&quot; alt=&quot;Should you do a PhD? photo from #WOCinTech Chat&quot;/&gt; Should you do a PhD? photo from #WOCinTech Chat
&lt;p&gt;I finished my PhD and started my first full-time adult job around the time I turned 27 (Note: I was earning a stipend through various research and teaching fellowships in graduate school, but that was different.) I had a lot to learn about working in industry and major gaps in my practical skills. Despite taking 2 years of C++ in high school, minoring in CS in college, and doing a few programming projects during my math PhD, I had focused on the more theoretical parts of computer science and was lacking in many practical computer skills. In contrast, my fast.ai co-founder Jeremy Howard started his first full-time adult job at 18 as a McKinsey consultant, and &lt;strong&gt;by the same age when I was first entering the workforce, Jeremy had been working full-time for nearly a decade and had founded two start-ups that are still operational today&lt;/strong&gt;. I could have learned so many other things working in tech during the time I instead did my PhD.&lt;/p&gt;
&lt;p&gt;To be clear, life is not a race. You can &lt;a href=&quot;http://www.fast.ai/2017/03/01/changing-careers/&quot;&gt;switch into tech&lt;/a&gt; and learn new skills at any age. The tech industry is &lt;a href=&quot;https://www.usatoday.com/story/tech/columnist/2017/08/04/ageism-forcing-many-look-outside-silicon-valley-but-tech-hubs-offer-little-respite/479468001/&quot;&gt;deeply ageist&lt;/a&gt;, and the glorification of young founders is a &lt;a href=&quot;https://hbr.org/2018/07/research-the-average-age-of-a-successful-startup-founder-is-45&quot;&gt;harmful myth&lt;/a&gt;. However, I am never again going to have the energy I did in my early 20s (I eat healthy, lift heavy weights, and prioritize sleep, but I don’t feel the same), and I regret spending that time and energy being miserable while over-focusing on a narrow subject area and neglecting a lot of other skills.&lt;/p&gt;
&lt;h2 id=&quot;you-dont-need-a-phd&quot;&gt;You don’t need a PhD&lt;/h2&gt;
&lt;p&gt;Just off the top of my head, I thought of the following people &lt;strong&gt;who don’t have PhDs&lt;/strong&gt; and who are doing interesting, cutting-edge work in deep learning (this list is incomplete and there are tons of others):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://colah.github.io/&quot;&gt;Chris Olah&lt;/a&gt;, co-editor of distill.pub, creator of insightful visualizations, researcher at Google Brain (no college degree)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.fast.ai/about/#jeremy&quot;&gt;Jeremy Howard&lt;/a&gt;, co-founder of fast.ai, founder of Enlitic (1st start-up to apply deep learning to medicine), previous #1-ranked Kaggler and Kaggle president, founder of fastmail and Optimal Decisions Group&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ai.google/research/people/105004&quot;&gt;David Ha&lt;/a&gt;, creator of &lt;a href=&quot;https://experiments.withgoogle.com/sketch-rnn-demo&quot;&gt;Sketch-RNN&lt;/a&gt; doodles, researcher at Google Brain&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://smerity.com/articles/articles.html&quot;&gt;Smerity&lt;/a&gt;, previous Salesforce/MetaMind researcher, inventor of &lt;a href=&quot;https://github.com/salesforce/awd-lstm-lm&quot;&gt;AWD-LSTM&lt;/a&gt;, startup founder&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://petewarden.com/&quot;&gt;Pete Warden&lt;/a&gt;, research engineer at Google Brain and tech lead for TensorFlow mobile, founder of JetPack (acquired by Google), author of O’Reilly ebook &lt;a href=&quot;https://www.oreilly.com/data/free/building-mobile-applications-with-tensorflow.csp&quot;&gt;“Building Mobile Applications with TensorFlow”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gregbrockman.com/&quot;&gt;Greg Brockman&lt;/a&gt;, CTO and co-founder of OpenAI, leads their DOTA efforts (no college degree)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://scholar.google.com/citations?user=TvdMDhwAAAAJ&amp;amp;hl=en&quot;&gt;Catherine Olsson&lt;/a&gt;, research engineer at Google Brain, formerly helped build OpenAI Gym&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sarahooker.me/&quot;&gt;Sara Hooker&lt;/a&gt;, Google Brain researcher working on interpretability and model compression, founder of data for good non-profit Delta Analytics&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wildml.com/&quot;&gt;Denny Britz&lt;/a&gt;, previously a Google Brain resident and worked on Spark at Berkeley, blogs at WildML&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/glagolista?lang=en&quot;&gt;Helena Sarin&lt;/a&gt;, deep learning researcher creating innovative artwork&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sgugger.github.io/&quot;&gt;Sylvain Gugger&lt;/a&gt;, fast.ai’s first research fellow, has done research on &lt;a href=&quot;http://www.fast.ai/2018/07/02/adam-weight-decay/&quot;&gt;AdamW and super-convergence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mariyayao.com/&quot;&gt;Mariya Yao&lt;/a&gt;, CTO of Metamaven, chief editor of TOPBOTS, author of Applied Artificial Intelligence, part of the Duke team that took 2nd place in the DARPA grand challenge&lt;/li&gt;
&lt;li&gt;Devaki Raj, CEO and co-founder of &lt;a href=&quot;https://techcrunch.com/2017/01/05/crowdai/&quot;&gt;startup CrowdAI&lt;/a&gt; applying AI to satellite imagery, previously worked on maps and Android at Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://choongng.com/&quot;&gt;Choong Ng&lt;/a&gt;, CEO and co-founder of Vertex.ai (acquired by Intel), which created &lt;a href=&quot;https://github.com/plaidml/plaidml&quot;&gt;PlaidML&lt;/a&gt; for fast and easy deploy of deep learning on any device&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ventureforamerica.org/the-vfa-podcast/brian-brackeen-founder-ceo-of-kairos/&quot;&gt;Brian Brackeen&lt;/a&gt;, founder and CEO of Kairos computer vision start-up, took &lt;a href=&quot;https://techcrunch.com/2018/06/25/facial-recognition-software-is-not-ready-for-use-by-law-enforcement/&quot;&gt;admirable stance&lt;/a&gt; against use of facial recognition by law enforcement&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In all the jobs I’ve had, including a couple that technically “required” a PhD, I had teammates without graduate degrees. My teammates without PhDs were often more productive and helpful then those of us with PhDs (perhaps because they had more practical experience).&lt;/p&gt;
&lt;p&gt;Of course, there are plenty of &lt;strong&gt;people with PhDs&lt;/strong&gt; who do fascinating and valuable work, such as &lt;a href=&quot;http://randomwalker.info/&quot;&gt;Arvind Narayanan&lt;/a&gt;, &lt;a href=&quot;https://dataprivacylab.org/people/sweeney/&quot;&gt;Latanya Sweeney&lt;/a&gt;, &lt;a href=&quot;http://ai.stanford.edu/~tgebru/&quot;&gt;Timnit Gebru&lt;/a&gt;, &lt;a href=&quot;http://moustaphacisse.com/&quot;&gt;Moustapha Cisse&lt;/a&gt;, &lt;a href=&quot;http://www.dauphin.io/&quot;&gt;Yann Dauphin&lt;/a&gt;, &lt;a href=&quot;https://shakirm.com/&quot;&gt;Shakir Mohamed&lt;/a&gt;, &lt;a href=&quot;https://scholar.google.com/citations?user=pwh7Pw4AAAAJ&amp;amp;hl=en&quot;&gt;Leslie Smith&lt;/a&gt;, &lt;a href=&quot;https://www.stat.berkeley.edu/~ledell/&quot;&gt;Erin LeDell&lt;/a&gt;, &lt;a href=&quot;https://scholar.google.com/citations?user=f9_wq_kAAAAJ&amp;amp;hl=en&quot;&gt;Andrea Frome&lt;/a&gt;, and others. I deeply admire everyone I’ve listed, and I am &lt;strong&gt;not&lt;/strong&gt; arguing that a PhD is never useful or never works out well.&lt;/p&gt;
&lt;h2 id=&quot;depression-isolation--mental-health-problems-among-grad-students&quot;&gt;Depression, Isolation, &amp;amp; Mental Health Problems among Grad Students&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;67 percent of graduate students said they had felt hopeless at least once in the last year; 54 percent felt so depressed they had a hard time functioning; and nearly 10 percent said they had considered suicide, a 2004 survey found. By comparison, an estimated 9.5 percent of American adults suffer from depressive disorders in a given year, according to the National Institute of Mental Health,&lt;/em&gt; &lt;a href=&quot;https://www.chronicle.com/article/Just-Dont-Go-Part-2/44786&quot;&gt;according to research&lt;/a&gt; on UC Berkeley students.&lt;/p&gt;
&lt;img class=&quot;image&quot; width=&quot;500&quot; src=&quot;http://www.fast.ai/images/woc5.jpg&quot; alt=&quot;photo from #WOCinTech Chat&quot;/&gt; photo from #WOCinTech Chat
&lt;p&gt;&lt;em&gt;Grad school is not all fun and personal enrichment for many people. It can involve poverty-level wages, uncertain employment conditions, contradictory demands by supervisors, irrelevant research projects, and disrespectful treatment by both the tenured faculty members and the undergraduates (both of whom behave, all too often, as management and customers.) Grad school is a confidence-killing daily assault of petty degradations. All of this is compounded by the fear that it is all for nothing; that you are a useful fool,&lt;/em&gt; &lt;a href=&quot;https://www.chronicle.com/article/So-You-Want-to-Go-to-Grad/45239&quot;&gt;one professor wrote&lt;/a&gt; in the Chronicle of Higher Education, in an article that was about humanities students in particular, yet applies to many STEM students as well. &lt;em&gt;I hardly know anyone who was a grad student in the last decade who is not deeply embittered. Because of my columns on this site, a few people have told me how their graduate-school years coincided with long periods of suicidal ideation. More commonly, grad students suffer from untreated chronic ailments such as weight fluctuation, fatigue, headache, stomach pain, nervousness, and alcoholism.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While sexism and harassment contributed to my own negative experience in graduate school, many of my male classmates were miserable as well, due to isolation, bullying, or humiliating treatment from professors, and an exploitative system dominated by egos, rigid hierarchy, and obsession with prestige. One of the authors of a &lt;a href=&quot;https://www.chronicle.com/article/Just-Dont-Go-Part-2/44786&quot;&gt;comprehensive report&lt;/a&gt; from the National Academy of Sciences stated, “Scientists have equated rigor and being critical with being cruel.”&lt;/p&gt;
&lt;h2 id=&quot;sexism-and-racism-in-academia&quot;&gt;Sexism and Racism in Academia&lt;/h2&gt;
&lt;p&gt;In science, engineering, &amp;amp; medicine, between 20%-50% of female students and more than 50% of women faculty have experienced harassment, according to a &lt;a href=&quot;https://www.washingtonpost.com/news/speaking-of-science/wp/2018/06/12/half-of-women-in-science-experience-harassment-a-sweeping-new-report-finds/&quot;&gt;National Academy of Sciences report&lt;/a&gt;. In &lt;a href=&quot;http://www.uchastings.edu/news/articles/2015/01/double-jeopardy-report.pdf&quot;&gt;interviews with 60 women of Color&lt;/a&gt; who work in STEM research, 100% of them had experienced discrimination, and the particular negative stereotypes they faced differed depending on their race.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Credentials can be more important for people from underrepresented groups&lt;/strong&gt;, who frequently face a &lt;a href=&quot;https://medium.com/@racheltho/how-to-make-tech-interviews-a-little-less-awful-c29f35431987&quot;&gt;higher level of scrutiny&lt;/a&gt; due to &lt;a href=&quot;https://medium.com/tech-diversity-files/if-you-think-women-in-tech-is-just-a-pipeline-problem-you-haven-t-been-paying-attention-cb7a2073b996&quot;&gt;unconscious bias&lt;/a&gt; (particularly if they are self-taught). While underrepresented minorities may need the credentials more, unfortunately, due to the sexism and racism in higher education, they also may face worse environments in trying to obtain those credentials. I don’t have an answer for this, but wanted to note the tension.&lt;/p&gt;
&lt;center readability=&quot;1.3977272727273&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;5.5909090909091&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;4. I've watched a lot of very smart women get driven out of math PhD programs. Math is not open to all with a community like that.&lt;/p&gt;
— Rachel Thomas (@math_rachel) &lt;a href=&quot;https://twitter.com/math_rachel/status/867029113789308932?ref_src=twsrc%5Etfw&quot;&gt;May 23, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;/center&gt;
&lt;p&gt;Piper Harron, a Black woman who earned her PhD in math at Princeton, &lt;a href=&quot;http://www.theliberatedmathematician.com/math/&quot;&gt;wrote a passage&lt;/a&gt; in her thesis, &lt;em&gt;Respected research math is dominated by men of a certain attitude. Even allowing for individual variation, there is still a tendency towards an oppressive atmosphere, which is carefully maintained and even championed by those who find it conducive to success. As any good grad student would do, I tried to fit in, mathematically. I absorbed the atmosphere and took attitudes to heart. I was miserable, and on the verge of failure. The problem was not individuals, but a system of self-preservation that, from the outside, feels like a long string of betrayals, some big, some small, perpetrated by your only support system.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;toxic-graduate-school-is-worse-than-other-toxic-jobs&quot;&gt;Toxic Graduate School is Worse than Other Toxic Jobs&lt;/h2&gt;
&lt;p&gt;I consider my time in graduate school as one of the &lt;a href=&quot;https://code.likeagirl.io/toxic-jobs-low-self-esteem-interviewing-6c4650a3c28a&quot;&gt;two most toxic environments I’ve been in&lt;/a&gt;. While most of &lt;a href=&quot;https://code.likeagirl.io/toxic-jobs-low-self-esteem-interviewing-6c4650a3c28a&quot;&gt;the advice I gave&lt;/a&gt; for coping with toxic jobs applies to toxic graduate school as well, there is one key distinction: &lt;strong&gt;it is much, much harder to switch graduate programs than it is to switch jobs&lt;/strong&gt;. This makes the power difference between student and professor much greater than the power difference between an employee and boss in the tech industry (which thus means there is greater potential for abuse or exploitation).&lt;/p&gt;
&lt;p&gt;I know people who have switched advisors or even switched programs, and yes, &lt;strong&gt;this can set you back years&lt;/strong&gt;. However, the costs (in terms of mental and physical health, as well as opportunity costs) of staying in a toxic program is very high, and I know people who have spent years recovering from graduate school. It becomes even more complex if you are an immigrant on a student visa and have to consider visa/residency issues. There is not an easy solution for toxic graduate school situations.&lt;/p&gt;
&lt;h2 id=&quot;higher-education-is-changing&quot;&gt;Higher Education is Changing&lt;/h2&gt;
&lt;p&gt;The only situation where you definitely need a PhD is to become a professor. However, higher education is changing a lot: the shift to more adjuncts, the &lt;a href=&quot;https://www.theatlantic.com/education/archive/2016/04/bad-job-market-phds/479205/&quot;&gt;overproduction of PhDs&lt;/a&gt;, severe budget cuts to research funding in the USA, an increasing number of schools &lt;a href=&quot;https://www.nature.com/news/2009/090624/full/4591042a.html&quot;&gt;laying off&lt;/a&gt; &lt;a href=&quot;https://www.google.com/search?q=laying+off+tenured+faculty&amp;amp;oq=laying+off+tenured&quot;&gt;tenured faculty&lt;/a&gt;, having to make repeated major moves for a series of post-docs, and unsustainable levels of student loan debt amongst undergraduates. I’m not sure what the future holds for higher education, but I think it will be different than the past (and this played a significant role in my own change of career goals).&lt;/p&gt;
&lt;p&gt;I feel skeptical now when I hear undergraduates (including my younger self) say that they are certain they want to become professors, as it can be hard coming straight from undergraduate to understand the huge breadth and depth of career options that are out there, even if they have had a few internships or part-time jobs. Also, at that point, many students have primarily been surrounded by professors and students.&lt;/p&gt;
&lt;p&gt;Coding bootcamps and MOOCs such as Coursera were not invented until I was well into &lt;a href=&quot;http://www.fast.ai/2017/03/01/changing-careers/&quot;&gt;my transition into tech&lt;/a&gt;, but both can be useful and are having a big impact on education. I’ve taken and benefitted from a number of online courses, and I would have benefitted from a coding bootcamp if they’d existed 10 or 15 years ago. In the past few years, I’ve worked both as an instructor for an in-person bootcamp and been a co-founder in building fast.ai’s MOOCs, which include &lt;a href=&quot;http://course.fast.ai/&quot;&gt;Practical Deep Learning for Coders&lt;/a&gt; and &lt;a href=&quot;http://www.fast.ai/2017/07/17/num-lin-alg/&quot;&gt;Computational Linear Algebra&lt;/a&gt;. I’ve seen how powerful and useful these new educational formats can be when done well (there are also plenty of useless or sketchy bootcamps and MOOCs out there as well, so do your research).&lt;/p&gt;
&lt;h2 id=&quot;further-readingwatching&quot;&gt;Further Reading/Watching&lt;/h2&gt;
&lt;p&gt;You may be interested in some of my previous posts and talks on related topics:&lt;/p&gt;
&lt;p&gt;When considering a PhD, it is important to carefully weigh the opportunity costs and risks, as well as to consider the experiences of a variety of people: those that have found success without PhDs, the many who have had negative graduate school experiences, and those that have succeeded following a traditional academic path.&lt;/p&gt;
</description>
<pubDate>Mon, 27 Aug 2018 23:30:10 +0000</pubDate>
<dc:creator>hardmaru</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.fast.ai/2018/08/27/grad-school/</dc:identifier>
</item>
<item>
<title>Babel 7 Released</title>
<link>https://babeljs.io/blog/2018/08/27/7.0.0</link>
<guid isPermaLink="true" >https://babeljs.io/blog/2018/08/27/7.0.0</guid>
<description>&lt;p&gt;&lt;span&gt;After almost 2 years, 4k commits, over 50 pre-releases, and a lot of help we are excited to announce the release of Babel 7. It's been almost &lt;a href=&quot;https://babeljs.io/blog/2015/10/29/6.0.0&quot;&gt;3 years&lt;/a&gt; since the release of Babel 6! There's a lot of moving parts so please bear with us in the first weeks of release. Babel 7 is a huge release: we've made it faster, created an upgrade tool, JS configs, config &quot;overrides&quot;, more options for size/minification, JSX Fragments, TypeScript, new proposals, and more!&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;9.182156133829&quot;&gt;
&lt;p&gt;&lt;span&gt;If you appreciate the work we're doing on Babel, you can sponsor Babel on &lt;a href=&quot;https://opencollective.com/babel&quot;&gt;Open Collective&lt;/a&gt;, support me on &lt;a href=&quot;https://www.patreon.com/henryzhu&quot;&gt;Patreon&lt;/a&gt;, or get you or your company involved with Babel as part of work. We'd appreciate the collective ownership of this vital project in the JavaScript community!&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;span&gt;It's Happening! 🎉&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Software is never going to be perfect but we're ready to ship something that's already been used in production for some time now! &lt;a href=&quot;https://www.npmjs.com/package/@babel/core&quot;&gt;&lt;code&gt;@babel/core&lt;/code&gt;&lt;/a&gt; is already at 5.1 mil downloads/month because of its usage in tools like &lt;a href=&quot;https://zeit.co/blog/next6&quot;&gt;Next.js 6&lt;/a&gt;, &lt;a href=&quot;https://medium.com/the-vue-point/vue-cli-3-0-is-here-c42bebe28fbb&quot;&gt;vue-cli 3.0&lt;/a&gt;, &lt;a href=&quot;https://facebook.github.io/react-native/blog/2018/07/04/releasing-react-native-056&quot;&gt;React Native 0.56&lt;/a&gt;, and even &lt;a href=&quot;https://github.com/Automattic/wp-calypso&quot;&gt;Wordpress's frontend&lt;/a&gt; 🙂!&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Babel's Role&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;I'd like to start this post by re-introducing Babel's &lt;a href=&quot;https://www.youtube.com/watch?v=fntd0sPMOtQ&quot;&gt;role&lt;/a&gt; in the JavaScript ecosystem over the last few years.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The initial issue was that unlike server languages, there was no way to guarantee that every user has the same support for JavaScript because users could be using different browsers with varying levels of support (especially older versions of Internet Explorer). If developers wanted to use new syntax (e.g. &lt;code&gt;class A {}&lt;/code&gt;), users on old browsers would just get a blank screen due to the &lt;code&gt;SyntaxError&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Babel provided a way for developers to use the latest JavaScript syntax while allowing them to not worry about how to make it backwards compatible for their users by translating it (&lt;code&gt;class A {}&lt;/code&gt; to &lt;code&gt;var A = function A() {}&lt;/code&gt;).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Because of its ability to transform JavaScript code, it also can be used to implement new features: thus it has become a bridge to help &lt;a href=&quot;https://github.com/tc39&quot;&gt;TC39&lt;/a&gt; (the committee that specifies the JavaScript language) get feedback on proposed JavaScript ideas and for the community to have a say in the future of the language.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Babel is fundamental to JavaScript development today. There are currently over &lt;a href=&quot;https://github.com/babel/babel/network/dependents&quot;&gt;1.3 million dependent repos on GitHub&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/babel-core&quot;&gt;17 million downloads on npm per month&lt;/a&gt;, and &lt;a href=&quot;http://babeljs.io/users&quot;&gt;hundreds of users&lt;/a&gt; including many major frameworks (React, Vue, Ember, Polymer), and companies (Facebook, Netflix, Airbnb). It has become such a foundation for JavaScript development that many people don't even know that it is being used. Even if you aren't using it yourself, it's highly likely your dependencies are using Babel.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Maintainers are People&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Babel has a huge influence on not just the future of the language itself but its community and ecosystem as well. But even with all of this responsibility, Babel is just a community driven project by a couple of volunteers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It was only just this past year some of the team were able to meet for the first time in person:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;6.180412371134&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span&gt;The original &lt;a href=&quot;https://twitter.com/babeljs?ref_src=twsrc%5Etfw&quot;&gt;@babeljs&lt;/a&gt; team, at last together. From left to right: &lt;a href=&quot;https://twitter.com/left_pad?ref_src=twsrc%5Etfw&quot;&gt;@left_pad&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jamiebuilds?ref_src=twsrc%5Etfw&quot;&gt;@jamiebuilds&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sebmck?ref_src=twsrc%5Etfw&quot;&gt;@sebmck&lt;/a&gt;, yours truly, and &lt;a href=&quot;https://twitter.com/loganfsmyth?ref_src=twsrc%5Etfw&quot;&gt;@loganfsmyth&lt;/a&gt; &lt;a href=&quot;https://t.co/XfPj6OhZfA&quot;&gt;pic.twitter.com/XfPj6OhZfA&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;— Amjad Masad (@amasad) &lt;a href=&quot;https://twitter.com/amasad/status/991903859999031298?ref_src=twsrc%5Etfw&quot;&gt;May 3, 2018&lt;/a&gt;&lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;As much as this is an announcement post, I'd like to take the opportunity to remind everyone of the state of this project.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I myself joined a few months before the 6.0 release, which had its own amount of controversy and backlash. Much of the reception there led to existing maintainer burnout (including &lt;a href=&quot;https://twitter.com/sebmck&quot;&gt;Sebastian&lt;/a&gt;, Babel's creator) and a few of us that were left took on the reins.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Like many maintainers, we accidentally stumbled into the role. Many of us didn't have any formal training into how compilers worked or how to maintain an open source project. Ironically, I even purposely avoided majoring in Computer Science in college because I didn't want to take classes on compilers or anything low level because it seemed uninteresting and difficult. Yet I found myself drawn to tooling, linters, Babel, and JavaScript as a language.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I'd like to encourage everyone to look into the open source projects that you depend on and to support them (both with time and monetary support if possible).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Many maintainers aren't inherently experts in the things they work on; and there is much to be accomplished from just starting the work first. You will come in with both curiosity and humility, both of which are great attributes to have as a maintainer. My desire is a hope for the vision of the project versus just all of us &lt;a href=&quot;https://twitter.com/TheLarkInn/status/990790109799870469&quot;&gt;doing &quot;tasks&quot;&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Babel isn't a company, or an open source team at a major company like Facebook. There's only a handful of &lt;a href=&quot;https://babeljs.io/team&quot;&gt;volunteers&lt;/a&gt; working on Babel, and it's only been a few months since I took the leap to &lt;a href=&quot;https://twitter.com/left_pad/status/969793227862790144&quot;&gt;leave my job&lt;/a&gt; and be the only one so far to work on open source full time. But people can come and go, have lives outside of this &quot;hobby&quot;, raise families, move on to different things, switch jobs or are looking for jobs, etc. Are we collectively doing what we can to sustain the things that are so fundamental to how we work, or are we going to allow the foundations to slowly crumble? How do we keep open source welcoming and inclusive but with clear boundaries? Can we learn from the &lt;a href=&quot;https://github.com/nayafia/awesome-maintainers&quot;&gt;experiences of other maintainers&lt;/a&gt;?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although Open Source has clearly taken over software, can we really consider it to be in a healthy state without taking into account the &lt;a href=&quot;https://nolanlawson.com/2017/03/05/what-it-feels-like-to-be-an-open-source-maintainer/&quot;&gt;people&lt;/a&gt; behind it?&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;#BabelSponsorsEverything&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;1.64&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span&gt;Tips 4 &lt;a href=&quot;https://twitter.com/babeljs?ref_src=twsrc%5Etfw&quot;&gt;@babeljs&lt;/a&gt; at &lt;a href=&quot;https://twitter.com/ReactRally?ref_src=twsrc%5Etfw&quot;&gt;@ReactRally&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/BabelSponsorsEverything?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#BabelSponsorsEverything&lt;/a&gt; &lt;a href=&quot;https://t.co/WCxefMOC8V&quot;&gt;pic.twitter.com/WCxefMOC8V&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;— Harry Wolff (@hswolff) &lt;a href=&quot;https://twitter.com/hswolff/status/1030557108830273536?ref_src=twsrc%5Etfw&quot;&gt;August 17, 2018&lt;/a&gt;&lt;/span&gt;&lt;/blockquote&gt;
&lt;span/&gt;
&lt;p&gt;&lt;span&gt;Open Source sustainability feels like giving out an offering basket at the moment. It's not difficult to state the value that projects provide to the thousands of people and companies using open source, but yet we don't see that value being shown to the few that are willing to put in the work. There can be so many &lt;a href=&quot;https://github.com/nayafia/lemonade-stand&quot;&gt;ways to support&lt;/a&gt; open source and yet not all approaches work for each project or people.&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt;Now let's go to the changes!!&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Major Breaking Changes&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote readability=&quot;4.7647058823529&quot;&gt;
&lt;p&gt;&lt;span&gt;Everything should be documented in our &lt;a href=&quot;http://babeljs.io/docs/en/next/v7-migration&quot;&gt;Migration Guide&lt;/a&gt;. Many of these changes can be done automatically with our new &lt;a href=&quot;https://github.com/babel/babel-upgrade&quot;&gt;&lt;code&gt;babel-upgrade&lt;/code&gt;&lt;/a&gt; tool.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Drop support for un-maintained Node versions: 0.10, 0.12, 4, 5 (&lt;a href=&quot;http://babeljs.io/blog/2017/09/12/planning-for-7.0#drop-support-for-unmaintained-node-versions-010-012-5-4315-https-githubcom-babel-babel-issues-4315&quot;&gt;details&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Move us to the &lt;code&gt;@babel&lt;/code&gt; namespace by switching to using &quot;scoped&quot; packages (&lt;a href=&quot;http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#renames-scoped-packages-babel-x&quot;&gt;details&lt;/a&gt;). This helps differentiate official packages, so &lt;code&gt;babel-core&lt;/code&gt; becomes &lt;code&gt;@babel/core&lt;/code&gt; (and no squatting)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Remove (and stop publishing) any yearly presets (&lt;code&gt;preset-es2015&lt;/code&gt;, etc) (&lt;a href=&quot;http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#deprecated-yearly-presets-eg-babel-preset-es20xx&quot;&gt;details&lt;/a&gt;). &lt;a href=&quot;https://babeljs.io/docs/en/next/babel-preset-env.html&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt; replaces the need for these as it includes all yearly additions as well as the ability to target a specific set of browsers&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Also drop the &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;&quot;Stage&quot;&lt;/a&gt; presets (&lt;code&gt;@babel/preset-stage-0&lt;/code&gt;, etc) in favor of opting into individual proposals. Similarly remove proposals from &lt;code&gt;@babel/polyfill&lt;/code&gt; by default (&lt;a href=&quot;https://github.com/babel/babel/pull/8440&quot;&gt;details&lt;/a&gt;). Please consider reading the whole &lt;a href=&quot;https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets&quot;&gt;post&lt;/a&gt; on this for more explanation.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Some packages have renames: any TC39 proposal plugin will now be &lt;code&gt;-proposal&lt;/code&gt; instead of &lt;code&gt;-transform&lt;/code&gt; (&lt;a href=&quot;http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#renames-proposal&quot;&gt;details&lt;/a&gt;). So &lt;code&gt;@babel/plugin-transform-class-properties&lt;/code&gt; becomes &lt;code&gt;@babel/plugin-proposal-class-properties&lt;/code&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Introduce a &lt;code&gt;peerDependency&lt;/code&gt; on &lt;code&gt;@babel/core&lt;/code&gt; for certain user-facing packages (e.g. &lt;code&gt;babel-loader&lt;/code&gt;, &lt;code&gt;@babel/cli&lt;/code&gt;, etc) (&lt;a href=&quot;http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#peer-dependencies-integrations&quot;&gt;details&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;&lt;code&gt;babel-upgrade&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/babel/babel-upgrade&quot;&gt;&lt;code&gt;babel-upgrade&lt;/code&gt;&lt;/a&gt; is a new tool we've started that tries to automatically make upgrade changes: currently with dependencies in &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;.babelrc&lt;/code&gt; config.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We recommend running it directly on a git repo with &lt;code&gt;npx babel-upgrade&lt;/code&gt;, or you can install it globally with &lt;code&gt;npm i babel-upgrade -g&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you'd like to modify the files, you can pass &lt;code&gt;--write&lt;/code&gt; as well as &lt;code&gt;--install&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;&lt;code class=&quot;hljs css language-sh&quot;&gt;npx babel-upgrade --write --install
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;Please considering contributing by reporting issues or PRs to help everyone transition to Babel 7! A hope for the future is that we use this same tool for all future breaking changes and create a bot to PR projects to update.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;JavaScript Config Files&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;We are introducing &lt;a href=&quot;https://babeljs.io/docs/en/next/babelconfigjs.html&quot;&gt;&lt;code&gt;babel.config.js&lt;/code&gt;&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;*.js&lt;/code&gt; configuration files are fairly common in the JavaScript ecosystem. ESLint and Webpack both allow for &lt;code&gt;.eslintrc.js&lt;/code&gt; and &lt;code&gt;webpack.config.js&lt;/code&gt; configuration files, respectively.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that this doesn't mean that it replaces writing a config with &lt;code&gt;.babelrc&lt;/code&gt; or in &lt;code&gt;package.json&lt;/code&gt;. It isn't a requirement, but having this may be useful in certain cases. Below is the case of only compiling with a plugin in &quot;production&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; env = process.env.NODE_ENV;
&lt;span class=&quot;hljs-built_in&quot;&gt;module&lt;/span&gt;.exports = {
  &lt;span class=&quot;hljs-attr&quot;&gt;plugins&lt;/span&gt;: [
    env === &lt;span class=&quot;hljs-string&quot;&gt;&quot;production&quot;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;babel-plugin-that-is-cool&quot;&lt;/span&gt;
  ].filter(&lt;span class=&quot;hljs-built_in&quot;&gt;Boolean&lt;/span&gt;)
};
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;babel.config.js&lt;/code&gt; has a different config resolution than a &lt;code&gt;.babelrc&lt;/code&gt;. It will always resolve the config from that file versus originally when Babel would do a lookup from each file upward until it found a config. This makes it possible to take advantage of the next feature posted below, &lt;code&gt;overrides&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Selective Configuration with &lt;code&gt;overrides&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Recently, I published a &lt;a href=&quot;https://babeljs.io/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages&quot;&gt;post&lt;/a&gt; with thoughts on both publishing ES2015+ packages and also consuming/compiling them.&lt;/p&gt;
&lt;p&gt;There's a &lt;a href=&quot;https://babeljs.io/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages#selective-compilation-with-overrides&quot;&gt;section&lt;/a&gt; that goes into using a new key in Babel's config called &lt;code&gt;overrides&lt;/code&gt; which allows you to specify different configs per glob.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-javascript=&quot;&gt;module.exports = {
&lt;span class=&quot;hljs-symbol&quot;&gt;  presets:&lt;/span&gt; [
    
  ],
&lt;span class=&quot;hljs-symbol&quot;&gt;  overrides:&lt;/span&gt; [{
&lt;span class=&quot;hljs-symbol&quot;&gt;    test:&lt;/span&gt; [&lt;span class=&quot;hljs-string&quot;&gt;&quot;./node_modules&quot;&lt;/span&gt;],
&lt;span class=&quot;hljs-symbol&quot;&gt;    presets:&lt;/span&gt; [
      
    ],
  }, {
&lt;span class=&quot;hljs-symbol&quot;&gt;    test:&lt;/span&gt; [&lt;span class=&quot;hljs-string&quot;&gt;&quot;./tests&quot;&lt;/span&gt;],
&lt;span class=&quot;hljs-symbol&quot;&gt;    presets:&lt;/span&gt; [
      
    ],
  }]
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This allows an application that requires different compilation configs for its tests, client code, and server code to skip needing to create a new &lt;code&gt;.babelrc&lt;/code&gt; file per folder.&lt;/p&gt;
&lt;h2&gt;Speed 🏎&lt;/h2&gt;
&lt;p&gt;Babel itself is &lt;a href=&quot;https://twitter.com/left_pad/status/927554660508028929&quot;&gt;faster&lt;/a&gt; so it should take less time to build! We've made a lot of changes to optimize the code as well as &lt;a href=&quot;https://twitter.com/bmeurer/status/924346958810107904&quot;&gt;accept&lt;/a&gt; &lt;a href=&quot;https://twitter.com/rauchg/status/924349334346276864&quot;&gt;patches&lt;/a&gt; from the &lt;a href=&quot;https://twitter.com/v8js&quot;&gt;v8&lt;/a&gt; team. We're glad to be a part of the &lt;a href=&quot;https://github.com/v8/web-tooling-benchmark&quot;&gt;Web Tooling Benchmark&lt;/a&gt; alongside many other great JavaScript tools.&lt;/p&gt;
&lt;h3&gt;Output Options&lt;/h3&gt;
&lt;p&gt;Babel has supported &lt;a href=&quot;https://babeljs.io/docs/en/next/plugins#plugin-options&quot;&gt;preset and plugin options&lt;/a&gt; for some time now. To recap you can wrap the plugin in an array and pass an options object to the plugin:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-diff&quot;&gt;{
  &quot;plugins&quot;: [
&lt;span class=&quot;hljs-deletion&quot;&gt;-   &quot;pluginA&quot;,&lt;/span&gt;
&lt;span class=&quot;hljs-addition&quot;&gt;+   [&quot;pluginA&quot;, {&lt;/span&gt;
&lt;span class=&quot;hljs-addition&quot;&gt;+     // options here&lt;/span&gt;
&lt;span class=&quot;hljs-addition&quot;&gt;+   }],&lt;/span&gt;
  ]
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We've made some changes to the &lt;code&gt;loose&lt;/code&gt; option of some plugins and added some new options for others! Note by using these options you are opting into non-spec compliant behavior and should know what you are doing; this can become an issue when you switch off of compiling to use the syntax natively. These kinds of options are best used in a library, if at all.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For classes, &lt;code&gt;class A {}&lt;/code&gt; will now not include the &lt;code&gt;classCallCheck&lt;/code&gt; helper.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;hljs css language-javascript&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;A&lt;/span&gt; &lt;/span&gt;{}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-diff&quot;&gt;var A = function A() {
&lt;span class=&quot;hljs-deletion&quot;&gt;-  _classCallCheck(this, A);&lt;/span&gt;
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;There is a new option if every use of a &lt;code&gt;for-of&lt;/code&gt; loop is just an array: &lt;code&gt;[&quot;transform-for-of&quot;, { &quot;assumeArray&quot;: true }]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;hljs css language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; elm;
&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (elm &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; array) {
  &lt;span class=&quot;hljs-built_in&quot;&gt;console&lt;/span&gt;.log(elm);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; elm;

&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; _i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, _array = array; _i &amp;lt; _array.length; _i++) {
  elm = _array[_i];
  &lt;span class=&quot;hljs-built_in&quot;&gt;console&lt;/span&gt;.log(elm);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;We exclude the &lt;code&gt;transform-typeof-symbol&lt;/code&gt; plugin in &lt;code&gt;loose&lt;/code&gt; mode for &lt;code&gt;preset-env&lt;/code&gt; &lt;a href=&quot;https://github.com/babel/babel/pull/6831&quot;&gt;#6831&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We've found a lot of libraries doing this already, so we decided to do this by default.&lt;/p&gt;
&lt;p&gt;Note that the default behavior is to be as spec compliant as possible so that switching off of Babel or using &lt;code&gt;preset-env&lt;/code&gt; is seamless vs. allowing smaller output just to save bytes (there's a tradeoff there that each project can make). We plan to work on better docs and tooling to make that easier.&lt;/p&gt;
&lt;h3&gt;&quot;Pure&quot; Annotation Support&lt;/h3&gt;
&lt;p&gt;After &lt;a href=&quot;https://github.com/babel/babel/pull/6209&quot;&gt;#6209&lt;/a&gt;, transpiled ES6 classes are annotated with a &lt;code&gt;/*#__PURE__*/&lt;/code&gt; comment that allows gives a hint to minfiers like &lt;a href=&quot;https://github.com/mishoo/UglifyJS2&quot;&gt;&lt;code&gt;Uglify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;&lt;code&gt;babel-minify&lt;/code&gt;&lt;/a&gt; for dead code elimination. These annotations are added to other helper functions as well.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;C&lt;/span&gt; &lt;/span&gt;{
  m() {}
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; C =

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; () &lt;/span&gt;{
  
}();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There might be more opportunities for minifier hints and optimizations, let us know!&lt;/p&gt;
&lt;h2&gt;Syntax&lt;/h2&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 Proposals&lt;/a&gt; Support&lt;/h3&gt;
&lt;p&gt;I'd like to re-iterate that &lt;a href=&quot;https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets&quot;&gt;we've removed the Stage presets&lt;/a&gt; in favor of a policy of asking users to explicitly opt-in to proposals &amp;lt; Stage 4.&lt;/p&gt;
&lt;p&gt;The concern is that we are automatically opting people into syntax that is not fixed or done with the expectation that it will not change. But this is not the case, especially for proposals that are Stage 0 or 1. This &lt;a href=&quot;https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal&quot;&gt;post&lt;/a&gt; explains a bit on the kind of thinking behind newer ideas.&lt;/p&gt;
&lt;p&gt;Here's a small listing of some of the new syntax Babel supports (keep in mind this feature set is a moving target that could be added/removed/stalled) and which ones have been added in v7:&lt;/p&gt;
&lt;blockquote readability=&quot;5.960396039604&quot;&gt;
&lt;p&gt;It's hard for anyone to keep track of all the proposals, so we attempt to do that at &lt;a href=&quot;https://github.com/babel/proposals/&quot;&gt;babel/proposals&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;TypeScript Support (&lt;code&gt;@babel/preset-typescript&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;We worked with the &lt;a href=&quot;https://github.com/Microsoft/TypeScript&quot;&gt;TypeScript&lt;/a&gt; team on getting Babel to parse/transform type syntax with &lt;code&gt;@babel/preset-typescript&lt;/code&gt;, similar to how we handle &lt;a href=&quot;https://flow.org/&quot;&gt;Flow&lt;/a&gt; with &lt;code&gt;@babel/preset-flow&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;4.6774193548387&quot;&gt;
&lt;p&gt;For more details check out this &lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/&quot;&gt;post&lt;/a&gt; from the TypeScript team!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before (with types):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; Person {
  firstName: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;;
  lastName: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;;
}

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;greeter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;person : Person&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, &quot;&lt;/span&gt; + person.firstName + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + person.lastName;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After (types removed):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-typescript&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;greeter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;person&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, &quot;&lt;/span&gt; + person.firstName + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + person.lastName;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Both Flow and Typescript are tools that enable JavaScript users to take advantage of gradual typing, and we'd like to enable both in Babel. We plan on continuing to work closely with both of their respective teams at FB and Microsoft (in addition to the community-at-large) to maintain compatibility and support new features.&lt;/p&gt;
&lt;blockquote readability=&quot;5.2156862745098&quot;&gt;
&lt;p&gt;This integration is fairly new, so it's possible some syntax isn't supported fully. We'd appreciate your help in &lt;a href=&quot;https://github.com/babel/babel/labels/area:%20typescript?page=2&amp;amp;q=is%3Aopen+label%3A%22area%3A+typescript%22&quot;&gt;reporting issues and maybe sending a PR&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;JSX Fragment Support (&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;As mentioned in the &lt;a href=&quot;https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html&quot;&gt;React Blog&lt;/a&gt;, JSX Fragment support has been available as of &lt;code&gt;beta.31&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-jsx&quot;&gt;render() {
  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (
    &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ChildA&lt;/span&gt; /&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ChildB&lt;/span&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  );
}

// output 👇

render() {
  return React.createElement(
    React.Fragment,
    null,
    React.createElement(ChildA, null),
    React.createElement(ChildB, null)
  );
}
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Babel Helpers Changes&lt;/h2&gt;
&lt;blockquote readability=&quot;2.7142857142857&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/babel/babel-upgrade/pull/71&quot;&gt;babel-upgrade PR&lt;/a&gt; is in progress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;@babel/runtime&lt;/code&gt; has been split up into &lt;code&gt;@babel/runtime&lt;/code&gt; and &lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/babel/pull/8266&quot;&gt;PR&lt;/a&gt;). The former only contains Babel's helper functions and the latter contains that as well as any polyfill functions (e.g. &lt;code&gt;Symbol&lt;/code&gt;, &lt;code&gt;Promise&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Babel may need to inject certain functions into the code that can re-used. We just call these &quot;helper functions&quot; just like functions that are shared between modules.&lt;/p&gt;
&lt;p&gt;An example of this is with compiling a &lt;code&gt;class&lt;/code&gt; (without &lt;code&gt;loose&lt;/code&gt; mode on):&lt;/p&gt;
&lt;p&gt;The specification says that you need to call a class with &lt;code&gt;new Person()&lt;/code&gt; but if it's compiled to a function you could technically just do &lt;code&gt;Person()&lt;/code&gt; so we include a runtime check for this.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;{}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;_classCallCheck&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;instance, Constructor&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!(instance &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; Constructor)) { &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;TypeError&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Cannot call a class as a function&quot;&lt;/span&gt;); } }

&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; Person = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Person&lt;/span&gt;() &lt;/span&gt;{
  _classCallCheck(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, Person);
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; and &lt;code&gt;@babel/runtime&lt;/code&gt; (as a dependency), Babel can extract the individual functions and just require the modular functions to enable smaller output like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _classCallCheck = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;@babel/runtime/helpers/classCallCheck&quot;&lt;/span&gt;);

&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; Person = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Person&lt;/span&gt;() &lt;/span&gt;{
  _classCallCheck(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, Person);
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same can be done with &lt;code&gt;external-helpers&lt;/code&gt; and &lt;code&gt;rollup-plugin-babel&lt;/code&gt;. We are looking into seeing if we can automatically do this in the future. Look out for a standalone post on Babel's helpers soon.&lt;/p&gt;
&lt;h2&gt;Automatic Polyfilling (experimental)&lt;/h2&gt;
&lt;p&gt;Polyfills are necessary for enabling features like &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt; in environments that do not have support for them. This is important when differentiating between what Babel does as a compiler (transforms &lt;em&gt;syntax&lt;/em&gt;) vs. a polyfill (implements built-in functions/objects).&lt;/p&gt;
&lt;p&gt;It's easy enough to just import something that covers everything like &lt;code&gt;@babel/polyfill&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;@babel/polyfill&quot;&lt;/span&gt;;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But it includes the whole polyfill, and you may not need to import everything if browsers support it already. This is the same problem that &lt;code&gt;@babel/preset-env&lt;/code&gt; tries to solve with syntax, so we apply it here with polyfills. The option &lt;code&gt;useBuiltins: &quot;entry&quot;&lt;/code&gt; does this by splitting the original import into only the imports that are necessary.&lt;/p&gt;
&lt;p&gt;But we can do better by only importing the polyfills that are used in the codebase. The option &lt;code&gt;&quot;useBuiltIns: &quot;usage&quot;&lt;/code&gt; is our first attempt at enabling something like that (&lt;a href=&quot;https://babeljs.io/docs/en/next/babel-preset-env#usebuiltins&quot;&gt;docs&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It will run through each file and inject an import at the top of each file if that built-in is &quot;used&quot; in the code. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;core-js/modules/es6.promise&quot;&lt;/span&gt;;
&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Promise&lt;/span&gt;();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The inference isn't perfect so there may be false positives.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;core-js/modules/es7.array.includes&quot;&lt;/span&gt;;
a.includes 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Other ideas in this space are to use &lt;a href=&quot;https://polyfill.io&quot;&gt;polyfill.io&lt;/a&gt; if you are ok with relying on a service (or read how &lt;a href=&quot;https://twitter.com/kentcdodds&quot;&gt;Kent C. Dodds&lt;/a&gt; used it to &lt;a href=&quot;https://blog.kentcdodds.com/polyfill-as-needed-with-polyfill-service-35f0ff306a26&quot;&gt;build a hosted service at PayPal&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;h3&gt;Babel Macros 🎣&lt;/h3&gt;
&lt;p&gt;One of the best parts of Babel is the pluggability of the tool. Over the years, Babel went from being just a &quot;6to5&quot; compiler into a code transform &lt;em&gt;platform&lt;/em&gt;, enabling some fantastic optimizations for both user and developer experience. &lt;a href=&quot;https://www.npmjs.com/search?q=keywords%3Ababel%20plugin&quot;&gt;Tons of Babel plugins have been developed&lt;/a&gt; for specific libraries and use cases to improve performance and capabilities of library APIs that would not be possible otherwise (some &quot;libraries&quot; are completely transpiled away resulting in no runtime at all).&lt;/p&gt;
&lt;p&gt;Unfortunately, adding these plugins to your codebase requires changing configuration (which some toolkits like &lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;create-react-app&lt;/a&gt; don't allow) and it adds complexity to your code because developers have to know what Babel plugins are operating on a file to know what will happen to the code they're writing. These problems have been solved by &lt;a href=&quot;https://github.com/kentcdodds/babel-plugin-macros&quot;&gt;babel-plugin-macros&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/kentcdodds&quot;&gt;Kent C. Dodds&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Once &lt;code&gt;babel-plugin-macros&lt;/code&gt; has been installed and &lt;a href=&quot;https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/user.md&quot;&gt;added to your config&lt;/a&gt; (it's included in &lt;code&gt;create-react-app&lt;/code&gt; v2), you don't need to bother with your configuration to use any macros. In addition, it's even easier to &lt;a href=&quot;https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/author.md&quot;&gt;write your own custom transforms&lt;/a&gt; for use cases specific to your app or one part of your code.&lt;/p&gt;
&lt;p&gt;Learn more about &lt;code&gt;babel-plugin-macros&lt;/code&gt; in our original post &lt;a href=&quot;https://babeljs.io/blog/2017/09/11/zero-config-with-babel-macros&quot;&gt;&quot;Zero-config code transformation with babel-plugin-macros&quot;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Module Targetting&lt;/h3&gt;
&lt;p&gt;Babel has always attempted to balance the size impact of transformations and capabilities they provide to JavaScript authors. In Babel 7, it has become much easier to configure Babel to support the growing popularity of the &lt;a href=&quot;https://github.com/kristoferbaxter/preset-env-modules&quot;&gt;module/nomodule pattern&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Notably, several CLI tools for popular web frameworks (&lt;a href=&quot;https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://github.com/developit/preact-cli/pull/583&quot;&gt;2&lt;/a&gt;) are already leveraging support leading to a roughly 20% reduction in shipped JavaScript to consumers of applications transpiled by Babel.&lt;/p&gt;
&lt;h3&gt;Caller Metadata and Better Defaults&lt;/h3&gt;
&lt;p&gt;We've added a &lt;a href=&quot;https://github.com/babel/babel/pull/8485&quot;&gt;&lt;code&gt;caller&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;@babel/core&lt;/code&gt; so our tooling can pass metadata to presets/plugins. For example: &lt;code&gt;babel-loader&lt;/code&gt; can add something &lt;a href=&quot;https://github.com/babel/babel-loader/pull/660&quot;&gt;like this&lt;/a&gt; so that &lt;code&gt;preset-env&lt;/code&gt; can automatically disable the module transformation (same with &lt;code&gt;rollup&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css language-js&quot;&gt;babel.transform(&lt;span class=&quot;hljs-string&quot;&gt;&quot;code;&quot;&lt;/span&gt;, {
  filename,
  &lt;span class=&quot;hljs-attr&quot;&gt;presets&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;@babel/preset-env&quot;&lt;/span&gt;],
  &lt;span class=&quot;hljs-attr&quot;&gt;caller&lt;/span&gt;: {
    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;babel-loader&quot;&lt;/span&gt;,
    &lt;span class=&quot;hljs-attr&quot;&gt;supportsStaticESM&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,
  },
});
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is exciting since it enables a way for tooling to provide better defaults and less configuration! For the case of webpack/rollup: we can automatically defer to using their module transformation instead of Babel's (same with &lt;code&gt;import(&quot;a&quot;)&lt;/code&gt;). Look out for more tooling to take advantage of this in the future!&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;class C extends HTMLElement {}&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;4.375&quot;&gt;
&lt;p&gt;One of our oldest issues gets it's own heading (&lt;a href=&quot;https://github.com/babel/babel/pull/7020&quot;&gt;details&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Babel has always had the caveat where it could not support extending native built-ins (&lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Error&lt;/code&gt;, etc) and now it can! We've gotten a lot of issues about this; 🎉 you should celebrate like &lt;a href=&quot;https://twitter.com/WebReflection/status/940724280035303430&quot;&gt;Andrea&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;This change was made to the class plugin so it should be automatically enabled if you are using &lt;code&gt;preset-env&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Website Changes 🌏&lt;/h3&gt;
&lt;p&gt;We've moved our site from &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to &lt;a href=&quot;https://docusaurus.io/&quot;&gt;Docusaurus&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;We're still in the process of setting up &lt;a href=&quot;https://github.com/babel/website/issues/1619&quot;&gt;translations&lt;/a&gt; with &lt;a href=&quot;https://crowdin.com/project/babeljs&quot;&gt;Crowdin&lt;/a&gt;, and with Babel 7 out, we will be in a better place to start that process.&lt;/p&gt;
&lt;h4&gt;REPL&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/j0qOllj.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We've rewritten the &lt;a href=&quot;https://babeljs.io/repl&quot;&gt;REPL&lt;/a&gt; as a &lt;a href=&quot;https://github.com/babel/website/tree/master/js/repl&quot;&gt;React Component&lt;/a&gt;, and have been working with Ives on integrating better with &lt;a href=&quot;https://codesandbox.io/&quot;&gt;CodeSandbox&lt;/a&gt;. This allows you to install any plugin or preset from &lt;a href=&quot;https://www.npmjs.com/search?q=babel-plugin&quot;&gt;npm&lt;/a&gt; in the REPL as well as get any updates that &lt;a href=&quot;https://github.com/CompuIves/codesandbox-client&quot;&gt;CodeSandbox&lt;/a&gt; gets.&lt;/p&gt;
&lt;p&gt;We're participating in &lt;a href=&quot;https://railsgirlssummerofcode.org/&quot;&gt;Rails Girls Summer of Code&lt;/a&gt; again! This time, &lt;a href=&quot;https://twitter.com/MarinaGJCho&quot;&gt;Gyujin&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/sujinleeme&quot;&gt;Sujin&lt;/a&gt; have been working hard to integrate &lt;a href=&quot;https://twitter.com/heisenbugger&quot;&gt;Boopathi's&lt;/a&gt; &lt;a href=&quot;https://github.com/babel/babel-time-travel&quot;&gt;babel-time-travel&lt;/a&gt; into the REPL which you can already test now!&lt;/p&gt;
&lt;p&gt;There are so many opportunities here to get involved to make Babel, &lt;a href=&quot;https://en.wikipedia.org/wiki/AST&quot;&gt;ASTs&lt;/a&gt;, and other tools work better!&lt;/p&gt;
&lt;h3&gt;We Have A Song 🎶&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Hallelujah—In Praise of Babel&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One day, &lt;a href=&quot;https://twitter.com/angustweets&quot;&gt;Angus&lt;/a&gt; graciously &lt;a href=&quot;https://twitter.com/angustweets/status/938817321652576256&quot;&gt;imparted&lt;/a&gt; to us a &lt;a href=&quot;https://medium.com/@angustweets/hallelujah-in-praise-of-babel-977020010fad&quot;&gt;song&lt;/a&gt; which I thought was amazing, so why not make it our &quot;official&quot; song? And &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;Shawn&lt;/a&gt; made a brilliant cover &lt;a href=&quot;https://www.youtube.com/watch?v=40abpedBKK8&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find it in our repo at &lt;a href=&quot;https://github.com/babel/babel/blob/master/SONG.md&quot;&gt;SONG.md&lt;/a&gt;. We hope to see other projects follow up on this!&lt;/p&gt;
&lt;h2&gt;What's Next?&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Babel is inherently tied to what it compiles: JavaScript. As long as there are new additions to propose/work on there is work to be done there. That includes the time/effort to implement and maintain the syntax even before it becomes &quot;stable&quot;. We care about the whole process: the upgrade path, education of new features, teaching of standards/language design, ease of use, and integration with other projects.
&lt;ul&gt;&lt;li&gt;Related: we are almost finished implementing &lt;a href=&quot;https://github.com/babel/babel/pull/7976&quot;&gt;the new decorators proposal&lt;/a&gt; in Babel thanks to &lt;a href=&quot;https://twitter.com/NicoloRibaudo&quot;&gt;Nicolò&lt;/a&gt;. It has been a long journey (it has taken &lt;a href=&quot;https://github.com/babel/babel/pull/6107#issue-135801160&quot;&gt;more than one year&lt;/a&gt;!) because the new proposal is completely different and much more powerful than the old one, but it is almost there 🎉. You can expect it to be released in one of the next minor versions, alongside with a blog post which will explain the changes in detail.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/heisenbugger&quot;&gt;Boopathi&lt;/a&gt; has been diligently maintaining &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;&lt;code&gt;babel-minify&lt;/code&gt;&lt;/a&gt;, so we'll being doing a 1.0 for that next!&lt;/li&gt;
&lt;li&gt;There are a lot of new features in the works: plugin ordering, better validation/errors, speed, re-thinking loose/spec options, caching, using Babel asynchronously, building against itself from CI, smoke tests, running test262. Check out this &lt;a href=&quot;http://babeljs.io/docs/en/next/roadmap&quot;&gt;roadmap&lt;/a&gt; doc for some more possible ideas!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We have no secret plans: we're trying the best we can with what we have to serve this community.&lt;/p&gt;
&lt;h2&gt;Open Source is a Mirror&lt;/h2&gt;
&lt;p&gt;I'd love if we'd have the time and resources to accomplish all of these ideas and to do it well. But as we've shown with this current release, things take much longer than expected!&lt;/p&gt;
&lt;p&gt;Why do these releases take so long anyway? Is it from the feature creep, both from ourselves and our users? Was it because we don't understand how to prioritize among all the possible things to add or fix? Deciding to fix low-hanging fruit vs. fundamental issues until the end? Or &quot;distractions&quot; from helping others on GitHub, Slack, Twitter? Are we just bad are estimating our time, understanding the complexities of these issues, overcommitting as volunteers?&lt;/p&gt;
&lt;p&gt;Or are we just setting too high of an expectation on ourselves, or feel so pressured by others to perform and fit to their needs at the harm of ourselves? I can only describe it as dread when seeing a message from someone online wondering why something hasn't been released while another asks why this bug isn't fixed yet. I want to just rush it out and be done with it but I also have a desire to take this seriously.&lt;/p&gt;
&lt;p&gt;I've tried to &lt;a href=&quot;https://twitter.com/left_pad/status/1032348719931432961&quot;&gt;express&lt;/a&gt; some of these thoughts and struggles in my talk last week at React Rally: &lt;a href=&quot;https://www.youtube.com/watch?v=h0sfFX7WH1c&quot;&gt;Through the (Open Source) Looking Glass&lt;/a&gt;, which I hope you can take an opportunity to listen to. The question I ask myself: What can I do about the inevitable cycle of maintainer burnout, constant anxiety, and unrealistic expectations?&lt;/p&gt;
&lt;p&gt;Like much of life, the things we do reflect our character and show us how we really are. The actions we take can in themselves can change us, for better or for worse. If we are to take our work seriously, we should keep one another accountable in these habits that seem so embedded in our culture: of instant gratification, success in terms of metrics, entitlement vs. gratitude, and pride in overworking.&lt;/p&gt;
&lt;p&gt;But despite all of it, working towards this release has been so worth it.&lt;/p&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;This is truly a really exciting release, not only through looking back at what we've accomplished and enabled, but much more just knowing how much time and heart was put into making it happen over the last year. It's hard to believe the opportunities and experiences that have happened along the way: interacting with and helping companies from all over the world, finding friends in almost any city I've visited, and speaking honestly about the unbelievable journey this group has taken up together.&lt;/p&gt;
&lt;p&gt;Personally, I've never really put so much of my mental energy into anything of this magnitude and I'd like to thank so many people for lifting us up along the way. Shoutouts in particular to &lt;a href=&quot;https://twitter.com/loganfsmyth&quot;&gt;Logan Smyth&lt;/a&gt; who has spent countless time to change so much of how the core works and always takes time to be so helpful in our Slack while also working freelance and &lt;a href=&quot;https://twitter.com/existentialism&quot;&gt;Brian Ng&lt;/a&gt; who has stepped up in such a big way to continue to maintain Babel as well as review all my blog posts and talks. &lt;a href=&quot;https://twitter.com/TschinderDaniel&quot;&gt;Daniel Tschinder&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/svensauleau&quot;&gt;Sven Sauleau&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/NicoloRibaudo&quot;&gt;Nicolò Ribaudo&lt;/a&gt;, and &lt;a href=&quot;https://github.com/jridgewell&quot;&gt;Justin Ridgewell&lt;/a&gt; have all just been instrumental in making this release possible and enjoyable to work on.&lt;/p&gt;
&lt;p&gt;Shoutout to all the many community members on Slack, Twitter, and across all the projects on GitHub that also have to understand what we are doing for their own users. I'd like to give a huge thanks to my friends at &lt;a href=&quot;https://www.behance.net/&quot;&gt;Behance&lt;/a&gt;/&lt;a href=&quot;https://www.adobe.com/&quot;&gt;Adobe&lt;/a&gt; for sponsoring me for almost a year to work on Babel half time before deciding to go full-time (as well as helping test Babel 7 in production throughout the whole time I was there). Big thanks to all of our &lt;a href=&quot;https://babeljs.io/#sponsors&quot;&gt;sponsors&lt;/a&gt; for our Open Collective, especially &lt;a href=&quot;https://babeljs.io/blog/2018/07/16/announcing-babels-new-partnership-with-trivago&quot;&gt;Trivago&lt;/a&gt; and &lt;a href=&quot;https://handshake.org/&quot;&gt;Handshake&lt;/a&gt;. And thanks to our friends and family for all their love and support.&lt;/p&gt;
&lt;p&gt;We're all pretty tired at this point, but it's truly been an honor and privilege to serve in this way, so we hope you appreciate the release!&lt;/p&gt;
</description>
<pubDate>Mon, 27 Aug 2018 23:03:02 +0000</pubDate>
<dc:creator>dfabulich</dc:creator>
<og:title>Babel 7 Released · Babel</og:title>
<og:type>website</og:type>
<og:url>https://babeljs.io/blog/2018/08/27/7.0.0</og:url>
<og:description>After almost 2 years, 4k commits, over 50 pre-releases, and a lot of help we are excited to announce the release of Babel 7. It's been almost [3 years](https://babeljs.io/blog/2015/10/29/6.0.0) since the release of Babel 6! There's a lot of moving parts so please bear with us in the first weeks of release. Babel 7 is a huge release: we've made it faster, created an upgrade tool, JS configs, config &quot;overrides&quot;, more options for size/minification, JSX Fragments, TypeScript, new proposals, and more!</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://babeljs.io/blog/2018/08/27/7.0.0</dc:identifier>
</item>
<item>
<title>Pandoc</title>
<link>https://pandoc.org/</link>
<guid isPermaLink="true" >https://pandoc.org/</guid>
<description>&lt;p&gt;If you need to convert files from one markup format into another, pandoc is your swiss-army knife. Pandoc can convert documents in (several dialects of) &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, &lt;a href=&quot;http://docutils.sourceforge.net/docs/ref/rst/introduction.html&quot;&gt;reStructuredText&lt;/a&gt;, &lt;a href=&quot;http://redcloth.org/textile&quot;&gt;textile&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/html40/&quot;&gt;HTML&lt;/a&gt;, &lt;a href=&quot;http://www.docbook.org/&quot;&gt;DocBook&lt;/a&gt;, &lt;a href=&quot;http://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt;, &lt;a href=&quot;http://www.mediawiki.org/wiki/Help:Formatting&quot;&gt;MediaWiki markup&lt;/a&gt;, &lt;a href=&quot;http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules&quot;&gt;TWiki markup&lt;/a&gt;, &lt;a href=&quot;https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax&quot;&gt;TikiWiki markup&lt;/a&gt;, &lt;a href=&quot;http://www.wikicreole.org/wiki/Creole1.0&quot;&gt;Creole 1.0&lt;/a&gt;, &lt;a href=&quot;https://vimwiki.github.io&quot;&gt;Vimwiki markup&lt;/a&gt;, &lt;a href=&quot;http://dev.opml.org/spec2.html&quot;&gt;OPML&lt;/a&gt;, Emacs &lt;a href=&quot;http://orgmode.org&quot;&gt;Org-Mode&lt;/a&gt;, Emacs &lt;a href=&quot;https://www.gnu.org/software/emacs-muse/manual/&quot;&gt;Muse&lt;/a&gt;, &lt;a href=&quot;http://txt2tags.org&quot;&gt;txt2tags&lt;/a&gt;, Microsoft Word &lt;a href=&quot;https://en.wikipedia.org/wiki/Office_Open_XML&quot;&gt;docx&lt;/a&gt;, LibreOffice &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenDocument&quot;&gt;ODT&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/EPUB&quot;&gt;EPUB&lt;/a&gt;, or &lt;a href=&quot;http://www.haskell.org/haddock/doc/html/ch03s08.html&quot;&gt;Haddock markup&lt;/a&gt; to&lt;/p&gt;
&lt;dl readability=&quot;14.041383219955&quot;&gt;&lt;dt&gt;HTML formats&lt;/dt&gt;
&lt;dd readability=&quot;3.0952380952381&quot;&gt;
&lt;p&gt;XHTML, HTML5, and HTML slide shows using &lt;a href=&quot;http://www.w3.org/Talks/Tools/Slidy&quot;&gt;Slidy&lt;/a&gt;, &lt;a href=&quot;http://lab.hakim.se/reveal-js/&quot;&gt;reveal.js&lt;/a&gt;, &lt;a href=&quot;http://goessner.net/articles/slideous/&quot;&gt;Slideous&lt;/a&gt;, &lt;a href=&quot;http://meyerweb.com/eric/tools/s5/&quot;&gt;S5&lt;/a&gt;, or &lt;a href=&quot;http://paulrouget.com/dzslides/&quot;&gt;DZSlides&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Word processor formats&lt;/dt&gt;
&lt;dd readability=&quot;1.25&quot;&gt;
&lt;p&gt;Microsoft Word &lt;a href=&quot;https://en.wikipedia.org/wiki/Office_Open_XML&quot;&gt;docx&lt;/a&gt;, OpenOffice/LibreOffice &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenDocument&quot;&gt;ODT&lt;/a&gt;, &lt;a href=&quot;http://opendocument.xml.org/&quot;&gt;OpenDocument XML&lt;/a&gt;, Microsoft &lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_PowerPoint&quot;&gt;PowerPoint&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Ebooks&lt;/dt&gt;
&lt;dd readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/EPUB&quot;&gt;EPUB&lt;/a&gt; version 2 or 3, &lt;a href=&quot;http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1&quot;&gt;FictionBook2&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Documentation formats&lt;/dt&gt;
&lt;dd readability=&quot;1.1904761904762&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.docbook.org/&quot;&gt;DocBook&lt;/a&gt; version 4 or 5, &lt;a href=&quot;https://github.com/TEIC/TEI-Simple&quot;&gt;TEI Simple&lt;/a&gt;, &lt;a href=&quot;http://www.gnu.org/software/texinfo/&quot;&gt;GNU TexInfo&lt;/a&gt;, &lt;a href=&quot;http://www.gnu.org/software/groff/groff.html&quot;&gt;Groff man&lt;/a&gt;, &lt;a href=&quot;http://www.gnu.org/software/groff/groff.html&quot;&gt;Groff ms&lt;/a&gt;, &lt;a href=&quot;http://www.haskell.org/haddock/doc/html/ch03s08.html&quot;&gt;Haddock markup&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Archival formats&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&quot;https://jats.nlm.nih.gov/publishing/&quot;&gt;JATS&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Page layout formats&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&quot;http://wwwimages.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-specification.pdf&quot;&gt;InDesign ICML&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Outline formats&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.opml.org/spec2.html&quot;&gt;OPML&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;TeX formats&lt;/dt&gt;
&lt;dd readability=&quot;0.65714285714286&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt;, &lt;a href=&quot;http://www.pragma-ade.nl/&quot;&gt;ConTeXt&lt;/a&gt;, LaTeX Beamer slides&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;PDF&lt;/dt&gt;
&lt;dd readability=&quot;5&quot;&gt;
&lt;p&gt;via &lt;code&gt;pdflatex&lt;/code&gt;, &lt;code&gt;xelatex&lt;/code&gt;, &lt;code&gt;lualatex&lt;/code&gt;, &lt;code&gt;pdfroff&lt;/code&gt;, &lt;code&gt;wkhtml2pdf&lt;/code&gt;, &lt;code&gt;prince&lt;/code&gt;, or &lt;code&gt;weasyprint&lt;/code&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Lightweight markup formats&lt;/dt&gt;
&lt;dd readability=&quot;3.2226890756303&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; (including &lt;a href=&quot;http://commonmark.org&quot;&gt;CommonMark&lt;/a&gt; and &lt;a href=&quot;https://github.github.com/gfm/&quot;&gt;GitHub-flavored Markdown&lt;/a&gt;), &lt;a href=&quot;http://docutils.sourceforge.net/docs/ref/rst/introduction.html&quot;&gt;reStructuredText&lt;/a&gt;, &lt;a href=&quot;http://www.methods.co.nz/asciidoc/&quot;&gt;AsciiDoc&lt;/a&gt;, Emacs &lt;a href=&quot;http://orgmode.org&quot;&gt;Org-Mode&lt;/a&gt;, Emacs &lt;a href=&quot;https://www.gnu.org/software/emacs-muse/manual/&quot;&gt;Muse&lt;/a&gt;, &lt;a href=&quot;http://redcloth.org/textile&quot;&gt;Textile&lt;/a&gt;, &lt;a href=&quot;http://txt2tags.org&quot;&gt;txt2tags&lt;/a&gt;, &lt;a href=&quot;http://www.mediawiki.org/wiki/Help:Formatting&quot;&gt;MediaWiki markup&lt;/a&gt;, &lt;a href=&quot;https://www.dokuwiki.org/wiki:syntax&quot;&gt;DokuWiki markup&lt;/a&gt;, &lt;a href=&quot;https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax&quot;&gt;TikiWiki markup&lt;/a&gt;, &lt;a href=&quot;http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules&quot;&gt;TWiki markup&lt;/a&gt;, &lt;a href=&quot;https://vimwiki.github.io&quot;&gt;Vimwiki markup&lt;/a&gt;, and &lt;a href=&quot;http://zim-wiki.org/manual/Help/Wiki_Syntax.html&quot;&gt;ZimWiki markup&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Custom formats&lt;/dt&gt;
&lt;dd readability=&quot;-0.91891891891892&quot;&gt;
&lt;p&gt;custom writers can be written in &lt;a href=&quot;http://www.lua.org&quot;&gt;lua&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;Pandoc understands a number of useful markdown syntax extensions, including document metadata (title, author, date); footnotes; tables; definition lists; superscript and subscript; strikeout; enhanced ordered lists (start number and numbering style are significant); running example lists; delimited code blocks with syntax highlighting; smart quotes, dashes, and ellipses; markdown inside HTML blocks; and inline LaTeX. If strict markdown compatibility is desired, all of these extensions can be turned off.&lt;/p&gt;
&lt;p&gt;LaTeX math (and even macros) can be used in markdown documents. Several different methods of rendering math in HTML are provided, including MathJax and translation to MathML. LaTeX math is converted (as needed by the output format) to unicode, native Word equation objects, MathML, or groff eqn.&lt;/p&gt;
&lt;p&gt;Pandoc includes a powerful system for automatic citations and bibliographies, using &lt;a href=&quot;http://hackage.haskell.org/package/pandoc-citeproc&quot;&gt;pandoc-citeproc&lt;/a&gt; (which derives from Andrea Rossato’s &lt;a href=&quot;http://hackage.haskell.org/package/citeproc-hs&quot;&gt;citeproc-hs&lt;/a&gt;). This means that you can write a citation like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[see @doe99, pp. 33-35; also @smith04, ch. 1]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and pandoc will convert it into a properly formatted citation using any of hundreds of &lt;a href=&quot;http://citationstyles.org/&quot;&gt;CSL&lt;/a&gt; styles (including footnote styles, numerical styles, and author-date styles), and add a properly formatted bibliography at the end of the document. Many forms of bibliography database can be used, including bibtex, RIS, EndNote, ISI, MEDLINE, MODS, and JSON citeproc. Citations work in every output format.&lt;/p&gt;
&lt;p&gt;There are many ways to customize pandoc to fit your needs, including a template system and a powerful system for writing filters.&lt;/p&gt;
&lt;p&gt;Pandoc includes a Haskell library and a standalone command-line program. The library includes separate modules for each input and output format, so adding a new input or output format just requires adding a new module.&lt;/p&gt;
&lt;p&gt;Pandoc is free software, released under the &lt;a href=&quot;http://www.gnu.org/copyleft/gpl.html&quot;&gt;GPL&lt;/a&gt;. Copyright 2006-2017 &lt;a href=&quot;http://johnmacfarlane.net/&quot;&gt;John MacFarlane&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pandoc.org/diagram.jpg&quot; class=&quot;img-responsive&quot; alt=&quot;pandoc conversions&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 27 Aug 2018 22:32:51 +0000</pubDate>
<dc:creator>otp124</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://pandoc.org/</dc:identifier>
</item>
<item>
<title>GlobalFoundries Stops All 7nm Development</title>
<link>https://www.anandtech.com/show/13277/globalfoundries-stops-all-7nm-development</link>
<guid isPermaLink="true" >https://www.anandtech.com/show/13277/globalfoundries-stops-all-7nm-development</guid>
<description>&lt;p&gt;GlobalFoundries on Monday announced an important strategy shift. The contract maker of semiconductors decided to cease development of bleeding edge manufacturing technologies and stop all work on its 7LP (7 nm) fabrication processes, which will not be used for any client. Instead, the company will focus on specialized process technologies for clients in emerging high-growth markets. These technologies will initially be based on the company’s 14LPP/12LP platform and will include RF, embedded memory, and low power features. Because of the strategy shift, GF will cut 5% of its staff as well as renegotiate its WSA and IP-related deals with AMD and IBM. In a bid to understand more what is going on, we sat down with Gary Patton, CTO of GlobalFoundries.&lt;/p&gt;
&lt;h2&gt;7LP Canned Due to Strategy Shift&lt;/h2&gt;
&lt;p&gt;GlobalFoundries was on track to tape out its clients’ first chips made using its 7 nm process technology in the fourth quarter of this year, but “a few weeks ago” the company decided to take a drastic, strategic turn, says Gary Patton. The CTO stressed that the decision was made not based on technical issues that the company faced, but on a careful consideration of business opportunities the company had with its 7LP platform as well as financial concerns.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13277/patton_7lp_fx-7_briefing_final_4.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13277/patton_7lp_fx-7_briefing_final_4_575px.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is noteworthy that when GlobalFoundries first announced its 7LP platform in September 2016, it said that it would start &lt;a href=&quot;https://www.anandtech.com/show/10704/globalfoundries-updates-roadmap-7-nm-in-2h-2018&quot;&gt;risk production of processors using this technology in early 2018&lt;/a&gt; (&lt;a href=&quot;https://www.globalfoundries.com/news-events/press-releases/globalfoundries-deliver-industrys-leading-performance-offering-7nm-finfet&quot;&gt;PR&lt;/a&gt;), which means that the first chips should have been taped out before that. When the company detailed the process in June 2018, it said that it expected to start “&lt;a href=&quot;https://www.anandtech.com/show/11558/globalfoundries-details-7-nm-plans-three-generations-700-mm-hvm-in-2018&quot;&gt;volume production ramping in the second half of 2018&lt;/a&gt;” (&lt;a href=&quot;https://www.globalfoundries.com/news-events/press-releases/globalfoundries-track-deliver-leading-performance-7nm-finfet-technology&quot;&gt;PR&lt;/a&gt;), which would be close to impossible if customers taped out their first chips only in Q4.&lt;/p&gt;
&lt;p&gt;Generally, it looks like the company had to adjust its roadmap somewhere along the way, moving the start of high-volume manufacturing (HVM) further into 2019. Whether or not these adjustments had any implications on GlobalFoundries is up to debate. Keep in mind that AMD’s first 7 nm product was designed for TSMC’s CLN7FF from the beginning, so the company did not bet on GF’s 7LP in late 2018 anyway, and no rush with the manufacturing technology was needed for GF’s key customer.&lt;/p&gt;
&lt;p&gt;Along with the cancellation of the 7LP, GlobalFoundries essentially canned all pathfinding and research operations for 5 nm and 3 nm nodes. The company will continue to work with the IBM Research Alliance (in Albany, NY) until the end of this year, but GlobalFoundries is not sure it makes sense to invest in R&amp;amp;D for ‘bleeding edge’ nodes given that it does not plan to use them any time soon. The manufacturer will continue to cooperate with IMEC, which works on a broader set of technologies that will be useful for GF’s upcoming specialized fabrication processes, but obviously it will refocus its priorities there as well (more on GF’s future process technologies later in this article).&lt;/p&gt;
&lt;p&gt;So, the key takeaway here is that while the 7LP platform was a bit behind TSMC’s CLN7FF when it comes to HVM – and GlobalFoundries has never been first to market with leading edge bulk manufacturing technologies anyway – there were no issues with the fabrication process itself. Rather there were deeper economic reasons behind the decision.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13277/wafer_of_chips_with_5nm_silicon_nanosheet_transistors.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13277/wafer_of_chips_with_5nm_silicon_nanosheet_transistors_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Economic Reasons Behind the Move&lt;/h3&gt;
&lt;p&gt;As we noted in our &lt;a href=&quot;https://www.anandtech.com/show/12534/change-of-strategy-globalfoundries-3-0&quot;&gt;article covering GlobalFoundries's new CEO hire&lt;/a&gt; earlier this year, former CEO Sanjay Jha was never able to make the company profitable. His key tasks were to increase GlobalFoundries’s sales, streamline the company in general, and ensure that it executes its roadmap.&lt;/p&gt;
&lt;p&gt;To address the needs of the manufacturer’s traditional key client (AMD) and ensure that his company was competitive against other contract makers of semiconductors, he licensed Samsung Foundry's 14LPP fabrication technology. That strategy worked well. With Sunjay Jha at the helm, GlobalFoundries has managed to land a variety of new customers and increase its sales of semiconductor wafers from approximately $4.121 billion in 2013 to $6.176 billion in 2017. Besides, the foundry’s leading-edge Fab 8, which has been processing wafers using exclusively 14LPP process technology for well over 1.5 years now, is running at full capacity.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13277/GF_sales.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13277/GF_sales_575px.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To ensure that GlobalFoundries remains competitive against Samsung Foundry and TSMC in the long run, Sunjay Jha obtained IP and development teams from IBM (along with two fabs and a lot of obligations), and poured in billions of dollars in development of the &lt;a href=&quot;https://www.anandtech.com/show/11558/globalfoundries-details-7-nm-plans-three-generations-700-mm-hvm-in-2018&quot;&gt;7LP fabrication technology platform&lt;/a&gt;. The latter would include three generations of manufacturing processes and, possibly, a custom high-performance technology available exclusively to IBM. While everything appeared to proceed smoothly with the 1&lt;sup&gt;st&lt;/sup&gt; Gen 7 nm process (DUV only), the 2&lt;sup&gt;nd&lt;/sup&gt; Gen 7 nm process (with EUV used for non-critical layers, such as padding) still needed some additional development investments, and the 3&lt;sup&gt;rd&lt;/sup&gt; Gen 7 nm (with intensive usage of EUV) required even more money for development and further could require installation of additional EUV equipment. Meanwhile, there were two things to consider.&lt;/p&gt;
&lt;p&gt;First. If GlobalFoundries kicks off production using the 1&lt;sup&gt;st&lt;/sup&gt; Gen 7 nm fabrication process, it would have needed to cure all of its teething troubles and offer its clients a roadmap forward. The latter would have included 2&lt;sup&gt;nd&lt;/sup&gt; Gen and 3&lt;sup&gt;rd&lt;/sup&gt; Gen 7 nm, but nothing stops there. Customers would have asked for 5 nm and then for 3 nm nodes. Meanwhile, you cannot tell your clients that you are packing up after a certain node and then hope that this node will be a success (the same is true for DUV-only 1&lt;sup&gt;st&lt;/sup&gt; Gen 7 nm).&lt;/p&gt;
&lt;p&gt;Second. Development of leading-edge process technologies is extremely expensive. Every new node requires billions of dollars in investments. Those costs are eventually amortized over each chip the company makes, so to keep increasing R&amp;amp;D costs from driving up chip prices, foundries need to produce more chips. To make more chips, they need to either run multiple fabs that use the same process technology (these are going to cost $10+ billion in the EUV era), or build giant fabs that process a gargantuan number of wafers (these are going to cost $20+ billion in the EUV era). Meanwhile, GlobalFoundries has only one leading-edge fab featuring capacity of 60,000 wafer starts per month. As a result, either GlobalFoundries has to pass these R&amp;amp;D costs on to the finite number of wafers it processes – and become uncompetitive against rivals in the process – or eat the costs with reduced profitability.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13277/dji_0114.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13277/dji_0114_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Meanwhile, having spent well over $20 billion on GlobalFoundries over the last 10 years, Mubadala, the owner of the company, is not inclined to lose more money or invest tens of billions in the hopes of becoming profitable one day. The investor wants GlobalFoundries to stop bleeding and start generating profits.&lt;/p&gt;
&lt;p&gt;“The culture of [our investments], the ones I’ve been involved with, was about accumulating assets and then just maintaining it,” said Mubadala CEO Khaldoon Al Mubarak in an interview with &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-05-10/mubadala-to-compete-for-global-deals-with-250-billion-portfolio&quot;&gt;Bloomberg&lt;/a&gt; earlier this year. “The shift that has happened over the last couple of years, that I’ve tried to push at Mubadala today, is a monetization strategy that makes sense, not with a view to cash out but with a view to reinvest.”&lt;/p&gt;
&lt;p&gt;Gary Patton admits that GlobalFoundries never planned to be a leading producer of 7-nm chips in terms of volume. Furthermore, the company has been seeing increasing adoption of its 14LPP/12LP technologies by designers of various emerging devices, keeping Fab 8 busy and leaving fewer step-and-scan systems for 7LP products.&lt;/p&gt;
&lt;p&gt;Without another big fab, it would be impossible to make any new leading-edge process technology competitive against Samsung and TSMC due to aforementioned scale reasons. Meanwhile, building a new fab (or even expanding the Fab 8 with another clean room module, which is something that GF considered several years ago) and creating another node or two would require another $10 – $15 billion from Mubadala, which is not inclined to invest just now. As a result, the GlobalFoundries has decided to switch entirely to specialized process technologies for emerging high-growth markets. This strategic shift enables it to reduce spending on R&amp;amp;D, slowdown procurement of new equipment, reduce its workforce by 5% (most of which will be in Malta), and potentially avoid direct competition against the aforementioned contract makers of semiconductors.&lt;/p&gt;
</description>
<pubDate>Mon, 27 Aug 2018 20:09:00 +0000</pubDate>
<dc:creator>jasondavies</dc:creator>
<og:title>GlobalFoundries Stops All 7nm Development: Opts To Focus on Specialized Processes</og:title>
<og:type>article</og:type>
<og:url>https://www.anandtech.com/show/13277/globalfoundries-stops-all-7nm-development</og:url>
<og:image>https://images.anandtech.com/doci/13277/globalfoundtries_678_678x452_678x452.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.anandtech.com/show/13277/globalfoundries-stops-all-7nm-development</dc:identifier>
</item>
<item>
<title>Toyota Investing $500M in Uber in Driverless Car Pact</title>
<link>https://www.wsj.com/articles/toyota-investing-500-million-in-uber-in-driverless-car-pact-1535393774</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/toyota-investing-500-million-in-uber-in-driverless-car-pact-1535393774</guid>
<description>&lt;p&gt; Toyota Motor Corp. is investing about $500 million in Uber Technologies Inc. as part of an agreement by the companies to work jointly on autonomous vehicles aimed at improving safety and lowering transportation costs.&lt;/p&gt; &lt;p&gt;Toyota’s investment values Uber at about $72 billion, slightly higher than where SoftBank Group Corp. valued the ride-hailing company earlier this year with its funding, according to people familiar with the matter.&lt;/p&gt;...
  </description>
<pubDate>Mon, 27 Aug 2018 18:28:20 +0000</pubDate>
<dc:creator>smaili</dc:creator>
<og:title>Toyota Investing $500 Million in Uber in Driverless-Car Pact</og:title>
<og:description>Toyota is set to invest about $500 million in Uber as part of an agreement by the two companies to work jointly on driverless-vehicle development.</og:description>
<og:url>https://www.wsj.com/articles/toyota-investing-500-million-in-uber-in-driverless-car-pact-1535393774</og:url>
<og:image>https://images.wsj.net/im-23703/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/toyota-investing-500-million-in-uber-in-driverless-car-pact-1535393774</dc:identifier>
</item>
<item>
<title>How Facebook, Apple and Microsoft Are Contributing to OpenStreetMap</title>
<link>https://theodi.org/article/how-are-facebook-apple-and-microsoft-contributing-to-openstreetmap/</link>
<guid isPermaLink="true" >https://theodi.org/article/how-are-facebook-apple-and-microsoft-contributing-to-openstreetmap/</guid>
<description>&lt;p&gt;&lt;em&gt;Multinational organisations are collaborating in the open to build an openly licensed map of the world: OpenStreetMap. Here’s what we’ve learned so far about what makes this kind of collaboration work best&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap,&lt;/a&gt; launched in 2004, has grown into one of the most successful collaboratively maintained open datasets in the world. Today, contributors to the maps include not just keen local mappers, but also a diverse mix of commercial organisations, non-governmental organisations, humanitarian organisations and also large commercial organisations.&lt;/p&gt;
&lt;p&gt;At the &lt;a href=&quot;https://2018.stateofthemap.org&quot;&gt;State of the Map&lt;/a&gt; conference in Milan, the teams from Microsoft, Apple and Facebook presented their projects, describing how they are working with communities.&lt;/p&gt;
&lt;p&gt;There were many common factors that made these projects successful. These included:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Understanding and aligning the company’s policies with those of the global and local OpenStreetMap community&lt;/strong&gt; to understand how they can work together towards common goals&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Publicly documenting their plans and goals&lt;/strong&gt; so that the community was clear about what problems were being addressed and why&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Becoming contributing members of the community&lt;/strong&gt;, making sure that each contributor has a clear affiliation and has been trained to work effectively with the community&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Engaging with the community wherever they are&lt;/strong&gt;: on mailing lists, through comments on updates, via GitHub or through a mix of social messaging applications&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Listening to the needs of the community and supporting them to fix problems with their local maps&lt;/strong&gt;, eg helping to fix local data quality problems, like incomplete or inaccurate areas, and not just focusing on their own objectives&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Being responsive to questions and concerns&lt;/strong&gt; when raised, and importantly taking on feedback from local expert contributors to help improve how they work&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Supporting the community in advocating for more open data&lt;/strong&gt; from local governments and other organisations, and helping them solve data licensing issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Publishing data and code under open licences&lt;/strong&gt; so they can be used as resources by the community&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Taking on some of the maintenance and mentoring work to help support the community&lt;/strong&gt;, eg by reviewing edits and helping to improve quality issues that might otherwise be left to the community mappers&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Each of these organisations is meeting their own business objectives by contributing to OpenStreetMap. And it’s also helped them to better serve their customers and users.&lt;/p&gt;
&lt;h3&gt;Working in the open&lt;/h3&gt;
&lt;p&gt;These approaches go beyond &lt;a href=&quot;https://wiki.osmfoundation.org/wiki/Directed_Editing_Policy&quot;&gt;the evolving guidelines of the OSM community&lt;/a&gt; and demonstrate a commitment to working in the open, in collaboration and partnership with the OpenStreetMap community. Any of these organisations have the resources to create independent initiatives but instead have chosen to engage with an existing project.&lt;/p&gt;
&lt;p&gt;Working in the open, to deliver equitable value from data, &lt;a href=&quot;https://theodi.org/knowledge-opinion/topics/odi-view-cambridge-analytica-facebook-and-personal-data/&quot;&gt;can help large organisations like Facebook to build trust with their users&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are perhaps some lessons here for other collaborative, community-owned open data initiatives. For example: being clear about how and where you would like commercial support and contributions. And the means by which organisations can engage with your work.&lt;/p&gt;
&lt;p&gt;For example, &lt;a href=&quot;https://osmuk.org/&quot;&gt;OpenStreetMap UK&lt;/a&gt; was formed to make it easier for organisations of all types to engage with the UK OpenStreetMap community. Having a clear contact point can help organisations who are not used to working in the open to reach out to existing communities.&lt;/p&gt;
&lt;p&gt;Our national and global data infrastructure can be stronger if we use open data, open source and open innovation as a tool for collaboration. OpenStreetMap is proving to be a great example of how this can work in practice.&lt;/p&gt;
&lt;h3&gt;State of the Map&lt;/h3&gt;
&lt;p&gt;At the ODI we work with companies and governments &lt;a href=&quot;https://theodi.org/about-the-odi/our-vision-and-manifesto/&quot;&gt;to build an open, trustworthy data ecosystem&lt;/a&gt;. To do that we need to build a sustainable and well-managed data infrastructure that creates the best social and economic value from data for everyone.&lt;/p&gt;
&lt;p&gt;As part of &lt;a href=&quot;https://theodi.org/article/how-can-we-support-the-publication-and-use-of-more-open-geospatial-data/&quot;&gt;our R&amp;amp;D project on open geospatial data&lt;/a&gt;, we attended the &lt;a href=&quot;https://2018.stateofthemap.org&quot;&gt;State of the Map&lt;/a&gt; conference in Milan. Our goal was to learn more about the &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt; ecosystem and how a diverse mix of communities, organisations and governments are collaborating to create an open map of the world.&lt;/p&gt;
&lt;p&gt;You can read more about what we learned in &lt;a href=&quot;https://theodi.org/article/state-of-the-map-2018-what-we-learned-about-open-geospatial-data/&quot;&gt;our previous blog post&lt;/a&gt;. In this post we wanted to share a bit more about how large organisations like Microsoft, Apple, Facebook and Telenav are working in the open with the OpenStreetMap community.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you work for a commercial organisation working with OpenStreetMap data, especially in the UK, we’d love to hear about your experiences working with the OpenStreetMap community, the data and the value you’re creating from openly licensed geospatial data. &lt;a href=&quot;https://theodi.org/cdn-cgi/l/email-protection#472b222e202f69232823233407332f2228232e69283520&quot;&gt;Contact Leigh Dodds&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Image: by &lt;a href=&quot;https://pixabay.com/en/aerial-view-river-clouds-landscape-1031760/&quot;&gt;Pixabay&lt;/a&gt; (&lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/deed.en&quot;&gt;cc by 1.0&lt;/a&gt;)&lt;/p&gt;
</description>
<pubDate>Mon, 27 Aug 2018 18:08:23 +0000</pubDate>
<dc:creator>ephesee</dc:creator>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://theodi.org/article/how-are-facebook-apple-and-microsoft-contributing-to-openstreetmap/</dc:identifier>
</item>
</channel>
</rss>