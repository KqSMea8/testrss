<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Walt: JavaScript-like syntax for WebAssembly</title>
<link>https://github.com/ballercat/walt</link>
<guid isPermaLink="true" >https://github.com/ballercat/walt</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/ballercat/walt/blob/master/walt.png&quot;&gt;&lt;img src=&quot;https://github.com/ballercat/walt/raw/master/walt.png&quot; width=&quot;117&quot; height=&quot;74&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Walt&lt;/strong&gt; | &lt;em&gt;Alternative Syntax for WebAssembly&lt;/em&gt; | &lt;a href=&quot;https://ballercat.github.io/walt/&quot; rel=&quot;nofollow&quot;&gt;Demo&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://travis-ci.org/ballercat/walt&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/92330afd58ef71ab064fab479aa2eb446d733c08/68747470733a2f2f7472617669732d63692e6f72672f62616c6c65726361742f77616c742e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/ballercat/walt.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ballercat/walt/issues&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/926d8ca67df15de5bd1abac234c0603d94f66c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174&quot; alt=&quot;contributions welcome&quot; data-canonical-src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/ballercat/walt?branch=master&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/2c431811ce9003caae407ed4b217ff0f7e073ec3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f62616c6c65726361742f77616c742f62616467652e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Coverage Status&quot; data-canonical-src=&quot;https://coveralls.io/repos/github/ballercat/walt/badge.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/687a8ae8d15f9409617d2cc5a30292a884f6813a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e7376673f7374796c653d666c61742d737175617265&quot; alt=&quot;code style: prettier&quot; data-canonical-src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/walt-js-wasm/Lobby&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/20d7543bc8280bf8134b686c46c7b7e2c0a467fd/68747470733a2f2f6261646765732e6769747465722e696d2f67697474657248512f6769747465722e706e67&quot; alt=&quot;Gitter chat&quot; data-canonical-src=&quot;https://badges.gitter.im/gitterHQ/gitter.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‚ö°Ô∏è &lt;strong&gt;Walt&lt;/strong&gt; is an alternative syntax for WebAssembly text format. It's an experiment for using JavaScript syntax to write to as 'close to the metal' as possible. &lt;em&gt;It's JavaScript with rules.&lt;/em&gt; &lt;code&gt;.walt&lt;/code&gt; files compile directly to WebAssembly binary format.&lt;/p&gt;
&lt;p&gt;Highlights:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Write &lt;em&gt;&quot;close to the metal&quot;&lt;/em&gt; JavaScript!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No C/C++ or Rust required&lt;/strong&gt;, just &lt;em&gt;typed&lt;/em&gt; JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NO LLVM/binary toolkits required&lt;/strong&gt;, zero dependencies 100% written in JS.&lt;/li&gt;
&lt;li&gt;Fast compilation, integrates into webpack!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;üìñ Read the &lt;a href=&quot;https://github.com/ballercat/walt/wiki/Walt-In-5-Minutes&quot;&gt;Quick Start Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;üöÄ Try it out in the &lt;a href=&quot;https://ballercat.github.io/walt/&quot; rel=&quot;nofollow&quot;&gt;Walt Explorer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;üôè Contributions are welcomed! &lt;a href=&quot;https://github.com/ballercat/walt/blob/master/CONTRIBUTING.md&quot;&gt;Contributing guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;üê• Current status: &lt;strong&gt;Alpha&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/ballercat/walt/wiki/Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Writing zero-overhead, optimized WebAssembly is pretty tough to do. The syntax for &lt;code&gt;.wat&lt;/code&gt; files is terse and difficult to work with directly. If you do not wish to use a systems language like C or Rust, then you're kind of out of luck. Your best bet (currently) is to write very plain C code, compile that to .wast and then optimize that result. Then you're ready to compile that into the final WebAssembly binary. This is an attempt to take C/Rust out of the equation and write 'as close to the metal' as possible without losing readability.&lt;/p&gt;
&lt;p&gt;I feel like this is currently a problem. Most Web engineers are not familiar with the C family languages or Rust. It's a barrier for wide spread adoption of WebAssembly. A competent Front-end engineer should be able to edit WebAssembly as easily as any other systems programmer.&lt;/p&gt;

&lt;p&gt;Provide a &lt;strong&gt;thin layer&lt;/strong&gt; of syntax sugar on top of &lt;code&gt;.wat&lt;/code&gt; text format. Preferably porting as much of JavaScript syntax to WebAssembly as possible. This improved syntax should give direct control over the WebAssembly output. Meaning there should be minimal to none post optimization to be done to the wast code generated. The re-use of JavaScript semantics is intentional as I do not wish to create a brand new language.&lt;/p&gt;
&lt;p&gt;Here is what an example of a &lt;code&gt;.walt&lt;/code&gt; module which exports a recursive Fibonacci function looks like:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fibonacci&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;i32&lt;/span&gt;): i32 {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (n &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;

  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (n &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;;

  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fibonacci&lt;/span&gt;(n &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fibonacci&lt;/span&gt;(n &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When this code is ran through the walt compiler you end up with a buffer which can be used to create a WebAssembly module with a &lt;code&gt;fibonacci&lt;/code&gt; export just as you would expect. All done with familiar JS syntax and without any external binary toolkits! A working demo of this exists in the &lt;code&gt;fibonacci-spec.js&lt;/code&gt; &lt;a href=&quot;https://github.com/ballercat/walt/blob/master/packages/walt-compiler/src/__tests__/fibonacci-spec.js&quot;&gt;unit test file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The ultimate goal of Walt is to make WebAssembly accessible to average JavaScript engineer by providing a subset of JavaScript syntax which compiles to WebAssembly bytecode directly. That WebAssembly should be easy to make use of and simple to integrate into an existing project with the current build tools.&lt;/p&gt;
&lt;h2&gt;Use cases&lt;/h2&gt;
&lt;p&gt;Pretty much everyone who wants a quick-start into wasm can use Walt to get there. The use-cases are not specific to this project alone but more to WebAssembly in general. The fact that Walt does not require a stand-alone compiler and can integrate into any(almost?) build tool still makes certain projects better candidates over others.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Web/Node libraries, looking to improve performance.&lt;/li&gt;
&lt;li&gt;Games&lt;/li&gt;
&lt;li&gt;Projects depending on heavy real-time computation from complex UIs to 3D visualizations&lt;/li&gt;
&lt;li&gt;Web VR/AR&lt;/li&gt;
&lt;li&gt;Anyone interested in WebAssembly who is not familiar with system languages.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/ballercat/walt/wiki&quot;&gt;Wiki&lt;/a&gt; for detailed design decisions etc.&lt;/p&gt;
&lt;h2&gt;Prior Art&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/tmcw/wah&quot;&gt;wah&lt;/a&gt; - A slightly higher level syntax on top of the wasm text format&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/maierfelix/mini-c&quot;&gt;mini-c&lt;/a&gt; - Experimental C to WebAssembly compiler&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Contributors&lt;/h2&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 10 Oct 2018 22:30:38 +0000</pubDate>
<dc:creator>jedisct1</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/743990?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>ballercat/walt</og:title>
<og:url>https://github.com/ballercat/walt</og:url>
<og:description>:zap: Walt is a JavaScript-like syntax for WebAssembly text format :zap: - ballercat/walt</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/ballercat/walt</dc:identifier>
</item>
<item>
<title>Arguing against using protobuffers</title>
<link>http://reasonablypolymorphic.com/blog/protos-are-wrong/</link>
<guid isPermaLink="true" >http://reasonablypolymorphic.com/blog/protos-are-wrong/</guid>
<description>&lt;p&gt;I've spent a good deal of my professional life arguing against using protobuffers. They're clearly written by amateurs, unbelievably ad-hoc, mired in gotchas, tricky to compile, and solve a problem that nobody but Google really has. If these problems of protobuffers remained quarantined in serialization abstractions, my complaints would end there. But unfortunately, the bad design of protobuffers is so persuasive that these problems manage to leak their way into your code as well.&lt;/p&gt;
&lt;h2 id=&quot;ad-hoc-and-built-by-amateurs&quot;&gt;Ad-Hoc and Built By Amateurs&lt;/h2&gt;
&lt;p&gt;Stop. Put away your email client that is half-way through writing me about how &quot;Google is filled with the world's best engineers,&quot; and that &quot;anything they build is, by definition, not built by amateurs.&quot; I don't want to hear it.&lt;/p&gt;
&lt;p&gt;Let's just get this out of the way. Full disclosure: I used to work at Google. It was the first (but unfortunately, not the last) place I ever used protobuffers. All of the problems I want to talk about today exist inside of Google's codebase; it's not just a matter of &quot;using protobuffers wrong&quot; or some such nonsense like that.&lt;/p&gt;
&lt;p&gt;By far, the biggest problem with protobuffers is their terrible type-system. Fans of Java should feel right at home with protobuffers, but unfortunately, literally nobody considers Java to have a well-designed type-system. The dynamic typing guys complain about it being too stifling, while the static typing guys like me complain about it being too stifling without giving you any of the things you actually want in a type-system. Lose lose.&lt;/p&gt;
&lt;p&gt;The ad-hoc-ness and the built-by-amateurs-itude go hand-in-hand. So much of the protobuffer spec feels bolted on as an afterthought that it clearly &lt;em&gt;was&lt;/em&gt; bolted on as an afterthought. Many of its restrictions will make you stop, scratch your head and ask &quot;wat?&quot; But these are just symptoms of the deeper answer, which is this:&lt;/p&gt;
&lt;p&gt;Protobuffers were obviously built by amateurs because they offer &lt;em&gt;bad solutions to widely-known and already-solved problems.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;no-compositionality&quot;&gt;No Compositionality&lt;/h3&gt;
&lt;p&gt;Protobuffers offer several &quot;features&quot;, but none of them see to work with one another. For example, look at the list of orthogonal-yet-constrained typing features that I found by skimming the &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/proto3&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;oneof&lt;/code&gt; fields can't be &lt;code&gt;repeated&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map&amp;lt;k,v&amp;gt;&lt;/code&gt; fields have dedicated syntax for their keys and values, but this isn't used for any other types.&lt;/li&gt;
&lt;li&gt;Despite &lt;code&gt;map&lt;/code&gt; fields being able to be parameterized, no user-defined types can be. This means you'll be stuck hand-rolling your own specializations of common data structures.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map&lt;/code&gt; fields cannot be &lt;code&gt;repeated&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map&lt;/code&gt; keys &lt;em&gt;can&lt;/em&gt; be &lt;code&gt;string&lt;/code&gt;s, but &lt;em&gt;can not&lt;/em&gt; be &lt;code&gt;bytes&lt;/code&gt;. They also can't be &lt;code&gt;enum&lt;/code&gt;s, even though &lt;code&gt;enum&lt;/code&gt;s are considered to be equivalent to integers everywhere else in the protobuffer spec.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map&lt;/code&gt; values cannot be other &lt;code&gt;map&lt;/code&gt;s.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This insane list of restrictions is the result of unprincipled design choices and bolting on features after the fact. For example, &lt;code&gt;oneof&lt;/code&gt; fields can't be &lt;code&gt;repeated&lt;/code&gt; because rather than resulting in a coproduct type, instead the code generator will give you a product of mutually-exclusive optional fields. Such a transformation is only valid for a singular field (and, as we'll see later, not even then.)&lt;/p&gt;
&lt;p&gt;The restriction behind &lt;code&gt;map&lt;/code&gt; fields being unable to be &lt;code&gt;repeated&lt;/code&gt; is related, but shows off a different limitation of the type-system. Behind the scenes, a &lt;code&gt;map&amp;lt;k,v&amp;gt;&lt;/code&gt; is desugared into something spiritually similar to &lt;code&gt;repeated Pair&amp;lt;k,v&amp;gt;&lt;/code&gt;. And because &lt;code&gt;repeated&lt;/code&gt; is a magical language keyword rather than a type in its own right, it doesn't compose with itself.&lt;/p&gt;
&lt;p&gt;Your guess is as good as mine for why an &lt;code&gt;enum&lt;/code&gt; can't be used as a &lt;code&gt;map&lt;/code&gt; key.&lt;/p&gt;
&lt;p&gt;What's so frustrating about all of this is a little understanding of how modern type-systems work would be enough to &lt;em&gt;drastically simplify&lt;/em&gt; the protobuffer spec and simultaneously &lt;em&gt;remove all of the arbitrary restrictions.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The solution is as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make all fields in a message &lt;code&gt;required&lt;/code&gt;. This makes messages &lt;em&gt;product types&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Promote &lt;code&gt;oneof&lt;/code&gt; fields to instead be standalone data types. These are &lt;em&gt;coproduct types&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Give the ability to parameterize product and coproduct types by other types.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;That's it! These three features are all you need in order to define any possible piece of data. With these simpler pieces, we can re-implement the rest of the protobuffer spec in terms of them.&lt;/p&gt;
&lt;p&gt;For example, we can rebuild &lt;code&gt;optional&lt;/code&gt; fields:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode cpp&quot;&gt;
&lt;code class=&quot;sourceCode cpp&quot;&gt;product Unit {
  &lt;span class=&quot;co&quot;&gt;// no fields&lt;/span&gt;
}

coproduct Optional&amp;lt;t&amp;gt; {
  t    value = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
  Unit unset = &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Building &lt;code&gt;repeated&lt;/code&gt; fields is simple too:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode cpp&quot;&gt;
&lt;code class=&quot;sourceCode cpp&quot;&gt;coproduct List&amp;lt;t&amp;gt; {
  Unit empty = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
  Pair&amp;lt;t, List&amp;lt;t&amp;gt;&amp;gt; cons = &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, the actual serialization logic is allowed to do something smarter than pushing linked-lists across the network---after all, &lt;a href=&quot;http://reasonablypolymorphic.com/blog/follow-the-denotation/&quot;&gt;implementations and semantics don't need to align one-to-one&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;questionable-choices&quot;&gt;Questionable Choices&lt;/h3&gt;
&lt;p&gt;In the vein of Java, protobuffers make the distinction between &lt;em&gt;scalar&lt;/em&gt; types and &lt;em&gt;message&lt;/em&gt; types. Scalars correspond more-or-less to machine primitives---things like &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; and &lt;code&gt;string&lt;/code&gt;. Messages, on the other hand, are everything else. All library- and user-defined types are messages.&lt;/p&gt;
&lt;p&gt;The two varieties of types have completely different semantics, of course.&lt;/p&gt;
&lt;p&gt;Fields with scalar types are always present. Even if you don't set them. Did I mention that (at least in proto3) all protobuffers can be zero-initialized with absolutely no data in them? Scalar fields get false-y values---&lt;code&gt;uint32&lt;/code&gt; is initialized to &lt;code&gt;0&lt;/code&gt; for example, and &lt;code&gt;string&lt;/code&gt; is initialized as &lt;code&gt;&quot;&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It's impossible to differentiate a field that was missing in a protobuffer from one that was assigned to the default value. Presumably this decision is in place in order to allow for an optimization of not needing to send default scalar values over the wire. Presumably, though the &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/encoding&quot;&gt;encoding guide&lt;/a&gt; makes no mention of this optimization being performed, so your guess is as good as mine.&lt;/p&gt;
&lt;p&gt;As we'll see when we discuss protobuffers' claim to being god's gift to backwards- and forwards-compatible APIs, this inability to distinguish between unset and default values is a nightmare. Especially if indeed it's a design decision made in order to save one bit (set or not) per field.&lt;/p&gt;
&lt;p&gt;Contrast this behavior against message types. While scalar fields are dumb, the behavior for message fields is outright &lt;em&gt;insane.&lt;/em&gt; Internally, message fields are either there or they're not---but their behavior is crazy. Some pseudocode for their accessor is worth a thousand words. Pretend this is Java or something similar:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Foo m_foo;

&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Foo foo {
  &lt;span class=&quot;co&quot;&gt;// only if `foo` is used as an expression&lt;/span&gt;
  get {
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (m_foo != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;)
      &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; m_foo;
    &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Foo&lt;/span&gt;();
  }

  &lt;span class=&quot;co&quot;&gt;// instead if `foo` is used as an lvalue&lt;/span&gt;
  mutable get {
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (m_foo = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;)
      m_foo = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Foo&lt;/span&gt;();
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; m_foo;
  }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The idea is that if the &lt;code&gt;foo&lt;/code&gt; field is unset, you'll see a default-initialized copy whenever you ask for it, but won't actually modify its container. But if you modify &lt;code&gt;foo&lt;/code&gt;, it will modify its parent as well! All of this just to avoid using a &lt;code&gt;Maybe Foo&lt;/code&gt; type and the associated &quot;headaches&quot; of the nuance behind needing to figure out what an unset value should mean.&lt;/p&gt;
&lt;p&gt;This behavior is especially egregious, because it breaks a law! We'd expect the assignment &lt;code&gt;msg.foo = msg.foo;&lt;/code&gt; to be a no-op. Instead the implementation will actually silently change &lt;code&gt;msg&lt;/code&gt; to have a zero-initialized copy of &lt;code&gt;foo&lt;/code&gt; if it previously didn't have one.&lt;/p&gt;
&lt;p&gt;Unlike scalar fields, at least it's possible to detect if a message field is unset. Language bindings for protobuffers offer something along the lines of a generated &lt;code&gt;bool has_foo()&lt;/code&gt; method. In the frequent case of copying a message field from one proto to another, iff it was present, you'll need to write the following code:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode cpp&quot;&gt;
&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (src.has_foo(src)) {
  dst.set_foo(src.foo());
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that, at least in statically-typed languages, this pattern &lt;em&gt;cannot be abstracted&lt;/em&gt; due to the nominal relationship between the methods &lt;code&gt;foo()&lt;/code&gt;, &lt;code&gt;set_foo()&lt;/code&gt; and &lt;code&gt;has_foo()&lt;/code&gt;. Because all of these functions are their own &lt;em&gt;identifiers&lt;/em&gt;, we have no means of programmatically generating them, save for a preprocessor macro:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode cpp&quot;&gt;
&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span class=&quot;pp&quot;&gt;#define COPY_IFF_SET(src, dst, field) &lt;/span&gt;\
&lt;span class=&quot;pp&quot;&gt;if (src.has_##field(src)) { &lt;/span&gt;\
&lt;span class=&quot;pp&quot;&gt;  dst.set_##field(src.field()); &lt;/span&gt;\
&lt;span class=&quot;pp&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(but preprocessor macros are verboten by the &lt;a href=&quot;https://google.github.io/styleguide/cppguide.html#Preprocessor_Macros&quot;&gt;Google style guide&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;If instead all optional fields were implemented as &lt;code&gt;Maybe&lt;/code&gt;s, you'd get abstract-able, referentially transparent call-sites for free.&lt;/p&gt;
&lt;p&gt;To change tack, let's talk about another questionable decision. While you can define &lt;code&gt;oneof&lt;/code&gt; fields in protobuffers, their semantics are &lt;em&gt;not&lt;/em&gt; of coproduct types! Rookie mistake my dudes! What you get instead is an optional field for each case of the &lt;code&gt;oneof&lt;/code&gt;, and magic code in the setters that will just unset any other case if this one is set.&lt;/p&gt;
&lt;p&gt;At first glance, this seems like it should be semantically equivalent to having a proper union type. But instead it is an accursed, unutterable source of bugs! When this behavior teams up with the law-breaking implementation of &lt;code&gt;msg.foo = msg.foo;&lt;/code&gt;, it allows this benign-looking assignment to silently delete arbitrary amounts of data!&lt;/p&gt;
&lt;p&gt;What this means at the end of the day is that &lt;code&gt;oneof&lt;/code&gt; fields do not form law-abiding &lt;code&gt;Prism&lt;/code&gt;s, nor do messages form law-abiding &lt;code&gt;Lens&lt;/code&gt;es. Which is to say good luck trying to write bug-free, non-trivial manipulations of protobuffers. It is &lt;em&gt;literally impossible to write generic, bug-free, polymorphic code over protobuffers.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That's not the sort of thing anybody likes to hear, let alone those of us who have grown to love parametric polymorphism---which gives us the &lt;em&gt;exact opposite promise.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-lie-of-backwards--and-forwards-compatibility&quot;&gt;The Lie of Backwards- and Forwards-Compatibility&lt;/h2&gt;
&lt;p&gt;One of the frequently cited killer features of protobuffers is their &quot;hassle-free ability to write backwards- and forwards-compatible APIs.&quot; This is the claim that has been pulled over your eyes to blind you from the truth.&lt;/p&gt;
&lt;p&gt;What protobuffers are is &lt;em&gt;permissive.&lt;/em&gt; They manage to not shit the bed when receiving messages from the past or from the future because they make absolutely no promises about what your data will look like. Everything is optional! But if you need it anyway, protobuffers will happily cook up and serve you something that typechecks, regardless of whether or not it's meaningful.&lt;/p&gt;
&lt;p&gt;This means that protobuffers achieve their promised time-traveling compatibility guarantees by &lt;em&gt;silently doing the wrong thing by default.&lt;/em&gt; Of course, the cautious programmer can (and should) write code that performs sanity checks on received protobuffers. But if at every use-site you need to write defensive checks ensuring your data is sane, maybe that just means your deserialization step was too permissive. All you've managed to do is decentralize sanity-checking logic from a well-defined boundary and push the responsibility of doing it throughout your entire codebase.&lt;/p&gt;
&lt;p&gt;One possible argument here is that protobuffers will hold onto any information present in a message that they don't understand. In principle this means that it's nondestructive to route a message through an intermediary that doesn't understand this version of its schema. Surely that's a win, isn't it?&lt;/p&gt;
&lt;p&gt;Granted, on paper it's a cool feature. But I've never once seen an application that will actually preserve that property. With the one exception of routing software, nothing wants to inspect only some bits of a message and then forward it on unchanged. The vast majority of programs that operate on protobuffers will decode one, transform it into another, and send it somewhere else. Alas, these transformations are bespoke and coded by hand. And hand-coded transformations from one protobuffer to another don't preserve unknown fields between the two, because it's literally meaningless.&lt;/p&gt;
&lt;p&gt;This pervasive attitude towards protobuffers always being compatible rears its head in other ugly ways. Style guides for protobuffers actively advocate against DRY and suggest inlining definitions whenever possible. The reasoning behind this is that it allows you to evolve messages separately if these definitions diverge in the future. To emphasize that point, the suggestion is to fly in the face of 60 years' worth of good programming practice just in case &lt;em&gt;maybe&lt;/em&gt; one day in the future you need to change something.&lt;/p&gt;
&lt;p&gt;At the root of the problem is that Google conflates the meaning of data with its physical representation. When you're at Google scale, this sort of thing probably makes sense. After all, they have an internal tool that allows you to compare the finances behind programmer hours vs network utilization vs the cost to store &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; bytes vs all sorts of other things. Unlike most companies in the tech space, paying engineers is one of Google's smallest expenses. Financially it makes sense for them to waste programmers' time in order to shave off a few bytes.&lt;/p&gt;
&lt;p&gt;Outside of the top five tech companies, none of us is within five orders of magnitude of being Google scale. Your startup &lt;em&gt;cannot afford&lt;/em&gt; to waste engineer hours on shaving off bytes. But shaving off bytes and wasting programmers' time in the process is exactly what protobuffers are optimized for.&lt;/p&gt;
&lt;p&gt;Let's face it. You are not Google scale and you never will be. Stop cargo-culting technology just because &quot;Google uses it&quot; and therefore &quot;it's an industry best-practice.&quot;&lt;/p&gt;
&lt;h2 id=&quot;protobuffers-contaminate-codebases&quot;&gt;Protobuffers Contaminate Codebases&lt;/h2&gt;
&lt;p&gt;If it were possible to restrict protobuffer usage to network-boundaries I wouldn't be nearly as hard on it as a technology. Unfortunately, while there are a few solutions in principle, none of them is good enough to actually be used in real software.&lt;/p&gt;
&lt;p&gt;Protobuffers correspond to the data you want to send over the wire, which is often &lt;em&gt;related&lt;/em&gt; but not &lt;em&gt;identical&lt;/em&gt; to the actual data the application would like to work with. This puts us in the uncomfortable position of needing to choose between one of three bad alternatives:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Maintain a separate type that describes the data you actually want, and ensure that the two evolve simultaneously.&lt;/li&gt;
&lt;li&gt;Pack rich data into the wire format for application use.&lt;/li&gt;
&lt;li&gt;Derive rich information every time you need it from a terse wire format.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Option 1 is clearly the &quot;right&quot; solution, but its untenable with protobuffers. The language isn't powerful enough to encode types that can perform double-duty as both wire and application formats. Which means you'd need to write a completely separate datatype, evolve it synchronously with the protobuffer, and &lt;em&gt;explicitly write serialization code between the two.&lt;/em&gt; Seeing as most people seem to use protobuffers in order to not write serialization code, this is obviously never going to happen.&lt;/p&gt;
&lt;p&gt;Instead, code that uses protobuffers allows them to proliferate throughout the codebase. True story, my main project at Google was a compiler that took &quot;programs&quot; written in one variety of protobuffer, and spit out an equivalent &quot;program&quot; in another. Both the input and output formats were expressive enough that maintaining proper parallel C++ versions of them could never possibly work. As a result, my code was unable to take advantage of any of the rich techniques we've discovered for writing compilers, because protobuffer data (and resulting code-gen) is simply too rigid to do anything interesting.&lt;/p&gt;
&lt;p&gt;The result is that a thing that could have been 50 lines of &lt;a href=&quot;https://github.com/passy/awesome-recursion-schemes&quot;&gt;recursion schemes&lt;/a&gt; was instead 10,000 lines of ad-hoc buffer-shuffling. The code I wanted to write was literally impossible when constrained by having protobuffers in the mix.&lt;/p&gt;
&lt;p&gt;While this is an anecdote, it's not in isolation. By virtue of their rigid code-generation, manifestations of protobuffers in languages are never idiomatic, nor can they be made to be---short of rewriting the code-generator.&lt;/p&gt;
&lt;p&gt;But even then, you still have the problem of needing to embed a shitty type-system into the targeted language. Because most of protobuffers' features are ill-conceived, these unsavory properties leak into our codebases. It means we're forced to not only implement, but also use these bad ideas in any project which hopes to interface with protobuffers.&lt;/p&gt;
&lt;p&gt;While it's easy to implement inane things out of a solid foundation, going the other direction is challenging at best and the dark path of Eldrich madness at worst.&lt;/p&gt;
&lt;p&gt;In short, abandon all hope ye who introduce protobuffers into your projects.&lt;/p&gt;

&lt;p class=&quot;meta&quot;&gt;&lt;span class=&quot;prev&quot;&gt;&lt;a href=&quot;http://reasonablypolymorphic.com/blog/book-of-types&quot;&gt;‚Üê&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 20:24:51 +0000</pubDate>
<dc:creator>haskellandchill</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://reasonablypolymorphic.com/blog/protos-are-wrong/</dc:identifier>
</item>
<item>
<title>Uniqlo cut 90% of staff at one warehouse by replacing them with robots</title>
<link>https://qz.com/1419418/uniqlo-cut-90-of-staff-at-one-warehouse-by-replacing-them-with-robots/</link>
<guid isPermaLink="true" >https://qz.com/1419418/uniqlo-cut-90-of-staff-at-one-warehouse-by-replacing-them-with-robots/</guid>
<description>&lt;p class=&quot;_92842 quartz&quot;&gt;At a warehouse in Tokyo‚Äôs¬†Ariake district once mainly staffed by people, robots are now doing the work of inspecting and sorting the clothing housed there by Japanese retailer Uniqlo.&lt;/p&gt;
&lt;p class=&quot;_92842 quartz&quot;&gt;The company recently remodeled the existing warehouse with an automated system created in partnership with Daifuku, a provider of material handling systems. Now that the system is running, the company revealed &lt;a href=&quot;https://uk.reuters.com/article/uk-fast-retailing-strategy/uniqlo-owner-fast-retailing-to-invest-885-million-in-warehouse-automation-idUKKCN1MJ095&quot;&gt;during a walkthrough&lt;/a&gt; of the new facility, Uniqlo has been able to cut staff at the warehouse by 90%. The warehouse can now also operate 24 hours a day.&lt;/p&gt;
&lt;p class=&quot;_92842 quartz&quot;&gt;The Japan News &lt;a href=&quot;http://the-japan-news.com/news/article/0004885809&quot;&gt;described how the automation works&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;_68f6d quartz&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;The robotic system is designed to transfer products delivered to the warehouse by truck, read electronic tags attached to the products and confirm their stock numbers and other information.&lt;/p&gt;
&lt;p&gt;When shipping, the system wraps products placed on a conveyor belt in cardboard and attaches labels to them. Only a small portion of work at the warehouse needs to be done by employees, the company said.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;_92842 quartz&quot;&gt;The Tokyo warehouse is just a first step in a larger plan for Uniqlo‚Äôs parent company, Fast Retailing. It has¬†&lt;a href=&quot;https://www.fastretailing.com/eng/ir/news/1810091300.html&quot;&gt;announced a strategic partnership&lt;/a&gt; with Daifuku with the goal of automating all Fast Retailing‚Äôs brand warehouses in Japan and overseas. Uniqlo plans to invest¬†100 billion yen (about $887 million) in the project over an unspecified timeframe. (The Japan News reported that it costs about 1 billion to 10 billion yen to automate an existing warehouse.)&lt;/p&gt;
&lt;p class=&quot;_92842 quartz&quot;&gt;Uniqlo believes the system will help it minimize storage costs and, importantly, deliver products faster around the world. The company has set a target of 3 trillion yen (about $26.6 billion) in annual revenue. Last year its revenue was about &lt;a href=&quot;https://www.fastretailing.com/eng/ir/library/pdf/ar2017_en.pdf&quot;&gt;1.86 trillion yen&lt;/a&gt;¬†(pdf).&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 19:47:28 +0000</pubDate>
<dc:creator>prostoalex</dc:creator>
<og:description>Its the first step in a much larger plan to automate all Uniqlo's warehouses in Japan and overseas.</og:description>
<og:image>https://cms.qz.com/wp-content/uploads/2018/10/RTSXDVB-e1539189449881.jpg?quality=75&amp;strip=all&amp;w=1400</og:image>
<og:title>Uniqlo replaced 90% of staff at its newly automated warehouse with robots</og:title>
<og:type>article</og:type>
<og:url>https://qz.com/1419418/uniqlo-cut-90-of-staff-at-one-warehouse-by-replacing-them-with-robots/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://qz.com/1419418/uniqlo-cut-90-of-staff-at-one-warehouse-by-replacing-them-with-robots/</dc:identifier>
</item>
<item>
<title>TSMC: First 7nm EUV Chips Taped Out, 5nm Risk Production in Q2 2019</title>
<link>https://www.anandtech.com/show/13445/tsmc-first-7nm-euv-chips-taped-out-5nm-risk-in-q2</link>
<guid isPermaLink="true" >https://www.anandtech.com/show/13445/tsmc-first-7nm-euv-chips-taped-out-5nm-risk-in-q2</guid>
<description>&lt;p&gt;Last week, TSMC made two important announcements concerning its progress with extreme ultraviolet lithography (EUVL). First up, the company has successfully taped out its first customer chip using its second-generation 7 nm process technology, which incorporates limited EUVL usage. Secondly, TSMC disclosed plans to start risk production of 5 nm devices in April.&lt;/p&gt;
&lt;h3&gt;First 7 nm EUV Chip Tapes Out at TSMC&lt;/h3&gt;
&lt;p&gt;TSMC initiated high-volume manufacturing of chips using its first generation 7 nm fabrication process (CLN7FF, N7) in April. N7 is based around deep ultraviolet (DUV) lithography with ArF excimer lasers. By contrast, TSMC‚Äôs second-generation 7 nm manufacturing technology (CLN7FF+, N7+) will use extreme ultraviolet lithography for four non-critical layers, mostly in a bid to speed up production and learn how to use ASML‚Äôs Twinscan NXE step-and-scan systems for HVM. Factual information on the improvements from N7 to N7+ are rather limited: the new tech will offer a 20% higher transistor density (because of tighter metal pitch) and ~8% lower power consumption at the same complexity and frequency (between 6% and 12% to be more precise).&lt;/p&gt;
&lt;p&gt;While the advantages of N7+ over its predecessors are not significant (e.g., TSMC has never mentioned performance increases that the new tech is expected to bring), it will still almost certainly be embraced wholeheartedly by developers of mobile SoCs who need to release new chips every year. That said, it is not surprising that TSMC has already taped out the first chip using its N7+ technology. Furthermore, the company is prepping a specialized version of the process aimed at the automotive industry, which indicates that N7+ is going to be a ‚Äúlong‚Äù node.&lt;/p&gt;
&lt;p&gt;TSMC is not disclosing the name of the customer whose N7+ SoC it has taped out, but considering the foundry‚Äôs alpha customers for new process technologies in the recent years, the leading suspects are obvious.&lt;/p&gt;
&lt;table align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;1&quot; width=&quot;680&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;tgrey&quot; readability=&quot;4&quot;&gt;&lt;td align=&quot;center&quot; colspan=&quot;9&quot;&gt;Advertised PPA Improvements of New Process Technologies&lt;br/&gt;&lt;small&gt;Data announced by companies during conference calls, press briefings and in press releases&lt;/small&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;tlblue&quot;&gt;&lt;td rowspan=&quot;2&quot; width=&quot;186&quot;&gt;¬†&lt;/td&gt;
&lt;td align=&quot;center&quot; colspan=&quot;6&quot; rowspan=&quot;1&quot; valign=&quot;middle&quot; width=&quot;137&quot;&gt;TSMC&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;tlblue&quot;&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;136&quot;&gt;16FF+&lt;br/&gt;vs&lt;br/&gt;20SOC&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;136&quot;&gt;10FF&lt;br/&gt;vs&lt;br/&gt;16FF+&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;136&quot;&gt;7FF&lt;br/&gt;vs&lt;br/&gt;16FF+&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;136&quot;&gt;7FF&lt;br/&gt;vs&lt;br/&gt;10FF&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;136&quot;&gt;7FF+&lt;br/&gt;vs&lt;br/&gt;7FF&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;136&quot;&gt;5FF&lt;br/&gt;vs&lt;br/&gt;7FF&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Power&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;60%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;40%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;60%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&amp;lt;40%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;10%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;20%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Performance&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;40%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;20%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;30%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;?&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;same (?)&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;15%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Area Reduction&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;none&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&amp;gt;50%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;70%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&amp;gt;37%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;~17%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;45%&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;5 nm on Track&lt;/h3&gt;
&lt;p&gt;After N7+ comes TSMC‚Äôs first-generation 5 nm (CLN5FF, N5) process, which will use EUV on up to 14 layers. This will enable tangible improvements in terms of density, but will require TSMC to extensively use EUV equipment. When compared to TSMC‚Äôs N7, N5 technology will enable TSMC's customers to shrink area of their designs by ~45% (i.e. transistor density of N5 is ~1.8x higher than that of N7), increase frequency by 15% (at the same complexity and power) or reduce power consumption by 20% power reduction (at the same frequency and complexity).&lt;/p&gt;
&lt;p&gt;TSMC will be ready to start risk production of chips using its N5 tech in April, 2019. Keeping in mind that it typically takes foundries and their customers about a year to get from risk production to HVM, it seems like TSMC is on-track for mass production of 5 nm chips in Q2 2020, right in time to address smartphones due in the second half of 2020.&lt;/p&gt;
&lt;p&gt;EDA tools for the N5 node will be ready in November, so chip designs may be well underway now. But while many foundation IP blocks for N5 are ready today, there are important missing pieces, such as PCIe Gen 4 and USB 3.1 PHYs, which may not be ready until June. For some of TSMC's clients the lack of these pieces is not a problem, but many will have to wait.&lt;/p&gt;
&lt;p&gt;One of the factors that prevents smaller companies from designing FinFET chips is development cost. Some estimates put the average cost to develop an SoC at around $150 million in labor and IP licenses. With N5 generation, these expenditures will rise to $200 ‚Äì $250 million, according to EETAsia, which will limit the number of parties interested in using the tech.&lt;/p&gt;
&lt;p&gt;Related Reading:&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://www.eetasia.com/news/article/18100502-tsmc-to-start-5nm-production-in-april&quot;&gt;EETAsia&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 18:59:15 +0000</pubDate>
<dc:creator>dmmalam</dc:creator>
<og:title>TSMC: First 7nm EUV Chips Taped Out, 5nm Risk Production in Q2 2019</og:title>
<og:type>article</og:type>
<og:url>https://www.anandtech.com/show/13445/tsmc-first-7nm-euv-chips-taped-out-5nm-risk-in-q2</og:url>
<og:image>https://images.anandtech.com/doci/13445/tsmc_semiconductor_chip_inspection_678x452.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.anandtech.com/show/13445/tsmc-first-7nm-euv-chips-taped-out-5nm-risk-in-q2</dc:identifier>
</item>
<item>
<title>Dropbox traffic infrastructure: Edge network</title>
<link>https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/</link>
<guid isPermaLink="true" >https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/</guid>
<description>&lt;p&gt;&lt;img data-attachment-id=&quot;5263&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/01-screenshot2018-09-3002-11-17copy/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png&quot; data-orig-size=&quot;2540,1208&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;01-Screenshot+2018-09-30+02.11.17+copy&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309&quot; class=&quot;alignnone size-medium wp-image-5263&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;309&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5263&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/01-screenshot2018-09-3002-11-17copy/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png&quot; data-orig-size=&quot;2540,1208&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;01-Screenshot+2018-09-30+02.11.17+copy&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309&quot; class=&quot;alignnone size-medium wp-image-5263&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;309&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=650&amp;amp;h=309 650w, https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=1300&amp;amp;h=618 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=600&amp;amp;h=285 600w, https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=768&amp;amp;h=365 768w, https://dropboxtechblog.files.wordpress.com/2018/10/01-screenshot2018-09-3002-11-17copy.png?w=1024&amp;amp;h=487 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;In this post we will describe the Edge network part of Dropbox traffic infrastructure. This is an extended transcript of our &lt;a href=&quot;https://www.nginx.com/nginxconf/2018/agenda/#day-2-oleg-guba&quot;&gt;NginxConf 2018&lt;/a&gt; presentation. Around the same time last year we described low-level aspects of our infra in the &lt;a href=&quot;https://blogs.dropbox.com/tech/2017/09/optimizing-web-servers-for-high-throughput-and-low-latency/&quot;&gt;Optimizing web servers for high throughput and low latency&lt;/a&gt; post. This time we‚Äôll cover higher-level things like our points of presence around the world, GSLB, RUM DNS, L4 loadbalancers, nginx setup and its dynamic configuration, and a bit of gRPC proxying.&lt;/p&gt;
&lt;h2&gt;Dropbox scale&lt;/h2&gt;
&lt;p&gt;Dropbox has more than half a billion registered users who trust us with &lt;a href=&quot;https://blogs.dropbox.com/tech/2016/05/inside-the-magic-pocket/&quot;&gt;exabytes of data&lt;/a&gt; and petabytes of corresponding metadata. For the Traffic team this means millions of HTTP requests and terabits of traffic. To support all of that we‚Äôve built an extensive network of points of presence (PoPs) around the world that we call Edge.&lt;/p&gt;
&lt;h2&gt;Why do we need Edge?&lt;/h2&gt;
&lt;p&gt;Many of the readers know the basic idea of CDNs: terminating TCP and TLS connections closer to the user leads to improved user experience because of greatly reduced latencies. Here is a quick reminder: a comparison of an HTTP request latency made directly to a data center and the same request made through a PoP:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5264&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/02-03-screenshot2018-10-0422-29-22/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png&quot; data-orig-size=&quot;4832,1200&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;02-03-Screenshot+2018-10-04+22.29.22&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161&quot; class=&quot;alignnone size-medium wp-image-5264&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;161&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5264&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/02-03-screenshot2018-10-0422-29-22/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png&quot; data-orig-size=&quot;4832,1200&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;02-03-Screenshot+2018-10-04+22.29.22&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161&quot; class=&quot;alignnone size-medium wp-image-5264&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;161&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=650&amp;amp;h=161 650w, https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=1297&amp;amp;h=322 1297w, https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=600&amp;amp;h=149 600w, https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=768&amp;amp;h=191 768w, https://dropboxtechblog.files.wordpress.com/2018/10/02-03-screenshot2018-10-0422-29-22.png?w=1024&amp;amp;h=254 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;Numbers are given based on:&lt;br/&gt;20ms PoP‚Üîuser latency, 150ms PoP‚ÜîDC latency, 100ms server execution time&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you can see, by simply putting the PoP close to the user one can improve latency by more than factor of two.&lt;/p&gt;
&lt;p&gt;But that is not all. Our users benefit greatly from faster file uploads and downloads. Let‚Äôs see how latency affects TCP congestion window (CWND) growth during file uploads:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5265&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/04-screenshot2018-10-0403-47-45/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png&quot; data-orig-size=&quot;1758,888&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;04-Screenshot+2018-10-04+03.47.45&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328&quot; class=&quot;alignnone size-medium wp-image-5265&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;328&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5265&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/04-screenshot2018-10-0403-47-45/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png&quot; data-orig-size=&quot;1758,888&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;04-Screenshot+2018-10-04+03.47.45&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328&quot; class=&quot;alignnone size-medium wp-image-5265&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;328&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=650&amp;amp;h=328 650w, https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=1300&amp;amp;h=656 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=600&amp;amp;h=303 600w, https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=768&amp;amp;h=388 768w, https://dropboxtechblog.files.wordpress.com/2018/10/04-screenshot2018-10-0403-47-45.png?w=1024&amp;amp;h=517 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Here we can see a low and high latency connection comparison that represents a connection with and without a PoP respectively:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The client with lower latency is progressing through slow start faster, because it is an RTT-bound process&lt;/li&gt;
&lt;li&gt;This client also settles on the higher threshold for congestion avoidance, because of the lower level of packet loss. This happens because that packets need to spend less time on the public, and possibly congested, internet links‚Äîonce they hit the PoP we take them into our own backbone network&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;Aside from all latency-related performance gains, building our own Edge network gives us (traffic engineers) a lot of freedom: for example we can easily experiment with new low- and high-level protocols, external and internal loadbalancing algorithms, and more closely integrate with the rest of the infrastructure.&lt;br/&gt;We can do things like research BBR congestion control effects on file download speed, latency, and packet loss.&lt;/p&gt;
&lt;h2&gt;Picking PoP locations&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;As of today, Dropbox has 20 PoPs around the world:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5266&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/05-screenshot2018-10-09at1-54-03pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png&quot; data-orig-size=&quot;2518,1214&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;05-Screen+Shot+2018-10-09+at+1.54.03+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313&quot; class=&quot;alignnone size-medium wp-image-5266&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;313&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5266&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/05-screenshot2018-10-09at1-54-03pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png&quot; data-orig-size=&quot;2518,1214&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;05-Screen+Shot+2018-10-09+at+1.54.03+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313&quot; class=&quot;alignnone size-medium wp-image-5266&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;313&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=650&amp;amp;h=313 650w, https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=1298&amp;amp;h=626 1298w, https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=600&amp;amp;h=289 600w, https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=768&amp;amp;h=370 768w, https://dropboxtechblog.files.wordpress.com/2018/10/05-screenshot2018-10-09at1-54-03pm.png?w=1024&amp;amp;h=494 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;We‚Äôve just announced our PoP in Toronto, and will get two more in Scandinavia by the end of the year.&lt;/p&gt;
&lt;p&gt;In 2019, we are planning to look at increasing our Edge footprint by researching the viability of PoPs in LATAM, Middle East, and APAC.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5267&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/06-screenshot2018-10-09at1-54-15pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png&quot; data-orig-size=&quot;2496,1212&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;06-Screen+Shot+2018-10-09+at+1.54.15+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316&quot; class=&quot;alignnone size-medium wp-image-5267&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;316&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5267&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/06-screenshot2018-10-09at1-54-15pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png&quot; data-orig-size=&quot;2496,1212&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;06-Screen+Shot+2018-10-09+at+1.54.15+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316&quot; class=&quot;alignnone size-medium wp-image-5267&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;316&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=650&amp;amp;h=316 650w, https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=1300&amp;amp;h=632 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=600&amp;amp;h=291 600w, https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=768&amp;amp;h=373 768w, https://dropboxtechblog.files.wordpress.com/2018/10/06-screenshot2018-10-09at1-54-15pm.png?w=1024&amp;amp;h=497 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;The process of PoP selection, which was easy at first, now becomes more and more complicated: we need to consider backbone capacity, peering connectivity, &lt;a href=&quot;https://www.submarinecablemap.com&quot;&gt;submarine cables&lt;/a&gt;, but most importantly the location with respect to all the other PoPs we have.&lt;/p&gt;
&lt;p&gt;The current PoP selection procedure is human guided but algorithm-assisted. Even with a small number of PoPs without assistive software it may be challenging to choose between, for example, a PoP in Brazil and a PoP in Australia. The problem persists as the number of PoPs grows: e.g. what location will benefit Dropbox users better, Vienna or Warsaw?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We try to alternate new PoP placement between selecting the most advantageous PoP for the existing and potential Dropbox users.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A tiny script helps us brute-force the problem by:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Splitting the Earth into 7th level &lt;a href=&quot;http://s2geometry.io/&quot;&gt;s2 regions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Placing all the existing PoPs&lt;/li&gt;
&lt;li&gt;Computing the distance to the nearest PoP for all the regions weighted by ‚Äúpopulation‚Äù&lt;/li&gt;
&lt;li&gt;Doing exhaustive search to find the ‚Äúbest‚Äù location for the new PoP&lt;/li&gt;
&lt;li&gt;Adding it to the map&lt;/li&gt;
&lt;li&gt;Looping back to step 3, etc.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;By ‚Äúpopulation‚Äù one can use pretty much any metric we want to optimize, for example total number of people in the area, or number of existing/potential users. As for the loss function to determine the score of each placement one can use something standard like L1 or L2 loss. In our case we try to overcompensate for the effects of latency on the TCP throughput.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of you may see that the problem here that can be solved by more sophisticated methods like Gradient Descent or Bayesian Optimization. This is indeed true, but because our problem space is so small (there are &lt;a href=&quot;http://s2geometry.io/resources/s2cell_statistics&quot;&gt;less than 100K 7th level s2 cells&lt;/a&gt;) we can just brute-force through it and get a definitively optimal result instead of the one that can get stuck on a local optimum.&lt;/p&gt;
&lt;h2&gt;GSLB&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let‚Äôs start with the most important part of the Edge‚ÄîGSLB. GSLB is responsible for loadbalancing users across PoPs. That usually means sending each user to the closest PoP, unless it is over capacity or under maintenance.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GSLB is called the ‚Äúmost important part‚Äù here because if it misroutes users to the suboptimal PoPs frequently, then it makes the Edge network useless, and potentially even harms performance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The following is a discussion of commonly used GSLB techniques, their pros and cons, and how we use them at Dropbox.&lt;/p&gt;
&lt;h3&gt;BGP anycast&lt;/h3&gt;
&lt;p&gt;Anycast is the easiest loadbalancing method that relies on the core internet routing protocol, BGP. To start using anycast it is sufficient to just start advertising the same subnet from all the PoPs and internet will deliver packet to the ‚Äúoptimal‚Äù one automagically.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5268&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/07-screenshot2018-10-05at7-47-50pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png&quot; data-orig-size=&quot;1802,836&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;07-Screen+Shot+2018-10-05+at+7.47.50+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302&quot; class=&quot;alignnone size-medium wp-image-5268&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;302&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5268&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/07-screenshot2018-10-05at7-47-50pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png&quot; data-orig-size=&quot;1802,836&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;07-Screen+Shot+2018-10-05+at+7.47.50+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302&quot; class=&quot;alignnone size-medium wp-image-5268&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;302&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=650&amp;amp;h=302 650w, https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=1300&amp;amp;h=604 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=600&amp;amp;h=278 600w, https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=768&amp;amp;h=356 768w, https://dropboxtechblog.files.wordpress.com/2018/10/07-screenshot2018-10-05at7-47-50pm.png?w=1024&amp;amp;h=475 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Even though we get automatic failover and simplicity of the setup, anycast has many drawbacks, so let‚Äôs go over them one by one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anycast performance&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5269&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/08-screenshot2018-10-05at4-30-19pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png&quot; data-orig-size=&quot;2694,624&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;08-Screen+Shot+2018-10-05+at+4.30.19+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151&quot; class=&quot;alignnone size-medium wp-image-5269&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;151&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5269&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/08-screenshot2018-10-05at4-30-19pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png&quot; data-orig-size=&quot;2694,624&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;08-Screen+Shot+2018-10-05+at+4.30.19+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151&quot; class=&quot;alignnone size-medium wp-image-5269&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;151&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=650&amp;amp;h=151 650w, https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=1300&amp;amp;h=302 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=600&amp;amp;h=139 600w, https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=768&amp;amp;h=178 768w, https://dropboxtechblog.files.wordpress.com/2018/10/08-screenshot2018-10-05at4-30-19pm.png?w=1024&amp;amp;h=237 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Above, we mentioned that BGP selects the ‚Äúoptimal‚Äù route and for the most part that is true. The problem is that BGP does not know anything about link latency, throughput, packet loss, and so on. Generally in the presence of multiple routes to the destination, it just selects one with the least number of hops.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5270&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/09-screenshot2018-10-0414-29-50/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png&quot; data-orig-size=&quot;2250,1072&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;09-Screenshot+2018-10-04+14.29.50&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310&quot; class=&quot;alignnone size-medium wp-image-5270&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;310&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5270&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/09-screenshot2018-10-0414-29-50/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png&quot; data-orig-size=&quot;2250,1072&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;09-Screenshot+2018-10-04+14.29.50&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310&quot; class=&quot;alignnone size-medium wp-image-5270&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;310&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=650&amp;amp;h=310 650w, https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=1300&amp;amp;h=620 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=600&amp;amp;h=286 600w, https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=768&amp;amp;h=366 768w, https://dropboxtechblog.files.wordpress.com/2018/10/09-screenshot2018-10-0414-29-50.png?w=1024&amp;amp;h=488 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Anycast-based loadbalancing is mostly optimal but it behaves poorly on high percentiles.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is true for a small and medium number of PoPs. But there is a conjecture that ‚Äúcritical‚Äù misrouting probability (e.g. probability of routing user to a different continent) in an anycasted network drops sharply with number of PoPs. Therefore it is possible that with increasing number of PoPs, anycast may eventually start outperforming GeoDNS. We‚Äôll continue looking at how our anycast performance scales with the number of PoPs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Traffic steering&lt;/strong&gt;&lt;br/&gt;With anycast, we have very limited control over traffic. It is hard to explicitly move traffic from one PoP to another. We can do some traffic steering using MED attributes, prepending AS_PATHs to our announces, and by explicitly communicating with traffic providers, but this is not scalable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also note that in the &lt;a href=&quot;https://books.google.com/books?id=Q0t3BQAAQBAJ&amp;amp;pg=PA98&amp;amp;lpg=PA98&amp;amp;dq=N+WLLA+OMNI&amp;amp;source=bl&amp;amp;ots=-oj5dCN051&amp;amp;sig=BpDUcuuNGLUPjNwJk0nZP0TOpg0&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=2ahUKEwiByKDaiufdAhUTHTQIHV6sD9s4ChDoATAFegQIAxAB#v=onepage&amp;amp;q=N%20WLLA%20OMNI&amp;amp;f=false&quot;&gt;N WLLA OMNI&lt;/a&gt; mnemonic &lt;code&gt;AS_PATH&lt;/code&gt; is somewhere in the middle. This effectively means that it can be easily overridden by an administrator and in practice this makes BGP anycast pick the ‚Äúcheapest‚Äù route, not the ‚Äúnearest‚Äù or the ‚Äúfastest.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another property of anycast is that graceful drain of the PoP is impossible‚Äîsince BGP balances packets and not connections. After the routing table change, all inflight TCP sessions will immediately be routed to the next best PoP and users will get an RST from there.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;br/&gt;Generally reasoning about traffic routing with anycast becomes very non-trivial, since it involves the state of internet routing at a given time. Troubleshooting performance issues with anycast is hard and usually involves a lot of traceroutes, looking glasses, and back and forth communication with providers along the way.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5271&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/10-screenshot2018-10-05at4-07-34pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png&quot; data-orig-size=&quot;2694,704&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;10-Screen+Shot+2018-10-05+at+4.07.34+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170&quot; class=&quot;alignnone size-medium wp-image-5271&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;170&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5271&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/10-screenshot2018-10-05at4-07-34pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png&quot; data-orig-size=&quot;2694,704&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;10-Screen+Shot+2018-10-05+at+4.07.34+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170&quot; class=&quot;alignnone size-medium wp-image-5271&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;170&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=650&amp;amp;h=170 650w, https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=1300&amp;amp;h=340 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=600&amp;amp;h=157 600w, https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=768&amp;amp;h=201 768w, https://dropboxtechblog.files.wordpress.com/2018/10/10-screenshot2018-10-05at4-07-34pm.png?w=1024&amp;amp;h=268 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Note that, as in the case of a PoP drain, any connectivity change in the internet has a possibility of breaking users‚Äô connections to anycasted IP addresses. Troubleshooting intermittent connection issues due to internet routing changes or faulty/misconfigured hardware can be challenging.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here is an example of an epic anycast troubleshooting by Fastly NOC from NANOG mailing list: &lt;a href=&quot;https://mailman.nanog.org/pipermail/nanog/2018-September/096871.html&quot;&gt;Service provider story about tracking down TCP RSTs&lt;/a&gt;.&lt;br/&gt;TL;DR SYNs passing through the router had different TTL and at the same time this IP field was used for the ECMP flow hashing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;br/&gt;Here are couple of tricks you can use to make troubleshooting a bit easier (especially in case of anycast).&lt;/p&gt;
&lt;p&gt;Of course having a random request ID associated with every request that goes through the system and can be traced in the logs is a must. In case of the Edge, it is also helpful to echo back a header with the name of the PoP you‚Äôre connected to (or embed this into the unique request ID).&lt;/p&gt;
&lt;p&gt;Another useful thing that is commonly used is to create ‚Äúdebug‚Äù sites that can pre-collect all the troubleshooting data for the user so that they can attach it to the support ticket e.g.: &lt;a href=&quot;https://github-debug.com/&quot;&gt;github-debug.com&lt;/a&gt;, &lt;a href=&quot;https://www.fastly-debug.com/&quot;&gt;fastly-debug.com&lt;/a&gt;, and of course &lt;a href=&quot;https://dropbox-debug.com/&quot;&gt;dropbox-debug.com&lt;/a&gt;, which was heavily inspired by them.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5272&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/11-screenshot2018-10-0200-40-17/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png&quot; data-orig-size=&quot;2285,1363&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;11-Screenshot+2018-10-02+00.40.17&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388&quot; class=&quot;alignnone size-medium wp-image-5272&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;388&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5272&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/11-screenshot2018-10-0200-40-17/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png&quot; data-orig-size=&quot;2285,1363&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;11-Screenshot+2018-10-02+00.40.17&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388&quot; class=&quot;alignnone size-medium wp-image-5272&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;388&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=650&amp;amp;h=388 650w, https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=1300&amp;amp;h=776 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=600&amp;amp;h=358 600w, https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=768&amp;amp;h=458 768w, https://dropboxtechblog.files.wordpress.com/2018/10/11-screenshot2018-10-0200-40-17.png?w=1024&amp;amp;h=611 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;Traffic team projects like &lt;a href=&quot;https://dropbox-debug.com/&quot;&gt;dropbox-debug&lt;/a&gt;, &lt;a href=&quot;https://blogs.dropbox.com/tech/2017/04/deploying-brotli-for-static-content/&quot;&gt;Brotli static precompression&lt;/a&gt;, BBR evaluation and rollout, RUM DNS, and many others came out of &lt;a href=&quot;https://www.youtube.com/watch?v=BVuQJdFA8rY&quot;&gt;Hack Week&lt;/a&gt;: a company-wide event that inspires us to try something new and exciting!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Anycast at Dropbox&lt;/strong&gt;&lt;br/&gt;With all that said, we still use anycast for our APEX domains like dropbox.com (without www) and as a fallback in case of major DDoS attacks.&lt;/p&gt;
&lt;h3&gt;GeoDNS&lt;/h3&gt;
&lt;p&gt;Let‚Äôs talk about another common solution for implementing GSLB: GeoDNS. In this approach each PoP has its own unique unicast IP address space and DNS is responsible for handing off different IP addresses to different users based on their geographical location.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5273&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/12-screenshot2018-10-05at7-36-37pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png&quot; data-orig-size=&quot;1822,858&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;12-Screen+Shot+2018-10-05+at+7.36.37+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306&quot; class=&quot;alignnone size-medium wp-image-5273&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;306&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5273&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/12-screenshot2018-10-05at7-36-37pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png&quot; data-orig-size=&quot;1822,858&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;12-Screen+Shot+2018-10-05+at+7.36.37+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306&quot; class=&quot;alignnone size-medium wp-image-5273&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;306&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=650&amp;amp;h=306 650w, https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=1300&amp;amp;h=612 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=600&amp;amp;h=283 600w, https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=768&amp;amp;h=362 768w, https://dropboxtechblog.files.wordpress.com/2018/10/12-screenshot2018-10-05at7-36-37pm.png?w=1024&amp;amp;h=482 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;This gives us control over traffic steering and allows graceful drain. It is worth mentioning that any kind of reasoning about unicast-based setup is much easier, therefore troubleshooting becomes simpler.&lt;/p&gt;
&lt;p&gt;As you can see, there are a lot of variables involved: we rely on a DNS provider guessing user IP by their DNS resolver (or trust EDNS CS data), then guessing user location by their IP address, then approximate physical proximity to latency.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that different DNS providers will likely end up with different decisions, based on their algorithms and quality of their GeoIP database, therefore monitoring performance of multi-provider DNS setup is much harder.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aside from that, DNS also has a major problem with stale data. Long story short: DNS TTL is a lie. Even though we have TTL of one minute for www.dropbox.com, it still takes 15 minutes to drain 90% of traffic, and it may take a full hour to drain 95% of traffic:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5274&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/13-screenshot2018-10-05at7-33-34pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png&quot; data-orig-size=&quot;1798,856&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;13-Screen+Shot+2018-10-05+at+7.33.34+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309&quot; class=&quot;alignnone size-medium wp-image-5274&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;309&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5274&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/13-screenshot2018-10-05at7-33-34pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png&quot; data-orig-size=&quot;1798,856&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;13-Screen+Shot+2018-10-05+at+7.33.34+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309&quot; class=&quot;alignnone size-medium wp-image-5274&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;309&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=650&amp;amp;h=309 650w, https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=1298&amp;amp;h=618 1298w, https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=600&amp;amp;h=286 600w, https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=768&amp;amp;h=366 768w, https://dropboxtechblog.files.wordpress.com/2018/10/13-screenshot2018-10-05at7-33-34pm.png?w=1024&amp;amp;h=488 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;Here we also need to mention the myriad embedded devices using Dropbox API that range from video cameras to smart fridges which have a tendency of resolving DNS addresses only during power-on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;GeoDNS at Dropbox&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5275&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/14-screenshot2018-09-1417-18-19copy/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png&quot; data-orig-size=&quot;1740,894&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;14-Screenshot+2018-09-14+17.18.19+copy&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334&quot; class=&quot;alignnone size-medium wp-image-5275&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;334&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5275&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/14-screenshot2018-09-1417-18-19copy/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png&quot; data-orig-size=&quot;1740,894&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;14-Screenshot+2018-09-14+17.18.19+copy&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334&quot; class=&quot;alignnone size-medium wp-image-5275&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;334&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=650&amp;amp;h=334 650w, https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=1300&amp;amp;h=668 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=600&amp;amp;h=308 600w, https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=768&amp;amp;h=395 768w, https://dropboxtechblog.files.wordpress.com/2018/10/14-screenshot2018-09-1417-18-19copy.png?w=1024&amp;amp;h=526 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Our DNS setup evolved quite a bit over last few years: we started with a simple continent‚ÜíPoP mappings, then switched to country‚ÜíPoP with a per-state mapping data for serving network traffic to large countries like the US, Canada, etc. At the moment, we are juggling relatively complex LatLong-based routing with AS-based overrides to work around quirks in internet connectivity and peering.&lt;/p&gt;
&lt;h3&gt;Hybrid unicast/anycast GSLB&lt;/h3&gt;
&lt;p&gt;Let‚Äôs very briefly cover one of the composite approaches to GSLB: hybrid unicast/anycast setup. By combining unicast and anycast announces along with GeoDNS mapping, one can get all the benefits of unicast along with an ability to quickly drain PoPs in case of an outage.&lt;/p&gt;
&lt;p&gt;One can enable this hybrid GSLB by announcing both PoP‚Äôs unicast subnet (e.g. /24) and one of its supernets (e.g. /19) from all of the PoPs (including itself).&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5276&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/15-screenshot2018-10-05at7-31-44pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png&quot; data-orig-size=&quot;2380,1184&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;15-Screen+Shot+2018-10-05+at+7.31.44+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323&quot; class=&quot;alignnone size-medium wp-image-5276&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;323&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5276&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/15-screenshot2018-10-05at7-31-44pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png&quot; data-orig-size=&quot;2380,1184&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;15-Screen+Shot+2018-10-05+at+7.31.44+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323&quot; class=&quot;alignnone size-medium wp-image-5276&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;323&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=650&amp;amp;h=323 650w, https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=1300&amp;amp;h=646 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=600&amp;amp;h=298 600w, https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=768&amp;amp;h=382 768w, https://dropboxtechblog.files.wordpress.com/2018/10/15-screenshot2018-10-05at7-31-44pm.png?w=1024&amp;amp;h=509 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;This implies that every PoP should be set up to handle traffic destined to any PoP: i.e. have all the VIPs from all the PoPs in the BGP daemons/L4 balancers/L7 proxies configs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Such an approach gives us the ability to quickly switch between unicast and anycast addresses and therefore immediate fallback without waiting for DNS TTL to expire. This also allows graceful PoP draining and all the other benefits of DNS traffic steering. All of that comes at a relatively small operational cost of a more complicated setup and may cause scalability problems once you reach the high thousands of VIPs. On the bright side, all PoP configs now become more uniform.&lt;/p&gt;
&lt;h3&gt;Real User Metrics&lt;/h3&gt;
&lt;p&gt;All the GSLB methods discussed up until now have one critical problem: none of them uses actual user-perceived performance as a signal, but instead rely on some approximations: BGP uses number of hops as a signal, while GeoIP uses physical proximity. We want to fix that by using Real User Metrics (RUM) collection pipeline based on performance data from our desktop clients.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Companies that do not have an app usually do latency measurements with the JS-based prober on their website.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Years ago we invested in an availability measurement framework in our Desktop Clients to help us estimate the user-perceived reliability of our Edge network. The system is pretty simple: once in a while a sample of clients run availability measurements against all of our PoPs and report back the results. We extended this system to also log latency information, which gave us sufficient data to start building our own map of the internet.&lt;/p&gt;
&lt;p&gt;We also built a separate resolver_ip‚Üíclient_ip submap by joining DNS and HTTP server logs for http requests to random subdomain of a wildcard DNS record. On top of which we apply a tiny bit of post-processing for EDNS ClientSubnet-capable resolvers.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5277&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/16-screenshot2018-10-05at7-40-22pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png&quot; data-orig-size=&quot;1816,720&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;16-Screen+Shot+2018-10-05+at+7.40.22+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258&quot; class=&quot;alignnone size-medium wp-image-5277&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;258&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5277&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/16-screenshot2018-10-05at7-40-22pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png&quot; data-orig-size=&quot;1816,720&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;16-Screen+Shot+2018-10-05+at+7.40.22+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258&quot; class=&quot;alignnone size-medium wp-image-5277&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;258&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=650&amp;amp;h=258 650w, https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=1300&amp;amp;h=516 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=600&amp;amp;h=238 600w, https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=768&amp;amp;h=304 768w, https://dropboxtechblog.files.wordpress.com/2018/10/16-screenshot2018-10-05at7-40-22pm.png?w=1024&amp;amp;h=406 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;We combine the aggregated latencies, resolver_ip‚Üíclient_ip map, BGP fullview, peering information, and capacity data from our monitoring system to produce the final map of client_subnet‚ÜíPoP.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are also considering adding a signal from the web server logs, since we already have &lt;a href=&quot;https://linuxgazette.net/136/pfeiffer.html&quot;&gt;TCP_INFO&lt;/a&gt; data, including &lt;a href=&quot;https://trac.nginx.org/nginx/ticket/1036&quot;&gt;number of retransmits&lt;/a&gt;, cwnd/rwnd, and rtt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After which we pack this map into a radix tree and upload it to a DNS server, after which it is compared to both anycast and GeoIP solutions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Specifics of map generation are up in the air right now: we‚Äôve tried (and continue trying out) different approaches: from simple HiveQL query that does per-/24 aggregation to ML-based solutions like Random Forests, stacks of &lt;a href=&quot;https://xgboost.readthedocs.io/en/latest/get_started.html&quot;&gt;XGBoosts&lt;/a&gt;, and DNNs. Sophisticated solutions are giving slightly better, but ultimately comparable results, at the cost of way longer training and reverse engineering complexity.&lt;br/&gt;At least for now, we are sticking with the solution that is easier to reason about and easier to troubleshoot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Data anonymization and aggregation&lt;/strong&gt;&lt;br/&gt;We anonymize and aggregate all latency and availability data by /24 subnet in case of IPv4 and /56 in case of IPv6. We don‚Äôt operate directly on real user IPs and enforce strict ACL and retention policies for all RUM data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data cleanup&lt;/strong&gt;&lt;br/&gt;Data cleanup is a very important step in the &lt;a href=&quot;https://xkcd.com/2054/&quot;&gt;map data pipeline&lt;/a&gt;. Here are couple of common patterns that we‚Äôve found during our map construction:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Standard &lt;code&gt;GetTickCount64&lt;/code&gt; timer &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/sysinfo/windows-time&quot;&gt;on Windows is quantized by around 16ms&lt;/a&gt;. In our Python client we‚Äôve switched to &lt;code&gt;&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.perf_counter&quot;&gt;time.perf_counter()&lt;/a&gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;TCP and HTTP probes are way less reliable than HTTPS. This is mostly due to IP and DNS hijacking in the wild. Good examples of this are Wi-Fi captive portals.&lt;/li&gt;
&lt;li&gt;Even unique DNS requests can be received multiple times. Both due to lost responses and proactive cache refreshes by some DNS servers even unique queries like &lt;code&gt;UUID4.perf.dropbox.com&lt;/code&gt; can be duplicated. We take that into account when joining the HTTP and DNS logs.&lt;/li&gt;
&lt;li&gt;And of course there are all kinds of weird timing results from negative and submicrosecond results to ones that are older than our universe (they probably came from another one).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Data extrapolation&lt;/strong&gt;&lt;br/&gt;Currently we use the following techniques for speculatively expanding the resulting map:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If all the samples for an AS end up in the same ‚Äúbest‚Äù PoP we consider that all IP ranges announced by that AS should go to that PoP.&lt;/li&gt;
&lt;li&gt;If AS has multiple ‚Äúbest‚Äù PoPs then we break it down into announced IP ranges. For each one we assume that if all measurements in a range end up at the same PoP we can extrapolate that choice to the whole range.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This technique allows us to double our map coverage, make it more robust to changes, and generate a map using a smaller dataset.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Troubleshooting DNS map&lt;/strong&gt;&lt;br/&gt;Once a RUM-based map is constructed, it is crucial to be able to estimate how good it is by using a single value, something like an F1 score used for binary classification or BLEU score used for evaluating machine translation. That way, one can not only automatically prevent bad maps from going live, but also numerically compare the quality of different map iterations and construction algorithms.&lt;/p&gt;
&lt;p&gt;Another common approach for the map evaluation is &lt;a href=&quot;https://en.wikipedia.org/wiki/Training,_test,_and_validation_sets&quot;&gt;to test it against the subset of data that training process did not see&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For interactive slicing and dicing of data and ad-hoc troubleshooting, we map subnets back into the lat/long coordinates, aggregate their stats by &lt;a href=&quot;https://uber.github.io/h3/#/documentation/overview/use-cases&quot;&gt;h3 regions&lt;/a&gt; and then draw them with &lt;a href=&quot;https://kepler.gl/&quot;&gt;kepler.gl&lt;/a&gt;. This is very helpful to quickly eyeball maps that have low scores.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We went with h3 here instead of s2 because Kepler has built-in support for it, and generally h3 has simpler Python interface, therefore making it easier for us to experiment with visualizations.&lt;br/&gt;Whisper: also hexagons look cooler =)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The same approach can be used for visualizing current performance, week-over-week difference, difference between GeoIP database versions, and much more.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5278&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/17-screenshot2018-10-0321-00-57/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png&quot; data-orig-size=&quot;2618,1234&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;17-Screenshot+2018-10-03+21.00.57&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306&quot; class=&quot;alignnone size-medium wp-image-5278&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;306&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5278&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/17-screenshot2018-10-0321-00-57/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png&quot; data-orig-size=&quot;2618,1234&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;17-Screenshot+2018-10-03+21.00.57&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306&quot; class=&quot;alignnone size-medium wp-image-5278&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;306&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=650&amp;amp;h=306 650w, https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=1298&amp;amp;h=612 1298w, https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=600&amp;amp;h=283 600w, https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=768&amp;amp;h=362 768w, https://dropboxtechblog.files.wordpress.com/2018/10/17-screenshot2018-10-0321-00-57.png?w=1024&amp;amp;h=483 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;You can clearly see here where our PoPs are located. All of the big patches of blue and violet colors are getting their PoPs later this year or next year.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another way of visualizing IP maps is to skip the whole GeoDNS mapping step and plot IP addresses on the 2D plane by &lt;a href=&quot;https://xkcd.com/195/&quot;&gt;mapping them on a space filling curve, e.g. Hilbert curve&lt;/a&gt;. One can also place additional data in the height and color dimensions. This approach will require some heavy regularization for it to be consumable by humans and even more &lt;a href=&quot;http://colorbrewer2.org/&quot;&gt;ColorBrewer2&lt;/a&gt; magic to be aesthetically pleasing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RUM DNS at Dropbox&lt;/strong&gt;&lt;br/&gt;RUM-based DNS is an actively evolving project, and we have not shipped it to our main VIPs yet, but the data we‚Äôve collected from our GSLB experiments shows that it is the only way we can properly utilize more than 25-30 PoPs. This project will be one of our top priorities in 2019, because even metrics collected from an early map prototypes show that it can improve effectiveness of our Edge network by up to 30% using RUM DNS.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5279&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/18-screenshot2018-10-05at5-33-21pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png&quot; data-orig-size=&quot;2694,624&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;18-Screen+Shot+2018-10-05+at+5.33.21+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151&quot; class=&quot;alignnone size-medium wp-image-5279&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;151&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5279&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/18-screenshot2018-10-05at5-33-21pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png&quot; data-orig-size=&quot;2694,624&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;18-Screen+Shot+2018-10-05+at+5.33.21+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151&quot; class=&quot;alignnone size-medium wp-image-5279&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;151&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=650&amp;amp;h=151 650w, https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=1300&amp;amp;h=302 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=600&amp;amp;h=139 600w, https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=768&amp;amp;h=178 768w, https://dropboxtechblog.files.wordpress.com/2018/10/18-screenshot2018-10-05at5-33-21pm.png?w=1024&amp;amp;h=237 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;It will also provide all the byproducts needed for the Explicit Loadbalancer‚Ä¶ Speaking of which‚Ä¶&lt;/p&gt;
&lt;h3&gt;Explicit loadbalancing&lt;/h3&gt;
&lt;p&gt;A quick note about another more explicit way of routing users to PoPs. All these dances with guessing users‚Äô IP address based on their resolver, GeoIP effectiveness, optimality of decisions made by BGP, etc. are all no longer necessary after a request arrives at the PoP. Because at that point in time, we know the users‚Äô IP and even have an RTT measurement to them. At that point, we can route users on a higher level, like for example embedding a link to a specific PoP in the html, or handing off a different domain to a desktop client trying to download files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The same IP‚ÜíPoP map that was constructed for RUM DNS can be reused here, now exposed as an RPC service.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This loadbalancing method allows for a very granular traffic steering, even based on per-resource information, like user ID, file size, and physical location in our distributed storage. Another benefit is almost immediate draining of new connections, though references to resources that were once given out may live for extended periods of time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Very complex schemes can be invented here, for example we can hand off whole URLs that&lt;br/&gt;in the domain name embed information for external DNS-based routing and at the same time embed information for internal routing inside path/queryargs, that will allow PoP to make more optimal routing decision. Another approach is to put that additional data as an opaque blob into the encrypted/signed cookie.&lt;br/&gt;All of these possibilities sound exciting, so &lt;a href=&quot;https://en.wikipedia.org/wiki/Second-system_effect&quot;&gt;care must be taken to not overcomplicate the system&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explicit loadbalancing at Dropbox&lt;/strong&gt;&lt;br/&gt;We are not currently using this as an external loadbalancing method but instead rely on it for internal re-routing. The traffic team is actively preparing foundation for using it though.&lt;/p&gt;
&lt;h2&gt;Inside a point of presence&lt;/h2&gt;
&lt;p&gt;Now let‚Äôs discuss what happens when traffic actually arrives at the PoP.&lt;/p&gt;
&lt;h3&gt;Network architecture&lt;/h3&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5280&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/19-screenshot2018-10-09at1-23-46pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png&quot; data-orig-size=&quot;2406,1058&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;19-Screen+Shot+2018-10-09+at+1.23.46+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286&quot; class=&quot;alignnone size-medium wp-image-5280&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;286&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5280&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/19-screenshot2018-10-09at1-23-46pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png&quot; data-orig-size=&quot;2406,1058&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;19-Screen+Shot+2018-10-09+at+1.23.46+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286&quot; class=&quot;alignnone size-medium wp-image-5280&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;286&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=650&amp;amp;h=286 650w, https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=1300&amp;amp;h=572 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=600&amp;amp;h=264 600w, https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=768&amp;amp;h=338 768w, https://dropboxtechblog.files.wordpress.com/2018/10/19-screenshot2018-10-09at1-23-46pm.png?w=1024&amp;amp;h=450 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;PoPs consist of network equipment and sets of Linux servers. An average PoP has good connectivity: backbone, multiple transits, public and private &lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;peering&lt;/a&gt;. By increasing our network connectivity, we decrease the time packets spend in the public internet and therefore heavily decrease packet loss and improve TCP throughput. Currently about half of our traffic comes from peering.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dropbox has an &lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;o&lt;/a&gt;&lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;pen&lt;/a&gt; &lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;p&lt;/a&gt;&lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;eering&lt;/a&gt; &lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;p&lt;/a&gt;&lt;a href=&quot;https://www.dropbox.com/peering&quot;&gt;olicy&lt;/a&gt;, so feel free to peer with us &lt;a href=&quot;https://www.peeringdb.com/asn/19679&quot;&gt;all around the world&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can read more about network setup in the &lt;a href=&quot;https://blogs.dropbox.com/tech/2017/06/evolution-of-dropboxs-edge-network/&quot;&gt;Evolution of Dropbox‚Äôs Edge Network&lt;/a&gt; post.&lt;/p&gt;
&lt;h3&gt;L4 loadbalancer&lt;/h3&gt;
&lt;p&gt;Our PoPs consist of multiple nginx boxes that are acting as L7 proxy and L4 loadbalancers (L4LBs) spreading load between them.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5281&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/20-screenshot2018-10-09at1-23-56pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png&quot; data-orig-size=&quot;2432,1212&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;20-Screen+Shot+2018-10-09+at+1.23.56+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324&quot; class=&quot;alignnone size-medium wp-image-5281&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;324&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5281&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/20-screenshot2018-10-09at1-23-56pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png&quot; data-orig-size=&quot;2432,1212&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;20-Screen+Shot+2018-10-09+at+1.23.56+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324&quot; class=&quot;alignnone size-medium wp-image-5281&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;324&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=650&amp;amp;h=324 650w, https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=1300&amp;amp;h=648 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=600&amp;amp;h=299 600w, https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=768&amp;amp;h=383 768w, https://dropboxtechblog.files.wordpress.com/2018/10/20-screenshot2018-10-09at1-23-56pm.png?w=1024&amp;amp;h=510 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;We use standard techniques to scale L4LBs and make them more resilient to failure: BGP ECMP, DSR, and consistent hashing. IPVS acts as our dataplane‚Äîa kernel-level loadbalancer with netlink API. IPVS kernel module provides us with state tracking, pluggable scheduling algorithms, and IP-in-IP encapsulation for DSR.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5282&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/21-screenshot2018-10-09at1-24-16pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png&quot; data-orig-size=&quot;2430,1180&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;21-Screen+Shot+2018-10-09+at+1.24.16+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316&quot; class=&quot;alignnone size-medium wp-image-5282&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;316&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5282&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/21-screenshot2018-10-09at1-24-16pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png&quot; data-orig-size=&quot;2430,1180&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;21-Screen+Shot+2018-10-09+at+1.24.16+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316&quot; class=&quot;alignnone size-medium wp-image-5282&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;316&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=650&amp;amp;h=316 650w, https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=1300&amp;amp;h=632 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=600&amp;amp;h=291 600w, https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=768&amp;amp;h=373 768w, https://dropboxtechblog.files.wordpress.com/2018/10/21-screenshot2018-10-09at1-24-16pm.png?w=1024&amp;amp;h=497 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two main approaches for building high performance packet processors right now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kernel&lt;/strong&gt;&lt;br/&gt;Do packet processing early in network stack. This allows in-kernel data structures and TCP/IP parsing routines to be reused. For quite a while now, Linux has IPVS and &lt;a href=&quot;https://wiki.nftables.org/wiki-nftables/index.php/Load_balancing&quot;&gt;netfilter&lt;/a&gt; modules that can be used for connection-level loadbalancing. Recent kernels have eBPF/XDP combo which allows for a safer and faster way to process packets in kernel space. Tight coupling with kernel though has some downsides: upgrade of such LB may require reboot, very strict requirements on kernel version, and difficult integration testing.&lt;br/&gt;This approach is used by companies like &lt;a href=&quot;https://code.fb.com/open-source/open-sourcing-katran-a-scalable-network-load-balancer/&quot;&gt;Facebook&lt;/a&gt; and Dropbox.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Userspace&lt;/strong&gt;&lt;br/&gt;Create a virtual NIC PCIe device with SRIO-V, bypass the kernel through DPDK/netmap/etc, and get RX/TX queues in an application address space. This gives programmers full control over the network, but tcp/ip parsing, data structures, and even memory management must be done manually (or provided by a 3rd party library). Testing this kind of setup is also much easier.&lt;br/&gt;This approach is used by companies like &lt;a href=&quot;https://www.usenix.org/system/files/conference/nsdi16/nsdi16-paper-eisenbud.pdf&quot;&gt;Google&lt;/a&gt; and &lt;a href=&quot;https://githubengineering.com/glb-director-open-source-load-balancer/&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We currently use our homebrew version of consistent hashing module, but starting from linux-4.18 there is a Maglev Hash implementation: &lt;code&gt;[ip_vs_mh](https://github.com/torvalds/linux/blob/master/net/netfilter/ipvs/ip_vs_mh.c)&lt;/code&gt;. Compared to Ketama, Maglev Hash trades off some of the hash resiliency for more equal load distribution across backends and lookup speed.&lt;br/&gt;You can read more about Maglev Hash in the &lt;a href=&quot;https://www.usenix.org/system/files/conference/nsdi16/nsdi16-paper-eisenbud.pdf&quot;&gt;Maglev paper&lt;/a&gt; or &lt;a href=&quot;https://blog.acolyer.org/2016/03/21/maglev-a-fast-and-reliable-software-network-load-balancer/&quot;&gt;the morning paper&lt;/a&gt;, or go over a quick summary of &lt;a href=&quot;https://medium.com/@dgryski/consistent-hashing-algorithmic-tradeoffs-ef6b8e2fcae8&quot;&gt;consistent hash techniques from Damian Gryski&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We hash incoming packets based on 5-tuple (proto, sip, dip, sport, dport) which improves load distribution even further. This sadly means that any server-side caching becomes ineffective since different connections from the same client will likely end up on different backends. If our Edge did rely on local caching, we could use 3-tuple hashing mode where we would only hash on (protocol, sip, dip).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another interesting fact is that L4LB will need to do some special handling of ICMP‚Äôs Packet Too Big replies, since they will originate from &lt;a href=&quot;https://tools.ietf.org/html/draft-v6ops-pmtud-ecmp-problem-00&quot;&gt;a different host and therefore can‚Äôt use plain outer header hashing&lt;/a&gt;, but instead must be hashed based on the tcp/ip headers in the ICMP packet payload. Cloudflare uses another approach for solving this problem with its &lt;code&gt;[pmtud](https://github.com/cloudflare/pmtud)&lt;/code&gt;: broadcast incoming ICMP packets to all the boxes in the PoP. This can be useful if you do not have a separate routing layer and are ECMP‚Äôing packets straight to your L7 proxies.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Control plane for L4LBs is currently written in Go and closely integrated with our infrastructure and responsible for online reconfiguration, BGP connectivity, and health-checking of backends.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Health checks on any encapsulating DSR-based L4LB is very tricky. Special care must be taken to run health checks through the same packet encapsulation process as data itself is going, otherwise it is easy to start sending traffic to the box that does not have a properly set up tunnel yet.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Key properties of the L4LBs:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;They are resilient and horizontally scalable. Since L4LB does not terminate TCP connection and relies on the consistent hashing for connection scheduling, we can safely add/remove L4LBs because all of them will consistently route packets to the right destination&lt;/li&gt;
&lt;li&gt;Graceful removal/addition of L7 proxies. Since L4LBs also have a connection tracking table even if the set of backends changes, they will continue routing existing connections to them, which is the key distinguishing feature from plain ECMP&lt;/li&gt;
&lt;li&gt;Allows for horizontal scaling of L7 proxies. L4LB is fast enough to be network bounded, which means that we can scale L7 proxies until we have sufficient bandwidth&lt;/li&gt;
&lt;li&gt;Supports any IP-based protocol&lt;/li&gt;
&lt;li&gt;Supports any hashing algorithm. Maglev? Rendezvous? We can quickly experiment with any of them&lt;/li&gt;
&lt;li&gt;Supports any hashing policy. 3-tuple? 5-tuple? QUIC Connection ID? Easy!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Not to mention that now we can convert basically any server in production into a high performance loadbalancer just by running a binary on it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As for the future work, we have a number of things we want to try. First, replace the routing dataplane with either a DPDK or XDP/eBPF solution, or possibly just integrating an open-source project like &lt;a href=&quot;https://github.com/facebookincubator/katran&quot;&gt;Katran&lt;/a&gt;. Second, we currently use IP-in-IP for packet encapsulation and it‚Äôs about time we switch it to something more modern like &lt;a href=&quot;https://lwn.net/Articles/615044/&quot;&gt;GUE&lt;/a&gt; which is way more NIC-friendly in terms of steering and offload support.&lt;/p&gt;
&lt;h3&gt;L7 proxies (nginx)&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;p&gt;Having PoPs close to our users decreases the time needed for both TCP and TLS handshakes, which essentially leads to a faster TTFB. But owning this infrastructure instead of renting it from a CDN provider allows us to easily experiment and iterate on emerging technologies that optimize latency and throughput sensitive workloads even further. Let‚Äôs discuss some of them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TCP&lt;/strong&gt;&lt;br/&gt;Starting from the lowest layers of the stack here is a &lt;a href=&quot;https://lwn.net/Articles/564825/&quot;&gt;Fair Queueing packet scheduler&lt;/a&gt; example: not only because it introduces fairness between flows, but also adds ‚Äúpacing‚Äù to the upper level protocol. Let‚Äôs look at some specific examples.&lt;/p&gt;
&lt;p&gt;Without fair queueing, packets will be dumped to the network as they arrive from the TCP stack, which will lead to the huge Head-of-Line blocking further down network stack.&lt;/p&gt;
&lt;p&gt;With FQ packets of different flows are interleaved and one flow no longer blocks another.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5283&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/22-screenshot2018-10-0401-49-34/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png&quot; data-orig-size=&quot;2348,732&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;22-Screenshot+2018-10-04+01.49.34&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203&quot; class=&quot;alignnone size-medium wp-image-5283&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;203&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5283&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/22-screenshot2018-10-0401-49-34/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png&quot; data-orig-size=&quot;2348,732&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;22-Screenshot+2018-10-04+01.49.34&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203&quot; class=&quot;alignnone size-medium wp-image-5283&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;203&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=650&amp;amp;h=203 650w, https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=1300&amp;amp;h=406 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=600&amp;amp;h=187 600w, https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=768&amp;amp;h=239 768w, https://dropboxtechblog.files.wordpress.com/2018/10/22-screenshot2018-10-0401-49-34.png?w=1024&amp;amp;h=319 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Without pacing, if you want to send multiple megabytes of data to the user, and current TCP congestion window allows that, then you‚Äôll just dump thousands of packets onto the underlying network stack.&lt;/p&gt;
&lt;p&gt;With pacing, TCP will hint packet scheduler a desired sending rate (based on the congestion window and rtt) and then scheduler is responsible for submitting packets to the network stack every once in a while to maintain that steady sending rate:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5284&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/23-screenshot2018-10-0401-49-15/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png&quot; data-orig-size=&quot;2266,732&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;23-Screenshot+2018-10-04+01.49.15&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210&quot; class=&quot;alignnone size-medium wp-image-5284&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;210&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5284&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/23-screenshot2018-10-0401-49-15/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png&quot; data-orig-size=&quot;2266,732&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;23-Screenshot+2018-10-04+01.49.15&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210&quot; class=&quot;alignnone size-medium wp-image-5284&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;210&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=650&amp;amp;h=210 650w, https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=1300&amp;amp;h=420 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=600&amp;amp;h=194 600w, https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=768&amp;amp;h=248 768w, https://dropboxtechblog.files.wordpress.com/2018/10/23-screenshot2018-10-0401-49-15.png?w=1024&amp;amp;h=331 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;FQ comes at a relatively low CPU cost of around 5%, but it essentially makes routers and shapers along the path way happier, which leads to lower packet loss and less &lt;a href=&quot;https://www.bufferbloat.net/projects/bloat/wiki/What_can_I_do_about_Bufferbloat/&quot;&gt;bufferbloat&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fun fact: when we first deployed FQ we‚Äôve noticed that all the buffer drops on our Top-of-the-Rack (ToR) switches had gone away. Even though they were very beefy boxes capable of handling terabits of traffic it seems like they had shallow buffers and were susceptible to packet drop during microbursts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is only one of the features that new Linux kernels provide, including but not limited to: &lt;a href=&quot;https://lwn.net/Articles/542642/&quot;&gt;Tail Loss Probe&lt;/a&gt;, &lt;a href=&quot;https://lwn.net/Articles/507065/&quot;&gt;TCP Small Queues&lt;/a&gt;, &lt;code&gt;[TCP_NOTSENT_LOWAT](https://lwn.net/Articles/560082/)&lt;/code&gt;, &lt;a href=&quot;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=eb9fae328faff9807a4ab5c1834b19f34dd155d4&quot;&gt;RACK&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;We work on network- and transport-level optimizations from time to time‚Äîand when we do, it‚Äôs super fun and usually involves some amount of Wiresharking and &lt;a href=&quot;https://storage.googleapis.com/pub-tools-public-publication-data/pdf/41316.pdf&quot;&gt;packetdril&lt;/a&gt;&lt;a href=&quot;https://storage.googleapis.com/pub-tools-public-publication-data/pdf/41316.pdf&quot;&gt;ling&lt;/a&gt;. For example, one upcoming project for the Traffic team is to evaluate &lt;a href=&quot;https://datatracker.ietf.org/meeting/102/materials/slides-102-iccrg-an-update-on-bbr-work-at-google-00&quot;&gt;BBR v2&lt;/a&gt; (once it is ready for public testing).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLS&lt;/strong&gt;&lt;br/&gt;All connections to Dropbox are protected by TLS that encrypts and authenticates data in transit over the public internet. We also re-encrypt data and send it over an encrypted and mutually authenticated channel over our backbone network.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since we use the same TLS stack internally for gRPC, we are very invested in its performance, especially around the TLS handshake part, where we make sure our libraries are using the most &lt;a href=&quot;https://boringssl.googlesource.com/boringssl/+/488ca0eacefd3bc8c7570e8ed5053f4a49451419&quot;&gt;efficient hardware instructions possible&lt;/a&gt;, and for large file transfers, where we try to &lt;a href=&quot;https://github.com/grpc/grpc/pull/14060&quot;&gt;minimize&lt;/a&gt; &lt;a href=&quot;https://github.com/grpc/grpc/pull/14060&quot;&gt;the&lt;/a&gt; &lt;a href=&quot;https://github.com/grpc/grpc/pull/14060&quot;&gt;number of memory copies that they perform&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Our TLS setup is relatively simple: BoringSSL, TLS tickets with frequently rotated ephemeral keys, preferring AEAD ciphersuites with ChaCha20/Poly1305 for older hardware (we are very close the &lt;a href=&quot;https://github.com/cloudflare/sslconfig/blob/master/conf&quot;&gt;Cloudflare‚Äôs TLS config&lt;/a&gt;.) We are also in the process of rolling out the RFC version of the TLS 1.3 across our Edge network.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As for the future plans: as our boxes get closer to 100Gbit we are starting to look towards &lt;code&gt;[TCP_ULP](https://github.com/torvalds/linux/blob/master/Documentation/networking/tls.txt)&lt;/code&gt; and how we can add support for it to our software stack.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;HTTP&lt;/strong&gt;&lt;br/&gt;The main job of the nginx proxies on the Edge is to maintain keep alive connections to the backends in data center over our fat-long-pipe backbone. This essentially means that we have a set of hot connections that are never constrained by CWND on an almost lossless link.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5285&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/24-screenshot2018-10-09at1-24-32pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png&quot; data-orig-size=&quot;2454,978&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;24-Screen+Shot+2018-10-09+at+1.24.32+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259&quot; class=&quot;alignnone size-medium wp-image-5285&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;259&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5285&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/24-screenshot2018-10-09at1-24-32pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png&quot; data-orig-size=&quot;2454,978&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;24-Screen+Shot+2018-10-09+at+1.24.32+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259&quot; class=&quot;alignnone size-medium wp-image-5285&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;259&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=650&amp;amp;h=259 650w, https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=1300&amp;amp;h=518 1300w, https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=600&amp;amp;h=239 600w, https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=768&amp;amp;h=306 768w, https://dropboxtechblog.files.wordpress.com/2018/10/24-screenshot2018-10-09at1-24-32pm.png?w=1024&amp;amp;h=408 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;blockquote&gt;
&lt;p&gt;Very quick note about how we build and deploy nginx: like everything else in Dropbox, we use Bazel to reproducibly and hermetically build a static nginx binary, copy over configs, package all of this into a squshfs, use torrent to distribute resulting package to all the servers, mount it (read-only), switch symlink, and finally run nginx upgrade.&lt;br/&gt;We probably should write a blog post on it too, since it is very simple and very efficient.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Our nginx configuration is static and bundled with the binary therefore we need a way to dynamically configure some aspects of the configuration without full redeploy. Here is where &lt;strong&gt;Upstream Management Service&lt;/strong&gt; kicks in. UMS is basically a look-aside external loadbalancer for nginx which allows us to reconfigure upstreams on the fly. One can create such system by:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Regenerating config for nginx and hot reloading it. Sadly, when used extensively this approach negatively impacts connection reuse and increases memory pressure&lt;/li&gt;
&lt;li&gt;Using &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_api_module.html&quot;&gt;configuration API&lt;/a&gt; from the nginx plus&lt;/li&gt;
&lt;li&gt;Using standalone sidecar proxy on the same box, but that will lead to major increase in CPU/MEM resource usage&lt;/li&gt;
&lt;li&gt;Using Lua APIs or custom C modules&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Because we are already relying on the Lua there, we‚Äôve built a data plane for UMS with it by combining a &lt;code&gt;balancer_by_lua_block&lt;/code&gt; directive and &lt;code&gt;ngx.timer.every&lt;/code&gt; hook that periodically fetches configuration from control plane via https.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A nice side effect of writing the balancer module in Lua: we can now quickly experiment with different loadbalancing algorithms before writing them in C. The downside of Lua is that it is tricky to test, especially in a company where Lua is not one of the primary languages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5286&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/25-screenshot2018-10-09at1-24-46pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png&quot; data-orig-size=&quot;2448,1124&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;25-Screen+Shot+2018-10-09+at+1.24.46+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298&quot; class=&quot;alignnone size-medium wp-image-5286&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;298&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5286&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/25-screenshot2018-10-09at1-24-46pm/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png&quot; data-orig-size=&quot;2448,1124&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;25-Screen+Shot+2018-10-09+at+1.24.46+PM&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298&quot; class=&quot;alignnone size-medium wp-image-5286&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;298&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=650&amp;amp;h=298 650w, https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=1298&amp;amp;h=596 1298w, https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=600&amp;amp;h=275 600w, https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=768&amp;amp;h=353 768w, https://dropboxtechblog.files.wordpress.com/2018/10/25-screenshot2018-10-09at1-24-46pm.png?w=1024&amp;amp;h=470 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;Control plane for UMS is a Golang service that gets information from our service discovery, monitoring system, and manual overrides, then aggregates and exposes it as a REST endpoint that nginx then accesses through a simple &lt;code&gt;httpc:request_uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gRPC&lt;/strong&gt;&lt;br/&gt;Nginx is terminating HTTP, HTTP/2, and &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_grpc_module.html&quot;&gt;gRPC connections&lt;/a&gt; on the Edge. Ability to proxy gRPC through our stack allows us to experiment with our apps talking gRPC directly to the application servers. Being able to do that streamlines development process and unifies the way services communicate externally and internally.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are looking how we can use gRPC for all APIs. For the APIs that we can‚Äôt switch to gRPC, like web, we consider converting all HTTP requests into the gRPC method calls right at the Edge.&lt;/p&gt;
&lt;h2&gt;Wrap up and future blog posts&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;All of this pretty much covers the external part of Traffic Infrastructure, but there is another half that is not directly visible to our users: gRPC-based service mesh, scalable and robust service discovery, and a distributed filesystem for config distribution with notification support. All of that is coming soon in the next series of blog posts.&lt;/p&gt;
&lt;h2&gt;We‚Äôre hiring!&lt;/h2&gt;
&lt;p&gt;Do you like traffic-related stuff? Dropbox has a globally distributed Edge network, terabits of traffic, and millions of requests per second. All of which is managed by a small team in Mountain View, CA.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5287&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/26-screenshot2018-10-0318-04-58/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png&quot; data-orig-size=&quot;2076,1164&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;26-Screenshot+2018-10-03+18.04.58&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364&quot; class=&quot;alignnone size-medium wp-image-5287&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;364&quot;/&gt;&lt;/p&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;5287&quot; data-permalink=&quot;https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/26-screenshot2018-10-0318-04-58/&quot; data-orig-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png&quot; data-orig-size=&quot;2076,1164&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;26-Screenshot+2018-10-03+18.04.58&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364&quot; data-large-file=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364&quot; class=&quot;alignnone size-medium wp-image-5287&quot; src=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;364&quot; srcset=&quot;https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=650&amp;amp;h=364 650w, https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=1298&amp;amp;h=728 1298w, https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=600&amp;amp;h=336 600w, https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=768&amp;amp;h=431 768w, https://dropboxtechblog.files.wordpress.com/2018/10/26-screenshot2018-10-0318-04-58.png?w=1024&amp;amp;h=574 1024w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.dropbox.com/jobs/listing/1233364?gh_src=f80311fa1&quot;&gt;Traffic team is hiring both SWEs and SREs&lt;/a&gt; to work on TCP/IP packet processors and loadbalancers, HTTP/2 proxies, and our internal gRPC-based service mesh. Not your thing? Dropbox is also hiring for &lt;a href=&quot;https://www.dropbox.com/jobs/teams/engineering?gh_src=f80311fa1#open-positions&quot;&gt;a wide variety of engineering positions in San Francisco, New York, Seattle, Tel Aviv, and other offices around the world&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;This article describes the work done by many people over a course of multiple years. Thanks to all current and past traffic team members: all of you helped make Dropbox faster and more reliable:&lt;br/&gt;Ashwin Amit, Brian Pane, Dmitry Kopytkov, Dzmitry Markovich, Eduard Snesarev, Haowei Yuan, John Serrano, Jon Lee, Kannan Goundan, Konstantin Belyalov, Mario Brito, Oleg Guba, Patrick Lee, Preslav Le, Ross Delinger, Ruslan Nigmatullin, Vladimir Sheyda, Yi-Shu Tai.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 16:37:32 +0000</pubDate>
<dc:creator>el_duderino</dc:creator>
<og:title>Dropbox traffic infrastructure: Edge¬†network</og:title>
<og:url>https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/</og:url>
<og:image>https://dropboxtechblog.files.wordpress.com/2018/10/01-featured-image2x.png?w=600</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/</dc:identifier>
</item>
<item>
<title>Microsoft Joins the Open Invention Network</title>
<link>https://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</link>
<guid isPermaLink="true" >https://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</guid>
<description>&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;DURHAM, N.C., Oct. 10, 2018 (GLOBE NEWSWIRE) -- Open Invention Network (OIN) announced today that Microsoft has become a member of the OIN community.¬† By joining OIN, Microsoft is demonstrating its commitment to open source software (OSS) and innovation through collaborative development.¬† With more than 2,650 members, including numerous Fortune 500 enterprises, OIN is the largest patent non-aggression community in history and represents a core set of community values related to open source licensing, which has become the norm.¬†¬†&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;‚ÄúOpen source development continues to expand into new products and markets to create unrivaled levels of innovation.¬† Through its participation in OIN, Microsoft is explicitly acknowledging the importance of open source software to its future growth,&quot; said Keith Bergelt, CEO of Open Invention Network.¬† ‚ÄúMicrosoft‚Äôs participation in OIN adds to our strong community, which through its breadth and depth has reduced patent risk in core technologies, and unequivocally signals for all companies who are using OSS but have yet to join OIN that the litmus test for authentic behavior in the OSS community includes OIN participation.‚Äù&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;‚ÄúMicrosoft sees open source as a key innovation engine, and for the past several years we have increased our involvement in, and contributions to, the open source community,‚Äù said Erich Andersen, Corporate Vice President and Chief IP Counsel, Microsoft. ‚ÄúWe believe the protection OIN offers the open source community helps increase global contributions to and adoption of open source technologies. ¬†We are honored to stand with OIN as an active participant in its program to protect against patent aggression in core Linux and other important OSS technologies.‚Äù&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;OIN‚Äôs community practices patent non-aggression in core open source technologies by cross-licensing Linux System patents to one another on a royalty-free basis. Patents owned by Open Invention Network are similarly licensed royalty-free to any organization that agrees not to assert its patents against the Linux System.¬† The OIN license can be signed online at &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=85Hhd1Y27-lI_QoNqzQkMshSSwMWFhTp7qS_udVXdudy3hQ1Uji-In43AbVyREigP4ub-aW-lp8bqNWWqB5ygw==&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;&quot;&gt;&lt;u&gt;http://www.j-oin.net/&lt;/u&gt;&lt;/a&gt;.&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;&lt;strong&gt;&lt;em&gt;About Open Invention Network&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;Open Invention Network (OIN) is the largest patent non-aggression community in history and supports freedom of action in Linux as a key element of open source software. Funded by Google, IBM, NEC, Philips, Red Hat, Sony, SUSE, and Toyota, OIN has more than 2,650 community members and owns more than 1,300 global patents and applications.¬† The OIN patent license and member cross-licenses are available royalty-free to any party that joins the OIN community.&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;For more information, visit &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=85Hhd1Y27-lI_QoNqzQkMkYxI6rm6VThIhbmue2z4vbgZkFUwZ93Cha6MEzT8se2UGQfBa8X75Pw0aUVcqYve1P1Ml-rHVxnC5li1P2brhIBfnQG9lxHd9JDly7L8wbV&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;&quot;&gt;&lt;u&gt;http://www.openinventionnetwork.com&lt;/u&gt;&lt;/a&gt;.&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;&lt;strong&gt;&lt;em&gt;Media-Only Contact:&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;article-body&quot; itemprop=&quot;articleBody&quot;&gt;Ed Schauweker&lt;br/&gt;AVID Public Relations for Open Invention Network&lt;br/&gt;&lt;u&gt;ed@avidpr.com&lt;/u&gt;&lt;br/&gt;+1 (703) 963-5238&lt;/span&gt;</description>
<pubDate>Wed, 10 Oct 2018 13:54:07 +0000</pubDate>
<dc:creator>MikusR</dc:creator>
<og:title>Microsoft Joins the Open Invention Network Community</og:title>
<og:type>article</og:type>
<og:image>http://globenewswire.com/Attachment/LogoDisplay/508655?filename=508655.png&amp;size=1</og:image>
<og:url>http://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</og:url>
<og:description>Microsoft‚Äôs participation in OIN will drive additional innovation and enhance patent non-aggression in Linux and adjacent OSS technologies</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://globenewswire.com/news-release/2018/10/10/1619375/0/en/Microsoft-Joins-the-Open-Invention-Network-Community.html</dc:identifier>
</item>
<item>
<title>Amazon scraps secret AI recruiting tool that showed bias against women</title>
<link>https://www.reuters.com/article/us-amazon-com-jobs-automation-insight/amazon-scraps-secret-ai-recruiting-tool-that-showed-bias-against-women-idUSKCN1MK08G</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-amazon-com-jobs-automation-insight/amazon-scraps-secret-ai-recruiting-tool-that-showed-bias-against-women-idUSKCN1MK08G</guid>
<description>&lt;p&gt;SAN FRANCISCO (Reuters) - Amazon.com Inc‚Äôs (&lt;span id=&quot;‚Äùsymbol_AMZN.O_0‚Äù&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=AMZN.O&quot;&gt;AMZN.O&lt;/a&gt;&lt;/span&gt;) machine-learning specialists uncovered a big problem: their new recruiting engine did not like women.&lt;/p&gt;
&lt;p&gt;The team had been building computer programs since 2014 to review job applicants‚Äô resumes with the aim of mechanizing the search for top talent, five people familiar with the effort told Reuters.&lt;/p&gt;
&lt;p&gt;Automation has been key to Amazon‚Äôs e-commerce dominance, be it inside warehouses or driving pricing decisions. The company‚Äôs experimental hiring tool used artificial intelligence to give job candidates scores ranging from one to five stars - much like shoppers rate products on Amazon, some of the people said.&lt;/p&gt;
&lt;p&gt;‚ÄúEveryone wanted this holy grail,‚Äù one of the people said. ‚ÄúThey literally wanted it to be an engine where I‚Äôm going to give you 100 resumes, it will spit out the top five, and we‚Äôll hire those.‚Äù&lt;/p&gt;
&lt;p&gt;But by 2015, the company realized its new system was not rating candidates for software developer jobs and other technical posts in a gender-neutral way.&lt;/p&gt;
&lt;p&gt;That is because Amazon‚Äôs computer models were trained to vet applicants by observing patterns in resumes submitted to the company over a 10-year period. Most came from men, a reflection of male dominance across the tech industry.¬†&lt;/p&gt;
&lt;p&gt;In effect, Amazon‚Äôs system taught itself that male candidates were preferable. It penalized resumes that included the word ‚Äúwomen‚Äôs,‚Äù as in ‚Äúwomen‚Äôs chess club captain.‚Äù And it downgraded graduates of two all-women‚Äôs colleges, according to people familiar with the matter. They did not specify the names of the schools.&lt;/p&gt;
&lt;p&gt;Amazon edited the programs to make them neutral to these particular terms. But that was no guarantee that the machines would not devise other ways of sorting candidates that could prove discriminatory, the people said.&lt;/p&gt;
&lt;p&gt;The Seattle company ultimately disbanded the team by the start of last year because executives lost hope for the project, according to the people, who spoke on condition of anonymity. Amazon‚Äôs recruiters looked at the recommendations generated by the tool when searching for new hires, but never relied solely on those rankings, they said.&lt;/p&gt;
&lt;p&gt;Amazon declined to comment on the technology‚Äôs challenges, but said the tool ‚Äúwas never used by Amazon recruiters to evaluate candidates.‚Äù The company did not elaborate further. It did not dispute that recruiters looked at the recommendations generated by the recruiting engine.&lt;/p&gt;
&lt;p&gt;The company‚Äôs experiment, which Reuters is first to report, offers a case study in the limitations of machine learning. It also serves as a lesson to the growing list of large companies including Hilton Worldwide Holdings Inc (&lt;span id=&quot;‚Äùsymbol_HLT.N_1‚Äù&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=HLT.N&quot;&gt;HLT.N&lt;/a&gt;&lt;/span&gt;) and Goldman Sachs Group Inc (&lt;span id=&quot;‚Äùsymbol_GS.N_2‚Äù&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=GS.N&quot;&gt;GS.N&lt;/a&gt;&lt;/span&gt;) that are looking to automate portions of the hiring process.&lt;/p&gt;
&lt;p&gt;Some 55 percent of U.S. human resources managers said artificial intelligence, or AI, would be a regular part of their work within the next five years, according to a 2017 survey by talent software firm CareerBuilder.&lt;/p&gt;
&lt;p&gt;Employers have long dreamed of harnessing technology to widen the hiring net and reduce reliance on subjective opinions of human recruiters. But computer scientists such as Nihar Shah, who teaches machine learning at Carnegie Mellon University, say there is still much work to do.&lt;/p&gt;
&lt;p&gt;‚ÄúHow to ensure that the algorithm is fair, how to make sure the algorithm is really interpretable and explainable - that‚Äôs still quite far off,‚Äù he said.&lt;/p&gt;
&lt;div class=&quot;Slideshow_container Slideshow_small Slideshow_standard&quot;&gt;
&lt;div class=&quot;Slideshow_preview-container&quot;&gt;
&lt;div class=&quot;LazyImage_container LazyImage_dark&quot;&gt;&lt;img src=&quot;https://s3.reutersmedia.net/resources/r/?m=02&amp;amp;d=20181010&amp;amp;t=2&amp;amp;i=1313083806&amp;amp;r=LYNXNPEE9906Q&quot;/&gt;
&lt;/div&gt;

Slideshow &lt;span class=&quot;Slideshow_count&quot;&gt;(6 Images)&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;MASCULINE LANGUAGE&lt;/h3&gt;
&lt;p&gt;Amazon‚Äôs experiment began at a pivotal moment for the world‚Äôs largest online retailer. Machine learning was gaining traction in the technology world, thanks to a surge in low-cost computing power. And Amazon‚Äôs Human Resources department was about to embark on a hiring spree: Since June 2015, the company‚Äôs global headcount has more than tripled to 575,700 workers, regulatory filings show.&lt;/p&gt;
&lt;p&gt;So it set up a team in Amazon‚Äôs Edinburgh engineering hub that grew to around a dozen people. Their goal was to develop AI that could rapidly crawl the web and spot candidates worth recruiting, the people familiar with the matter said.&lt;/p&gt;
&lt;p&gt;The group created 500 computer models focused on specific job functions and locations. They taught each to recognize some 50,000 terms that showed up on past candidates‚Äô resumes. The algorithms learned to assign little significance to skills that were common across IT applicants, such as the ability to write various computer codes, the people said.&lt;/p&gt;
&lt;p&gt;Instead, the technology favored candidates who described themselves using verbs more commonly found on male engineers‚Äô resumes, such as ‚Äúexecuted‚Äù and ‚Äúcaptured,‚Äù one person said.&lt;/p&gt;
&lt;p&gt;Gender bias was not the only issue. Problems with the data that underpinned the models‚Äô judgments meant that unqualified candidates were often recommended for all manner of jobs, the people said. With the technology returning results almost at random, Amazon shut down the project, they said.&lt;/p&gt;
&lt;h3&gt;THE PROBLEM, OR THE CURE?&lt;/h3&gt;
&lt;p&gt;Other companies are forging ahead, underscoring the eagerness of employers to harness AI for hiring.&lt;/p&gt;
&lt;p&gt;Kevin Parker, chief executive of HireVue, a startup near Salt Lake City, said automation is helping firms look beyond the same recruiting networks upon which they have long relied. His firm analyzes candidates‚Äô speech and facial expressions in video interviews to reduce reliance on resumes.&lt;/p&gt;
&lt;p&gt;‚ÄúYou weren‚Äôt going back to the same old places; you weren‚Äôt going back to just Ivy League schools,‚Äù Parker said. His company‚Äôs customers include Unilever PLC (&lt;span id=&quot;‚Äùsymbol_ULVR.L_3‚Äù&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=ULVR.L&quot;&gt;ULVR.L&lt;/a&gt;&lt;/span&gt;) and Hilton.&lt;/p&gt;
&lt;p&gt;Goldman Sachs has created its own resume analysis tool that tries to match candidates with the division where they would be the ‚Äúbest fit,‚Äù the company said.&lt;/p&gt;
&lt;p&gt;Microsoft Corp‚Äôs (&lt;span id=&quot;‚Äùsymbol_MSFT.O_4‚Äù&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=MSFT.O&quot;&gt;MSFT.O&lt;/a&gt;&lt;/span&gt;) LinkedIn, the world‚Äôs largest professional network, has gone further. It offers employers algorithmic rankings of candidates based on their fit for job postings on its site.&lt;/p&gt;
&lt;p&gt;Still, John Jersin, vice president of LinkedIn Talent Solutions, said the service is not a replacement for traditional recruiters.&lt;/p&gt;
&lt;p&gt;‚ÄúI certainly would not trust any AI system today to make a hiring decision on its own,‚Äù he said. ‚ÄúThe technology is just not ready yet.‚Äù&lt;/p&gt;
&lt;p&gt;Some activists say they are concerned about transparency in AI. The American Civil Liberties Union is currently challenging a law that allows criminal prosecution of researchers and journalists who test hiring websites‚Äô algorithms for discrimination.&lt;/p&gt;
&lt;p&gt;‚ÄúWe are increasingly focusing on algorithmic fairness as an issue,‚Äù said Rachel Goodman, a staff attorney with the Racial Justice Program at the ACLU.&lt;/p&gt;
&lt;p&gt;Still, Goodman and other critics of AI acknowledged it could be exceedingly difficult to sue an employer over automated hiring: Job candidates might never know it was being used.&lt;/p&gt;
&lt;p&gt;As for Amazon, the company managed to salvage some of what it learned from its failed AI experiment. It now uses a ‚Äúmuch-watered down version‚Äù of the recruiting engine to help with some rudimentary chores, including culling duplicate candidate profiles from databases, one of the people familiar with the project said.&lt;/p&gt;
&lt;p&gt;Another said a new team in Edinburgh has been formed to give automated employment screening another try, this time with a focus on diversity.&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Reporting By Jeffrey Dastin in San Francisco; Editing by Jonathan Weber and Marla Dickerson&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 10 Oct 2018 13:38:29 +0000</pubDate>
<dc:creator>wyldfire</dc:creator>
<og:title>Amazon scraps secret AI recruiting tool that showed bias against women</og:title>
<og:url>https://www.reuters.com/article/us-amazon-com-jobs-automation-insight/amazon-scraps-secret-ai-recruiting-tool-that-showed-bias-against-women-idUSKCN1MK08G</og:url>
<og:type>article</og:type>
<og:description>Amazon.com Inc's machine-learning specialists uncovered a big problem: thei...</og:description>
<og:image>https://s3.reutersmedia.net/resources/r/?m=02&amp;d=20181010&amp;t=2&amp;i=1313083806&amp;w=1200&amp;r=LYNXNPEE9906Q</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-amazon-com-jobs-automation-insight/amazon-scraps-secret-ai-recruiting-tool-that-showed-bias-against-women-idUSKCN1MK08G</dc:identifier>
</item>
<item>
<title>‚Äú12 years ago today, I finished writing Hacker News‚Äù</title>
<link>https://twitter.com/paulg/status/1049723540902215681?s=21</link>
<guid isPermaLink="true" >https://twitter.com/paulg/status/1049723540902215681?s=21</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/paulg/status/1049723540902215681?s=21&quot;&gt;https://twitter.com/paulg/status/1049723540902215681?s=21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18183822&quot;&gt;https://news.ycombinator.com/item?id=18183822&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 373&lt;/p&gt;
&lt;p&gt;# Comments: 185&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 11:31:52 +0000</pubDate>
<dc:creator>theCricketer</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/paulg/status/1049723540902215681?s=21</dc:identifier>
</item>
<item>
<title>The hacker&amp;#039;s guide to uncertainty estimates</title>
<link>https://erikbern.com/2018/10/08/the-hackers-guide-to-uncertainty-estimates.html</link>
<guid isPermaLink="true" >https://erikbern.com/2018/10/08/the-hackers-guide-to-uncertainty-estimates.html</guid>
<description>&lt;time datetime=&quot;2018-10-08T00:00:00-04:00&quot; class=&quot;post-date&quot;&gt;2018-10-08&lt;/time&gt;&lt;p&gt;It started with a tweet:&lt;/p&gt;
&lt;div class=&quot;jekyll-twitter-plugin&quot; readability=&quot;5.3333333333333&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.4444444444444&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;New years resolution: every plot I make during 2018 will contain uncertainty estimates&lt;/p&gt;
‚Äî Erik Bernhardsson (@fulhack) &lt;a href=&quot;https://twitter.com/fulhack/status/950065836194066433?ref_src=twsrc%5Etfw&quot;&gt;January 7, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;Why? Because I‚Äôve been sitting in 100,000,000 meetings where people endlessly debate whether the monthly number of widgets is going up or down, or whether widget method X is more productive than widget method Y. For almost any graph, quantifying the uncertainty seems useful, so I started trying. A few months later:&lt;/p&gt;
&lt;div class=&quot;jekyll-twitter-plugin&quot; readability=&quot;5.2&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.8&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I'm four months into this year and I gotta tell you ‚Äì the rabbit hole of estimating uncertainty is DEEP &lt;a href=&quot;https://t.co/wvSlsYskrt&quot;&gt;https://t.co/wvSlsYskrt&lt;/a&gt;&lt;/p&gt;
‚Äî Erik Bernhardsson (@fulhack) &lt;a href=&quot;https://twitter.com/fulhack/status/995359796302876674?ref_src=twsrc%5Etfw&quot;&gt;May 12, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I never studied statistics and learned it kind of ‚Äúbackwards‚Äù through machine learning, so I consider myself more as a hacker who picked up statistics along the way. Earlier this year I had some basic knowledge of bootstrapping and confidence intervals, but along the way I had to pick up a whole arsenal of tricks going all the way to Monte Carlo methods and inverse Hessians. It seemed useful to share some of the methods I‚Äôve used the most, so I wrote this post!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: this post features some math which might not render properly outside the &lt;a href=&quot;https://erikbern.com/2018/10/08/the-hackers-guide-to-uncertainty-estimates.html&quot;&gt;canonical location&lt;/a&gt; of the post.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I don‚Äôt believe in learning things without a concrete example, so let‚Äôs generate some data. We‚Äôre going to generate a fake time series where the dates range from 2017-07-01 to 2018-07-31. Let‚Äôs say the observations are all the weights of an elephant.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;30&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_time_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                         &lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gauss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# for plotting&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_time_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we get started with anything, we need graphics. Let‚Äôs plot to see what‚Äôs going on!&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_4_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;First of all, let‚Äôs not fit any fancy models. We‚Äôre just going to break it up into a few buckets and compute the mean within each bucket. But let‚Äôs first pause and talk about uncertainty.&lt;/p&gt;

&lt;p&gt;This makes me sometimes feel dumb but I keep confusing what ‚Äúuncertainty‚Äù means and I think it‚Äôs important to be hyper clear because we‚Äôre going to do all of them. Let‚Äôs say we‚Äôre trying to understand quantity sold as a function of cost. There‚Äôs multiple different things we can estimate the distribution for:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The data itself. Given a certain time frame , what‚Äôs the distribution of the elephant‚Äôs weight during that time interval?&lt;/li&gt;
&lt;li&gt;The uncertainty of some parameter, like the parameter  in a linear relationship . &lt;em&gt;Or&lt;/em&gt; the uncertainty of some estimator, like the &lt;em&gt;mean&lt;/em&gt; of a number of observations.&lt;/li&gt;
&lt;li&gt;The uncertainty of predicted quantities. So if we predict that for a date  (possibly in the future), the elephant is going to weight  kg, we want to know the uncertainty of the quantity .&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Hope that makes sense! Let‚Äôs start with the most basic model ‚Äì just break things up in buckets. I recommend the excellent &lt;a href=&quot;https://seaborn.pydata.org/&quot;&gt;Seaborn&lt;/a&gt; package if we just want to get some basic idea of distributions and uncertainty estimates. Seaborn usually operates on dataframes so we‚Äôll need to convert:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'t'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Weight (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;seaborn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_6_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;These last charts show the &lt;em&gt;distribution&lt;/em&gt; of the dataset. Let‚Äôs now try to figure out the uncertainty of a very common estimator: the &lt;em&gt;mean&lt;/em&gt;!&lt;/p&gt;
&lt;h2 id=&quot;computing-the-uncertainty-of-the-mean--normal-distributions&quot;&gt;Computing the uncertainty of the mean ‚Äì normal distributions&lt;/h2&gt;
&lt;p&gt;Under some mild assumptions (I‚Äôm going to get back to this in a sec and scrutinize it), we can compute the confidence intervals &lt;em&gt;of the mean estimator&lt;/em&gt; as:&lt;/p&gt;
&lt;p&gt;Where  is the mean and  is the standard deviation, a.k.a. the square root of the variance. I don‚Äôt think this formula is super important to remember, but I think it‚Äôs somewhat useful to remember that the &lt;em&gt;size of the confidence interval is inversely related to the square root of the number of samples.&lt;/em&gt; For instance, this is useful when you‚Äôre running an A/B test ‚Äì if you want to detect a 1% difference then you need something on the order of  samples. (This is a rule of thumb, don‚Äôt use it for your medical device software).&lt;/p&gt;
&lt;p&gt;By the way ‚Äì what‚Äôs the 1.96 number from? It‚Äôs directly related to the size of the uncertainty estimate. With  you will cover about 95% of the probability distribution.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;24&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;plot_confidence_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observations_by_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observations_by_group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lo_bound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hi_bound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;series&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;observations_by_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;lo_bound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.96&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hi_bound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.96&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo_bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi_bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Confidence interval (normal)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;observations_by_month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;observations_by_month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot_confidence_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observations_by_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_9_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Note that this shows the uncertainty of the &lt;em&gt;mean&lt;/em&gt; and that this is not the same thing as the &lt;em&gt;distribution of the data&lt;/em&gt; itself. That‚Äôs why you see far fewer than 95% of the points within the red shaded area. If we added more and more points, the red shaded area would get more and more narrow, whereas the blue dots would still have about the same range. However the true mean should in theory be within the red shaded area 95% of the time.&lt;/p&gt;
&lt;p&gt;I mentioned earlier that the formula for confidence interval only applies under some mild assumptions. What are those? It‚Äôs the assumption of &lt;em&gt;normality&lt;/em&gt;. For a large number of observations, this is nothing to worry about, and this is due to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Central_limit_theorem&quot;&gt;central limit theorem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let‚Äôs look at a type of dataset that I often work on: conversions. For the sake of the argument, let‚Äôs say we‚Äôre running an A/B test that has some impact, and that we‚Äôre trying to understand the impact on conversion rate &lt;em&gt;by state&lt;/em&gt;. Conversion is always 0 or 1. The code to generate this data set isn‚Äôt super important, so don‚Äôt pay too much attention to this:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;STATES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'FL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TX'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'OH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GROUPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'control'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_binary_categorical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STATES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUPS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;zs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b_std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Don't pay too much attention to this code. The main thing happens in&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# numpy.random.binomial, which is where we draw the &quot;k out of n&quot; outcomes.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;e_obs_per_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exponential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state_biases&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state_biases&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;poisson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e_obs_per_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For each state and each ‚Äúgroup‚Äù (test and control) we generated  users, out of which  have converted. Let‚Äôs plot the conversion rate per state to see what‚Äôs going on!&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_binary_categorical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STATES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Conversion rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_14_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;How do we compute confidence intervals for these numbers? We could of course use the method I just covered further up where we compute the mean and the standard deviations. But in this case there‚Äôs a trick we can use!&lt;/p&gt;
&lt;p&gt;Since all outcomes are 0 or 1, and drawn with the same (unknown) probability, we know that the number of ones and zeros follows a &lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;binomial distribution&lt;/a&gt;. This means that the confidence interval of a ‚Äú out of ‚Äù scenario is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Beta_distribution&quot;&gt;Beta distribution&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I‚Äôve personally benefitted from memorizing the formula for the confidence interval and think I probably use it more than the previous (Normal based) one. In particular all you need to remember is&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ppf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.025&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.975&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;array([0.00629335, 0.07107612])
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will compute a 95% confidence interval if you plug in values for  and . In this case we see that if we have 100 website visitors and 3 of them purchased the product, then range is 0.6%-7.1%. Let‚Äôs try this for our dataset:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ppf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.025&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ppf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.975&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STATES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yerr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elinewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Conversion rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_18_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Nice! üëå&lt;/p&gt;
&lt;h2 id=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/h2&gt;
&lt;p&gt;Another approach that can be useful is bootstrapping. It allows you do compute the same statistics without memorizing any formulas. The idea is to compute the mean, but do it for &lt;em&gt;bootstraps&lt;/em&gt;, where each bootstrap is a random sample (with replacement) from our observations. For every bootstrap, we compute a mean, and then we take the mean in the 97.5th and the 2.5th percentile as the confidence interval:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;lo_bound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hi_bound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observations_by_month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;series&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;observations_by_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bootstrapped_means&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# sample with replacement&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bootstrapped_means&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lo_bound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bootstrapped_means&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hi_bound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bootstrapped_means&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;97.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo_bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi_bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Confidence interval'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_20_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Miraculously, this charts look very similar to the one before! Just kidding ‚Äì that was sort of expected :)&lt;/p&gt;
&lt;p&gt;Bootstrapping is nice because it lets you dodge any questions about what probability distribution the data is generated from. It‚Äôs basically plug and play, and works on almost everything, though it can be a bit slow.&lt;/p&gt;
&lt;p&gt;‚ò† Be aware though that there‚Äôs a &lt;em&gt;danger zone&lt;/em&gt; of bootstrapping. My understanding is that bootstrapping will &lt;em&gt;converge&lt;/em&gt; towards the correct estimates as the number of samples goes to infinity, but if you‚Äôre working with small samples, you can get really wonky results. I generally never trust bootstrapping for anything less than say 50 samples, and you probably shouldn‚Äôt do that either.&lt;/p&gt;
&lt;p&gt;As a side note, Seaborn‚Äôs &lt;code class=&quot;highlighter-rouge&quot;&gt;barplot&lt;/code&gt; actually plots confidence intervals using bootstrapping:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;seaborn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_23_2.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Again, Seaborn is great for exploratory analysis, and some of its charts can do basic statistics.&lt;/p&gt;

&lt;p&gt;Let‚Äôs crank it up a notch. We‚Äôre going to fit a straight line to this cloud of points.&lt;/p&gt;
&lt;p&gt;There‚Äôs some smart ways you can implement linear regression so that it‚Äôs extremely fast, but we‚Äôre not going to use those methods because they don‚Äôt generalize very well.&lt;/p&gt;
&lt;p&gt;I‚Äôm going to do it in what I think of as the most general possible way. We‚Äôre going to define a &lt;em&gt;model&lt;/em&gt; (in this case a straight line), a &lt;em&gt;loss function&lt;/em&gt; (squared deviations from this straight line) and then optimize it using a general-purpose solver (scipy.optimize.minimize).&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_time_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;l2_loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tup&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l2_loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_26_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;linear-regression-with-uncertainty-using-maximum-likelihood&quot;&gt;Linear regression with uncertainty, using maximum likelihood&lt;/h2&gt;
&lt;p&gt;We just fit  and  but there‚Äôs no uncertainty estimates here. There‚Äôs several things we could estimate uncertainties for, but let‚Äôs start with the &lt;em&gt;uncertainty of the predicted values&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We can do that by fitting a normal distribution around the line &lt;em&gt;at the same time&lt;/em&gt; as we‚Äôre fitting  and . I‚Äôm going to do this using &lt;a href=&quot;https://en.wikipedia.org/wiki/Maximum_likelihood_estimation&quot;&gt;Maximum Likelihood&lt;/a&gt;. If you‚Äôre not familiar with this method, don‚Äôt be scared! If there‚Äôs &lt;em&gt;any&lt;/em&gt; method in statistics that I‚Äôve found as easily accessible (it‚Äôs basic probability theory) and useful, it‚Äôs this method.&lt;/p&gt;
&lt;p&gt;In fact, minimizing squared loss (which we just did, in the previous snippet) is actually a special case of maximum likelihood! Minimizing the squared loss is the same thing as &lt;em&gt;maximizing the logarithm of the probability of all the data.&lt;/em&gt; This is usually called the ‚Äúlog likelihood‚Äù.&lt;/p&gt;
&lt;p&gt;So we already have an expression to minimize the squared loss. If we make the variance an unknown variable  we can fit that at the same time! The quantity we‚Äôre going to try to minimize now turns into&lt;/p&gt;
&lt;p&gt;Where  are the predicted values by our model. Let‚Äôs try to fit that!&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;41&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scipy.optimize&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;neg_log_likelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Since sigma &amp;gt; 0, we use use log(sigma) as the parameter instead.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# That way we have an unconstrained problem.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tup&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
        &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_sigma_hat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;neg_log_likelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sigma_hat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_sigma_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.96&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.96&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_28_2.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The uncertainty estimate here isn‚Äôt actually üíØ because it doesn‚Äôt take into account the uncertainty of , , and  in itself. It‚Äôs a decent approximation, but to get it right we need to do those things at the same time. So let‚Äôs do it.&lt;/p&gt;

&lt;p&gt;So let‚Äôs take it to the next level and try to estimate the uncertainty estimate of  and &lt;em&gt;and&lt;/em&gt; ! I think this will show how bootstrapping is basically cookie cutter ‚Äî you can plug it into almost anything in order to estimate uncertainties.&lt;/p&gt;
&lt;p&gt;For every bootstrap estimate, I‚Äôm going to draw a line. We can also take all those lines and compute a confidence interval:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# sample with replacement&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xs_bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ys_bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;l2_loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs_bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys_bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Plot individual lines&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curve&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Plot 95% confidence interval&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;97.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_31_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Whoa, what‚Äôs going on here? This uncertainty is &lt;em&gt;very&lt;/em&gt; different from the earlier plot. This seems confusing until you realize that they show two very different things:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The first plot finds &lt;em&gt;one&lt;/em&gt; solution of  and  and shows the uncertainty of the &lt;em&gt;predictions.&lt;/em&gt; So, if you‚Äôre asked what‚Äôs the range of the elephant‚Äôs weight in the next month, you can get it from the chart.&lt;/li&gt;
&lt;li&gt;The second plot finds &lt;em&gt;many&lt;/em&gt; solutions of  and , and shows the uncertainty of . So this answers a different question ‚Äì what‚Äôs the trend of the elephant‚Äôs weight over time and what‚Äôs the uncertainty &lt;em&gt;of the trend&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It turns out we can combine the two approaches and make it even more complicated by fitting drawing bootstrap samples and fitting , , and  at the same time. Then for each of those estimates, we can predict new values . Let‚Äôs do it üòé.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# sample with replacement&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xs_bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ys_bootstrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_sigma_hat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scipy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;neg_log_likelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs_bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys_bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# Note what's going on here: we're _adding_ the random term&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# to the predictions!&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_sigma_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Plot 95% confidence interval&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;97.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_33_2.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Nice! It‚Äôs getting serious now üòÖ ‚Äì you can see a hyperbolic shape if you look closely!&lt;/p&gt;
&lt;p&gt;The trick here is that for every bootstrap estimates of  we also need to draw random predictions. As you can see in the code, we‚Äôre actually adding random normal variables to the predicted values for . That‚Äôs also why the shape end up a big squiggly.&lt;/p&gt;
&lt;p&gt;Unfortunately bootstrapping turns out to be fairly slow for this problem ‚Äì for each of the bootstraps, we need to fit a model. Let‚Äôs look at another option:&lt;/p&gt;

&lt;p&gt;It‚Äôs going to get a bit wilder now. I‚Äôm going to switch to some Bayesian methods, where we estimate , , and  by drawing samples. It‚Äôs similar to bootstrapping, but MCMC has far better theoretical underpinnings (we are sampling from a ‚Äúposterior distribution‚Äù using Bayes rule), and it‚Äôs often orders of magnitude faster.&lt;/p&gt;
&lt;p&gt;For this, we‚Äôre going to use a library called &lt;a href=&quot;http://emcee.readthedocs.io/&quot;&gt;emcee&lt;/a&gt; which I‚Äôve found pretty easy to use. All it needs is a log-likelihood function, which as it turns out we just defined earlier! We just need to take the &lt;em&gt;negative&lt;/em&gt; of it.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;25&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;emcee&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_time_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_likelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neg_log_likelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwalkers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nwalkers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sampler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emcee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnsembleSampler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nwalkers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_likelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sampler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run_mcmc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let‚Äôs plot the sampled values for  and !&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;23&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Grab the last 10 from each walker&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sampler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_sigma&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weigh of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_39_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There‚Äôs a bit more stuff that goes into these methods ‚Äì the sampling is a bit finicky and requires a bit of handholding to get to work well. I don‚Äôt want to get into all the specifics, and I‚Äôm a layman myself. But it can often be several orders of magnitude faster than booststrapping and it also handles situation with less data much better.&lt;/p&gt;
&lt;p&gt;We end up with samples from the posterior distribution of . We can look at the probability distribution of these unknowns:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Grab slightly more samples this time&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sampler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;k_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_sigma_samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;seaborn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'k'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;seaborn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;seaborn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_sigma_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sigma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_41_2.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can see that these distribution sort of center around , , and  which is how we constructed them in the first place. That‚Äôs somewhat reassuring!&lt;/p&gt;
&lt;p&gt;Finally, we can plot the full uncertainty of predictions using the same methodology as for boostraps:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;28&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sampler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_sigma&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Plot 95% confidence interval&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;97.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Weight of elephant (kg)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://erikbern.com/assets/uncertainty/output_43_1.png&quot; alt=&quot;png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;These Bayesian methods don‚Äôt end here. In particular there‚Äôs several libraries that work with these kind of problems. It turns out that if you express the problem in a more structured way (not just a negative log-likelihood function), you can make the sampling scale to large problems (as in, thousands of unknown parameters). For Python there‚Äôs &lt;a href=&quot;https://docs.pymc.io/&quot;&gt;PyMC3&lt;/a&gt; and &lt;a href=&quot;http://pystan.readthedocs.io/en/latest/&quot;&gt;PyStan&lt;/a&gt;, as well as the slightly more experimental (?) &lt;a href=&quot;http://edwardlib.org/&quot;&gt;Edward&lt;/a&gt; and &lt;a href=&quot;http://pyro.ai/&quot;&gt;Pyro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I‚Äôve taken you a bit down the rabbit hole ‚Äì but it goes much further. In fact, forcing myself to estimate uncertainties for anything I do has been a great forcing function to learn a ton about statistics that I‚Äôve been deferring for too long and I recommend it to anyone who is interested.&lt;/p&gt;
&lt;p&gt;Making decisions based on data is hard! But if we were a bit more disciplined about quantifying the uncertainty, we might make better decisions. It‚Äôs not easy right now to do this, but I &lt;em&gt;really&lt;/em&gt; hope we‚Äôll see a popularization of these methods using more accessible tools.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/jim_savage_&quot;&gt;Jim Savage&lt;/a&gt; for some feedback on an earlier draft! All the code is available as a &lt;a href=&quot;https://github.com/erikbern/uncertainty&quot;&gt;notebook on Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I‚Äôm looking for data engineers to join my team at &lt;a href=&quot;https://better.com&quot;&gt;Better&lt;/a&gt;! Feel free to reach out at erik at better dot com, or also DM on Twitter, or &lt;a href=&quot;https://boards.greenhouse.io/better/jobs/960417&quot;&gt;apply directly&lt;/a&gt; if you want to. You can read a bit more about the role in a &lt;a href=&quot;https://erikbern.com/2018/01/28/im-looking-for-data-engineers.html&quot;&gt;previous blog post&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 06:39:09 +0000</pubDate>
<dc:creator>mzl</dc:creator>
<og:title>The hacker‚Äôs guide to uncertainty estimates</og:title>
<og:description>I made a New Year‚Äôs resolution: every plot I make during 2018 will contain uncertainty estimates. Nine months in and I have learned a lot, so I put together a summary of some of the most useful methods.</og:description>
<og:url>https://erikbern.com/2018/10/08/the-hackers-guide-to-uncertainty-estimates.html</og:url>
<og:image>https://erikbern.com/assets/uncertainty/output_39_1.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://erikbern.com/2018/10/08/the-hackers-guide-to-uncertainty-estimates.html</dc:identifier>
</item>
<item>
<title>Introduction to Differential Equations (2008)</title>
<link>http://tutorial.math.lamar.edu/Classes/DE/Definitions.aspx</link>
<guid isPermaLink="true" >http://tutorial.math.lamar.edu/Classes/DE/Definitions.aspx</guid>
<description>&lt;span id=&quot;SHLink_NoteMobile&quot; class=&quot;SH-Link content-note-link-mobile&quot;&gt;Show Mobile Notice&lt;/span&gt;&lt;span id=&quot;SHImg_NoteMobile&quot; class=&quot;fas fa-caret-right SH-padding content-note-link-mobile&quot; aria-hidden=&quot;true&quot;/&gt; &lt;span id=&quot;SHALink_S_Note&quot; class=&quot;SH-Link SH-Hide SH-Bracket&quot;&gt;Show All Notes&lt;/span&gt;¬†&lt;span id=&quot;SHALink_H_Note&quot; class=&quot;SH-Link SH-Hide SH-Bracket&quot;&gt;Hide All Notes&lt;/span&gt;
&lt;div id=&quot;SHObj_NoteMobile&quot; class=&quot;content-note-container content-note-container-mobile&quot; readability=&quot;35&quot;&gt;

&lt;p&gt;You appear to be on a device with a &quot;narrow&quot; screen width (&lt;em&gt;i.e.&lt;/em&gt; you are probably on a mobile phone). Due to the nature of the mathematics on this site it is best views in landscape mode. If your device is not in landscape mode many of the equations will run off the side of your device (should be able to scroll to see them) and some of the menu items will be cut off due to the narrow screen width.&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;Section 1-1 : Definitions&lt;/h3&gt;
&lt;h4&gt;Differential Equation&lt;/h4&gt;
&lt;p&gt;The first definition that we should cover should be that of &lt;strong&gt;differential equation&lt;/strong&gt;. A differential equation is any equation which contains derivatives, either ordinary derivatives or partial derivatives.&lt;/p&gt;

&lt;p&gt;There is one differential equation that everybody probably knows, that is Newton‚Äôs Second Law of Motion. If an object of mass \(m\) is moving with acceleration \(a\) and being acted on with force \(F\) then Newton‚Äôs Second Law tells us.&lt;/p&gt;
\[\begin{equation}F = ma \label{eq:eq1} \end{equation}\]
&lt;p&gt;To see that this is in fact a differential equation we need to rewrite it a little. First, remember that we can rewrite the acceleration, \(a\), in one of two ways.&lt;/p&gt;
\[\begin{equation}a = \frac{{dv}}{{dt}}\hspace{0.25in}{\mbox{OR}}\hspace{0.25in}\,\,\,\,\,\,a = \frac{{{d^2}u}}{{d{t^2}}} \label{eq:eq2}\end{equation}\]
&lt;p&gt;Where \(v\) is the velocity of the object and \(u\) is the position function of the object at any time \(t\). We should also remember at this point that the force, \(F\) may also be a function of time, velocity, and/or position.&lt;/p&gt;
&lt;p&gt;So, with all these things in mind Newton‚Äôs Second Law can now be written as a differential equation in terms of either the velocity, \(v\), or the position, \(u\), of the object as follows.&lt;/p&gt;
\[\begin{equation}m\frac{{dv}}{{dt}} = F\left( {t,v} \right)\label{eq:eq3}\end{equation}\] \[\begin{equation}m\frac{{{d^2}u}}{{d{t^2}}} = F\left( {t,u,\frac{{du}}{{dt}}} \right) \label{eq:eq4}\end{equation}\]
&lt;p&gt;So, here is our first differential equation. We will see both forms of this in later chapters.&lt;/p&gt;
&lt;p&gt;Here are a few more examples of differential equations.&lt;/p&gt;
\[\begin{equation}ay'' + by' + cy = g\left( t \right)\label{eq:eq5}\end{equation}\] \[\begin{equation}\sin \left( y \right)\frac{{{d^2}y}}{{d{x^2}}} = \left( {1 - y} \right)\frac{{dy}}{{dx}} + {y^2}{{\bf{e}}^{ - 5y}}\label{eq:eq6}\end{equation}\] \[\begin{equation}{y^{\left( 4 \right)}} + 10y''' - 4y' + 2y = \cos \left( t \right) \label{eq:eq7}\end{equation}\] \[\begin{equation}{\alpha ^2}\frac{{{\partial ^2}u}}{{\partial {x^2}}} = \frac{{\partial u}}{{\partial t}}\label{eq:eq8}\end{equation}\] \[\begin{equation}{a^2}{u_{xx}} = {u_{tt}}\label{eq:eq9}\end{equation}\] \[\begin{equation}\frac{{{\partial ^3}u}}{{{\partial ^2}x\partial t}} = 1 + \frac{{\partial u}}{{\partial y}} \label{eq:eq10}\end{equation}\]
&lt;h4&gt;Order&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;order&lt;/strong&gt; of a differential equation is the largest derivative present in the differential equation. In the differential equations listed above \(\eqref{eq:eq3}\) is a first order differential equation, \(\eqref{eq:eq4}\), \(\eqref{eq:eq5}\), \(\eqref{eq:eq6}\), \(\eqref{eq:eq8}\), and \(\eqref{eq:eq9}\) are second order differential equations, \(\eqref{eq:eq10}\) is a third order differential equation and \(\eqref{eq:eq7}\) is a fourth order differential equation.&lt;/p&gt;
&lt;p&gt;Note that the order does not depend on whether or not you‚Äôve got ordinary or partial derivatives in the differential equation.&lt;/p&gt;
&lt;p&gt;We will be looking almost exclusively at first and second order differential equations in these notes. As you will see most of the solution techniques for second order differential equations can be easily (and naturally) extended to higher order differential equations and we‚Äôll discuss that idea later on.&lt;/p&gt;
&lt;h4&gt;Ordinary and Partial Differential Equations&lt;/h4&gt;
&lt;p&gt;A differential equation is called an &lt;strong&gt;ordinary differential equation&lt;/strong&gt;, abbreviated by &lt;strong&gt;ode,&lt;/strong&gt; if it has ordinary derivatives in it. Likewise, a differential equation is called a &lt;strong&gt;partial differential equation&lt;/strong&gt;, abbreviated by &lt;strong&gt;pde,&lt;/strong&gt; if it has partial derivatives in it. In the differential equations above \(\eqref{eq:eq3}\) - \(\eqref{eq:eq7}\) are ode‚Äôs and \(\eqref{eq:eq8}\) - \(\eqref{eq:eq10}\) are pde‚Äôs.&lt;/p&gt;
&lt;p&gt;The vast majority of these notes will deal with ode‚Äôs. The only exception to this will be the last chapter in which we‚Äôll take a brief look at a common and basic solution technique for solving pde‚Äôs.&lt;/p&gt;
&lt;h4&gt;Linear Differential Equations&lt;/h4&gt;
&lt;p&gt;A &lt;strong&gt;linear differential equation&lt;/strong&gt; is any differential equation that can be written in the following form.&lt;/p&gt;
\[\begin{equation} {a_n}\left( t \right){y^{\left( n \right)}}\left( t \right) + {a_{n - 1}}\left( t \right){y^{\left( {n - 1} \right)}}\left( t \right) + \cdots + {a_1}\left( t \right)y'\left( t \right) + {a_0}\left( t \right)y\left( t \right) = g\left( t \right) \label{eq:eq11}\end{equation}\]
&lt;p&gt;The important thing to note about linear differential equations is that there are no products of the function, \(y\left( t \right)\), and its derivatives and neither the function or its derivatives occur to any power other than the first power. Also note that neither the function or its derivatives are ‚Äúinside‚Äù another function, for example, \(\sqrt {y'} \) or \({{\bf{e}}^y}\).&lt;/p&gt;
&lt;p&gt;The coefficients \({a_0}\left( t \right),\,\, \ldots \,\,,{a_n}\left( t \right)\) and \(g\left( t \right)\) can be zero or non-zero functions, constant or non-constant functions, linear or non-linear functions. Only the function,\(y\left( t \right)\), and its derivatives are used in determining if a differential equation is linear.&lt;/p&gt;
&lt;p&gt;If a differential equation cannot be written in the form, \(\eqref{eq:eq11}\) then it is called a &lt;strong&gt;non-linear&lt;/strong&gt; differential equation.&lt;/p&gt;
&lt;p&gt;In \(\eqref{eq:eq5}\) - \(\eqref{eq:eq7}\) above only \(\eqref{eq:eq6}\) is non-linear, the other two are linear differential equations. We can‚Äôt classify \(\eqref{eq:eq3}\) and \(\eqref{eq:eq4}\) since we do not know what form the function \(F\) has. These could be either linear or non-linear depending on \(F\).&lt;/p&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;A &lt;strong&gt;solution&lt;/strong&gt; to a differential equation on an interval \(\alpha &amp;lt; t &amp;lt; \beta \) is any function \(y\left( t \right)\) which satisfies the differential equation in question on the interval \(\alpha &amp;lt; t &amp;lt; \beta \). It is important to note that solutions are often accompanied by intervals and these intervals can impart some important information about the solution. Consider the following example.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;9&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 1&lt;/span&gt; Show that \(y\left( x \right) = {x^{ - \,\frac{3}{2}}}\) is a solution to \(4{x^2}y'' + 12xy' + 3y = 0\) for \(x &amp;gt; 0\).
&lt;div class=&quot;example-content&quot; readability=&quot;48&quot;&gt;&lt;span id=&quot;SHLink_Soln1&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln1&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln1&quot; class=&quot;soln-content&quot; readability=&quot;66&quot;&gt;
&lt;p&gt;We‚Äôll need the first and second derivative to do this.&lt;/p&gt;
\[y'\left( x \right) = - \frac{3}{2}{x^{ - \frac{5}{2}}}\hspace{0.25in}y''\left( x \right) = \frac{{15}}{4}{x^{ - \frac{7}{2}}}\]
&lt;p&gt;Plug these as well as the function into the differential equation.&lt;/p&gt;
\[\begin{align*}4{x^2}\left( {\frac{{15}}{4}{x^{ - \,\frac{7}{2}}}} \right) + 12x\left( { - \frac{3}{2}{x^{ - \,\frac{5}{2}}}} \right) + 3\left( {{x^{ - \,\frac{3}{2}}}} \right) &amp;amp; = 0\\ 15{x^{ - \,\frac{3}{2}}} - 18{x^{ - \,\frac{3}{2}}} + 3{x^{ - \,\frac{3}{2}}} &amp;amp; = 0\\ 0 &amp;amp; = 0\end{align*}\]
&lt;p&gt;So, \(y\left( x \right) = {x^{ - \frac{3}{2}}}\) does satisfy the differential equation and hence is a solution. Why then did we include the condition that \(x &amp;gt; 0\)? We did not use this condition anywhere in the work showing that the function would satisfy the differential equation.&lt;/p&gt;
&lt;p&gt;To see why recall that&lt;/p&gt;
\[y\left( x \right) = {x^{ - \frac{3}{2}}} = \frac{1}{{\sqrt {{x^3}} }}\]
&lt;p&gt;In this form it is clear that we‚Äôll need to avoid \(x = 0\) at the least as this would give division by zero.&lt;/p&gt;
&lt;p&gt;Also, there is a general rule of thumb that we‚Äôre going to run with in this class. This rule of thumb is : Start with real numbers, end with real numbers. In other words, if our differential equation only contains real numbers then we don‚Äôt want solutions that give complex numbers. So, in order to avoid complex numbers we will also need to avoid negative values of \(x\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So, we saw in the last example that even though a function may symbolically satisfy a differential equation, because of certain restrictions brought about by the solution we cannot use all values of the independent variable and hence, must make a restriction on the independent variable. This will be the case with many solutions to differential equations.&lt;/p&gt;
&lt;p&gt;In the last example, note that there are in fact many more possible solutions to the differential equation given. For instance, all of the following are also solutions&lt;/p&gt;
\[\begin{align*}y\left( x \right) &amp;amp; = {x^{ - \frac{1}{2}}}\\ y\left( x \right) &amp;amp; = - 9{x^{ - \frac{3}{2}}}\\ y\left( x \right) &amp;amp; = 7{x^{ - \frac{1}{2}}}\\ y\left( x \right) &amp;amp; = - 9{x^{ - \frac{3}{2}}} + 7{x^{ - \frac{1}{2}}}\end{align*}\]
&lt;p&gt;We‚Äôll leave the details to you to check that these are in fact solutions. Given these examples can you come up with any other solutions to the differential equation? There are in fact an infinite number of solutions to this differential equation.&lt;/p&gt;
&lt;p&gt;So, given that there are an infinite number of solutions to the differential equation in the last example (provided you believe us when we say that anyway‚Ä¶.) we can ask a natural question. Which is the solution that we want or does it matter which solution we use? This question leads us to the next definition in this section.&lt;/p&gt;

&lt;h4&gt;Initial Condition(s)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Initial Condition(s)&lt;/strong&gt; are a condition, or set of conditions, on the solution that will allow us to determine which solution that we are after. Initial conditions (often abbreviated i.c.‚Äôs when we‚Äôre feeling lazy‚Ä¶) are of the form,&lt;/p&gt;
\[y\left( {{t_0}} \right) = {y_0}\hspace{0.25in}{\mbox{and/or }}{y^{\left( k \right)}}\left( {{t_0}} \right) = {y_k}\]
&lt;p&gt;So, in other words, initial conditions are values of the solution and/or its derivative(s) at specific points. As we will see eventually, solutions to ‚Äúnice enough‚Äù differential equations are unique and hence only one solution will meet the given initial conditions.&lt;/p&gt;
&lt;p&gt;The number of initial conditions that are required for a given differential equation will depend upon the order of the differential equation as we will see.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;10&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 2&lt;/span&gt; \(y\left( x \right) = {x^{ - \frac{3}{2}}}\) is a solution to \(4{x^2}y'' + 12xy' + 3y = 0\), \(y\left( 4 \right) = \frac{1}{8}\), and \(y'\left( 4 \right) = - \frac{3}{{64}}\).
&lt;div class=&quot;example-content&quot; readability=&quot;35.5&quot;&gt;&lt;span id=&quot;SHLink_Soln2&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln2&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln2&quot; class=&quot;soln-content&quot; readability=&quot;41&quot;&gt;
&lt;p&gt;As we saw in previous example the function is a solution and we can then note that&lt;/p&gt;
\[\begin{align*}y\left( 4 \right) &amp;amp; = {4^{ - \frac{3}{2}}} = \frac{1}{{{{\left( {\sqrt 4 } \right)}^3}}} = \frac{1}{8}\\ y'\left( 4 \right) &amp;amp; = - \frac{3}{2}{4^{ - \frac{5}{2}}} = - \frac{3}{2}\frac{1}{{{{\left( {\sqrt 4 } \right)}^5}}} = - \frac{3}{{64}}\end{align*}\]
&lt;p&gt;and so this solution also meets the initial conditions of \(y\left( 4 \right) = \frac{1}{8}\) and \(y'\left( 4 \right) = - \frac{3}{{64}}\). In fact, \(y\left( x \right) = {x^{ - \frac{3}{2}}}\) is the only solution to this differential equation that satisfies these two initial conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;Initial Value Problem&lt;/h4&gt;
&lt;p&gt;An &lt;strong&gt;Initial Value Problem&lt;/strong&gt; (or &lt;strong&gt;IVP&lt;/strong&gt;) is a differential equation along with an appropriate number of initial conditions.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 3&lt;/span&gt; The following is an IVP.
&lt;p&gt;\[4{x^2}y'' + 12xy' + 3y = 0\hspace{0.25in}y\left( 4 \right) = \frac{1}{8},\,\,\,\,y'\left( 4 \right) = - \frac{3}{{64}}\]&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;example&quot; readability=&quot;14&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 4&lt;/span&gt; Here‚Äôs another IVP.
&lt;p&gt;\[2t\,y' + 4y = 3\hspace{0.25in}\,\,\,\,\,\,y\left( 1 \right) = - 4\]&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As we noted earlier the number of initial conditions required will depend on the order of the differential equation.&lt;/p&gt;

&lt;h4&gt;Interval of Validity&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;interval of validity&lt;/strong&gt; for an IVP with initial condition(s)&lt;/p&gt;
\[y\left( {{t_0}} \right) = {y_0}\hspace{0.25in}{\mbox{and/or }}{y^{\left( k \right)}}\left( {{t_0}} \right) = {y_k}\]
&lt;p&gt;is the largest possible interval on which the solution is valid and contains \({t_0}\). These are easy to define, but can be difficult to find, so we‚Äôre going to put off saying anything more about these until we get into actually solving differential equations and need the interval of validity.&lt;/p&gt;
&lt;h4&gt;General Solution&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;general solution&lt;/strong&gt; to a differential equation is the most general form that the solution can take and doesn‚Äôt take any initial conditions into account.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;12&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 5&lt;/span&gt; \(\displaystyle y\left( t \right) = \frac{3}{4} + \frac{c}{{{t^2}}}\) is the general solution to \[2t\,y' + 4y = 3\]
&lt;div class=&quot;example-content&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;We‚Äôll leave it to you to check that this function is in fact a solution to the given differential equation. In fact, all solutions to this differential equation will be in this form. This is one of the first differential equations that you will learn how to solve and you will be able to verify this shortly for yourself.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Actual Solution&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;actual solution&lt;/strong&gt; to a differential equation is the specific solution that not only satisfies the differential equation, but also satisfies the given initial condition(s).&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;15&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 6&lt;/span&gt; What is the actual solution to the following IVP? \[2t\,y' + 4y = 3\hspace{0.25in}\,\,\,\,\,\,y\left( 1 \right) = - 4\]
&lt;div class=&quot;example-content&quot; readability=&quot;38.5&quot;&gt;&lt;span id=&quot;SHLink_Soln6&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln6&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln6&quot; class=&quot;soln-content&quot; readability=&quot;47&quot;&gt;
&lt;p&gt;This is actually easier to do than it might at first appear. From the previous example we already know (well that is provided you believe our solution to this example‚Ä¶) that all solutions to the differential equation are of the form.&lt;/p&gt;
\[y\left( t \right) = \frac{3}{4} + \frac{c}{{{t^2}}}\]
&lt;p&gt;All that we need to do is determine the value of \(c\) that will give us the solution that we‚Äôre after. To find this all we need do is use our initial condition as follows.&lt;/p&gt;
\[ - 4 = y\left( 1 \right) = \frac{3}{4} + \frac{c}{{{1^2}}}\hspace{0.25in} \Rightarrow \hspace{0.25in}c = - 4 - \frac{3}{4} = - \frac{{19}}{4}\]
&lt;p&gt;So, the actual solution to the IVP is.&lt;/p&gt;
\[y\left( t \right) = \frac{3}{4} - \frac{{19}}{{4{t^2}}}\]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;From this last example we can see that once we have the general solution to a differential equation finding the actual solution is nothing more than applying the initial condition(s) and solving for the constant(s) that are in the general solution.&lt;/p&gt;

&lt;h4&gt;Implicit/Explicit Solution&lt;/h4&gt;
&lt;p&gt;In this case it‚Äôs easier to define an explicit solution, then tell you what an implicit solution isn‚Äôt, and then give you an example to show you the difference. So, that‚Äôs what we‚Äôll do.&lt;/p&gt;
&lt;p&gt;An &lt;strong&gt;explicit solution&lt;/strong&gt; is any solution that is given in the form \(y = y\left( t \right)\). In other words, the only place that \(y\) actually shows up is once on the left side and only raised to the first power. An &lt;strong&gt;implicit solution&lt;/strong&gt; is any solution that isn‚Äôt in explicit form. Note that it is possible to have either general implicit/explicit solutions and actual implicit/explicit solutions.&lt;/p&gt;

&lt;div class=&quot;example&quot; readability=&quot;16.5&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 7&lt;/span&gt; \({y^2} = {t^2} - 3\) is the actual implicit solution to \(y' = \frac{t}{y},\,\,\,\,\,y\left( 2 \right) = - 1\)
&lt;div class=&quot;example-content&quot; readability=&quot;35&quot;&gt;
&lt;p&gt;At this point we will ask that you trust us that this is in fact a solution to the differential equation. You will learn how to get this solution in a later section. The point of this example is that since there is a \({y^2}\) on the left side instead of a single \(y\left( t \right)\)this is not an explicit solution!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;example&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;example-title&quot;&gt;Example 8&lt;/span&gt; Find an actual explicit solution to \(y' = \frac{t}{y},\,\,\,\,\,y\left( 2 \right) = - 1\).
&lt;div class=&quot;example-content&quot; readability=&quot;37.5&quot;&gt;&lt;span id=&quot;SHLink_Soln8&quot; class=&quot;SH-Link soln-title&quot;&gt;Show Solution&lt;/span&gt; &lt;span id=&quot;SHImg_Soln8&quot; class=&quot;fas fa-caret-right&quot; aria-hidden=&quot;true&quot;/&gt;
&lt;div id=&quot;SHObj_Soln8&quot; class=&quot;soln-content&quot; readability=&quot;45&quot;&gt;
&lt;p&gt;We already know from the previous example that an implicit solution to this IVP is \({y^2} = {t^2} - 3\). To find the explicit solution all we need to do is solve for \(y\left( t \right)\).&lt;/p&gt;
\[y\left( t \right) = \pm \sqrt {{t^2} - 3} \]
&lt;p&gt;Now, we‚Äôve got a problem here. There are two functions here and we only want one and in fact only one will be correct! We can determine the correct function by reapplying the initial condition. Only one of them will satisfy the initial condition.&lt;/p&gt;
&lt;p&gt;In this case we can see that the ‚Äú-‚Äú solution will be the correct one. The actual explicit solution is then&lt;/p&gt;
\[y\left( t \right) = - \sqrt {{t^2} - 3} \]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this case we were able to find an explicit solution to the differential equation. It should be noted however that it will not always be possible to find an explicit solution.&lt;/p&gt;
&lt;p&gt;Also, note that in this case we were only able to get the explicit actual solution because we had the initial condition to help us determine which of the two functions would be the correct solution.&lt;/p&gt;
&lt;p&gt;We‚Äôve now gotten most of the basic definitions out of the way and so we can move onto other topics.&lt;/p&gt;
</description>
<pubDate>Wed, 10 Oct 2018 06:13:28 +0000</pubDate>
<dc:creator>peter_d_sherman</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://tutorial.math.lamar.edu/Classes/DE/Definitions.aspx</dc:identifier>
</item>
</channel>
</rss>