<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>I Quit Google Over Its Censored Chinese Search Engine</title>
<link>https://theintercept.com/2018/12/01/google-china-censorship-human-rights/</link>
<guid isPermaLink="true" >https://theintercept.com/2018/12/01/google-china-censorship-human-rights/</guid>
<description>&lt;div data-reactid=&quot;183&quot; readability=&quot;89.784162098669&quot;&gt;
&lt;div class=&quot;img-wrap align-center width-fixed&quot; readability=&quot;11&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-224833&quot; src=&quot;https://theintercept.imgix.net/wp-uploads/sites/1/2018/11/GettyImages-1040611132-1543422826.jpg?auto=compress%2Cformat&amp;amp;q=90&amp;amp;w=1024&amp;amp;h=635&quot; alt=&quot;A woman and her child play on a Google sign at the World Artificial Intelligence Conference (WAIC) in Shanghai on September 26, 2018. (Photo by Johannes EISELE / AFP) (Photo credit should read JOHANNES EISELE/AFP/Getty Images)&quot;/&gt;&lt;p class=&quot;caption&quot;&gt;A woman and her child play on a Google sign at the World Artificial Intelligence Conference in Shanghai on Sept. 26, 2018.&lt;/p&gt;
&lt;p class=&quot;caption source&quot;&gt;Photo: Johannes Eisele/AFP/Getty Images&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;u&gt;John Hennessy, the&lt;/u&gt; chair of Google’s parent company, Alphabet Inc., was &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-11-20/alphabet-chairman-struggles-with-google-ceo-s-china-strategy&quot;&gt;recently asked&lt;/a&gt; whether Google providing a search engine in China that censored results would provide a net benefit for Chinese users. “I don’t know the answer to that. I think it’s — I think it’s a legitimate question,” he responded. “Anybody who does business in China compromises some of their core values. Every single company, because the laws in China are quite a bit different than they are in our own country.”&lt;/p&gt;
&lt;p&gt;Hennessy’s remarks were in relation to &lt;a href=&quot;https://theintercept.com/2018/08/01/google-china-search-engine-censorship/&quot;&gt;Project Dragonfly&lt;/a&gt;, a once-secret project within Google to build a version of its search engine that meets the demands of the ruling Chinese Communist Party — namely, that Google proactively censor “sensitive” speech and comply with China’s data provenance and surveillance laws.&lt;/p&gt;
&lt;blockquote class=&quot;stylized pull-right&quot; data-shortcode-type=&quot;pullquote&quot; data-pull=&quot;right&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;I worked as a research scientist at Google when Dragonfly was revealed — including to most Google employees — and resigned in protest after a month of internally fighting for clarification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I worked as a research scientist at Google when Dragonfly was revealed — including to most Google employees — and &lt;a href=&quot;https://theintercept.com/2018/09/13/google-china-search-engine-employee-resigns/&quot;&gt;resigned in protest&lt;/a&gt; after a month of internally fighting for clarification. That’s part of why I object to this constant drift of conversations about Dragonfly from concrete, indefensible details toward the vague language of difficult compromise.&lt;/p&gt;
&lt;p&gt;When news of Dragonfly first broke on August 1, a Google staff member who had secretly worked on Dragonfly took to the company-only Google Plus forum. The &lt;a href=&quot;https://theintercept.com/2018/08/03/google-search-engine-china-censorship-backlash/&quot;&gt;language was clear&lt;/a&gt;: “In my opinion it is just as bad as the leak mentions,” the staffer wrote, adding that they had asked to be removed from the project and another employee had left the company over their discomfort. At this point, my internal alarms went off, and I started pointedly asking my team and management if there was any official company response.&lt;/p&gt;
&lt;p&gt;While employees were waiting for an official response at the next company-wide meeting, we were also sharing links to details about the project that we found through directly scouring Google’s source code, which is mostly available to all engineers. Even though much of Dragonfly had been kept from prying eyes, or “siloed,” the pieces that slipped through were &lt;a href=&quot;https://theintercept.com/2018/09/14/google-china-prototype-links-searches-to-phone-numbers/&quot;&gt;disturbing&lt;/a&gt;. One of the Google-constructed blacklists for search terms contained numerous phrases, including “human rights” and “Nobel prize.” Code had been written to show only Chinese air quality data from an unnamed source in Beijing. And Dragonfly linked searches to the users’ phone numbers.&lt;/p&gt;
&lt;p&gt;Due to having recently moved to Toronto to support my wife’s career, I was working remotely and was disconnected from any internal organizing efforts against Dragonfly. So when the &lt;a href=&quot;https://www.theverge.com/2018/8/16/17707324/google-china-search-engine-censorship-response-meeting&quot;&gt;company-wide meeting&lt;/a&gt; came and went without any substantive response to hundreds of impassioned appeals from employees, I exercised the strongest speech available to me and submitted my two-weeks notice to my manager — and the rest of the company — in the form of a &lt;a href=&quot;https://www.documentcloud.org/documents/4905801-Jack-Poulson-Google-resignation-letter-20-Aug-2018.html&quot;&gt;six-page document&lt;/a&gt; listing my objections to the project.&lt;/p&gt;
&lt;p&gt;My final two weeks at Google were spent balancing between handing off my projects to other engineers and meeting with increasingly senior management about my letter; my penultimate evening was spent in a disappointing &lt;a href=&quot;https://www.nytimes.com/2018/10/07/technology/tech-workers-ask-censorship-surveillance.html&quot;&gt;direct meeting&lt;/a&gt; with Jeff Dean, the head of artificial intelligence research and my interface to Google’s CEO. Dean argued that only a small number of queries would be censored and that China’s surveillance is analogous to the U.S.’s Foreign Intelligence Surveillance Act warrants, secret warrants purportedly issued for the purpose of rooting out foreign spies. The next day, I worked late to finish my last project handoff and anticlimactically turned in my company badge and laptop to an empty office.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Ironically, I had&lt;/u&gt; no intention of speaking with the press until I later read &lt;a href=&quot;https://www.wsj.com/articles/alphabets-chairman-on-government-china-and-fake-news-1535720400&quot;&gt;an interview&lt;/a&gt; Hennessy had done as part of a promotion for his recent book, “Leading Matters.” When asked about Google re-entering the Chinese market, he dismissively said, “There’s a shifting set of grounds of how you think about that problem, and how you think about the issue of censorship. The truth is, there are forms of censorship virtually everywhere around the world.”&lt;/p&gt;
&lt;p&gt;Soon after, I went public with &lt;a href=&quot;https://www.documentcloud.org/documents/4905801-Jack-Poulson-Google-resignation-letter-20-Aug-2018.html&quot;&gt;my resignation&lt;/a&gt;, and after a few more weeks of silence from Google, I &lt;a href=&quot;https://www.nytimes.com/2018/09/26/technology/google-privacy-china-congress.html&quot;&gt;detailed my objections&lt;/a&gt; in a letter to the Senate Commerce Committee ahead of a privacy hearing attended by Google Chief Privacy Officer Keith Enright. During the hearing, Sen. Ted Cruz, R-Texas, repeatedly pushed for answers on Dragonfly, but Enright &lt;a href=&quot;https://www.wired.com/story/congress-google-project-dragonfly-questions/&quot;&gt;pleaded ignorance&lt;/a&gt;, saying he was “not clear on the contours of what is in scope or out of scope for that project.” When asked whether China censors what its citizens can see, &lt;a href=&quot;https://www.cnbc.com/2018/09/26/google-keith-enright-dodges-china-questions-senate-privacy-hearing.html&quot;&gt;he dodged&lt;/a&gt;: “As the privacy representative of Google, I’m not sure that I have an informed opinion on that question.”&lt;/p&gt;
&lt;/div&gt;&lt;div data-reactid=&quot;193&quot; readability=&quot;40.461254612546&quot;&gt;
&lt;p&gt;Google’s response was &lt;a href=&quot;https://www.wired.com/story/congress-google-project-dragonfly-questions/&quot;&gt;evasive enough&lt;/a&gt; that in the weeks after the hearing, Vice President Mike Pence &lt;a href=&quot;https://www.reuters.com/article/us-usa-china-pence-technology/pence-says-google-should-halt-dragonfly-app-development-idUSKCN1ME20H&quot;&gt;gave a speech&lt;/a&gt; in which he demanded an end to Dragonfly. “Google should immediately end development of the ‘Dragonfly’ app that will strengthen Communist Party censorship and compromise the privacy of Chinese customers,” Pence said.&lt;/p&gt;
&lt;p&gt;Yet, a little more than a week later, Google CEO Sundar Pichai attempted to invoke an engineering defense by arguing that Google would not need to censor “&lt;a href=&quot;https://www.wired.com/story/wired-25-sundar-pichai-china-censored-search-engine/&quot;&gt;well over 99 percent&lt;/a&gt;” of queries. Such a framing is perhaps the most extreme example of a broad pattern of redirecting conversations away from their concrete governmental concessions — which, again, literally involved blacklisting the phrase “human rights,” risking health by censoring air quality data, and allowing for easy surveillance by tying queries to phone numbers. Human rights and basic political speech are not an ignorable edge case.&lt;/p&gt;
&lt;p&gt;It’s important to remember that Google’s 2010 withdrawal of its censored Chinese search engine was provoked by &lt;a href=&quot;https://www.wired.com/2010/03/source-code-hacks/&quot;&gt;Beijing hacking&lt;/a&gt; the inner sanctum of Google’s software — their source code repository — to access the Gmail accounts of Chinese dissidents. Despite the obvious connection, Google’s leadership has entirely avoided clarifying Dragonfly’s surveillance concessions or addressing one of the main demands in a letter from a coalition of &lt;a href=&quot;https://www.hrw.org/news/2018/08/28/open-letter-google-reported-plans-launch-censored-search-engine-china&quot;&gt;14 human rights organizations&lt;/a&gt;. The letter implored google to “[d]isclose its position on censorship in China and what steps, if any, Google is taking to safeguard against human rights violations linked to Project Dragonfly and its other Chinese mobile app offerings.”&lt;/p&gt;
&lt;p&gt;I, for my part, would ask that Sundar Pichai honestly engage on what the chair of Google’s parent company has agreed is a compromise of some of Google’s “core values.” Google’s &lt;a href=&quot;https://www.blog.google/technology/ai/ai-principles/&quot;&gt;AI principles&lt;/a&gt; have committed the company to not “design or deploy … technologies whose purpose contravenes widely accepted principles of … human rights.”&lt;/p&gt;
&lt;p&gt;Human rights organizations around the world, as well as &lt;a href=&quot;https://medium.com/@googlersagainstdragonfly/we-are-google-employees-google-must-drop-dragonfly-4c8a30c5e5eb&quot;&gt;Google’s own employees&lt;/a&gt;, have cried out. Google owes them all forthright answers.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 03 Dec 2018 18:37:28 +0000</pubDate>
<dc:creator>evo_9</dc:creator>
<og:url>https://theintercept.com/2018/12/01/google-china-censorship-human-rights/</og:url>
<og:description>I worked as a research scientist at Google when Dragonfly was revealed and resigned in protest after a month of internally fighting for clarification.</og:description>
<og:image>https://theintercept.imgix.net/wp-uploads/sites/1/2018/11/GettyImages-1040611132-1543422733-e1543422806654.jpg?auto=compress%2Cformat&amp;q=90&amp;fit=crop&amp;w=1200&amp;h=800</og:image>
<og:type>article</og:type>
<og:title>I Quit Google Over Its Censored Chinese Search Engine. The Company Needs to Clarify Its Position on Human Rights.</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://theintercept.com/2018/12/01/google-china-censorship-human-rights/</dc:identifier>
</item>
<item>
<title>Tumblr will ban all adult content on December 17th</title>
<link>https://www.theverge.com/2018/12/3/18123752/tumblr-adult-content-porn-ban-date-explicit-changes-why-safe-mode</link>
<guid isPermaLink="true" >https://www.theverge.com/2018/12/3/18123752/tumblr-adult-content-porn-ban-date-explicit-changes-why-safe-mode</guid>
<description>&lt;p id=&quot;FKnDet&quot;&gt;Tumblr will &lt;a href=&quot;https://tumblr.zendesk.com/hc/en-us/articles/231885248-Sensitive-content&quot;&gt;permanently ban adult content&lt;/a&gt; from its platform on December 17th in a move that will eradicate porn-related communities on the platform and fundamentally alter how the service is used. The ban includes explicit sexual content and nudity with a few exceptions, the company tells &lt;em&gt;The Verge&lt;/em&gt;. The new policy’s announcement comes just days after Tumblr was &lt;a href=&quot;https://www.theverge.com/2018/11/20/18104366/tumblr-ios-app-child-pornography-removed-from-app-store&quot;&gt;removed from Apple’s iOS App Store&lt;/a&gt; over a child pornography incident, but it extends far beyond that matter alone. “Adult content will no longer be allowed here,” the company flatly stated &lt;a href=&quot;https://staff.tumblr.com/post/180758987165/a-better-more-positive-tumblr&quot;&gt;in a blog post published on Monday&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;lb7r3Y&quot;&gt;Banned content includes photos, videos, and GIFs of human genitalia, female-presenting nipples, and any media involving sex acts, including illustrations. The exceptions include nude classical statues and political protests that feature nudity. The new guidelines exclude text, so erotica remains permitted. Illustrations and art that feature nudity are still okay — so long as sex acts aren’t depicted — and so are breastfeeding and after-birth photos.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;QQGyUo&quot;&gt;&lt;q&gt;Users have a chance to appeal flagged content&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;UxEcGE&quot;&gt;&lt;a href=&quot;https://tumblr.zendesk.com/hc/en-us/articles/231885248-Sensitive-content&quot;&gt;After December 17th&lt;/a&gt;, any explicit posts will be flagged and deleted by algorithms. For now, Tumblr is emailing users who have posted adult content flagged by algorithms and notifying them that their content will soon be hidden from view. Posts with porn content will be set to private, which will prevent them from being reblogged or shared elsewhere in the Tumblr community.&lt;/p&gt;
&lt;p id=&quot;VpVciY&quot;&gt;Users have a chance to appeal Tumblr’s decision in situations where they think there’s been a mistake, and the platform admits there’s a chance that the automated tools it’s using could make errors. It’s a process that could take a while, as a bulk of Tumblr posts feature explicit content. Users who run adult blogs can also &lt;a href=&quot;https://tumblr.zendesk.com/hc/en-us/articles/360005118894-Export-your-blog&quot;&gt;export their content&lt;/a&gt; before the change takes place in order to save what they have.&lt;/p&gt;
&lt;p id=&quot;y5BYCQ&quot;&gt;Explicit blogs will be allowed to remain on the service, but they’ll be heavily censored for all visitors. Here’s Tumblr’s FAQ:&lt;/p&gt;
&lt;blockquote readability=&quot;16&quot;&gt;
&lt;p id=&quot;gHAQZC&quot;&gt;&lt;strong&gt;What if my blog (not to be confused with posts) was marked as “explicit” before December 17, 2018?&lt;/strong&gt;&lt;/p&gt;
&lt;p id=&quot;fcntRc&quot;&gt;Blogs that have been either self-flagged or flagged by us as “explicit” per our old policy and before December 17, 2018 will still be overlaid with a content filter when viewing these blogs directly. While some of the content on these blogs may now be in violation of our policies and will be actioned accordingly, the blog owners may choose to post content that is within our policies in the future, so we’d like to provide that option. Users under 18 will still not be allowed to click through to see the content of these blogs. The avatars and headers for these blogs will also be reverted to the default settings. Additionally, posts from these blogs are kept out of search results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;c-float-left&quot;&gt;
&lt;aside id=&quot;VI4v7D&quot;&gt;&lt;q&gt;“We’ve given serious thought to who we want to be to our community.”&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;uAwGPq&quot;&gt;Since Tumblr was founded in 2007, it has largely turned a blind eye to adult content. The company has tried to shield it from public view through Safe Mode and more stringent search filters. But in recent months — and under the ownership of Verizon’s Oath unit — it began to consider removing content more aggressively. “We’ve given serious thought to who we want to be to our community moving forward,” CEO Jeff D’Onofrio says in a blog post. “We’ve realized that in order to continue to fulfill our promise and place in culture, especially as it evolves, we must change.” D’Onofrio says Tumblr weighed the pros and cons thoroughly before making its decision. It also decided not to remove explicit accounts because it wanted to give these accounts a chance to post appropriate content instead.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;YIpxod&quot;&gt;&lt;q&gt;Tumblr has been cleaning up its platform recently&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;inqyDr&quot;&gt;Under Oath, Tumblr has been &lt;a href=&quot;https://staff.tumblr.com/post/177449083750/new-community-guidelines&quot;&gt;cleaning up its platform more rapidly&lt;/a&gt; than it had done in previous years. In August, Tumblr announced new community guidelines that banned revenge porn, hate speech, and posts that glorified school shootings.&lt;/p&gt;
&lt;p id=&quot;GlXSw2&quot;&gt;If users mourn the loss of adult content on Tumblr, D’Onofrio claims they have many other solutions. “There are no shortage of sites on the internet that feature adult content. We will leave it to them and focus our efforts on creating the most welcoming environment possible for our community,” he said. That argument will do little to curtail anger over this decision from people &lt;a href=&quot;https://www.cosmopolitan.com/sex-love/news/a42078/why-twentysomething-women-are-obsessed-with-tumblr-porn/&quot;&gt;who have used Tumblr&lt;/a&gt; as a safe place to enjoy, share, and discuss their preferred flavor of porn and adult content.&lt;/p&gt;
</description>
<pubDate>Mon, 03 Dec 2018 17:48:49 +0000</pubDate>
<dc:creator>phoe-krk</dc:creator>
<og:description>The ban includes explicit sexual content and nudity with some exceptions.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/pLPq4FMftdrOESxD93N6xVksQGg=/0x146:2040x1214/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/13598286/acastro_191203_177_tumblr_0001.jpg</og:image>
<og:title>Tumblr will ban all adult content on December 17th</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2018/12/3/18123752/tumblr-adult-content-porn-ban-date-explicit-changes-why-safe-mode</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2018/12/3/18123752/tumblr-adult-content-porn-ban-date-explicit-changes-why-safe-mode</dc:identifier>
</item>
<item>
<title>Ask HN: Who is hiring? (December 2018)</title>
<link>https://news.ycombinator.com/item?id=18589702</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18589702</guid>
<description>
&lt;table border=&quot;0&quot; class=&quot;comment-tree&quot; readability=&quot;1641.7691927&quot;&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594412&quot; readability=&quot;18.490640394089&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.2453201970443&quot;&gt;&lt;tr readability=&quot;18.490640394089&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.088669950739&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590201&quot; readability=&quot;16.803359683794&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.4016798418972&quot;&gt;&lt;tr readability=&quot;16.803359683794&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.939229249012&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592478&quot; readability=&quot;1.5531914893617&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590709&quot; readability=&quot;2.6271186440678&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.3135593220339&quot;&gt;&lt;tr readability=&quot;2.6271186440678&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591023&quot; readability=&quot;0.7&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594383&quot; readability=&quot;12.402139037433&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.2010695187166&quot;&gt;&lt;tr readability=&quot;12.402139037433&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.879144385027&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594363&quot; readability=&quot;13.399253731343&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.6996268656716&quot;&gt;&lt;tr readability=&quot;13.399253731343&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.910447761194&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594367&quot; readability=&quot;13.734161490683&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8670807453416&quot;&gt;&lt;tr readability=&quot;13.734161490683&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.875776397516&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594330&quot; readability=&quot;6.5113438045375&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2556719022688&quot;&gt;&lt;tr readability=&quot;6.5113438045375&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.162303664921&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594403&quot; readability=&quot;9.4019138755981&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.700956937799&quot;&gt;&lt;tr readability=&quot;9.4019138755981&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594382&quot; readability=&quot;17.673390224981&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8366951124903&quot;&gt;&lt;tr readability=&quot;17.673390224981&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.27812257564&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590396&quot; readability=&quot;15.293286219081&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.6466431095406&quot;&gt;&lt;tr readability=&quot;15.293286219081&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.116607773852&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593858&quot; readability=&quot;4.4951923076923&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2475961538462&quot;&gt;&lt;tr readability=&quot;4.4951923076923&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594394&quot; readability=&quot;3.2268907563025&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6134453781513&quot;&gt;&lt;tr readability=&quot;3.2268907563025&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592138&quot; readability=&quot;2.5535714285714&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2767857142857&quot;&gt;&lt;tr readability=&quot;2.5535714285714&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592176&quot; readability=&quot;5.4285714285714&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7142857142857&quot;&gt;&lt;tr readability=&quot;5.4285714285714&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592623&quot; readability=&quot;1.2368421052632&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592850&quot; readability=&quot;4.5&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592338&quot; readability=&quot;1.3114754098361&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592858&quot; readability=&quot;1.4210526315789&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594361&quot; readability=&quot;17.549618320611&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.7748091603053&quot;&gt;&lt;tr readability=&quot;17.549618320611&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.164122137405&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594266&quot; readability=&quot;19.616206589492&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.8081032947462&quot;&gt;&lt;tr readability=&quot;19.616206589492&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.011576135352&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594299&quot; readability=&quot;24.858608893957&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;12.429304446978&quot;&gt;&lt;tr readability=&quot;24.858608893957&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;23.424458380844&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593970&quot; readability=&quot;9.0995260663507&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594112&quot; readability=&quot;1.3483146067416&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593116&quot; readability=&quot;9.6489795918367&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.8244897959184&quot;&gt;&lt;tr readability=&quot;9.6489795918367&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.463265306122&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589706&quot; readability=&quot;27.550561797753&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.775280898876&quot;&gt;&lt;tr readability=&quot;27.550561797753&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.170947030498&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594174&quot; readability=&quot;16.268240343348&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.1341201716738&quot;&gt;&lt;tr readability=&quot;16.268240343348&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.843347639485&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593095&quot; readability=&quot;7.0943396226415&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593169&quot; readability=&quot;21.451523545706&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.725761772853&quot;&gt;&lt;tr readability=&quot;21.451523545706&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.626038781163&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593850&quot; readability=&quot;9.6071094480823&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.8035547240412&quot;&gt;&lt;tr readability=&quot;9.6071094480823&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.008886810103&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593659&quot; readability=&quot;19.054604726976&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.5273023634882&quot;&gt;&lt;tr readability=&quot;19.054604726976&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.5273023634882&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593681&quot; readability=&quot;7.8665699782451&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.9332849891226&quot;&gt;&lt;tr readability=&quot;7.8665699782451&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.699782451051&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594053&quot; readability=&quot;20.329512893983&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.164756446991&quot;&gt;&lt;tr readability=&quot;20.329512893983&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.557306590258&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590451&quot; readability=&quot;13.402135231317&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7010676156584&quot;&gt;&lt;tr readability=&quot;13.402135231317&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.274021352313&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593746&quot; readability=&quot;10.362841530055&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.1814207650273&quot;&gt;&lt;tr readability=&quot;10.362841530055&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.189071038251&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594062&quot; readability=&quot;19.70515970516&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.8525798525799&quot;&gt;&lt;tr readability=&quot;19.70515970516&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;23.646191646192&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594163&quot; readability=&quot;17.477449455677&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.7387247278383&quot;&gt;&lt;tr readability=&quot;17.477449455677&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;24.274235355106&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592627&quot; readability=&quot;17.740288568257&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8701442841287&quot;&gt;&lt;tr readability=&quot;17.740288568257&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;24.146503884573&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593336&quot; readability=&quot;18.291044776119&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.1455223880597&quot;&gt;&lt;tr readability=&quot;18.291044776119&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.291044776119&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594039&quot; readability=&quot;11.352795031056&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.6763975155279&quot;&gt;&lt;tr readability=&quot;11.352795031056&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.789440993789&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593249&quot; readability=&quot;22.4016&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.2008&quot;&gt;&lt;tr readability=&quot;22.4016&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.232&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589727&quot; readability=&quot;14.047619047619&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.0238095238095&quot;&gt;&lt;tr readability=&quot;14.047619047619&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.198412698413&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590323&quot; readability=&quot;4.7727272727273&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3863636363636&quot;&gt;&lt;tr readability=&quot;4.7727272727273&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.7272727272727&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592725&quot; readability=&quot;7.599128540305&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7995642701525&quot;&gt;&lt;tr readability=&quot;7.599128540305&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590527&quot; readability=&quot;2.1818181818182&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590860&quot; readability=&quot;1.5157894736842&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594006&quot; readability=&quot;7.5968331303289&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7984165651644&quot;&gt;&lt;tr readability=&quot;7.5968331303289&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.551157125457&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594141&quot; readability=&quot;13.66320830008&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8316041500399&quot;&gt;&lt;tr readability=&quot;13.66320830008&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.029529130088&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593470&quot; readability=&quot;12.031978680879&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.0159893404397&quot;&gt;&lt;tr readability=&quot;12.031978680879&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.891405729514&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593271&quot; readability=&quot;20.646788990826&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.323394495413&quot;&gt;&lt;tr readability=&quot;20.646788990826&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.747706422018&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593922&quot; readability=&quot;16.360367892977&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.1801839464883&quot;&gt;&lt;tr readability=&quot;16.360367892977&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.322742474916&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593967&quot; readability=&quot;13.004926108374&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.5024630541872&quot;&gt;&lt;tr readability=&quot;13.004926108374&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.9704433497537&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589991&quot; readability=&quot;11.524423963134&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.7622119815668&quot;&gt;&lt;tr readability=&quot;11.524423963134&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.92534562212&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593800&quot; readability=&quot;16.455882352941&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.2279411764706&quot;&gt;&lt;tr readability=&quot;16.455882352941&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.084558823529&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593896&quot; readability=&quot;8.2951048951049&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.1475524475524&quot;&gt;&lt;tr readability=&quot;8.2951048951049&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.355244755245&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594238&quot; readability=&quot;27.391962421712&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.695981210856&quot;&gt;&lt;tr readability=&quot;27.391962421712&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;22.973903966597&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593914&quot; readability=&quot;7.8187435633368&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.9093717816684&quot;&gt;&lt;tr readability=&quot;7.8187435633368&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.750772399588&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594120&quot; readability=&quot;21.202290076336&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.601145038168&quot;&gt;&lt;tr readability=&quot;21.202290076336&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.756679389313&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593190&quot; readability=&quot;10.197105444521&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.0985527222605&quot;&gt;&lt;tr readability=&quot;10.197105444521&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.295658166782&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592689&quot; readability=&quot;10.476030277544&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.2380151387721&quot;&gt;&lt;tr readability=&quot;10.476030277544&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.404541631623&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593959&quot; readability=&quot;12.099337748344&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.0496688741722&quot;&gt;&lt;tr readability=&quot;12.099337748344&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.5066225165563&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593832&quot; readability=&quot;14.033575317604&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.0167876588022&quot;&gt;&lt;tr readability=&quot;14.033575317604&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.050362976407&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593745&quot; readability=&quot;8.2223222322232&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.1111611161116&quot;&gt;&lt;tr readability=&quot;8.2223222322232&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.2223222322232&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593724&quot; readability=&quot;15.69701383831&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.8485069191551&quot;&gt;&lt;tr readability=&quot;15.69701383831&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.149672250546&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593978&quot; readability=&quot;5.1771956856703&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.5885978428351&quot;&gt;&lt;tr readability=&quot;5.1771956856703&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.4915254237288&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593723&quot; readability=&quot;13.254295532646&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.627147766323&quot;&gt;&lt;tr readability=&quot;13.254295532646&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.360824742268&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593763&quot; readability=&quot;14.404659188956&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.202329594478&quot;&gt;&lt;tr readability=&quot;14.404659188956&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.364969801553&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593936&quot; readability=&quot;9.4659863945578&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7329931972789&quot;&gt;&lt;tr readability=&quot;9.4659863945578&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.1751700680272&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593781&quot; readability=&quot;27.603043753963&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.801521876982&quot;&gt;&lt;tr readability=&quot;27.603043753963&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.641724793912&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593813&quot; readability=&quot;19.469453376206&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.7347266881029&quot;&gt;&lt;tr readability=&quot;19.469453376206&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.443193997856&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593653&quot; readability=&quot;29.983002832861&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;14.991501416431&quot;&gt;&lt;tr readability=&quot;29.983002832861&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.550283286119&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593951&quot; readability=&quot;12.8738170347&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.4369085173502&quot;&gt;&lt;tr readability=&quot;12.8738170347&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.011829652997&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593825&quot; readability=&quot;13.225733634312&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.6128668171558&quot;&gt;&lt;tr readability=&quot;13.225733634312&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.336343115124&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593066&quot; readability=&quot;13.52644836272&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7632241813602&quot;&gt;&lt;tr readability=&quot;13.52644836272&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.370277078086&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591622&quot; readability=&quot;12.754316069057&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3771580345286&quot;&gt;&lt;tr readability=&quot;12.754316069057&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.754316069057&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593129&quot; readability=&quot;23.368362831858&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.684181415929&quot;&gt;&lt;tr readability=&quot;23.368362831858&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.031526548673&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592330&quot; readability=&quot;19.25&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.625&quot;&gt;&lt;tr readability=&quot;19.25&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.75&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592367&quot; readability=&quot;25.896527285613&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;12.948263642807&quot;&gt;&lt;tr readability=&quot;25.896527285613&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.959957476967&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593788&quot; readability=&quot;17.068776628119&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.5343883140596&quot;&gt;&lt;tr readability=&quot;17.068776628119&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;22.284236153378&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593499&quot; readability=&quot;30.696832579186&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;15.348416289593&quot;&gt;&lt;tr readability=&quot;30.696832579186&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.14479638009&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592499&quot; readability=&quot;32.507756563246&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;16.253878281623&quot;&gt;&lt;tr readability=&quot;32.507756563246&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;27.089797136038&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;28.912333736397&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Permutive (YC S14) | London, UK | Software Engineer | Full-time, permanent, on-site, eligible to work in UK&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Permutive is the most efficient way to integrate data-driven models into your product. We're a B2B SaaS company built on top of an innovative real-time data platform. We have product–market fit and customers that love us, and we're growing rapidly in Europe and the US. We raised a $10M Series A at the beginning of the year and have received funding from some of the world's best investors, including Y Combinator.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Everything we build operates at scale: our platform processes billions of requests a day across hundreds of millions of monthly end-users. We're developing a next generation data platform for a world with a trillion devices, and we think applying functional programming techniques like compositionality and type-safety is the best way to build these massive distributed systems.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;You would be joining our core backend team on-site in London, working mostly with Scala and 'big data' ecosystem technologies (our full stack is below). We're happy to talk to people with a wide range of experience—from straight out of university to those with decades of experience—but you should have a genuine interest and preferably experience in FP, distributed systems, and stream processing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Languages: Scala, Haskell, Elm&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Libraries: Cats, Cats Effect, FS2, http4s, Shapeless, Circe, PureConfig, pipes, Servant&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Technologies: Kafka, Kubernetes, Terraform, Bigtable, BigQuery, Beam, Postgres, Google Cloud Platform&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;If you're interested and eligible to work in the UK, please email me (co-founder and CTO) directly at tim@permutive.com&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593780&quot; readability=&quot;8.1848225214198&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.0924112607099&quot;&gt;&lt;tr readability=&quot;8.1848225214198&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.1848225214198&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593526&quot; readability=&quot;37.955182072829&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;18.977591036415&quot;&gt;&lt;tr readability=&quot;37.955182072829&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;25.61974789916&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;26.887154009936&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Textio | Seattle, WA USA | Full-Time | On-Site&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Selected as Washington's #1 Place to work! At Textio, we're changing the way people write. We predict how your writing will perform based on previous real-world results from similar documents. We have some of the largest companies in the world as customers, and we're hiring engineers across the board to help us solve difficult problems. We have a tight-knit, friendly, and experienced team, an incredible product, and a bright future.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Buzzwords for Keyword Searchers: AI, NLP, Machine Learning, ReactJS, SaaS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;All Textio careers - &lt;a href=&quot;https://textio.com/careers/&quot; rel=&quot;nofollow&quot;&gt;https://textio.com/careers/&lt;/a&gt; Check out our team - &lt;a href=&quot;https://textio.com/team/&quot; rel=&quot;nofollow&quot;&gt;https://textio.com/team/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Open Roles: Technical Recruiter, Director of Data Acquisition, Frontend Engineer-Applications Team, Full Stack Engineer-Applications Team, Machine Learning Engineer, Senior Data Platform Software Engineer, Senior Frontend Engineer-Applications Team, Senior Full Stack Engineer-Applications Team, Senior NLP Software Engineer, Senior DevOps Engineer, Senior Software Engineer-Backend Software Engineer-Backend, IT Support Technician, Senior Data Journalist, VP of Marketing, VP of Sales, VP of Business Development, Senior UX Designer, Product Manager, Senior Product Manager, Community Marketing Manager, Product Marketing Manager, Market Development Representative, Customer Success Engineer, Account Manager, Payroll and Accounts Payable Specialist&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592429&quot; readability=&quot;14.830256104824&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.4151280524122&quot;&gt;&lt;tr readability=&quot;14.830256104824&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.29064919595&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594017&quot; readability=&quot;6.9119373776908&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.4559686888454&quot;&gt;&lt;tr readability=&quot;6.9119373776908&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.6399217221135&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589724&quot; readability=&quot;24.191002367798&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;12.095501183899&quot;&gt;&lt;tr readability=&quot;24.191002367798&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.836621941594&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593752&quot; readability=&quot;13.40885684861&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7044284243048&quot;&gt;&lt;tr readability=&quot;13.40885684861&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.40885684861&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593666&quot; readability=&quot;10.712543554007&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.3562717770035&quot;&gt;&lt;tr readability=&quot;10.712543554007&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.173344947735&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590438&quot; readability=&quot;8.3843648208469&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593976&quot; readability=&quot;21.510748702743&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.755374351371&quot;&gt;&lt;tr readability=&quot;21.510748702743&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.155300222387&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592642&quot; readability=&quot;18.54855923159&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.2742796157951&quot;&gt;&lt;tr readability=&quot;18.54855923159&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.911419423693&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593574&quot; readability=&quot;11.24728588661&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.6236429433052&quot;&gt;&lt;tr readability=&quot;11.24728588661&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.648974668275&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593672&quot; readability=&quot;14.176691729323&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.0883458646617&quot;&gt;&lt;tr readability=&quot;14.176691729323&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.964285714286&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593420&quot; readability=&quot;18.94964028777&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.4748201438849&quot;&gt;&lt;tr readability=&quot;18.94964028777&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.844604316547&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592411&quot; readability=&quot;15.926204819277&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.9631024096386&quot;&gt;&lt;tr readability=&quot;15.926204819277&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.253388554217&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593449&quot; readability=&quot;15.359762140733&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.6798810703667&quot;&gt;&lt;tr readability=&quot;15.359762140733&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.653121902874&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593519&quot; readability=&quot;13.494614747307&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7473073736537&quot;&gt;&lt;tr readability=&quot;13.494614747307&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.181441590721&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593792&quot; readability=&quot;22.490611458835&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.245305729417&quot;&gt;&lt;tr readability=&quot;22.490611458835&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;22.001685122773&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591262&quot; readability=&quot;22.928039702233&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.464019851117&quot;&gt;&lt;tr readability=&quot;22.928039702233&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;23.40570719603&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593480&quot; readability=&quot;20.405286343612&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.202643171806&quot;&gt;&lt;tr readability=&quot;20.405286343612&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.376966645689&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594049&quot; readability=&quot;7.0777479892761&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.5388739946381&quot;&gt;&lt;tr readability=&quot;7.0777479892761&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6353887399464&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593814&quot; readability=&quot;5.5434343434343&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593849&quot; readability=&quot;11.799027552674&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8995137763371&quot;&gt;&lt;tr readability=&quot;11.799027552674&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.5299837925446&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594030&quot; readability=&quot;6.9540636042403&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.4770318021201&quot;&gt;&lt;tr readability=&quot;6.9540636042403&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.9540636042403&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593412&quot; readability=&quot;15.980421686747&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.9902108433735&quot;&gt;&lt;tr readability=&quot;15.980421686747&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.868222891566&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591850&quot; readability=&quot;15.14711033275&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.5735551663748&quot;&gt;&lt;tr readability=&quot;15.14711033275&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.830122591944&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590575&quot; readability=&quot;12.051502145923&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.0257510729614&quot;&gt;&lt;tr readability=&quot;12.051502145923&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.1716738197425&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591697&quot; readability=&quot;11.943661971831&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.9718309859155&quot;&gt;&lt;tr readability=&quot;11.943661971831&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.8380281690141&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593280&quot; readability=&quot;11.822147651007&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.9110738255034&quot;&gt;&lt;tr readability=&quot;11.822147651007&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.6392617449664&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594042&quot; readability=&quot;32.64347826087&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;16.321739130435&quot;&gt;&lt;tr readability=&quot;32.64347826087&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.042028985507&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591799&quot; readability=&quot;16.61170212766&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.3058510638298&quot;&gt;&lt;tr readability=&quot;16.61170212766&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.920212765957&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592003&quot; readability=&quot;14.340807174888&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.1704035874439&quot;&gt;&lt;tr readability=&quot;14.340807174888&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.862780269058&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589946&quot; readability=&quot;43.705099778271&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;21.852549889135&quot;&gt;&lt;tr readability=&quot;43.705099778271&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;33.728935698448&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;43.35396736072&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Gambit Research Ltd (&lt;a href=&quot;http://gambitresearch.com&quot; rel=&quot;nofollow&quot;&gt;http://gambitresearch.com&lt;/a&gt;) | London, UK | ONSITE | £40-85k + Bonus + Benefits + Flexible Hours + Personal training budget&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;At Gambit Research we specialise in creating and managing an automated betting service, via research, statistical analysis and the use of complex algorithms. We ingest and organise terabytes of market and event data from more than fifty sources and make the data available to our strategy teams via internal APIs. We care deeply about speed, accuracy and availability.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Our flagship product, MollyBet, presents the odds offered by many of the world’s largest bookmakers and betting exchanges, and enables clients to bet with multiple operators with a single mouse-click or API request. Molly is generally regarded as the best product in its class.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We’re always looking for clever, pragmatic, and autonomous individuals to join our team - individuals like you. We have a unique culture, where hierarchy and fancy job titles don’t matter. Instead our team is given the freedom to choose their own tools, work on projects they actually find interesting, and have totally flexible working hours. The technologies our team typically works with includes: Python, Erlang, Linux, Docker, Kubernetes, Ansible, C, C++, Java, Haskell, Julia, Go, JavaScript, AngularJS, ReactJS, Django, PostgreSQL, Redis, Apache Spark, Apache Kafka, RabbitMQ, Celery, Elasticsearch, Logstash, Kibana, Graphite, Sentry, Git, and GitLab.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We’re currently recruiting for:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Python developers (all levels)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Erlang developers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;JavaScript React developers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Linux infrastructure engineer / Sysadmin / SRE / DevOps engineer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Junior Product Analyst&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Visit &lt;a href=&quot;http://gambitresearch.com/jobs.html&quot; rel=&quot;nofollow&quot;&gt;http://gambitresearch.com/jobs.html&lt;/a&gt; or send your CV over to careers@gambitresearch.com, for more information.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593882&quot; readability=&quot;26.800901577761&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.400450788881&quot;&gt;&lt;tr readability=&quot;26.800901577761&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.536438767844&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592033&quot; readability=&quot;8.4504504504505&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2252252252252&quot;&gt;&lt;tr readability=&quot;8.4504504504505&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.206206206206&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593059&quot; readability=&quot;26.720599250936&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.360299625468&quot;&gt;&lt;tr readability=&quot;26.720599250936&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.086142322097&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592074&quot; readability=&quot;13.74733388023&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8736669401148&quot;&gt;&lt;tr readability=&quot;13.74733388023&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.711238720263&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591519&quot; readability=&quot;11.184364060677&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.5921820303384&quot;&gt;&lt;tr readability=&quot;11.184364060677&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.5746791131855&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592395&quot; readability=&quot;18.959290873276&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.4796454366382&quot;&gt;&lt;tr readability=&quot;18.959290873276&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;23.021996060407&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589797&quot; readability=&quot;10.523489932886&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593774&quot; readability=&quot;17.062293274531&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.5311466372657&quot;&gt;&lt;tr readability=&quot;17.062293274531&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.960308710033&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589752&quot; readability=&quot;9.3214285714286&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.6607142857143&quot;&gt;&lt;tr readability=&quot;9.3214285714286&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.185714285714&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591123&quot; readability=&quot;10.431524547804&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.2157622739018&quot;&gt;&lt;tr readability=&quot;10.431524547804&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593443&quot; readability=&quot;24.7393040502&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;12.3696520251&quot;&gt;&lt;tr readability=&quot;24.7393040502&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.505989731888&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593853&quot; readability=&quot;19.163323782235&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.5816618911175&quot;&gt;&lt;tr readability=&quot;19.163323782235&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.243553008596&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592943&quot; readability=&quot;8.6976320582878&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.3488160291439&quot;&gt;&lt;tr readability=&quot;8.6976320582878&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.306921675774&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593222&quot; readability=&quot;0.94545454545455&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590122&quot; readability=&quot;13.365384615385&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.6826923076923&quot;&gt;&lt;tr readability=&quot;13.365384615385&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.028846153846&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591843&quot; readability=&quot;8.7407407407407&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591892&quot; readability=&quot;2.1851851851852&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592404&quot; readability=&quot;0.065217391304348&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592108&quot; readability=&quot;8.107904642409&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.0539523212045&quot;&gt;&lt;tr readability=&quot;8.107904642409&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.4592220828105&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592122&quot; readability=&quot;3.264&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.632&quot;&gt;&lt;tr readability=&quot;3.264&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.264&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593166&quot; readability=&quot;57.222346368715&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;28.611173184358&quot;&gt;&lt;tr readability=&quot;57.222346368715&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;33.050837988827&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;40.884115319389&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Southeast USA including: Virginia (Arlington and Dulles), Maryland (Annapolis Junction), South Carolina (Greenville), Alabama (Huntsville), Florida (beach east of Melbourne), Texas (Austin and San Antonio), Pennsylvania (State College) and possibly others, all ONSITE. Citizenship is a job requirement.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We do emulators, JIT, hypervisors, stuff similar to valgrind, debuggers, manual disassembly, binary static analysis, parsers, and assembly. We write our own low-level tools, frequently in C99 to run on Linux. We also use IDA Pro, qemu, Simics, JTAG debuggers, gdb, Coverity, KlocWork, LLVM, and so on. Easily transferable skills include those related to compilers, kernel drivers, embedded RTOSes, vectorizing, firmware, VxWorks BSP development, symbolic execution, boot loaders, software verification, concolic testing, abstract interpretation, satisfiability (SAT, SMT) solvers, and decompilers. We work with more than a dozen architectures including PowerPC/ppc, MIPS, ARM/Thumb/AArch64, x86/x64/Intel, DSPs, and microcontrollers. We hire from no-degree to PhD. Common degrees include Computer Science, Computer Engineering, Electrical Engineering, and Mathematics.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We don't normally work overtime, and we get paid more if we do. We're never expected to take work home or be on call. Because of the citizenship requirement, there is no chance that the work will be outsourced. Flex-time is fairly extreme; some do randomish hours.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Location hints: Pick Arlington for a car-free life, subway included. Pick Florida or Texas to live in a place with solid gun rights and no state income tax. Pick Florida for almost no traffic or commute, surfing, and houses that commonly go for $150,000 to $450,000.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;You can email me at users.sf.net, with account name albert.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592863&quot; readability=&quot;11.601384083045&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8006920415225&quot;&gt;&lt;tr readability=&quot;11.601384083045&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.468512110727&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592868&quot; readability=&quot;13.637532133676&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.818766066838&quot;&gt;&lt;tr readability=&quot;13.637532133676&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.092116538132&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591173&quot; readability=&quot;6.7372013651877&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593103&quot; readability=&quot;9.4001318391562&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7000659195781&quot;&gt;&lt;tr readability=&quot;9.4001318391562&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.860250494397&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593599&quot; readability=&quot;11.617198335645&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8085991678225&quot;&gt;&lt;tr readability=&quot;11.617198335645&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.165048543689&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593952&quot; readability=&quot;1.25&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593032&quot; readability=&quot;15.251798561151&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.6258992805755&quot;&gt;&lt;tr readability=&quot;15.251798561151&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.821942446043&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591593&quot; readability=&quot;13.734345351044&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8671726755218&quot;&gt;&lt;tr readability=&quot;13.734345351044&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.243833017078&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592743&quot; readability=&quot;16.191437802908&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.095718901454&quot;&gt;&lt;tr readability=&quot;16.191437802908&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.06098546042&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592221&quot; readability=&quot;13.828828828829&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.9144144144144&quot;&gt;&lt;tr readability=&quot;13.828828828829&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.445945945946&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592357&quot; readability=&quot;1.4666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593347&quot; readability=&quot;9.3970826580227&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590943&quot; readability=&quot;7.4393063583815&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7196531791908&quot;&gt;&lt;tr readability=&quot;7.4393063583815&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.9190751445087&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591245&quot; readability=&quot;16.249749247743&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.1248746238716&quot;&gt;&lt;tr readability=&quot;16.249749247743&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.860080240722&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593572&quot; readability=&quot;5.7587939698492&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8793969849246&quot;&gt;&lt;tr readability=&quot;5.7587939698492&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.2788944723618&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592625&quot; readability=&quot;23.197625106022&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.598812553011&quot;&gt;&lt;tr readability=&quot;23.197625106022&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.558100084818&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592945&quot; readability=&quot;7.6179560649475&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8089780324737&quot;&gt;&lt;tr readability=&quot;7.6179560649475&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.950811843362&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592541&quot; readability=&quot;10.152487961477&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.0762439807384&quot;&gt;&lt;tr readability=&quot;10.152487961477&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.998394863563&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593113&quot; readability=&quot;12.704850361197&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3524251805986&quot;&gt;&lt;tr readability=&quot;12.704850361197&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.193498452012&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593436&quot; readability=&quot;15.448657187994&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.7243285939968&quot;&gt;&lt;tr readability=&quot;15.448657187994&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.150868878357&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593818&quot; readability=&quot;13.546824542519&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7734122712594&quot;&gt;&lt;tr readability=&quot;13.546824542519&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.192142088267&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591440&quot; readability=&quot;17.173205741627&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.5866028708134&quot;&gt;&lt;tr readability=&quot;17.173205741627&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.558373205742&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593294&quot; readability=&quot;8.8325652841782&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.4162826420891&quot;&gt;&lt;tr readability=&quot;8.8325652841782&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.9493087557604&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592787&quot; readability=&quot;17.820689655172&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.9103448275862&quot;&gt;&lt;tr readability=&quot;17.820689655172&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.3793103448276&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592519&quot; readability=&quot;17.411475409836&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.705737704918&quot;&gt;&lt;tr readability=&quot;17.411475409836&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.495081967213&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589722&quot; readability=&quot;15.029930928626&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.5149654643131&quot;&gt;&lt;tr readability=&quot;15.029930928626&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.257099002302&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592692&quot; readability=&quot;14.786982248521&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.3934911242604&quot;&gt;&lt;tr readability=&quot;14.786982248521&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.48224852071&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593986&quot; readability=&quot;11.670194003527&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8350970017637&quot;&gt;&lt;tr readability=&quot;11.670194003527&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.4259259259259&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592417&quot; readability=&quot;20.28870605834&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.14435302917&quot;&gt;&lt;tr readability=&quot;20.28870605834&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.138743455497&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590058&quot; readability=&quot;16.470588235294&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.2352941176471&quot;&gt;&lt;tr readability=&quot;16.470588235294&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592888&quot; readability=&quot;6.2032520325203&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.1016260162602&quot;&gt;&lt;tr readability=&quot;6.2032520325203&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6463414634146&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590271&quot; readability=&quot;9.53095684803&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.765478424015&quot;&gt;&lt;tr readability=&quot;9.53095684803&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.2420262664165&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589758&quot; readability=&quot;13.244766505636&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.622383252818&quot;&gt;&lt;tr readability=&quot;13.244766505636&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.717793880837&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592823&quot; readability=&quot;9.020920502092&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.510460251046&quot;&gt;&lt;tr readability=&quot;9.020920502092&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.2008368200837&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592864&quot; readability=&quot;10.565853658537&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.2829268292683&quot;&gt;&lt;tr readability=&quot;10.565853658537&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.006097560976&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592839&quot; readability=&quot;17.698072805139&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8490364025696&quot;&gt;&lt;tr readability=&quot;17.698072805139&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.109207708779&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590124&quot; readability=&quot;12.662251655629&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3311258278146&quot;&gt;&lt;tr readability=&quot;12.662251655629&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.56669820246&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590869&quot; readability=&quot;15.39907550077&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.6995377503852&quot;&gt;&lt;tr readability=&quot;15.39907550077&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.614791987673&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591877&quot; readability=&quot;3.5670731707317&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594026&quot; readability=&quot;9.169014084507&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.5845070422535&quot;&gt;&lt;tr readability=&quot;9.169014084507&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.002816901408&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592695&quot; readability=&quot;22.752497225305&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.376248612653&quot;&gt;&lt;tr readability=&quot;22.752497225305&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.016648168701&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590968&quot; readability=&quot;18.545889101338&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.2729445506692&quot;&gt;&lt;tr readability=&quot;18.545889101338&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.593690248566&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589918&quot; readability=&quot;12.928395061728&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.4641975308642&quot;&gt;&lt;tr readability=&quot;12.928395061728&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.777777777778&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590604&quot; readability=&quot;19.081419624217&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.5407098121086&quot;&gt;&lt;tr readability=&quot;19.081419624217&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.788100208768&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590319&quot; readability=&quot;17.640653357532&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8203266787659&quot;&gt;&lt;tr readability=&quot;17.640653357532&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.210526315789&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592332&quot; readability=&quot;14.512471655329&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.2562358276644&quot;&gt;&lt;tr readability=&quot;14.512471655329&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.447467876039&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590278&quot; readability=&quot;27.031055900621&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.515527950311&quot;&gt;&lt;tr readability=&quot;27.031055900621&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.273291925466&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590609&quot; readability=&quot;1.3882352941176&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591500&quot; readability=&quot;6.3984375&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.19921875&quot;&gt;&lt;tr readability=&quot;6.3984375&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr coll&quot; id=&quot;18590786&quot; readability=&quot;1.5463917525773&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591551&quot; readability=&quot;2.6333333333333&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.3166666666667&quot;&gt;&lt;tr readability=&quot;2.6333333333333&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592528&quot; readability=&quot;3.2845528455285&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6422764227642&quot;&gt;&lt;tr readability=&quot;3.2845528455285&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593130&quot; readability=&quot;0.58064516129032&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590294&quot; readability=&quot;9.1212121212121&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.5606060606061&quot;&gt;&lt;tr readability=&quot;9.1212121212121&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.9504132231405&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590387&quot; readability=&quot;3.3741496598639&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.687074829932&quot;&gt;&lt;tr readability=&quot;3.3741496598639&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590911&quot; readability=&quot;16.778571428571&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.3892857142857&quot;&gt;&lt;tr readability=&quot;16.778571428571&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.516071428571&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592975&quot; readability=&quot;11.194838709677&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.5974193548387&quot;&gt;&lt;tr readability=&quot;11.194838709677&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.194838709677&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590413&quot; readability=&quot;8.8184357541899&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.409217877095&quot;&gt;&lt;tr readability=&quot;8.8184357541899&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.8184357541899&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592093&quot; readability=&quot;9.3775510204082&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.6887755102041&quot;&gt;&lt;tr readability=&quot;9.3775510204082&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.6725417439703&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593423&quot; readability=&quot;18.261690647482&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.130845323741&quot;&gt;&lt;tr readability=&quot;18.261690647482&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.087679856115&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590422&quot; readability=&quot;17.754963131027&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8774815655133&quot;&gt;&lt;tr readability=&quot;17.754963131027&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;27.618831537153&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;29.913892078071&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;JITX | Algorithmics Software Engineer | Berkeley | Full-Time | www.jitx.com&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;The vision of JITX (YCS18) is to fully automate hardware design to advance science and the welfare of humanity. Our first step is to automate circuit board design. We are a profitable seed-stage startup, backed by Y Combinator and Sequoia.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We are looking for a brilliant algorithmics software engineer. You will be working together with a world-class team of electrical and software engineers to tackle real-world algorithmics problems. The ideal candidate is a creative problem-solver and excellent programmer, capable of breaking down a large complex problem into approachable sub-problems and writing high-quality code to solve each one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Ideal qualifications:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Experience designing algorithms to solve real-world problems&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Knowledge of advanced data structures, graph algorithms, solid geometry algorithms&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Experience with problem formulation using SAT/SMT/LP solvers, as numerical optimization (e.g. conjugate gradients, Lagrange multipliers), and as machine learning tasks&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Experience with programming language implementation (e.g. abstract syntax trees, intermediate representations)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Writes clear, well-organized, maintainable, and efficient code&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Here are some examples of algorithms that you'll be working on:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Routing-aware placement algorithms&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Pattern recognition and automatic generation of human-readable schematics&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Massive design space exploration for cost, area, and power&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Cost-function approximation and learning heuristics for expensive objective functions&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;- Electrical and manufacturing verification and validation&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We’re building the tool engineers have wanted for a long time. Come help us do it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Apply here: workwithus@jitx.com&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591957&quot; readability=&quot;16.024691358025&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.0123456790123&quot;&gt;&lt;tr readability=&quot;16.024691358025&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.610748002905&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592612&quot; readability=&quot;26.716022099448&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;13.358011049724&quot;&gt;&lt;tr readability=&quot;26.716022099448&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.082872928177&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593694&quot; readability=&quot;18.416852678571&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.2084263392857&quot;&gt;&lt;tr readability=&quot;18.416852678571&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.932198660714&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590295&quot; readability=&quot;16.212189616253&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.1060948081264&quot;&gt;&lt;tr readability=&quot;16.212189616253&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.013544018059&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589969&quot; readability=&quot;9.4912718204489&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7456359102244&quot;&gt;&lt;tr readability=&quot;9.4912718204489&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590154&quot; readability=&quot;7.3774680603949&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6887340301974&quot;&gt;&lt;tr readability=&quot;7.3774680603949&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.2218350754936&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589833&quot; readability=&quot;4.8649468892261&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591963&quot; readability=&quot;25.240875912409&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;12.620437956204&quot;&gt;&lt;tr readability=&quot;25.240875912409&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.357664233577&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593469&quot; readability=&quot;1.469387755102&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593087&quot; readability=&quot;12.052631578947&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.0263157894737&quot;&gt;&lt;tr readability=&quot;12.052631578947&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.516194331984&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590135&quot; readability=&quot;17.52176370831&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.7608818541549&quot;&gt;&lt;tr readability=&quot;17.52176370831&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;23.36235161108&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590164&quot; readability=&quot;10.3125&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.15625&quot;&gt;&lt;tr readability=&quot;10.3125&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.3125&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592248&quot; readability=&quot;10.213049267643&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589743&quot; readability=&quot;10.146453089245&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.0732265446224&quot;&gt;&lt;tr readability=&quot;10.146453089245&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.146453089245&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592061&quot; readability=&quot;18.83850931677&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.4192546583851&quot;&gt;&lt;tr readability=&quot;18.83850931677&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.389973380657&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593817&quot; readability=&quot;6.7483355525965&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.3741677762983&quot;&gt;&lt;tr readability=&quot;6.7483355525965&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.676431424767&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593820&quot; readability=&quot;8.8336192109777&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.4168096054889&quot;&gt;&lt;tr readability=&quot;8.8336192109777&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6252144082333&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592167&quot; readability=&quot;11.966065747614&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.983032873807&quot;&gt;&lt;tr readability=&quot;11.966065747614&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.538706256628&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592666&quot; readability=&quot;17.033412887828&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.5167064439141&quot;&gt;&lt;tr readability=&quot;17.033412887828&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.613961813842&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591931&quot; readability=&quot;22.279900332226&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.139950166113&quot;&gt;&lt;tr readability=&quot;22.279900332226&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.606312292359&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591854&quot; readability=&quot;14.361493123772&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.1807465618861&quot;&gt;&lt;tr readability=&quot;14.361493123772&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.361493123772&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589898&quot; readability=&quot;13.485094850949&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7425474254743&quot;&gt;&lt;tr readability=&quot;13.485094850949&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.378048780488&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592136&quot; readability=&quot;17.384353741497&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.6921768707483&quot;&gt;&lt;tr readability=&quot;17.384353741497&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.841836734694&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592308&quot; readability=&quot;13.503694581281&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7518472906404&quot;&gt;&lt;tr readability=&quot;13.503694581281&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.802955665025&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594249&quot; readability=&quot;3.3216374269006&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6608187134503&quot;&gt;&lt;tr readability=&quot;3.3216374269006&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590017&quot; readability=&quot;11.171094580234&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.5855472901169&quot;&gt;&lt;tr readability=&quot;11.171094580234&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.360255047821&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592240&quot; readability=&quot;8.0942184154176&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.0471092077088&quot;&gt;&lt;tr readability=&quot;8.0942184154176&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.591006423983&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592319&quot; readability=&quot;22.481690140845&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.240845070423&quot;&gt;&lt;tr readability=&quot;22.481690140845&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.128169014085&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592544&quot; readability=&quot;10.179302045728&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.089651022864&quot;&gt;&lt;tr readability=&quot;10.179302045728&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.492779783394&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591757&quot; readability=&quot;14.516020236088&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.2580101180438&quot;&gt;&lt;tr readability=&quot;14.516020236088&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.691399662732&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592518&quot; readability=&quot;14.409185803758&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.2045929018789&quot;&gt;&lt;tr readability=&quot;14.409185803758&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.409185803758&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591545&quot; readability=&quot;12.28897338403&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.1444866920152&quot;&gt;&lt;tr readability=&quot;12.28897338403&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.8326996197719&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589751&quot; readability=&quot;14&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7&quot;&gt;&lt;tr readability=&quot;14&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.5625&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592027&quot; readability=&quot;21.154861944778&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.577430972389&quot;&gt;&lt;tr readability=&quot;21.154861944778&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.750900360144&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592982&quot; readability=&quot;8.1992882562278&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.0996441281139&quot;&gt;&lt;tr readability=&quot;8.1992882562278&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.288256227758&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591590&quot; readability=&quot;16.15625&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.078125&quot;&gt;&lt;tr readability=&quot;16.15625&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.15625&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18590069&quot; readability=&quot;13.162849872774&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.5814249363868&quot;&gt;&lt;tr readability=&quot;13.162849872774&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.222646310433&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591717&quot; readability=&quot;14.863905325444&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.4319526627219&quot;&gt;&lt;tr readability=&quot;14.863905325444&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.399408284024&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591952&quot; readability=&quot;5.5638432364096&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592321&quot; readability=&quot;6.6839378238342&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592349&quot; readability=&quot;4.4772727272727&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2386363636364&quot;&gt;&lt;tr readability=&quot;4.4772727272727&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593823&quot; readability=&quot;22.529568697199&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.264784348599&quot;&gt;&lt;tr readability=&quot;22.529568697199&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;23.509115162294&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18589776&quot; readability=&quot;37.951482479784&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;18.975741239892&quot;&gt;&lt;tr readability=&quot;37.951482479784&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;25.617250673854&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;26.81045751634&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Recursion Pharmaceuticals | SLC, Utah | Onsite, full-time | We have raised over $80M to apply machine learning to one of the most unique datasets in existence - tens of millions of images of cells under a huge number of biological and chemical perturbations, generated in our own labs - in order to find treatments for hundreds of diseases. Our long term mission is to decode biology to radically improve lives - we want to understand biology so well that we can fix most things that go wrong in our bodies. Among other awesome folks, Yoshua Bengio is one of our advisors, and helps our ML team come up with novel ways of tackling these problems.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;We’re looking for: * ML researchers: Looking for a highly experienced senior/principal-level machine learning researcher who wants a challenging problem, lots of rich data, and knowledge that their breakthroughs will seriously help people. No bio background needed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;* Biologists, computational biologists, computational chemists, automation scientists, and drug discovery experts. &lt;a href=&quot;http://www.recursionpharma.com/careers&quot; rel=&quot;nofollow&quot;&gt;http://www.recursionpharma.com/careers&lt;/a&gt; for more details and to apply.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Logistics: Salt Lake City, Utah. Hiking/running/biking is literally out our back door, and it's half an hour to 6 ski resorts. Great pay, health insurance, 401k, relocation assistance (onsite is required), equity, a top-caliber team, and help make a massively positive impact. Happy to sponsor/extend visas, but you need to already be authorized to work in the US--we can’t handle the lottery at this stage.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Tech: Data science: pydata stack (pandas, numpy, scikit-learn, matplotlib, bokeh, tensorflow w/keras, etc), a cluster of GPUs for all your research ideas&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Software engineering: python, clojure[script], javascript, go, react.js, kafka, kubernetes (GKE), GCE, AWS Our team of 110 so far: &lt;a href=&quot;http://www.recursionpharma.com/team&quot; rel=&quot;nofollow&quot;&gt;http://www.recursionpharma.com/team&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591675&quot; readability=&quot;8.0973451327434&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.0486725663717&quot;&gt;&lt;tr readability=&quot;8.0973451327434&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.6924778761062&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591846&quot; readability=&quot;9.7559414990859&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594287&quot; readability=&quot;1.5833333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592574&quot; readability=&quot;17.326203208556&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.6631016042781&quot;&gt;&lt;tr readability=&quot;17.326203208556&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.475935828877&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592180&quot; readability=&quot;19.266666666667&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.6333333333333&quot;&gt;&lt;tr readability=&quot;19.266666666667&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.685507246377&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18593583&quot; readability=&quot;1.5581395348837&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18594453&quot; readability=&quot;6.6421267893661&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.321063394683&quot;&gt;&lt;tr readability=&quot;6.6421267893661&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.2188139059305&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592694&quot; readability=&quot;1.3090909090909&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592783&quot; readability=&quot;0.90909090909091&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18592575&quot; readability=&quot;8.5984251968504&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2992125984252&quot;&gt;&lt;tr readability=&quot;8.5984251968504&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.7385826771654&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;18591974&quot; readability=&quot;9.6265356265356&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.8132678132678&quot;&gt;&lt;tr readability=&quot;9.6265356265356&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.027641277641&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;morespace&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</description>
<pubDate>Mon, 03 Dec 2018 16:00:14 +0000</pubDate>
<dc:creator>whoishiring</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18589702</dc:identifier>
</item>
<item>
<title>PhysX SDK 4.0, an Open-Source Physics Engine</title>
<link>https://news.developer.nvidia.com/announcing-physx-sdk-4-0-an-open-source-physics-engine/</link>
<guid isPermaLink="true" >https://news.developer.nvidia.com/announcing-physx-sdk-4-0-an-open-source-physics-engine/</guid>
<description>&lt;p&gt;&lt;span&gt;NVIDIA is proud to announce PhysX SDK 4.0, available on December 20, 2018.&lt;/span&gt; &lt;span id=&quot;more-12210&quot;/&gt;&lt;span&gt;The engine has been upgraded to provide industrial grade simulation quality at game simulation&lt;/span&gt; &lt;span&gt;performance.&lt;/span&gt; &lt;span&gt;In addition, PhysX SDK has gone open source, starting today with version 3.4!  &lt;/span&gt;&lt;span&gt;It is available under the simple&lt;/span&gt; &lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;&lt;span&gt;3-Clause BSD license&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt; &lt;span&gt;With access to the source code, developers can debug, customize and extend the PhysX SDK as they see fit.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Temporal Gauss-Seidel Solver (TGS), which makes machinery, characters/ragdolls, and anything else that is jointed or articulated much more robust. TGS dynamically re-computes constraints with each iteration, based on bodies’ relative motion.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Overall stability has been improved with reduced coordinate articulations and joint improvements.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Increased scalability via new filtering rules for kinematics and statics.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;New Bounding Volume Hierarchies support fast scene queries for actors with a huge number of shapes.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Infrastructure can now incorporate Cmake projects.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;BSD 3 licensed platforms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Apple iOS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Apple Mac OS X&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Google Android ARM (version 2.2 or later required for SDK, 2.3 or later required for snippets)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Linux (tested on Ubuntu)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Microsoft Windows XP or later (NVIDIA Driver version R304 or later is required for GPU acceleration)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Unchanged NVIDIA EULA platforms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Microsoft XBox One&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Sony Playstation 4&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Nintendo Switch&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;PhysX has been the market leader in physics simulations for more than a decade. The SDK holds the top spot due to continuous upgrades and optimizations; NVIDIA has ensured that PhysX is always ahead of the curve, enabling developers to deliver&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;state-of-the-art physics simulations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/NVIDIAGameWorks/PhysX-3.4&quot;&gt;&lt;strong&gt;Download PhysX SDK 3.4 today&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 03 Dec 2018 15:33:49 +0000</pubDate>
<dc:creator>homarp</dc:creator>
<og:type>article</og:type>
<og:title>Announcing PhysX SDK 4.0, an Open-Source Physics Engine - NVIDIA Developer News Center</og:title>
<og:description>NVIDIA is proud to announce PhysX SDK 4.0, available on December 20, 2018. The engine has been upgraded to provide industrial grade simulation quality at game simulation performance. In addition, PhysX SDK has gone open source, starting today with version 3.4!  It is available under the simple 3-Clause BSD license. With access to the source</og:description>
<og:url>https://news.developer.nvidia.com/announcing-physx-sdk-4-0-an-open-source-physics-engine/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.developer.nvidia.com/announcing-physx-sdk-4-0-an-open-source-physics-engine/</dc:identifier>
</item>
<item>
<title>Ask HN: What are your “brain hacks” that help you manage everyday situations?</title>
<link>https://news.ycombinator.com/item?id=18588727</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18588727</guid>
<description>I'm incredibly fortunate to have a chairman on our board who brings so much clarity of thought to the business.
&lt;p&gt;He's unemotional yet thoughtful. If he doesn't have an immediate answer for something, he instinctively understands how to search for the answer. He has a natural sense of the real priority of work and discussions.&lt;/p&gt;&lt;p&gt;So I asked him for some of his favourite brain hacks...simple tricks he uses when he has a mental challenge to overcome. A couple of his insights were very useful to me, so I thought I'd share them here and ask HN for their personal brain hacks in response.&lt;/p&gt;
&lt;p&gt;Artificial deadlines&lt;/p&gt;
&lt;p&gt;He has a clever technique for bringing tough choices to a conclusion and avoiding procrastination. This is especially useful for life changing decisions such as moving country or taking that new job.&lt;/p&gt;
&lt;p&gt;To put an end to the decision making process he sets a deadline for the decision to be made. Say 6pm on Monday. At five minutes to 6 he usually doesn't know the answer but in those 5 minutes something clicks, and by 6pm the answer is always there.&lt;/p&gt;
&lt;p&gt;10/10/10 rule&lt;/p&gt;
&lt;p&gt;This is something I've read before but he applies this. The 10/10/10 is the framing of the outcome of a decision across three timeframes:&lt;/p&gt;
&lt;p&gt;How will he feel about the outcome 10 minutes from now? How about 10 months from now? How about 10 years from now?&lt;/p&gt;
&lt;p&gt;The answers to these questions provide a different perspective and usually help him to find the correct answer without being misguided by circumstances at the time of making the decision.&lt;/p&gt;
&lt;p&gt;This will all be over by 6pm&lt;/p&gt;
&lt;p&gt;If there's an important meeting with stakeholders, a scary appointment with the doctor or a tough chat with an employee - he simply keeps in mind the fact that by &quot;X time&quot;, the thing will have passed and won't matter anymore.&lt;/p&gt;
&lt;p&gt;If it doesn't matter after X time, chances are it probably doesn't matter now.&lt;/p&gt;
&lt;p&gt;Edit: Formatting.&lt;/p&gt;
</description>
<pubDate>Mon, 03 Dec 2018 13:56:22 +0000</pubDate>
<dc:creator>simonswords82</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18588727</dc:identifier>
</item>
<item>
<title>How I Wrote a Modern C++ Library in Rust</title>
<link>https://hsivonen.fi/modern-cpp-in-rust/</link>
<guid isPermaLink="true" >https://hsivonen.fi/modern-cpp-in-rust/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;How I Wrote a Modern C++ Library in Rust&lt;/title&gt;&lt;meta content=&quot;width=device-width, initial-scale=1&quot; name=&quot;viewport&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/style/rust/rust.css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/style/highlightjs/github.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;809.34452091527&quot;&gt;

&lt;p&gt;Since version 56, Firefox has had a new character encoding conversion library called encoding_rs. It is written in Rust and replaced the old C++ character encoding conversion library called uconv that dated from early 1999. Initially, all the callers of the character encoding conversion library were C++ code, so the new library, despite being written in Rust, needed to feel usable when used from C++ code. In fact, the library appears to C++ callers as a modern C++ library. Here are the patterns that I used to accomplish that.&lt;/p&gt;
&lt;p&gt;(There is &lt;a href=&quot;https://hsivonen.fi/encoding_rs/&quot;&gt;another write-up about encoding_rs itself&lt;/a&gt;. I presented most of the content in &lt;em&gt;this&lt;/em&gt; write-up in my talk at RustFest Paris: &lt;a href=&quot;https://media.ccc.de/v/rustfest18-5-a_rust_crate_that_also_quacks_like_a_modern_c_library&quot;&gt;video&lt;/a&gt;, &lt;a href=&quot;https://hsivonen.fi/rustfest2018/&quot;&gt;slides&lt;/a&gt;.)&lt;/p&gt;
&lt;h2 id=&quot;modern&quot;&gt;Modern C++ in What Way?&lt;/h2&gt;
&lt;p&gt;By “modern” C++ I mean that the interface that C++ callers see conforms to the &lt;a href=&quot;https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines&quot;&gt;C++ Core Guidelines&lt;/a&gt; and uses certain new features:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Heap allocations are managed by returning pointers to heap-allocated objects within &lt;code&gt;std::unique_ptr&lt;/code&gt; / &lt;code&gt;mozilla::UniquePtr&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Caller-allocated buffers are represented using &lt;code&gt;gsl::span&lt;/code&gt; / &lt;code&gt;mozilla::Span&lt;/code&gt; instead of plain pointer and length.&lt;/li&gt;
&lt;li&gt;Multiple return values are represented using &lt;code&gt;std::tuple&lt;/code&gt; / &lt;code&gt;mozilla::Tuple&lt;/code&gt; instead of out params.&lt;/li&gt;
&lt;li&gt;Non-null plain pointers are annotated using &lt;code&gt;gsl::not_null&lt;/code&gt; / &lt;code&gt;mozilla::NotNull&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;gsl::&lt;/code&gt; above refers to the &lt;a href=&quot;https://github.com/microsoft/GSL&quot;&gt;Guidelines Support Library&lt;/a&gt;, which provides things that the Core Guidelines expect to have available but that are not (yet) in the C++ standard library.&lt;/p&gt;
&lt;h2 id=&quot;rust&quot;&gt;C++ Library in Rust?&lt;/h2&gt;
&lt;p&gt;By writing a C++ library “in Rust” I mean that the bulk of the library is actually a library written in Rust, but the interface provided to C++ callers makes it look and feel like a real C++ library as far as the C++ callers can tell.&lt;/p&gt;
&lt;h2 id=&quot;ffi&quot;&gt;Both C++ and Rust Have C Interop&lt;/h2&gt;
&lt;p&gt;C++ has a very complex ABI, and the Rust ABI is not frozen. However, both C++ and Rust support functions that use the C ABI. Therefore, interoperability between C++ and Rust involves writing things in such a way that C++ sees Rust code as C code and Rust sees C++ code as C code.&lt;/p&gt;
&lt;h2 id=&quot;simple&quot;&gt;Simplifying Factors&lt;/h2&gt;
&lt;p&gt;This write-up should not be considered a comprehensive guide to exposing Rust code to C++. The interface to encoding_rs is simple enough that it lacks some complexities that one could expect from the general case of interoperability between the two languages. However, the factors that simplify the C++ exposure of encoding_rs can be taken as a guide to simplifications that one should seek to achieve in the interest of easy cross-language interoperability when designing libraries. Specifically:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;encoding_rs never calls out to C++: The cross-language calls are unidirectional.&lt;/li&gt;
&lt;li&gt;encoding_rs does not hold references to C++ objects after a call returns: There is no need for Rust code to manage C++ memory.&lt;/li&gt;
&lt;li&gt;encoding_rs does not present an inheritance hierarchy either in Rust or in C++: There are no vtables on either side.&lt;/li&gt;
&lt;li&gt;The datatypes that encoding_rs operates on are very simple: Contiguous buffers of primitives (buffers of &lt;code&gt;u8&lt;/code&gt;/&lt;code&gt;uint8_t&lt;/code&gt; and &lt;code&gt;u16&lt;/code&gt;/&lt;code&gt;char16_t&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Only the &lt;code&gt;panic=abort&lt;/code&gt; configuration (i.e. a Rust panic terminates the program instead of unwinding the stack) is supported and &lt;em&gt;the code presented here is only correct if that option is used&lt;/em&gt;. The code presented here does not try to prevent Rust panics from unwinding across the FFI, and letting a panic unwind across the FFI is Undefined Behavior.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;quick&quot;&gt;A Very Quick Look at the API&lt;/h2&gt;
&lt;p&gt;To get an idea about &lt;a href=&quot;https://docs.rs/encoding_rs&quot;&gt;the Rust API under discussion&lt;/a&gt;, let’s take a high-level look. The library has three public structs: &lt;code&gt;Encoding&lt;/code&gt;, &lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt;. From the point of view of the library user, these structs are used like traits, superclasses or interfaces in the sense that they provide a uniform interface to various concrete encodings, but technically they are indeed structs. Instances of &lt;code&gt;Encoding&lt;/code&gt; are statically allocated. &lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt; encapsulate the state of a streaming conversion and are allocated at run-time.&lt;/p&gt;
&lt;p&gt;A reference to an &lt;code&gt;Encoding&lt;/code&gt;, that is &lt;code&gt;&amp;amp;'static Encoding&lt;/code&gt;, can be obtained either from label (textual identification extracted from protocol text) or by a named static. The &lt;code&gt;Encoding&lt;/code&gt; can then be used as a factor for a &lt;code&gt;Decoder&lt;/code&gt;, which is stack-allocated.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; encoding: &amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'static&lt;/span&gt; Encoding =
    Encoding::for_label( 
        byte_slice_from_protocol
    ).unwrap_or(
        WINDOWS_1252     
    );

&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; decoder: Decoder =
    encoding.new_decoder();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the streaming case, a method for decoding from a caller-allocated slice into another caller-allocate slice is available on the &lt;code&gt;Decoder&lt;/code&gt;. The decoder performs no heap allocations.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DecoderResult&lt;/span&gt;&lt;/span&gt; {
    InputEmpty,
    OutputFull,
    Malformed(&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;),
}

&lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; Decoder {
    &lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;decode_to_utf16_without_replacement&lt;/span&gt;&lt;/span&gt;(
        &amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;,
        src: &amp;amp;[&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;],
        dst: &amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; [&lt;span class=&quot;hljs-built_in&quot;&gt;u16&lt;/span&gt;],
        last: &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;
    ) -&amp;gt; (DecoderResult, &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the non-streaming case, the caller does not need to deal with &lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt; at all. Instead, methods for handling an entire logical input stream in one buffer are provided on &lt;code&gt;Encoding&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; Encoding {
    &lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;decode_without_bom_handling_and_without_replacement&lt;/span&gt;&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-symbol&quot;&gt;'a&lt;/span&gt;&amp;gt;(
        &amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;,
        bytes: &amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'a&lt;/span&gt; [&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;],
    ) -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Option&lt;/span&gt;&amp;lt;Cow&amp;lt;&lt;span class=&quot;hljs-symbol&quot;&gt;'a&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;&amp;gt;&amp;gt;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;process&quot;&gt;The Process&lt;/h2&gt;
&lt;h3 id=&quot;friendliness&quot;&gt;0. Designing for FFI-friendliness&lt;/h3&gt;
&lt;p&gt;Some of the simplifying factors arise from the problem domain itself. Others are a matter of choice.&lt;/p&gt;
&lt;p&gt;A character encoding library could reasonably present traits (similar to abstract superclasses with no fields in C++) for each of the concepts of an encoding, a decoder and an encoder. Instead, encoding_rs has structs for these that internally &lt;code&gt;match&lt;/code&gt; on an &lt;code&gt;enum&lt;/code&gt; for dispatch instead of relying on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_method_table&quot;&gt;vtable&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Decoder&lt;/span&gt;&lt;/span&gt; { 
   variant: VariantDecoder,
   
}

&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;VariantDecoder&lt;/span&gt;&lt;/span&gt; { 
    SingleByte(SingleByteDecoder),
    Utf8(Utf8Decoder),
    Gb18030(Gb18030Decoder),
    
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The primary motivation for this wasn’t as much eliminating vtables per se but to make the hierarchy intentionally unextensible. This reflects a philosophy that adding character encodings is not something that programmers should do. Instead, programs should use UTF-8 for interchange, and programs should support legacy encodings only to the extent necessary for compatibility with existing content. The non-extensibility of the hierarchy provides stronger type-safety. If you have an &lt;code&gt;Encoding&lt;/code&gt; from encoding_rs, you can trust that it doesn’t exhibit characteristics that aren’t exhibited by the encodings defined in the Encoding Standard. That is, you can trust that it won’t behave like UTF-7 or EBCDIC.&lt;/p&gt;
&lt;p&gt;Additionally, by dispatching on an &lt;code&gt;enum&lt;/code&gt;, a decoder for one encoding can internally morph into a decoder for another encoding in response to &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;BOM&lt;/a&gt; sniffing.&lt;/p&gt;
&lt;p&gt;One might argue that the Rustic way to provide encoding converters would be making them into iterator adaptors that consume an iterator of bytes and yield Unicode scalar values or vice versa. In addition to iterators being more complex to expose across the FFI, iterators make it harder to perform tricks to accelerate ASCII processing. Taking a slice to read from and a slice to write to not only makes it easier to represent things in a C API (in C terms, a Rust slice decomposes to an aligned non-null pointer and a length) but also enables ASCII acceleration by processing more than one code unit at a time making use of the observation that multiple code units fit in a single register (either an ALU register or a SIMD register).&lt;/p&gt;
&lt;p&gt;If the Rust-native API deals only with primitives, slices and (non-trait object) structs, it is easier to map to a C API than a Rust API that deals with fancier Rust features. (In Rust, you have a &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html#trait-objects-perform-dynamic-dispatch&quot;&gt;trait object&lt;/a&gt; when type erasure happens. That is, you have a trait-typed reference that does not say the concrete struct type of the referent that implements the trait.)&lt;/p&gt;
&lt;h3 id=&quot;c&quot;&gt;1. Creating the C API&lt;/h3&gt;
&lt;p&gt;When the types involved are simple enough, the main mismatches between C and Rust are the lack of methods and multiple return values in C and the inability to transfer non-C-like structs by value.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Methods are wrapped by functions whose first argument is a pointer to the struct whose method is being wrapped.&lt;/li&gt;
&lt;li&gt;Slice arguments become two arguments: the pointer to the start of the slice and the length of the slice.&lt;/li&gt;
&lt;li&gt;One primitive value is returned as a function return value and the rest become out params. When the output params clearly relate to inputs of the same type, it makes sense to use in/out params.&lt;/li&gt;
&lt;li&gt;When a Rust method returns the struct by value, the wrapper function boxes it and returns a pointer such that the Rust side forgets about the struct. Additionally, a function for freeing a given struct type by pointer is added. Such a method simply turns pointer back into a box and drops the box. The struct is opaque from the C point of view.&lt;/li&gt;
&lt;li&gt;As a special case, the method for getting the name of an encoding, which in Rust would return &lt;code&gt;&amp;amp;'static str&lt;/code&gt; is wrapped by a function that takes a pointer to writable buffer whose length must be at least the length of the longest name.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enum&lt;/code&gt;s signaling the exhaustion of the input buffer, the output buffer becoming full or errors with detail about the error became &lt;code&gt;uint32_t&lt;/code&gt; with constants for “input empty” and “output full” and rules for how to interpret the other error details. This isn’t ideal but works pretty well in this case.&lt;/li&gt;
&lt;li&gt;Overflow-checking length computations are presented as saturating instead. That is, the caller has to treat &lt;code&gt;SIZE_MAX&lt;/code&gt; as a value signaling overflow.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;cpp&quot;&gt;2. Re-Creating the Rust API in C++ over the C API&lt;/h3&gt;
&lt;p&gt;Even &lt;a href=&quot;https://github.com/hsivonen/encoding_c/blob/master/include/encoding_rs.h&quot;&gt;an idiomatic C API&lt;/a&gt; doesn’t make for a modern C++ API. Fortunately, Rustic concepts like multiple return values and slices can be represented in C++, and by reinterpreting pointers returned by the C API as pointers to C++ objects, it’s possible to present the ergonomics of C++ methods.&lt;/p&gt;
&lt;p&gt;Most of the examples are from &lt;a href=&quot;https://github.com/hsivonen/encoding_c/blob/master/include/encoding_rs_cpp.h&quot;&gt;a version of the API that uses C++17 standard library types&lt;/a&gt;. In Gecko, we generally avoid the C++ standard library and use &lt;a href=&quot;https://searchfox.org/mozilla-central/source/intl/Encoding.h&quot;&gt;a version of the C++ API to encoding_rs that uses Gecko-specific types&lt;/a&gt;. I assume that the standard-library-type examples make more sense to a broader audience.&lt;/p&gt;
&lt;h4 id=&quot;methods&quot;&gt;Method Ergonomics&lt;/h4&gt;
&lt;p&gt;For each opaque struct pointer type in C, a class is defined in C++ and the C header is tweaked such that the pointer types become pointers to instances of the C++ classes from the point of view of the C++ compiler. This amounts to a &lt;code&gt;reinterpret_cast&lt;/code&gt; of the pointers without actually writing out the &lt;code&gt;reinterpret_cast&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since the pointers don’t truly point to instances of the classes that they appear to point to but point to instances of Rust structs instead, it’s a good idea to take some precautions. No fields are declared for the classes. The default no-argument and copy constructors are &lt;code&gt;delete&lt;/code&gt;d as is the default &lt;code&gt;operator=&lt;/code&gt;. Additionally, there must be no virtual methods. (This last point is an important limitation that will come back to later.)&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cpp&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Encoding&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;final&lt;/span&gt; {&lt;/span&gt;

&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt;:
    Encoding() = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
    Encoding(&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
    Encoding&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;operator&lt;/span&gt;=(&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
    ~Encoding() = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the case of &lt;code&gt;Encoding&lt;/code&gt; whose all instances are static, the destructor is &lt;code&gt;delete&lt;/code&gt;d as well. In the case of the dynamically-allocated &lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt; both an empty destructor and a &lt;code&gt;static void operator delete&lt;/code&gt; is added. (An example follows a bit later.) This enables the destruction of the fake C++ class to be routed to the right type-specific freeing function in the C API.&lt;/p&gt;
&lt;p&gt;With that foundation in place to materialize pointers that look like pointers to C++ class instances, it’s possible to make method calls on this pointers work. (An example follows after introducing the next concept, too.)&lt;/p&gt;
&lt;h4 id=&quot;heap&quot;&gt;Returning Dynamically-Allocated Objects&lt;/h4&gt;
&lt;p&gt;As noted earlier, the cases where the Rust API would return an &lt;code&gt;Encoder&lt;/code&gt; or a &lt;code&gt;Decoder&lt;/code&gt; by value so that the caller can place them on the stack is replaced by the FFI wrapper boxing the objects so that the C API exposes only heap-allocated objects by pointer. Also, the reinterpretation of these pointers as &lt;code&gt;delete&lt;/code&gt;able C++ object pointers was already covered.&lt;/p&gt;
&lt;p&gt;That still leaves making sure that &lt;code&gt;delete&lt;/code&gt; is actually used at an appropriate time. In modern C++, when an object can have only one legitimate owner of the time, this is accomplished by wrapping the object pointer in &lt;code&gt;std::unique_ptr&lt;/code&gt; or &lt;code&gt;mozilla::UniquePtr&lt;/code&gt;. The old &lt;code&gt;uconv&lt;/code&gt; converters supported reference counting, but all the actual uses in the Gecko code base involved only one owner for each converter. Since the usage patterns of encoders and decoders are such that there is only one legitimate owner of the time, using &lt;code&gt;std::unique_ptr&lt;/code&gt; and &lt;code&gt;mozilla::UniquePtr&lt;/code&gt; is what the two C++ wrappers for encoding_rs do.&lt;/p&gt;
&lt;p&gt;Let’s take a look at a factory method on &lt;code&gt;Encoding&lt;/code&gt; that returns a &lt;code&gt;Decoder&lt;/code&gt;. In Rust, we have a method that takes a reference to &lt;code&gt;self&lt;/code&gt; and returns &lt;code&gt;Decoder&lt;/code&gt; by value.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; Encoding {
    &lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;new_decoder&lt;/span&gt;&lt;/span&gt;(&amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;) -&amp;gt; Decoder {
        
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On the FFI layer, we have an explicit pointer-typed first argument that corresponds to Rust &lt;code&gt;&amp;amp;self&lt;/code&gt; and C++ &lt;code&gt;this&lt;/code&gt; (specifically, the &lt;code&gt;const&lt;/code&gt; version of &lt;code&gt;this&lt;/code&gt;). We allocate memory on the heap (&lt;code&gt;Box::new()&lt;/code&gt;) and place the &lt;code&gt;Decoder&lt;/code&gt; into the allocated memory. We then forget about the allocation (&lt;code&gt;Box::into_raw&lt;/code&gt;) so that we can return the pointer to C without deallocating at the end of the scope. In order to be able to free the memory, we introduce a new function that puts the &lt;code&gt;Box&lt;/code&gt; back together and assigns it into a variable that immediately goes out of scope causing the heap allocation to be freed.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;encoding_new_decoder&lt;/span&gt;&lt;/span&gt;(
    encoding: *&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding) -&amp;gt; *&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; Decoder
{
    &lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;::into_raw(&lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;::new((*encoding).new_decoder()))
}

&lt;span class=&quot;hljs-meta&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;decoder_free&lt;/span&gt;&lt;/span&gt;(decoder: *&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; Decoder) {
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; _ = &lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;::from_raw(decoder);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the C header, they look like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;c hljs cpp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;ENCODING_RS_DECODER*
&lt;span class=&quot;hljs-title&quot;&gt;encoding_new_decoder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ENCODING_RS_ENCODING &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;* encoding)&lt;/span&gt;&lt;/span&gt;;

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;hljs-title&quot;&gt;decoder_free&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ENCODING_RS_DECODER* decoder)&lt;/span&gt;&lt;/span&gt;;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ENCODING_RS_DECODER&lt;/code&gt; is a macro that is used for substituting the right C++ type when the C header is used in the C++ context instead of being used as a plain C API.&lt;/p&gt;
&lt;p&gt;On the C++ side, then, we use &lt;code&gt;std::unique_ptr&lt;/code&gt;, which is the C++ analog of Rust’s &lt;code&gt;Box&lt;/code&gt;. They are indeed very similar:&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; ptr: &lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;&amp;lt;Foo&amp;gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;hljs-built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;Foo&amp;gt; ptr&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;::new(Foo::new(a, b, c))&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;make_unique&amp;lt;Foo&amp;gt;(a, b, c)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;::into_raw(ptr)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;ptr.release()&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; ptr = &lt;span class=&quot;hljs-built_in&quot;&gt;Box&lt;/span&gt;::from_raw(raw_ptr);&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;hljs-built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;Foo&amp;gt; ptr(raw_ptr);&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;We wrap the pointer obtained from the C API in a &lt;code&gt;std::unique_ptr&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Encoding&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;final&lt;/span&gt; {&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;:
    &lt;span class=&quot;hljs-keyword&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;hljs-built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;Decoder&amp;gt; new_decoder() &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;
    {
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;hljs-built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;Decoder&amp;gt;(
            encoding_new_decoder(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;));
    }
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When the &lt;code&gt;std::unique_ptr&amp;lt;Decoder&amp;gt;&lt;/code&gt; goes out of scope, the deletion is routed back to Rust via FFI thanks to declarations like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Decoder&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;final&lt;/span&gt; {&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;:
    ~Decoder() {}
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;* decoder)&lt;/span&gt;
    &lt;/span&gt;{
        decoder_free(&lt;span class=&quot;hljs-keyword&quot;&gt;reinterpret_cast&lt;/span&gt;&amp;lt;Decoder*&amp;gt;(decoder));
    }
&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt;:
    Decoder() = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
    Decoder(&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Decoder&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
    Decoder&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;operator&lt;/span&gt;=(&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Decoder&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
};&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;how&quot;&gt;How Can it Work?&lt;/h4&gt;
&lt;p&gt;In Rust, non-trait methods are just syntactic sugar:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; Foo {
    &lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;get_val&lt;/span&gt;&lt;/span&gt;(&amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt; {
        &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;.val
    }
}

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;test&lt;/span&gt;&lt;/span&gt;(bar: Foo) {
    &lt;span class=&quot;hljs-built_in&quot;&gt;assert_eq!&lt;/span&gt;(bar.get_val(), Foo::get_val(&amp;amp;bar));
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A method call on non-trait-typed reference is just a plain function call with the reference to &lt;code&gt;self&lt;/code&gt; as the first argument. On the C++ side, non-virtual method calls work the same way: A non-virtual C++ method call is really just a function call whose first argument is the &lt;code&gt;this&lt;/code&gt; pointer.&lt;/p&gt;
&lt;p&gt;On the FFI/C layer, we can pass the same pointer as an explicit pointer-typed first argument.&lt;/p&gt;
&lt;p&gt;When calling &lt;code&gt;ptr-&amp;gt;Foo()&lt;/code&gt; where &lt;code&gt;ptr&lt;/code&gt; is of type &lt;code&gt;T*&lt;/code&gt;, the type of &lt;code&gt;this&lt;/code&gt; is &lt;code&gt;T*&lt;/code&gt; if the method is declared as &lt;code&gt;void Foo()&lt;/code&gt; (which maps to &lt;code&gt;&amp;amp;mut self&lt;/code&gt; in Rust) and &lt;code&gt;const T*&lt;/code&gt; if the method is declared as &lt;code&gt;void Foo() const&lt;/code&gt; (which maps to &lt;code&gt;&amp;amp;self&lt;/code&gt; in Rust), so &lt;code&gt;const&lt;/code&gt;-correctness is handled, too.&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;foo&lt;/span&gt;&lt;/span&gt;(&amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;, bar: &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; foo(&lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; bar) &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;foo&lt;/span&gt;&lt;/span&gt;(&amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;, bar: &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; foo(&lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; bar)&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;The qualifications about “non-trait-typed” and “non-virtual” are important. For the above to work, &lt;em&gt;we can’t have vtables on either side&lt;/em&gt;. This means no Rust trait objects and no C++ inheritance. In Rust, trait objects, i.e. trait-typed references to any struct that implements the trait, are implemented as two pointers: one to the struct instance and another to the vtable appropriate for the concrete type of the data. We need to be able to pass reference to &lt;code&gt;self&lt;/code&gt; across the FFI as a single pointer, so there’s no place for the vtable pointer when crossing the FFI. In order to keep pointers to C++ objects as C-compatible plain pointers, C++ puts the vtable pointer on the objects themselves. Since the pointers don’t really point to C++ objects carrying vtable pointers but point to Rust objects, we must make sure not to make the C++ implementation expect to find a vtable pointer on the pointee.&lt;/p&gt;
&lt;p&gt;As a consequence, the C++ reflector classes for the Rust structs cannot inherit from a common baseclass of a C++ framework. In the Gecko case, the reflector classes cannot inherit from &lt;code&gt;nsISupports&lt;/code&gt;. E.g. in the context of Qt, the reflector classes wouldn’t be able to inherit from &lt;code&gt;QObject&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;nonnull&quot;&gt;Non-Nullable Pointers&lt;/h4&gt;
&lt;p&gt;There are methods in the Rust API that return &lt;code&gt;&amp;amp;'static Encoding&lt;/code&gt;. Rust references can never be null, and it would be nice to relay this piece of information in the C++ API. It turns out that there is a C++ idiom for this: &lt;code&gt;gsl::not_null&lt;/code&gt; and &lt;code&gt;mozilla::NotNull&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;gsl::not_null&lt;/code&gt; and &lt;code&gt;mozilla::NotNull&lt;/code&gt; are just type system-level annotations that don’t change the machine representation of the underlying pointer and since from the guarantees Rust we know which pointers that we get from the FFI really never are null, it is tempting to apply the same reinterpretation trick of lying to the C++ compiler about types that we use to reinterpret pointers returned by the FFI as pointers to fieldless C++ objects with no virtual methods and to claim in a header file that the pointers that we know not to be null in the FFI return values are of the type &lt;code&gt;mozilla::NotNull&amp;lt;const Encoding*&amp;gt;&lt;/code&gt;. Unfortunately, this doesn’t actually work because types involving templates are not allowed in the declarations of &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; functions in C++, so the C++ code ends up executing a branch for the null check when wrapping pointers received from the C API with &lt;code&gt;gsl::not_null&lt;/code&gt; or &lt;code&gt;mozilla::NotNull&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, there are also declarations of static pointers to the constant encoding objects (where the pointees are defined in Rust) and it happens that C++ &lt;em&gt;does&lt;/em&gt; allow declaring those as &lt;code&gt;gsl::not_null&amp;lt;const Encoding*&amp;gt;&lt;/code&gt;, so that is what is done. (Thanks to Masatoshi Kimura for pointing out that this is possible.)&lt;/p&gt;
&lt;p&gt;The statically-allocated instances of &lt;code&gt;Encoding&lt;/code&gt; are declared in Rust like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; UTF_8_INIT: Encoding = Encoding {
    name: &lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;,
    variant: VariantEncoding::Utf8,
};

&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; UTF_8: &amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'static&lt;/span&gt; Encoding = &amp;amp;UTF_8_INIT;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Rust, the &lt;a href=&quot;https://twitter.com/tshepang_dev/status/1051558270425591808&quot;&gt;general rule&lt;/a&gt; is that you use &lt;code&gt;static&lt;/code&gt; for an unchanging memory location and &lt;code&gt;const&lt;/code&gt; for an unchanging value. Therefore, &lt;code&gt;UTF_8_INIT&lt;/code&gt; should be &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;UTF_8&lt;/code&gt; should be &lt;code&gt;const&lt;/code&gt;: the value of the reference to the &lt;code&gt;static&lt;/code&gt; instance is unchanging, but statically allocating a memory location for the reference is not logically necessary. Unfortunately, Rust has a rule that says that the right-hand side of &lt;code&gt;const&lt;/code&gt; may not contain anything &lt;code&gt;static&lt;/code&gt; and this is applied so heavily as to prohibit even references to &lt;code&gt;static&lt;/code&gt;, in order to ensure that the right-hand side of a &lt;code&gt;const&lt;/code&gt; declaration can be statically checked to be suitable for use within any imaginable &lt;code&gt;const&lt;/code&gt; declaration—even one that tried to dereference the reference at compile time.&lt;/p&gt;
&lt;p&gt;For FFI, though, we need to allocate an unchanging memory location to a pointer to &lt;code&gt;UTF_8_INIT&lt;/code&gt;, because such memory locations work in C linkage and allow us provide a pointer-typed named thing to C. The representation of &lt;code&gt;UTF_8&lt;/code&gt; above is already what we need, but for Rust ergonomics, we want &lt;code&gt;UTF_8&lt;/code&gt; to participate in Rust’s crate namespacing. This means that from the C perspective the name gets mangled. We waste some space by statically allocating pointers &lt;em&gt;again&lt;/em&gt; without name mangling for C usage:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ConstEncoding&lt;/span&gt;&lt;/span&gt;(*&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding);

&lt;span class=&quot;hljs-keyword&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Sync&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ConstEncoding {}

&lt;span class=&quot;hljs-meta&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; UTF_8_ENCODING: ConstEncoding =
    ConstEncoding(&amp;amp;UTF_8_INIT);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A pointer type is used to make in clear that C is supposed to see a pointer (even if a Rust reference type would have the same representation). However, the Rust compiler refuses to compile a program with globally-visible pointer. Since globals are reachable from different threads, multiple threads accessing the pointee might be problem. In this case, the pointee cannot be mutated, so global visibility is fine. To tell the compiler that this is fine, we need to implement the &lt;code&gt;Sync&lt;/code&gt; marker trait for the pointer. However, traits cannot be implemented on pointer types. As a workaround, we create a newtype for &lt;code&gt;*const Encoding&lt;/code&gt;. A newtype has the same representation as the type it wraps, but we can implement traits on the newtype. Implementing &lt;code&gt;Sync&lt;/code&gt; is &lt;code&gt;unsafe&lt;/code&gt;, because we are asserting to the compiler that something is OK when the compiler does not figure it out on its own.&lt;/p&gt;
&lt;p&gt;In C++, we can then say (what via macros expands to):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;extern&lt;/span&gt; &quot;C&quot; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;extern&lt;/span&gt; gsl::not_null&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; encoding_rs::Encoding*&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; UTF_8_ENCODING;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The pointers to the encoders and decoders are also known not to be null, since allocation failure would terminate the program, but &lt;code&gt;std::unique_ptr&lt;/code&gt; / &lt;code&gt;mozilla::UniquePtr&lt;/code&gt; and &lt;code&gt;gsl::not_null&lt;/code&gt; / &lt;code&gt;mozilla::NotNull&lt;/code&gt; cannot be combined.&lt;/p&gt;
&lt;h4 id=&quot;optional&quot;&gt;Optional Values&lt;/h4&gt;
&lt;p&gt;In Rust, it’s idiomatic to use &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; to represent return values might either have a value or might not have a value. C++ these days provides the same thing as &lt;code&gt;std::optional&amp;lt;T&amp;gt;&lt;/code&gt;. In Gecko, we instead have &lt;code&gt;mozilla::Maybe&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Rust’s &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; and C++’s &lt;code&gt;std::optional&amp;lt;T&amp;gt;&lt;/code&gt; indeed are basically the same thing:&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::nullopt;&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;Some&lt;/span&gt;(foo);&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; foo;&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;is_some()&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;has_value()&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;unwrap()&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;value()&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;unwrap_or(bar)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;value_or(bar)&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;Unfortunately, though, C++ reverses the safety ergonomics. The most ergonomic way to extract the wrapped value from a &lt;code&gt;std::optional&amp;lt;T&amp;gt;&lt;/code&gt; is via &lt;code&gt;operator*()&lt;/code&gt;, which is unchecked and, therefore, unsafe. &lt;span class=&quot;emoji&quot;&gt;😭&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;multiple&quot;&gt;Multiple Return Values&lt;/h4&gt;
&lt;p&gt;While C++ lacks language-level support for multiple return values, multiple return values are possible thanks to library-level support. In the case of the standard library, the relevant library pieces are &lt;code&gt;std::tuple&lt;/code&gt;, &lt;code&gt;std::make_tuple&lt;/code&gt; and &lt;code&gt;std::tie&lt;/code&gt;. In the case of Gecko, the relevant library pieces are &lt;code&gt;mozilla::Tuple&lt;/code&gt;, &lt;code&gt;mozilla::MakeTuple&lt;/code&gt; and &lt;code&gt;mozilla::Tie&lt;/code&gt;.&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;foo&lt;/span&gt;&lt;/span&gt;() -&amp;gt; (T, U, V)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::tuple&amp;lt;T, U, V&amp;gt; foo()&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (a, b, c);&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {a, b, c};&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; (a, b, c) = foo();&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;auto&lt;/span&gt; [a, b, c] = foo();&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; (a, b, c) = foo();&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;auto&lt;/span&gt; [a, b, c] = foo();&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;h4 id=&quot;slices&quot;&gt;Slices&lt;/h4&gt;
&lt;p&gt;A Rust slice wraps a non-owning pointer and a length that identify a contiguous part of an array. In comparison to C:&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;src: &amp;amp;[&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;c hljs cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;uint8_t&lt;/span&gt;* src, &lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; src_len&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;dst: &amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; [&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;c hljs cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;uint8_t&lt;/span&gt;* dst, &lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; dst_len&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;There isn’t a corresponding thing in the C++ standard library yet (except &lt;code&gt;std::string_view&lt;/code&gt; for read-only string slices), but it’s already part of the C++ Core Guidelines and is called a &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#i13-do-not-pass-an-array-as-a-single-pointer&quot;&gt;span&lt;/a&gt; there.&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;src: &amp;amp;[&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;gsl::span&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;uint8_t&lt;/span&gt;&amp;gt; src&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;dst: &amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; [&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;gsl::span&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;uint8_t&lt;/span&gt;&amp;gt; dst&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; vec[..]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;gsl::make_span(vec)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;std::slice::from_raw_parts(ptr, len)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;gsl::make_span(ptr, len)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; slice {}&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;auto&lt;/span&gt;&amp;amp;&amp;amp; item : span) {}&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;slice[i]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span[i]&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;slice.len()&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.size()&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;slice.as_ptr()&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.data()&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;GSL relies on C++14, but at the time encoding_rs landed, Gecko was &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1325632#c25&quot;&gt;stuck on C++11 thanks to Android&lt;/a&gt;. Since, GSL could not be used as-is in Gecko, I backported &lt;code&gt;gsl::span&lt;/code&gt; to C++11 as &lt;a href=&quot;https://searchfox.org/mozilla-central/source/mfbt/Span.h#375&quot;&gt;&lt;code&gt;mozilla::Span&lt;/code&gt;&lt;/a&gt;. The porting process was mainly a matter of ripping out &lt;code&gt;constexpr&lt;/code&gt; keywords and using &lt;code&gt;mozilla::&lt;/code&gt; types and type traits in addition to or instead of standard-library ones. After Gecko moved to C++14, some of the &lt;code&gt;constexpr&lt;/code&gt; keywords have been restored.&lt;/p&gt;
&lt;p&gt;Once we had our own &lt;code&gt;mozilla::Span&lt;/code&gt; anyway, it was possible to add Rust-like subspan ergonomics that are missing from &lt;code&gt;gsl::span&lt;/code&gt;. For the case where you want a subspan from index &lt;code&gt;i&lt;/code&gt; up to but not including index &lt;code&gt;j&lt;/code&gt;. &lt;code&gt;gsl::span&lt;/code&gt; has:&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;slice[i..]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.subspan(i)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;slice[..i]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.subspan(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, i)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;slice[i..j]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.subspan(i, j - i)&lt;/code&gt; &lt;span class=&quot;emoji&quot;&gt;😭&lt;/span&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;&lt;code&gt;mozilla::Span&lt;/code&gt; instead has:&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;slice[i..]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.From(i)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;slice[..i]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.To(i)&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&quot;rust hljs&quot;&gt;&amp;amp;slice[i..j]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code class=&quot;cpp hljs&quot;&gt;span.FromTo(i, j)&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;&lt;code&gt;gsl::span&lt;/code&gt; and Rust slices have one crucial difference in how they decompose into a pointer and a length. For zero-length &lt;code&gt;gsl::span&lt;/code&gt; it is possible for the pointer to be &lt;code&gt;nullptr&lt;/code&gt;. In the case of Rust slices, the pointer must always be non-null and aligned even for zero-length slices. This may look counter-intuitive at first: When the length is zero, the pointer never gets dereferenced, so why doesn’t matter whether it is null are not? It turns out that it matters for optimizing out the &lt;code&gt;enum&lt;/code&gt; discriminant in &lt;code&gt;Option&lt;/code&gt;-like enums. &lt;code&gt;None&lt;/code&gt; is represented by all-zero bits, so if wrapped in &lt;code&gt;Some()&lt;/code&gt;, a slice with null as the pointer and zero as the length would accidentally have the same representation as &lt;code&gt;None&lt;/code&gt;. By requiring the pointer to be a potentially bogus non-null pointer, a zero-length slice inside an &lt;code&gt;Option&lt;/code&gt; can be represented distinctly from &lt;code&gt;None&lt;/code&gt; without a discriminant. By requiring the pointer to be aligned, further uses of the low bits of the pointer are possible when the alignment of the slice element type is greater than one.&lt;/p&gt;
&lt;p&gt;After realizing that it’s not okay to pass the pointer obtained from C++ &lt;code&gt;gsl::span::data()&lt;/code&gt; to Rust &lt;code&gt;std::slice::from_raw_parts()&lt;/code&gt; as-is, it was necessary to decide where to put the replacement of &lt;code&gt;nullptr&lt;/code&gt; with &lt;code&gt;reinterpret_cast&amp;lt;T*&amp;gt;(alignof(T))&lt;/code&gt;. There are two candidate locations when working with actual &lt;code&gt;gsl::span&lt;/code&gt;: In the Rust code that provides the FFI or in the C++ code that calls the FFI. When working with &lt;code&gt;mozilla::Span&lt;/code&gt;, the code of the span implementation itself could be changed, so there are two additional candidate locations for the check: the constructor of &lt;code&gt;mozilla::Span&lt;/code&gt; and the getter for the pointer.&lt;/p&gt;
&lt;p&gt;Of these for candidate locations, the constructor of &lt;code&gt;mozilla::Span&lt;/code&gt; seemed like the one where the compiler has the best opportunity to optimize out the check in some cases. That’s why I chose to put the check there. This means that in the &lt;code&gt;gsl::span&lt;/code&gt; scenario the check had to go in the code that calls the FFI. All pointers obtained from &lt;code&gt;gsl::span&lt;/code&gt; have to be laundered through:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;
&lt;span class=&quot;hljs-title&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;* &lt;span class=&quot;hljs-title&quot;&gt;null_to_bogus&lt;/span&gt;(&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;* &lt;span class=&quot;hljs-title&quot;&gt;ptr&lt;/span&gt;)
{&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ptr ? ptr : &lt;span class=&quot;hljs-keyword&quot;&gt;reinterpret_cast&lt;/span&gt;&amp;lt;T*&amp;gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;alignof&lt;/span&gt;(T));
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Additionally, this means that since the check is not in the code that provides the FFI, the C API became slightly unidiomatic in the sense that requires C callers to avoid passing in &lt;code&gt;NULL&lt;/code&gt; even when the length is zero. However, the C API already has many caveats about things that are Undefined Behavior, and adding yet another thing that is documented to be Undefined Behavior does seem like an idiomatic thing to do with C.&lt;/p&gt;
&lt;h4 id=&quot;together&quot;&gt;Putting it Together&lt;/h4&gt;
&lt;p&gt;Let’s look at an example of how the above features combine. First, in Rust we have a method that takes a slice and returns an optional tuple:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; Encoding {
    &lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;for_bom&lt;/span&gt;&lt;/span&gt;(buffer: &amp;amp;[&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;]) -&amp;gt;
        &lt;span class=&quot;hljs-built_in&quot;&gt;Option&lt;/span&gt;&amp;lt;(&amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'static&lt;/span&gt; Encoding, &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;)&amp;gt;
    {
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; buffer.starts_with(&lt;span class=&quot;hljs-string&quot;&gt;b&quot;\xEF\xBB\xBF&quot;&lt;/span&gt;) {
            &lt;span class=&quot;hljs-literal&quot;&gt;Some&lt;/span&gt;((UTF_8, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;))
        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; buffer.starts_with(&lt;span class=&quot;hljs-string&quot;&gt;b&quot;\xFF\xFE&quot;&lt;/span&gt;) {
            &lt;span class=&quot;hljs-literal&quot;&gt;Some&lt;/span&gt;((UTF_16LE, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))
        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; buffer.starts_with(&lt;span class=&quot;hljs-string&quot;&gt;b&quot;\xFE\xFF&quot;&lt;/span&gt;) {
            &lt;span class=&quot;hljs-literal&quot;&gt;Some&lt;/span&gt;((UTF_16BE, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))
        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since this is a static method, there is no reference to &lt;code&gt;self&lt;/code&gt; and no corresponding pointer in the FFI function. The slice decomposes into a pointer and a length. The length becomes an in/out param that communicates the length of the slice in and the length of the BOM sublice out. The encoding becomes the return value and the encoding pointer being null communicates the Rust &lt;code&gt;None&lt;/code&gt; case for the tuple.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;encoding_for_bom&lt;/span&gt;&lt;/span&gt;(buffer: *&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;,
                                          buffer_len: *&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;usize&lt;/span&gt;)
                                          -&amp;gt; *&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding
{
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; buffer_slice =
        ::std::slice::from_raw_parts(buffer, *buffer_len);
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; (encoding, bom_length) =
        &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; Encoding::for_bom(buffer_slice) {
        &lt;span class=&quot;hljs-literal&quot;&gt;Some&lt;/span&gt;((encoding, bom_length)) =&amp;gt;
            (encoding &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; *&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding, bom_length),
        &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt; =&amp;gt; (::std::ptr::null(), &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;),
    };
    *buffer_len = bom_length;
    encoding
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the C header, the signature looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;c hljs cpp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;ENCODING_RS_ENCODING &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;*
&lt;span class=&quot;hljs-title&quot;&gt;encoding_for_bom&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;* buffer, &lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt;* buffer_len)&lt;/span&gt;&lt;/span&gt;;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The C++ layer then rebuilds the analog of the Rust API on top of the C API:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Encoding&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;final&lt;/span&gt; {&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;:
    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::optional&amp;lt;
        &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::tuple&amp;lt;gsl::not_null&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding*&amp;gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt;&amp;gt;&amp;gt;
    for_bom(gsl::span&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;uint8_t&lt;/span&gt;&amp;gt; buffer)
    {
        &lt;span class=&quot;hljs-keyword&quot;&gt;size_t&lt;/span&gt; len = buffer.size();
        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding* encoding =
            encoding_for_bom(null_to_bogus(buffer.data()), &amp;amp;len);
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (encoding) {
            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::make_tuple(
                gsl::not_null&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding*&amp;gt;(encoding), len);
        }
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;std&lt;/span&gt;::nullopt;
    }
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here we have to explicitly use &lt;code&gt;std::make_tuple&lt;/code&gt;, because the implicit constructor doesn’t work when the &lt;code&gt;std::tuple&lt;/code&gt; is nested inside &lt;code&gt;std::optional&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;enum&quot;&gt;Algebraic Types&lt;/h4&gt;
&lt;p&gt;Early on, we saw that the Rust-side streaming API can return this &lt;code&gt;enum&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DecoderResult&lt;/span&gt;&lt;/span&gt; {
    InputEmpty,
    OutputFull,
    Malformed(&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;),
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;C++ now has an analog for Rust &lt;code&gt;enum&lt;/code&gt;, sort of: &lt;code&gt;std::variant&amp;lt;Types...&amp;gt;&lt;/code&gt;. In practice, though, &lt;code&gt;std::variant&lt;/code&gt; is so clunky that it does not make sense to use it when a Rust &lt;code&gt;enum&lt;/code&gt; is supposed to act in a lightweight way from the point view of ergonomics.&lt;/p&gt;
&lt;p&gt;First, the variants in &lt;code&gt;std::variant&lt;/code&gt; aren’t named. They are identified positionally or by type. Named variants were proposed as proposed as &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0095r1.html&quot;&gt;&lt;code&gt;lvariant&lt;/code&gt;&lt;/a&gt; but did not get accepted. Second, even though duplicate types are permitted, working with them is not practical. Third, there is no language-level analog for Rust’s &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch06-02-match.html&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;match&lt;/code&gt;-like mechanism was proposed as &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0095r1.html&quot;&gt;&lt;code&gt;inspect()&lt;/code&gt;&lt;/a&gt; but was not accepted.&lt;/p&gt;
&lt;p&gt;On the FFI/C layer, the information from the above &lt;code&gt;enum&lt;/code&gt; is packed into a &lt;code&gt;u32&lt;/code&gt;. Instead of trying to expand it to something fancier on the C++ side, the C++ API uses the same &lt;code&gt;uint32_t&lt;/code&gt; as the C API. If the caller actually cares about extracting the two small integers in the malformed case, it’s up to the caller to do the bitwise ops to extract them from the &lt;code&gt;uint32_t&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The FFI code looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; INPUT_EMPTY: &lt;span class=&quot;hljs-built_in&quot;&gt;u32&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;

&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; OUTPUT_FULL: &lt;span class=&quot;hljs-built_in&quot;&gt;u32&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0xFFFFFFFF&lt;/span&gt;;

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;decoder_result_to_u32&lt;/span&gt;&lt;/span&gt;(result: DecoderResult) -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;u32&lt;/span&gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; result {
        DecoderResult::InputEmpty =&amp;gt; INPUT_EMPTY,
        DecoderResult::OutputFull =&amp;gt; OUTPUT_FULL,
        DecoderResult::Malformed(bad, good) =&amp;gt;
            (good &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;u32&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;) | (bad &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;u32&lt;/span&gt;),
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using zero as the magic value for &lt;code&gt;INPUT_EMPTY&lt;/code&gt; is a premature micro-optimization. On some architectures comparison with zero is cheaper than comparison with other constants, and the values representing the malformed case when decoding and the unmappable case when encoding are known not to overlap zero.&lt;/p&gt;
&lt;h4 id=&quot;overflow&quot;&gt;Signaling Integer Overflow&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt; have methods for querying worst-case output buffer size requirement. The caller provides the number of input code units and the method returns the smallest output buffer length, in code units, that guarantees that the corresponding conversion method will not return &lt;code&gt;OutputFull&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;E.g. when encoding from UTF-16 to UTF-8, calculating the worst case involves multiplication by three. Such a calculation can, at least in principle, result in integer overflow. In Rust, integer overflow is considered safe, because even if you allocate too short a buffer as a result of its length computation overflowing, actually accessing the buffer is bound checked, so the overall result is safe. However, buffer access is not generally bound checked in C or C++, so an integer overflow in Rust can result in memory unsafety in C or C++ if the result of the calculation that overflowed is used for deciding the size of buffers allocated and accessed by C or C++ code. In the case of encoding_rs, even when C or C++ allocates the buffer, the writing is supposed to be performed by Rust code, so it might be OK. However, to be sure, the worst-case calculations provided by encoding_rs used overflow-checking arithmetic.&lt;/p&gt;
&lt;p&gt;In Rust, the methods whose arithmetic is overflow-checked return &lt;code&gt;Option&amp;lt;usize&amp;gt;&lt;/code&gt;. To keep the types of the C API simple, the C API returns &lt;code&gt;size_t&lt;/code&gt; with &lt;code&gt;SIZE_MAX&lt;/code&gt; signaling overflow. That is, the C API effectively appears as using saturating arithmetic.&lt;/p&gt;
&lt;p&gt;In the C++ API version that uses standard-library types, the return type is &lt;code&gt;std::optional&amp;lt;size_t&amp;gt;&lt;/code&gt;. In Gecko, we have a wrapper for integer types that provides overflow-checking arithmetic and a validity flag. In the Gecko version of the C++ API, the return type is &lt;code&gt;mozilla::CheckedInt&amp;lt;size_t&amp;gt;&lt;/code&gt; so that dealing with overflow signaling is uniform with the rest of Gecko code. (Aside: I find it shocking and dangerous that the C++ standard library &lt;em&gt;still&lt;/em&gt; does not provide a wrapper similar to &lt;code&gt;mozilla::CheckedInt&lt;/code&gt; in order to do overflow-checking integer math in a standard-supported Undefined Behavior-avoiding way.)&lt;/p&gt;
&lt;h2 id=&quot;nonstreaming&quot;&gt;Recreating the Non-Streaming API&lt;/h2&gt;
&lt;p&gt;Let’s look again at the example of a non-streaming API method on &lt;code&gt;Encoding&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs rust&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;impl&lt;/span&gt; Encoding {
    &lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;decode_without_bom_handling_and_without_replacement&lt;/span&gt;&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-symbol&quot;&gt;'a&lt;/span&gt;&amp;gt;(
        &amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;,
        bytes: &amp;amp;&lt;span class=&quot;hljs-symbol&quot;&gt;'a&lt;/span&gt; [&lt;span class=&quot;hljs-built_in&quot;&gt;u8&lt;/span&gt;],
    ) -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Option&lt;/span&gt;&amp;lt;Cow&amp;lt;&lt;span class=&quot;hljs-symbol&quot;&gt;'a&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;&amp;gt;&amp;gt;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This type inside the &lt;code&gt;Option&lt;/code&gt; in the return type is &lt;code&gt;Cow&amp;lt;'a, str&amp;gt;&lt;/code&gt;, which is a type that holds either an owned &lt;code&gt;String&lt;/code&gt; or a borrowed string slice (&lt;code&gt;&amp;amp;'a str&lt;/code&gt;) whose data is owned by someone else. The lifetime &lt;code&gt;'a&lt;/code&gt; of the borrowed string slice is the lifetime of the input slice (&lt;code&gt;bytes: &amp;amp;'a [u8]&lt;/code&gt;), because in the borrow case the output is actually borrowed from the input.&lt;/p&gt;
&lt;p&gt;Mapping this kind of return type to C poses problems. First of all, C does not provide a great way to say that we either have the owned case or we have the borrowed case. Second, C does not have a standard type for heap-allocated strings that know their length and capacity and that can reallocate their buffer when modified. Maybe this could be seen as an opportunity to create a new C type whose buffer is managed by Rust &lt;code&gt;String&lt;/code&gt;, but then such a type would not fit together with C++ strings. Third, a borrowed string slice in C would be a raw pointer and a length and some documentation that says that the pointer is valid only as long as the input pointer is valid. There would be no language-level safeguards against use-after-free.&lt;/p&gt;
&lt;p&gt;The solution is not to provide the non-streaming API on the C layer at all. On the Rust side, the non-streaming API is a convenience API built on top of the streaming API and some validation functions (ASCII validation, UTF-8 validation, ISO-2022-JP ASCII state validation). Instead of trying to provide FFI bindings for the non-streaming API in an inconvenient manner, a similar non-streaming API can be recreated in C++ on top of the streaming API and the validation functions that were suitable for FFI.&lt;/p&gt;
&lt;p&gt;While the C++ type system could represent the same kind of structure as Rust’s &lt;code&gt;Cow&amp;lt;'a, str&amp;gt;&lt;/code&gt; e.g. as &lt;code&gt;std::variant&amp;lt;std::string_view, std::string&amp;gt;&lt;/code&gt;, such a C++ &lt;code&gt;Cow&lt;/code&gt; would be unsafe, because the lifetime &lt;code&gt;'a&lt;/code&gt; would not be enforced by C++. While a &lt;code&gt;std::string_view&lt;/code&gt; (or &lt;code&gt;gsl::span&lt;/code&gt;) is (mostly) OK as an argument in C++, as a return type it’s use-after-free waiting to happen. As with C, at best there would be some documentation saying that the output &lt;code&gt;std::string_view&lt;/code&gt; is valid for as long as the input &lt;code&gt;gsl::span&lt;/code&gt; is valid.&lt;/p&gt;
&lt;p&gt;To avoid use-after-free risk, in the C++ API version that uses C++17 standard-library types, I simply ended up making the C++ &lt;code&gt;decode_without_bom_handling_and_without_replacement()&lt;/code&gt; always copy and return a &lt;code&gt;std::optional&amp;lt;std::string&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the case of Gecko though, it’s possible to do better while keeping things safe. Gecko uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Guide/Internal_strings&quot;&gt;XPCOM strings&lt;/a&gt;, which provide a variety of storage options, notably: dependent strings that (unsafely) borrow storage owned by someone else, auto strings that store short strings in an inline buffer and shared strings that point to heap-allocated reference-counted buffer.&lt;/p&gt;
&lt;p&gt;In the case where the buffer to decode is in an XPCOM string that points to a reference-counted heap-allocated buffer and we are decoding to UTF-8 (as opposed to UTF-16), in the cases where we’d borrow in Rust (expect for BOM removal cases), we can instead make the output string point the same reference-counted heap-allocated buffer that the input points to (and increment the reference count). This is indeed what the non-streaming API for &lt;code&gt;mozilla::Encoding&lt;/code&gt; does.&lt;/p&gt;
&lt;p&gt;Compared to Rust, there is a limitation beyond the input string having to use reference-counted storage for the copy avoidance to work: The input must not have the UTF-8 BOM in the cases where the BOM is removed. While Rust can borrow a subslice of the input excluding the BOM, with XPCOM strings just incrementing a reference count only works if the byte content of the input and output is the entirely the same. When the first three bytes need to be omitted, it’s not the entirely the same.&lt;/p&gt;
&lt;p&gt;While the C++ API version that uses C++17 standard library types builds the non-streaming API on top of the streaming API in C++, for added safety, the non-streaming part of &lt;code&gt;mozilla::Encoding&lt;/code&gt; is not actually built on the streaming C++ API in C++ but built on top of the streaming Rust API &lt;a href=&quot;https://searchfox.org/mozilla-central/source/intl/encoding_glue/src/lib.rs&quot;&gt;in Rust&lt;/a&gt;. In Gecko, we have &lt;a href=&quot;https://searchfox.org/mozilla-central/source/servo/support/gecko/nsstring/src/lib.rs&quot;&gt;Rust bindings for XPCOM strings&lt;/a&gt;, so it’s possible to manipulate XPCOM strings from Rust.&lt;/p&gt;
&lt;h2 id=&quot;stack&quot;&gt;Epilog: Do We Really Need to Hold &lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt; by Pointer?&lt;/h2&gt;
&lt;p&gt;Apart from having to copy in the non-streaming API due to C++ not having a safe mechanism for borrows, it’s a bit disappointing that instantiating &lt;code&gt;Decoder&lt;/code&gt; and &lt;code&gt;Encoder&lt;/code&gt; from C++ involves a heap allocation while Rust callers get to allocate these types on the stack. Can we get rid of the heap allocation for C++ users of the API?&lt;/p&gt;
&lt;p&gt;The answer is that we could, but to do it properly we’d end up with the complexity of making the C++ build system generate constants by querying them from rustc.&lt;/p&gt;
&lt;p&gt;We can’t return a non-C-like struct over the FFI by value, but given a suitably-aligned pointer to enough memory, we can write a non-C-like struct to memory provided by the other side of the FFI. In fact, the API supports this as an optimization of instantiating a new &lt;code&gt;Decoder&lt;/code&gt; into a heap allocation made by Rust previously:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rust hljs&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;encoding_new_decoder_into&lt;/span&gt;&lt;/span&gt;(
    encoding: *&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Encoding,
    decoder: *&lt;span class=&quot;hljs-keyword&quot;&gt;mut&lt;/span&gt; Decoder)
{
    *decoder = (*encoding).new_decoder();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Even though documentation says that &lt;code&gt;encoding_new_decoder_into()&lt;/code&gt; should only be used with pointers to &lt;code&gt;Decoder&lt;/code&gt; previously obtained from the API, in the case of &lt;code&gt;Decoder&lt;/code&gt;, assigning with &lt;code&gt;=&lt;/code&gt; would be OK even if the memory pointed to by the pointer was uninitialized, because &lt;code&gt;Decoder&lt;/code&gt; does not implement &lt;code&gt;Drop&lt;/code&gt;. That is, in C++ terms, &lt;code&gt;Decoder&lt;/code&gt; in Rust does not have a destructor, so assignment with &lt;code&gt;=&lt;/code&gt; does not do any clean-up with the assumption that the pointer points to a previous valid &lt;code&gt;Decoder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When writing a Rust struct that implements &lt;code&gt;Drop&lt;/code&gt; into uninitialized memory, &lt;code&gt;std::ptr::write()&lt;/code&gt; should be used instead of &lt;code&gt;=&lt;/code&gt;. &lt;code&gt;std::ptr::write()&lt;/code&gt; “overwrites a memory location with the given value without reading or dropping the old value”. Perhaps it would set a good example to use &lt;code&gt;std::ptr::write()&lt;/code&gt; even in the above case, even though it’s not strictly necessary.&lt;/p&gt;
&lt;p&gt;When working with a pointer previously obtained from Rust &lt;code&gt;Box&lt;/code&gt;, the pointer is aligned correctly and points to a sufficiently large piece of memory. If C++ is to allocate stack memory for Rust code to write into, we need to make the C++ code use the right size and alignment. The issue of communicating these two numbers from Rust to C++ is already where things start getting brittle.&lt;/p&gt;
&lt;p&gt;The C++ code needs to discover the right size and alignment for the struct. These cannot be discovered by calling FFI functions, because C++ needs to know them at compile time. Size and alignment aren’t just constants that could be written manually in a header file once and forgotten. First of all, they change when the Rust structs change, so just writing them down has the risk of the written-down values getting out of sync with the real requirements as the Rust code changes. Second, the values differ on 32-bit architectures vs. 64-bit architectures. Third, and this is the worst, the alignment can differ from one 32-bit architecture to another. Specifically, the alignment of &lt;code&gt;f64&lt;/code&gt; is &lt;code&gt;8&lt;/code&gt; on most targets, like &lt;a href=&quot;https://rust.godbolt.org/z/IE1t4G&quot;&gt;ARM&lt;/a&gt;, &lt;a href=&quot;https://rust.godbolt.org/z/PBLXeU&quot;&gt;MIPS&lt;/a&gt; and &lt;a href=&quot;https://rust.godbolt.org/z/ErGoPf&quot;&gt;PowerPC&lt;/a&gt;, but the alignment of &lt;code&gt;f64&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt; on &lt;a href=&quot;https://rust.godbolt.org/z/4jS6lf&quot;&gt;x86&lt;/a&gt;. If Rust gets an &lt;a href=&quot;https://lists.llvm.org/pipermail/llvm-dev/2018-August/125325.html&quot;&gt;m68k port&lt;/a&gt;, even more &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1325771#c49&quot;&gt;variety of alignments across 32-bit platforms is to be expected&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It seems that the only way to get this right is to get the size and alignment information from rustc as part of the build process before the C++ code is built so that the numbers can be written in a generated C++ header file that the C++ code can then refer to. The simple way to do this would be to have the build system compile and run a tiny Rust program that prints out a C++ header with numbers obtained using &lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.size_of.html&quot;&gt;&lt;code&gt;std::mem::size_of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.align_of.html&quot;&gt;&lt;code&gt;std::mem::align_of&lt;/code&gt;&lt;/a&gt;. This solution assumes that the build system runs on the architecture that the compilation is targeting, so this solution would break cross-compilation. That’s not good.&lt;/p&gt;
&lt;p&gt;We need to extract target-specific size and alignment from a given struct from rustc but without having to run a binary built for the target. &lt;a href=&quot;https://blog.mozilla.org/nnethercote/2018/11/09/how-to-get-the-size-of-rust-types-with-zprint-type-sizes/&quot;&gt;It turns out&lt;/a&gt; that rustc has a command-line option, &lt;code&gt;-Zprint-type-sizes&lt;/code&gt;, that prints out the size and alignment of types. Unfortunately, the feature is nightly-only… Anyway, the most correct way to go about this would be to have a build script controlling C++ compilation first invoke rustc with that option, parse out the sizes and aligments of interest, and generate a C++ header file with the numbers as constants.&lt;/p&gt;
&lt;p&gt;Or, since overaligning is permitted, we could trust that the struct will not have a SIMD member (alignment 16 for 128-bit vectors) and always align to 8. We could also check the size on 64-bit platforms, always use that and hope for the best (especially hope that whenever the struct grows in Rust, someone remembers to update the C++-visible size). But hoping for the best in memory matters kind of defeats the point of using Rust.&lt;/p&gt;
&lt;p&gt;Anyway, assuming that we have constants &lt;code&gt;DECODER_SIZE&lt;/code&gt; and &lt;code&gt;DECODER_ALIGNMENT&lt;/code&gt; available to C++ &lt;em&gt;somehow&lt;/em&gt;, we can do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;class &lt;span class=&quot;hljs-title&quot;&gt;alignas&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DECODER_ALIGNMENT)&lt;/span&gt; Decoder final
&lt;/span&gt;{
  &lt;span class=&quot;hljs-keyword&quot;&gt;friend&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Encoding&lt;/span&gt;;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;:
  ~Decoder() {}
  Decoder(Decoder&amp;amp;&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;;
&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt;:
  &lt;span class=&quot;hljs-keyword&quot;&gt;unsigned char&lt;/span&gt; storage[DECODER_SIZE];
  Decoder() = &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;;
  Decoder(&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Decoder&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
  Decoder&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;operator&lt;/span&gt;=(&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; Decoder&amp;amp;) = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;;
  
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notably:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Instead of the constructor &lt;code&gt;Decoder()&lt;/code&gt; being marked &lt;code&gt;delete&lt;/code&gt;, it is marked &lt;code&gt;default&lt;/code&gt; but still &lt;code&gt;private&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Encoding&lt;/code&gt; is declared as a &lt;code&gt;friend&lt;/code&gt; to grant it access to the above-mentioned constructor.&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;public&lt;/code&gt; default move constructor is added.&lt;/li&gt;
&lt;li&gt;A single &lt;code&gt;private&lt;/code&gt; field of type &lt;code&gt;unsigned char[DECODER_SIZE]&lt;/code&gt; is added.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Decoder&lt;/code&gt; itself is declared with &lt;code&gt;alignas(DECODER_ALIGNMENT)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator delete&lt;/code&gt; is no longer overloaded.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Then &lt;code&gt;new_decoder()&lt;/code&gt; on &lt;code&gt;Encoding&lt;/code&gt; can be written like this (and be renamed &lt;code&gt;make_decoder&lt;/code&gt; to avoid unidiomatic use of the word “new” in C++):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Encoding&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;final&lt;/span&gt;
{&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;:
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;inline&lt;/span&gt; Decoder &lt;span class=&quot;hljs-title&quot;&gt;make_decoder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;
  &lt;/span&gt;{
    Decoder decoder;
    encoding_new_decoder_into(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;decoder);
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; decoder;
  }
  
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And it can be used like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;cpp hljs&quot;&gt;Decoder decoder = input_encoding-&amp;gt;make_decoder();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that outside the implementation of &lt;code&gt;Encoder&lt;/code&gt; trying to just declare &lt;code&gt;Decoder decoder;&lt;/code&gt; without initializing it right away initializing is a compile-time error, because the constructor &lt;code&gt;Decoder()&lt;/code&gt; is private.&lt;/p&gt;
&lt;p&gt;Let’s unpack what’s happening:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The array of &lt;code&gt;unsigned char&lt;/code&gt; provides storage for the Rust &lt;code&gt;Decoder&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The C++ &lt;code&gt;Decoder&lt;/code&gt; has no base class, virtual methods, etc., so there are no implementation-supplied hidden members and the address of a &lt;code&gt;Decoder&lt;/code&gt; is the same as the address of its &lt;code&gt;storage&lt;/code&gt; member, so we can simply pass the address of &lt;code&gt;Decoder&lt;/code&gt; itself to Rust.&lt;/li&gt;
&lt;li&gt;The alignment of &lt;code&gt;unsigned char&lt;/code&gt; is 1, i.e. unrestricted, so &lt;code&gt;alignas&lt;/code&gt; on the &lt;code&gt;Decoder&lt;/code&gt; gets to determine the alignment.&lt;/li&gt;
&lt;li&gt;The default trivial move constructor &lt;code&gt;memmove&lt;/code&gt;s the bytes of the &lt;code&gt;Decoder&lt;/code&gt;, and the Rust &lt;code&gt;Decoder&lt;/code&gt; is OK to move.&lt;/li&gt;
&lt;li&gt;The private default no-argument constructor makes it a compile error to try to declare a not-immediately-initialized instance of the C++ &lt;code&gt;Decoder&lt;/code&gt; outside the implementation of &lt;code&gt;Encoder&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Encoder&lt;/code&gt;, however, can instantiate an uninitialized &lt;code&gt;Decoder&lt;/code&gt; and pass a pointer to it to Rust, so that Rust code can write the Rust &lt;code&gt;Decoder&lt;/code&gt; instance into the C++-provided memory via the pointer.&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;footer readability=&quot;12.509598603839&quot;&gt;&lt;p&gt;Written by &lt;a href=&quot;https://hsivonen.fi/author/&quot; rel=&quot;author&quot;&gt;Henri Sivonen&lt;/a&gt;, published 2018-12-03&lt;/p&gt;
&lt;p&gt;Code extracts from encoding_rs and encoding_c are Copyright Mozilla Foundation and are licensed under the Apache License, Version 2.0 &amp;lt;&lt;a href=&quot;https://github.com/hsivonen/encoding_c/blob/master/LICENSE-APACHE&quot;&gt;LICENSE-APACHE&lt;/a&gt; or https://www.apache.org/licenses/LICENSE-2.0&amp;gt; or the MIT license &amp;lt;&lt;a href=&quot;https://github.com/hsivonen/encoding_c/blob/master/LICENSE-MIT&quot;&gt;LICENSE-MIT&lt;/a&gt; or https://opensource.org/licenses/MIT&amp;gt;, at your option.&lt;/p&gt;
&lt;p&gt;A stylesheet bundled with highlight.js used under its &lt;a href=&quot;https://hsivonen.fi/style/highlightjs/LICENSE.txt&quot;&gt;BSD license&lt;/a&gt;. Fonts used under the &lt;a href=&quot;https://opensource.org/licenses/OFL-1.1&quot;&gt;Open Font License 1.1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other content Copyright Mozilla Foundation, licensed under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International&lt;/a&gt; license.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hsivonen.fi/&quot; rel=&quot;home&quot;&gt;Main page&lt;/a&gt;&lt;/p&gt;
&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Mon, 03 Dec 2018 13:24:25 +0000</pubDate>
<dc:creator>hsivonen</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hsivonen.fi/modern-cpp-in-rust/</dc:identifier>
</item>
<item>
<title>QEMU Advent Calendar: A surprise disk image each day until Christmas</title>
<link>https://qemu-advent-calendar.org/</link>
<guid isPermaLink="true" >https://qemu-advent-calendar.org/</guid>
<description>&lt;div id=&quot;about&quot; class=&quot;row&quot; readability=&quot;21&quot;&gt;
&lt;h2&gt;About&lt;/h2&gt;
&lt;p&gt;The QEMU Advent Calendar 2018 features a QEMU disk image each day of December until Christmas. Each day a new package becomes available for download.&lt;/p&gt;
&lt;p&gt;Every download contains a little 'run' shell script that starts the QEMU emulator with the recommended parameters for the disk image. Disk images are either contained directly in the download or are downloaded by the 'run' script (you need to have installed 'curl' or 'wget' in that case).&lt;/p&gt;
&lt;p&gt;The disk images contain interesting operating systems and software that run under the QEMU emulator. Some of them are well-known or not-so-well-known operating systems, old and new, others are custom demos and neat algorithms.&lt;/p&gt;
&lt;p&gt;The 'run' scripts (and disk images if included in the download) were created by volunteers from the QEMU community to showcase cool software that QEMU can run.&lt;/p&gt;
&lt;/div&gt;

&lt;hr/&gt;&lt;footer readability=&quot;13.363636363636&quot;&gt;&lt;p class=&quot;pull-right&quot;&gt;&lt;a href=&quot;https://www.qemu-advent-calendar.org/2018/#&quot;&gt;Back to top&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QEMU logo by Benoît Canet under Creative Commons Attribution 3.0 Unported, Santa hat added by Stefan Hajnoczi&lt;/p&gt;
&lt;p&gt;Website © 2018 QEMU contributors · &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;. Design based on the &lt;a href=&quot;https://www.qemu-advent-calendar.org/2014/&quot;&gt;2014&lt;/a&gt; website created by Stefan Hajnoczi, and modified for 2018 by Thomas Huth.&lt;/p&gt;
&lt;p&gt;Source code for software that is licensed under the GPL is available on request. Please write an e-mail to Thomas Huth (see contact information above).&lt;/p&gt;
&lt;p&gt;This website uses cookies to store the state of the doors. We do not use cookies to track you or to collect any personally identifiable information.&lt;/p&gt;
&lt;/footer&gt;</description>
<pubDate>Mon, 03 Dec 2018 11:48:19 +0000</pubDate>
<dc:creator>stefanha</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.qemu-advent-calendar.org/2018/</dc:identifier>
</item>
<item>
<title>AlphaFold: Using AI for scientific discovery</title>
<link>https://deepmind.com/blog/alphafold/</link>
<guid isPermaLink="true" >https://deepmind.com/blog/alphafold/</guid>
<description>&lt;h4&gt;&lt;strong&gt;Why is protein folding important?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;The ability to predict a protein’s shape is useful to scientists because it is fundamental to understanding its role within the body, as well as diagnosing and treating diseases believed to be caused by misfolded proteins, such as &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/25230234&quot;&gt;Alzheimer’s&lt;/a&gt;, &lt;a href=&quot;https://www.nature.com/news/misfolded-protein-transmits-parkinson-s-from-cell-to-cell-1.11838&quot;&gt;Parkinson’s&lt;/a&gt;, &lt;a href=&quot;https://cen.acs.org/articles/95/i39/Revised-view-Huntingtons-protein-misfolding.html&quot;&gt;Huntington’s&lt;/a&gt; and &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5137970/&quot;&gt;cystic fibrosis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are especially excited about how it might improve our understanding of the body and how it works, enabling scientists to design new, effective cures for diseases more efficiently. As we acquire more knowledge about the shapes of proteins and how they operate through simulations and models, it opens up new potential within drug discovery while also reducing the costs associated with experimentation. That could ultimately improve the quality of life for millions of patients around the world.&lt;/p&gt;
&lt;p&gt;An understanding of protein folding will also assist in protein design, which could unlock a tremendous number of benefits. For example, advances in biodegradable enzymes—which can be enabled by protein design—could help manage pollutants like plastic and oil, helping us break down waste in ways that are more friendly to our environment. In fact, researchers have already begun &lt;a href=&quot;https://www.bbc.co.uk/news/science-environment-43783631&quot;&gt;engineering bacteria&lt;/a&gt; to secrete proteins that will make waste biodegradable, and easier to process.&lt;/p&gt;
&lt;p&gt;To catalyse research and measure progress on the newest methods for improving the accuracy of predictions, a biennial global competition called the &lt;a href=&quot;http://predictioncenter.org/&quot;&gt;Community Wide Experiment on the Critical Assessment of Techniques for Protein Structure Prediction&lt;/a&gt; (CASP) was established in 1994, and has become the gold standard for assessing techniques.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;How can AI make a difference?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Over the past five decades, scientists have been able to determine shapes of proteins in labs using experimental techniques like &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryogenic_electron_microscopy&quot;&gt;cryo-electron microscopy&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance&quot;&gt;nuclear magnetic resonance&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/X-ray_crystallography&quot;&gt;X-ray crystallography&lt;/a&gt;, but each method depends on a lot of trial and error, which can take years and cost tens of thousands of dollars per structure. This is why biologists are turning to AI methods as an alternative to this long and laborious process for difficult proteins.&lt;/p&gt;
&lt;p&gt;Fortunately, the field of genomics is quite rich in data thanks to the rapid reduction in the cost of genetic sequencing. As a result, deep learning approaches to the prediction problem that rely on genomic data have become increasingly popular in the last few years. DeepMind’s work on this problem resulted in AlphaFold, which we submitted to CASP this year. We’re proud to be part of what the CASP organisers have called “unprecedented progress in the ability of computational methods to predict protein structure,” placing &lt;a href=&quot;http://predictioncenter.org/casp13/zscores_final.cgi?formula=assessors&quot;&gt;first&lt;/a&gt; in rankings among the teams that entered (our entry is A7D).&lt;/p&gt;
&lt;p&gt;Our team focused specifically on the hard problem of modelling target shapes from scratch, without using previously solved proteins as templates. We achieved a high degree of accuracy when predicting the physical properties of a protein structure, and then used two distinct methods to construct predictions of full protein structures.&lt;/p&gt;
&lt;h5&gt;Using neural networks to predict physical properties&lt;/h5&gt;
&lt;p&gt;Both of these methods relied on deep neural networks that are trained to predict properties of the protein from its genetic sequence. The properties our networks predict are: (a) the distances between pairs of amino acids and (b) the angles between chemical bonds that connect those amino acids. The first development is an advance on commonly used techniques that estimate whether pairs of amino acids are near each other.&lt;/p&gt;
&lt;p&gt;We trained a neural network to predict a separate distribution of distances between every pair of residues in a protein. These probabilities were then combined into a score that estimates how accurate a proposed protein structure is. We also trained a separate neural network that uses all distances in aggregate to estimate how close the proposed structure is to the right answer.&lt;/p&gt;

</description>
<pubDate>Mon, 03 Dec 2018 10:03:53 +0000</pubDate>
<dc:creator>sytelus</dc:creator>
<og:title>AlphaFold: Using AI for scientific discovery | DeepMind</og:title>
<og:url>https://deepmind.com/blog/alphafold/</og:url>
<og:description>Our system, AlphaFold, which we have been working on for the past two years, builds on years of prior research in using vast genomic data to predict protein structure. The 3D models of proteins that AlphaFold generates are far more accurate than any that have come before—making significant progress on one of the core challenges in biology.</og:description>
<og:image>https://storage.googleapis.com/deepmind-live-cms/images/ezgif-1-b802d0c79d5b.width-600.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://deepmind.com/blog/alphafold/</dc:identifier>
</item>
<item>
<title>UBlock Origin 1.17.4 released</title>
<link>https://github.com/gorhill/uBlock/releases/tag/1.17.4</link>
<guid isPermaLink="true" >https://github.com/gorhill/uBlock/releases/tag/1.17.4</guid>
<description>&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;I will keep bringing in WebAssembly (&quot;wasm&quot;) versions of key portions of code where it is found to be beneficial. In this release, a &lt;a href=&quot;https://github.com/gorhill/uBlock/blob/2189f020dfb5d2d8728c17ead85e6f7905e3e984/src/js/wasm/hntrie.wat#L46&quot;&gt;wasm version&lt;/a&gt; of the &lt;a href=&quot;https://github.com/gorhill/uBlock/blob/2189f020dfb5d2d8728c17ead85e6f7905e3e984/src/js/hntrie.js#L101&quot;&gt;algorithm used to lookup a hostname from a set of hostnames&lt;/a&gt; has been created (related &lt;a href=&quot;https://raw.githack.com/gorhill/uBlock/master/docs/tests/hnset-benchmark.html&quot; rel=&quot;nofollow&quot;&gt;benchmark page&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;However, only the Firefox version of uBO benefits from this at this point, as it's is not possible to use wasm in the Chromium version without adding &lt;code&gt;'unsafe-eval'&lt;/code&gt; to the extension's own Content Security Policy in its manifest -- which is not something I am willing to do (my view is that any &lt;a href=&quot;https://news.ycombinator.com/item?id=14894095&quot; rel=&quot;nofollow&quot;&gt;extension using &lt;code&gt;'unsafe-eval'&lt;/code&gt; should be assumed malicious by default&lt;/a&gt;). It works in Firefox because the wasm module is loaded using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming&quot; rel=&quot;nofollow&quot;&gt;same-origin fetch&lt;/a&gt;, meaning the module can only be loaded from uBO's own package, which is probably &lt;a href=&quot;https://github.com/WebAssembly/content-security-policy/issues/7&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/WebAssembly/content-security-policy/issues/7/hovercard&quot;&gt;what Chromium ought to implement&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Closed as fixed&lt;/h2&gt;
&lt;h3&gt;Firefox&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uMatrix-issues/issues/64&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uMatrix-issues/issues/64/hovercard&quot;&gt;When pasting multiple lines into the rules editor they are joined together in a single line&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Fixed by importing &lt;a href=&quot;https://codemirror.net/&quot; rel=&quot;nofollow&quot;&gt;latest release of CodeMirror&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Core&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/issues/313&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uBlock-issues/issues/313/hovercard&quot;&gt;&lt;code&gt;##.ad.super&lt;/code&gt; from EasyList is causing &lt;code&gt;##.ad&lt;/code&gt; to not be applied&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uAssets/issues/4083#issuecomment-436914727&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uAssets/issues/4083/hovercard&quot;&gt;Fix missing trailing asterisk in filter representation in the logger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/issues/283&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uBlock-issues/issues/283/hovercard&quot;&gt;No context menu entry for data:* iframes (banners)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/issues/264&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uBlock-issues/issues/264/hovercard&quot;&gt;UI Search field and it's search counter interfere with each other / unreadable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/issues/248&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uBlock-issues/issues/248/hovercard&quot;&gt;&quot;Update now&quot; button flashes for 1 second before changing the count numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/issues/77&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uBlock-issues/issues/77/hovercard&quot;&gt;Improve usability of temporarily disabling strict-blocking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/issues/6&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/uBlockOrigin/uBlock-issues/issues/6/hovercard&quot;&gt;HTML filter exception doesn't work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/issues/3371&quot; data-hovercard-type=&quot;issue&quot; data-hovercard-url=&quot;/gorhill/uBlock/issues/3371/hovercard&quot;&gt;$badfilter does not work on a CSP filter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Mon, 03 Dec 2018 04:18:37 +0000</pubDate>
<dc:creator>ronjouch</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/585534?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>gorhill/uBlock</og:title>
<og:url>https://github.com/gorhill/uBlock</og:url>
<og:description>uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean. - gorhill/uBlock</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/gorhill/uBlock/releases/tag/1.17.4</dc:identifier>
</item>
<item>
<title>Pointers in C (2010)</title>
<link>https://boredzo.org/pointers/</link>
<guid isPermaLink="true" >https://boredzo.org/pointers/</guid>
<description>&lt;title&gt;Everything you need to know about pointers in C&lt;/title&gt;&lt;meta content=&quot;application/xhtml+xml; charset=utf-8; format=fixed&quot; http-equiv=&quot;Content-Type&quot; /&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;pointers.css&quot; /&gt;&lt;hr /&gt;&lt;div id=&quot;style&quot; readability=&quot;10&quot;&gt;
&lt;h2&gt;Style used in this document&lt;/h2&gt;
&lt;p&gt;This is regular text. This is a &lt;var&gt;variable&lt;/var&gt;, some &lt;code&gt;code&lt;/code&gt;, and some &lt;samp&gt;sample output&lt;/samp&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;This is a line of code.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;output&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;output&quot;&gt;This is output you'd see on your screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;hr /&gt;&lt;div id=&quot;toc&quot;&gt;
&lt;h2&gt;Table of contents&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;definition&quot; readability=&quot;7&quot;&gt;
&lt;h2&gt;Definition of a pointer&lt;/h2&gt;
&lt;p&gt;A pointer is a memory address.&lt;/p&gt;
&lt;p&gt;(Mmm, short paragraphs.)&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;starting&quot; readability=&quot;46&quot;&gt;
&lt;h2&gt;Starting off&lt;/h2&gt;
&lt;p&gt;Say you declare a variable named &lt;var&gt;foo&lt;/var&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int &lt;dfn id=&quot;foo&quot;&gt;foo&lt;/dfn&gt;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This variable occupies some memory. On current mainstream Intel processors, it occupies four bytes of memory (because an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; is four bytes wide).&lt;/p&gt;
&lt;p&gt;Now let's declare another variable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int *&lt;dfn id=&quot;foo_ptr&quot;&gt;foo_ptr&lt;/dfn&gt; = &amp;amp;foo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;var&gt;foo_ptr&lt;/var&gt; is declared as a pointer to &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;. We have initialized it to point to &lt;var&gt;foo&lt;/var&gt;.&lt;/p&gt;
&lt;p&gt;As I said, &lt;var&gt;foo&lt;/var&gt; occupies some memory. Its location in memory is called its address. &lt;code&gt;&amp;amp;foo&lt;/code&gt; is the address of &lt;var&gt;foo&lt;/var&gt; (which is why &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt; is called the “address-of operator”).&lt;/p&gt;
&lt;p&gt;Think of every variable as a box. &lt;var&gt;foo&lt;/var&gt; is a box that is &lt;code&gt;sizeof(int)&lt;/code&gt; bytes in size. The location of this box is its address. When you access the address, you actually access the contents of the box it points to.&lt;/p&gt;
&lt;p&gt;This is true of all variables, regardless of type. In fact, grammatically speaking, there is no such thing as a “pointer variable”: all variables are the same. There are, however, variables with different types. &lt;var&gt;foo&lt;/var&gt;'s type is &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;. &lt;var&gt;foo_ptr&lt;/var&gt;'s type is &lt;span class=&quot;type&quot;&gt;int *&lt;/span&gt;. (Thus, “pointer variable” really means “variable of a pointer type”.)&lt;/p&gt;
&lt;p&gt;The point of that is that &lt;em&gt;the pointer is not the variable&lt;/em&gt;! The pointer to &lt;var&gt;foo&lt;/var&gt; is the &lt;em&gt;contents&lt;/em&gt; of &lt;var&gt;foo_ptr&lt;/var&gt;. You could put a different pointer in the &lt;var&gt;foo_ptr&lt;/var&gt; box, and the box would still be &lt;var&gt;foo_ptr&lt;/var&gt;. But it would no longer point to &lt;var&gt;foo&lt;/var&gt;.&lt;/p&gt;
&lt;p class=&quot;diagram&quot;&gt;&lt;img width=&quot;249&quot; height=&quot;117&quot; alt=&quot;The box named foo_ptr (an int *) is a pointer to a box named foo (an int).&quot; src=&quot;https://boredzo.org/pointers/boxes.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The pointer has a type, too, by the way. Its type is &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;. Thus it is an “&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; pointer” (a pointer to &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;). An &lt;span class=&quot;type&quot;&gt;int **&lt;/span&gt;'s type is &lt;span class=&quot;type&quot;&gt;int *&lt;/span&gt; (it points to a pointer to &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;). The use of pointers to pointers is called &lt;dfn id=&quot;multiple_indirection_dfn&quot;&gt;multiple indirection&lt;/dfn&gt;. More on that in a bit.&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;declaration&quot; readability=&quot;46.368051807879&quot;&gt;
&lt;h2&gt;Interlude: Declaration syntax&lt;/h2&gt;
&lt;p&gt;The obvious way to declare two pointer variables in a single declaration is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int* &lt;dfn id=&quot;ptr_a&quot;&gt;ptr_a&lt;/dfn&gt;, &lt;dfn id=&quot;ptr_b&quot;&gt;ptr_b&lt;/dfn&gt;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;If the type of a variable containing a pointer to &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; is &lt;span class=&quot;type&quot;&gt;int *&lt;/span&gt;,&lt;/li&gt;
&lt;li&gt;and a single declaration can declare multiple variables of the same type by simply providing a comma-separated list (&lt;code&gt;ptr_a, ptr_b&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;then you can declare multiple &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;-pointer variables by simply giving the &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;-pointer type (&lt;span class=&quot;type&quot;&gt;int *&lt;/span&gt;) followed by a comma-separated list of names to use for the variables (&lt;code&gt;ptr_a, ptr_b&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Given this, what is the type of &lt;var&gt;ptr_b&lt;/var&gt;? &lt;span class=&quot;type&quot;&gt;int *&lt;/span&gt;, right?&lt;/p&gt;
&lt;p&gt;*&lt;span&gt;bzzt&lt;/span&gt;* Wrong!&lt;/p&gt;
&lt;p&gt;The type of &lt;var&gt;ptr_b&lt;/var&gt; is &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;. It is &lt;strong&gt;not&lt;/strong&gt; a pointer.&lt;/p&gt;
&lt;p&gt;C's declaration syntax ignores the pointer asterisks when carrying a type over to multiple declarations. If you split the declaration of &lt;var&gt;ptr_a&lt;/var&gt; and &lt;var&gt;ptr_b&lt;/var&gt; into multiple declarations, you get this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int *ptr_a; int ptr_b;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Think of it as assigning each variable a base type (&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;), plus a level of indirection, indicated by the number of asterisks (&lt;var&gt;ptr_b&lt;/var&gt;'s is zero; &lt;var&gt;ptr_a&lt;/var&gt;'s is one).&lt;/p&gt;
&lt;p&gt;It's possible to do the single-line declaration in a clear way. This is the immediate improvement:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int *ptr_a, ptr_b;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notice that the asterisk has moved. It is now right next to the word &lt;var&gt;ptr_a&lt;/var&gt;. A subtle implication of association.&lt;/p&gt;
&lt;p&gt;It's even clearer to put the non-pointer variables first:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int ptr_b, *ptr_a;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The absolute clearest is to keep every declaration on its own line, but that can take up a lot of vertical space. Just use your own judgment.&lt;/p&gt;
&lt;p&gt;Finally, I should point out that you can do this just fine:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int *ptr_a, *ptr_b;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There's nothing wrong with it.&lt;/p&gt;
&lt;p&gt;Incidentally, C allows zero or more levels of parentheses around the variable name and asterisk:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int ((not_a_pointer)), (*ptr_a), (((*ptr_b)));&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is not useful for anything, except to declare &lt;a href=&quot;https://boredzo.org/pointers/#function_pointers&quot;&gt;function pointers&lt;/a&gt; (described later).&lt;/p&gt;
&lt;p&gt;Further reading: &lt;a href=&quot;http://ieng9.ucsd.edu/~cs30x/rt_lt.rule.html&quot;&gt;The right-left rule for reading C declarations&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;assignment&quot; readability=&quot;23&quot;&gt;
&lt;h2&gt;Assignment and pointers&lt;/h2&gt;
&lt;p&gt;Now, how do you assign an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; to this pointer? This solution might be obvious:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;foo_ptr = 42;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is also wrong.&lt;/p&gt;
&lt;p&gt;Any direct assignment to a pointer variable will change the address in the variable, &lt;em&gt;not&lt;/em&gt; the value at that address. In this example, the new value of &lt;var&gt;foo_ptr&lt;/var&gt; (that is, the new “pointer” in that variable) is 42. But we don't know that this points to anything, so it probably doesn't. Trying to access this address will probably result in a segmentation violation (read: crash).&lt;/p&gt;
&lt;p&gt;(Incidentally, compilers usually warn when you try to assign an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; to a pointer variable. &lt;tt&gt;gcc&lt;/tt&gt; will say “&lt;samp&gt;warning: initialization makes pointer from integer without a cast&lt;/samp&gt;”.)&lt;/p&gt;
&lt;p&gt;So how do you access the value at a pointer? You must dereference it.&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;dereferencing&quot; readability=&quot;16&quot;&gt;
&lt;h2&gt;Dereferencing&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;int &lt;dfn id=&quot;bar&quot;&gt;bar&lt;/dfn&gt; = *foo_ptr;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this declaration, the &lt;dfn id=&quot;dereference&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;dereference operator&lt;/dfn&gt; (prefix &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt;, not to be confused with the multiplication operator) looks up the value that exists at an address. (This is called a “load” operation.)&lt;/p&gt;
&lt;p&gt;It's also possible to write to a dereference expression (the C way of saying this: a dereference expression is an &lt;dfn id=&quot;lvalue&quot;&gt;lvalue&lt;/dfn&gt;, meaning that it can appear on the left side of an assignment):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;*foo_ptr = 42; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(This is called a “store” operation.)&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;arrays&quot; readability=&quot;74&quot;&gt;
&lt;h2&gt;Interlude: Arrays&lt;/h2&gt;
&lt;p&gt;Here's a declaration of a three-&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; array:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int &lt;dfn id=&quot;array&quot;&gt;array[]&lt;/dfn&gt; = { 45, 67, 89 };&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that we use the &lt;code&gt;[]&lt;/code&gt; notation because we are declaring an array. &lt;code&gt;int *array&lt;/code&gt; would be illegal here; the compiler would not accept us assigning the &lt;code&gt;{ 45, 67, 89 }&lt;/code&gt; initializer to it.&lt;/p&gt;
&lt;p&gt;This variable, &lt;var&gt;array&lt;/var&gt;, is an extra-big box: three &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;s' worth of storage.&lt;/p&gt;
&lt;p&gt;One neat feature of C is that, in most places, when you use the name &lt;code&gt;array&lt;/code&gt; again, you will actually be using a pointer to its first element (in C terms, &lt;code&gt;&amp;amp;array[0]&lt;/code&gt;). This is called “&lt;dfn id=&quot;decay&quot;&gt;decaying&lt;/dfn&gt;”: the array “decays” to a pointer. Most usages of &lt;var&gt;array&lt;/var&gt; are equivalent to if &lt;var&gt;array&lt;/var&gt; had been declared as a pointer.&lt;/p&gt;
&lt;p&gt;There are, of course, cases that aren't equivalent. One is assigning to the name &lt;code class=&quot;variable&quot;&gt;array&lt;/code&gt; by itself (&lt;code&gt;array = &lt;var&gt;…&lt;/var&gt;&lt;/code&gt;)—that's illegal.&lt;/p&gt;
&lt;p&gt;Another is passing it to the &lt;code class=&quot;operator&quot;&gt;sizeof&lt;/code&gt; operator. The result will be the total size of the array, not the size of a pointer (for example, &lt;code&gt;sizeof(array)&lt;/code&gt; using the array above would evaluate to (&lt;code&gt;sizeof(int)&lt;/code&gt; = 4) × 3 = 12 on a current Mac OS X system). This illustrates that you are really handling an array and not merely a pointer.&lt;/p&gt;
&lt;p&gt;In most uses, however, array expressions work just the same as pointer expressions.&lt;/p&gt;
&lt;p&gt;So, for example, let's say you want to pass an array to &lt;code&gt;printf&lt;/code&gt;. You can't: When you pass an array as an argument to a function, you really pass a pointer to the array's first element, because the array decays to a pointer. You can only give &lt;code&gt;printf&lt;/code&gt; the pointer, not the whole array. (This is why &lt;code&gt;printf&lt;/code&gt; has no way to print an array: It would need you to tell it the type of what's in the array and how many elements there are, and both the format string and the list of arguments would quickly get confusing.)&lt;/p&gt;
&lt;p&gt;Decaying is an implicit &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;; &lt;code&gt;array == &amp;amp;array == &amp;amp;array[0]&lt;/code&gt;. In English, these expressions read “&lt;var&gt;array&lt;/var&gt;”, “pointer to &lt;var&gt;array&lt;/var&gt;”, and “pointer to the first element of &lt;var&gt;array&lt;/var&gt;” (the subscript operator, &lt;span class=&quot;operator&quot;&gt;[]&lt;/span&gt;, has higher precedence than the address-of operator). But in C, all three expressions mean the same thing.&lt;/p&gt;
&lt;p&gt;(They would not all mean the same thing if “&lt;code class=&quot;variable&quot;&gt;array&lt;/code&gt;” were actually a pointer variable, since the address of a pointer variable is different from the address inside it—thus, the middle expression, &lt;code&gt;&amp;amp;array&lt;/code&gt;, would not be equal to the other two expressions. The three expressions are all equal only when &lt;code class=&quot;variable&quot;&gt;array&lt;/code&gt; really is an array.)&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;arithmetic&quot; readability=&quot;40&quot;&gt;
&lt;h2&gt;Pointer arithmetic (or: why 1 == 4)&lt;/h2&gt;
&lt;p&gt;Say we want to print out all three elements of &lt;var&gt;array&lt;/var&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int *&lt;dfn id=&quot;array_ptr&quot;&gt;array_ptr&lt;/dfn&gt; = array; printf(&quot; first element: %i\n&quot;, *(array_ptr++)); printf(&quot;second element: %i\n&quot;, *(array_ptr++)); printf(&quot; third element: %i\n&quot;, *array_ptr);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;output&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;output&quot;&gt;first element: 45 second element: 67 third element: 89&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In case you're not familiar with the &lt;code&gt;++&lt;/code&gt; operator: it adds 1 to a variable, the same as &lt;code&gt;variable += 1&lt;/code&gt; (remember that because we used the postfix expression &lt;code&gt;array_ptr++&lt;/code&gt;, rather than the prefix expression &lt;code&gt;++array_ptr&lt;/code&gt;, the expression evaluated to the value of &lt;var&gt;array_ptr&lt;/var&gt; from &lt;em&gt;before&lt;/em&gt; it was incremented rather than after).&lt;/p&gt;
&lt;p&gt;But what did we do with it here?&lt;/p&gt;
&lt;p&gt;Well, the type of a pointer matters. The type of the pointer here is &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;. When you add to or subtract from a pointer, the amount by which you do that is multiplied by the size of the type of the pointer. In the case of our three increments, each 1 that you added was multiplied by &lt;code&gt;sizeof(int)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By the way, though &lt;code&gt;sizeof(void)&lt;/code&gt; is illegal, &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; pointers are incremented or decremented by 1 byte.&lt;/p&gt;
&lt;p&gt;In case you're wondering about &lt;code&gt;1 == 4&lt;/code&gt;: Remember that earlier, I mentioned that &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;s are four bytes on current Intel processors. So, on a machine with such a processor, adding 1 to or subtracting 1 from an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; pointer changes it by four bytes. Hence, &lt;code&gt;1 == 4&lt;/code&gt;. (Programmer humor.)&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;indexing&quot; readability=&quot;41&quot;&gt;
&lt;h2&gt;Indexing&lt;/h2&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;printf(&quot;%i\n&quot;, array[0]);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK… what just happened?&lt;/p&gt;
&lt;p&gt;This happened:&lt;/p&gt;
&lt;blockquote class=&quot;output&quot;&gt;
&lt;p class=&quot;output&quot;&gt;45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, you probably figured that. But what does this have to do with pointers?&lt;/p&gt;
&lt;p&gt;This is another one of those secrets of C. The subscript operator (the &lt;code class=&quot;operator&quot;&gt;[]&lt;/code&gt; in &lt;code&gt;array[0]&lt;/code&gt;) has &lt;em&gt;nothing to do with arrays&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Oh, sure, that's its most common usage. But remember that, in most contexts, arrays decay to pointers. This is one of them: That's a &lt;em&gt;pointer&lt;/em&gt; you passed to that operator, not an array.&lt;/p&gt;
&lt;p&gt;As evidence, I submit:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int array[] = { 45, 67, 89 }; int *array_ptr = &amp;amp;array[1]; printf(&quot;%i\n&quot;, array_ptr[1]);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;output&quot;&gt;
&lt;p class=&quot;output&quot;&gt;89&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That one might bend the brain a little. Here's a diagram:&lt;/p&gt;
&lt;p class=&quot;diagram&quot;&gt;&lt;img width=&quot;214&quot; height=&quot;127&quot; alt=&quot;The second element of array_ptr is the third element of array.&quot; src=&quot;https://boredzo.org/pointers/array_indexing.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;var&gt;array&lt;/var&gt; points to the first element of the array; &lt;var&gt;array_ptr&lt;/var&gt; is set to &lt;code&gt;&amp;amp;array[1]&lt;/code&gt;, so it points to the second element of the array. So &lt;code&gt;array_ptr[1]&lt;/code&gt; is equivalent to &lt;code&gt;array[2]&lt;/code&gt; (&lt;var&gt;array_ptr&lt;/var&gt; starts at the second element of the array, so the second element of &lt;var&gt;array_ptr&lt;/var&gt; is the third element of the array).&lt;/p&gt;
&lt;p&gt;Also, you might notice that because the first element is &lt;code&gt;sizeof(int)&lt;/code&gt; bytes wide (being an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;), the second element is &lt;code&gt;sizeof(int)&lt;/code&gt; bytes forward of the start of the array. You are correct: &lt;code&gt;array[1]&lt;/code&gt; is equivalent to &lt;code&gt;*(array + 1)&lt;/code&gt;. (Remember that the number added to or subtracted from a pointer is multiplied by the size of the pointer's type, so that “&lt;code&gt;1&lt;/code&gt;” adds &lt;code&gt;sizeof(int)&lt;/code&gt; bytes to the pointer value.)&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;structures&quot; readability=&quot;37&quot;&gt;
&lt;h2&gt;Interlude: Structures and unions&lt;/h2&gt;
&lt;p&gt;Two of the more interesting kinds of types in C are structures and unions. You create a structure type with the &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; keyword, and a union type with the &lt;span class=&quot;keyword&quot;&gt;union&lt;/span&gt; keyword.&lt;/p&gt;
&lt;p&gt;The exact definitions of these types are beyond the scope of this article. Suffice to say that a declaration of a struct or union looks like this:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;struct foo { size_t size; char name[64]; int answer_to_ultimate_question; unsigned shoe_size; };&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Each of those declarations inside the block is called a member. Unions have members too, but they're used differently. Accessing a member looks like this:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;struct foo my_foo; my_foo.size = sizeof(struct foo);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The expression &lt;code&gt;my_foo.size&lt;/code&gt; accesses the member &lt;span class=&quot;member&quot;&gt;size&lt;/span&gt; of &lt;var&gt;my_foo&lt;/var&gt;.&lt;/p&gt;
&lt;p&gt;So what do you do if you have a pointer to a structure?&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt; (*foo_ptr).size = new_size;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But there is a better way, specifically for this purpose: the &lt;dfn id=&quot;pointer_to_member&quot;&gt;pointer-to-member operator&lt;/dfn&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt; foo_ptr-&amp;gt;size = new_size;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, it doesn't look as good with multiple indirection.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt; (*foo_ptr_ptr)-&amp;gt;size = new_size;  (**foo_ptr_ptr).size = new_size; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rant: Pascal does this much better. Its dereference operator is a postfix &lt;span class=&quot;operator&quot;&gt;^&lt;/span&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt; foo_ptr_ptr^^.size := new_size;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(But putting aside this complaint, C is a much better language.)&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;multiple_indirection&quot; readability=&quot;20&quot;&gt;
&lt;h2&gt;Multiple indirection&lt;/h2&gt;
&lt;p&gt;I want to explain multiple indirection a bit further.&lt;/p&gt;
&lt;p&gt;Consider the following code:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int a = 3; int *b = &amp;amp;a; int **c = &amp;amp;b; int ***d = &amp;amp;c;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are how the values of these pointers equate to each other:&lt;/p&gt;
&lt;ul id=&quot;equations&quot; class=&quot;code&quot;&gt;&lt;li&gt;*d == c; &lt;/li&gt;
&lt;li&gt;**d == *c == b; &lt;/li&gt;
&lt;li&gt;***d == **c == *b == a == 3; &lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Thus, the &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt; operator can be thought of as adding asterisks (increasing pointer level, as I call it), and the &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;operator&quot;&gt;-&amp;gt;&lt;/span&gt;, and &lt;span class=&quot;operator&quot;&gt;[]&lt;/span&gt; operators as removing asterisks (decreasing pointer level).&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;const&quot; readability=&quot;22&quot;&gt;
&lt;h2&gt;Pointers and &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; keyword is used a bit differently when pointers are involved. These two declarations are equivalent:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;const int *ptr_a; int const *ptr_a;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These two, however, are not equivalent:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int const *ptr_a; int *const ptr_b;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the first example, the &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; (i.e. &lt;code&gt;*ptr_a&lt;/code&gt;) is &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;; you cannot do &lt;code&gt;*ptr_a = 42&lt;/code&gt;. In the second example, the pointer itself is &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;; you can change &lt;code&gt;*ptr_b&lt;/code&gt; just fine, but you cannot change (using pointer arithmetic, e.g. &lt;code&gt;ptr_b++&lt;/code&gt;) the pointer itself.&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;function_pointers&quot; readability=&quot;138&quot;&gt;
&lt;h2&gt;Function pointers&lt;/h2&gt;
&lt;p&gt;Note: The syntax for all of this seems a bit exotic. It is. It confuses a lot of people, even C wizards. Bear with me.&lt;/p&gt;
&lt;p&gt;It's possible to take the address of a function, too. And, similarly to arrays, functions decay to pointers when their names are used. So if you wanted the address of, say, &lt;span class=&quot;function&quot;&gt;strcpy&lt;/span&gt;, you could say either &lt;code&gt;strcpy&lt;/code&gt; or &lt;code&gt;&amp;amp;strcpy&lt;/code&gt;. (&lt;code&gt;&amp;amp;strcpy[0]&lt;/code&gt; won't work for obvious reasons.)&lt;/p&gt;
&lt;p&gt;When you call a function, you use an operator called the &lt;dfn id=&quot;function_call_operator&quot;&gt;function call operator&lt;/dfn&gt;. The function call operator takes a function pointer on its left side.&lt;/p&gt;
&lt;p&gt;In this example, we pass &lt;var&gt;dst&lt;/var&gt; and &lt;var&gt;src&lt;/var&gt; as the arguments on the interior, and &lt;span class=&quot;function&quot;&gt;strcpy&lt;/span&gt; as the function (that is, the function pointer) to be called:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p class=&quot;code&quot;&gt;enum { &lt;dfn id=&quot;str_length&quot;&gt;str_length&lt;/dfn&gt; = 18U };  char &lt;dfn id=&quot;src&quot;&gt;src&lt;/dfn&gt;[str_length] = &quot;This is a string.&quot;, &lt;dfn id=&quot;dst&quot;&gt;dst&lt;/dfn&gt;[str_length]; strcpy(dst, src); &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There's a special syntax for declaring variables whose type is a function pointer.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *strcpy(char *dst, const char *src);  char *(*strcpy_ptr)(char *dst, const char *src);  strcpy_ptr = strcpy; strcpy_ptr = &amp;amp;strcpy;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note the parentheses around &lt;code&gt;*strcpy_ptr&lt;/code&gt; in the above declaration. These separate the asterisk indicating return type (&lt;span class=&quot;type&quot;&gt;char *&lt;/span&gt;) from the asterisk indicating the pointer level of the variable (&lt;code&gt;*strcpy_ptr&lt;/code&gt; — one level, pointer to function).&lt;/p&gt;
&lt;p&gt;Also, just like in a regular function declaration, the parameter names are optional:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *(*strcpy_ptr_noparams)(char *, const char *) = strcpy_ptr; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The type of the pointer to &lt;span class=&quot;function&quot;&gt;strcpy&lt;/span&gt; is &lt;span class=&quot;type&quot;&gt;char *(*)(char *, const char *)&lt;/span&gt;; you may notice that this is the declaration from above, minus the variable name. You would use this in a cast. For example:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;strcpy_ptr = (char *(*)(char *dst, const char *src))my_strcpy;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you might expect, a pointer to a pointer to a function has two asterisks inside of the parentheses:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *(**strcpy_ptr_ptr)(char *, const char *) = &amp;amp;strcpy_ptr;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can have an array of function-pointers:&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *(*strcpies[3])(char *, const char *) = { strcpy, strcpy, strcpy }; char *(*strcpies[])(char *, const char *) = { strcpy, strcpy, strcpy };  strcpies[0](dst, src);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's a pathological declaration, taken from the C99 standard. “[This declaration] declares a function &lt;span class=&quot;function&quot;&gt;f&lt;/span&gt; with no parameters returning an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;, a function &lt;span class=&quot;function&quot;&gt;fip&lt;/span&gt; with no parameter specification returning a pointer to an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;, and a pointer &lt;span class=&quot;function&quot;&gt;pfi&lt;/span&gt; to a function with no parameter specification returning an &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;.” (6.7.5.3[16])&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int f(void), *fip(), (*pfi)();&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In other words, the above is equivalent to the following three declarations:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;int f(void); int *fip();  int (*pfi)(); &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But if you thought that was mind-bending, brace yourself…&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;A function pointer can even be the return value of a function. This part is &lt;em&gt;really&lt;/em&gt; mind-bending, so stretch your brain a bit so as not to risk injury.&lt;/p&gt;
&lt;p&gt;In order to explain this, I'm going to summarize all the declaration syntax you've learned so far. First, declaring a pointer variable:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;char *ptr;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This declaration tells us the pointer type (&lt;span class=&quot;type&quot;&gt;char&lt;/span&gt;), pointer level (&lt;code&gt;*&lt;/code&gt;), and variable name (&lt;var&gt;ptr&lt;/var&gt;). And the latter two can go into parentheses:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&quot;code&quot;&gt;char (*ptr);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What happens if we replace the variable name in the first declaration with a name followed by a set of parameters?&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *strcpy(char *dst, const char *src);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Huh. A function declaration.&lt;/p&gt;
&lt;p&gt;But we also removed the &lt;code&gt;*&lt;/code&gt; indicating pointer level — remember that the &lt;code&gt;*&lt;/code&gt; in this function declaration is part of the return type of the function. So if we add the pointer-level asterisk back (using the parentheses):&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *(*strcpy_ptr)(char *dst, const char *src);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A function pointer variable!&lt;/p&gt;
&lt;p&gt;But wait a minute. If this is a variable, and the first declaration was also a variable, can we not replace the variable name in THIS declaration with a name and a set of parameters?&lt;/p&gt;
&lt;p&gt;YES WE CAN! And the result is the declaration of a function that returns a function pointer:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char *(*get_strcpy_ptr(void))(char *dst, const char *src);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Remember that the type of a pointer to a function taking no arguments and returning &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; is &lt;span class=&quot;type&quot;&gt;int (*)(void)&lt;/span&gt;. So the type returned by this function is &lt;span class=&quot;type&quot;&gt;char *(*)(char *, const char *)&lt;/span&gt; (with, again, the inner &lt;code&gt;*&lt;/code&gt; indicating a pointer, and the outer &lt;code&gt;*&lt;/code&gt; being part of the return type of the pointed-to function). You may remember that that is also the type of &lt;var&gt;strcpy_ptr&lt;/var&gt;.&lt;/p&gt;
&lt;p&gt;So this function, which is called with no parameters, returns a pointer to a &lt;span class=&quot;function&quot;&gt;strcpy&lt;/span&gt;-like function:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;strcpy_ptr = get_strcpy_ptr();&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because function pointer syntax is so mind-bending, most developers use &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt;s to abstract them:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p class=&quot;code&quot;&gt;typedef char *(*strcpy_funcptr)(char *, const char *); strcpy_funcptr strcpy_ptr = strcpy; strcpy_funcptr get_strcpy_ptr(void);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;strings&quot; readability=&quot;51&quot;&gt;
&lt;h2&gt;Strings (and why there is no such thing)&lt;/h2&gt;
&lt;p&gt;There is no string type in C.&lt;/p&gt;
&lt;p&gt;Now you have two questions:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Why do I keep seeing references to “C strings” everywhere if there is no string type?&lt;/li&gt;
&lt;li&gt;What does this have to do with pointers?&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The truth is, the concept of a “C string” is imaginary (except for string literals). There is no string type. C strings are really just arrays of characters:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;char str[] = &quot;I am the Walrus&quot;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This array is 16 bytes in length: 15 characters for &quot;I am the Walrus&quot;, plus a NUL (byte value 0) terminator. In other words, &lt;code&gt;str[15]&lt;/code&gt; (the last element) is 0. This is how the end of the “string” is signaled.&lt;/p&gt;
&lt;p&gt;This idiom is the extent to which C has a string type. But that's all it is: an idiom. Except that it is supported by:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the aforementioned string literal syntax&lt;/li&gt;
&lt;li&gt;the string library&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The functions in string.h are for string manipulation. But how can that be, if there is no string type?&lt;/p&gt;
&lt;p&gt;Why, they work on pointers.&lt;/p&gt;
&lt;p&gt;Here's one possible implementation of the simple function &lt;span class=&quot;function&quot;&gt;strlen&lt;/span&gt;, which returns the length of a string (not including the NUL terminator):&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;size_t strlen(const char *str) {  size_t len = 0U; while(*(str++)) ++len; return len; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note the use of pointer arithmetic and dereferencing. That's because, despite the function's name, there is no “string” here; there is merely a pointer to at least one character, the last one being 0.&lt;/p&gt;
&lt;p&gt;Here's another possible implementation:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;code&quot;&gt;size_t strlen(const char *str) { size_t i; for(i = 0U; str[i]; ++i);  return i; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That one uses indexing. Which, as we found out earlier, uses a pointer (not an array, and definitely not a string).&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;&lt;div id=&quot;versionhistory&quot;&gt;
&lt;h2&gt;Version history&lt;/h2&gt;
&lt;dl&gt;&lt;dt&gt;1.3 — 2010-01-13&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;&lt;li&gt;Fixed explanation of the relationship between &lt;a href=&quot;https://boredzo.org/pointers/#const&quot;&gt;Pointers and &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Added &lt;span class=&quot;operator&quot;&gt;-&amp;gt;&lt;/span&gt; as one of the dereference operators in &lt;a href=&quot;https://boredzo.org/pointers/#multiple_indirection&quot;&gt;Multiple indirection&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Changed improper use of ‘’’ as apostrophe to use proper apostrophes instead. Most fonts still render the apostrophe (‘'’) as a straight single quote, but that's not my problem.&lt;/li&gt;
&lt;li&gt;Corrected discussion of decaying, especially of arrays. &lt;a href=&quot;http://djmnet.org/lore/arrays-are-not-pointers.txt&quot;&gt;Arrays are not pointers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added two links to &lt;a href=&quot;http://ieng9.ucsd.edu/~cs30x/rt_lt.rule.html&quot;&gt;the right-left rule for reading C declarations&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Corrected the name of the subscript operator (which I previously referred to as the index operator).&lt;/li&gt;
&lt;li&gt;Replaced references to the PowerPC with references to Intel processors. (Fortunately, no factual changes were necessary.)&lt;/li&gt;
&lt;li&gt;Fixed a couple of compilation errors and a few warnings in the sample code (in addition to the aforementioned array-decaying discussion).&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;dt&gt;1.2.2 — 2007-01-08&lt;/dt&gt;
&lt;dd&gt;
&lt;/dd&gt;
&lt;dt&gt;1.2.1 — 2006-04-05&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;&lt;li&gt;Changed byline from “Mac-arena the Bored Zo” to my real name.&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;dt&gt;1.2 — 2006-01-19&lt;/dt&gt;
&lt;dd&gt;
&lt;/dd&gt;
&lt;dt&gt;1.1 — 2006-01-01&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;&lt;li&gt;Added:
&lt;/li&gt;
&lt;li&gt;Changed sentences to begin with a capital letter, on feedback that it should be clearer to read that way.&lt;/li&gt;
&lt;li&gt;Clarified &lt;code&gt;1 == 4&lt;/code&gt; expression in title, and use of &lt;code&gt;++&lt;/code&gt;, in “&lt;a href=&quot;https://boredzo.org/pointers/#arithmetic&quot;&gt;Pointer arithmetic&lt;/a&gt;”.&lt;/li&gt;
&lt;li&gt;Shinier CSS, especially for comments.&lt;/li&gt;
&lt;li&gt;Added winged-comments () style.&lt;/li&gt;
&lt;li&gt;Added diagram in &lt;a href=&quot;https://boredzo.org/pointers/#starting&quot;&gt;Starting off&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Explained array declaration syntax (as opposed to pointer declaration syntax) in &lt;a href=&quot;https://boredzo.org/pointers/#arrays&quot;&gt;Arrays&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;dt&gt;1.0 — 2005-12-22&lt;/dt&gt;
&lt;dd&gt;First public release.&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;
&lt;hr /&gt;&lt;div id=&quot;alsoavailablein&quot; readability=&quot;9.3739130434783&quot;&gt;
&lt;p&gt;This document is also available in &lt;a href=&quot;https://boredzo.org/pointers/pointers.zip&quot;&gt;zip&lt;/a&gt; format. The previous versions (&lt;a href=&quot;https://boredzo.org/pointers/pointers-1.2.1.zip&quot;&gt;1.2.1&lt;/a&gt;, &lt;a href=&quot;https://boredzo.org/pointers/pointers-1.2.zip&quot;&gt;1.2&lt;/a&gt;, &lt;a href=&quot;https://boredzo.org/pointers/pointers-1.1.zip&quot;&gt;1.1&lt;/a&gt;, and &lt;a href=&quot;https://boredzo.org/pointers/pointers-1.0.zip&quot;&gt;1.0&lt;/a&gt;) are also available.&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;</description>
<pubDate>Mon, 03 Dec 2018 04:13:56 +0000</pubDate>
<dc:creator>prabhupant</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://boredzo.org/pointers/</dc:identifier>
</item>
</channel>
</rss>