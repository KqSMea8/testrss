<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>MIT Researchers Have Developed a ‘System for Dream Control’</title>
<link>https://motherboard.vice.com/en_us/article/ywxjvg/steel-ball-control-dreams-dormio-mit-hypnagogia</link>
<guid isPermaLink="true" >https://motherboard.vice.com/en_us/article/ywxjvg/steel-ball-control-dreams-dormio-mit-hypnagogia</guid>
<description>&lt;p&gt;There is a borderland between waking life and the uncharted wilderness of sleep that we all traverse each night, but we rarely stop to marvel at the strangeness of this liminal world. If we do, we find that it is full of hallucinations both wonderful and terrifying, a mental goulash of reality and fantasy.&lt;/p&gt;
&lt;p&gt;Usually we pass through this state of half-wakefulness on our way to deep sleep within minutes. We may experience microdreams during the transition, but the content of these microdreams appear to be random and we usually don’t have any memory of them when we wake. A team of researchers led by MIT doctoral candidate Adam Horowitz wants to change that.&lt;/p&gt;

&lt;p&gt;Horowitz and his colleagues at the MIT Media Lab have developed a relatively simple device called Dormio to interface with this unique stage of sleep. Their hypothesis is that this liminal period between wakefulness and sleep is a fount of creativity that is usually lost in the ocean of sleep. The thinking is that if you’re able to descend into that stage of sleep and return to consciousness without descending deeper into sleep, you will benefit from the intensely associative thinking that characterizes the strange microdreams experienced during the transition to sleep.&lt;/p&gt;
&lt;p&gt;So far Horowitz has tested the device on 15 subjects and found that it is able to reliably maximize the amount of time users spend suspended between wakefulness and sleep, as well as shape the content of the microdreams they experience. In other words, these MIT researchers have developed a low cost device that allows users to interface with sleep.&lt;/p&gt;
&lt;h2&gt;WHEN IS A SLEEPER ACTUALLY ASLEEP?&lt;/h2&gt;
&lt;p&gt;The technical name for the awareness of the brief period between wakefulness and sleep is &lt;a href=&quot;https://www.theatlantic.com/science/archive/2016/04/deciphering-hypnagogia/478941/&quot; target=&quot;_blank&quot;&gt;hypnagogia&lt;/a&gt;, and its something of a mystery for neuroscientists. The reason for this is that determining when someone is actually asleep is a matter of debate among scientists. It’s kind of like trying to determine when someone is ‘actually’ dead: Is it when the heart stops beating, when they lose consciousness, or when cells finally stop replicating?&lt;/p&gt;
&lt;p&gt;What is certain, however, is that hypnagogia is a natural phenomenon that almost all of us encounter on a nightly basis.&lt;/p&gt;

&lt;p&gt;“Hypnagogic imagery or hallucinations is a normal state of consciousness in the transition from wakefulness to sleep,” Vladas Noreika, a psychologist at Cambridge who was not involved with Dormio, told me in an email. Unlike other sleep states that allow for awareness, such as lucid dreaming during REM sleep, hypnagogia doesn’t require special training to induce its effects. It’s a common phenomenon that is a natural part of the circadian rhythm.&lt;/p&gt;
&lt;p&gt;“The big questions are whether we become more creative in this state of consciousness, and why in some cases hypnagogia leads to a full-fledged dreaming, whereas in other cases to dreamless sleep,” Noreika added.&lt;/p&gt;
&lt;div class=&quot;article__media&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://vice-web-statics-cdn.vice.com/images/blank.png&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1524488562432-IMG_4828-2.jpeg&quot;/&gt;&lt;p&gt;An early prototype of the Dormio glove. Image: Adam Horowitz/MIT&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Defining just what hypnagogia &lt;em&gt;is&lt;/em&gt; is tricky because people in this state exhibit behaviors characteristic of sleep and wakefulness, both from their own perspective and to outsiders. Technically speaking, hypnagogia occurs during stage 1 sleep, even if people who are woken up during this period sometimes report that they never were asleep or are able to respond when someone is talking to them. Moreover, people woken from hypnagogia often report strong visual and auditory hallucinations or microdreams, but like sleep itself, &lt;a href=&quot;https://www.researchgate.net/publication/314868747_Microdream_neurophenomenology&quot; target=&quot;_blank&quot;&gt;what counts as a ‘dream’ is a subject of debate&lt;/a&gt; among neuroscientists.&lt;/p&gt;
&lt;p&gt;These strange experiences explain why hypnagogic consciousness has been coveted by some of the most brilliant scientific and artistic minds in history. &lt;a href=&quot;https://www.wired.com/2008/05/st-napping/&quot; target=&quot;_blank&quot;&gt;Thomas Edison&lt;/a&gt;, &lt;a href=&quot;https://www.eapoe.org/works/misc/mar0346.htm&quot; target=&quot;_blank&quot;&gt;Edgar Allen Poe&lt;/a&gt;, &lt;a href=&quot;https://books.google.com/books?id=_DuO-a4QLXIC&amp;amp;pg=PA62&amp;amp;lpg=PA62&amp;amp;dq=Just+before+falling+asleep,+I+often+become+aware+of+a+kind+of+one-sided+conversation+going+on+in+my+mind,+quite+independently+from+the+natural+train+of+my+thoughts.&amp;amp;source=bl&amp;amp;ots=Kfs_oLNq0Z&amp;amp;sig=JufevISzcAYJZGkc4kwBQ48_on8&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0ahUKEwjWkpbMhsLaAhVFrlkKHZdxCnkQ6AEIJzAA#v=onepage&amp;amp;q=Just%20before%20falling%20asleep%2C%20I%20often%20become%20aware%20of%20a%20kind%20of%20one-sided%20conversation%20going%20on%20in%20my%20mind%2C%20quite%20independently%20from%20the%20natural%20train%20of%20my%20thoughts.&amp;amp;f=false&quot; target=&quot;_blank&quot;&gt;Vladimir Nabokov&lt;/a&gt;, &lt;a href=&quot;http://knarf.english.upenn.edu/Articles/thomasr.html&quot; target=&quot;_blank&quot;&gt;Mary Shelley&lt;/a&gt;, &lt;a href=&quot;https://www.fastcompany.com/3023078/how-dali-einstein-and-aristotle-perfected-the-power-nap&quot; target=&quot;_blank&quot;&gt;Albert Einstein&lt;/a&gt;, &lt;a href=&quot;https://www.psychologytoday.com/us/blog/dream-factory/201502/how-dream-salvador-dali&quot; target=&quot;_blank&quot;&gt;Salvador Dali&lt;/a&gt;, &lt;a href=&quot;https://www.nytimes.com/1988/08/16/science/the-benzene-ring-dream-analysis.html&quot; target=&quot;_blank&quot;&gt;August Kekule&lt;/a&gt;, and &lt;a href=&quot;https://www.fastcompany.com/3023078/how-dali-einstein-and-aristotle-perfected-the-power-nap&quot; target=&quot;_blank&quot;&gt;Richard Wagner&lt;/a&gt; all &lt;a href=&quot;https://www.fastcompany.com/3023078/how-dali-einstein-and-aristotle-perfected-the-power-nap&quot; target=&quot;_blank&quot;&gt;expressed their fascination&lt;/a&gt; with hypnagogia and claimed that their experiences in this twilight zone of the mind resulted in sudden bursts of creativity or mental clarity. The idea that “&lt;a href=&quot;https://books.google.com/books?id=Ryz6DwlI94UC&amp;amp;pg=PA14&amp;amp;lpg=PA14&amp;amp;dq=conscious+access+to+underlying,+unconscious+forces+kandel&amp;amp;source=bl&amp;amp;ots=P8_lTSnwcm&amp;amp;sig=FNb5qABEdnTqwoP6oQHY7vYk6F0&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0ahUKEwilwOa62MnaAhWvpFkKHXhuDm8Q6AEIMjAC#v=onepage&amp;amp;q=conscious%20access%20to%20underlying%2C%20unconscious%20forces%20kandel&amp;amp;f=false&quot; target=&quot;_blank&quot;&gt;conscious access to underlying, unconscious forces&lt;/a&gt;” is at the root of creativity was also echoed and reformulated in a more scientifically rigorous way by the Nobel biophysicist Eric Kandel in the 90s.&lt;/p&gt;

&lt;p&gt;In any case, it’s hardly surprising that many of these same thinkers developed a life hack to induce hypnagogic consciousness at will to reap its creative benefits.&lt;/p&gt;
&lt;p class=&quot;article__pull-quote&quot;&gt;&quot;I felt I was nowhere really, in this kind of nowhere space where all of these ideas exist.&quot;&lt;/p&gt;
&lt;p&gt;The most famous example of purposely induced hypnagogia is probably Thomas Edison’s steel balls trick. According to possibly apocryphal tales, Edison was able to reliably induce hypnagogia by &lt;a href=&quot;http://techland.time.com/2013/11/14/the-spark-of-invention/&quot; target=&quot;_blank&quot;&gt;falling asleep with steel balls in his hand&lt;/a&gt;. As he drifted off to sleep, his muscles would relax and he would inevitably drop the balls on the floor and the noise from the fall would jolt him back to wakefulness. During these micronaps Edison would never fully fall asleep, but he would experience the strange hallucinations and insights characteristic of hypnagogia.&lt;/p&gt;
&lt;p&gt;“All these major thinkers write beautifully about this state of mind where the world starts dissolving, but you still have awareness of your descent into unconsciousness and memories mixing with hallucinations,” Horowitz told me on the phone. “Hypnagogia is pretty damn cool, but the best way that anyone had come up with to find it was dropping a steel ball.”&lt;/p&gt;
&lt;p&gt;Dormio, which is part of a &lt;a href=&quot;https://engineeringdreams.net/&quot; target=&quot;_blank&quot;&gt;wider MIT Media Lab initiative to interface with sleep&lt;/a&gt;, is essentially a 21st century take on Edison’s technique.&lt;/p&gt;
&lt;h2&gt;THE DREAM MACHINE&lt;/h2&gt;
&lt;p&gt;Dormio has now gone through two iterations, and Horowitz said he and his collaborators are now at work on a third. The first generation of Dormio consisted of an Arduino microcontroller mounted to a glove with a small pressure sensor in the palm that Horowitz designed with his colleagues Ishaan Grover, Sophia Yang and Pedro Reynolds Cuéllar.&lt;/p&gt;

&lt;p&gt;A person dons the glove before going to sleep and clenches their hand into a fist, putting pressure on the sensor. At the same time electroencephalograph (EEG) sensors monitored electrical activity in the brain. As the hand and head sensors detect that the person’s muscles are relaxing and brain waves are changing as they fall asleep, it triggers a nearby Jibo robot to say a preprogrammed phrase. This phrase is meant to prime the sleeper’s brain so that it changed the content of the dream based on what the Jibo robot said.&lt;/p&gt;
&lt;p&gt;Yet there were a number of problems with the device. For starters, EEG devices are expensive to use and it is quite complicated to understand the signals. Additionally, the palm sensors could only do two states—on or off—even though the onset of sleep occurs as a gradual transition.&lt;/p&gt;
&lt;p&gt;To rectify these shortcomings, Horowitz and his colleagues designed a new version of Dormio that swaps out the palm sensor for flexion sensors, which measure muscle tension at a much more granular level. This means the researchers can watch a subject gradually fall asleep by monitoring the loss of muscle tone. They also swapped out the EEG for simpler biosignals, such as heart rate, and traded in the Jibo robot for a smartphone app.&lt;/p&gt;
&lt;p&gt;Horowitz said the third generation will work just by monitoring eyelid movement in sleeping subjects. The goal is to make Dormio as comfortable, cheap, and non-invasive as possible to make it easier for users to fall asleep while using it.&lt;/p&gt;
&lt;div class=&quot;article__media&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://vice-web-statics-cdn.vice.com/images/blank.png&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1524491344977-3.png&quot;/&gt;&lt;p&gt;A subject uses the first generation of Dormio. Image: MIT&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Horowitz tested the first version of Dormio on six volunteers from MIT. The participants would arrive at the lab in the early evening and lay down on a couch to go to sleep. As they were falling asleep, the Jibo robot would prompt them with one of two phrases: “remember to think about a rabbit” or “remember to think about a fork.” When the Dormio system detected the participants were falling asleep, the robot would say their name and “you are falling asleep.”&lt;/p&gt;
&lt;p&gt;This is the equivalent of Edison dropping his steel balls, but the aim of Dormio is not to wake up the sleeper entirely. Instead, the system is meant to prevent the user from falling deeper into sleep, effectively suspending them in an extended state of hypnagogia. Once the volunteers were in a state of hypnagogia, the Jibo robot would ask them what they are thinking about and record their answers.&lt;/p&gt;

&lt;p class=&quot;article__pull-quote&quot;&gt;&quot;We have a kind of workable system for dream control.&quot;&lt;/p&gt;
&lt;p&gt;According to Horowitz’s results, which will be presented this week at the &lt;a href=&quot;https://chi2018.acm.org/&quot; target=&quot;_blank&quot;&gt;Computer-Human Interface conference&lt;/a&gt; in Montreal, although not all of the subjects remembered what they said to the robot, all of them “remembered and reported seeing the prompt word during their dream state, showing successful inception and recall of stimuli into said dream state.”&lt;/p&gt;
&lt;p&gt;“This means we have a kind of workable system for dream control,” Horowitz told me.&lt;/p&gt;
&lt;p&gt;But Dormio isn’t just about manipulating dreams. Horowitz wanted to see if having conscious access to these microdreams would result in the creativity “boost” that was so coveted by Edison and others.&lt;/p&gt;
&lt;p&gt;When Horowitz’s subjects finished three rounds with Dormio, they were administered an “Alternative Uses Task,” which Horowitz described as a “classic test of creativity.” As its name suggests, this test asked the participants to imagine alternative uses for the word they were prompted with, either a rabbit or a fork. The volunteers were also asked to write a creative story based around the word prompt.&lt;/p&gt;
&lt;div class=&quot;article__media&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://vice-web-statics-cdn.vice.com/images/blank.png&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1524259550240-MTT.jpeg&quot;/&gt;&lt;p&gt;A subject uses Dormio at MIT. Image: MIT Fluid Interfaces&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Although &lt;a href=&quot;https://www.tandfonline.com/doi/full/10.1080/10400419.2016.1125259&quot; target=&quot;_blank&quot;&gt;creativity is notoriously difficult to measure&lt;/a&gt; in any objective way, the results from the control and Dormio tests showed signs of a creativity boost among Horowitz’s volunteers. They spent an average of 158 seconds longer working on their creative story after experiencing hypnagogia and five of the six volunteers scored higher on their alternative use task after using Dormio than during the control test. In self reports, four of the volunteers said that the ideas generated during hypnagogia felt creative.&lt;/p&gt;
&lt;p&gt;“Ideas were not coming from me, they were just passing through my head,” one subject reported. “I felt I was nowhere really, in this kind of nowhere space where all of these ideas exist, and it made so much sense that all these ideas existed in this nowhere space.”&lt;/p&gt;

&lt;p&gt;“The reason you get these different ways of processing information is because you don't have the same brain at sleep onset,” Horowitz told me. “You lose a lot of frontal function which means you're hyper-associative, you have a loss of sense of self, a loss of sense of time, a loss of sense of space, and people have a much easier time with divergent thinking, which is tightly tied to coming up with innovative and weird solutions that you would ignore if you're fully awake.”&lt;/p&gt;
&lt;h2&gt;THE FUTURE OF DORMIO&lt;/h2&gt;
&lt;p&gt;The idea of interfacing with our dreams to naturally boost our creativity is an attractive one, but is still an emerging field of research that will require a lot more testing. Horowitz has already tested the second generation Dormio device on a cohort of nine subjects, but says he needs a far larger cohort than 15 subjects to really dial in on how Dormio affects hypnagogia. In addition to getting more human data, he and his colleagues are also working on developing an even less intrusive version of Dormio that will detect the onset of hypnagogia solely by monitoring eyelid movement.&lt;/p&gt;
&lt;p&gt;In the meantime, other researchers like Noreika are working on uncovering the neural mechanisms behind hypnagogia. It’s a difficult phenomenon to pin down because its effects vary from vivid hallucinations and dreams to the mental presence of phrases that have little to do with a person’s thoughts before falling asleep.&lt;/p&gt;
&lt;div class=&quot;article__media&quot;&gt;&lt;img src=&quot;https://vice-web-statics-cdn.vice.com/images/blank.png&quot; alt=&quot;&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1524259607650-1.jpeg&quot;/&gt;&lt;p&gt;Image: Oscar Rosello/MIT&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“While neural mechanisms of hypnagogia haven't been sufficiently studied, it seems that rigid frontal brain control of sensory input loosens in drowsiness, resulting in the generation of unpredictable sensory experiences,” Noreika told me.&lt;/p&gt;
&lt;p&gt;Nevertheless, hypnagogia does seem to be connected to a person’s lived experiences. This means that some people may be more likely to experience linguistic phenomena than hallucinatory images or audio, for instance. In 2015, Noreika led a &lt;a href=&quot;https://www.frontiersin.org/articles/10.3389/fpsyg.2015.00202/full&quot; target=&quot;_blank&quot;&gt;case study&lt;/a&gt; in which a retired professor of literature came to his lab for 10 sessions during which the professor would fall asleep and report his experiences as he drifted off. During these sessions, the professor reported hypnagogia characterized by “intense linguistic intrusions, including words made up of foreign languages.” As Noreika pointed out, “it is likely that individuals without extensive knowledge of languages would not experience such intrusions.”&lt;/p&gt;

&lt;p&gt;Horowitz described similar links between the hypnagogic experiences of his subjects during their Dormio sessions and their waking lives. For example, when one of his subjects was prompted with the word ‘fork’ it caused him to mutter “forks are colonialism.”&lt;/p&gt;
&lt;p&gt;“I asked him about it when he woke up,” Horowitz told me. “He said, ‘Oh at home I eat food with my hands and here I have a sharp, cold metal instrument that I use to stab the food that goes into me. I guess it has a colonial energy.’ He said he always thought that about forks, but never thought that he thought that. The idea that you can access cognition that lets you see yourself with this technology is very exciting to me.”&lt;/p&gt;
</description>
<pubDate>Mon, 23 Apr 2018 14:48:04 +0000</pubDate>
<dc:creator>dsr12</dc:creator>
<og:type>article</og:type>
<og:title>MIT Researchers Have Developed a ‘System for Dream Control’</og:title>
<og:image>https://video-images.vice.com/articles/5ada59e9b1e922000633eb19/lede/1524491359677-2.jpeg?crop=1xw:1xh;center,center&amp;resize=1200:*</og:image>
<og:url>https://motherboard.vice.com/en_us/article/ywxjvg/steel-ball-control-dreams-dormio-mit-hypnagogia</og:url>
<og:description>When is a sleeper actually asleep?</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://motherboard.vice.com/en_us/article/ywxjvg/steel-ball-control-dreams-dormio-mit-hypnagogia</dc:identifier>
</item>
<item>
<title>The Many Ways Google Harvests Data</title>
<link>https://www.wsj.com/articles/who-has-more-of-your-personal-data-than-facebook-try-google-1524398401</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/who-has-more-of-your-personal-data-than-facebook-try-google-1524398401</guid>
<description>&lt;div class=&quot;clearfix byline-wrap&quot;&gt;


    
    &lt;div class=&quot;byline&quot;&gt;
    
    
        &lt;span&gt;By&lt;/span&gt;
    
              &lt;div class=&quot;author mobile-scrim hasMenu&quot; data-scrim=&quot;{&amp;quot;type&amp;quot;:&amp;quot;author&amp;quot;,&amp;quot;header&amp;quot;:&amp;quot;Christopher Mims&amp;quot;,&amp;quot;subhead&amp;quot;:&amp;quot;The Wall Street Journal&amp;quot;,&amp;quot;list&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;bio&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://www.wsj.com/news/author/8003&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;Biography&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;twitter&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;http://twitter.com/mims&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;@mims&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;facebook&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;http://facebook.com/christophermims&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;christophermims&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;email&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;mailto:christopher.mims@wsj.com&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;christopher.mims@wsj.com&amp;quot;}]}&quot; itemscope=&quot;&quot; itemprop=&quot;author&quot; itemtype=&quot;http://schema.org/Person&quot;&gt;
                  &lt;span class=&quot;name&quot; itemprop=&quot;name&quot;&gt;Christopher Mims&lt;/span&gt;
                  &lt;/div&gt;

    &lt;/div&gt;
    
    &lt;time class=&quot;timestamp&quot;&gt;
      April 22, 2018 8:00 a.m. ET
    &lt;/time&gt;

        
  &lt;/div&gt;

  



       &lt;p&gt;Recent controversy over 






            &lt;a href=&quot;http://quotes.wsj.com/FB&quot;&gt;Facebook&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.’s&lt;/span&gt;

      &lt;a href=&quot;http://quotes.wsj.com/FB?mod=chiclets&quot; class=&quot;media-object-chiclet down &quot; data-channel=&quot;/quotes/zigman/9962609/composite&quot; data-symbol=&quot;FB&quot; data-changepercent=&quot;-0.26&quot;&gt;
        FB &lt;span&gt;-0.26%&lt;/span&gt;
      &lt;/a&gt;

       hunger for personal data has surfaced the notion that the online advertising industry could be hazardous to &lt;a href=&quot;https://www.wsj.com/articles/mark-zuckerberg-to-testify-before-house-committee-on-april-11-1522844990&quot; class=&quot;icon none&quot;&gt;our privacy&lt;/a&gt; and &lt;a href=&quot;https://www.wsj.com/articles/will-facebook-sacrifice-billions-in-revenue-to-save-its-users-1515326401&quot; class=&quot;icon none&quot;&gt;well-being&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;As justifiable as the focus on Facebook has been, though, it isn’t the full picture. If the concern is that companies might be collecting some personal data without our knowledge or explicit consent, 






            &lt;a href=&quot;http://quotes.wsj.com/GOOGL&quot;&gt;Alphabet&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.’s&lt;/span&gt;

      &lt;a href=&quot;http://quotes.wsj.com/GOOGL?mod=chiclets&quot; class=&quot;media-object-chiclet down &quot; data-channel=&quot;/quotes/zigman/59539269/composite&quot; data-symbol=&quot;GOOGL&quot; data-changepercent=&quot;-0.33&quot;&gt;
        GOOGL &lt;span&gt;-0.33%&lt;/span&gt;
      &lt;/a&gt;

       Google is a far bigger threat by many measures: the volume of information it gathers, the reach of its tracking and the time people spend on its sites and apps.&lt;/p&gt;




      &lt;div class=&quot;paywall&quot;&gt;




       &lt;p&gt; &lt;a href=&quot;https://www.wsj.com/articles/apple-amazon-and-google-also-are-bracing-for-privacy-regulations-1523188801&quot; class=&quot;icon none&quot;&gt;New regulations, particularly in Europe&lt;/a&gt;, are driving Google and others to disclose more and seek more permissions from users. And given the choice, many people might even be fine with the trade-off of personal data for services. Still, to date few of us realize the extent to which our data is being collected and used.&lt;/p&gt; &lt;p&gt;“There is a systemic problem and it’s not limited to Facebook,” says 




      Arvind Narayanan, 




       a computer scientist and assistant professor at Princeton University. The larger problem, he argues, is that the very business model of these companies is geared to privacy violation. We need to understand Google’s role in this.&lt;/p&gt; &lt;h6&gt;How Google harvests data&lt;/h6&gt; &lt;p&gt;Lawmakers and others have asked Facebook about so-called &lt;a href=&quot;https://www.wsj.com/articles/what-mark-zuckerberg-didnt-say-about-what-facebook-knows-about-you-1523726008&quot; class=&quot;icon none&quot;&gt;shadow profiles&lt;/a&gt;—data the company gathers on people without Facebook accounts. The company doesn’t use the term but does track nonusers.&lt;/p&gt; &lt;p&gt;It’s likely that Google has shadow profiles on at least as many people as Facebook does, says 




      Chandler Givens, 




       chief executive of &lt;a href=&quot;https://www.trackoff.com/en&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;TrackOff&lt;/a&gt;, which develops software to fight identity theft. Google allows everyone, whether they have a Google account or not, to &lt;a href=&quot;https://www.google.com/ads/preferences/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;opt out of its ad targeting. Yet&lt;/a&gt;, &lt;a href=&quot;https://www.wsj.com/articles/facebook-has-a-new-data-policyheres-the-short-version-1524230950&quot; class=&quot;icon none&quot;&gt;like Facebook&lt;/a&gt;, it continues to gather your data.&lt;/p&gt; 






       




       &lt;p&gt;Google Analytics is far and away the web’s most dominant analytics platform. Used on the sites of about &lt;a href=&quot;http://www.cardinalpath.com/web-analytics-vendors-market-share/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;half of the biggest companies in the U.S.&lt;/a&gt;, it has a total reach of &lt;a href=&quot;https://marketingland.com/as-google-analytics-turns-10-we-ask-how-many-websites-use-it-151892&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;30 million to 50 million sites&lt;/a&gt;. Google Analytics tracks you whether or not you are logged in.&lt;/p&gt; &lt;p&gt;Meanwhile, the &lt;a href=&quot;https://www.popsci.com/google-has-7-products-with-1-billion-users&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;billion-plus people&lt;/a&gt; who have Google accounts are tracked in even more ways. In 2016, Google &lt;a href=&quot;https://www.propublica.org/article/google-has-quietly-dropped-ban-on-personally-identifiable-web-tracking&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;changed its terms of service&lt;/a&gt;, allowing it to merge its trove of tracking and advertising data with the personally identifiable information from our Google accounts.&lt;/p&gt; &lt;p&gt;Google &lt;a href=&quot;https://support.google.com/ads/answer/7029660&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;uses&lt;/a&gt;, among other things, our browsing and search history, apps we’ve installed, demographics such as age and gender and, from its own analytics and other sources, where we’ve shopped in the real world. Google says it doesn’t use information from “&lt;a href=&quot;https://support.google.com/adsense/troubleshooter/1631343&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;sensitive categories&lt;/a&gt;” such as race, religion, sexual orientation or health. Because it relies on &lt;a href=&quot;https://marketingland.com/google-cross-device-remarketing-launches-192819&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;cross-device tracking&lt;/a&gt;, it can spot logged-in users no matter which device they’re on.&lt;/p&gt; &lt;p&gt;This is why Google and Facebook are dominant in online advertising. By pouring huge amounts of our personal data into the latest artificial-intelligence technology, they can determine who—&lt;a href=&quot;https://support.google.com/adwords/answer/1722043?hl=en&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;and where&lt;/a&gt;—we really are, whether or not we reveal ourselves voluntarily.&lt;/p&gt; &lt;p&gt;Google fuels even more data harvesting through its dominant ad marketplaces. There are &lt;a href=&quot;http://www.newsweek.com/secretive-world-selling-data-about-you-464789&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;as many as 4,000 data brokers&lt;/a&gt; in the U.S., and collectively they know everything about us &lt;a href=&quot;https://www.propublica.org/article/everything-we-know-about-what-data-brokers-know-about-you&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;we might otherwise prefer they didn’t&lt;/a&gt;—whether we’re pregnant, divorced or trying to lose weight. Google works with some of these brokers directly but the company says it vets them to prevent targeting based on sensitive information.&lt;/p&gt; 






       




       &lt;p&gt;While data brokers can sell this information to insurers, employers and &lt;a href=&quot;https://www.theatlantic.com/technology/archive/2017/06/online-data-brokers/529281/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;anyone else who might be interested&lt;/a&gt;, many of their customers are marketers who need another component: Google’s AI, which delivers “look alike” audiences—people similar to the ones found in the brokers’ data.&lt;/p&gt; &lt;h6&gt;How Android funnels data&lt;/h6&gt; &lt;p&gt;Google also is the biggest enabler of data harvesting, through the world’s &lt;a href=&quot;https://www.blog.google/products/android/2bn-milestone/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;two billion active Android mobile devices&lt;/a&gt;. Because Google’s Android OS helps companies gather data on us, then Google is also partly to blame when troves of that data are later used improperly, says 




      Woodrow Hartzog, 




       a professor of law and computer science at Northeastern University.&lt;/p&gt; &lt;p&gt;A good example of this is the way Facebook has continuously harvested Android users’ call and text history. Facebook never got this level of access from 






            &lt;a href=&quot;http://quotes.wsj.com/AAPL&quot;&gt;Apple&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.’s&lt;/span&gt;


       iPhone, whose operating system is designed to permit less under-the-hood data collection. Android OS often allows apps to request rich data from users without accompanying warnings about how the data might be used.&lt;/p&gt; &lt;p&gt;To be listed in Google’s Android app store, developers must agree to request only the information they need. But that doesn’t stop them from using “needed” data for additional purposes.&lt;/p&gt; &lt;p&gt;Designers call the ways marketers and developers cajole and mislead us into giving up our data “&lt;a href=&quot;https://darkpatterns.org/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;dark patterns&lt;/a&gt;,” tactics that exploit flaws and limits in our cognition.&lt;/p&gt; &lt;p&gt;Google bans what it calls deceptive requests for user data, such as obscuring opt-out buttons. At issue is whether Google goes far enough. But Google itself uses what are arguably dark patterns to get people to switch to its own apps for things such as email and web browsing. &lt;/p&gt; &lt;p&gt;Android users of the Gmail app will be asked to enable access to the device’s camera and microphone again and again until they say yes. Similarly, on Android, Google Maps asks users to turn on location services—justifiable, sure, but this enables geo-targeted ads.&lt;/p&gt; &lt;p&gt;All of this is ostensibly done with your permission. But it’s hard to understand how even an expert could give meaningful informed consent to the average data request, says Dr. Narayanan.&lt;/p&gt; &lt;p&gt;New European Union privacy rules are forcing companies to make &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-04-20/uber-paypal-face-reckoning-over-opaque-terms-and-conditions&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;comprehensible to mere mortals&lt;/a&gt; what data they gather and how they use it. But in many cases, Google is pushing responsibility for obtaining data-gathering permissions &lt;a href=&quot;https://www.wsj.com/articles/google-wants-publishers-to-get-users-consent-on-its-behalf-to-comply-with-eu-privacy-law-1521749003&quot; class=&quot;icon none&quot;&gt;to advertisers&lt;/a&gt;.&lt;/p&gt; &lt;h6&gt;Will Google take responsibility?&lt;/h6&gt; &lt;p&gt;It isn’t as if Google is unaware of the issues inherent in its business model. The company opposes the &lt;a href=&quot;https://www.caprivacy.org/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;California Consumer Privacy Act&lt;/a&gt;, a November ballot measure, on the grounds that it is vague and unworkable. It would grant consumers three basic protections: “the right to tell a business not to share or sell your personal information, the right to know where and to whom your data is being sold or shared, and the right to know that your service providers are protecting your information.” Even Facebook &lt;a href=&quot;http://variety.com/2018/digital/news/facebook-california-privacy-legislation-1202751054/&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;dropped its opposition to this act&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The solution might be simple: Build better tools to give us a clear understanding of what we’re opting into. If given clear choices, many people might be fine with their data being collected. But it’s just as likely they would refuse, in ways that could affect Google’s bottom line.&lt;/p&gt; &lt;p&gt; &lt;strong&gt;Write to &lt;/strong&gt;Christopher Mims at &lt;a href=&quot;mailto:christopher.mims@wsj.com&quot; target=&quot;_blank&quot; class=&quot;icon &quot;&gt;christopher.mims@wsj.com&lt;/a&gt;&lt;/p&gt;






      &lt;/div&gt;






    &lt;p class=&quot;printheadline&quot;&gt;
      Appeared in the April 23, 2018, print edition as 'Google’s Practices Threaten Privacy, Too.'
    &lt;/p&gt;




</description>
<pubDate>Mon, 23 Apr 2018 14:30:01 +0000</pubDate>
<dc:creator>j32fun</dc:creator>
<og:title>Who Has More of Your Personal Data Than Facebook? Try Google </og:title>
<og:description>Google’s data-gathering empire is bigger and more pervasive than Facebook’s—and while it hasn’t been plagued by scandal, it can’t evade scrutiny forever.</og:description>
<og:url>https://www.wsj.com/articles/who-has-more-of-your-personal-data-than-facebook-try-google-1524398401</og:url>
<og:image>https://images.wsj.net/im-7805/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/who-has-more-of-your-personal-data-than-facebook-try-google-1524398401</dc:identifier>
</item>
<item>
<title>Underestimating the mind-warping potential of fake video</title>
<link>https://www.vox.com/science-and-health/2018/4/20/17109764/deepfake-ai-false-memory-psychology</link>
<guid isPermaLink="true" >https://www.vox.com/science-and-health/2018/4/20/17109764/deepfake-ai-false-memory-psychology</guid>
<description>&lt;p id=&quot;XVtiLv&quot;&gt;Seeing is believing. And because of this fact, we’re screwed.&lt;/p&gt;
&lt;p id=&quot;1zTYJ9&quot;&gt;Due to advances in artificial intelligence, it’s now possible to convincingly map anyone’s face onto the body of another person in a video. As Vox’s Aja Romano has &lt;a href=&quot;https://www.vox.com/2018/1/31/16932264/reddit-celebrity-porn-face-swapping-dystopia&quot;&gt;explained&lt;/a&gt;, this technique is becoming more common in pornography: An actress’s head can be mapped onto a porn actress’s body. These “deepfakes” can be generated with &lt;a href=&quot;https://www.fakeapp.org/&quot;&gt;free software,&lt;/a&gt; and they’re different from the photoshopping of the past. This is live action — and uncannily real.&lt;/p&gt;
&lt;p id=&quot;AAqzIs&quot;&gt;Last week, BuzzFeed &lt;a href=&quot;https://www.buzzfeed.com/craigsilverman/obama-jordan-peele-deepfake-video-debunk-buzzfeed?utm_term=.qq88BoAMM8#.pd3BP1EyyB&quot;&gt;published&lt;/a&gt; a demonstration featuring the actor and director Jordan Peele. Using &lt;a href=&quot;https://www.fakeapp.org/&quot;&gt;FakeApp&lt;/a&gt;, the same tool used in the celebrity face-swapping porn, BuzzFeed took an old video of President Obama and swapped in Peele’s mouth as he performed an impression of Obama. It’s a creepily &lt;a href=&quot;https://www.vox.com/2018/4/18/17252410/jordan-peele-obama-deepfake-buzzfeed?utm_campaign=ajaromano&amp;amp;utm_content=chorus&amp;amp;utm_medium=social&amp;amp;utm_source=twitter&quot;&gt;powerful PSA&lt;/a&gt; with a forceful message: “This is a dangerous time. Moving forward, we need to be more vigilant with what we trust from the internet.”&lt;/p&gt;

&lt;p id=&quot;P4VO3a&quot;&gt;(Here’s another disturbing &lt;a href=&quot;https://spectrum.ieee.org/tech-talk/robotics/artificial-intelligence/ai-creates-fake-obama&quot;&gt;example&lt;/a&gt; from the University of Washington.)&lt;/p&gt;
&lt;p id=&quot;SOeJ7E&quot;&gt;Combine fake audio with fake video and it’s not hard to imagine a future where forged videos are maddeningly hard to distinguish from the truth. Or a future where a fake video of a president &lt;a href=&quot;https://www.buzzfeed.com/charliewarzel/the-terrifying-future-of-fake-news?utm_term=.feWkrAPWWk#.nqNAkL0NNA&quot;&gt;incites a riot&lt;/a&gt; or fells the market. “We’re not so far from the collapse of reality,” as Franklin Foer recently &lt;a href=&quot;https://www.theatlantic.com/magazine/archive/2018/05/realitys-end/556877/&quot;&gt;summed up&lt;/a&gt; at the Atlantic.&lt;/p&gt;
&lt;p id=&quot;nIWIcQ&quot;&gt;But I fear it’s not just our present and future reality that could collapse; it’s also our past. Fake media could manipulate what we remember, effectively altering the past by seeding the population with false memories.&lt;/p&gt;
&lt;p id=&quot;KmMy47&quot;&gt;“The potential for abuse is so severe,” says &lt;a href=&quot;https://faculty.sites.uci.edu/eloftus/&quot;&gt;Elizabeth Loftus&lt;/a&gt; at the University of California Irvine, who pioneered much of the research in false memory formation in the 1990s. “Once you expose people to such a powerful visual presentation, how do they get it out of their minds?”&lt;/p&gt;
&lt;p id=&quot;38qlgk&quot;&gt;We don’t have psychological studies directly looking at the ability of AI-faked video to implant false memories. But researchers have been studying the malleability of our memories for decades.&lt;/p&gt;
&lt;p id=&quot;CoX7Wd&quot;&gt;Here’s what they know: The human mind is incredibly susceptible to forming false memories. And that tendency can be kicked into overdrive on the internet, where false ideas &lt;a href=&quot;http://psych.wustl.edu/memory/Roddy%20article%20PDF's/Roediger%20et%20al%20(2001)_PBR.pdf&quot;&gt;spread like viruses&lt;/a&gt; among like-minded people. Which means the AI-enhanced forgeries on the horizon will only make planting false memories even easier.&lt;/p&gt;
&lt;h3 id=&quot;BcR0PN&quot;&gt;How a faked photo rewrites our memory&lt;/h3&gt;
&lt;p id=&quot;tutrHu&quot;&gt;Do you remember this image? It’s of former President Barack Obama shaking hands with Mahmoud Ahmadinejad, the former president of Iran.&lt;/p&gt;
&lt;p id=&quot;AapWXB&quot;&gt;I hope you do not remember this photo, because it never happened. It’s photoshopped.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/rNuFiLyRYpSO2ysyhulLOcwSCHU=/0x0:572x401/320x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 320w, https://cdn.vox-cdn.com/thumbor/h-1eOfDHclhGiTkAp36b6y_HY68=/0x0:572x401/520x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 520w, https://cdn.vox-cdn.com/thumbor/0Z21CBOeAH3r6ufnJ8wChPh9Nyc=/0x0:572x401/720x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 720w, https://cdn.vox-cdn.com/thumbor/nmmZM0hJ4Li1v3Pnc5vCFzXh2oc=/0x0:572x401/920x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 920w, https://cdn.vox-cdn.com/thumbor/2VO6g7IvSaQWf4hex7CYkNt-ya8=/0x0:572x401/1120x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 1120w, https://cdn.vox-cdn.com/thumbor/Rep5STrdNInQm-Owh2ZvFbpjjtM=/0x0:572x401/1320x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 1320w, https://cdn.vox-cdn.com/thumbor/pIiUY3Vrm9rYA_SFwl5HzX5oUHw=/0x0:572x401/1520x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 1520w, https://cdn.vox-cdn.com/thumbor/f0cR6jfZ-u5CVoYXiiuMX12ZLY8=/0x0:572x401/1720x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 1720w, https://cdn.vox-cdn.com/thumbor/KHzMUVpDWhk6kPtCQ3T1nOvv8Kg=/0x0:572x401/1920x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/A7AyVkF08LtfWyp8q5GoD3pzWxw=/0x0:572x401/1200x0/filters:focal(0x0:572x401)/cdn.vox-cdn.com/uploads/chorus_asset/file/10667693/Screen_Shot_2018_04_17_at_11.38.56_AM.png&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;&lt;cite&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/journal/00221031&quot;&gt;&lt;em&gt;Journal of Experimental Social Psychology&lt;/em&gt;&lt;/a&gt;&lt;/cite&gt;&lt;/span&gt;
&lt;p id=&quot;lEJsNP&quot;&gt;Yet &lt;a href=&quot;http://www.slate.com/articles/health_and_science/the_memory_doctor/2010/05/the_ministry_of_truth.html&quot;&gt;in 2010&lt;/a&gt;, when Slate asked about 1,000 of its readers whether they remembered seeing the photo, around 21 percent said yes. Another 25 percent said they remembered that the event happened but couldn’t recall specifically seeing the photo.&lt;/p&gt;
&lt;p id=&quot;HbkSVE&quot;&gt;Slate also gave its readers some space to write out their feelings about the photo. “I thought Obama was correct, snubbing Ahmadinejad so blatantly would have been a mistake,” one reader &lt;a href=&quot;https://web.archive.org/web/20121112021659/http://www.slate.com/sidebars/2010/05/memories_of_things_unseen.html&quot;&gt;wrote&lt;/a&gt;, recalling a feeling that certainly never occurred to him.&lt;/p&gt;
&lt;p id=&quot;GcqxsH&quot;&gt;Inspired by Loftus’s work, Slate’s William Saletan had created a quiz that presented readers with a mix of photos from real events plus one of five randomly selected fake events.&lt;/p&gt;
&lt;p id=&quot;8TQlB5&quot;&gt;One of the fabricated photos showed Sen. Joseph Lieberman voting “guilty” during President Bill Clinton’s impeachment proceedings (Lieberman voted “not guilty”). Another showed President Bush on vacation with baseball player Roger Clemens during the Hurricane Katrina disaster. (Bush &lt;a href=&quot;https://www.usnews.com/news/the-report/articles/2015/08/28/hurricane-katrina-was-the-beginning-of-the-end-for-george-w-bush&quot;&gt;spent a chunk&lt;/a&gt; of time after Katrina hit at his ranch in Crawford, Texas — but not with any baseball players.)&lt;/p&gt;
&lt;p id=&quot;kkUTzp&quot;&gt;Each faked photo provoked fake memories in at least 15 percent of the respondents. And overall, 50 percent of participants reported they believed the event depicted in the false photo happened. Slate’s project drew the attention of Steven Frenda, a Cal State Los Angeles psychologist who often collaborates with Loftus. Frenda and colleagues took Slate’s data and analyzed it further.&lt;/p&gt;
&lt;p id=&quot;ADErBI&quot;&gt;Here’s what they found: People were more likely to say they remember a faked photo when it fit with their political worldview.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/OFYTk_nGTFHS4UG4z-MRg148asg=/0x0:1002x394/320x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 320w, https://cdn.vox-cdn.com/thumbor/3aAGJ9InuerIEX-5FDdS3kyAZBs=/0x0:1002x394/520x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 520w, https://cdn.vox-cdn.com/thumbor/iZLwizHLbkN_m6cGu2FIcgkPRAg=/0x0:1002x394/720x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 720w, https://cdn.vox-cdn.com/thumbor/arkMlYMk2kh6BVpLyAsSJXVBWYQ=/0x0:1002x394/920x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 920w, https://cdn.vox-cdn.com/thumbor/yd9QkvMsAm4OqEKNo-yQGbAlTGc=/0x0:1002x394/1120x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 1120w, https://cdn.vox-cdn.com/thumbor/93WdpPw3AGDskbAmvaTIpIQg0uQ=/0x0:1002x394/1320x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 1320w, https://cdn.vox-cdn.com/thumbor/OaqsVssrP-m-VgI6AYvbfYRsvYI=/0x0:1002x394/1520x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 1520w, https://cdn.vox-cdn.com/thumbor/CSEY82GEyoz_3oxSOcuJogwMWMs=/0x0:1002x394/1720x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 1720w, https://cdn.vox-cdn.com/thumbor/jybKrSWgnULvYzFjCF6hMmSs9gA=/0x0:1002x394/1920x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/dG3TnZToV9AXrHr2V7LMeBNOX8g=/0x0:1002x394/1200x0/filters:focal(0x0:1002x394)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674019/falsemem.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;&lt;cite&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/journal/00221031&quot;&gt;&lt;em&gt;Journal of Experimental Social Psychology&lt;/em&gt;&lt;/a&gt;&lt;/cite&gt;&lt;/span&gt;
&lt;p id=&quot;y4Ndns&quot;&gt;“Conservatives were more inclined to believe that Obama had greeted this hostile foreign leader,” Frenda says. And liberals were more likely to recall Bush cavorting with Clemons. “When people encounter events that are complimentary with their political beliefs or preferences, they’re more likely to mistakenly believe those events really happened,” he says.&lt;/p&gt;
&lt;p id=&quot;zB6OKF&quot;&gt;Think about what this means. Doctored photos can change the way we remember history. And not just our memories for facts, but possibly even our recollections of what we saw with our own eyes. It means that bad actors may be able to prey on our political biases to change our understanding of world events. And remember, these were Slate readers, who are presumably people who like to keep up with current events.&lt;/p&gt;
&lt;p id=&quot;b8h6FZ&quot;&gt;Even if people were lying on the survey in order to seem intelligent, the photos could still implant itself in memory. “When people lie or stretch the truth, sometimes that itself distorts their memory,” Frenda says. “So they will sometimes incorporate their lies or exaggerations into what it is to what they think they genuinely remember.”&lt;/p&gt;
&lt;p id=&quot;QfqAiE&quot;&gt;Frenda and his colleagues published this conclusion in 2013 in the &lt;a href=&quot;https://www.sciencedirect.com/science/journal/00221031&quot;&gt;&lt;em&gt;Journal of Experimental Social Psychology&lt;/em&gt;&lt;/a&gt;. And this topic — false memories for political events — hasn’t been directly followed up in the academic literature (though a 2010 &lt;a href=&quot;https://pdfs.semanticscholar.org/3209/5d0268a496cf308870a806934f5fdf745ad1.pdf&quot;&gt;paper&lt;/a&gt; did find similar results). But this finding checks out with what we know about political psychology: We’re more likely to remember facts that support our teams.&lt;/p&gt;
&lt;p id=&quot;dQ8cce&quot;&gt;“Back in 2013,” Frenda says, “the potential for misusing [or] digitally doctoring images, and now videos,” was not that hot of a topic. Now, “there are a lot of things to worry about.” And there are reasons to believe that the false videos will be an even more powerful way to change how we remember the past.&lt;/p&gt;
&lt;h3 id=&quot;Jf2yVm&quot;&gt;Why we form false memories, and how&lt;/h3&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/vC4VbsAnRgAZmjrQumRrHq6ZSJk=/0x0:2897x2897/320x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 320w, https://cdn.vox-cdn.com/thumbor/D6sL_quLbfMoUqx6VMwSdVbmHsE=/0x0:2897x2897/520x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 520w, https://cdn.vox-cdn.com/thumbor/cVpY5aFpEKT1mq6Ti8IJfTBaRmE=/0x0:2897x2897/720x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 720w, https://cdn.vox-cdn.com/thumbor/du1tezjla-L8wf67COmK3cd_MKo=/0x0:2897x2897/920x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 920w, https://cdn.vox-cdn.com/thumbor/rK3aIu1717Q9tGzXVjvfpIoe_u8=/0x0:2897x2897/1120x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 1120w, https://cdn.vox-cdn.com/thumbor/8ch0Q0UCsENZk8YJANTqUdj7lPE=/0x0:2897x2897/1320x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 1320w, https://cdn.vox-cdn.com/thumbor/UI9mXrvk1T1aQ6EWLcKdE8xdDkk=/0x0:2897x2897/1520x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 1520w, https://cdn.vox-cdn.com/thumbor/4kN3ObUY-mZGKmosn_Jw2FKEODM=/0x0:2897x2897/1720x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 1720w, https://cdn.vox-cdn.com/thumbor/oQwIp5R45fOaHwre3xwQecPmQlY=/0x0:2897x2897/1920x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/R8YbjwxAK5qFEhmfuffbRZFwgeI=/0x0:2897x2897/1200x0/filters:focal(0x0:2897x2897)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674627/GettyImages_603718789.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;We think memory works like a film reel. It doesn’t. &lt;cite&gt;Getty Images/EyeEm&lt;/cite&gt;&lt;/span&gt;
&lt;p id=&quot;RiwHvZ&quot;&gt;Human memory does not function like a videotape or a digital recording. When we remember, we don’t wind back our minds to a moment in time and relive that exact moment.&lt;/p&gt;
&lt;p id=&quot;rMsYUH&quot;&gt;Instead, memory is constructed.&lt;/p&gt;
&lt;p id=&quot;Yp4uli&quot;&gt;This is a tricky thing to understand. When we call on a memory, we have to piece it back together from disparate pieces of information that exist in our minds. Some of what ends up in our recollection is the truth. But there’s a laziness to our recollections. In reconstructing our memories, our brains often grab the easiest bit of information to recall. And information that we’ve learned since the event will be added to fill in memory gaps.&lt;/p&gt;
&lt;p id=&quot;WYl1mW&quot;&gt;Our memory is not like a videotape. A more helpful metaphor is that it’s like a video editor working on a millisecond deadline. In its mad rush, the editor splices in bits of truth with whatever filler is handy. And what’s handy is often our biases, or new information altogether.&lt;/p&gt;
&lt;p id=&quot;HQkmur&quot;&gt;That’s why mere suggestions like being told cars “smashed” instead of “hit” after viewing video of a car accident will lead &lt;a href=&quot;https://webfiles.uci.edu/eloftus/LoftusPalmer74.pdf&quot;&gt;people to recall&lt;/a&gt; the accident being more severe than it was. Or why our memories for feelings of significant historical events — like the &lt;a href=&quot;https://pdfs.semanticscholar.org/983c/a7cfdf2ad66e5d6414813983be090f9e15f2.pdf&quot;&gt;O.J. Simpson murder trial&lt;/a&gt; — tend to reflect what we think today rather than what we felt back then. Just the process of remembering one thing &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S0079742114000061&quot;&gt;can cause us to forget another&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;EjQVKY&quot;&gt;Familiarity is critical too. The more familiar we are with an idea, the more likely it is to get inserted into our memories as the truth. Studies find the more &lt;a href=&quot;https://www.vox.com/science-and-health/2017/10/5/16410912/illusory-truth-fake-news-las-vegas-google-facebook&quot;&gt;often a lie is repeated, the more likely it is to be misremembered&lt;/a&gt;. And we tend to forget the source of a piece of information, Frenda explains. After seeing a falsified story from a not-credible news outlet online, it’s possible to later “misremember that you actually saw it on CNN,” he says.&lt;/p&gt;
&lt;h3 id=&quot;jQE94F&quot;&gt;We can misremember whole events that never happened&lt;/h3&gt;
&lt;p id=&quot;Eazi0p&quot;&gt;False memories don’t just fudge the fine details. It’s also possible to falsely remember whole events.&lt;/p&gt;
&lt;p id=&quot;mceXpB&quot;&gt;That happened in the Slate survey. But researchers have also found that it can happen in studies where the false information is from a trusted source. We trust family, and faked letters from relatives can lead people to believe they were once &lt;a href=&quot;https://www.spring.org.uk/2008/02/implanting-false-memories-lost-in-mall.php&quot;&gt;lost in a mall as a child&lt;/a&gt; or &lt;a href=&quot;http://journals.sagepub.com/doi/abs/10.1177/0956797614562862&quot;&gt;that they committed a crime&lt;/a&gt; when they were younger. And we trust photos: Experiments that use altered photos to implant memories tend to be more effective &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5248593/&quot;&gt;than those that do not.&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;csuAjR&quot;&gt;Here’s what’s really frustrating: We’re confident in our misrememberings. “Once we’ve updated memories, we don’t remember that we’ve done that,” Linda Levine, a University of California, Irvine psychologist who studies memory and emotion. “We have the illusion that we remember things as they happened.”&lt;/p&gt;
&lt;p id=&quot;Lwh9rm&quot;&gt;We’re biased for a sense of continuity, despite the fact that our memories are changing all the time. The video editor in our brains seals the seams up quietly.&lt;/p&gt;
&lt;p id=&quot;MVxG6Z&quot;&gt;That’s true for even the most intense events in memory. In the days after 9/11, psychological researchers &lt;a href=&quot;http://scholar.harvard.edu/files/schacterlab/files/hirst_etal_jepgeneral_2015.pdf&quot;&gt;interviewed&lt;/a&gt; thousands of people across the country, asking them simple questions like, “Where were you when it happened?” and then followed up over 10 years. Even as the participants’ memories for the day shifted, as the details they remembered changed, they still remained extremely confident they were remembering the truth.&lt;/p&gt;
&lt;p id=&quot;vpHh3V&quot;&gt;Today, the scientific &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5248593/&quot;&gt;debate&lt;/a&gt; on this topic is around &lt;a href=&quot;https://digest.bps.org.uk/2018/02/15/psychologists-clash-over-how-easy-it-is-to-implant-false-memories-of-committing-a-crime/&quot;&gt;how prevalent&lt;/a&gt; false &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5248593/&quot;&gt;memory formation is&lt;/a&gt; (critics charge that reports of fully implanting a false childhood memory are overinflated), and how to more precisely define memory.&lt;/p&gt;
&lt;p id=&quot;u6KzOs&quot;&gt;And researchers propose a few reasons why evolution has favored us to have such malleable memories. One is that it allows us to be creative. We can imagine what the future might look like by merging memories with new information. Another is that saves us effort. We don’t need to remember every detail in our lives.&lt;/p&gt;
&lt;p id=&quot;X9AcyA&quot;&gt;A third hypothesis highlights the danger of false memories in these polarized times: They help us form a cohesive sense of reality with our groups.&lt;/p&gt;
&lt;p id=&quot;DTFVYL&quot;&gt;Bill Hirst studies collective memory at the New School. His work explains how the process of talking to one another causes us to selectively remember, forget, and create a false collective narrative.&lt;/p&gt;
&lt;p id=&quot;sS0QD5&quot;&gt;“All of these [memory] distortions allow us to craft a shared representation of the past,” Hirst says. “And because you and I both have a shared representation of the past, it leads to a common view that reinforces a collective identity.”&lt;/p&gt;
&lt;h3 id=&quot;JBPQxH&quot;&gt;Social media is fertile ground for us to acquire truly bizarre false memories. Consider the case of the &lt;em&gt;Shazaam&lt;/em&gt; truthers.&lt;/h3&gt;
&lt;p id=&quot;4pMcsK&quot;&gt;We also have the power to influence each other’s memories and construct new versions of reality as we go.&lt;/p&gt;
&lt;p id=&quot;CsVz1N&quot;&gt;In 2016, the New Statesman magazine &lt;a href=&quot;http://www.newstatesman.com/science-tech/internet/2016/12/movie-doesn-t-exist-and-redditors-who-think-it-does&quot;&gt;published&lt;/a&gt; a feature about a community of Reddit users who are fans of a movie from the 1990s starring the comedian Sinbad (remember him?). The movie is called &lt;em&gt;Shazaam&lt;/em&gt;, and Sinbad plays a bumbling genie who adventures with two small kids.&lt;/p&gt;
&lt;p id=&quot;mNSCGh&quot;&gt;The piece, however, was not the typical essay on ’90s pop culture nostalgia. It turns out that the movie &lt;em&gt;Shazaam&lt;/em&gt; never existed, and yet many of the people New Statesmen writer Amelia Tait spoke to could not be convinced otherwise. And they were genuinely upset the movie didn’t exist. “It feels like a part of my childhood has now been stolen from me,” one believer told her. (And these people insist they’re not simply misremembering the movie &lt;a href=&quot;https://en.wikipedia.org/wiki/Kazaam&quot;&gt;Kazaam&lt;/a&gt;, which starred Shaquille O’Neal in the role of a genie.)&lt;/p&gt;
&lt;p id=&quot;RGWkoj&quot;&gt;Here’s one possible reason these redditors believed in the movie so intensely: the Reddit forum itself. Social media brought together like-minded people. “Any type of corroboration is going to strengthen your memory for something, whether it’s true or not, and your confidence in your memory,” Frenda says. These &lt;em&gt;Shazaam&lt;/em&gt; truthers were all riffing off one another, giving each other subtle suggestions to form a false narrative that exists in their minds.&lt;/p&gt;
&lt;p id=&quot;p1Van5&quot;&gt;It’s a clear of example of how, in an ever-polarizing world, we’re increasingly telling different stories from our neighbors because we’re plugged into separate feeds of information.&lt;/p&gt;
&lt;h3 id=&quot;5MdLNy&quot;&gt;Fake video is even scarier than doctored photos&lt;/h3&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/t8MRT1nhQ9Uv-7is30gXQCCjSMk=/0x0:4210x2796/320x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 320w, https://cdn.vox-cdn.com/thumbor/ls9SN5HHZb1dPibfv0MvX-WnhtY=/0x0:4210x2796/520x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 520w, https://cdn.vox-cdn.com/thumbor/nPxG1if9hkMR_RoV-V4C3d8bHQ8=/0x0:4210x2796/720x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 720w, https://cdn.vox-cdn.com/thumbor/mq8m30ov42d6L4cFg3zC5X7kYLU=/0x0:4210x2796/920x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 920w, https://cdn.vox-cdn.com/thumbor/iwit2U2wwLbdv_i8_kd7UgsWyGs=/0x0:4210x2796/1120x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 1120w, https://cdn.vox-cdn.com/thumbor/JavskFJhuOB39_sIZfigbSIOykw=/0x0:4210x2796/1320x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 1320w, https://cdn.vox-cdn.com/thumbor/N1FgjB4s4Mm5snrbP82R9MuuXkY=/0x0:4210x2796/1520x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 1520w, https://cdn.vox-cdn.com/thumbor/oCUd4VvnEEVRg0puenT-D3q4X_I=/0x0:4210x2796/1720x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 1720w, https://cdn.vox-cdn.com/thumbor/B1jmrJP9urk7wNuAdWNN_rdR8i0=/0x0:4210x2796/1920x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/RTkuWgfJXiqKRf0IWyNd1zStI_c=/0x0:4210x2796/1200x0/filters:focal(0x0:4210x2796)/cdn.vox-cdn.com/uploads/chorus_asset/file/10674615/GettyImages_155287898.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;e-image__meta&quot;&gt;&lt;cite&gt;nikamata/Getty Images&lt;/cite&gt;&lt;/span&gt;
&lt;p id=&quot;yR9XJp&quot;&gt;Let’s put this all together. False memories fester when they make sense to our political worldview, when it’s familiar and repeated ad nauseam, when we trust the source of the information, and when this information is corroborated, shared, and discussed by like-minded people.&lt;/p&gt;
&lt;p id=&quot;offzTY&quot;&gt;Where else do all these things happen? Social media. Fake stories tend to &lt;a href=&quot;https://www.vox.com/science-and-health/2018/3/8/17085928/fake-news-study-mit-science&quot;&gt;move more quickly to people&lt;/a&gt; on these platforms than the truth, fueled by surprise and bias.&lt;/p&gt;
&lt;p id=&quot;0HVMYk&quot;&gt;And so what happens when doctored audio and video get added to the mix? (Shudders.)&lt;/p&gt;
&lt;p id=&quot;LpN6Ge&quot;&gt;Most of the studies on false memories were conducted with faked photos or written documents. Since it’s so new, no one has studied the effect of deepfake video yet, but Levine and Loftus suspect it will be even more compelling. “Here that person is, in the midst of that situation, saying and doing these things,” Levine said. If the video is seamless, that’s going to be convincing. And “it’s legitimately worrisome,” she says.&lt;/p&gt;
&lt;p id=&quot;Evtanb&quot;&gt;Loftus agrees: “Having the [faked] video, and the richness of it, is just going to exacerbate the false memory potential,” she says.&lt;/p&gt;
&lt;h3 id=&quot;wp8y7X&quot;&gt;The “collapse of reality” isn’t predestined. But there’s good reason to feel uneasy.&lt;/h3&gt;
&lt;p id=&quot;hCVNin&quot;&gt;We do not yet know how to inoculate people against forming false memories. In fact, it doesn’t seem like any human is immune to forming them. And all around us, the seeds of false reminiscence are being sewn.&lt;/p&gt;
&lt;p id=&quot;lDptVo&quot;&gt;A recent poll found 44 &lt;a href=&quot;https://www.vox.com/2017/12/27/16822748/republicans-trump-repeal-obamacare&quot;&gt;percent&lt;/a&gt; of Republicans believe President Trump repealed Obamacare. That might be because the legislation was confusing to follow as it ping-ponged through Congress. Or because there’s some truth in that &lt;a href=&quot;https://www.vox.com/policy-and-politics/2018/3/7/17090800/trump-obamacare-fix-bill-congress&quot;&gt;parts of the health care law&lt;/a&gt; have been weakened. Or because Republicans increasingly &lt;a href=&quot;https://www.vox.com/science-and-health/2018/4/11/16897062/political-psychology-trump-explain-studies-research-science-motivated-reasoning-bias-fake-news&quot;&gt;don’t trust the media&lt;/a&gt;. Whatever the reason, know this: The repeal didn’t happen.&lt;/p&gt;
&lt;p id=&quot;9qiypY&quot;&gt;But what happens when, in the future, there’s a video of Trump signing a fake Obamacare fake repeal? Or a fake clip of a CNN anchor announcing the breaking news of the repeal? And these fake clips prove impossible to eliminate from the web?&lt;/p&gt;
&lt;p id=&quot;uvSjro&quot;&gt;The imaginary dystopian scenarios are endless. Loftus has one of her own: a particularly corrupt police force doctoring a video of a suspect confessing to a crime. In those scenarios, she says, even the suspect might believe it. “I wish I could say something optimistic,” she says.&lt;/p&gt;
&lt;p id=&quot;fD553C&quot;&gt;But it’s still possible that our worst fears about this kind of “collapse of reality,” as Foer put it, may not come to pass.&lt;/p&gt;
&lt;p id=&quot;wySZwS&quot;&gt;It’s possible fake video and audio will not become sophisticated enough to have an impact. Perhaps people &lt;a href=&quot;https://www.buzzfeed.com/craigsilverman/obama-jordan-peele-deepfake-video-debunk-buzzfeed?utm_term=.qq88BoAMM8#.pd3BP1EyyB&quot;&gt;can learn to spot it&lt;/a&gt;. Or maybe someone can design algorithms to squash it. Perhaps the tech giants will become vigilant in banning these forgeries. Or maybe we’ll grow so accustomed to lies that we won’t believe anything — a concept technologist &lt;a href=&quot;https://twitter.com/metaviv?lang=en&quot;&gt;Aviv Ovadya&lt;/a&gt; &lt;a href=&quot;https://www.buzzfeed.com/charliewarzel/the-terrifying-future-of-fake-news?utm_term=.feWkrAPWWk#.nqNAkL0NNA&quot;&gt;described&lt;/a&gt; as “reality apathy” in an interview with BuzzFeed.&lt;/p&gt;
&lt;p id=&quot;d4l1HU&quot;&gt;We can hope that as much as our memories of the past diverge, there will always be historians getting the permanent record down straight.&lt;/p&gt;
&lt;p id=&quot;qhhTKr&quot;&gt;But I worry that as our &lt;a href=&quot;https://www.vox.com/science-and-health/2018/4/11/16897062/political-psychology-trump-explain-studies-research-science-motivated-reasoning-bias-fake-news&quot;&gt;country and our media fracture politically&lt;/a&gt;, the divergence in our memories and understanding of facts is also going to grow worse. In 40 years, will fewer of us agree on the facts of history?&lt;/p&gt;
&lt;h3 id=&quot;BCDgJN&quot;&gt;Further reading on the end of reality&lt;/h3&gt;
&lt;ul&gt;&lt;li id=&quot;We2KpA&quot;&gt;Not terrified enough? BuzzFeed’s Charlie Warzel &lt;a href=&quot;https://www.buzzfeed.com/charliewarzel/the-terrifying-future-of-fake-news?utm_term=.feWkrAPWWk#.nqNAkL0NNA&quot;&gt;outlines&lt;/a&gt; what the disinformation campaigns of the future could look like when they’re fueled by artificial intelligence.&lt;/li&gt;
&lt;li id=&quot;4gggtf&quot;&gt;Vox’s Aja Romano explained the rise of deepfakes, and the community &lt;a href=&quot;https://www.vox.com/2018/1/31/16932264/reddit-celebrity-porn-face-swapping-dystopia&quot;&gt;around them on Reddit&lt;/a&gt;. (&lt;em&gt;Today, Explained&lt;/em&gt; also produced a &lt;a href=&quot;https://www.vox.com/today-explained/2018/3/1/17068958/artificial-intelligence-deepfake-today-explained-podcast&quot;&gt;podcast episode&lt;/a&gt; on this topic.)&lt;/li&gt;
&lt;/ul&gt;

</description>
<pubDate>Mon, 23 Apr 2018 14:08:40 +0000</pubDate>
<dc:creator>anarbadalov</dc:creator>
<og:description>Doctored photos can easily create false memories. What happens when there’s fake video?</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/CJD_c4cfn0R5qY2UE5OuvGkK1ks=/0x195:1920x1200/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/10677131/fakeMemory3__1_.jpg</og:image>
<og:title>We’re underestimating the mind-warping potential of fake video</og:title>
<og:type>article</og:type>
<og:url>https://www.vox.com/science-and-health/2018/4/20/17109764/deepfake-ai-false-memory-psychology</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.vox.com/science-and-health/2018/4/20/17109764/deepfake-ai-false-memory-psychology</dc:identifier>
</item>
<item>
<title>Show HN: Giving a Broken Barcode Scanner a New Life with Elixir and Nerves</title>
<link>https://bcarrigan.com/2018/04/20/wunderscan/</link>
<guid isPermaLink="true" >https://bcarrigan.com/2018/04/20/wunderscan/</guid>
<description>&lt;p&gt;I didn’t actually plan this project, but rather it found me. I was at the Scrap Exchange, a local reuse center, when I found a very nice looking scanner that you might find at a grocery store kiosk. It had been ripped from its connectors and had unlabeled wires hanging from it; a bit of hardware gore if such a thing exists. It was labelled on sale for $6.25, and a quick search revealed that it originally retailed at over $500. I thought a great use of this would be to keep near our pantry so that when we are out of a spice or snack, we could just scan the item and it would get posted to our shopping list. I figured I would try to reverse engineer it, and if all else fails, scrap it for the laser and motor. This is a longer post that goes through the entire process, so strap in!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/scanner.jpg&quot; alt=&quot;Final Scanner Picture&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;reverse-engineering&quot;&gt;Reverse Engineering&lt;/h2&gt;
&lt;p&gt;I was able to locate the datasheet for the scanner and find that it uses an RS232 serial connection to send data, and that normally there would be a DB9 connector where the frayed ends were. Having no wiring diagram, I had to start by finding the power connections.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/reverse_1.jpg&quot; alt=&quot;Finding the Right Connections&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This part of reverse engineering is really more luck than anything. You run the risk of frying your part when you connect the power improperly. I set my power supply for 5V and tried the following things to find the power cables:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Using the BBROYGBVGW color scheme used for resistors to match wires to their DB9 pinouts. This did not work.&lt;/li&gt;
&lt;li&gt;Start trying wires based on likely color codes; for instance black and brown for ground, and red or orange for power. This wound up working, though who knows if it was for any of the logic that I thought. It turned out that orange was the 5V line and brown was ground.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Now that the part was powered and working, all that was left was finding the RS232 transmit line. I used my oscilloscope to do this part and found it by scanning items and looking for the signal. It was not long before this wire was found and I was able to receive UPC codes. The scanner simply sends the ASCII representation of the UPC code followed by the &lt;code&gt;\r\n&lt;/code&gt; characters. This would make parsing the messages easy.&lt;/p&gt;
&lt;h2 id=&quot;posting-to-wunderlist&quot;&gt;Posting to Wunderlist&lt;/h2&gt;
&lt;p&gt;My wife and I use Wunderlist for our grocery shopping, so the next step for this project was to figure out how to post the item information to a shared grocery list. This consists of two parts: converting the UPC number to an item name, such as “16 Oz Almonds” and then making a request to Wunderlist with this information.&lt;/p&gt;
&lt;h3 id=&quot;upc-lookup&quot;&gt;UPC Lookup&lt;/h3&gt;
&lt;p&gt;For UPC lookup, the &lt;a href=&quot;http://upcdatabase.org/&quot;&gt;UPC Database&lt;/a&gt; looked like the best choice since its free tier would work for a low lookup count and because you can add your own UPC labels for items they don’t have. The service is also very easy to use; simply sign up for an account, and then you can search using the following URL scheme:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;GET https://api.upcdatabase.org/product/:upc_code/:api_token
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will return a product or an error if none could be found.&lt;/p&gt;
&lt;h3 id=&quot;wunderlist-post&quot;&gt;Wunderlist Post&lt;/h3&gt;
&lt;p&gt;Next up was posting to Wunderlist. As with above, our first step is getting an API token. This can be done right in their developer web interface by creating a new application to use with Wunderlist and then creating an OAuth 2 token for your own account. Once you have an OAuth2 token and a client ID for your application, you can start making requests.&lt;/p&gt;
&lt;p&gt;In order to create an item, we first need to find the ID of the list that the item will be added to. We can do this using the following API point:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;GET https://a.wunderlist.com/api/v1/lists
  X-Access-Token: &amp;lt;your access token&amp;gt;
  X-Client-Id: &amp;lt;your client id&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This returns a list of lists, at which point you can find the one you want by searching through the results looking for the desired title. Grab the ID of the desired list, and then posts can be made using:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;POST https://a.wunderlist.com/api/v1/tasks
  X-Access-Token: &amp;lt;your access token&amp;gt;
  X-Client-Id: &amp;lt;your client id&amp;gt;
  Body: {
           &quot;list_id&quot;: &amp;lt;id from the last step&amp;gt;,
           &quot;title&quot;: &quot;&amp;lt;title from UPC lookup&amp;gt;&quot;
  }
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;feeding-our-pi&quot;&gt;Feeding our Pi&lt;/h2&gt;
&lt;p&gt;To tie this all together, we need a program that does the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Listens for UPC codes coming over the Serial connection.&lt;/li&gt;
&lt;li&gt;Upon receipt of a UPC code, query the UPC database as shown above.&lt;/li&gt;
&lt;li&gt;Once a product name (or error) is determined, post this to Wunderlist.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;While we could have potentially used a Particle or other low-power embedded device, I wanted to try out Elixir’s &lt;a href=&quot;https://nerves-project.org/&quot;&gt;Nerves&lt;/a&gt; project, a way to write embedded software using Elixir. So, a Raspberry Pi Zero W was chosen as the compute module so that the scanner could be placed anywhere in the house and still connect.&lt;/p&gt;
&lt;h3 id=&quot;building-the-hardware&quot;&gt;Building the Hardware&lt;/h3&gt;
&lt;p&gt;The hardware for this project was pretty simple: we feed 5V in through a barrel connector to the scanner and Raspberry Pi, then connect the Raspberry Pi to an MAX3232 level converter for the serial line conversion. This needs to happen because RS232 uses different voltages than the Raspberry Pi for its serial communication; see the oscilloscope screenshot below for the 3.3V serial signal versus the RS232 signal:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/oscope_serial.png&quot; alt=&quot;RS232 and TTL Levels&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;writing-the-software&quot;&gt;Writing the Software&lt;/h3&gt;
&lt;p&gt;The software side and working with Nerves in general I think deserves its own post. For this article, lets do a high level overview of the project and code. First, the code can be found at the following link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/carrigan/wunderscan&quot;&gt;Wunderscan Github Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will talk about the code in three sections: the project level, the supporting code, and the main loop.&lt;/p&gt;
&lt;h4 id=&quot;project-level&quot;&gt;Project Level&lt;/h4&gt;
&lt;p&gt;The project level is where we import the required libraries, setup system variables, and tell Nerves how to build our software. Unlike working with the standard Raspberry Pi environment with Raspbian and Python/C/C++ where you flash an operating system on your Raspberry Pi and then copy your program files over, Nerves builds a root image that boots into your application. You can even set your project up to allow SSH firmware pushes, allowing you to compile everything on your PC and push a new copy of the entire root system over SSH to your device. This takes all of the manual Raspberry Pi configuration out of the picture; all of the &lt;code&gt;sudo raspi-config&lt;/code&gt; commands, &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; placement, and manually changing files to set up your pi is replaced by the Nerves configuration. This is wonderful for setting up a new Raspberry Pi to run your application.&lt;/p&gt;
&lt;p&gt;One of my other favorite things about working with Nerves has been how you can feed your secrets into the software at compile time using the config files. Consider the following, where we pass in our API keys using environmental variables on the computer that is compiling the code:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-Elixir&quot;&gt;config :nerves_network, :default, wlan0: [
    ssid: System.get_env(&quot;NERVES_NETWORK_SSID&quot;),
    psk: System.get_env(&quot;NERVES_NETWORK_PSK&quot;),
    key_mgmt: String.to_atom(key_mgmt)
  ]

config :scanner,
  wunderlist_access_key: System.get_env(&quot;WUNDERLIST_ACCESS_KEY&quot;),
  wunderlist_client_id: System.get_env(&quot;WUNDERLIST_CLIENT_ID&quot;),
  upcdatabase_access_key: System.get_env(&quot;UPCDATABASE_ACCESS_KEY&quot;),
  list_name: &quot;Scanned Groceries&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In a normal Raspberry Pi project running Raspbian and your language of choice, you would likely need to manually SSH in and send the keys or manually type them in using the keyboard. With Nerves, simply compile them in and flash your image. Done.&lt;/p&gt;
&lt;h4 id=&quot;supporting-code&quot;&gt;Supporting Code&lt;/h4&gt;
&lt;p&gt;What I call the supporting code is simply some high level APIs written to abstract the UPC database queries and Wunderlist interactions. I used &lt;code&gt;HTTPoison&lt;/code&gt; to make the requests and &lt;code&gt;Poison&lt;/code&gt; to decode the JSON. As an example, the below code shows a request to find the ID of a list on Wunderlist given the title of the list.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-Elixir&quot;&gt;def find_list_id(title) do
  &quot;https://a.wunderlist.com/api/v1/lists&quot;
  |&amp;gt; HTTPoison.get(auth_headers())
  |&amp;gt; process_response(title)
end

def process_response({:ok, %HTTPoison.Response{body: body}}, title) do
  Poison.decode!(body)
  |&amp;gt; Enum.find(%{}, fn list_item -&amp;gt; Map.get(list_item, &quot;title&quot;) == title end)
  |&amp;gt; Map.fetch(&quot;id&quot;)
end

def process_response(error, _), do: error

defp auth_headers() do
  [
    &quot;X-Access-Token&quot;: Application.get_env(:scanner, :wunderlist_access_key),
    &quot;X-Client-Id&quot;: Application.get_env(:scanner, :wunderlist_client_id)
  ]
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Elixir, it is idiomatic to return a tuple or error code instead of raising errors. Thus, this API returns one of three ways:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;{:ok, &amp;lt;id&amp;gt;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{:error, %HTTPoison.Error{}}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:error&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This lets us match on the return in the calling code, making handling errors a natural part of program writing.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-Elixir&quot;&gt;response = Application.get_env(:scanner, :list_name)
  |&amp;gt; Scanner.WunderlistApi.find_list_id()

case response do
  {:ok, id} -&amp;gt; id
  {:error, error} -&amp;gt;
    Logger.error error.reason
    nil
  :error -&amp;gt;
    Logger.error &quot;Key not found&quot;
    nil
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;main-loop&quot;&gt;Main Loop&lt;/h4&gt;
&lt;p&gt;Unlike a &lt;code&gt;while&lt;/code&gt; loop or &lt;code&gt;for&lt;/code&gt; loop in other languages, Elixir and Erlang use processes which are supervised by the system for very high levels of system robustness. If a piece of python code crashes, the application will exit and you will likely need your operating system to restart it. If an Elixir process crashes, the supervisor will automatically restart the relevant processes without OS intervention. This makes the style of writing programs &lt;em&gt;very&lt;/em&gt; different, but its a style I’ve grown to really enjoy.&lt;/p&gt;
&lt;p&gt;For our main loop, we will be using Elixir’s &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;GenServer&lt;/a&gt; behavior to implement the steps shown above in the “Feeding Our Pi” section. We start by initializing our serial port, HTTP client, and polling to see if the internet has connected yet.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-Elixir&quot;&gt;def init(port) do
  #Start the NERVES port
  begin_serial(port)

  # Start httpoison
  HTTPoison.start()

  # Start polling for the ethernet being available
  send(self(), :ethernet_check)

  {:ok, %{ id: nil }}
end

defp begin_serial(port) do
  {:ok, pid} = Nerves.UART.start_link
  Nerves.UART.open(pid, port, speed: 9600, active: true)
  Nerves.UART.configure(pid, framing: {Nerves.UART.Framing.Line, separator: &quot;\r\n&quot;})

  pid
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Starting the serial port in &lt;code&gt;active&lt;/code&gt; mode will cause it to send a message every time it receives a string. We can setup a callback on our GenServer that fires every time we receive data. This is where we can write the code to query the UPC code and post to Wunderlist.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-Elixir&quot;&gt;def handle_info({:nerves_uart, _pid, barcode}, %{id: id}) do
  # Check the barcode
  todo_title = case Scanner.UpcDatabaseApi.lookup(barcode) do
    {:ok, product_map} -&amp;gt; get_best_name(product_map, barcode)
    _ -&amp;gt; &quot;Barcode error: #{barcode}&quot;
  end

  # Post the item
  Scanner.WunderlistApi.create_todo(id, todo_title)
  Logger.info &quot;Got info: #{barcode}. Posted item: #{todo_title}&quot;

  # Keep the state constant
  {:noreply, %{ id: id }}
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As can be seen here, if there are any problems during the UPC retrieval, we simply post a “Barcode error: &quot; message instead of the product name.&lt;/p&gt;
&lt;h2 id=&quot;project-enclosure&quot;&gt;Project Enclosure&lt;/h2&gt;
&lt;p&gt;While I’ve printed some simple 3D designs before, this was my first one with features that held multiple parts together in an assembly. I used Fusion 360 for my modeling, and began by modeling all of the individual components or finding the common ones like the Raspberry Pi online. From there, I moved the components around until they had ample space to be wired and then figured out how to secure them in place. The Raspberry Pi is screwed into some posts using heat-set inserts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/3d_slice_3.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://bcarrigan.com/img/scanner_1.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The power connector has a very small clearance and will simply be glued in place:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/3d_slice_4.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://bcarrigan.com/img/scanner_3.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The scanner itself sits on an inner wall and is held in place by the outer wall. It is high enough up that the cavity beneath it can easily fit all of the wires.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/3d_slice_1.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://bcarrigan.com/img/scanner_2.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The whole thing includes some fillets and cutouts to neatly display the scanner:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/3d_slice_2.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://bcarrigan.com/img/scanner_4.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Not having a 3D Printer myself, I went on &lt;a href=&quot;https://www.3dhubs.com/&quot;&gt;3D Hubs&lt;/a&gt; to get this design printed. The final result looks great and was just $11!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bcarrigan.com/img/scanner.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This was a fun project where I got to learn more about Nerves and designing 3D printed enclosures. It was also inexpensive, with the parts list totaling less than $40 for a very complex design. It is unlikely that others will find this particular scanner, but it should be possible to use any scanner with a serial protocol. The device has already come in handy several times to remind us to pick up more spices that we have run out of. I hope you enjoyed this post, and as always feel free to contact me with any questions you have if you are looking to build something similar!&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;If your company could use help launching an embedded product like this, I run a full-stack connected device consulting firm that builds great products for clients. For more information, please check out my &lt;a href=&quot;https://bcarrigan.com/services&quot;&gt;Services page&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;</description>
<pubDate>Mon, 23 Apr 2018 12:05:13 +0000</pubDate>
<dc:creator>carrigan</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://bcarrigan.com/2018/04/20/wunderscan/</dc:identifier>
</item>
<item>
<title>How Windmills as Wide as Jumbo Jets Are Making Clean Energy Mainstream</title>
<link>https://www.nytimes.com/interactive/2018/04/23/business/energy-environment/big-windmills.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/interactive/2018/04/23/business/energy-environment/big-windmills.html</guid>
<description>&lt;div class=&quot;rad-caption&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span class=&quot;rad-caption-text&quot;&gt;Prototype wind turbines whirl at a testing site in Osterild, near the northern end of Denmark’s Jutland peninsula.&lt;/span&gt; &lt;span class=&quot;rad-credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;By Rasmus Degnbol&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paragraph&quot;&gt;OSTERILD, Denmark — At the northern end of Denmark’s Jutland peninsula, the wind blows so hard that rows of trees grow in one direction, like gnarled flags.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The relentless weather over this long strip of farmland, bogs and mud flats — and the real-world laboratory it provides — has given the country a leading role in transforming wind power into a viable source of clean energy.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;After energy prices spiked during the 1973 oil crisis, entrepreneurs began building small turbines to sell here. “It started out as an interest in providing power for my parents’ farm,” said Henrik Stiesdal, who designed and built early prototypes with a blacksmith partner.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The initial windmills made by small operations had quality problems. Blades — then just 15 feet in length — would break or fall apart.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Now, they are giants, made by global players pulling off enormous feats of engineering.&lt;/p&gt;

&lt;div class=&quot;rad-caption&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span class=&quot;rad-caption-text&quot;&gt;Technicians reach the roof of these enormous wind turbines either via an internal elevator or, if the turbine is installed offshore, by helicopters that lower them into the fenced-off area.&lt;/span&gt; &lt;span class=&quot;rad-credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;By Rasmus Degnbol&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paragraph&quot;&gt;The biggest turbines &lt;a href=&quot;http://www.vindenergi.dtu.dk/english/test-centers/oesterild&quot;&gt;in Osterild&lt;/a&gt; stretch more than 600 feet high. The largest rotor blades can reach 270 feet in length, comparable to the wingspan of an Airbus A380, the world’s largest commercial plane. The price tag: Up to 10 million euros, or more than $12 million.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The monstrous scale has helped turn wind into a mainstream form of power.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Larger turbines harness more wind, creating more energy. The biggest modern offshore turbines produce nearly 20 times as much power as ones developed three decades ago.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The larger the size, the lower the cost of generating energy. In parts of northern Europe, wind is now a major power source. It accounts for 4 percent of overall global energy supply, according to the International Energy Agency.&lt;/p&gt;

&lt;div class=&quot;rad-caption&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span class=&quot;rad-caption-text&quot;&gt;Blades for wind turbines lie outside a factory, waiting to be transported to wind farms.&lt;/span&gt; &lt;span class=&quot;rad-credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;By Rasmus Degnbol&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paragraph&quot;&gt;From those early Danish innovators, the industry has grown to be dominated by companies like Vestas Wind Systems and Siemens Gamesa Renewable Energy.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The heart of the Siemens Gamesa business lies in Brande, a small Jutland town. It was there in the early 1980s that an entrepreneur named Peter Sorensen founded a wind business called Bonus with a couple of workers from his father’s irrigation company.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Siemens bought Bonus in 2004, and today, Brande is home to large engineering, training and maintenance hubs.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Staff sitting at consoles there can monitor wind farms around the globe. Often, when a problem shuts a turbine down, they can restart it electronically without needing to send a maintenance team.&lt;/p&gt;

&lt;p class=&quot;paragraph&quot;&gt;At a cavernous workshop, technicians build custom turbine models and facilities for testing whether components are robust enough to last two decades or more. Inside, the towers are so big that elevators haul engineers up and down. Passengers must wear a climbing harness in case they fail.&lt;/p&gt;

&lt;p class=&quot;paragraph&quot;&gt;The rotors are connected to the windmill tower by a nacelle — a large enclosure the size of a trailer, with plenty of room inside to walk around.&lt;/p&gt;

&lt;p class=&quot;paragraph&quot;&gt;Looming over the top deck outside are the rotors. When they whirl, the whole column sways like a ship at sea.&lt;/p&gt;

&lt;p class=&quot;paragraph&quot;&gt;Making these blades is difficult and labor-intensive.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Teams of workers gradually fill a mold with strips of fiberglass interlaced with balsa wood for strength. They then inject resins and other chemicals into the container to form the hardened structure.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The huge size of the blades, and the complexity of the process, mean completely automating it does not make economic sense. Around 1,300 people work in the factory, and making a single blade can take about three days.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;It’s a difficult balance for manufacturers to achieve both size and efficiency.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;The largest blades already weigh around 30 metric tons, and making them longer adds to their weight, fast. Overweight blades might lead to turbines being worn down faster, and would put enormous stress on other components.&lt;/p&gt;

&lt;div class=&quot;rad-caption&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span class=&quot;rad-caption-text&quot;&gt;A group of workers prepare a mold for a wind turbine blade. They fill the mold with fiber glass cloth in a process that loosely resembles making a surfboard.&lt;/span&gt; &lt;span class=&quot;rad-credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;By Rasmus Degnbol&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paragraph&quot;&gt;Designers are testing tweaks to the shape and size of a blade, experimenting with the changes in wind tunnels or on computers. They have found that gluing various add-ons to the blades can substantially boost performance.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;One fix — a combination of serrated teeth and combs that reduced the sound of the blades — &lt;a href=&quot;https://www.siemens.com/press/en/pressrelease/?press=/en/pressrelease/2016/windpower-renewables/pr2016090418wpen.htm&quot;&gt;was inspired by the wing feathers of owls&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Many of the big turbines that are designed at the center will eventually make their way to the open water, where there is more space and the wind is more powerful.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Their huge components, difficult to transport on roadways, can be loaded at ports onto special boats, which take them to sprawling wind farms in the sea.&lt;/p&gt;

&lt;div class=&quot;rad-caption&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span class=&quot;rad-caption-text&quot;&gt;The enclosures which connect the blades to the wind turbine’s tower are readied to be loaded onto ships.&lt;/span&gt; &lt;span class=&quot;rad-credit&quot; itemprop=&quot;copyrightHolder&quot;&gt;By Rasmus Degnbol&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paragraph&quot;&gt;The first offshore wind farm was built using a barge that had a crane mounted on a truck. Companies today have developed specialized vessels to carry these offshore turbines to their floating platforms.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;They must contend with a variety of challenges, including the corrosive impact of saltwater. To service wind farms far from the shore, maintenance crews sometimes live on special ships.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;It’s a complicated calculus.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;In the early years, building an offshore wind farm was fantastically expensive, and governments offered generous subsidies to help the industry develop. But prices &lt;a href=&quot;https://www.nytimes.com/2017/04/14/business/energy-environment/offshore-wind-subsidy-dong-energy.html&quot;&gt;have been falling&lt;/a&gt;, and government support has “melted away,” according to Andreas Nauen, the chief executive of Siemens Gamesa’s offshore wind division.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;Lower costs, though, have also made wind power more appealing elsewhere. Mr. Nauen is optimistic that new markets for wind power, which was once mostly concentrated in northern Europe, will emerge in Asia &lt;a href=&quot;https://www.nytimes.com/2016/12/14/science/wind-power-block-island.html&quot;&gt;and the United States&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;paragraph&quot;&gt;“This is real,” he said.&lt;/p&gt;
</description>
<pubDate>Mon, 23 Apr 2018 11:23:52 +0000</pubDate>
<dc:creator>dankohn1</dc:creator>
<og:url>https://www.nytimes.com/interactive/2018/04/23/business/energy-environment/big-windmills.html</og:url>
<og:type>article</og:type>
<og:title>How Windmills as Wide as Jumbo Jets Are Making Clean Energy Mainstream</og:title>
<og:image>https://static01.nyt.com/images/2018/04/23/business/big-windmills-promo/big-windmills-promo-facebookJumbo.jpg</og:image>
<og:description>The global wind turbine industry has transformed from a collection of small companies in Denmark to corporations pulling off enormous feats of engineering.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/interactive/2018/04/23/business/energy-environment/big-windmills.html</dc:identifier>
</item>
<item>
<title>Why it took a long time to build the tiny link preview on Wikipedia</title>
<link>https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/</link>
<guid isPermaLink="true" >https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/</guid>
<description>&lt;div id=&quot;attachment_55693&quot; class=&quot;post-image wp-caption aligncenter&quot; readability=&quot;55.247191011236&quot;&gt;&lt;img data-attachment-id=&quot;55693&quot; data-permalink=&quot;https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/preview-cards/&quot; data-orig-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png&quot; data-orig-size=&quot;1096,752&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;preview cards&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=300&quot; data-large-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=580&amp;amp;h=398&quot; class=&quot;size-large wp-image-55693&quot; src=&quot;https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=580&amp;amp;h=398&quot; alt=&quot;&quot; width=&quot;580&quot; height=&quot;398&quot; srcset=&quot;https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=580&amp;amp;h=398 580w, https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=150&amp;amp;h=103 150w, https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=300&amp;amp;h=206 300w, https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png?w=768&amp;amp;h=527 768w, https://wikimediablog.files.wordpress.com/2018/04/preview-cards.png 1096w&quot; sizes=&quot;(max-width: 580px) 100vw, 580px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Preview cards now show when you hover over a link ohhh yeeehh (and yes, I use Wikipedia’s mobile skin for my desktop browsing). Text from the Wikipedia articles on &lt;a href=&quot;https://en.wikipedia.org/wiki/Iceberg&quot;&gt;icebergs&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Water&quot;&gt;water&lt;/a&gt;, &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en&quot;&gt;CC BY-SA 3.0&lt;/a&gt;. Images left to right, top to bottom: &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Iceberg_with_hole_near_Sandersons_Hope_2007-07-28_2.jpg&quot;&gt;#1&lt;/a&gt; by Kim Hansen, &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en&quot;&gt;CC BY-SA 3.0&lt;/a&gt;; &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Iceberg_in_the_Arctic_with_its_underside_exposed.jpg&quot;&gt;#2&lt;/a&gt; by Andreas Weith, &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/deed.en&quot;&gt;CC BY-SA 4.0&lt;/a&gt;; &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Grotto_in_an_iceberg.jpg&quot;&gt;#3&lt;/a&gt; via the National Library of New Zealand, &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/deed.en&quot;&gt;CC0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A few days ago, &lt;a href=&quot;https://medium.com/freely-sharing-the-sum-of-all-knowledge/wikipedia-page-previews-738cddac7a21&quot;&gt;my team completed the launch of&lt;/a&gt;  “&lt;a href=&quot;https://www.mediawiki.org/wiki/Page_Previews&quot;&gt;page previews”&lt;/a&gt;—a feature now deployed to hundreds of language editions of Wikipedia. We are seeing &lt;a href=&quot;https://grafana.wikimedia.org/dashboard/db/reading-web-page-previews?refresh=1m&amp;amp;orgId=1&amp;amp;panelId=2&amp;amp;fullscreen&quot;&gt;up to half a million hits every minute to our API&lt;/a&gt; to serve those cards that show when you hover over any link.&lt;/p&gt;
&lt;p&gt;On the surface it looks quite simple. It’s something many websites have already. It has an image and some text and shows when you hover over a link. Hardly groundbreaking stuff … or so it may seem.&lt;/p&gt;
&lt;p&gt;The original idea was conceived four years ago, based on an idea &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Tools/Navigation_popups&quot;&gt;from a volunteer/editor&lt;/a&gt; many years before that.&lt;/p&gt;
&lt;p&gt;It’s thus taken a few years for us to get this out to everyone. That might seem strange, but like an iceberg, once you start looking below it, it all makes sense.&lt;/p&gt;
&lt;h4&gt;We had to choose a thumbnail&lt;/h4&gt;
&lt;p&gt;We have several millions of pages, all stored as raw wikitext. We couldn’t expect every single article to be edited to designate a thumbnail.&lt;/p&gt;
&lt;p&gt;Way back in 2012, Max Semenik, a software engineer on our &lt;a href=&quot;https://www.mediawiki.org/wiki/Community_Tech&quot;&gt;Community Tech team&lt;/a&gt;, built &lt;a href=&quot;https://www.mediawiki.org/wiki/Extension:PageImages&quot;&gt;an extension&lt;/a&gt; that would algorithmically work out the most appropriate image for an article.&lt;/p&gt;
&lt;p&gt;As with all algorithms, it wasn’t perfect and since it wasn’t designed for the use case of page previews, it also required tweaking.&lt;/p&gt;
&lt;p&gt;We had to make updates to limit the image to the first section of the article. Working with algorithms is hard, but for this purpose essential.&lt;/p&gt;
&lt;h4&gt;We had to generate a summary&lt;/h4&gt;
&lt;p&gt;We have several millions of pages, all stored as &lt;a href=&quot;https://www.mediawiki.org/wiki/Wikitext&quot;&gt;raw wikitext&lt;/a&gt;. How to summarise that without asking our editors to go in and painstakingly do that for every article?&lt;/p&gt;
&lt;p&gt;The busy Max Semenik who helped us with the thumbnails, also wrote &lt;a href=&quot;https://www.mediawiki.org/wiki/Extension:TextExtracts&quot;&gt;an extension to generate extracts of articles&lt;/a&gt;. It was originally written primarily for &lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_text&quot;&gt;plain text&lt;/a&gt; summaries. Our initial versions of page previews used this, but we realised it wasn’t the best fit for what we were trying to do.&lt;/p&gt;
&lt;p&gt;So we stopped using this.&lt;/p&gt;
&lt;p&gt;We realised HTML was very important. For instance chemistry articles featured chemical formulae which needs subscript which requires HTML.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;55694&quot; data-permalink=&quot;https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/water/&quot; data-orig-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/water.png?w=347&amp;amp;h=429&quot; data-orig-size=&quot;347,429&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;water&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/water.png?w=347&amp;amp;h=429?w=243&quot; data-large-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/water.png?w=347&amp;amp;h=429?w=347&quot; class=&quot;size-full wp-image-55694 aligncenter&quot; src=&quot;https://wikimediablog.files.wordpress.com/2018/04/water.png?w=347&amp;amp;h=429&quot; alt=&quot;&quot; width=&quot;347&quot; height=&quot;429&quot; srcset=&quot;https://wikimediablog.files.wordpress.com/2018/04/water.png 347w, https://wikimediablog.files.wordpress.com/2018/04/water.png?w=121&amp;amp;h=150 121w, https://wikimediablog.files.wordpress.com/2018/04/water.png?w=243&amp;amp;h=300 243w&quot; sizes=&quot;(max-width: 347px) 100vw, 347px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;Consider how HTML is needed to generate summaries for content where subscript is important such as the chemical formula of water, shown here. Text from the English Wikipedia article on &lt;a href=&quot;https://en.wikipedia.org/wiki/Water&quot;&gt;water&lt;/a&gt;, &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en&quot;&gt;CC BY-SA 3.0&lt;/a&gt;; &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Iceberg_with_hole_near_Sandersons_Hope_2007-07-28_2.jpg&quot;&gt;image&lt;/a&gt; by Kim Hansen, &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en&quot;&gt;CC BY-SA 3.0&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Many of our articles, begin with location information and pronunciation information. A lot of this content didn’t belong in our summaries and for other content it was less clear what belonged. The summaries had &lt;a href=&quot;https://medium.com/freely-sharing-the-sum-of-all-knowledge/how-we-designed-page-previews-for-wikipedia-and-what-could-be-done-with-them-in-the-future-7a5fa6b07b96&quot;&gt;a lot of design input&lt;/a&gt; and we identified which content shouldn’t appear inside a preview. We wrote up &lt;a href=&quot;https://www.mediawiki.org/wiki/Page_Previews/API_Specification&quot;&gt;a specification capturing the required behaviour&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;55695&quot; data-permalink=&quot;https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/coordinates-preview/&quot; data-orig-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/coordinates-preview.png?w=210&amp;amp;h=55&quot; data-orig-size=&quot;210,55&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;coordinates preview&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/coordinates-preview.png?w=210&amp;amp;h=55?w=210&quot; data-large-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/coordinates-preview.png?w=210&amp;amp;h=55?w=210&quot; class=&quot;aligncenter size-full wp-image-55695&quot; src=&quot;https://wikimediablog.files.wordpress.com/2018/04/coordinates-preview.png?w=210&amp;amp;h=55&quot; alt=&quot;&quot; width=&quot;210&quot; height=&quot;55&quot; srcset=&quot;https://wikimediablog.files.wordpress.com/2018/04/coordinates-preview.png 210w, https://wikimediablog.files.wordpress.com/2018/04/coordinates-preview.png?w=150&amp;amp;h=39 150w&quot; sizes=&quot;(max-width: 210px) 100vw, 210px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;Location information features at the beginning of many articles proving problematic for summarising Wikipedia articles…&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;55696&quot; data-permalink=&quot;https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/pronunciation-info/&quot; data-orig-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png?w=396&amp;amp;h=54&quot; data-orig-size=&quot;396,54&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;pronunciation info&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png?w=396&amp;amp;h=54?w=300&quot; data-large-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png?w=396&amp;amp;h=54?w=396&quot; class=&quot;aligncenter size-full wp-image-55696&quot; src=&quot;https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png?w=396&amp;amp;h=54&quot; alt=&quot;&quot; width=&quot;396&quot; height=&quot;54&quot; srcset=&quot;https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png 396w, https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png?w=150&amp;amp;h=20 150w, https://wikimediablog.files.wordpress.com/2018/04/pronunciation-info.png?w=300&amp;amp;h=41 300w&quot; sizes=&quot;(max-width: 396px) 100vw, 396px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;… as does pronunciation information.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;In the end we decided to build on top of an &lt;a href=&quot;https://en.m.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt; that was originally built for our native Android and iOS apps. We created a new API specifically for this purpose.&lt;/p&gt;
&lt;p&gt;We now generate the summary from the entire article HTML. We parse it just like a browser and &lt;a href=&quot;https://www.mediawiki.org/wiki/Page_Previews/API_Specification&quot;&gt;per the specification&lt;/a&gt; identify the first “non-empty” lead paragraph of every article.&lt;/p&gt;
&lt;p&gt;One of the big challenges here, was the decision to strip content inside parentheses. Since we support over 300 languages this had to be localised (not everyone uses the same character set!).&lt;/p&gt;
&lt;p&gt;Not only that, but of course some parentheses are vital… edge cases are everywhere. We had to think about all their potential usage and how best to do them.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;55698&quot; data-permalink=&quot;https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/periodic-table-example/&quot; data-orig-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png?w=332&amp;amp;h=410&quot; data-orig-size=&quot;332,410&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;periodic table example&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png?w=332&amp;amp;h=410?w=243&quot; data-large-file=&quot;https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png?w=332&amp;amp;h=410?w=332&quot; class=&quot;aligncenter size-full wp-image-55698&quot; src=&quot;https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png?w=332&amp;amp;h=410&quot; alt=&quot;&quot; width=&quot;332&quot; height=&quot;410&quot; srcset=&quot;https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png 332w, https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png?w=121&amp;amp;h=150 121w, https://wikimediablog.files.wordpress.com/2018/04/periodic-table-example.png?w=243&amp;amp;h=300 243w&quot; sizes=&quot;(max-width: 332px) 100vw, 332px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;Sometimes content inside parentheses is important, as this example suggests. Identifying when they are important is hard. Text from the English Wikipedia article on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Periodic_table&quot;&gt;periodic table&lt;/a&gt;, &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en&quot;&gt;CC BY-SA 3.0&lt;/a&gt;; &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Simple_Periodic_Table_Chart-en.svg&quot;&gt;image&lt;/a&gt; by Offnfopt, public domain.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Stripping parenthetical elements from user-generated HTML also turned out to be quite difficult. Whereas doing so in plain text requires a simple regular expression, things get more complicated when you consider nested HTML.&lt;/p&gt;
&lt;p&gt;It was important to ensure the content continued to make sense with the content inside parentheses stripped and that we that we didn’t add any security vulnerabilities.&lt;/p&gt;
&lt;p&gt;Thanks go to our &lt;a href=&quot;https://www.mediawiki.org/wiki/Wikimedia_Reading_Infrastructure_team&quot;&gt;Infrastructure team&lt;/a&gt; for helping us build out this API.&lt;/p&gt;
&lt;h3&gt;We work with our community&lt;/h3&gt;
&lt;p&gt;Our editing community cares a lot about our product. That’s why they write articles for you in their spare time for no monetary gain.&lt;/p&gt;
&lt;p&gt;We include them in every part of the process, working with them tirelessly to fix every edge case (whether it be broken summaries, or inappropriate images) and to reassure them we know what we are doing, the impact of why we are doing and why we are continuing to do it.&lt;/p&gt;
&lt;p&gt;Our initial version wasn’t good enough. Our community asked us &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Village_pump_%28proposals%29/Archive_131#Proposal:_Enable_Hovercards_by_default&quot;&gt;not to go ahead&lt;/a&gt; with it. We answered by listening to them and making it better.&lt;/p&gt;
&lt;p&gt;Thank you community and our community liaisons who helped facilitate those conversations!&lt;/p&gt;
&lt;h3&gt;Design design design&lt;/h3&gt;
&lt;p&gt;We did a lot of it. Our designer, Nirzar did &lt;a href=&quot;https://medium.com/freely-sharing-the-sum-of-all-knowledge/how-we-designed-page-previews-for-wikipedia-and-what-could-be-done-with-them-in-the-future-7a5fa6b07b96&quot;&gt;a great write up&lt;/a&gt; so I won’t bother sharing any more here, but design was at every step of the process whether it was the initial prototypes (thanks &lt;a href=&quot;https://wikimediafoundation.org/wiki/Staff_and_contractors&quot;&gt;Prateek Saxena&lt;/a&gt;!); discussing performance of the feature with our performance team; perfecting thumbnails and summaries; or talking to our community.&lt;/p&gt;
&lt;p&gt;Thank you &lt;a href=&quot;https://www.mediawiki.org/wiki/Design&quot;&gt;design team&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;We had to instrument it&lt;/h3&gt;
&lt;p&gt;This was a big change to how people interact with our content. We care a lot about privacy in Wikimedia. We are likely to be one of the few (only?!) major websites who don’t install third party scripts to track you.&lt;/p&gt;
&lt;p&gt;Our &lt;a href=&quot;https://wikimediafoundation.org/wiki/Privacy_policy&quot;&gt;privacy policy&lt;/a&gt; forbids us from giving away data about you.&lt;/p&gt;
&lt;p&gt;We don’t use vendors to A/B test or analyse our user’s behaviour.&lt;/p&gt;
&lt;p&gt;Yet, despite all this, we don’t cut corners.&lt;/p&gt;
&lt;p&gt;We don’t want to make dumb risky changes.&lt;/p&gt;
&lt;p&gt;Every time we build something major we have to build out the infrastructure to evaluate it. We construct hypothesizes and tests to test those hypothesizes. We build it. We test it. We listen to the data. We adapt. We test again.&lt;/p&gt;
&lt;p&gt;This means we juggle being a product team and an analytics team. Our development team wear multiple hats. Given the scale we work at have to deal with bugs. Occasionally, &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1379762&quot;&gt;we find major bugs in browser vendors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our final A/B test by Tilman Bayer gave us many answers. It’s a &lt;a href=&quot;https://www.mediawiki.org/wiki/Page_Previews/2017-18_A/B_Tests&quot;&gt;great read&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Given the findings of that A/B test we also decided to start measuring “page preview views” as an additional metric to page views. That metric is firing &lt;a href=&quot;https://grafana.wikimedia.org/dashboard/db/eventlogging-schema?orgId=1&amp;amp;var-datasource=eqiad%20prometheus%2Fops&amp;amp;var-schema=VirtualPageView&amp;amp;from=now-7d&amp;amp;to=now&quot;&gt;1000 events per second&lt;/a&gt; and our &lt;a href=&quot;https://wikitech.wikimedia.org/wiki/Analytics&quot;&gt;analytics team&lt;/a&gt; is kicking ass dealing with that sort of scale.&lt;/p&gt;
&lt;p&gt;Thank you analysts, thank you analytics team!&lt;/p&gt;
&lt;h3&gt;We had to scale our API to support you&lt;/h3&gt;
&lt;p&gt;We are seeing &lt;a href=&quot;https://grafana.wikimedia.org/dashboard/db/reading-web-page-previews?refresh=1m&amp;amp;orgId=1&amp;amp;panelId=2&amp;amp;fullscreen&quot;&gt;0.5 million hits to our API a minute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are seeing &lt;a href=&quot;https://grafana.wikimedia.org/dashboard/db/reading-web-page-previews?refresh=1m&amp;amp;orgId=1&amp;amp;panelId=2&amp;amp;fullscreen&quot;&gt;0.5 million hits to our API a minute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I say that twice because that’s a high volume of traffic.&lt;/p&gt;
&lt;p&gt;Our &lt;a href=&quot;https://www.mediawiki.org/wiki/API:Main_page&quot;&gt;traditional APIs&lt;/a&gt; were originally built for bots to help clean up your edits. They weren’t designed for readers.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.mediawiki.org/wiki/Wikimedia_Services&quot;&gt;Wikimedia services team&lt;/a&gt; has been vital to the success of this project by providing the infrastructure to deal with, dealing with a lot of the caching (we rely heavily on &lt;a href=&quot;https://en.wikipedia.org/wiki/Varnish_%28software%29&quot;&gt;Varnish&lt;/a&gt;) and making sure when content gets edited new summaries get generated. It’s well known that &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_invalidation&quot;&gt;cache invalidation&lt;/a&gt; is one of the harder Computer Science problems.&lt;/p&gt;
&lt;p&gt;Thank you services team!!&lt;/p&gt;
&lt;h3&gt;Thank you thank you thank you&lt;/h3&gt;
&lt;p&gt;Shipping something always feels good. I hope the “simple” preview my team with the help of many teams across the Wikimedia Foundation has shipped enriches your experience.&lt;/p&gt;
&lt;p&gt;Lot’s of us have obviously been involved and we’re proud of what we’ve put out.&lt;/p&gt;
&lt;p&gt;We’re not done. Software is never done.&lt;/p&gt;
&lt;p&gt;We have code to clean up and &lt;a href=&quot;https://medium.com/freely-sharing-the-sum-of-all-knowledge/how-we-designed-page-previews-for-wikipedia-and-what-could-be-done-with-them-in-the-future-7a5fa6b07b96&quot;&gt;new ideas&lt;/a&gt; for how to grow this small little feature.&lt;/p&gt;
&lt;p&gt;Some might say we’re only seeing the tip of the iceberg.&lt;/p&gt;
&lt;p&gt;———&lt;/p&gt;
&lt;p&gt;The Wikimedia Foundation is a non-profit and relies on donations from people like you to keep the site up and running in such a way that it lives up to our values. To help us continue to build features like this, &lt;a href=&quot;https://wikimediafoundation.org/wiki/Ways_to_Give&quot;&gt;please consider donating to us&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.mediawiki.org/wiki/User:Jdlrobson&quot;&gt;Jon Robson&lt;/a&gt;, Senior Software Engineer, Desktop &amp;amp; Mobile Web&lt;/em&gt;&lt;br/&gt;&lt;em&gt;Wikimedia Foundation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Want to learn more? See the &lt;a href=&quot;https://blog.wikimedia.org/2018/04/17/wikipedia-page-previews/&quot;&gt;original announcement&lt;/a&gt; and &lt;a href=&quot;https://blog.wikimedia.org/2018/04/18/how-we-designed-page-previews-for-wikipedia/&quot;&gt;how we designed page previews&lt;/a&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post &lt;a href=&quot;https://medium.com/freely-sharing-the-sum-of-all-knowledge/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia-d5bd734df8fe&quot;&gt;originally&lt;/a&gt; appeared in “Down the rabbit hole,” our Medium publication, and was modified for re-publication on the Wikimedia blog. Both posts have since been edited to fix a typo—our API is receiving half a million hits per minute, not five thousand.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 23 Apr 2018 08:36:22 +0000</pubDate>
<dc:creator>Yossi_Frenkel</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/</dc:identifier>
</item>
<item>
<title>Renting is Throwing Money Away, Right? (2015)</title>
<link>https://affordanything.com/is-renting-better-than-buying-should-i-rent-or-buy/</link>
<guid isPermaLink="true" >https://affordanything.com/is-renting-better-than-buying-should-i-rent-or-buy/</guid>
<description>&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7860&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Should-I-rent-or-buy-e1448321160415.jpg&quot; alt=&quot;Renting is throwing money away. Isn't it? &quot; width=&quot;700&quot; height=&quot;467&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I’ve heard a lot of ridiculous statements:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“I’m sure we’ll find parking.”&lt;/li&gt;
&lt;li&gt;“I’ll just check Facebook for five minutes.”&lt;/li&gt;
&lt;li&gt;“I’ll skip dessert.”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;But perhaps the most absurd is the adage: “If you’re a renter, you’re throwing money away.”&lt;/p&gt;
&lt;p&gt;Bulls**t.&lt;br/&gt;&lt;span id=&quot;more-7856&quot;/&gt;&lt;br/&gt;You’ve heard those statements, right?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“I’m sick of throwing money away on rent.”&lt;/li&gt;
&lt;li&gt;“Buying is always better than renting.”&lt;/li&gt;
&lt;li&gt;“Your home is your biggest investment.”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I’m going to explain why these clichés are ludicrous. Preposterous. Outlandish. Nonsensical.&lt;/p&gt;
&lt;p&gt;(Somebody please take the thesaurus away from me.)&lt;/p&gt;
&lt;p&gt;Let’s chat about the &lt;strong&gt;“should I&lt;/strong&gt; &lt;strong&gt;rent or buy?” question&lt;/strong&gt; using logic, math and reason, rather than ill-informed clichés.&lt;/p&gt;
&lt;p&gt;Before we jump in, let’s establish a few premises:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This article is about your primary residence (the place where you sleep).&lt;/li&gt;
&lt;li&gt;This is &lt;em&gt;&lt;u&gt;not&lt;/u&gt;&lt;/em&gt; an article about real estate investing.&lt;/li&gt;
&lt;li&gt;As with all articles on Afford Anything, these high-level concepts can be applied anywhere. But specifics about laws, taxes, inflation, etc., are geared at a United States audience.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;With that said, let’s begin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://afford.leadpages.co/leadbox/14de24073f72a2%3A14e257046b46dc/5802161648697344/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/rU-z0la_ZyrfMMSk342FK6_DvaZkLD6VgIWmrkAe9cVPJBEHhORo6ps9Id5W-Wf5IyBIWnXvuQ_8TVOW60-l3e8=s0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;“Renting is Throwing Money Away”&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Here are three popular arguments defending the “renting is throwing money away” myth.&lt;/p&gt;
&lt;p&gt;#1: Rent is an expense. Mortgages build equity.&lt;/p&gt;
&lt;p&gt;#2: Rent is forever. Mortgages end.&lt;/p&gt;
&lt;p&gt;#3: Renters don’t benefit from rising home values. Homeowners do.&lt;/p&gt;
&lt;p&gt;Let’s dismantle these, one-by-one.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Argument #1: “Rent is an expense. Mortgages build equity.”&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Here’s the argument, broken down:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you &lt;strong&gt;rent&lt;/strong&gt;, 0% of your monthly payments build equity.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;own&lt;/strong&gt;, X% of your monthly payments build equity.&lt;/li&gt;
&lt;li&gt;X &amp;gt; 0&lt;/li&gt;
&lt;li&gt;Equity is an asset.&lt;/li&gt;
&lt;li&gt;Assets are good.&lt;/li&gt;
&lt;li&gt;Therefore, owning is better than renting.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here’s why this is flawed logic.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;What is Home Equity?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;First, background information:&lt;/p&gt;
&lt;p&gt;“Home equity” is measured as &lt;em&gt;what you own&lt;/em&gt;, minus &lt;em&gt;what you owe&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Home value:&lt;/strong&gt; $350,000&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You owe:&lt;/strong&gt; $200,000&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Your equity:&lt;/strong&gt; $150,000&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here’s the rub: Only a small slice of your mortgage payment builds equity.&lt;/p&gt;
&lt;p&gt;Your mortgage consists of four parts:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Principal (the equity-building piece)&lt;/li&gt;
&lt;li&gt;Interest&lt;/li&gt;
&lt;li&gt;Taxes&lt;/li&gt;
&lt;li&gt;Insurance&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These are collectively called PITI, which leads to the geeky joke, “Mortgage? What a pity.” &lt;em&gt;(I probably shouldn’t attempt a stand-up comedy career … )&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The “P” is equity; the “ITI” is an expense.&lt;/strong&gt; In other words, the “ITI” is money that you’re (also) “throwing away.”&lt;/p&gt;
&lt;p&gt;How much of your monthly payment is consumed by ITI? Most of it, particularly during the first 15 years of your loan.&lt;/p&gt;
&lt;p&gt;Mortgages are &lt;em&gt;amortized&lt;/em&gt;, which means the overwhelming majority of your initial payments are applied towards &lt;em&gt;interest&lt;/em&gt; rather than principal.&lt;/p&gt;
&lt;p&gt;Let’s look at an example of a $250,000 house. Let’s image the following scenario:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You make a $50,000 down payment.&lt;/li&gt;
&lt;li&gt;You borrow $200,000.&lt;/li&gt;
&lt;li&gt;You hold a 5 percent fixed-rate 30-year mortgage.&lt;/li&gt;
&lt;li&gt;Property taxes cost $3,000 per year.&lt;/li&gt;
&lt;li&gt;Homeowners insurance costs $1,500 per year.&lt;/li&gt;
&lt;li&gt;No mortgage insurance.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Your mortgage payment comes to &lt;strong&gt;$1,448.64 per month.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7866&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/how-much-money-will-the-mortgage-cost.jpg&quot; alt=&quot;How much money will the mortgage cost?&quot; width=&quot;898&quot; height=&quot;333&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/how-much-money-will-the-mortgage-cost.jpg 898w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/how-much-money-will-the-mortgage-cost-300x111.jpg 300w&quot; sizes=&quot;(max-width: 898px) 100vw, 898px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;How do these payments break down?&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7865&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/How-much-money-goes-to-principal-vs-interest-e1448323143342.jpg&quot; alt=&quot;Amortization Table -- How Much of Your Mortgage Payment Goes to Interest?&quot; width=&quot;700&quot; height=&quot;670&quot;/&gt;&lt;/p&gt;
&lt;p&gt;[Thanks to my friend Todd Tresidder at the blog Financial Mentor for this awesome &lt;a href=&quot;http://financialmentor.com/calculator/mortgage-payment-calculator-amortization-schedule&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;amortization calculator&lt;/a&gt;. Yes, I just used the word “awesome” to describe an amortization calculator. #ImNerdyAndIKnowIt ]&lt;/p&gt;
&lt;p&gt;During the first year, &lt;strong&gt;roughly 83 cents of every dollar&lt;/strong&gt; goes towards interest, taxes and insurance (ITI) in this example.&lt;/p&gt;
&lt;p&gt;You’re not building $1,448 in equity with each payment. You’re building $250 at best.&lt;/p&gt;
&lt;p&gt;After 13 payments, you’ll pay almost $15,000 in interest, taxes and insurance. ($14,795.71, to be exact.) And you’ll only hold an extra $2,963 in equity.&lt;/p&gt;
&lt;p&gt;Yeowch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The tipping point&lt;/strong&gt;, when more money is applied to principal than interest, is based on your interest rate.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;wp-image-7870&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/at-what-point-do-you-start-paying-more-in-principal-than-interest-on-your-mortgage.jpg&quot; alt=&quot;How long does it take to reach the 'tipping point' -- when your mortgage payments cover more principal than interest? Around 12-18 years, depending on your interest rate.&quot; width=&quot;700&quot; height=&quot;469&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/at-what-point-do-you-start-paying-more-in-principal-than-interest-on-your-mortgage.jpg 1358w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/at-what-point-do-you-start-paying-more-in-principal-than-interest-on-your-mortgage-300x201.jpg 300w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/at-what-point-do-you-start-paying-more-in-principal-than-interest-on-your-mortgage-1024x686.jpg 1024w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;During that first 13-19 years of your mortgage, you’re buried deep in the ITI sandbox. You’ll spend the final decade of your mortgage building far more equity than you did during the first two decades.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“What if I get a 15-year mortgage?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Your first 7 years are going to suck.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Takeaway:&lt;/strong&gt; You’re not building much equity, especially during the first decade-and-a-half. Most of your mortgage payment gets “thrown away” on interest, taxes and insurance.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7871&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/is-rent-just-throwing-money-away-e1448329989753.jpg&quot; alt=&quot;Is renting just throwing money away?&quot; width=&quot;700&quot; height=&quot;467&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Now that we’ve established this background, let’s return to the original argument:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you &lt;strong&gt;rent&lt;/strong&gt;, 0% of your monthly payments build equity.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;own&lt;/strong&gt;, X% of your monthly payments build equity.&lt;/li&gt;
&lt;li&gt;X &amp;gt; 0&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Okay, that logic still seems solid, right? Even if you’re not building much equity, surely &lt;em&gt;some equity&lt;/em&gt; is better than none … right?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Riiiighhht?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Not necessarily. Here’s the real question you should ask:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What’s the next best alternative?&lt;/strong&gt; Is building equity the highest-and-best use of your money? Or could you be doing something better with your limited resources?&lt;/p&gt;
&lt;p&gt;Phrased another way: &lt;strong&gt;What’s the opportunity cost&lt;/strong&gt; of this equity-building?&lt;/p&gt;


&lt;p&gt;&lt;em&gt;“Uhhh …. Opportunity cost? What do you mean?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Okay, before we launch into this, here’s one more fact that you need to know:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-7872&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/weird-pictures-that-have-nothing-to-do-with-inflation.jpg&quot; alt=&quot;Check out this weird photo that has nothing to do with inflation. Then tune in for a conversation about something that's a little boring, but totally important.&quot; width=&quot;700&quot; height=&quot;467&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/weird-pictures-that-have-nothing-to-do-with-inflation.jpg 2048w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/weird-pictures-that-have-nothing-to-do-with-inflation-300x200.jpg 300w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/weird-pictures-that-have-nothing-to-do-with-inflation-1024x683.jpg 1024w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Home Values Keep Pace with Inflation&lt;/h2&gt;
&lt;p&gt;Home values historically keep pace with inflation. Nothing more.&lt;/p&gt;
&lt;p&gt;When people say, “my home increased in value,” they’re really saying, “yay, inflation rose!”&lt;/p&gt;
&lt;p&gt;Don’t take my word for it. Listen to Nobel-Prize winning Yale economist Robert Shiller, who gained public notoriety for predicting the Great Recession.&lt;/p&gt;
&lt;p&gt;As early as 2005, Shiller started issuing warnings about an impending drop in real estate prices that could be as severe as 40 percent.&lt;/p&gt;
&lt;p&gt;Did he have a crystal ball? Is he magical? How did he anticipate this?&lt;/p&gt;
&lt;p&gt;His strategy is ridiculously simple, yet effective. Shiller simply looked at U.S. housing prices dating back to 1890, stripping away inflation. He “benchmarked” the 1890 prices at a value of 100 and tracked relative housing costs through the lens of inflation-adjusted dollars.&lt;/p&gt;
&lt;p&gt;Through this, Shiller made a few observations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;A house in 1897 cost the same as a house in 1997,&lt;/strong&gt; adjusted for inflation.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If you benchmark 1890 prices at a value of 100, you’ll notice that U.S. housing prices have stayed within the 100-120 range over the past century.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;In 1950, for example, the index stood at 105; in 1996 the index stood at 106. &lt;em&gt;Real estate didn’t make any gains (other than inflation) during that 46-year timespan.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Starting in 1997, an unprecedented bubble began forming.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Every housing ‘peak,’ or bubble, is followed by a tragic, painful, ugly fall.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The New York Times &lt;a href=&quot;http://www.nytimes.com/imagepages/2006/08/26/weekinreview/27leon_graph2.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ran this scary chart&lt;/a&gt; in 2006 (before the recession), based on data from Shiller’s groundbreaking book &lt;em&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/0691166269/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0691166269&amp;amp;linkCode=as2&amp;amp;tag=afforanyth-20&amp;amp;linkId=VRYSSNEO77CDULMT&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Irrational Exuberance&lt;/a&gt;&lt;/em&gt;. (I’ve added red arrows for emphasis).&lt;/p&gt;
&lt;div id=&quot;attachment_7868&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;size-full wp-image-7868&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Home-values-barely-keep-pace-with-inflation-e1448327607802.jpg&quot; alt=&quot;Home values barely keep pace with inflation&quot; width=&quot;700&quot; height=&quot;568&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Image credit: The New York Times&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, housing prices (adjusted for inflation) typically stay within a narrow range — around 100-120 on that chart.&lt;/p&gt;
&lt;p&gt;There have been only two notable exceptions. The first was triggered by the austerity of World War I, ending with post-WWII prosperity. The second was the rampant housing boom that started in 1997. And, well, we know how that story ends.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“But housing is booming now!”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sure, some people who bought at the bottom of the market in 2009 are now sipping champagne on the French Riviera. (I’m kidding. Kinda.)&lt;/p&gt;
&lt;p&gt;Home prices in many parts of the nation have doubled since the 2008-2009 lows. &lt;strong&gt;But in that same time period, the total U.S. stock market has nearly tripled.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7869&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/The-total-US-stock-market-has-tripled-e1448328147296.png&quot; alt=&quot;The total US stock market has nearly tripled&quot; width=&quot;700&quot; height=&quot;578&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In March 2009, the Dow Jones (a measure of the largest U.S. stocks) was valued at 6,626. Today its worth 3x more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key takeaway:&lt;/strong&gt; Housing keeps pace with inflation. And when it does produce real gains, it often underperforms the overall U.S. broad market.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;If we cherry-pick dates,&lt;/strong&gt; we can find a specific sliver of the population that’s enjoyed runaway home values since 2009. Housing &lt;em&gt;underperformed&lt;/em&gt; the overall stock market during that same period.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;If we cherry-pick locations,&lt;/strong&gt; we can find specific towns or cities that enjoyed atypical growth, typically due to external influences like rapid job creation. This falls along a bell curve; we can also find towns and cities with unprecedented levels of decline. (Ahem, Detroit.)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When we stop cherry-picking and “zoom out” into a multi-decade macro view, we’re left with the uncomfortable truth that U.S. housing prices don’t substantially increase in value. They merely keep pace with inflation, and they &lt;em&gt;significantly&lt;/em&gt; underperform the overall U.S. stock market.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7873&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Should-I-rent-or-buy-my-home-e1448331047909.jpg&quot; alt=&quot;Should I rent or buy my home?&quot; width=&quot;700&quot; height=&quot;467&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Should I Rent or Buy?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;“So what? Why are you comparing housing to stocks? You have to live somewhere. You don’t have to buy stocks.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We’re making this comparison because we’re asking the following question:&lt;/p&gt;
&lt;p&gt;Are you better off:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Tying up your cash into a home&lt;/li&gt;
&lt;li&gt;Finding an alternative investment, coupled with a rent payment?&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Any cash that’s tied up in home equity, including the down payment, is locked into a lifetime of just-keeping-pace-with-inflation.&lt;/p&gt;
&lt;p&gt;This opportunity cost, combined with the additional overhead of homeownership, can (in many markets) negate any advantage that comes from owning.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Paula, that sounded like whoomp –whoomp –whoomp. Like Charlie Brown’s teacher. I understood about 0.0000001% of whatever you just said.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Okay, let’s …&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Seriously, Paula, this is too technical. It’s making my head hurt.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alright, let’s walk through an example together.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Fine. But you’re competing with Miley Cyrus’ latest tweets. And I gotta say, those are WAY more racy.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Gotcha. Check this out:&lt;/p&gt;
&lt;h2&gt;Meet Renter Rachel and Owner Owen&lt;/h2&gt;
&lt;p&gt;Let’s meet Rachel and Owen, two people who are both hardcore savers. They haven’t met, because they’re figments of my imagination.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Obvious disclaimer:&lt;/strong&gt; This example is for illustrative purposes only. Your personal expenses will be different. &lt;em&gt;Duh.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This example is meant to illustrate that homeownership is not the slam-dunk golden ticket that society likes to believe.&lt;/p&gt;
&lt;p&gt;Here’s an illustrative example of one situation in which the buy vs. rent case isn’t so clear-cut.&lt;/p&gt;
&lt;p&gt;Please DO NOT pitch a fit in the comments about &lt;em&gt;“waaahhh, my interest rate is lower!”&lt;/em&gt; because this tells me you missed the point.&lt;/p&gt;
&lt;p&gt;The point = &lt;strong&gt;crunch the numbers using the specifics of your personal situation&lt;/strong&gt;, instead of making a six-figure decision based on an oversimplified cliche.&lt;/p&gt;
&lt;p&gt;Intuitively, we all know that if you’re going to live somewhere for one year, renting is better. And if you’re going to live somewhere for 40 years, buying is better.&lt;/p&gt;
&lt;p&gt;Somewhere between one year and 40 years is the crossover point, where buying becomes better than renting. It might be 5 years. It might be 10 years. It might be 15 years. It might be 20 years. It might be 25 years.&lt;/p&gt;
&lt;p&gt;The question, then, is: &lt;strong&gt;Where is that crossover point?&lt;/strong&gt; How can you solve this puzzle?&lt;/p&gt;
&lt;p&gt;The solution comes from running scenarios based on a massive variety of factors, including the price-to-rent ratio in your area (we’ll dive into that concept later in this article), prevailing interest rates, tax brackets, utility costs, HOA fees, alternative investment opportunities and a long list of other factors.&lt;/p&gt;
&lt;p&gt;Every human will have unique data points. That’s why every person should crunch the numbers based on their own personal situation.&lt;/p&gt;
&lt;p&gt;If you don’t like the numbers in the example below, re-run the scenario using your own numbers. &lt;em&gt;That’s the point.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Don’t buy into oversimplified cliches like “renting is throwing your money away.” Don’t oversimplify a six-figure decision.&lt;/p&gt;
&lt;p&gt;Onto the example:&lt;/p&gt;
&lt;p&gt;Rachel and Owen separately saved half of their income for the past few years. Now they each hold $102,500 in cash.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Rachel is a renter.&lt;/strong&gt; Her rent costs $2,500 per month.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Owen is an owner.&lt;/strong&gt; His mortgage costs $2,500 per month.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Rachel paid her landlord a security deposit of $2,500. She invested $100,000 into an &lt;a href=&quot;http://affordanything.com/2014/06/10/the-ultimate-beginners-guide-to-financial-awesomeness/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Total U.S. Stock Market Index Fund&lt;/a&gt; that earns an 8 percent long-term annualized average.&lt;/p&gt;
&lt;p&gt;Owen’s mortgage consists of $2,000 for principal and interest and $500 for taxes and insurance. He carries a 30-year fixed-rate mortgage with a 5 percent interest rate, which means his loan balance is $372,500 and the value of the home is $465,000.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;“Can Rachel and Owen live in equivalent homes?”&lt;/em&gt;&lt;/strong&gt; — Yes, if the &lt;strong&gt;price-to-rent ratio&lt;/strong&gt; in their area is 15.5.&lt;/p&gt;
&lt;p&gt;We’ll deep-dive into the concept of price-to-rent (P/R) ratio later in this article. Stay tuned.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-7874&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/whats-the-mortgage-on-a-350000-home.png&quot; alt=&quot;What is the mortgage on a $350,000 home?&quot; width=&quot;700&quot; height=&quot;335&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/whats-the-mortgage-on-a-350000-home.png 1132w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/whats-the-mortgage-on-a-350000-home-300x144.png 300w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/whats-the-mortgage-on-a-350000-home-1024x490.png 1024w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To buy this house, Owen made an initial payment of $102,500, which divides out as $92,500 for the down payment (which is 20 percent of the home value) plus another $10,000 for the buyer’s side of closing costs.&lt;/p&gt;
&lt;p&gt;In other words:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Both started with the same amount of money.&lt;/li&gt;
&lt;li&gt;Rachel used her money to invest in a broad-market index fund.&lt;/li&gt;
&lt;li&gt;Owen used his money to make a 20% down payment on a home.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Rachel and Owen both live in their respective homes for 10 years.&lt;/p&gt;
&lt;p&gt;During that time:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rachel’s rent rises 2% per year.&lt;/li&gt;
&lt;li&gt;Owen’s home value climbs 2% per year.&lt;/li&gt;
&lt;li&gt;Inflation increases 2% per year.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Are you with me so far? Sweet.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7891&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/opportunity-cost-of-buying-a-home.jpg&quot; alt=&quot;What's the opportunity cost of homeownership?&quot; width=&quot;700&quot; height=&quot;453&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/opportunity-cost-of-buying-a-home.jpg 700w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/opportunity-cost-of-buying-a-home-300x194.jpg 300w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Let’s talk about Owen’s mortgage:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Owen has a fixed-rate, 30-year mortgage.&lt;/li&gt;
&lt;li&gt;His principal and interest payments stay the same, so he repays his loan with increasingly cheaper dollars over time (as inflation kicks in).&lt;/li&gt;
&lt;li&gt;His property taxes and homeowner’s insurance premiums rise at the rate of inflation, which means his total mortgage payment climbs slightly.&lt;/li&gt;
&lt;li&gt;He sets aside one percent of the home value, or $4,650 per year, to take care of maintenance, repairs and renovations. (He loses much of this value to depreciation of fixtures and mechanicals, which he replaces and upgrades in 10 years before listing the home for sale.)&lt;/li&gt;
&lt;li&gt;He pays $300 per month in HOA dues.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7890&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/maintenance-and-fees-on-a-home.jpg&quot; alt=&quot;Maintenance and fees on a home&quot; width=&quot;700&quot; height=&quot;458&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/maintenance-and-fees-on-a-home.jpg 700w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/maintenance-and-fees-on-a-home-300x196.jpg 300w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/maintenance-and-fees-on-a-home-536x350.jpg 536w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Note: I ran this scenario through multiple online calculators. Each one gave me a slightly different answer. I’m posting screenshots from the &lt;a href=&quot;http://www.nytimes.com/interactive/2014/upshot/buy-rent-calculator.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NYTimes calculator&lt;/a&gt;. Please allow for slight variations, such as a $2,500 payment vs. a $2,557 payment, based on answers from divergent calculators. These minor differences don’t significantly affect the outcome.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Still with me? Let’s look at their utilities, maintenance and insurance:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Owen and Rachel pay equal electricity, gas, cable and internet bills.&lt;/li&gt;
&lt;li&gt;Rachel’s landlord covers water, sewer and trash, while Owen pays $85 per month for these combined services.&lt;/li&gt;
&lt;li&gt;Rachel pays $307 per year in renter’s insurance.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Finally, let’s chat about taxes and fees:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Owen pays a six percent commission to the real estate agent when he sells his home.&lt;/li&gt;
&lt;li&gt;Owen itemizes his tax deductions and deducts his mortgage interest.&lt;/li&gt;
&lt;li&gt;Both Rachel and Owen pay a 20 percent marginal tax rate.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7892&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/cost-of-buying-and-selling-a-home.jpg&quot; alt=&quot;What's the cost of buying and selling a home?&quot; width=&quot;700&quot; height=&quot;242&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/cost-of-buying-and-selling-a-home.jpg 700w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/cost-of-buying-and-selling-a-home-300x104.jpg 300w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Any guesses on which person holds the upper hand?&lt;/p&gt;
&lt;p&gt;Anyone?&lt;/p&gt;
&lt;p&gt;Seriously, take a guess. C’mon now. Close your eyes …&lt;/p&gt;
&lt;p&gt;Okay, got it?&lt;/p&gt;
&lt;p&gt;Well, the results are in …. &lt;strong&gt;Rachel and Owen performed about the same.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They’re neck-and-neck.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7879&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/when-is-renting-better-than-buying-e1448332914698.png&quot; alt=&quot;When is renting a home better than buying?&quot; width=&quot;700&quot; height=&quot;434&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“But I thought renting is throwing your money away?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;How is this possible?&lt;/p&gt;
&lt;p&gt;Both Rachel and Owen paid &lt;strong&gt;opportunity costs.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Rachel lost the opportunity to enjoy equity gains. This is exactly what people talk about when they make the argument that “buying is better than renting because you build equity.”&lt;/p&gt;
&lt;p&gt;She missed the opportunity for equity gains from three sources:&lt;/p&gt;
&lt;p&gt;(1) Principal contributions&lt;/p&gt;
&lt;p&gt;(2) Renovations and upgrades&lt;/p&gt;
&lt;p&gt;(3) Market growth&lt;/p&gt;
&lt;p&gt;We’ll talk about these later in this article.&lt;/p&gt;
&lt;p&gt;Owen, however, paid equal opportunity costs by missing out on the chance to invest $100,000 into an index fund. &lt;strong&gt;He tied up cash in a non-performing asset.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’m going to repeat this one more time for emphasis, because it’s so crucial:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tying up your cash&lt;/strong&gt; in a nonperforming or weak-performing asset carries a giant freakin’ opportunity cost.&lt;/p&gt;
&lt;p&gt;Can I repeat that again?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Actually, can you tattoo that on your forehead?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Tying up your cash in a nonperforming or weak-performing asset … sucks.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7878&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/IMG_5957-e1448332869773.jpg&quot; alt=&quot;The cost of keeping your cash tied up&quot; width=&quot;700&quot; height=&quot;525&quot;/&gt;&lt;/p&gt;
&lt;p&gt;[Quick tangent: Many real estate investors cite this to support “no-money-down,” high-leverage strategies. But this (1) costs higher interest rates, (2) costs mortgage insurance, and (3) creates a frightening risk profile. Anyway, this &lt;em&gt;isn’t&lt;/em&gt; an article about real estate investing, and most primary-residence homeowners want to build equity, so I’ll stop this tangent.]&lt;/p&gt;
&lt;p&gt;Back to Owen and Rachel:&lt;/p&gt;
&lt;p&gt;To be clear, &lt;em&gt;both&lt;/em&gt; of them paid an opportunity cost. And in this specific example, with a specific set of assumptions, &lt;strong&gt;their overall net result was the same.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;“But I’m a Special Snowflake!”&lt;/h2&gt;
&lt;p&gt;“My situation is different,” you might be thinking. “My HOA is lower. I’m in a higher tax bracket. I can qualify for 4.5 percent interest instead of 5 percent.”&lt;/p&gt;
&lt;p&gt;Yeah. &lt;em&gt;That’s the point.&lt;/em&gt;&lt;br/&gt;&lt;strong&gt;&lt;br/&gt;The myth that “renting is throwing your money away” misses this nuance and detail.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Don’t oversimplify the biggest purchase of your life by claiming that building equity is always superior.&lt;/p&gt;


&lt;p&gt;You’re purchasing equity. And every purchase carries a tradeoff. When you buy equity, you necessarily &lt;em&gt;don’t&lt;/em&gt; buy something else. Every dollar holds an opportunity cost.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Oh, don’t make me say it —)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://affordanything.com/2015/08/29/the-12-essential-lessons-i-want-to-share-about-money-and-life/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;You can afford anything, but not everything.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(There! I said it!)&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;“But I’m the Special-est Snowflake of All!”&lt;/h2&gt;
&lt;p&gt;[&lt;strong&gt;UPDATE 11/30/2015:&lt;/strong&gt; I’m getting flack from a lot of Special Snowflakes in the comments. Their arguments are along the lines of: &lt;em&gt;“Waahh! I’m such a special snowflake! Your hypothetical illustration should have precisely reflected MY situation!”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Are you having that same thought? Re-read this Special Snowflake section.&lt;/p&gt;
&lt;p&gt;The headline of this article isn’t:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“Housing might be a good deal if your interest rate is 4 percent instead of 5 percent!”&lt;/li&gt;
&lt;li&gt;“Housing might be a good deal if you live there until you die!”&lt;/li&gt;
&lt;li&gt;“Housing might be a good deal if the P/R ratio in your area is less than 15!”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Stop griping about the fact that your specific life doesn’t match the example. You &lt;em&gt;personally&lt;/em&gt; may not have HOA fees, but that’s not true for everyone. &lt;strong&gt;Furthermore, it’s irrelevant.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Your Special Snowflake circumstances don’t change the fact that everyone is responsible for analyzing their own variables. Don’t base the biggest purchase of your life on an intellectually lazy cliche.&lt;/p&gt;
&lt;p&gt;In this article:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I give you the &lt;strong&gt;exact tools and steps&lt;/strong&gt; to run these numbers for yourself.&lt;/li&gt;
&lt;li&gt;I give you a &lt;strong&gt;framework for understanding&lt;/strong&gt; the myriad of variables that play into this decision.&lt;/li&gt;
&lt;li&gt;I &lt;strong&gt;empower you&lt;/strong&gt; to conduct your own analysis and make your own decision, based on your own circumstances, rooted in logic and math.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Many people will grasp the lesson. And they’ll be richer for it.&lt;/p&gt;
&lt;p&gt;Others, unfortunately, lack the ability to wade out of the details of a hypothetical illustration.&lt;/p&gt;
&lt;p&gt;They’re more focused on nit-picking the deviations between themselves and one illustrative example — &lt;em&gt;“waaahhh! my HOA is smaller!”&lt;/em&gt; — that they miss the bigger point.&lt;/p&gt;
&lt;p&gt;And in doing so, they shortchange themselves from an opportunity to learn.&lt;/p&gt;
&lt;p&gt;The next time you get social pressure to “stop throwing money away on rent,” come back to this article. &lt;a href=&quot;http://www.nytimes.com/interactive/2014/upshot/buy-rent-calculator.html?_r=0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Crunch the numbers,&lt;/a&gt; using a calculator that lets you input a wide variety of variables.&lt;/p&gt;
&lt;p&gt;Wealthy people think for themselves. Mediocre people cave to social pressure and lazy cliches.&lt;/p&gt;


&lt;h2&gt;Three FAQ’s About Rachel and Owen&lt;/h2&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;“Why is Owen paying 5 percent interest? Aren’t today’s interest rates around 4.6 percent? That’s a 0.4 percent difference!!”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s learn history, shall we?&lt;/p&gt;
&lt;p&gt;From 1971 to 2015, &lt;a href=&quot;http://www.freddiemac.com/pmms/pmms30.htm&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;mortgage interest rates (APY)&lt;/a&gt; ranged from a low of 4.6 percent to a high of 16.63 percent. During the majority of those years, average mortgage interest rates spanned between 6 to 10 percent.&lt;/p&gt;
&lt;p&gt;If you object that Owen’s 5 percent interest rate seems outlandishly high, &lt;em&gt;learn history. &lt;/em&gt;Owen’s interest rate reflects a near-record-breaking historical low.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em&gt;“Why do they both move out in 10 years? They should live their homes until they die!”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From 2001 to 2011, the average American stayed in their homes for &lt;a href=&quot;http://www.creditsesame.com/blog/how-long-are-americans-staying-in-their-homes/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;only 6 to 9 years&lt;/a&gt;. If you object that the Rachel vs. Owen comparison should have assumed they’d live there until they die, &lt;em&gt;look at behavioral data.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;“Rachel’s landlord needs to make money. How could he/she possibly earn a profit under this scenario?”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are many ways Rachel’s landlord could benefit:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The landlord could purchase the property at a steep discount, such as through a foreclosure auction, short sale, estate sale, or by “driving for dollars” (making direct contact with the owners of distressed property.) This allows him/her to purchase the property significantly below market value.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The landlord could be holding the property for the sake of inflation-protected wealth preservation, rather than as a cash flow investment. (Don’t assume all landlords share the goal of cash flow. Some simply want to diversify their assets.)&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The landlord could be making a speculative play on potential appreciation. (I don’t recommend this technique, but many landlords do this.)&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The landlord could have inherited the property.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The landlord could have purchased the property decades ago, paid off the mortgage, and now enjoys the cash flow. They don’t want to sell/trade into a different property due to the hassle involved, so they let this property ride.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Okay, tangent finished. Back to our regularly-scheduled article, already in progress …&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Argument #2: Rent is Forever. Mortgages End.&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Don’t worry. This next section won’t be as math-y.&lt;/p&gt;
&lt;p&gt;Let’s revisit the beginning of this article. There are three arguments that justify the “renting is throwing your money away” myth:&lt;/p&gt;
&lt;p&gt;#1: Rent is an expense. Mortgages build equity.&lt;/p&gt;
&lt;p&gt;#2: Rent is forever. Mortgages end.&lt;/p&gt;
&lt;p&gt;#3: Renters don’t benefit from rising home values. Homeowners do.&lt;/p&gt;
&lt;p&gt;We’ve dismantled the first argument. Let’s deep-dive into the second: “You’ll pay rent forever. Your mortgage will eventually end.”&lt;/p&gt;
&lt;p&gt;Here’s the breakdown:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you rent, you’ll always make rent payments.&lt;/li&gt;
&lt;li&gt;If you own, you’ll pay off your mortgage within 15-30 years.&lt;/li&gt;
&lt;li&gt;Fewer payments are better than more payments.&lt;/li&gt;
&lt;li&gt;Therefore, owning is better than renting.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Flawed logic strikes again.&lt;/p&gt;
&lt;p&gt;This reasoning presupposes that &lt;strong&gt;your mortgage is your only payment&lt;/strong&gt;. That’s plain wrong.&lt;/p&gt;
&lt;p&gt;After you purchase 100% home equity, you own your home “free-and-clear.” This does &lt;em&gt;not&lt;/em&gt; mean that you’ll never spend another dime on your home again. It merely means that you no longer need to make &lt;strong&gt;principal and interest payments&lt;/strong&gt;, which are known as “P&amp;amp;I.”&lt;/p&gt;
&lt;p&gt;However, P&amp;amp;I are only one of many home-related expenses. Your other costs include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Maintenance&lt;/li&gt;
&lt;li&gt;Repairs&lt;/li&gt;
&lt;li&gt;Renovations / Depreciation&lt;/li&gt;
&lt;li&gt;Property taxes&lt;/li&gt;
&lt;li&gt;Homeowner’s insurance&lt;/li&gt;
&lt;li&gt;Utility bills&lt;/li&gt;
&lt;li&gt;Municipal usage fees (water, sewer, trash)&lt;/li&gt;
&lt;li&gt;Homeowner association dues (if applicable)&lt;/li&gt;
&lt;li&gt;Transaction fees, commissions and closing costs&lt;/li&gt;
&lt;li&gt;Opportunity costs&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;How much can this cost? Depending on where you live, those expenses could cost &lt;strong&gt;&lt;em&gt;equal to or more than rent&lt;/em&gt;&lt;/strong&gt; on a comparable property.&lt;/p&gt;
&lt;p&gt;Here’s an example for a $300,000 single-family home owned for 10 years:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Maintenance:&lt;/strong&gt; $50/month&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repairs / Renovations:&lt;/strong&gt; $250/month (1 percent of property value per year; includes major capital expenditures)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Property taxes:&lt;/strong&gt; $300/month (1.3 percent of property value per year)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Homeowner’s insurance:&lt;/strong&gt; $125/month (0.5 percent of property value per year)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utility bills:&lt;/strong&gt; $50/month (beyond what a landlord covers in a comparable rental)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Municipal usage fees:&lt;/strong&gt; $75/month&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HOA dues:&lt;/strong&gt; $250/month&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transaction fees:&lt;/strong&gt; $166/month (combined total of $20,000 out-of-pocket closing costs from both buying and selling with a 120-month holding period)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opportunity costs:&lt;/strong&gt; $315/month (investment of a $60,000 down payment at a growth rate of 5 percent after inflation compounding annually; subtract the initial contribution and divide over 120 months, calculated via investor.gov)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Total cost: $1,581 per month.&lt;/p&gt;
&lt;p&gt;In this example, owning a $300,000 home “free-and-clear” for 10 years costs $1,581 per month &lt;em&gt;without&lt;/em&gt; a mortgage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key takeaway:&lt;/strong&gt; Your principal and interest payments are not the total picture. Not by a long shot.&lt;/p&gt;
&lt;p&gt;[Quick tangent: Unfortunately, many investors don’t do their homework. They jump blindly into the waters, assuming “if the rent covers the mortgage, I’m cool.” Then they lose their shirt.]&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-7881&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Your-mortgage-payments-are-only-a-small-piece-of-your-total-housing-costs.jpg&quot; alt=&quot;Your mortgage payments are only a small piece of your total housing costs.&quot; width=&quot;700&quot; height=&quot;525&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Your-mortgage-payments-are-only-a-small-piece-of-your-total-housing-costs.jpg 2048w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Your-mortgage-payments-are-only-a-small-piece-of-your-total-housing-costs-300x225.jpg 300w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Your-mortgage-payments-are-only-a-small-piece-of-your-total-housing-costs-1024x768.jpg 1024w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Your-mortgage-payments-are-only-a-small-piece-of-your-total-housing-costs-320x240.jpg 320w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Humans have many cognitive biases in our understanding of money. One of these biases is that we emphasize &lt;strong&gt;cash flow&lt;/strong&gt; rather than the whole picture.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When money leaves our bank account (e.g., paying bills), we feel the pain. &lt;em&gt;It hurts! It hurts!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;When expenses are “invisible” (e.g., opportunity cost), we ignore it. &lt;em&gt;You don’t miss what you never had.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;When expenses are lump-sum (e.g., replacing the roof, windows, siding, floors, garage door, etc.), we convince ourselves that our monthly costs are absent of those figures. &lt;em&gt;“My costs are only $600 per month. Oh, and once every 20 years, I pay an extra $55,000.”&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In the example above, you won’t literally watch $1,581 depart your bank account every month. At least $731 of that figure comes in the form of intangibles or lump-sums, which means you’ll only see around $850 per month leave your checking account.&lt;/p&gt;
&lt;p&gt;When that happens, it’s easy to fall into the cognitive trap of assuming that cash flow is the whole story. “&lt;em&gt;My expenses are only $850 per month!”&lt;/em&gt; But it’s not.&lt;/p&gt;
&lt;p&gt;Cash flow is a chapter in the novel. An important one. But as the Chief Human Responsible for Your Money, your job is to read and understand the whole book.&lt;/p&gt;
&lt;p&gt;Zoom out and look at the big picture; make decisions accordingly.&lt;/p&gt;
&lt;p&gt;In fact, if there’s one broad lesson from this entire article, it’s this: &lt;strong&gt;zoom out.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you zoom out and look at the larger picture –inflation, investment gains, opportunity costs, legacy-building – you’ll start making smarter choices.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7880&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/zoom-out-and-look-at-the-big-picture-e1448335594307.jpg&quot; alt=&quot;Zoom out. Look at the big picture.&quot; width=&quot;700&quot; height=&quot;467&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Back to the debunking the “rent is forever; your mortgage is not” argument:&lt;/p&gt;
&lt;p&gt;Yes, your P&amp;amp;I payments will disappear after 15-30 years. But you’ll always pay for maintenance, taxes, insurance, renovations, care and operations of that house.&lt;/p&gt;
&lt;p&gt;You’ll never be finished with home payments. Regardless of whether you rent or own, &lt;strong&gt;you’ll spend your life paying for housing&lt;/strong&gt; in one form or another.&lt;/p&gt;
&lt;p&gt;Death and taxes. And housing. And socks. These are life’s few certainties.&lt;/p&gt;
&lt;div id=&quot;attachment_7882&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;wp-image-7882 size-full&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Death-and-taxes-and-socks-e1448336076856.jpg&quot; alt=&quot;Death and taxes. And socks. You'll need socks.&quot; width=&quot;700&quot; height=&quot;470&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;You’ll still need socks.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The question, then, isn’t: “How can I escape this perpetual payment?”&lt;/p&gt;
&lt;p&gt;The question is: “&lt;em&gt;Which&lt;/em&gt; of these two perpetual payments is more desirable? Would I rather pay rent in perpetuity? Or would I rather pay homeownership costs forever?”&lt;/p&gt;
&lt;p&gt;Before you can answer that question, you’ll need to see which of those two numbers is bigger. And depending on where you live – Detroit or San Francisco? — the answer could go either way.&lt;/p&gt;
&lt;p&gt;The myth that “renting is throwing money away” ignores the simple fact that the cost of rent, &lt;em&gt;&lt;strong&gt;relative to the price of the property&lt;/strong&gt;,&lt;/em&gt; occupies a HUGE range nationwide.&lt;/p&gt;
&lt;p&gt;In some parts of the country, you can rent a $300,000 house for substantially less than $1,581 per month. Heck, the landlord will even throw in a free TV and send you a $25 Starbucks gift card.&lt;/p&gt;
&lt;p&gt;In other parts of the country, you can’t dream of touching a property like this for less than $3,000+ per month in rent.&lt;/p&gt;
&lt;p&gt;And this leads us to today’s actionable lesson: &lt;strong&gt;Check the price-to-rent ratio&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Don’t be a zombie who listens to oversimplified clichés. Spend 30 seconds doing a little bit of math.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Meth?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;No, math.&lt;/p&gt;
&lt;p&gt;The formula for calculating price-to-rent is (predictably) the price divided by annual rent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Price:&lt;/strong&gt; $300,000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rent:&lt;/strong&gt; $1,500 per month = $18,000 per year&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Price-to-Rent Ratio&lt;/strong&gt; = $300,000/$18,000 = 16.6&lt;/p&gt;
&lt;p&gt;Cool. So what does that number mean?&lt;/p&gt;
&lt;p&gt;Here are a few rules of thumb:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the P/R ratio is greater than 20, hesitate before buying the house.&lt;/li&gt;
&lt;li&gt;If the P/R ratio is greater than 25, don’t buy the house unless you have strong non-financial reasons.&lt;/li&gt;
&lt;li&gt;If the P/R ratio is greater than 30, run screaming in the other direction.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A house with a P/R ratio of 25 would equal a $300,000 house that rents for $1,000 per month. Or a $100,000 house that rents for $333 per month. Yeowch. That’s painful.&lt;/p&gt;
&lt;p&gt;[To put this into perspective, my bare-minimum-criteria for any rental property that I purchase is a P/R ratio of 8.33.]&lt;/p&gt;
&lt;p&gt;In the Rachel vs. Owen example, their homes carry a P/R ratio of 15.5.&lt;/p&gt;
&lt;p&gt;Fun facts about P/R ratios you can use to impress your friends:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The average is 11.95 nationwide.&lt;/li&gt;
&lt;li&gt;The median is 11.27 nationwide.&lt;/li&gt;
&lt;li&gt;Nationwide, P/R ratios range from a low of 2.84 (awesome for owners) to a jaw-dropping high of 46.38 (fantastic for renters).&lt;/li&gt;
&lt;li&gt;The highest P/R ratios (best spots to be a renter) are in southern California and the northeastern states, particularly in major cities with concentrated business clusters such as San Francisco, Seattle, and New York.&lt;/li&gt;
&lt;li&gt;The lowest P/R ratios (best spots to be an owner) are in the land-locked states. Many of the larger non-coastal cities, like Chicago, Atlanta, Miami, Phoenix and Las Vegas, hold P/R ratios favorable to owners.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When you’re calculating P/R ratio, follow these steps:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use the “total acquisition cost” – including purchase price, closing costs, and (if needed) upfront repairs to make the space minimally viable (e.g. if you bought a fixer-upper).&lt;/li&gt;
&lt;li&gt;Run three calculations: best-case, worst-case and mid-case.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;Purchase price: $440,000&lt;/p&gt;
&lt;p&gt;Upfront repairs: $10,000&lt;/p&gt;
&lt;p&gt;Closing: $5,000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Total Acquisition Cost:&lt;/strong&gt; $455,000&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Worst-Case Rent: $1,800 /mo = $21,600/year&lt;/li&gt;
&lt;li&gt;Mid-Case Rent: $2,000 /mo = $24,000/year&lt;/li&gt;
&lt;li&gt;Best-Case Rent: $2,200 /mo = $26,400/year&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Worst-Case P/R ratio: 21.06&lt;/li&gt;
&lt;li&gt;Mid-Case P/R ratio: 18.95&lt;/li&gt;
&lt;li&gt;Best-Case P/R ratio: 17.23&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In this example, we have a property that would obviously make a terrible real estate investment. A quick glance at the numbers makes that abundantly clear.&lt;/p&gt;
&lt;p&gt;But it’s a viable candidate for a primary residence, given that the P/R ratio still points in favor of owning. It dances on the edge of the razor blade, but the balance tips in favor of ‘buy.’&lt;/p&gt;
&lt;p&gt;So anyway –&lt;/p&gt;
&lt;p&gt;Now that I’ve given you some homework, let’s circle back to the justification that launched this conversation:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“You’ll pay rent forever. Your mortgage will eventually end.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That’s false. &lt;em&gt;Nothing&lt;/em&gt; ends.&lt;/p&gt;
&lt;p&gt;You’ll be making house payments until the day you die.&lt;/p&gt;
&lt;p&gt;(Sorry. But it’s true.)&lt;/p&gt;
&lt;p&gt;(Hey, I’m available for parties!)&lt;/p&gt;
&lt;p&gt;Here’s the smarter question that you should ask yourself: Will it be cheaper in the long-term to maintain a home or keep paying rent?&lt;/p&gt;
&lt;p&gt;The answer is influenced by:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Where you live&lt;/li&gt;
&lt;li&gt;What “income bracket” of housing you prefer&lt;/li&gt;
&lt;li&gt;The length of time you’ll hold onto the home&lt;/li&gt;
&lt;li&gt;The ancillary costs of homeownership&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To find your answer, check out &lt;strong&gt;the price-to-rent ratio,&lt;/strong&gt; and weigh those four other factors I’ve listed above.&lt;/p&gt;


&lt;h2&gt;&lt;strong&gt;Argument #3: “Renters don’t benefit from rising home values. Owners do.”&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;At this point, we’ve tackled two of the three misguided justifications for the cliché that “renting is throwing your money away.”&lt;/p&gt;
&lt;p&gt;#1: Rent is an expense. Mortgages build equity. – Debunked!&lt;/p&gt;
&lt;p&gt;#2: Rent is forever. Mortgages end. – Busted!&lt;/p&gt;
&lt;p&gt;Let’s tackle the final rationalization: “Renters don’t benefit from rising home values. Owners do.”&lt;/p&gt;
&lt;p&gt;Here’s the argument, broken down:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Home values rise over time.&lt;/li&gt;
&lt;li&gt;Rising values result in equity gains&lt;em&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Homeowners benefit from equity gains.&lt;/li&gt;
&lt;li&gt;Renters don’t.
&lt;ul&gt;&lt;li&gt;In fact, renters are penalized, because equity gains correlate with rising rents.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Therefore, owning is better than renting.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Let’s dissect this argument. We’ll start with a deep-dive into the concept of equity.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7883&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/what-is-equity-e1448336867431.jpg&quot; alt=&quot;What is equity?&quot; width=&quot;700&quot; height=&quot;495&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;“Mommy, where does equity come from?”&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Equity is created in three ways:&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;#1: Principal Reductions.&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Imagine that you sell junk on Craigslist. You earn an extra $500. You use this to make an extra mortgage payment. Congratulations – you now have an extra $500 worth of home equity.&lt;/p&gt;
&lt;p&gt;This is called “principal reduction.” You’re trading cash for equity.&lt;/p&gt;
&lt;p&gt;Every dollar that you spend on principal reduction carries an &lt;em&gt;opportunity cost&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We talked about this at length earlier, so let’s move on to two other types of equity gains.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;#2: Forced Appreciation.&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Imagine that you get a $10,000 bonus at work. Hooray!&lt;/p&gt;
&lt;p&gt;You use this money to upgrade your kitchen. You’re an excellent manager, and you oversee a hyper-profitable renovation.&lt;/p&gt;
&lt;p&gt;Your home is now worth $20,000 more, even though you only made a $10,000 investment. You’ve doubled your money.&lt;/p&gt;
&lt;p&gt;Half this added value came from trading-cash-for-equity. But the other $10,000 came from &lt;em&gt;forced appreciation&lt;/em&gt;, which is the result of knowledgeable, skilled management.&lt;/p&gt;
&lt;p&gt;Forced appreciation comes from choosing the right property and managing it correctly. This is a real estate investor’s bread-and-butter.&lt;/p&gt;
&lt;p&gt;Talented investors don’t sit around, hoping that the market might rise in value. They take matters into their own hands. They spend $X to remodel a home, create a value that’s greater than $X, and pocket the spread — either through higher rental income or via sales.&lt;/p&gt;
&lt;p&gt;Here’s the question: Do you have what it takes to force appreciation?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Yeah, of course. I oversaw a bathroom remodel last year.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Well — that’s not exactly the same thing.&lt;/p&gt;
&lt;p&gt;Smart investors don’t spend money based on personal desires – “&lt;em&gt;I’ve always loved this deep-blue granite!” &lt;/em&gt;They make informed, rational decisions based on profit and loss. (&lt;a href=&quot;http://affordanything.com/2015/08/07/behind-the-scenes-how-i-manage-real-estate-from-around-the-globe/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Remember this story?&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Investors &lt;em&gt;don’t&lt;/em&gt; say things like:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“I love these maple cabinets!”&lt;/li&gt;
&lt;li&gt;“This hardwood would look great with our furniture.”&lt;/li&gt;
&lt;li&gt;“Let’s wallpaper the living room’s accent wall!”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Homeowners, by contrast, often make renovation decisions based on their personal tastes. This is a &lt;em&gt;far&lt;/em&gt; less profitable strategy.&lt;/p&gt;
&lt;p&gt;Forcing appreciation is a skill – just as playing guitar, dribbling a basketball and speaking Spanish are skills.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key takeaway:&lt;/strong&gt; You can create equity through forced appreciation. But don’t assume you’ll hit a home run on your first swing. You’ll need skill and strategy first.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;#3: Market Gains.&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Market-based equity gains come from growth in the overall housing market.&lt;/p&gt;
&lt;p&gt;Let’s say that you buy a house in January for $100,000. By December, that house is worth $102,000. Congratulations – you’ve gained $2,000 in equity.&lt;/p&gt;
&lt;p&gt;Sounds amazing, right? Who doesn’t love something-for-nothing?&lt;/p&gt;
&lt;p&gt;But here’s the tough truth about market gains: &lt;strong&gt;You’re outta control.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The housing market might rise, might fall, or might stagnate. It might do a combination of all three.&lt;/p&gt;
&lt;p&gt;If home values climb, they may rise at a long-term annualized rate of 2 percent, 3 percent, 4 percent. Or maybe 10 percent. Who knows? There’s nothing you can do to affect these results.&lt;/p&gt;
&lt;p&gt;Sure, you can purchase a home in a neighborhood that shows signs of appreciation: lots of new construction, permits and jobs are usually a good sign. Unless, of course, it’s 2007 and supply has drastically outpaced demand. Then you’re screwed.&lt;/p&gt;
&lt;p&gt;You can’t control market gains. You have no influence over timing, scale, or direction.&lt;/p&gt;
&lt;p&gt;“Buy-and-pray” is not a wealth strategy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key takeaway:&lt;/strong&gt; &lt;a href=&quot;http://affordanything.com/2013/02/27/hope-is-not-a-plan/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hope is not a plan&lt;/a&gt;. And it shouldn’t drive a six-figure decision.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7884&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/dont-let-speculation-drive-your-financial-decisions-e1448338434932.jpg&quot; alt=&quot;Don't let speculation drive your financial decisions&quot; width=&quot;700&quot; height=&quot;520&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Back to the original argument: “Renters don’t benefit from rising home values. Owners do.”&lt;/p&gt;
&lt;p&gt;Rising home values come from three sources:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Principal reductions&lt;/li&gt;
&lt;li&gt;Forced appreciation&lt;/li&gt;
&lt;li&gt;Market gains&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;What’s the cost of these?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;One requires opportunity cost.&lt;/li&gt;
&lt;li&gt;One requires skill.&lt;/li&gt;
&lt;li&gt;One is outside of your control and historically keeps pace with inflation.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I’d hardly call this a “benefit.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“But renters get nothing at all. At least owners are getting some equity.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Let’s return to that conversation about opportunity costs. Renters are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Not tying up cash in a downpayment&lt;/li&gt;
&lt;li&gt;Not tying up cash in renovations, repairs and maintenance&lt;/li&gt;
&lt;li&gt;Potentially paying lower monthly costs&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;By doing so, renters enjoy:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Greater flexibility&lt;/li&gt;
&lt;li&gt;Lower overhead&lt;/li&gt;
&lt;li&gt;Fewer responsibilities&lt;/li&gt;
&lt;li&gt;Opportunity to pursue higher returns elsewhere&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So … yeah. Plenty of benefits on both sides.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7893&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/When-is-renting-better-than-buying-a-home-e1448390626310.jpg&quot; alt=&quot;Should I buy or rent a home?&quot; width=&quot;700&quot; height=&quot;467&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Is Renting Better Than Buying?&lt;/h2&gt;
&lt;p&gt;What conclusions can we reach at the end of all of this?&lt;/p&gt;
&lt;p&gt;Should you keep renting? Is renting better than buying? Or should you purchase a home? Is buying the better choice?&lt;/p&gt;
&lt;p&gt;Your answer is going to depend on a &lt;em&gt;massive&lt;/em&gt; number of factors, including:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The local price-to-rent ratio.&lt;/li&gt;
&lt;li&gt;How long you’ll live there.&lt;/li&gt;
&lt;li&gt;Your alternative investment options.&lt;/li&gt;
&lt;li&gt;Your assumptions about inflation and investment gains.&lt;/li&gt;
&lt;li&gt;Maintenance, repair, insurance, property tax and capital expense costs.&lt;/li&gt;
&lt;li&gt;The rate at which rents rise.&lt;/li&gt;
&lt;li&gt;Et cetera, etc., etc.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You get the picture.&lt;/p&gt;
&lt;p&gt;My goal is to impress upon you — once and for all — that this myth that &lt;strong&gt;“renting is throwing money away”&lt;/strong&gt; is wrongheaded.&lt;/p&gt;
&lt;p&gt;In fact, it’s dangerous.&lt;/p&gt;
&lt;p&gt;It oversimplifies a life-changing, six-figure decision.&lt;/p&gt;
&lt;p&gt;It’s probably caused thousands (or millions) of people to buy houses they later regret.&lt;/p&gt;
&lt;p&gt;And it needs to stop.&lt;/p&gt;
&lt;p&gt;The next time you hear a friend or family member repeat one of these cliches — &lt;em&gt;“I’m tired of throwing money away on rent”&lt;/em&gt; — send them this article.&lt;/p&gt;
&lt;p&gt;And the next time you catch yourself thinking the same thing (because we’re social creatures who internalize pop-mythology), come back and re-read this.&lt;/p&gt;
&lt;p&gt;There’s no such thing as “throwing money away on rent” — not any more than you’re also throwing money away on cleaning gutters, paying property taxes, and for that matter, buying socks.&lt;/p&gt;
&lt;p&gt;If you’re a homeowner (like me) and you enjoy it, good for you.&lt;/p&gt;
&lt;p&gt;And if you’re a renter, stop feeling guilty.&lt;/p&gt;
&lt;p&gt;Next time, we’ll focus on a different ridiculous statement:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“I’ll skip dessert.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yeah, right. I’m going to prove that one wrong right now.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7886&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/ridiculous-statements-e1448339710176.jpg&quot; alt=&quot;Ridiculous statements&quot; width=&quot;700&quot; height=&quot;467&quot;/&gt;&lt;/p&gt;


&lt;p&gt;**************&lt;br/&gt;Take action!&lt;/p&gt;
&lt;div&gt;&lt;img class=&quot;alignnone size-full wp-image-8750&quot; src=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Renting-is-throwing-money-away-right-2.png&quot; alt=&quot;Torn between whether you should rent or buy a home? Many people think renting is tossing money out the window, but a home isn't an investment, either.&quot; width=&quot;735&quot; height=&quot;1100&quot; data-pin-description=&quot;Most people think renting is throwing money away. After all, you're not building equity in an asset, right? That's the wrong way to think. The truth is, there's no such thing as throwing money away on rent - not any more than you're throwing money away on cleaning gutters, property taxes, or insurance.&quot; srcset=&quot;https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Renting-is-throwing-money-away-right-2.png 735w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Renting-is-throwing-money-away-right-2-200x300.png 200w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Renting-is-throwing-money-away-right-2-684x1024.png 684w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Renting-is-throwing-money-away-right-2-600x898.png 600w, https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Renting-is-throwing-money-away-right-2-300x449.png 300w&quot; sizes=&quot;(max-width: 735px) 100vw, 735px&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;ck_form_container ck_inline&quot; data-ck-version=&quot;6&quot;&gt;
&lt;div class=&quot;ck_form ck_vertical_subscription_form&quot;&gt;
&lt;div class=&quot;ck_form_content&quot;&gt;
&lt;h3 class=&quot;ck_form_title&quot;&gt;Learn How To Escape the 9-5&lt;/h3&gt;
&lt;div class=&quot;ck_description&quot; readability=&quot;6&quot;&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;Get free updates on building wealth and living to the fullest.&lt;/p&gt;
&lt;p&gt;Zero spam.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Mon, 23 Apr 2018 00:19:42 +0000</pubDate>
<dc:creator>vinnyglennon</dc:creator>
<og:type>article</og:type>
<og:title>Renting is Throwing Money Away … Right?</og:title>
<og:description>I've heard a lot of ridiculous statements: 'I'm sure we'll find parking.' 'I'll just check Facebook for five minutes.' 'I'll skip dessert.' But perhaps the most absurd is the adage: 'If you're a renter, you're throwing money away.' Bulls**t. You've heard those statements, right? 'I'm sick of throwing money away on rent.' 'Buying is always better than renting.' 'Your home is your biggest investment.' I'm going to explain why these clichés are ludicrous. Preposterous. Outlandish. Nonsensical. (Somebody please take the thesaurus away from me.) Let's chat about the 'should I rent or buy?' question using logic, math and reason, rather</og:description>
<og:image>https://46482i1l8cde3vkptq1xh1r9-wpengine.netdna-ssl.com/wp-content/uploads/2015/11/Should-I-rent-or-buy-e1448321160415.jpg</og:image>
<og:url>https://affordanything.com/is-renting-better-than-buying-should-i-rent-or-buy/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://affordanything.com/is-renting-better-than-buying-should-i-rent-or-buy/</dc:identifier>
</item>
<item>
<title>You probably don&amp;#039;t need AI/ML. You can make do with well written SQL scripts</title>
<link>https://threadreaderapp.com/thread/987602838594445312.html</link>
<guid isPermaLink="true" >https://threadreaderapp.com/thread/987602838594445312.html</guid>
<description>&lt;p&gt;&quot;I feel so full,&quot; Jungkook moaned. The boy often emphasised his act in order to put on an amazing show, but he sincerely felt so pleasurable right now, especially with the low voiced male in mind. The boy pushed in further while thrusting his hips up, trying to create friction.&lt;/p&gt;
&lt;p&gt;&quot;You looks s-so good... Fuck,&quot; Yoongi responded. Precum oozed from his slit as his hand moved faster up and down, causing the pit in his stomach to grow. He groaned loudly while closing his eyes, focused on all the sounds; the moans, vibrating sounds, wet smacks and throaty sighs&lt;/p&gt;
&lt;p&gt;&quot;You... You sound so good,&quot; Jungkook responded, not entirely sure how to address the other, which he acknowledged with a moan. The boy's free hand started to shake as he wasn't sure what to do with it, he felt so good and wanted to touch himself, yet didn't want it to end.&lt;/p&gt;
</description>
<pubDate>Sun, 22 Apr 2018 21:56:43 +0000</pubDate>
<dc:creator>passenger</dc:creator>
<og:title>Thread by @cyberomin: &quot;It's always fun when I speak to founders and potential founders and they are quick to tell me how they want to use AI/ML to improve customer […]&quot;</og:title>
<og:image>https://threadreaderapp.com/images/screenshots/thread/987602838594445312.jpg</og:image>
<og:url>https://threadreaderapp.com/thread/987602838594445312.html</og:url>
<og:description>Thread by @cyberomin: &quot;It's always fun when I speak to founders and potential founders and they are quick to tell me how they want to use AI/ML to improve customer retention and improve LTV. Truth is, they don't even need ML. A properly writte […]&quot;</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://threadreaderapp.com/thread/987602838594445312.html</dc:identifier>
</item>
<item>
<title>A blockchain is a specific set of choices suitable for a narrow set of use-cases</title>
<link>https://threadreaderapp.com/thread/987266940887535616.html</link>
<guid isPermaLink="true" >https://threadreaderapp.com/thread/987266940887535616.html</guid>
<description>&lt;div readability=&quot;27.778481012658&quot;&gt;So I left &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/postdoc&quot;&gt;#postdoc&lt;/a&gt;, and I left &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/adjunct&quot;&gt;#adjunct&lt;/a&gt; and went into &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/industry&quot;&gt;#industry&lt;/a&gt;. There are two things I wish I knew when making this transition, and I hope it may help you...&lt;/div&gt;&lt;div readability=&quot;35.592760180995&quot;&gt;...I didn’t know what buzzwords to put on my resume to make it reflect, in &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/industry&quot;&gt;#industry&lt;/a&gt; terms, my skills. For &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/STEM&quot;&gt;#STEM&lt;/a&gt; academics, I’ve learned that a lot of what we do includes systems engineering, and project management...&lt;/div&gt;&lt;div readability=&quot;34.90243902439&quot;&gt;...now this may be obvious to some of you, esp the E part of &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/stem&quot;&gt;#stem&lt;/a&gt;, but I didn’t know this. I recommend looking up buzzwords for sys eng and project management...&lt;/div&gt;</description>
<pubDate>Sun, 22 Apr 2018 19:23:49 +0000</pubDate>
<dc:creator>BerislavLopac</dc:creator>
<og:title>Thread by @clemensv: &quot;I've talked to a lot of distributed systems engineers (who build cloud-scale stuff) from across the industry about blockchain. While most pl […]&quot;</og:title>
<og:image>https://threadreaderapp.com/images/screenshots/thread/987266940887535616.jpg</og:image>
<og:url>https://threadreaderapp.com/thread/987266940887535616.html</og:url>
<og:description>Thread by @clemensv: &quot;I've talked to a lot of distributed systems engineers (who build cloud-scale stuff) from across the industry about blockchain. While most platform folks I talked to are perfectly happy to help with frameworks that help s […]&quot;</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://threadreaderapp.com/thread/987266940887535616.html</dc:identifier>
</item>
<item>
<title>Parsing JSON is a Minefield</title>
<link>http://seriot.ch/parsing_json.php</link>
<guid isPermaLink="true" >http://seriot.ch/parsing_json.php</guid>
<description>&lt;p&gt;&lt;strong&gt;[2016-10-26]&lt;/strong&gt; First version of the article&lt;br /&gt;&lt;strong&gt;[2016-10-28]&lt;/strong&gt; Presentation at Soft-Shake Conference, Geneva (&lt;a href=&quot;http://seriot.ch/json/20161028_softshake_parsing_json.pdf&quot;&gt;slides&lt;/a&gt;)&lt;br /&gt;&lt;strong&gt;[2016-11-01]&lt;/strong&gt; Article and comments in &lt;a href=&quot;http://m.theregister.co.uk/2016/11/01/json_parsers_tested/&quot;&gt;The Register&lt;/a&gt;&lt;br /&gt;&lt;strong&gt;[2017-11-16]&lt;/strong&gt; Presentation at Black Alps Security Conference, Yverdon (&lt;a href=&quot;http://seriot.ch/resources/talks_papers/20171116_parsing_json_black_alps.pdf&quot;&gt;slides&lt;/a&gt;)&lt;br /&gt;&lt;strong&gt;[2018-03-09]&lt;/strong&gt; Presentation at Toulouse Hacking Conference (&lt;a href=&quot;http://seriot.ch/resources/talks_papers/20180309_json_toulouse.pdf&quot;&gt;slides&lt;/a&gt;)&lt;br /&gt;&lt;strong&gt;[2018-03-30]&lt;/strong&gt; Updated this article considering &lt;a href=&quot;https://tools.ietf.org/html/rfc8259&quot;&gt;RFC 8259&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feel free to comment on &lt;a href=&quot;https://news.ycombinator.com/item?id=12796556&quot;&gt;Hacker News&lt;/a&gt; or &lt;a href=&quot;https://www.reddit.com/r/programming/comments/59htn7/parsing_json_is_a_minefield/&quot;&gt;reddit&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Session Description&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;JSON is the de facto standard when it comes to (un)serialising and exchanging data in web and mobile programming. But how well do you really know JSON? We'll read the specifications and write test cases together. We'll test common JSON libraries against our test cases. I'll show that JSON is not the easy, idealised format as many do believe. Indeed, I did not find two libraries that exhibit the very same behaviour. Moreover, I found that edge cases and maliciously crafted payloads can cause bugs, crashes and denial of services, mainly because JSON libraries rely on specifications that have evolved over time and that left many details loosely specified or not specified at all.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#1&quot;&gt;JSON Specifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#2&quot;&gt;Parsing Tests&lt;/a&gt;&lt;br /&gt;2.1 &lt;a href=&quot;http://seriot.ch/parsing_json.php#21&quot;&gt;Structure&lt;/a&gt;&lt;br /&gt;2.2 &lt;a href=&quot;http://seriot.ch/parsing_json.php#22&quot;&gt;Numbers&lt;/a&gt;&lt;br /&gt;2.3 &lt;a href=&quot;http://seriot.ch/parsing_json.php#23&quot;&gt;Arrays&lt;/a&gt;&lt;br /&gt;2.4 &lt;a href=&quot;http://seriot.ch/parsing_json.php#24&quot;&gt;Objects&lt;/a&gt;&lt;br /&gt;2.5 &lt;a href=&quot;http://seriot.ch/parsing_json.php#25&quot;&gt;Strings&lt;/a&gt;&lt;br /&gt;2.6 &lt;a href=&quot;http://seriot.ch/parsing_json.php#26&quot;&gt;RFC 7159 Ambiguities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#3&quot;&gt;Testing Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#4&quot;&gt;Parsing Tests Results&lt;/a&gt;&lt;br /&gt;4.1 &lt;a href=&quot;http://seriot.ch/parsing_json.php#41&quot;&gt;Full Results&lt;/a&gt;&lt;br /&gt;4.2 &lt;a href=&quot;http://seriot.ch/parsing_json.php#42&quot;&gt;C Parsers&lt;/a&gt;&lt;br /&gt;4.3 &lt;a href=&quot;http://seriot.ch/parsing_json.php#43&quot;&gt;Objective-C Parsers&lt;/a&gt;&lt;br /&gt;4.4 &lt;a href=&quot;http://seriot.ch/parsing_json.php#44&quot;&gt;Apple (NS)JSONSerialization&lt;/a&gt;&lt;br /&gt;4.5 &lt;a href=&quot;http://seriot.ch/parsing_json.php#45&quot;&gt;Freddy (Swift)&lt;/a&gt;&lt;br /&gt;4.6 &lt;a href=&quot;http://seriot.ch/parsing_json.php#46&quot;&gt;Bash JSON.sh&lt;/a&gt;&lt;br /&gt;4.7 &lt;a href=&quot;http://seriot.ch/parsing_json.php#47&quot;&gt;Other Parsers&lt;/a&gt;&lt;br /&gt;4.8 &lt;a href=&quot;http://seriot.ch/parsing_json.php#48&quot;&gt;JSON Checker&lt;/a&gt;&lt;br /&gt;4.9 &lt;a href=&quot;http://seriot.ch/parsing_json.php#49&quot;&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#5&quot;&gt;Parsing Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#6&quot;&gt;STJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#7&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seriot.ch/parsing_json.php#8&quot;&gt;Appendix&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt; 1. JSON Specifications&lt;/h3&gt;
&lt;p&gt;JSON is the de facto serialization standard when it comes to sending data over HTTP, the &lt;em&gt;lingua franca&lt;/em&gt; used to exchange data between heterogeneous software, both in modern web sites and mobile applications.&lt;/p&gt;
&lt;p&gt;&quot;Discovered&quot; in 2001 &lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt;, JSON specification is so short and simple that Crockford created business cards with the whole JSON grammar on their back.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.seriot.ch/json/json_business_card.png&quot; alt=&quot;JSON Business Card&quot; border=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Pretty much all Internet users and programmers use JSON, yet few do actually agree on how JSON should actually work. The conciseness of the grammar leaves many aspects undefined. On top of that, several specifications exist, and their various interpretations tend to be murky.&lt;/p&gt;
&lt;p&gt;Crockford &lt;a href=&quot;https://www.computer.org/csdl/mags/co/2012/04/mco2012040006.html&quot;&gt;chose&lt;/a&gt; not to version JSON definition:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Probably the boldest design decision I made was to not put a version number on JSON so there is no mechanism for revising it. We are stuck with JSON: whatever it is in its current form, that’s it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yet JSON is defined in at least seven different documents:&lt;/p&gt;
&lt;ol readability=&quot;2.7503924646782&quot;&gt;&lt;li&gt;2002 - &lt;a href=&quot;http://www.json.org&quot;&gt;json.org&lt;/a&gt;, and the business card&lt;/li&gt;
&lt;li&gt;2006 - IETF &lt;a href=&quot;https://tools.ietf.org/html/rfc4627&quot;&gt;RFC 4627&lt;/a&gt;, which set the &lt;code&gt;application/json&lt;/code&gt; MIME media type&lt;/li&gt;
&lt;li&gt;2011 - &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.12&quot;&gt;ECMAScript 262, section 15.12&lt;/a&gt;&lt;/li&gt;
&lt;li readability=&quot;2.2727272727273&quot;&gt;
&lt;p&gt;2013 - &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt; according to Tim Bray (RFC 7159 editor), &lt;a href=&quot;https://www.tbray.org/ongoing/When/201x/2014/03/05/RFC7159-JSON&quot;&gt;ECMA rushed out to release it&lt;/a&gt; because:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&quot;Someone told the ECMA working group that the IETF had gone crazy and was going to rewrite JSON with no regard for compatibility and break the whole Internet and something had to be done urgently about this terrible situation. (...) It doesn’t address any of the gripes that were motivating the IETF revision.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li readability=&quot;5.8509316770186&quot;&gt;
&lt;p&gt;2014 - IETF &lt;a href=&quot;https://tools.ietf.org/html/rfc7158&quot;&gt;RFC 7158&lt;/a&gt; makes the specification &quot;Standard Tracks&quot; instead of &quot;Informational&quot;, allows scalars (anything other than arrays and objects) such as &lt;code&gt;123&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; at the root level as ECMA does, warns about bad practices such as duplicated keys and broken Unicode strings, without explicitely forbidding them, though.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;2014 - IETF &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;RFC 7159&lt;/a&gt; was released to fix a typo in RFC 7158, which was dated from &quot;March 2013&quot; instead of &quot;March 2014&quot;.&lt;/li&gt;
&lt;li&gt;2017 - IETF &lt;a href=&quot;https://tools.ietf.org/html/rfc8259&quot;&gt;RFC 8259&lt;/a&gt; was released in December 2017. It basically adds two things: 1) outside of closed eco-systems, JSON MUST be encoded in UTF-8 and 2) JSON text that is not networked transmitted MAY now add the byte ordrer mark &lt;code&gt;U+FEFF&lt;/code&gt;, although this is not stated explicitely.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Despite the clarifications they bring, RFC 7159 and 8259 contain several approximations and leaves many details loosely specified.&lt;/p&gt;
&lt;p&gt;For instance, RFC 8259 &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-1&quot;&gt;mentions&lt;/a&gt; that a design goal of JSON was to be &quot;a subset of JavaScript&quot;, but it's actually not. Specifically, JSON allows the Unicode line terminators &lt;code&gt;U+2028 LINE SEPARATOR&lt;/code&gt; and &lt;code&gt;U+2029 PARAGRAPH SEPARATOR&lt;/code&gt; to appear unescaped. But JavaScript specifies that strings cannot contains line terminators (&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4&quot;&gt;ECMA-262 - 7.8.4 String Literals&lt;/a&gt;), and line terminators include... &lt;code&gt;U+2028&lt;/code&gt; and &lt;code&gt;U+2029&lt;/code&gt; (&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-7.3&quot;&gt;7.3 Line Terminators&lt;/a&gt;). The single fact that these two characters are allowed without escape in JSON strings while they are not in JavaScript implies that JSON is &lt;strong&gt;not&lt;/strong&gt; a subset of JavaScript, despite the JSON design goals.&lt;/p&gt;
&lt;p&gt;Also, RFC 7159 is unclear about how a JSON parser should treat extreme number values, malformed Unicode strings, similar objects or handle recursion depth. Some corner cases are explicitely left free to implementations, while others suffer from contradictory statements.&lt;/p&gt;
&lt;p&gt;To illustrate the poor precision of RFC 7159, I wrote a corpus of JSON test files and documented how selected JSON parsers chose to handle these files. You'll see that deciding if a test file should be parsed or not is not always straightforward. In my findings, there were no two parsers that exhibited the same behaviour, which may cause serious interoperability issues.&lt;/p&gt;
&lt;h3&gt; 2. Parsing Tests&lt;/h3&gt;
&lt;p&gt;In this section, I explain how to create test files to validate parsers behaviour, discuss some interesting tests, and the rationale to decide if they should be accepted or rejected by RFC 7159 compliant parsers, or if parsers should be free to accept or reject the contents.&lt;/p&gt;
&lt;p&gt;File names start with a letter which tells the expected result: &lt;code&gt;y&lt;/code&gt; (yes) for parsing success, &lt;code&gt;n&lt;/code&gt; (no) for parsing error, and &lt;code&gt;i&lt;/code&gt; for implementation defined. They also give clues about which component of the parser is specifically tested.&lt;/p&gt;
&lt;p&gt;For instance, &lt;code&gt;n_string_unescaped_tab.json&lt;/code&gt; contains &lt;code&gt;[&quot;&lt;u&gt;09&lt;/u&gt;&quot;]&lt;/code&gt;, which is an array containing a string, which consists in the &lt;code&gt;TAB 0x09&lt;/code&gt; character, which MUST be u-escaped according to JSON specifications. Note how the underlined values represent the hex values of the bytes. This file specifically tests string parsing, hence the &lt;code&gt;string&lt;/code&gt; in file name, and not &lt;code&gt;structure&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt; or &lt;code&gt;object&lt;/code&gt;. According to RFC 7159, this is not a valid JSON string, hence the &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that since several parsers don't allow scalars at the top level (&lt;code&gt;&quot;test&quot;&lt;/code&gt;), I embed strings into arrays (&lt;code&gt;[&quot;test&quot;]&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You'll find more that 300 tests in the &lt;a href=&quot;https://github.com/nst/JSONTestSuite&quot;&gt;JSONTestSuite GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The test files were mostly handcrafted while reading specifications, trying to pay attention to edge cases and ambiguous parts. I also tried to reuse other test suites found on the Internet (mainly &lt;a href=&quot;https://code.google.com/archive/p/json-test-suite/&quot;&gt;json-test-suite&lt;/a&gt; and &lt;a href=&quot;http://www.json.org/JSON_checker/&quot;&gt;JSON Checker&lt;/a&gt;), but I found that most test suites did only cover basic cases.&lt;/p&gt;
&lt;p&gt;Finally, I also generated JSON files with the fuzzing software &lt;a href=&quot;http://lcamtuf.coredump.cx/afl/&quot;&gt;American Fuzzy Lop&lt;/a&gt;. I then removed redundant tests that produced the same set of results, and then reduced the remaining ones to the keep the least number of characters that triggered these results (see &lt;a href=&quot;http://seriot.ch/parsing_json.php#3&quot;&gt;section 3&lt;/a&gt;).&lt;/p&gt;
&lt;h4&gt; 2.1 Structure&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Scalars&lt;/strong&gt; - Clearly, scalars such as &lt;code&gt;123&lt;/code&gt; or &lt;code&gt;&quot;asd&quot;&lt;/code&gt; must be parsed. In practice, many popular parsers do still implement RFC 4627 and won't parse lonely values. So there are basic tests such as:&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_structure_lonely_string.json&lt;/td&gt;
&lt;td&gt;&quot;asd&quot;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Trailing commas&lt;/strong&gt; - Trailing commas such as in &lt;code&gt;[123,]&lt;/code&gt; or &lt;code&gt;{&quot;a&quot;:1,}&lt;/code&gt; are not part of the grammar, so these files should not pass, right? The thing is that RFC 8259 allows parsers to support &quot;extensions&quot; (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-9&quot;&gt;section 9&lt;/a&gt;), although it does not elaborates about extensions. In practice, allowing trailing commas is a common extension. Since it's not part of JSON grammar, parser &lt;em&gt;don't have&lt;/em&gt; to support it, so the file name starts with &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_trailing_comma.json&lt;/td&gt;
&lt;td&gt;{&quot;id&quot;:0,}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_several_trailing_commas.json&lt;/td&gt;
&lt;td&gt;{&quot;id&quot;:0,,,,,}&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Comments&lt;/strong&gt; - Comments are not part of the grammar. Crockford &lt;a href=&quot;https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr&quot;&gt;removed&lt;/a&gt; them from early specifications. Yet, they are still another common extension. Some parsers allow trailing comments &lt;code&gt;[1]//xxx&lt;/code&gt;, or even inline comments &lt;code&gt;[1,/*xxx*/2]&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_comments.json&lt;/td&gt;
&lt;td&gt;[&quot;a/*b*/c/*d//e&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_trailing_comment.json&lt;/td&gt;
&lt;td&gt;{&quot;a&quot;:&quot;b&quot;}/**/&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_object_with_comment.json&lt;/td&gt;
&lt;td&gt;{&quot;a&quot;:/*comment*/&quot;b&quot;}&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Unclosed Structures&lt;/strong&gt; - These tests cover everything that is opened and not closed or the opposite, such as &lt;code&gt;[&lt;/code&gt; or &lt;code&gt;[1,{,3]&lt;/code&gt;. They are clearly invalid and must fail.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_object_unclosed_no_value.json&lt;/td&gt;
&lt;td&gt;{&quot;&quot;:&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_object_followed_by_closing_object.json&lt;/td&gt;
&lt;td&gt;{}}&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Nested Structures&lt;/strong&gt; - Structures may contain other structures. An array may contain other arrays. The first element can be an array, whose first element is also an array, etc, like russian dolls &lt;code&gt;[[[[[]]]]]&lt;/code&gt;. RFC 8259 allows parsers to set limits to the maximum depth of nesting (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-9&quot;&gt;section 9&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In practice, several parsers don't set a depth limit and crash after a certain threshold. For example, Xcode itself will crash when opening a &lt;code&gt;.json&lt;/code&gt; file made the character &lt;code&gt;[&lt;/code&gt; repeated 10000 times, most probably because the JSON syntax highlighter does not implement a depth limit.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python -c &quot;print('['*100000)&quot; &amp;gt; ~/x.json
$ ./Xcode ~/x.json
Segmentation fault: 11
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;White Spaces&lt;/strong&gt; - RFC 7159 grammar defines white spaces as &lt;code&gt;0x20&lt;/code&gt; (space), &lt;code&gt;0x09&lt;/code&gt; (tab), &lt;code&gt;0x0A&lt;/code&gt; (line feed) and &lt;code&gt;0x0D&lt;/code&gt; (carriage return). It allows white spaces before and after &quot;structural characters&quot; &lt;code&gt;[]{}:,&lt;/code&gt;. So, we'll write passing tests like &lt;code&gt;&lt;u&gt;20&lt;/u&gt;[&lt;u&gt;090A&lt;/u&gt;]&lt;u&gt;0D&lt;/u&gt;&lt;/code&gt; and failing ones including all kinds of white spaces that are not explicitely allowed, such as &lt;code&gt;0x0C&lt;/code&gt; form feed or &lt;code&gt;[&lt;u&gt;E281A0&lt;/u&gt;]&lt;/code&gt;, which is the UTF-8 encoding for &lt;code&gt;U+2060 WORD JOINER&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_whitespace_formfeed.json&lt;/td&gt;
&lt;td&gt;[&lt;u&gt;0C&lt;/u&gt;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_whitespace_U+2060_word_joiner.json&lt;/td&gt;
&lt;td&gt;[&lt;u&gt;E281A0&lt;/u&gt;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_no_data.json&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h4&gt; 2.2 Numbers&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;NaN and Infinity&lt;/strong&gt; - Strings that describe special numbers such as &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;Infinity&lt;/code&gt; are not part of the JSON grammar. However, several parsers accept them, which can be considered as an &quot;extension&quot; (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-9&quot;&gt;section 9&lt;/a&gt;). Test files also test the negative forms &lt;code&gt;-NaN&lt;/code&gt; and &lt;code&gt;-Infinity&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_number_NaN.json&lt;/td&gt;
&lt;td&gt;[NaN]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_number_minus_infinity.json&lt;/td&gt;
&lt;td&gt;[-Infinity]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Hex Numbers&lt;/strong&gt; - RFC 7159 doesn't allow hex numbers. Tests will include numbers such as &lt;code&gt;0xFF&lt;/code&gt;, and these files should not be parsed.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_number_hex_2_digits.json&lt;/td&gt;
&lt;td&gt;[0x42]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Range and Precision&lt;/strong&gt; - What about numbers with a huge amount of digits? According to RFC 8259, &quot;A JSON parser MUST accept all texts that conform to the JSON grammar&quot; (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-9&quot;&gt;section 9&lt;/a&gt;). However, according to the same paragraph, &quot;An implementation may set limits on the range and precision of numbers.&quot;. So, it is unclear to me whether parsers are allowed to raise errors when they meet extreme values such &lt;code&gt;1e9999&lt;/code&gt; or &lt;code&gt;0.0000000000000000000000000000001&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_number_very_big_negative_int.json&lt;/td&gt;
&lt;td&gt;[-237462374673276894279832(...)&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;[Update 2016-11-02]&lt;/strong&gt; The original version of this article classified the &quot;Range and Precision&quot; tests as &lt;code&gt;y_&lt;/code&gt; (must pass). This classification was &lt;a href=&quot;https://github.com/nst/JSONTestSuite/issues/51&quot;&gt;challenged&lt;/a&gt; and I eventually changed the tests into &lt;code&gt;i_&lt;/code&gt; (implementation defined).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exponential Notation&lt;/strong&gt; - Parsing exponential notation can be surprisingly hard (see the results section). Here are some valid contents &lt;code&gt;[0E0]&lt;/code&gt;, &lt;code&gt;[0e+1]&lt;/code&gt; and invalid ones &lt;code&gt;[1.0e+]&lt;/code&gt;, &lt;code&gt;[0E]&lt;/code&gt; and &lt;code&gt;[1eE2]&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_number_0_capital_E+.json&lt;/td&gt;
&lt;td&gt;[0E+]&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_number_.2e-3.json&lt;/td&gt;
&lt;td&gt;[.2e-3]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_number_double_huge_neg_exp.json&lt;/td&gt;
&lt;td&gt;[123.456e-789]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h4&gt; 2.3 Arrays&lt;/h4&gt;
&lt;p&gt;Most edge cases regarding arrays are opening/closing issues and nesting limit. These cases were discussed in section &lt;a href=&quot;http://seriot.ch/parsing_json.php#21&quot;&gt;2.1 Structure&lt;/a&gt;. Passing tests will include &lt;code&gt;[[],[[]]]&lt;/code&gt;, while failing tests will be like &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;[[]]]&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;3&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_array_comma_and_number.json&lt;/td&gt;
&lt;td&gt;[,1]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_array_colon_instead_of_comma.json&lt;/td&gt;
&lt;td&gt;[&quot;&quot;: 1]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_array_unclosed_with_new_lines.json&lt;/td&gt;
&lt;td&gt;[1,&lt;u&gt;0A&lt;/u&gt;1&lt;u&gt;0A&lt;/u&gt;,1&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h4&gt; 2.4 Objects&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Duplicated Keys&lt;/strong&gt; - &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-4&quot;&gt;RFC 8259 section 4&lt;/a&gt; says that &quot;The names within an object should be unique.&quot;. It does not prevent parsing objects where the same key does appear several times &lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:2}&lt;/code&gt;, but lets parsers decide what to do in this case. The same section 4 even mentions that &quot;(some) implementations report an error or fail to parse the object&quot;, without telling clearly if failing to parse such objects is compliant or not with the RFC and especially &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-9&quot;&gt;section 9&lt;/a&gt;: &quot;A JSON parser MUST accept all texts that conform to the JSON grammar.&quot;.&lt;/p&gt;
&lt;p&gt;Variants of this special case include same key - same value &lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:1}&lt;/code&gt;, and similar keys or values, where the similarity depends on how you compare strings. For example, the keys may be binary different but equivalent according to Unicode NFC normalization, such as in &lt;code&gt;{&quot;&lt;u&gt;C3A9&lt;/u&gt;:&quot;NFC&quot;,&quot;&lt;u&gt;65CC81&lt;/u&gt;&quot;:&quot;NFD&quot;}&lt;/code&gt; where boths keys encode &quot;é&quot;. Tests will also include &lt;code&gt;{&quot;a&quot;:0,&quot;a&quot;:-0}&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;5&quot;&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_object_empty_key.json&lt;/td&gt;
&lt;td&gt;{&quot;&quot;:0}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_object_duplicated_key_and_value.json&lt;/td&gt;
&lt;td&gt;{&quot;a&quot;:&quot;b&quot;,&quot;a&quot;:&quot;b&quot;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_double_colon.json&lt;/td&gt;
&lt;td&gt;{&quot;x&quot;::&quot;b&quot;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_key_with_single_quotes.json&lt;/td&gt;
&lt;td&gt;{key: 'value'}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_missing_key.json&lt;/td&gt;
&lt;td&gt;{:&quot;b&quot;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_object_non_string_key.json&lt;/td&gt;
&lt;td&gt;{1:1}&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h4&gt; 2.5 Strings&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;File Encoding&lt;/strong&gt; - Former &lt;a href=&quot;https://tools.ietf.org/html/rfc7159#section-8.1&quot;&gt;RFC 7159&lt;/a&gt; did only recommend UTF-8, and said that &quot;JSON text SHALL be encoded in UTF-8, UTF-16, or UTF-32&quot;.&lt;/p&gt;
&lt;p&gt;Now RFC 8259 &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-8.1&quot;&gt;section 8.1&lt;/a&gt; says that &quot;JSON text exchanged between systems that are not part of a closed ecosystem MUST be encoded using UTF-8&quot;.&lt;/p&gt;
&lt;p&gt;Still, passing tests should include text encoded in these three encodings. UTF-16 and UTF-32 texts should also include both their big-endian and little-endian variants.&lt;/p&gt;
&lt;p&gt;The parsing of invalid UTF-8 will be implementation defined.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_utf16.json&lt;/td&gt;
&lt;td&gt;&lt;u&gt;FFFE&lt;/u&gt;[&lt;u&gt;00&lt;/u&gt;&quot;&lt;u&gt;00E900&lt;/u&gt;&quot;&lt;u&gt;00&lt;/u&gt;]&lt;u&gt;00&lt;/u&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_string_iso_latin_1.json&lt;/td&gt;
&lt;td&gt;[&quot;&lt;u&gt;E9&lt;/u&gt;&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;[Update 2016-11-04]&lt;/strong&gt; The first version of this article considered invalid UTF-8 as &lt;code&gt;n_&lt;/code&gt; tests. This classification was &lt;a href=&quot;https://github.com/nst/JSONTestSuite/issues/30&quot;&gt;challenged&lt;/a&gt; and I eventually changed these tests into &lt;code&gt;i_&lt;/code&gt; tests.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Byte Order Mark&lt;/strong&gt; - Former RFC 8259 &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-8.1&quot;&gt;section 8.1&lt;/a&gt; stated &quot;Implementations MUST NOT add a byte order mark to the beginning of a JSON text&quot;, &quot;implementations (...) MAY ignore the presence of a byte order mark rather than treating it as an error&quot;.&lt;/p&gt;
&lt;p&gt;Now, RFC 8259 &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-8.1&quot;&gt;section 8.1&lt;/a&gt; adds: &quot;Implementations MUST NOT add a byte order mark (&lt;code&gt;U+FEFF&lt;/code&gt;) to the beginning &lt;em&gt;of a networked-transmitted JSON text&lt;/em&gt;.&quot;, which seems to imply that implemenatations may now add a BOM when JSON is not sent over the network.&lt;/p&gt;
&lt;p&gt;Tests with implementation defined will include a plain UTF-8 BOM with no other content, a UTF-8 BOM with a UTF-8 string, but also a UTF-8 BOM with a UTF-16 string, and a UTF-16 BOM with a UTF-8 string.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;3&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_UTF8_BOM_no_data.json&lt;/td&gt;
&lt;td&gt;&lt;u&gt;EFBBBF&lt;/u&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_incomplete_UTF8_BOM.json&lt;/td&gt;
&lt;td&gt;&lt;u&gt;EFBB&lt;/u&gt;{}&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_structure_UTF-8_BOM_empty_object.json&lt;/td&gt;
&lt;td&gt;&lt;u&gt;EFBBBF&lt;/u&gt;{}&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Control Characters&lt;/strong&gt; - Control characters must be escaped, and are defined as &lt;code&gt;U+0000&lt;/code&gt; through &lt;code&gt;U+001F&lt;/code&gt; (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-7&quot;&gt;section 7&lt;/a&gt;). This range does not include &lt;code&gt;0x7F DEL&lt;/code&gt;, which may be part of other definitions of control characters (see &lt;a href=&quot;http://seriot.ch/parsing_json.php#46&quot;&gt;section 4.6 Bash JSON.sh&lt;/a&gt;). That is why passing tests include &lt;code&gt;[&quot;&lt;u&gt;7F&lt;/u&gt;&quot;]&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_string_unescaped_ctrl_char.json&lt;/td&gt;
&lt;td&gt;[&quot;a&lt;u&gt;09&lt;/u&gt;a&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_unescaped_char_delete.json&lt;/td&gt;
&lt;td&gt;[&quot;&lt;u&gt;7F&lt;/u&gt;&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_string_escape_x.json&lt;/td&gt;
&lt;td&gt;[&quot;\x00&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Escape&lt;/strong&gt; - &quot;All characters may be escaped&quot; (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-7&quot;&gt;section 7&lt;/a&gt;) like &lt;code&gt;\uXXXX&lt;/code&gt;, but some MUST be escaped: quotation mark, reverse solidus and control characters. Failing tests should include the escape character without the escaped value, or with an incomplete escaped value. Examples: &lt;code&gt;[&quot;\&quot;]&lt;/code&gt;, &lt;code&gt;[&quot;\&lt;/code&gt;, &lt;code&gt;[\&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_allowed_escapes.json&lt;/td&gt;
&lt;td&gt;[&quot;\&quot;\\/\b\f\n\r\t&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_structure_bad_escape.json&lt;/td&gt;
&lt;td&gt;[&quot;\&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The escape character can be used to represent codepoints in the Basic Multilingual Plane (&lt;code&gt;\u005C&lt;/code&gt;). Passing tests will include the zero character &lt;code&gt;\u0000&lt;/code&gt;, which may cause issues in C-based parsers. Failing tests will include capital U &lt;code&gt;\U005C&lt;/code&gt;, non-hexadecimal escaped values &lt;code&gt;\u123Z&lt;/code&gt; and incomplete escaped values &lt;code&gt;\u123&lt;/code&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;3&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_backslash_and_u_escaped_zero.json&lt;/td&gt;
&lt;td&gt;[&quot;\u0000&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_string_invalid_unicode_escape.json&lt;/td&gt;
&lt;td&gt;[&quot;\uqqqq&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_string_incomplete_escaped_character.json&lt;/td&gt;
&lt;td&gt;[&quot;\u00A&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Escaped Invalid Characters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Codepoints outside of the BMP are represented by their escaped UTF-16 surrogates: &lt;code&gt;U+1D11E&lt;/code&gt; becomes &lt;code&gt;\uD834\uDD1E&lt;/code&gt;. Passing tests will include single surrogates, since they are valid JSON according to the grammar. RFC 7159 &lt;a href=&quot;https://www.rfc-editor.org/errata_search.php?rfc=7159&amp;amp;eid=3984&quot;&gt;errata 3984&lt;/a&gt; raised the issue of grammatically correct escaped codepoints that don't encode Unicode characters.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;The ABNF cannot at the same time allow non conformant Unicode codepoints (section 7) and states conformance to Unicode (section 1).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The editors considered that the grammar should not be restricted, and that warning users about the fact that parsers behaviour was &quot;unpredictable&quot; (&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-8.2&quot;&gt;RFC 8259 section 8.2&lt;/a&gt;) was enough. In other words, parsers MUST parse u-escaped invalid codepoints, but the result is undefined, hence the &lt;code&gt;i_&lt;/code&gt; (implementation definded) prefix in the file name. According to the Unicode standard, invalid codepoints should be replaced by &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;. People familiar with &lt;a href=&quot;http://seriot.ch/resources/talks_papers/i_love_unicode_softshake.pdf&quot;&gt;Unicode complexity&lt;/a&gt; won't be surprised that this replacement is not mandatory, and can be done in several ways (see &lt;a href=&quot;http://unicode.org/review/pr-121.html&quot;&gt;Unicode PR #121: Recommended Practice for Replacement Characters&lt;/a&gt;). So several parsers use replacement characters, while other keep the escaped form or produce an non-Unicode character (see &lt;a href=&quot;http://seriot.ch/parsing_json.php#5&quot;&gt;Section 5 - Parsing Contents&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Update 2016-11-03]&lt;/strong&gt; In the first version of this article, I treated non-characters such as &lt;code&gt;U+FDD0&lt;/code&gt; to &lt;code&gt;U+10FFFE&lt;/code&gt; the same was as invalid codepoints (&lt;code&gt;i_&lt;/code&gt; tests). This classification was &lt;a href=&quot;https://github.com/nst/JSONTestSuite/issues/52&quot;&gt;challenged&lt;/a&gt; and I eventually changed the non-characters tests into &lt;code&gt;y_&lt;/code&gt; tests.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;6&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_accepted_surrogate_pair.json&lt;/td&gt;
&lt;td&gt;[&quot;\uD801\udc37&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_string_incomplete_escaped_character.json&lt;/td&gt;
&lt;td&gt;[&quot;\u00A&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_string_incomplete_surrogates_escape_valid.json&lt;/td&gt;
&lt;td&gt;[&quot;\uD800\uD800\n&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_string_lone_second_surrogate.json&lt;/td&gt;
&lt;td&gt;[&quot;\uDFAA&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_string_1st_valid_surrogate_2nd_invalid.json&lt;/td&gt;
&lt;td&gt;[&quot;\uD888\u1234&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;i_string_inverted_surrogates_U+1D11E.json&lt;/td&gt;
&lt;td&gt;[&quot;\uDd1e\uD834&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Raw non-Unicode Characters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The previous section discussed non-Unicode codepoints that appear in strings, such as &lt;code&gt;&quot;\uDEAD&quot;&lt;/code&gt;, which is valid Unicode in its u-escaped form, but doesn't decode into a Unicode character.&lt;/p&gt;
&lt;p&gt;Parsers also have to handle raw bytes that don't encode Unicode characters. For instance, the byte &lt;code&gt;&lt;u&gt;FF&lt;/u&gt;&lt;/code&gt; does not represent a Unicode character in UTF-8. As a consequence, a string containing &lt;code&gt;&lt;u&gt;FF&lt;/u&gt;&lt;/code&gt; is not an UTF-8 string. In this case, parsers should simply refuse to parse the string, because &quot;A string is a sequence of zero or more Unicode characters&quot; &lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-1&quot;&gt;RFC 8259 section 1&lt;/a&gt; and &quot;JSON text SHALL be encoded in Unicode &lt;a href=&quot;https://tools.ietf.org/html/rfc7159#section-8.1&quot;&gt;RFC 7159 section 8.1&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;monospace&quot; readability=&quot;2&quot;&gt;&lt;tr&gt;&lt;td class=&quot;fixedWidth&quot;&gt;y_string_utf8.json&lt;/td&gt;
&lt;td&gt;[&quot;€𝄞&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_string_invalid_utf-8.json&lt;/td&gt;
&lt;td&gt;[&quot;&lt;u&gt;FF&lt;/u&gt;&quot;]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;fixedWidth&quot;&gt;n_array_invalid_utf8.json&lt;/td&gt;
&lt;td class=&quot;grey&quot;&gt;[&lt;u&gt;FF&lt;/u&gt;]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;RFC 8259 Ambiguities&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Beyond the specific cases we just went through, finding out if a parser is RFC 8259 compliant or not is next to impossible because of &lt;a href=&quot;http://seriot.ch/parsing_json.php&quot;&gt;section 9 &quot;Parsers&quot;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;A JSON parser MUST accept all texts that conform to the JSON grammar. A JSON parser MAY accept non-JSON forms or extensions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To this point, I perfectly understand the RFC. All grammatically correct inputs MUST be parsed, and parsers are free to accept other contents as well.&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;An implementation may set limits on the size of texts that it accepts. An implementation may set limits on the maximum depth of nesting. An implementation may set limits on the range and precision of numbers. An implementation may set limits on the length and character contents of strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All these limitations sound reasonable (except maybe the one about &quot;character contents&quot;), but contradict the &quot;MUST&quot; from the previous sentence. &lt;a href=&quot;https://tools.ietf.org/html/rfc2119&quot;&gt;RFC 2119&lt;/a&gt; is crystal-clear about the meaning of &quot;MUST&quot;:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;MUST - This word, or the terms &quot;REQUIRED&quot; or &quot;SHALL&quot;, mean that the definition is an absolute requirement of the specification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RFC 7159 allows restrictions, but does not set minimal requirements, so technically speaking, a parser that cannot parse strings longer than 3 characters is still compliant with RFC 7159.&lt;/p&gt;
&lt;p&gt;Also, RFC 7159 section 9 should require the parsers to document the restrictions clearly, and/or allow configuration by the user. These configurations would still cause interoperability issues, that's why minimal requirements should be preferred.&lt;/p&gt;
&lt;p&gt;This lack of precision regarding allowed restrictions makes it almost impossible to say if a parser is actually RFC 7159 compliant. Indeed, parsing contents that don't match the grammar is not wrong (it's an &quot;extension&quot;) and rejecting contents that does match the grammar is allowed (it's a parser &quot;limit&quot;).&lt;/p&gt;
&lt;h3&gt; 3. Testing Architecture&lt;/h3&gt;
&lt;p&gt;Independently from how parsers should behave, I wanted to observe how they actually behave, so I picked several JSON parsers and set up things so that I could feed them with my test files.&lt;/p&gt;
&lt;p&gt;As I'm a Cocoa developer, I included mostly Swift and Objective-C parsers, but also C, Python, Ruby, R, Lua, Perl, Bash and Rust parsers, chosen pretty arbitrarily. I mainly tried to achieve diversity in age, popularity and languages.&lt;/p&gt;
&lt;p&gt;Several parsers have options to increase or decrease strictness, tweak Unicode support or allow specific extensions. I strived to always configure the parsers so that they behave as close as possible to the most strict interpretation of RFC 8259.&lt;/p&gt;
&lt;p&gt;A Python script &lt;code&gt;run_tests.py&lt;/code&gt; runs each parser with each test file (or a single test when the file is passed as an argument). The parsers are generally wrapped so that the process returns 0 in case of success, 1 in case of parsing error, yet another status in case of crash, a 5-second delay being considered as a timeout. Basically, I turned JSON parsers into JSON validators.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;run_tests.py&lt;/code&gt; compares the return value of each test with the expected result indicated by the file name prefix. When the value doesn't match, or when this prefix is &lt;code&gt;i&lt;/code&gt; (implementation defined), &lt;code&gt;run_tests.py&lt;/code&gt; writes a line in a log file (&lt;code&gt;results/logs.txt&lt;/code&gt;) in a specific format such as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Python 2.7.10   SHOULD_HAVE_FAILED  n_number_infinity.json
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://www.seriot.ch/json/run_tests.svg&quot; width=&quot;600&quot; alt=&quot;Testing Architecture&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;run_tests.py&lt;/code&gt; then reads the log file and generates HTML tables with the results (&lt;code&gt;results/parsing.html&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The results show one row per file, one column per parser, and one color per unexpected result. They also show detailed results by parser.&lt;/p&gt;
CrashTimeout
&lt;table class=&quot;monospace&quot; readability=&quot;5&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td bgcolor=&quot;#CC6600&quot;&gt;parsing should have succeeded but failed&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td bgcolor=&quot;#FFCC33&quot;&gt;parsing should have failed but succeeded&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td bgcolor=&quot;#66CCFF&quot;&gt;result undefined, parsing succeeded&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td bgcolor=&quot;#0066FF&quot;&gt;result undefined, parsing failed&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#FF3333&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#666666&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Tests are sorted by results equality, making easy to spot sets of similar results and remove redundant tests.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.seriot.ch/json/similar_results.png&quot; border=&quot;1&quot; width=&quot;600&quot; alt=&quot;Sets of tests with similar results&quot; /&gt;&lt;/p&gt;
&lt;h3&gt; 4. Results and Comments&lt;/h3&gt;
&lt;p&gt;4.1 &lt;a href=&quot;http://seriot.ch/parsing_json.php#41&quot;&gt;Full Results&lt;/a&gt;&lt;br /&gt;4.2 &lt;a href=&quot;http://seriot.ch/parsing_json.php#42&quot;&gt;C Parsers&lt;/a&gt;&lt;br /&gt;4.3 &lt;a href=&quot;http://seriot.ch/parsing_json.php#43&quot;&gt;Obj-C Parsers&lt;/a&gt;&lt;br /&gt;4.4 &lt;a href=&quot;http://seriot.ch/parsing_json.php#44&quot;&gt;Apple (NS)JSONSerialization&lt;/a&gt;&lt;br /&gt;4.5 &lt;a href=&quot;http://seriot.ch/parsing_json.php#45&quot;&gt;Swift Freddy&lt;/a&gt;&lt;br /&gt;4.6 &lt;a href=&quot;http://seriot.ch/parsing_json.php#46&quot;&gt;Bash&lt;/a&gt;&lt;br /&gt;4.7 &lt;a href=&quot;http://seriot.ch/parsing_json.php#47&quot;&gt;Other Parsers&lt;/a&gt;&lt;br /&gt;4.8 &lt;a href=&quot;http://seriot.ch/parsing_json.php#48&quot;&gt;JSON Checker&lt;/a&gt;&lt;br /&gt;4.9 &lt;a href=&quot;http://seriot.ch/parsing_json.php#49&quot;&gt;Regex&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt; 4.1 Full Results&lt;/h4&gt;
&lt;p&gt;Full results are presented in &lt;a href=&quot;http://seriot.ch/json/parsing.html&quot;&gt;http://seriot.ch/json/parsing.html&lt;/a&gt;. The tests are vertically sorted by similar results, so it is easy to prune similar tests. An option in &lt;code&gt;run_tests.py&lt;/code&gt; will produce &quot;pruned results&quot;: when a set of tests yields the same results, only the first one is kept. Pruned results HTML file is available here: &lt;a href=&quot;http://www.seriot.ch/json/parsing_pruned.html&quot;&gt;http://www.seriot.ch/json/parsing_pruned.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The most serious issues are crashes (in red), since parsing an uncontrolled input may put the whole process at risk. The &quot;should have passed&quot; tests (in brown) are also very dangerous, because an uncontrolled input may prevent the parser to parse a whole document. The &quot;should have failed&quot; tests (in yellow) are more benign. They indicate a JSON &quot;extension&quot; that can be parsed. Everything will work fine, until the parser is replaced with another parser which does not parse the same &quot;extensions&quot;...&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://seriot.ch/json/pruned_results.png&quot;&gt;&lt;img src=&quot;http://seriot.ch/json/pruned_results.png&quot; border=&quot;1&quot; width=&quot;600&quot; alt=&quot;JSON Parsing Tests&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This section highlights and comments some noticeable results.&lt;/p&gt;
&lt;h4&gt; 4.2 C Parsers&lt;/h4&gt;
&lt;p&gt;Here are the five C parsers considered:&lt;/p&gt;
&lt;p&gt;And here is a quick comparison between them:&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;jsmn&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;jansson&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;ccan&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;cJSON&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;json-parser&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parses &lt;code&gt;[&quot;\u0000&quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_PASSED&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_PASSED&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;YES&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Too liberal&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_FAILED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_FAILED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_FAILED&quot;&gt;YES&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Crash on nested structs.&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;CRASH&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;CRASH&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Rejects big numbers&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_PASSED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_PASSED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You can refer to the full results for more details.&lt;/p&gt;
&lt;h4&gt; 4.3 Objective-C Parsers&lt;/h4&gt;
&lt;p&gt;Here are a couple of Objective-C parsers that used to be very popular in the early days of iOS development, especially because Apple waited until iOS 5 to release NSJSONSerialization. They are still interesting to test, since they are used in production in many applications. Let's consider:&lt;/p&gt;
&lt;p&gt;And here is a quick comparison between them:&lt;/p&gt;
&lt;table readability=&quot;4&quot;&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;JSONKit&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;TouchJSON&lt;/th&gt;
&lt;th class=&quot;fixedWidthSmall&quot;&gt;SBJSON&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Crash on nested structs.&lt;/td&gt;
&lt;td class=&quot;CRASH&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;CRASH&quot;&gt;YES&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Crash on invalid UTF-8&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;CRASH&quot;&gt;YES&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Parses trailing garbage &lt;code&gt;[]x&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_FAILED&quot;&gt;YES&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Rejects big numbers&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_PASSED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Parses bad numbers &lt;code&gt;[0.e1]&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_FAILED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Treats &lt;code&gt;0x0C FORM FEED&lt;/code&gt; as white space&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_FAILED&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;NO&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Parses non-char. &lt;code&gt;[&quot;\uFFFF&quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;SHOULD_HAVE_PASSED&quot;&gt;NO&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;YES&lt;/td&gt;
&lt;td class=&quot;PASS&quot;&gt;YES&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;SBJSON survived after the arrival of NSJSONSerialization, is still maintained and is available through CocoaPods, so I reported the crash when parsing non UTF-8 strings such as &lt;code&gt;[&quot;&lt;u&gt;FF&lt;/u&gt;&quot;]&lt;/code&gt; in &lt;a href=&quot;https://github.com/stig/json-framework/issues/219&quot;&gt;issue #219&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;*** Assertion failure in -[SBJson4Parser parserFound:isValue:], SBJson4Parser.m:150
*** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Invalid parameter not satisfying: obj'
*** First throw call stack:
(
    0   CoreFoundation                      0x00007fff95f4b4f2 __exceptionPreprocess + 178
    1   libobjc.A.dylib                     0x00007fff9783bf7e objc_exception_throw + 48
    2   CoreFoundation                      0x00007fff95f501ca +[NSException raise:format:arguments:] + 106
    3   Foundation                          0x00007fff9ce86856 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 198
    4   test_SBJSON                         0x00000001000067e5 -[SBJson4Parser parserFound:isValue:] + 309
    5   test_SBJSON                         0x00000001000073f3 -[SBJson4Parser parserFoundString:] + 67
    6   test_SBJSON                         0x0000000100004289 -[SBJson4StreamParser parse:] + 2377
    7   test_SBJSON                         0x0000000100007989 -[SBJson4Parser parse:] + 73
    8   test_SBJSON                         0x0000000100005d0d main + 221
    9   libdyld.dylib                       0x00007fff929ea5ad start + 1
)
libc++abi.dylib: terminating with uncaught exception of type NSException
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt; 4.4 Apple (NS)JSONSerialization&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/reference/foundation/nsjsonserialization&quot;&gt;https://developer.apple.com/reference/foundation/nsjsonserialization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NSJSONSerialization was introduced with iOS 5 and is the standard JSON parser on OS X and iOS since then. It is available in Objective-C, and was rewritten in Swift: &lt;a href=&quot;https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/NSJSONSerialization.swift&quot;&gt;NSJSONSerialization.swift&lt;/a&gt;. The NS prefix was then &lt;a href=&quot;https://github.com/apple/swift-corelibs-foundation/commit/b914527d4d560602afc90da29254e1f1571672dd#diff-959321c08d3a9f8d385f2daca75a80b2&quot;&gt;dropped&lt;/a&gt; in Swift 3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Restrictions and Extensions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JSONSerialization has the following, undocumented restrictions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it won't parse big numbers: &lt;code&gt;[123123e100000]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;it won't parse u-escaped invalid codepoints: &lt;code&gt;[&quot;\ud800&quot;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;JSONSerialization has the following, undocumented extension:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it does parse trailing commas: &lt;code&gt;[1,]&lt;/code&gt; and &lt;code&gt;{&quot;a&quot;:0,}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I find the restriction about invalid codepoints to be especially problematic, especially in such a high-profile parser, because trying to parse uncontrolled contents may result in a parsing failure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Crash on Serialization&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This article is more about JSON parsing than JSON producing, yet I wanted to mention this crash that I found in JSONSerialization when writing &lt;code&gt;Double.nan&lt;/code&gt;. Remember that &lt;code&gt;NaN&lt;/code&gt; does not conform to JSON grammar, so in this case, JSONSerialization should throw an error, but not crash the whole process.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;do {
    let a = [Double.nan]
    let data = try JSONSerialization.data(withJSONObject: a, options: [])
} catch let e {
}

SIGABRT

*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Invalid number value (NaN) in JSON write'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;[Update 2016-10-27]&lt;/strong&gt; The original version of this article erroneously said that &lt;code&gt;JSONSerialization.isValidJSONObject([&quot;x&quot;:&quot;x&quot;, &quot;x&quot;:&quot;x&quot;])&lt;/code&gt; would crash because of a bug in the method. &lt;a href=&quot;https://twitter.com/H2CO3_iOS/status/791344089807675392&quot;&gt;@H2CO3_iOS found&lt;/a&gt; that the crash is not related to JSONSerialization but to Swift dictionaries, that just cannot be build with the same key appearing twice.&lt;/p&gt;
&lt;h4&gt; 4.5 Freddy (Swift)&lt;/h4&gt;
&lt;p&gt;Freddy (&lt;a href=&quot;https://github.com/bignerdranch/Freddy&quot;&gt;https://github.com/bignerdranch/Freddy&lt;/a&gt;) is a real JSON Parser written is Swift 3. I say real because several GitHub projects claim to be Swift JSON parsers, but actually use Apple JSONSerialization and just map JSON contents with model objects.&lt;/p&gt;
&lt;p&gt;Freddy is interesting because it is written by a famous organization of Cocoa developers, and does leverage Swift type safety by using a Swift enum to represent the different kind of JSON nodes (Array, Dictionary, Double, Int, String, Bool and Null).&lt;/p&gt;
&lt;p&gt;But, being &lt;a href=&quot;https://www.bignerdranch.com/blog/introducing-freddy-an-open-source-framework-for-parsing-json-in-swift&quot;&gt;released in January 2016&lt;/a&gt;, Freddy is still young, and buggy. My test suite showed that unclosed structures such as &lt;code&gt;[1,&lt;/code&gt; and &lt;code&gt;{&quot;a&quot;:&lt;/code&gt; used to crash the parser, as well as a string with a single space &lt;code&gt;&quot; &quot;&lt;/code&gt;, so I opened &lt;a href=&quot;https://github.com/bignerdranch/Freddy/issues/199&quot;&gt;issue #199&lt;/a&gt; that was fixed within 1 day!&lt;/p&gt;
&lt;p&gt;Additionnally, I found that &lt;code&gt;&quot;0e1&quot;&lt;/code&gt; was incorrectly rejected by the parser, so I opened &lt;a href=&quot;https://github.com/bignerdranch/Freddy/issues/198&quot;&gt;issue #198&lt;/a&gt;, which was also fixed within 1 day.&lt;/p&gt;
&lt;p&gt;However, Freddy does still crash on 2016-10-18 when parsing &lt;code&gt;[&quot;\&lt;/code&gt;. I reported the bug in (&lt;a href=&quot;https://github.com/bignerdranch/Freddy/issues/206&quot;&gt;issue #206&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The following table does summarize the evolution of Freddy's behaviour:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.seriot.ch/json/freddy_results.png&quot;&gt;&lt;img src=&quot;http://www.seriot.ch/json/freddy_results.png&quot; border=&quot;1&quot; width=&quot;600&quot; alt=&quot;Freddy JSON Parser Tests Results&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt; 4.6 Bash JSON.sh&lt;/h4&gt;
&lt;p&gt;I tested &lt;a href=&quot;https://github.com/dominictarr/JSON.sh/&quot;&gt;https://github.com/dominictarr/JSON.sh/&lt;/a&gt; from 2016-08-12.&lt;/p&gt;
&lt;p&gt;This Bash parser relies on a regex to find the control characters, which MUST be backslash-escaped according to RFC 8259. But Bash and JSON don't share the same definition of control characters.&lt;/p&gt;
&lt;p&gt;The regex uses the &lt;code&gt;:cntlr:&lt;/code&gt; syntax to match control characters, which is a shorthand for &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;. But according to JSON grammar, &lt;code&gt;0x7F DEL&lt;/code&gt; is not part of control characters, and may appear unescaped.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; 00 nul   01 soh   02 stx   03 etx   04 eot   05 enq   06 ack   07 bel
 08 bs    09 ht    0a nl    0b vt    0c np    0d cr    0e so    0f si
 10 dle   11 dc1   12 dc2   13 dc3   14 dc4   15 nak   16 syn   17 etb
 18 can   19 em    1a sub   1b esc   1c fs    1d gs    1e rs    1f us
 20 sp    21  !    22  &quot;    23  #    24  $    25  %    26  &amp;amp;    27  '
 28  (    29  )    2a  *    2b  +    2c  ,    2d  -    2e  .    2f  /
 30  0    31  1    32  2    33  3    34  4    35  5    36  6    37  7
 38  8    39  9    3a  :    3b  ;    3c  &amp;lt;    3d  =    3e  &amp;gt;    3f  ?
 40  @    41  A    42  B    43  C    44  D    45  E    46  F    47  G
 48  H    49  I    4a  J    4b  K    4c  L    4d  M    4e  N    4f  O
 50  P    51  Q    52  R    53  S    54  T    55  U    56  V    57  W
 58  X    59  Y    5a  Z    5b  [    5c  \    5d  ]    5e  ^    5f  _
 60  `    61  a    62  b    63  c    64  d    65  e    66  f    67  g
 68  h    69  i    6a  j    6b  k    6c  l    6d  m    6e  n    6f  o
 70  p    71  q    72  r    73  s    74  t    75  u    76  v    77  w
 78  x    79  y    7a  z    7b  {    7c  |    7d  }    7e  ~    7f del
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As a consequence, JSON.sh cannot parse &lt;code&gt;[&quot;&lt;u&gt;7F&lt;/u&gt;&quot;]&lt;/code&gt;. I reported this bug in &lt;a href=&quot;https://github.com/dominictarr/JSON.sh/issues/46&quot;&gt;issue #46&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, JSON.sh does not limit the nesting level, and will crash when parsing 10000 times the open array character &lt;code&gt;[&lt;/code&gt;. I reported this bug in &lt;a href=&quot;https://github.com/dominictarr/JSON.sh/issues/47&quot;&gt;issue #47&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python -c &quot;print('['*100000)&quot; | ./JSON.sh 
./JSON.sh: line 206: 40694 Done                    tokenize
     40695 Segmentation fault: 11  | parse
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt; 4.7 Other Parsers&lt;/h4&gt;
&lt;p&gt;Besides C / Objective-C and Swift, I also tested parsers from other environments. Here is a synthetic review of their extensions and restrictions, with a subset of the &lt;a href=&quot;http://seriot.ch/json/parsing.html&quot;&gt;full tests results&lt;/a&gt;. The goal of this table is to demonstrate that there are no two parsers that agree on what is wrong and what is right.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.seriot.ch/json/other_parsers.png&quot;&gt;&lt;img src=&quot;http://www.seriot.ch/json/other_parsers.png&quot; border=&quot;1&quot; width=&quot;600&quot; alt=&quot;JSON Parsers Differences&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are the references for the tested parsers:&lt;/p&gt;
&lt;p&gt;Upon popular request, I also added the following Java parsers, which are not shown on this image but that appear in the full results:&lt;/p&gt;
&lt;p&gt;The Python JSON module will parse &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt; as numbers. While this behaviour can be fixed by setting the &lt;code&gt;parse_constant&lt;/code&gt; options to a function that will raise an Exception as shown below, it's such an uncommon practice that I didn't use it in the tests, and let the parser erroneously parse these number constants.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def f_parse_constant(o):
    raise ValueError

o = json.loads(data, parse_constant=f_parse_constant)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt; 4.8 JSON Checker&lt;/h4&gt;
&lt;p&gt;A JSON parser transforms a JSON document into another representation. If the input is invalid JSON, the parser returns an error.&lt;/p&gt;
&lt;p&gt;Some programs don't transform their input, but just tell if the JSON is valid or not. These programs are JSON validators.&lt;/p&gt;
&lt;p&gt;json.org has a such a program, written in C, called JSON_Checker &lt;a href=&quot;http://www.json.org/JSON_checker/&quot;&gt;http://www.json.org/JSON_checker/&lt;/a&gt;, that even comes with a (small) test suite:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;JSON_Checker is a Pushdown Automaton that very quickly determines if a JSON text is syntactically correct. It could be used to filter inputs to a system, or to verify that the outputs of a system are syntactically correct. It could be adapted to produce a very fast JSON parser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even if JSON_Checker is not a formal reference implementation, one could expect JSON_Checker to clarify JSON specifications or at least implement them correctly.&lt;/p&gt;
&lt;p&gt;Unfortunately, JSON_Checker violates the specifications defined on same web site. Indeed, JSON_Checker will parse the following inputs: &lt;code&gt;[1.]&lt;/code&gt;, &lt;code&gt;[0.e1]&lt;/code&gt;, which do not match JSON grammar.&lt;/p&gt;
&lt;p&gt;Moreover, JSON_Checker will reject &lt;code&gt;[0e1]&lt;/code&gt; which is a perfectly valid JSON number. This last bug is even more serious because a whole document can be rejected as long as it contains the number &lt;code&gt;0e1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The elegance of the JSON_Checker implementation as a pushdown automaton doesn't prevent the code from being wrong, but at least the state transition table makes it easy to spot the errors, especially when you add the states onto the schema of what is a number.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.seriot.ch/json/json_grammar_number.png&quot; border=&quot;0&quot; width=&quot;600&quot; alt=&quot;JSON Grammar - Numbers&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bug 1: rejection of 0e1&lt;/strong&gt; In the code, the state &lt;code&gt;ZE&lt;/code&gt;, reached after parsing &lt;code&gt;0&lt;/code&gt;, just lacks transitions to &lt;code&gt;E1&lt;/code&gt; by reading &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt;. We can fix this case by adding the two missing transitions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bug 2: acceptance of [1.]&lt;/strong&gt; In one case, like after &lt;code&gt;0.&lt;/code&gt;, the grammar requires a digit. In the other case, like after &lt;code&gt;0.1&lt;/code&gt; the grammar doesn't. And yet JSON_Checker defines a single state &lt;code&gt;FR&lt;/code&gt; instead of two. We can fix this case by replacing the &lt;code&gt;FR&lt;/code&gt; state in red on the schema with a new state &lt;code&gt;F0&lt;/code&gt; or &lt;code&gt;frac0&lt;/code&gt;. With this fix, the parser will require a digit after &lt;code&gt;1.&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.seriot.ch/json/json_checker_state_transition_table.jpg&quot; width=&quot;600&quot; border=&quot;0&quot; alt=&quot;JSON Checker Fix&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Several other parsers (Obj-C TouchJSON, PHP, R rjson, Rust json-rust, Bash JSON.sh, C jsmn and Lua dkjson) will also erroneously parse &lt;code&gt;[1.]&lt;/code&gt;. One may wonder if, at least in some cases, this bug may have spread from JSON_Checker because parser developers and testers used it as a reference, as advised on json.org.&lt;/p&gt;
&lt;p&gt;[Update 2017-11-18] The aforementioned bugs have been fixed, and JSON Checker is now published on &lt;a href=&quot;https://github.com/douglascrockford/JSON-c&quot;&gt;Douglas Crockford's GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt; 4.9 Regex&lt;/h4&gt;
&lt;p&gt;We may wonder if a regex can validate the conformance to JSON grammar of a given input. See for instance this attempt to find the shortest regex on &lt;a href=&quot;http://codegolf.stackexchange.com/questions/474/write-a-json-validator&quot;&gt;StackExchange: Write a JSON Validator&lt;/a&gt;. The problem is that it is very difficult to know if a regex does succeed or not without a solid test suite.&lt;/p&gt;
&lt;p&gt;I found this &lt;a href=&quot;http://stackoverflow.com/questions/2583472/regex-to-validate-json&quot;&gt;Ruby regex to validate JSON&lt;/a&gt; on StackOverflow to be the best one:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;JSON_VALIDATOR_RE = /(
    # define subtypes and build up the json syntax, BNF-grammar-style
    # The {0} is a hack to simply define them as named groups here but not match on them yet
    # I added some atomic grouping to prevent catastrophic backtracking on invalid inputs
    (?&amp;lt;number&amp;gt;  -?(?=[1-9]|0(?!\d))\d+(\.\d+)?([eE][+-]?\d+)?){0}
    (?&amp;lt;boolean&amp;gt; true | false | null ){0}
    (?&amp;lt;string&amp;gt;  &quot; (?&amp;gt;[^&quot;\\\\]* | \\\\ [&quot;\\\\bfnrt\/] | \\\\ u [0-9a-f]{4} )* &quot; ){0}
    (?&amp;lt;array&amp;gt;   \[ (?&amp;gt; \g&amp;lt;json&amp;gt; (?: , \g&amp;lt;json&amp;gt; )* )? \s* \] ){0}
    (?&amp;lt;pair&amp;gt;    \s* \g&amp;lt;string&amp;gt; \s* : \g&amp;lt;json&amp;gt; ){0}
    (?&amp;lt;object&amp;gt;  \{ (?&amp;gt; \g&amp;lt;pair&amp;gt; (?: , \g&amp;lt;pair&amp;gt; )* )? \s* \} ){0}
    (?&amp;lt;json&amp;gt;    \s* (?&amp;gt; \g&amp;lt;number&amp;gt; | \g&amp;lt;boolean&amp;gt; | \g&amp;lt;string&amp;gt; | \g&amp;lt;array&amp;gt; | \g&amp;lt;object&amp;gt; ) \s* ){0}
    )
    \A \g&amp;lt;json&amp;gt; \Z
    /uix
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yet, it fails to parse valid JSON, such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;u-escaped codepoints, including valid ones: &lt;code&gt;[&quot;\u002c&quot;]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;backslash-escaped backslash: &lt;code&gt;[&quot;\\a&quot;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Also, it does parse the following extensions, which is just a bug for a JSON validator:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a capitalized True: &lt;code&gt;[True]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;an unescaped control character: &lt;code&gt;[&quot;&lt;u&gt;09&lt;/u&gt;&quot;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt; 5. Parsing Contents&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc8259#section-9&quot;&gt;RFC 8259 Section 9&lt;/a&gt; says:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;A JSON parser transforms a JSON text into another representation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All of the above testing architecture will only tell if a parser would parse a JSON document or not, but doesn't say anything about the representation of the resulting contents.&lt;/p&gt;
&lt;p&gt;For example, a parser may parse the u-escaped invalid Unicode character (&lt;code&gt;&quot;\uDEAD&quot;&lt;/code&gt;) without error, but what will the result be like? a replacement character, or something else, who knows? RFC 8259 is silent about it.&lt;/p&gt;
&lt;p&gt;Similarily, extreme numbers such as &lt;code&gt;0.00000000000000000000001&lt;/code&gt; or &lt;code&gt;-0&lt;/code&gt; can be parsed, but what should the result be? RFC 8259 doesn't make a distinction between integers and doubles, or zero and -zero. It doesn't even say if numbers can be converted into strings or not.&lt;/p&gt;
&lt;p&gt;And what about objects with the same keys (&lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:2}&lt;/code&gt;)? Or same keys and same values (&lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:1}&lt;/code&gt;)? And how should a parser compare object keys?? Should it use binary comparison or a Unicode normal form such as NFC? Here again, RFC is silent&lt;/p&gt;
&lt;p&gt;In all these cases, parsers are free to output whatever they want, leading to interoperability issues (think of what could go wrong when you decide to change your usual JSON parser with another one).&lt;/p&gt;
&lt;p&gt;With that in mind, let's create tests for which the representation after parsing is not clearly defined. These tests serve only to document how parsers output may differ.&lt;/p&gt;
&lt;p&gt;Contrary to the parsing tests, these tests are hard to automate. Instead, the results shown here were observed via log statements and/or debuggers.&lt;/p&gt;
&lt;p&gt;Below is an inexhaustive list of some striking differences between resulting representations after parsing. All results are shown in appendix &quot;&lt;a href=&quot;http://seriot.ch/json/transform.html&quot;&gt;Parsing Contents&lt;/a&gt;&quot;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Numbers&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;5.5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;code&gt;1.000000000000000005&lt;/code&gt; is generally converted into the float &lt;code&gt;1.0&lt;/code&gt;, but Rust 1.12.0 / json 0.10.2 will keep the original precision and use the number &lt;code&gt;1.000000000000000005&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;code&gt;1E-999&lt;/code&gt; is generally converted into float or double &lt;code&gt;0.0&lt;/code&gt;, but Swift Freddy yields the string &lt;code&gt;&quot;1E-999&quot;&lt;/code&gt;. Swift Apple JSONSerializattion and Obj-C JSONKit will simply refuse to parse it and return an error.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;code&gt;10000000000000000999&lt;/code&gt; may be converted into a double (Swift Apple JSONSerialization), an unsigned long long (Objective-C JSONKit) or a string (Swift Freddy). It is to be noted that C cJSON will parse this number as a double, but loses precision in the process, resulting in a new number &lt;code&gt;10000000000000002048&lt;/code&gt; (note the last four digits).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;18.5&quot;&gt;&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;In &lt;code&gt;{&quot;&lt;u&gt;C3A9&lt;/u&gt;:&quot;NFC&quot;,&quot;&lt;u&gt;65CC81&lt;/u&gt;&quot;:&quot;NFD&quot;}&lt;/code&gt; keys are NFC and NFD representations of &quot;é&quot;. Most parsers will yield the two keys, except Swift parsers Apple JSONSerialization and Freddy, where dictionaries first normalize keys before testing them for equality.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;16&quot;&gt;
&lt;p&gt;&lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:2}&lt;/code&gt; does generally result in &lt;code&gt;{&quot;a&quot;:2}&lt;/code&gt; (Freddy, SBJSON, Go, Python, JavaScript, Ruby, Rust, Lua dksjon), but may also result in &lt;code&gt;{&quot;a&quot;:1}&lt;/code&gt; (Obj-C Apple NSJSONSerialization, Swift Apple JSONSerialization, Swift Freddy), or &lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:2}&lt;/code&gt; (cJSON, R, Lua JSON).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:1}&lt;/code&gt; does generally result in &lt;code&gt;{&quot;a&quot;:1}&lt;/code&gt;, but is parsed as &lt;code&gt;{&quot;a&quot;:1,&quot;a&quot;:1}&lt;/code&gt; in cJSON, R and Lua JSON.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code&gt;{&quot;a&quot;:0,&quot;a&quot;:-0}&lt;/code&gt; is generally parsed as &lt;code&gt;{&quot;a&quot;:0}&lt;/code&gt;, but can also be parsed as &lt;code&gt;{&quot;a&quot;:-0}&lt;/code&gt; (Obj-C JSONKit, Go, JavaScript, Lua) or even &lt;code&gt;{&quot;a&quot;:0, &quot;a&quot;:0}&lt;/code&gt; (cJSON, R).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Strings&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;12.612903225806&quot;&gt;&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;code&gt;[&quot;A\u0000B&quot;]&lt;/code&gt; contains the u-escaped form of the &lt;code&gt;0x00 NUL&lt;/code&gt; character, which is likely to cause problems in C-based JSON parsers. Most parsers handle this payload gracefully, but JSONKit and cJSON won't parse it. Interestingly, Freddy yields only &lt;code&gt;[&quot;A&quot;]&lt;/code&gt; (the string stop after unescaping byte &lt;code&gt;0x00&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;code&gt;[&quot;\uD800&quot;]&lt;/code&gt; is the u-escaped form of &lt;code&gt;U+D800&lt;/code&gt;, an invalid lone UTF-16 surrogate. Many parsers will fail and return an error, despite the string being perfectly valid according to JSON grammar. Python leaves the string untouched and yields &lt;code&gt;[&quot;\uD800&quot;]&lt;/code&gt;. Go and JavaScript replace the offending chacracter with &quot;�&quot; &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; &lt;code&gt;[&quot;&lt;u&gt;EFBFBD&lt;/u&gt;&quot;]&lt;/code&gt;, R rjson and Lua dkjson simply translate the codepoint into its UTF-8 representation &lt;code&gt;[&quot;&lt;u&gt;EDA080&lt;/u&gt;&quot;]&lt;/code&gt;. R jsonlite and Lua JSON 20160728.17 replace the offending codepoint with a question mark &lt;code&gt;[&quot;?&quot;]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9.2105263157895&quot;&gt;
&lt;p&gt;&lt;code&gt;[&quot;EDA080&quot;]&lt;/code&gt; is the non-escaped, UTF-8 form or &lt;code&gt;U+D800&lt;/code&gt;, the invalid lone UTF-16 surrogate discussed in previous point. This string is not valid UTF-8 and should be rejected (see &lt;a href=&quot;http://seriot.ch/parsing_json.php#25&quot;&gt;section 2.5 Strings - Raw non-Unicode Characters&lt;/a&gt;). In practice however, several parsers leave the string untouched &lt;code&gt;[&quot;EDA080&quot;]&lt;/code&gt; such as cJSON, R rjson and jsonlite, Lua JSON, Lua dkjson and Ruby. Go and Javacript yield &lt;code&gt;[&quot;&lt;u&gt;EFBFBDEFBFBDEFBFBD&lt;/u&gt;&quot;]&lt;/code&gt; that is three replacement characters (one per byte). Interestingly, Python 2 converts the sequence into its unicode-escaped form &lt;code&gt;[&quot;\ud800&quot;]&lt;/code&gt;, while Python 3 thows a &lt;code&gt;UnicodeDecodeError&lt;/code&gt; exception.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;code&gt;[&quot;\uD800\uD800&quot;]&lt;/code&gt; makes some parsers go nuts. R jsonlite yields &lt;code&gt;[&quot;\U00010000&quot;]&lt;/code&gt;, while Ruby parser yields &lt;code&gt;[&quot;&lt;u&gt;F0908080&lt;/u&gt;&quot;]&lt;/code&gt;. I still don't get where this value comes from.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;[Update 2017-11-18]&lt;/strong&gt; A &lt;a href=&quot;https://justi.cz/security/2017/11/14/couchdb-rce-npm.html&quot;&gt;RCE vulnerability was found in CouchDB&lt;/a&gt; because two JSON parsers handle duplicate key differently. The same JSON object, when parsed in JavaScript, contains &lt;code&gt;&quot;roles&quot;: []'&lt;/code&gt;, but when parsed in Erlang it contains &lt;code&gt;&quot;roles&quot;: [&quot;_admin&quot;]&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt; 6. STJSON&lt;/h3&gt;
&lt;p&gt;STJSON is a Swift 3, 600+ lines JSON parser I wrote to see what it took to consider all pitfalls and pass all tests.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nst/STJSON&quot;&gt;https://github.com/nst/STJSON&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;STJSON API is very simple:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;var p = STJSONParser(data: data)

do {
    let o = try p.parse()
    print(o)
} catch let e {
    print(e)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;STJSON can be instantiated with additional parameters:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;var p = STJSON(data:data,
               maxParserDepth:1024,
               options:[.useUnicodeReplacementCharacter])
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In fact, there is only one test where STJSON fails: &lt;code&gt;y_string_utf16.json&lt;/code&gt;. This is because, as in nearly all other parsers, STJSON does not support non UTF-8 encodings, even though it should not be very difficult to add, and I may do so in the future if needed. At least, STJSON does raise appropriate errors when a file starts with a UTF-16 or UTF-32 byte order mark.&lt;/p&gt;
&lt;h3&gt; 7. Conclusion&lt;/h3&gt;
&lt;p&gt;In conclusion, JSON is not a data format you can rely on blindly. I've demonstrated this by showing that the standard definition is spread out over at least seven different documents (&lt;a href=&quot;http://seriot.ch/parsing_json.php#1&quot;&gt;section 1&lt;/a&gt;), that the latest and most complete document, RFC-8259, is imprecise and contradictory (&lt;a href=&quot;http://seriot.ch/parsing_json.php#2&quot;&gt;section 2&lt;/a&gt;), and by crafting test files that out of over 30 parsers, no two parsers parsed the same set of documents the same way (&lt;a href=&quot;http://seriot.ch/parsing_json.php#4&quot;&gt;section 4&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In the process of inspecting parser results, I also discovered that json_checker.c from json.org did reject valid JSON &lt;code&gt;[0e1]&lt;/code&gt; (&lt;a href=&quot;http://seriot.ch/json.php#424&quot;&gt;section 4.24&lt;/a&gt;), which certainly doesn't help users to know what's right or wrong. In a general way, many parsers authors like to brag about how right is their parsers (including myself), but there's no way to assess their quality since references are debatable and existing test suites are generally poor.&lt;/p&gt;
&lt;p&gt;So, I wrote yet another JSON parser (&lt;a href=&quot;http://seriot.ch/json.php#6&quot;&gt;section 6&lt;/a&gt;) which will parse or reject JSON document according to my understanding of RFC 7159. Feel free to comment, open issues and pull requests.&lt;/p&gt;
&lt;p&gt;This work may be continued by:&lt;/p&gt;
&lt;ul readability=&quot;5.7209165687427&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Documenting the behaviour of &lt;strong&gt;more parsers&lt;/strong&gt;, especially parsers that run in non-Apple environments.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.8103975535168&quot;&gt;
&lt;p&gt;Investigating &lt;strong&gt;JSON generation&lt;/strong&gt;. I extensively assessed what parsers do or do not parse. (&lt;a href=&quot;http://seriot.ch/parsing_json.php#4&quot;&gt;section 4&lt;/a&gt;). I briefly assessed the contents that parsers yield when the parsing is successful (&lt;a href=&quot;http://seriot.ch/json.php#5&quot;&gt;section 5&lt;/a&gt;). I'm pretty sure that several parsers do generate grammatically invalid JSON or even crash in some circumstances (see &lt;a href=&quot;http://seriot.ch/parsing_json.php#421&quot;&gt;Section 4.2.1&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Investigating differences in the way &lt;strong&gt;JSON mappers&lt;/strong&gt; maps JSON contents to model objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.84883720930233&quot;&gt;
&lt;p&gt;&lt;strong&gt;Finding exploits&lt;/strong&gt; in existing software stacks (check out my &lt;a href=&quot;http://seriot.ch/resources/talks_papers/20141106_asfws_unicode_hacks.pdf&quot;&gt;Unicode Hacks&lt;/a&gt; presentation)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.0756972111554&quot;&gt;
&lt;p&gt;Investigating potential interoperability issues in &lt;strong&gt;other serialization formats&lt;/strong&gt; such as YAML, &lt;a href=&quot;http://bsonspec.org/&quot;&gt;BSON&lt;/a&gt; or &lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;ProtoBuf&lt;/a&gt;, which may be a potential successor to JSON. Indeed, Apple already has a Swift implementation &lt;a href=&quot;https://github.com/apple/swift-protobuf-plugin&quot;&gt;https://github.com/apple/swift-protobuf-plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As a final word, I keep on wondering why &quot;fragile&quot; formats such as HTML, CSS and JSON, or &quot;dangerous&quot; languages such as PHP or JavaScript became so immensely popular. This is probably because they are easy to start with by tweaking contents in a text editor, because of too liberal parsers or interpreters, and seemingly simple specifications. But sometimes, simple specifications just mean hidden complexity.&lt;/p&gt;
&lt;h3&gt; 8. Appendix&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Parsing Results &lt;a href=&quot;http://seriot.ch/json/parsing.html&quot;&gt;http://seriot.ch/json/parsing.html&lt;/a&gt;, generated automatically for &lt;a href=&quot;http://seriot.ch/parsing_json.php#4&quot;&gt;section 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tranform Results &lt;a href=&quot;http://seriot.ch/json/transform.html&quot;&gt;http://seriot.ch/json/transform.html&lt;/a&gt;, created manually for &lt;a href=&quot;http://seriot.ch/parsing_json.php#6&quot;&gt;section 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JSONTestSuite &lt;a href=&quot;https://github.com/nst/JSONTestSuite&quot;&gt;https://github.com/nst/JSONTestSuite&lt;/a&gt;, contains all tests and code&lt;/li&gt;
&lt;li&gt;STJSON &lt;a href=&quot;https://github.com/nst/STJSON&quot;&gt;https://github.com/nst/STJSON&lt;/a&gt;, contains my Swift 3 JSON parser&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Acknowledgments&lt;/h3&gt;
&lt;p&gt;Many thanks to @Reversity, GEndignoux, @ccorsano, @BalestraPatrick and @iPlop.&lt;/p&gt;

</description>
<pubDate>Sun, 22 Apr 2018 16:58:16 +0000</pubDate>
<dc:creator>moks</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://seriot.ch/parsing_json.php</dc:identifier>
</item>
</channel>
</rss>