<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>PeerTube, the “Decentralized YouTube”, succeeds in crowdfunding</title>
<link>https://quariety.com/2018/07/20/peertube-the-decentralized-youtube-succeeds-in-crowdfunding/</link>
<guid isPermaLink="true" >https://quariety.com/2018/07/20/peertube-the-decentralized-youtube-succeeds-in-crowdfunding/</guid>
<description>&lt;p class=&quot;taille_courante&quot;&gt;It is done. With 53,100 euros collected in forty-two days, the PeerTube project originating in France blows through its &lt;a href=&quot;https://www.kisskissbankbank.com/fr/projects/peertube-a-free-and-federated-video-platform/wall#la-v1-deluxe-de-peertube-est-financee-merci&quot;&gt;initial goal&lt;/a&gt;. The principle is intriguing: &lt;a href=&quot;https://framatube.org/videos/watch/9db9f3f1-9b54-44ed-9e91-461d262d2205&quot;&gt;a fully decentralized version of YouTube&lt;/a&gt; , whose computer code is freely accessible and editable, and where videos are shared between users without relying on a central system. Online since March 2018 in a beta version, the project should definitely take off by October, based on the money raised.&lt;/p&gt;
&lt;p&gt;At the origin of PeerTube is the French association &lt;a href=&quot;https://framasoft.org/&quot;&gt;Framasoft&lt;/a&gt; , one of the main associations advocating for the development of free software in Europe. With its strategy of development and centralization, Google, which owns YouTube, quickly became a symbol in the fight orchestrated by Framasoft – which launched four years ago a campaign called “&lt;a href=&quot;https://degooglisons-internet.org/?l=en&quot;&gt;De-google-ify Internet&lt;/a&gt;” .&lt;/p&gt;

&lt;h2 class=&quot;intertitre&quot;&gt;11,000 videos online&lt;/h2&gt;
&lt;p&gt;Like &lt;a href=&quot;https://mastodon.social/&quot;&gt;Mastodon&lt;/a&gt;, an alternative to Twitter launched in 2016, PeerTube relies on a decentralized and federative system. In other words, there is no higher authority that manages, broadcasts and moderates the content offered, as is the case with YouTube, but a network of “instances”. Created by one or more administrators, these communities are governed according to principles specific to each of them. Anyone can freely watch the videos without registering, but to upload a video, &lt;a href=&quot;https://joinpeertube.org/en/home/&quot;&gt;you must choose from the list of existing instances&lt;/a&gt; , or create your own if you have the necessary technical knowledge.&lt;/p&gt;
&lt;p&gt;At the moment, 141 instances are proposed. Most do not have specifics, but one can find communities centered on a theme or open to a particular region of the world. In all, more than 4,000 people are currently registered on PeerTube, for a total of 338,000 views for 11,000 videos.&lt;/p&gt;
&lt;h2&gt;&lt;img class=&quot;aligncenter wp-image-461 size-full&quot; src=&quot;https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM.png&quot; alt=&quot;Peertube&quot; width=&quot;2538&quot; height=&quot;1290&quot; srcset=&quot;https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM.png 2538w, https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM-300x152.png 300w, https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM-768x390.png 768w, https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM-1024x520.png 1024w, https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM-1100x559.png 1100w&quot; sizes=&quot;(max-width: 2538px) 100vw, 2538px&quot;/&gt;&lt;/h2&gt;
&lt;h2 class=&quot;intertitre&quot;&gt;Possible Evolutions/ Predictions&lt;/h2&gt;
&lt;p&gt;PeerTube is fully editable and adaptable to the needs of everyone …, provided you know how to code . The registered community is largely composed of a technophile user-base, and therefore able to propose new features. Improving and simplifying the user experience is one of Framasoft’s main objectives.&lt;/p&gt;
&lt;p&gt;But the current operation of the platform, not really intuitive for a non-initiated, is also the main flaw of PeerTube. ”  &lt;em&gt;The Gafam put us in a position of consumers,”&lt;/em&gt; says Pouhiou, communication officer for Framasoft. ”  &lt;em&gt;Of course, they have the means to create extraordinarily practical software that brings a lot of comfort to the user. But often, this gain of comfort is accompanied by a loss of control of our data. If we want to regain the power , we must also take the responsibilities that go with it. &lt;/em&gt; ”&lt;/p&gt;
&lt;p&gt;This ” &lt;em&gt;incompressible&lt;/em&gt;  ” difficulty  does not necessarily worry the association. PeerTube is not for the moment a ”  &lt;em&gt;YouTube killer&lt;/em&gt;  “, but a project in its youth. &lt;span class=&quot;&quot;&gt;There is no question of attracting too many users at once: the platform, largely perfectible, might &lt;/span&gt;&lt;span class=&quot;&quot;&gt;discourage&lt;/span&gt;&lt;span class=&quot;&quot;&gt; the general public – some functions, such as the subscription to a channel, are not yet in place. &lt;/span&gt;PeerTube does not seek to attract star Youtubers either.&lt;/p&gt;
&lt;p&gt;Unlike YouTube, PeerTube does not display default ads. ”  &lt;em&gt;In terms of monetization, we wanted to make a neutral tool,&lt;/em&gt;  ” says Pouhiou. For now, a simple “support” button allows videographers to direct their viewers to Tipee, Patreon, Paypal and other donation tools. But in the future, Framasoft hopes that ” &lt;em&gt;people will be able to code their own monetization system&lt;/em&gt;  “.&lt;/p&gt;

&lt;h2 class=&quot;intertitre&quot;&gt;Self-managed moderation&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;&quot;&gt;Other issues may eventually be debated. &lt;/span&gt;The pornographic content, authorized by certain instances-provided they display a label ” &lt;em&gt;Not safe for work&lt;/em&gt;  ” and blur the thumbnail- is still present among the most popular videos of PeerTube. The organization into federations can also open the door to the creation of instances accepting extremism and calls for violence.&lt;/p&gt;
&lt;p&gt;Again, Framasoft relies on its community to prevent overflows and maintain the original freshness: ” &lt;em&gt;PeerTube works a little on the same principle as Twitter&lt;/em&gt; , says Pouhiou. &lt;em&gt;We can track and add videos on an instance but it is not automatically reciprocal. A community can be ostracized if its actions are considered harmful by others&lt;/em&gt; . ”&lt;/p&gt;
&lt;p&gt;How will PeerTube evolve? Two years after its creation, his “big brother” Mastodon is doing rather well , and has exceeded one million users. So there is hope for an alternative to big machines in Silicon Valley. Especially since accumulating in recent months the problems of moderation and monetization, YouTube has alienated some of its users, who may well appreciate the emergence of an alternative.&lt;/p&gt;





</description>
<pubDate>Fri, 20 Jul 2018 18:07:27 +0000</pubDate>
<dc:creator>Roccan</dc:creator>
<og:type>article</og:type>
<og:url>https://quariety.com/2018/07/20/peertube-the-decentralized-youtube-succeeds-in-crowdfunding/</og:url>
<og:title>PeerTube, the “Decentralized YouTube”, succeeds in crowdfunding</og:title>
<og:description>It is done. With 53,100 euros collected in forty-two days, the PeerTube project originating in France blows through its initial goal. The principle is intriguing: a fully decentralized version of YouTube , whose computer code is freely accessible and editable, and where videos are shared between users without relying on a central system. Online since March 2018 in a beta version, the … Continue reading PeerTube, the “Decentralized YouTube”, succeeds in crowdfunding →&lt;!-- AddThis Advanced Settings above via filter on get_the_excerpt --&gt;&lt;!-- AddThis Advanced Settings below via filter on get_the_excerpt --&gt;&lt;!-- AddThis Advanced Settings generic via filter on get_the_excerpt --&gt;&lt;!-- AddThis Share Buttons above via filter on get_the_excerpt --&gt;&lt;!-- AddThis Share Buttons below via filter on get_the_excerpt --&gt;&lt;!-- AddThis Share Buttons generic via filter on get_the_excerpt --&gt;</og:description>
<og:image>https://quariety.com/wp-content/uploads/2018/07/Screen-Shot-2018-07-20-at-6.49.34-PM.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://quariety.com/2018/07/20/peertube-the-decentralized-youtube-succeeds-in-crowdfunding/</dc:identifier>
</item>
<item>
<title>Show HN: Kanban for E-Mail</title>
<link>https://kanbanmail.app/</link>
<guid isPermaLink="true" >https://kanbanmail.app/</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://kanbanmail.app/&quot;&gt;https://kanbanmail.app/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17576024&quot;&gt;https://news.ycombinator.com/item?id=17576024&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 207&lt;/p&gt;&lt;p&gt;# Comments: 114&lt;/p&gt;</description>
<pubDate>Fri, 20 Jul 2018 15:51:52 +0000</pubDate>
<dc:creator>humbfool2</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://kanbanmail.app/</dc:identifier>
</item>
<item>
<title>The Octonion Math That Could Underpin Physics</title>
<link>https://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720</link>
<guid isPermaLink="true" >https://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720</guid>
<description>&lt;p&gt;After breaks from school spent ski-bumming, bartending abroad and intensely training as a mixed martial artist, Furey later met the division algebras again in an advanced geometry course and learned just how peculiar they become in four strokes. When you double the dimensions with each step as you go from real numbers to complex numbers to quaternions to octonions, she explained, “in every step you lose a property.” Real numbers can be ordered from smallest to largest, for instance, “whereas in the complex plane there’s no such concept.” Next, quaternions lose commutativity; for them, a × b doesn’t equal b × a. This makes sense, since multiplying higher-dimensional numbers involves rotation, and when you switch the order of rotations in more than two dimensions you end up in a different place. Much more bizarrely, the octonions are nonassociative, meaning (a × b) × c doesn’t equal a × (b × c). “Nonassociative things are strongly disliked by mathematicians,” said &lt;a href=&quot;http://math.ucr.edu/home/baez/&quot;&gt;John Baez&lt;/a&gt;, a mathematical physicist at the University of California, Riverside, and a leading expert on the octonions. “Because while it’s very easy to imagine noncommutative situations — putting on shoes then socks is different from socks then shoes — it’s very difficult to think of a nonassociative situation.” If, instead of putting on socks then shoes, you first put your socks into your shoes, technically you should still then be able to put your feet into both and get the same result. “The parentheses feel artificial.”&lt;/p&gt;
&lt;p&gt;The octonions’ seemingly unphysical nonassociativity has crippled many physicists’ efforts to exploit them, but Baez explained that their peculiar math has also always been their chief allure. Nature, with its four forces batting around a few dozen particles and anti-particles, is itself peculiar. The Standard Model is “quirky and idiosyncratic,” he said.&lt;/p&gt;
&lt;p&gt;In the Standard Model, elementary particles are manifestations of three “symmetry groups” — essentially, ways of interchanging subsets of the particles that leave the equations unchanged. These three symmetry groups, SU(3), SU(2) and U(1), correspond to the strong, weak and electromagnetic forces, respectively, and they “act” on six types of quarks, two types of leptons, plus their anti-particles, with each type of particle coming in three copies, or “generations,” that are identical except for their masses. (The fourth fundamental force, gravity, is described separately, and incompatibly, by Einstein’s general theory of relativity, which casts it as curves in the geometry of space-time.)&lt;/p&gt;
&lt;p&gt;Sets of particles manifest the symmetries of the Standard Model in the same way that four corners of a square must exist in order to realize a symmetry of 90-degree rotations. The question is, why this symmetry group — SU(3) × SU(2) × U(1)? And why this particular particle representation, with the observed particles’ funny assortment of charges, curious handedness and three-generation redundancy? The conventional attitude toward such questions has been to treat the Standard Model as a broken piece of some &lt;a href=&quot;https://www.quantamagazine.org/no-proton-decay-means-grand-unification-must-wait-20161215/&quot;&gt;more complete theoretical structure&lt;/a&gt;. But a competing tendency is to try to use the octonions and “get the weirdness from the laws of logic somehow,” Baez said.&lt;/p&gt;
&lt;p&gt;Furey began seriously pursuing this possibility in grad school, when she learned that quaternions capture the way particles translate and rotate in 4-D space-time. She wondered about particles’ internal properties, like their charge. “I realized that the eight degrees of freedom of the octonions could correspond to one generation of particles: one neutrino, one electron, three up quarks and three down quarks,” she said — a bit of numerology that had raised eyebrows before. The coincidences have since proliferated. “If this research project were a murder mystery,” she said, “I would say that we are still in the process of collecting clues.”&lt;/p&gt;
&lt;h2&gt;The Dixon Algebra&lt;/h2&gt;
&lt;p&gt;To reconstruct particle physics, Furey uses the product of the four division algebras, $latex \mathbb{R}\otimes\mathbb{C}\otimes\mathbb{H}\otimes\mathbb{O}$ ($latex \mathbb{R}$ for reals, $latex \mathbb{C}$ for complex numbers, $latex \mathbb{H}$ for quaternions and $latex \mathbb{O}$ for octonions) — sometimes called the Dixon algebra, after Geoffrey Dixon, a physicist who first took this tack in the 1970s and ’80s before failing to get a faculty job and leaving the field. (Dixon forwarded me a passage from his memoirs: “What I had was an out-of-control intuition that these algebras were key to understanding particle physics, and I was willing to follow this intuition off a cliff if need be. Some might say I did.”)&lt;/p&gt;
&lt;p&gt;Whereas Dixon and others proceeded by mixing the division algebras with extra mathematical machinery, Furey restricts herself; in her scheme, the algebras “act on themselves.” Combined as $latex \mathbb{R}\otimes\mathbb{C}\otimes\mathbb{H}\otimes\mathbb{O}$, the four number systems form a 64-dimensional abstract space. Within this space, in Furey’s model, particles are mathematical “ideals”: elements of a subspace that, when multiplied by other elements, stay in that subspace, allowing particles to stay particles even as they move, rotate, interact and transform. The idea is that these mathematical ideals are the particles of nature, and they manifest the symmetries of $latex \mathbb{R}\otimes\mathbb{C}\otimes\mathbb{H}\otimes\mathbb{O}$.&lt;/p&gt;
&lt;p&gt;As Dixon knew, the algebra splits cleanly into two parts: $latex \mathbb{C}\otimes\mathbb{H}$ and $latex \mathbb{C}\otimes\mathbb{O}$, the products of complex numbers with quaternions and octonions, respectively (real numbers are trivial). In Furey’s model, the symmetries associated with how particles move and rotate in space-time, together known as the Lorentz group, arise from the quaternionic $latex \mathbb{C}\otimes\mathbb{H}$ part of the algebra.  The symmetry group SU(3) × SU(2) × U(1), associated with particles’ internal properties and mutual interactions via the strong, weak and electromagnetic forces, come from the octonionic part, $latex \mathbb{C}\otimes\mathbb{O}$.&lt;/p&gt;
&lt;p&gt;Günaydin and Gürsey, in their early work, already found SU(3) inside the octonions. Consider the base set of octonions, 1, e&lt;sub&gt;1&lt;/sub&gt;, e&lt;sub&gt;2&lt;/sub&gt;, e&lt;sub&gt;3&lt;/sub&gt;, e&lt;sub&gt;4&lt;/sub&gt;, e&lt;sub&gt;5&lt;/sub&gt;, e&lt;sub&gt;6&lt;/sub&gt; and e&lt;sub&gt;7&lt;/sub&gt;, which are unit distances in eight different orthogonal directions: They respect a group of symmetries called G2, which happens to be one of the &lt;a href=&quot;https://www.quantamagazine.org/mathematicians-chase-moonshine-string-theory-connections-20150312/&quot;&gt;rare “exceptional groups”&lt;/a&gt; that can’t be mathematically classified into other existing symmetry-group families. The octonions’ intimate connection to all the exceptional groups and other special mathematical objects has compounded the belief in their importance, convincing the eminent Fields medalist and Abel Prize–winning mathematician &lt;a href=&quot;https://www.quantamagazine.org/michael-atiyahs-mathematical-dreams-20160303/&quot;&gt;Michael Atiyah&lt;/a&gt;, for example, that the final theory of nature must be octonionic. “The real theory which we would like to get to,” he &lt;a href=&quot;https://www.youtube.com/watch?v=zCCxOE44M_M&quot;&gt;said&lt;/a&gt; in 2010, “should include gravity with all these theories in such a way that gravity is seen to be a consequence of the octonions and the exceptional groups.” He added, “It will be hard because we know the octonions are hard, but when you’ve found it, it should be a beautiful theory, and it should be unique.”&lt;/p&gt;
&lt;p&gt;Holding e&lt;sub&gt;7&lt;/sub&gt; constant while transforming the other unit octonions reduces their symmetries to the group SU(3). Günaydin and Gürsey used this fact to build an octonionic model of the strong force acting on a single generation of quarks.&lt;/p&gt;
</description>
<pubDate>Fri, 20 Jul 2018 15:09:14 +0000</pubDate>
<dc:creator>jonbaer</dc:creator>
<og:title>The Octonion Math That Could Underpin Physics | Quanta Magazine</og:title>
<og:type>article</og:type>
<og:url>https://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720/</og:url>
<og:image>https://d2r55xnwy6nx47.cloudfront.net/uploads/2018/07/CohlFurey_FanoPlane_520x292.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720</dc:identifier>
</item>
<item>
<title>Classic Algorithms Implemented in JavaScript</title>
<link>https://github.com/trekhleb/javascript-algorithms/blob/master/README.md</link>
<guid isPermaLink="true" >https://github.com/trekhleb/javascript-algorithms/blob/master/README.md</guid>
<description>
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/trekhleb/javascript-algorithms&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/b3e445b0665599698cda16bf6117a49960746f00/68747470733a2f2f7472617669732d63692e6f72672f7472656b686c65622f6a6176617363726970742d616c676f726974686d732e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/trekhleb/javascript-algorithms.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/58822f014644c96206289824da57ac8dbfcb9e59/68747470733a2f2f636f6465636f762e696f2f67682f7472656b686c65622f6a6176617363726970742d616c676f726974686d732f6272616e63682f6d61737465722f67726170682f62616467652e737667&quot; alt=&quot;codecov&quot; data-canonical-src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt;
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/README.zh-CN.md&quot;&gt;简体中文&lt;/a&gt;, &lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/README.zh-TW.md&quot;&gt;繁體中文&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://upscri.be/402324/&quot; rel=&quot;nofollow&quot;&gt;→ Be notified when the JavaScript Algorithms book launches&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Data Structures&lt;/h2&gt;
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt;
&lt;h2&gt;Algorithms&lt;/h2&gt;
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt;
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt;
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used.
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;How to use this repository&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm install
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm run lint
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm test -- 'LinkedList'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm test -- 'playground'
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Useful Information&lt;/h2&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot; rel=&quot;nofollow&quot;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Big O Notation&lt;/h3&gt;
&lt;p&gt;Order of growth of algorithms specified in Big O notation.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/assets/big-o-graph.png&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot; rel=&quot;nofollow&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Big O Notation&lt;/th&gt;
&lt;th&gt;Computations for 10 elements&lt;/th&gt;
&lt;th&gt;Computations for 100 elements&lt;/th&gt;
&lt;th&gt;Computations for 1000 elements&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;600&lt;/td&gt;
&lt;td&gt;9000&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;10000&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1024&lt;/td&gt;
&lt;td&gt;1.26e+29&lt;/td&gt;
&lt;td&gt;1.07e+301&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;3628800&lt;/td&gt;
&lt;td&gt;9.3e+157&lt;/td&gt;
&lt;td&gt;4.02e+2567&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Data Structure&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Access&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Search&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Insertion&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Deletion&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;-&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;-&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;-&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;False positives are possible while searching&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Best&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Average&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Worst&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Memory&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Stable&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;No&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;No&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;No&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n log(n)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;depends on gap sequence&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n (log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;No&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;r - biggest number in array&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;n + k&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;k - length of longest key&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</description>
<pubDate>Fri, 20 Jul 2018 08:48:48 +0000</pubDate>
<dc:creator>trekhleb</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/3000285?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>trekhleb/javascript-algorithms</og:title>
<og:url>https://github.com/trekhleb/javascript-algorithms</og:url>
<og:description>javascript-algorithms - Algorithms and data structures implemented in JavaScript with explanations and links to further readings</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/trekhleb/javascript-algorithms/blob/master/README.md</dc:identifier>
</item>
<item>
<title>Farewell, Google Maps</title>
<link>https://www.inderapotheke.de/blog/farewell-google-maps</link>
<guid isPermaLink="true" >https://www.inderapotheke.de/blog/farewell-google-maps</guid>
<description>&lt;p&gt;&lt;span&gt;Google decided to make Maps its next billion dollar business by raising prices 14 times and decreasing free usage limit almost 30 times, all with minimal notice period. Fortunately, the move energised map competitors. Apple Maps, Mapbox, TomTom - which alternative is best for mid- and larger sites?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(this is an English version of the article based on our &lt;a href=&quot;https://www.gdziepolek.pl/blog/pozegnanie-z-google-maps&quot; target=&quot;_blank&quot;&gt;GdziePoLek.pl&lt;/a&gt; site in Poland)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Our startup allows patients to find medicines they need in brick-and-mortar pharmacies. Even from the name (&quot;&lt;span&gt;where I get my meds&lt;/span&gt;&quot; in English) you could tell that &lt;span&gt;location&lt;/span&gt; is an important part of it. It is easy to explain how the service works through a single picture, and Google Maps has always been a prominent background of it:&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Typical web page for our service: showing availability of the product&lt;/p&gt;
&lt;img src=&quot;https://whereigetmymeds.azureedge.net/img/2018/maps-intro.jpg&quot;/&gt;&lt;p&gt;Of course, we always knew that as we grew larger, there would be cost to using Google Maps.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Up till now, free usage limit of about 750 thousand map loads per month was well aligned with scale when one can expect to generate revenues that cover the cost. Price for commercial usage ($0.5 for 1000 map loads) was not high enough to consider alternatives.&lt;/p&gt;
&lt;p&gt;In June, however, we got an email as a &quot;high usage&quot; client of Google Maps:&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Email from Google&lt;/p&gt;
&lt;img src=&quot;https://whereigetmymeds.azureedge.net/img/2018/maps-email.jpg&quot;/&gt;&lt;p&gt;After a conference call with Google Maps customer service (who, contrary to the email, offered no discounts or credits whatsoever) we realised that price increases are huge:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Current free usage limit of &lt;span&gt;750k&lt;/span&gt; requests monthly turns into ca. &lt;span&gt;28k&lt;/span&gt; requests (almost 30 times less)&lt;/li&gt;
&lt;li&gt;Current &lt;span&gt;$0.5&lt;/span&gt; for commercial usage becomes &lt;span&gt;$7&lt;/span&gt; (14 times more), $5.60 with high volume&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Importantly, prices are the same from US to the Africa, despite the fact that revenue generation is vastly different in most developed countries compared to the others. We know it well from comparing Polish market to Germany, as we expand there. &lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Comparison of Google Maps monthly bill before and after price hike&lt;/p&gt;
&lt;img src=&quot;https://whereigetmymeds.azureedge.net/img/2018/maps-monthly-cost-en.jpg&quot;/&gt;&lt;p&gt;If we maintained current monthly usage of both maps and Places (ie. location search), the cost of Google Maps would be multiple times higher than the total cost of all other infrastructure.&lt;/p&gt;
&lt;h2&gt;Comparing visuals and level of detail &lt;/h2&gt;
&lt;p&gt;Google Maps is objectively the best product on its market, in many regards positioned light years ahead of its competitors. &lt;a href=&quot;https://www.justinobeirne.com/google-maps-moat&quot; target=&quot;_blank&quot;&gt;Excellent analysis&lt;/a&gt; of how advanced are Google's maps compared to the others was published by Justin O’Beirne.&lt;/p&gt;
&lt;p&gt;The good news is that even though maps are such an important part of our user interface, they serve no more advanced purpose than effectively visualising locations of pharmacies. Therefore we do not use advanced functions which are most likely to have proprietary APIs, such as satellite images, routes calculation and others.&lt;/p&gt;
&lt;p&gt;What's important is visual quality of the maps and level of detail that they provide in the territory where we operate, which is mostly Poland and, hopefully soon, Germany. Below comparison of how the same location in the centre of Warsaw looks like with different map providers:&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Same pharmacy in Warsaw on various maps&lt;/p&gt;
&lt;img src=&quot;https://whereigetmymeds.azureedge.net/img/2018/maps_warsaw_zv0dox.jpg&quot;/&gt;&lt;p class=&quot;caption&quot;&gt;Where it was possible we overlayed our custom markers&lt;/p&gt;
&lt;p&gt;On the first glance, it seems that almost all providers would provide satisfactory experience as far as centre of Warsaw is concerned. One exception might be Azure Maps, which was made available just in the previous months. To be fair, Microsoft claims that perceived emptiness of its maps is intentional and for the benefit of its large corporate partners, who like to overlay a large amount of their own information on the maps.&lt;/p&gt;
&lt;p&gt;Perhaps centre of Warsaw might not be representative of the whole country, however, and map quality for smaller cities might be worse. Therefore we also compared views in the smaller town (Konstancin):&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Pharmacy in vicinity Konstancin-Jeziorna&lt;/p&gt;
&lt;img src=&quot;https://whereigetmymeds.azureedge.net/img/2018/maps_konstancin_od0pyx.jpg&quot;/&gt;&lt;p&gt;Despite our initial concerns, it turned out that we are not hostage to Google Maps after all and many alternatives look surprisingly decent in Poland.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Added:&lt;/span&gt; often there is an opportunity to create a custom map style, which we didn't explore as we don't use custom maps on our site. But it's clearly an important thing for Mapbox, where mentions of various editors confused us slightly at pricing (below), and MapTiler (customisation tutorial &lt;a href=&quot;https://www.maptiler.com/how-to/make-own-map-design/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;Comparing prices&lt;/h2&gt;
&lt;p&gt;Map providers use different pricing models, which makes direct comparison of prices difficult. Here is an overview of the options for paid usage (not taking into account free usage allowance):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Google Maps&lt;/span&gt; - $7 for each 1000 map loads irrespective of map size or zooming/panning by the user ($5.60 with discount for high volume)&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Mapbox&lt;/span&gt; - $0.50 for each (edit: 1000) &quot;map views&quot;, which despite the name is not a map view, but request of 4 or 15 map tiles (depending on map type), rounded up&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Azure Maps&lt;/span&gt; - $0.50 for 1000 &quot;transactions&quot;, where transaction is equal to 15 map tiles &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;TomTom&lt;/span&gt; - $0.50 for 1000 “transactions” ($0.40 with highest volume discounts), each transaction is equal to 15 map tiles&lt;/li&gt;
&lt;li&gt;&lt;span&gt;HERE&lt;/span&gt; - pricing is by bundles, Standard bundle amounts to  $0.50 for 1000 “transactions” (15 tiles)&lt;/li&gt;
&lt;li&gt;&lt;span&gt;MapTiler&lt;/span&gt; - $0.05 for each map tile&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Apple Maps&lt;/span&gt; - so far is in beta and offers a generous free usage allowance, no commercial pricing available&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We find Google model most transparent (leaving aside the price), because every web site page view with a map on it will have the same price.&lt;/p&gt;
&lt;p&gt;In case of paying by each map tile, as with MapTiler, things are getting more complicated. How many tiles are present on each map depends on its size, which in case of responsive sites might be different for each user depending on the screen resolution. Apart from that, user might move map around or zoom, drawing further tiles.&lt;/p&gt;
&lt;p&gt;The least transparent we found the pricing terms of Mapbox. Not only it's unclear how many tiles are calculated for each &quot;map view&quot;, the term itself is misleading (other companies use &quot;transaction&quot;, which doesn't imply that it's a full cost for map view like with Google Maps).&lt;/p&gt;
&lt;p&gt;From looking at pricing terms it's hard to reason what would be the actual daily cost for the whole site. Our startup, for example, uses both small maps on pharmacies' profiles, as well as huge full-screen maps presenting search results - but only for desktop users.&lt;/p&gt;
&lt;h2&gt;Short list of alternatives&lt;/h2&gt;
&lt;p&gt;Which maps should we investigate deeper?&lt;/p&gt;
&lt;p&gt;Some options we could reject quickly for various reasons. &lt;span&gt;OpenStreetMap&lt;/span&gt; is not supposed to be directly used by commercial sites. &lt;span&gt;Apple Maps&lt;/span&gt;, even though we wouldn't mind having Apple logo on our site somewhere, was just released as beta and requires Apple developer account to test properly.&lt;/p&gt;
&lt;p&gt;We would love to be able to use &lt;span&gt;Azure Maps&lt;/span&gt; along with other services that we are already using on Azure. However, proprietary Javascript API leaves much to be desired, even when one tries to implement the simplest use cases (eg. custom markers).&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HERE&lt;/span&gt; maps seem a poor match visually for our site (too stark), have proprietary interface and we prefer pay-as-you-go billing to bundles. But a large site that we know decided to migrate to HERE, so we will see how it works for them.&lt;/p&gt;
&lt;p&gt;We find the most attractive option to be using one common, open source javascript library - like &lt;span&gt;Leaflet&lt;/span&gt; - allowing seamless changes of underlying providers of the actual map tiles.&lt;/p&gt;
&lt;p&gt;Such opportunity can be had if we went with &lt;span&gt;Mapbox&lt;/span&gt; or &lt;span&gt;MapTiler&lt;/span&gt;, and perhaps TomTom, which, however, uses a slightly modified Leaflet client and requires pre-paid billing instead of pay-as-you-go which we prefer.&lt;/p&gt;
&lt;h2&gt;Comparing actual daily cost for our site&lt;/h2&gt;
&lt;p&gt;We upgraded our web application in order to be able to switch map provider by a single click in the administration console. Then we watched amount of resources that we consumed daily in case of each short-listed map provider, ie. Google Maps, Mapbox and MapTiler.&lt;/p&gt;
&lt;p&gt;Here is how it went.&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Comparing the actual cost for maps on a single day (15,000 total site visits, of which not all might involve maps) &lt;/p&gt;
&lt;img src=&quot;https://whereigetmymeds.azureedge.net/img/2018/maps-daily-cost-en.jpg&quot;/&gt;&lt;p class=&quot;caption&quot;&gt;Comparison is specific to GdziePoLek.pl and its usage of maps across the site, as well as screen sizes of its users, resulting in maps of different sizes &lt;/p&gt;
&lt;p&gt;Google Maps would have most favorable model for users of big and intensively interacted with maps, like us, but radical price increase puts the cost way higher than alternatives.&lt;/p&gt;
&lt;p&gt;As it turned, cost of using Mapbox and MapTiler in our case is comparable, despite slightly different billing model.&lt;/p&gt;
&lt;p&gt;Mapbox has more resources to its disposal - 400 employees according to LinkedIn, compared to MapTiler's 7 team members - thanks to Softbank's $164m investment. On the other hand, having acquired that much capital, the company is branching out in several directions (autonomous driving, VR...) which for a user dependent on its maps service might be somehow concerning. Therefore we will keep using both services in parallel.&lt;/p&gt;
&lt;h2&gt;Lessons learned&lt;/h2&gt;
&lt;p&gt;If not for radical price hike, we would not embark upon looking for Google Maps replacement, as it would be clearly a &quot;not broken - don't repair it&quot; situation. &lt;/p&gt;
&lt;p&gt;Sudden change of policy by Google, which is directed specifically at startups (as smaller web sites should largely remain below even the new lower thresholds), is surely an unpleasant surprise for us and does not create much trust in Google as a vendor. In the future we would therefore keep our distance from &lt;span&gt;Google Cloud&lt;/span&gt; and avoid deep integration with any Google services on which it can pull a similar trick. For example we would be wary on taking free &lt;span&gt;Google Analytics&lt;/span&gt; for granted.&lt;/p&gt;
&lt;p&gt;On a positive note we were impressed by the quality of open source code for operating maps (Leaflet). Some advanced functions which we had implement ourselves on Google side were readily available in Leaflet.&lt;/p&gt;
&lt;p&gt;For people starting development of a startup making heavy use of maps, we would recommend using Leaflet and independent map vendors and avoiding dependence on Google.&lt;/p&gt;
</description>
<pubDate>Thu, 19 Jul 2018 20:36:38 +0000</pubDate>
<dc:creator>ScottWRobinson</dc:creator>
<og:title>Farewell, Google Maps</og:title>
<og:description>Google decided to make Maps its next billion dollar business by raising prices 14 times and decreasing free usage limit almost 30 times, all with minimal notice period. Fortunately, the move energised map competitors. Apple Maps, Mapbox, TomTom - which alternative is best for mid- and larger sites?</og:description>
<og:url>https://www.inderapotheke.de/blog/farewell-google-maps</og:url>
<og:image>https://whereigetmymeds.azureedge.net/img/2018/maps-og.jpg</og:image>
<dc:language>de</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.inderapotheke.de/blog/farewell-google-maps</dc:identifier>
</item>
<item>
<title>JavaScript fundamentals before learning React</title>
<link>https://www.robinwieruch.de/javascript-fundamentals-react-requirements/</link>
<guid isPermaLink="true" >https://www.robinwieruch.de/javascript-fundamentals-react-requirements/</guid>
<description>&lt;header&gt;
&lt;/header&gt;&lt;div class=&quot;text-center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://www.instagram.com/rwieruch&quot; class=&quot;instagram-button-follow&quot;&gt;Follow&lt;/a&gt;   &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://twitter.com/intent/follow?screen_name=rwieruch&quot; class=&quot;generic-button-follow&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/rwieruch.svg?style=social&amp;amp;logo=twitter&amp;amp;label=Follow&quot; alt=&quot;Follow on Twitter&quot;/&gt;&lt;/a&gt;   &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/rwieruch&quot; class=&quot;generic-button-follow&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/followers/rwieruch.svg?style=social&amp;amp;logo=github&amp;amp;label=Follow&quot; alt=&quot;Follow on GitHub&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p class=&quot;text-muted text-uppercase mb-small text-center&quot;&gt;&lt;time datetime=&quot;2018-07-18&quot; itemprop=&quot;datePublished&quot;&gt;July 18, 2018&lt;/time&gt;&lt;span class=&quot;hidden-xs hidden-sm&quot;&gt;- &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/rwieruch/blog_robinwieruch_content/blob/master/javascript-fundamentals-react-requirements.md&quot;&gt;Edit this Post on GitHub&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;em&gt;This month, all articles are sponsored by TRUMPF Laser GmbH. The german company I worked with is using a sophisticated React with GraphQL and .NET tech stack. They are hiring eager developers for their sites in &lt;a target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot; href=&quot;https://job-application.trumpf.com/9027-full-stack-softwareentwickler-m-w-c-mobile-web-am-standort-in-berlin/de/job.html&quot;&gt;Berlin&lt;/a&gt; and &lt;a target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot; href=&quot;https://job-application.trumpf.com/6433-full-stack-softwareentwickler-m-w-c-mobile-web/de/job.html&quot;&gt;Schramberg&lt;/a&gt;. If you are interested to bring highly configurable laser device user interfaces to their clients all over the world, write them a striking application with a cover letter.&lt;/em&gt;&lt;/div&gt;
&lt;div class=&quot;post-image-primary&quot;&gt;
&lt;div class=&quot;pinterest-pinner-wrapper&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;

&lt;img class=&quot;img-lazy img-responsive&quot; data-lazy-src=&quot;/img/posts/javascript-fundamentals-react-requirements/banner.jpg&quot; data-is-src-set=&quot;is-src-set&quot; alt=&quot;react js requirements&quot; itemprop=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After all my teachings about React, be it online for a larger audience or on-site for companies transitioning to web development and React, I always come to the conclusion that React is all about JavaScript. Newcomers to React but also myself see it as an advantage, because you carry your JavaScript knowledge for a longer time around compared to your React skills.&lt;/p&gt;
&lt;p&gt;During my workshops a greater part of the material is about JavaScript and not React. Most of it boils down to JavaScript ES6 and beyond features and syntax, but also ternary operators, shorthand versions in the language, the &lt;code&gt;this&lt;/code&gt; object, JavaScript built-in functions (map, reduce, filter) or more general concepts such as composability, reusability, immutability or higher-order functions. These are the fundamentals, which you don’t need necessarily to master before starting with React, but which will definitely come up while learning or practicing it.&lt;/p&gt;
&lt;p&gt;The following walkthrough is my attempt giving you an almost extensive yet concise list about all the different JavaScript functionalities to complement your React application. If you have any other things which are not in the list, just leave a comment for this article and I will keep it up to date.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;toc&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;div class=&quot;box-inline col-md-12&quot;&gt;
&lt;div class=&quot;col-md-12 text-center&quot;&gt;
&lt;h2 class=&quot;newsletter&quot;&gt;The Road to learn React&lt;/h2&gt;
&lt;div class=&quot;col-md-4&quot;&gt;&lt;img class=&quot;img-lazy img-responsive&quot; data-lazy-src=&quot;https://www.robinwieruch.de/img/page/cover.png&quot; alt=&quot;package&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;lead&quot;&gt;Build a Hacker News App along the way. No setup configuration. No tooling. No Redux. Plain React in 190+ pages of learning material. Pay what you want like &lt;strong&gt;33.000+ readers&lt;/strong&gt;.&lt;/p&gt;
&lt;a class=&quot;btn btn-template-main&quot; href=&quot;https://www.getrevue.co/profile/rwieruch&quot;&gt;Get the Book &lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript&quot;&gt;Entering React after learning JavaScript&lt;/h2&gt;
&lt;p&gt;When you enter the world of React, the usual suspect is &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebook/create-react-app&quot;&gt;create-react-app&lt;/a&gt; for starting a React project. After you have set up your project, you are confronted with the following &lt;strong&gt;React class component&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;logo&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./logo.svg'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;'./App.css'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;header&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-header&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;logo&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-logo&quot;&lt;/span&gt; &lt;span&gt;alt&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;logo&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-title&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Welcome&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/header&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-intro&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;To&lt;/span&gt; &lt;span&gt;get&lt;/span&gt; &lt;span&gt;started&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;edit&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;App&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;js&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/code&amp;gt; and save to reload.&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguably, a React class component may not be the best starting point. There are lots of things to digest for newcomers which are not necessarily React: class statements, class methods and inheritance. Also the import statements are only adding complexity when learning React. Even though the main focus point should be JSX (React’s syntax) in the very beginning, often all the things around demand explanations as well. This article is supposed to shed some light into all the things around, most of it JavaScript, without worrying too much about React.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript-classes&quot;&gt;React and JavaScript Classes&lt;/h2&gt;
&lt;p&gt;Being confronted with a React class component in the beginning, requires the prior knowledge about JavaScript classes. One would assume that this is given knowledge, but it isn’t, because JavaScript classes are fairly new in the language. Previously, there was only &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain&quot;&gt;JavaScript’s prototype chain&lt;/a&gt; which could be used for inheritance too. JavaScript classes build up on top of the prototypical inheritance giving the whole thing a simpler representation.&lt;/p&gt;
&lt;p&gt;One way to define a React component is using a JavaScript class. In order to understand JavaScript classes, you can take some time learning about them without React.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Developer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;constructor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;getName&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;' '&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;var&lt;/span&gt; &lt;span&gt;me&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Developer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;'Wieruch'&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;me&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getName&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A class describes an &lt;strong&gt;entity&lt;/strong&gt; which is used as a blueprint to create an &lt;strong&gt;instance&lt;/strong&gt; of this entity. Once an instance of the class gets created with the &lt;code&gt;new&lt;/code&gt; statement, the constructor of the class is called which instantiates the instance of the class. Therefore, a class can have properties which are usually located in its constructor. In addition, class methods (e.g. &lt;code&gt;getName()&lt;/code&gt;) are used to read (or write) data of the instance. The instance of the class is represented as the &lt;code&gt;this&lt;/code&gt; object within the class, but outside the instance is just assigned to a JavaScript variable.&lt;/p&gt;
&lt;p&gt;Usually classes are used for inheritance in object-oriented programming. They are used for the same in JavaScript whereas the &lt;code&gt;extends&lt;/code&gt; statement can be used to inherit with one class from another class. The more specialized class with the &lt;code&gt;extends&lt;/code&gt; statements inherits all the abilities from the more general class, but can add its specialized abilities to it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Developer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;constructor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;getName&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;' '&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ReactDeveloper&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Developer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;getJob&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'React Developer'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;&lt;span&gt;var&lt;/span&gt; &lt;span&gt;me&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;ReactDeveloper&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;'Wieruch'&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;me&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getName&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;
&lt;span&gt;&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;me&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getJob&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically that’s all it needs to fully understand React class components. A JavaScript class is used for defining a React component, but as you can see, the React component is only a React component because it inherits all the abilities from the React Component class which is imported from the React package.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Welcome&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s why the &lt;code&gt;render()&lt;/code&gt; method is mandatory in React class components: The React Component from the imported React package instructs you to use it for displaying something in the browser. Furthermore, without extending from the React Component, you wouldn’t be able to use other &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://reactjs.org/docs/react-component.html&quot;&gt;lifecycle methods&lt;/a&gt; (including the &lt;code&gt;render()&lt;/code&gt; method). For instance, there wouldn’t be a &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method, because the component would be an instance of a vanilla JavaScript class. And not only the lifecycle methods would go away, React’s API methods such as &lt;code&gt;this.setState()&lt;/code&gt; for local state management wouldn’t be available as well.&lt;/p&gt;
&lt;p&gt;However, as you have seen, using a JavaScript class is beneficial for extending the general class with your specialized behavior. Thus you can introduce your own class methods or properties.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'Welcome to React'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;()}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you know why React uses JavaScript classes for defining React class components. They are used when you need access to React’s API (lifecycle methods, &lt;code&gt;this.state&lt;/code&gt; and &lt;code&gt;this.setState()&lt;/code&gt;). In the following, you will see how React components can be defined in a different way, without using a JavaScript class, because you may not need always class methods, lifecycle methods and state.&lt;/p&gt;
&lt;p&gt;After all, JavaScript classes welcome one using inheritance in React, which isn’t a desired outcome for React, &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://reactjs.org/docs/composition-vs-inheritance.html&quot;&gt;because React favors composition over inheritance&lt;/a&gt;. So the only class you should extend from for your React components should be the official React Component.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-arrow-functions&quot;&gt;Arrow Functions in React&lt;/h2&gt;
&lt;p&gt;When teaching someone about React, I explain &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;JavaScript arrow functions&lt;/a&gt; pretty early. They are one of JavaScript’s language additions in ES6 which pushed JavaScript forward in functional programming.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;// JavaScript ES5 function&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'Welcome to JavaScript'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;// JavaScript ES6 arrow function with body&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'Welcome to JavaScript'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;// JavaScript ES6 arrow function without body and implicit return&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;'Welcome to JavaScript'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript arrow functions are often used in React applications for keeping the code concise and readable. I love them, teach them early, but always try to refactor my functions from JavaScript ES5 to ES6 functions along the way. At some point, when the differences between JavaScript ES5 functions and JavaScript ES6 functions are clear, I stick to the JavaScript ES6 way of doing it with arrow functions. However, I always see that too many different syntaxes can be overwhelming for React newcomers. So I try to make the different characteristics of JavaScript functions clear before going all-in using them in React. In the following sections, you will see how JavaScript arrow functions are commonly used in React.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript-functional-components&quot;&gt;Functions as Components in React&lt;/h2&gt;
&lt;p&gt;React uses the best of different programming paradigms. That’s only possible because JavaScript is a many-sided programming language. On the object-oriented programming side, React’s class components are a great way of leveraging the abilities of JavaScript classes (inheritance for the React component API, class methods and class properties such as &lt;code&gt;this.state&lt;/code&gt;). On the other side, there are lots of concepts from functional programming used in React (and its ecosystem) too. For instance, &lt;strong&gt;React’s functional stateless components&lt;/strong&gt; are another way of defining components in React. The question which led us functional stateless components in React: What if components could be used like functions?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;view&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s a function (functional) which receives an input (e.g. props) and returns the displayed HTML elements (view). It doesn’t need to manage any state (stateless) and doesn’t need to be aware about any methods (class methods, lifecycle methods). Under the hood, the function only needs to use the rendering mechanism of the &lt;code&gt;render()&lt;/code&gt; method from React components. That’s when functional stateless components were introduced.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;Greeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Functional stateless components are the preferred way of defining components in React. They have less boilerplate, add less complexity, and are simpler to maintain than React class components. However, as for now, both have their right to exist.&lt;/p&gt;
&lt;p&gt;Previously, the article mentioned JavaScript arrow functions and how they improve your React code. Let’s apply these kind of functions to your functional stateless components. The previous Greeting component has two different looks with JavaScript ES5 and ES6:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;// JavaScript ES5 function&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;Greeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;// JavaScript ES6 arrow function&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;Greeting&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;// JavaScript ES6 arrow function without body and implicit return&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;Greeting&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript arrow functions are a great way of keeping your functional stateless components in React concise. Even more when there is no computation in between and thus the function body and return statement can be left out.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-class-component-syntax&quot;&gt;React Class Component Syntax&lt;/h2&gt;
&lt;p&gt;React’s way on defining components evolved over time. In its early stages, the &lt;code&gt;React.createClass()&lt;/code&gt; method was the default way of creating a React class component. Nowadays, it isn’t used anymore, because with the rise of JavaScript ES6, the previously used React class component syntax became the default.&lt;/p&gt;
&lt;p&gt;However, JavaScript is evolving constantly and thus JavaScript enthusiast pick up new ways of doing things all the time. That’s why you will find often different syntaxes for React class components. One way of defining a React class component, with state and class methods, is the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Counter&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;constructor&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;};&lt;/span&gt;

    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onIncrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onIncrement&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;bind&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onDecrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onDecrement&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;bind&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;onIncrement&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;onDecrement&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;onClick&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onIncrement&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;button&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Increment&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/button&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;onClick&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onDecrement&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;button&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Decrement&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/button&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, when implementing lots of React class components, the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://medium.freecodecamp.org/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56&quot;&gt;binding of class methods&lt;/a&gt; in the constructor and having a constructor in the first place becomes a tedious implementation detail. Fortunately, there is a shorthand syntax for getting rid of both annoyances:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Counter&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;onIncrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

&lt;span&gt;  &lt;span&gt;onDecrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;onClick&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onIncrement&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;button&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Increment&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/button&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;onClick&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onDecrement&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;button&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Decrement&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/button&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By using JavaScript arrow functions, you can auto-bind class methods without having to bind them in the constructor. Also the constructor can be left out, when not using the props, by defining the state directly as a class property. (Note: Be aware that &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-class-properties/&quot;&gt;class properties&lt;/a&gt; are not in the JavaScript language yet.) Therefore you can say that this way of defining a React class component is way more concise than the other version.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript-template-literals&quot;&gt;Template Literals in React&lt;/h2&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;Template literals&lt;/a&gt; are another JavaScript language specific feature that came with JavaScript ES6. It is worth to mention it shortly, because when people new to JavaScript and React see them, they can be confusing as well. What you are growing up with is the following syntax for concatenating a string:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;what&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'Welcome to '&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;what&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;greeting&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'JavaScript'&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// Welcome to JavaScript&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Template literals can be used for the same which is called string interpolation:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;what&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;`Welcome to &lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;what&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;`&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You only have to use backticks and the &lt;code&gt;${}&lt;/code&gt; notation for inserting JavaScript primitives. However, string literals are not only used for string interpolation, but also for multiline strings in JavaScript:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getGreeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;what&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;`&lt;/span&gt;
&lt;span&gt;    Welcome&lt;/span&gt;
&lt;span&gt;    to&lt;/span&gt;
&lt;span&gt;    &lt;/span&gt;&lt;span&gt;${&lt;/span&gt;&lt;span&gt;what&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;  `&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically that’s how larger text blocks can be formatted on multiple lines. Otherwise, it can be seen with the &lt;a href=&quot;https://www.robinwieruch.de/react-with-graphql-tutorial/&quot;&gt;recent introduction of GraphQL in JavaScript&lt;/a&gt; too.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript-map-reduce-filter&quot;&gt;Map, Reduce and Filter in React&lt;/h2&gt;
&lt;p&gt;What’s the best approach teaching the JSX syntax for React newcomers? Usually I start out with defining a variable in the &lt;code&gt;render()&lt;/code&gt; method and using it as JavaScript in HTML in the return block.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;var&lt;/span&gt; &lt;span&gt;greeting&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Welcome to React'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You only have to use the curly braces to get your JavaScript in HTML. Going from rendering a string to a complex object isn’t any different.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;var&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usually the next question then is: How to render a list of items? That’s one of the best parts about explaining React in my opinion. There is no React specific API such as a custom attribute on a HTML tag which enables you to render multiple items in React. You can use plain JavaScript for iterating over the list of items and returning HTML for each item.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;var&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;];&lt;/span&gt;
&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;        &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;})}&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Having used the JavaScript arrow function before, you can get rid of the arrow function body and the return statement which leaves your rendered output way more concise.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;var&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;];&lt;/span&gt;
&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;        &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)}&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pretty soon, every React developer becomes used to the built-in JavaScript &lt;code&gt;map()&lt;/code&gt; methods for arrays. It just makes so much sense to map over an array and return the rendered output for each item. The same can be applied for custom tailored cases where &lt;code&gt;filter()&lt;/code&gt; or &lt;code&gt;reduce()&lt;/code&gt; make more sense rather than rendering an output for each mapped item.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;var&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;isDeveloper&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;isDeveloper&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;];&lt;/span&gt;
&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;
&lt;span&gt;          &lt;span&gt;.&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;isDeveloper&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;          &lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In general, that’s how React developers are getting used to these JavaScript built-in functions without having to use a React specific API for it. It is just JavaScript in HTML.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript-variables&quot;&gt;var, let, and const in React&lt;/h2&gt;
&lt;p&gt;Also the different variable declarations with &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; can be confusing for newcomers to React even though they are not React specific. Maybe it is because JavaScript ES6 was introduced when React became popular. In general, I try to introduce &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; very early in my workshops. It simply starts with exchanging var with const in a React component:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)}&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I give the rules of thumb when to use which variable declaration:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;(1) don’t use &lt;code&gt;var&lt;/code&gt;, because &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are more specific&lt;/li&gt;
&lt;li&gt;(2) default to &lt;code&gt;const&lt;/code&gt;, because it cannot be re-assigned or re-declared&lt;/li&gt;
&lt;li&gt;(3) use &lt;code&gt;let&lt;/code&gt; when re-assigning the variable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;While &lt;code&gt;let&lt;/code&gt; is usually used in a for loop for incrementing the iterator, &lt;code&gt;const&lt;/code&gt; is normally used for keeping JavaScript variables unchanged. Even though it is possible to change the inner properties of objects and arrays when using &lt;code&gt;const&lt;/code&gt;, the variable declaration shows the intent of keeping the variable unchanged though.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-ternary-operator&quot;&gt;Ternary Operator in React&lt;/h2&gt;
&lt;p&gt;But it doesn’t end with displaying JavaScript strings, objects, and arrays in React. What about an if-else statement for enabling conditional rendering? You cannot use an if-else statement directly in JSX, but you can return early from the rendering function. Returning null is valid in React when displaying nothing.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

&lt;span&gt;    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;showUsers&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;span&gt;showUsers&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)}&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, if you want to use an if-else statement within the returned JSX, you can do it by using a &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator&quot;&gt;JavaScripts ternary operator&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;showUsers&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;          &lt;span&gt;showUsers&lt;/span&gt; &lt;span&gt;?&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;              &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;span&gt;)&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;span&gt;null&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;        &lt;span&gt;}&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another way of doing it, if you only return one side of the conditional rendering anyway, is using the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;showUsers&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;          &lt;span&gt;showUsers&lt;/span&gt; &lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;/span&gt;            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)}&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;
&lt;span&gt;          &lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;        &lt;span&gt;}&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I will not go into detail why this works, but if you are curious, you can learn about it and other techniques for conditional rendering over here: &lt;a href=&quot;https://www.robinwieruch.de/conditional-rendering-react/&quot;&gt;All the conditional renderings in React&lt;/a&gt;. After all, the conditional rendering in React only shows again that most of React is JavaScript and not anything React specific.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-import-export-statements&quot;&gt;Import and Export Statements in React&lt;/h2&gt;
&lt;p&gt;Fortunately, the JavaScript community settled on one way to import and export functionalities from files with JavaScript ES6 with &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;import&lt;/a&gt; and &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export&quot;&gt;export&lt;/a&gt; statements.&lt;/p&gt;
&lt;p&gt;However, being new to React and JavaScript ES6, these import and export statements are just another topic which requires explanation when getting started with your first React application. Pretty early you will have your first imports for CSS, SVG or other JavaScript files. The create-react-app project already starts with those import statements:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;logo&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./logo.svg'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;'./App.css'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;header&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-header&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;logo&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-logo&quot;&lt;/span&gt; &lt;span&gt;alt&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;logo&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-title&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Welcome&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/header&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;App-intro&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;To&lt;/span&gt; &lt;span&gt;get&lt;/span&gt; &lt;span&gt;started&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;edit&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;App&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;js&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/code&amp;gt; and save to reload.&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s great for the starter project, because it offers you a well-rounded experience how other files can be imported and (exported). Also the App component gets imported in the &lt;em&gt;src/index.js&lt;/em&gt; file. However, when doing your first steps in React, I try to avoid those imports in the beginning. Instead, I try to focus on JSX and React components. Only later the import and export statements are introduced when separating the first React component or JavaScript function in another file.&lt;/p&gt;
&lt;p&gt;So how do these import and export statements work? Let’s say in one file you want to export the following variables:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Wieruch'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;};&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can import them in another file with a relative path to the first file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./file1.js'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// output: Robin&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So it’s not necessarily about importing/exporting components or functions, it’s about sharing everything that is assignable to a variable (leaving out CSS or SVG imports/exports, but speaking only about JS). You can also import all exported variables from another file as one object:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span&gt;person&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./file1.js'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;person&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// output: Robin&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Imports can have an alias. It can happen that you import functionalities from multiple files that have the same named export. That’s why you can use an alias:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span&gt;username&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./file1.js'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// output: Robin&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All the previous cases are named imports and exports. But there exists the default statement too. It can be used for a few use cases:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;to export and import a single functionality&lt;/li&gt;
&lt;li&gt;to highlight the main functionality of the exported API of a module&lt;/li&gt;
&lt;li&gt;to have a fallback import functionality&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;robin&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Wieruch'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;};&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;robin&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can leave out the curly braces for the import to import the default export:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;developer&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./file1.js'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;developer&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// output: { firstname: 'Robin', lastname: 'Wieruch' }&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Furthermore, the import name can differ from the exported default name. You can also use it in conjunction with the named export and import statements:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Wieruch'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;const&lt;/span&gt; &lt;span&gt;person&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;};&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;};&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;person&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And import the default or the named exports in another file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;developer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'./file1.js'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;developer&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// output: { firstname: 'Robin', lastname: 'Wieruch' }&lt;/span&gt;
&lt;span&gt;console&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;firstname&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;// output: Robin Wieruch&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also spare additional lines and export the variables directly for named exports:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;firstname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;lastname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'Wieruch'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These are the main functionalities for ES6 modules. They help you to organize your code, to maintain your code and to design reusable module APIs. You can also export and import functionalities to test them.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-libraries&quot;&gt;Libraries in React&lt;/h2&gt;
&lt;p&gt;React is only the view layer for your application. There is some internal state management offered by React, but apart from this, it is only a component library which renders HTML for your browser. Everything else can be added from APIs (e.g. browser API, DOM API), JavaScript functionalities or external libraries. It’s not always simple to choose the right library for complementing your React application, but &lt;a href=&quot;https://www.robinwieruch.de/essential-react-libraries-framework/&quot;&gt;once you have a good overview of the different options&lt;/a&gt;, you can pick the one which fits best to your tech stack.&lt;/p&gt;
&lt;p&gt;For instance, &lt;a href=&quot;https://www.robinwieruch.de/react-fetching-data/&quot;&gt;fetching data in React&lt;/a&gt; can be done with the native fetch API:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;data&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;

  &lt;span&gt;componentDidMount&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;fetch&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'https://api.mydomain.com'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
      &lt;span&gt;.&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;response&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;response&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;())&lt;/span&gt;
      &lt;span&gt;.&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;data&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;({&lt;/span&gt; &lt;span&gt;data&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;...&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But it is up to you to use another library to fetch data in React. &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/axios/axios&quot;&gt;Axios&lt;/a&gt; is one popular choice for React applications:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;axios&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'axios'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;data&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;

  &lt;span&gt;componentDidMount&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;axios&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'https://api.mydomain.com'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;.&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;data&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;({&lt;/span&gt; &lt;span&gt;data&lt;/span&gt; &lt;span&gt;}));&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;...&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So once you know about your problem which need to be solved, &lt;a href=&quot;https://www.robinwieruch.de/reasons-why-i-moved-from-angular-to-react/&quot;&gt;React’s extensive and innovative ecosystem&lt;/a&gt; should give you plenty of options solving it. There again it’s not about React, but knowing about all the different JavaScript libraries which can be used to complement your application.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-higher-order-functions&quot;&gt;Higher-Order Functions in React&lt;/h2&gt;
&lt;p&gt;Higher-order functions are a great programming concept especially when moving towards functional programming. In React, it makes totally sense to know about this kind of functions, because at some point you have to deal with higher-order components which can be explained best when knowing about higher-order functions in the first place.&lt;/p&gt;
&lt;p&gt;Higher-order functions can be showcased in React early on without introducing higher-order components. For instance, let’s say a rendered list of users can be filtered based on the value of an input field.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;query&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;''&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;onChange&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;event&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;({&lt;/span&gt; &lt;span&gt;query&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;event&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;target&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;value&lt;/span&gt; &lt;span&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;
&lt;span&gt;            &lt;span&gt;.&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;query&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;            &lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)&lt;/span&gt;
          &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;

&lt;span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;text&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;span&gt;onChange&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onChange&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s not always desired to extract functions, because it can add unecessary complexity, but on the other side, it can have beneficial learning effects for JavaScript. In addition, &lt;a href=&quot;https://www.robinwieruch.de/react-testing-tutorial/&quot;&gt;by extracting a function you make it testable in isolation from the React component&lt;/a&gt;. So let’s showcase it with the function which is provided to the built-in filter function.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;doFilter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;query&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;
&lt;span&gt;            &lt;span&gt;.&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;doFilter&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/span&gt;            &lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)&lt;/span&gt;
          &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;
          &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;text&quot;&lt;/span&gt;
          &lt;span&gt;onChange&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onChange&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;/&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The previous implementation doesn’t work because the &lt;code&gt;doFilter()&lt;/code&gt; function needs to know about the &lt;code&gt;query&lt;/code&gt; property from the state. So you can pass it to the function by wrapping it with another function which leads to a higher-order function.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'react'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;doFilter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;query&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;query&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;App&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;...&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Robin'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;'Markus'&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;
    &lt;span&gt;];&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;{&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;
&lt;span&gt;            &lt;span&gt;.&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;doFilter&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;query&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;
&lt;/span&gt;            &lt;span&gt;.&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/li&amp;gt;)&lt;/span&gt;
          &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/ul&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;
          &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;text&quot;&lt;/span&gt;
          &lt;span&gt;onChange&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onChange&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;/&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;App&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically a higher-order function is a function which returns a function. By using JavaScript ES6 arrow functions, you can make a higher-order function more concise. Furthermore, this shorthand version makes it more attractive composing functions into functions.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;doFilter&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;query&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
  &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;query&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the &lt;code&gt;doFilter()&lt;/code&gt; function can be exported from the file and tested in isolation as pure (higher-order) function. After learning about higher-order functions, all the fundamental knowledge is established to learn more about &lt;a href=&quot;https://www.robinwieruch.de/gentle-introduction-higher-order-components/&quot;&gt;React’s higher-order components&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Extracting these functions into (higher-order) functions outside of a React component can be beneficial for testing React’s local state management in isolation as well.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;doIncrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;({&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;});&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;doDecrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;span&gt;({&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;});&lt;/span&gt;
&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Counter&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;state&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;counter&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;

  &lt;span&gt;onIncrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;doIncrement&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;onDecrement&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setState&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;doDecrement&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;onClick&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onIncrement&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;button&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Increment&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/button&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;onClick&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;onDecrement&lt;/span&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;button&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Decrement&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/button&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span&gt;);&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Moving functions around your code base is a great way learning about the benefits of having functions as fist class citizens in JavaScript. It’s powerful when moving your code towards functional programming.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-destructuring-spread-operator&quot;&gt;Destructuring and Spread Operators in React&lt;/h2&gt;
&lt;p&gt;Another language feature introduced in JavaScript is called &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring&lt;/a&gt;. It’s often the case that you have to access plenty of properties from your state or props in your component. Rather than assigning them to a variable one by one, you can use destructuring assignment in JavaScript.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;// no destructuring&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;users&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;counter&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;// destructuring&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;users&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;counter&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s especially beneficial for functional stateless components, because they always receive the &lt;code&gt;props&lt;/code&gt; object in their function signature. Often you will not use the props but its content, so you can destructure the content already in the function signature.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;// no destructuring&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;Greeting&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;// destructuring&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;Greeting&lt;/span&gt;&lt;span&gt;({&lt;/span&gt; &lt;span&gt;greeting&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;greeting&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/h1&amp;gt;;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The destructuring works for JavaScript arrays too. Another great feature is the &lt;strong&gt;rest destructuring&lt;/strong&gt;. It is often used for splitting out a part of an object, but keeping the remaining properties in another object.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;// rest destructuring&lt;/span&gt;
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;users&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;rest&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Afterward, the users can be used to be rendered, for instance in a React component, whereas the remaining state is used somewhere else. That’s where the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;JavaScript spread operator&lt;/a&gt; comes into play to forward the rest object to the next component. In the next section, you will see this operator in action.&lt;/p&gt;
&lt;h2 class=&quot;chapter-header&quot; id=&quot;react-javascript-learn&quot;&gt;There is more JavaScript than React&lt;/h2&gt;
&lt;p&gt;In conclusion, there is lots of JavaScript which can be harnessed in React. Whereas React has only a slim API surface area, developers have to get used to all the functionalities JavaScript has to offer. The saying is not without any reason: &lt;em&gt;“being a React developer makes you a better JavaScript developer”&lt;/em&gt;. Let’s recap some of the learned aspects of JavaScript in React by refactoring a higher-order component.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;withLoading&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Component&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;WithLoading&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;render&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;      &lt;span&gt;const&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;props&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;
      &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Loading&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;;&lt;/span&gt;
      &lt;span&gt;}&lt;/span&gt;

&lt;span&gt;      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;};&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This higher-order component is only used for showing a conditional loading indicator when the &lt;code&gt;isLoading&lt;/code&gt; prop is set to true. Otherwise it renders the input component. You can already see the (rest) destructuring and the spread operator in action. The latter can be seen for the rendered Component, because all the remaining properties from the &lt;code&gt;props&lt;/code&gt; object are passed to the Component.&lt;/p&gt;
&lt;p&gt;The first step for making the higher-order component more concise is refactoring the returned React class component to a functional stateless component:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;withLoading&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Component&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Loading&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see that the rest destructuring can be used in the function’s signature too. Next, using JavaScript ES6 arrow functions makes the higher-order component more concise again:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;withLoading&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;/span&gt;  &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Loading&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;

  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And adding the ternary operator shortens the function body into one line of code. Thus the function body can be left out and the return statement can be omitted.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;withLoading&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Component&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;({&lt;/span&gt; &lt;span&gt;isLoading&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;})&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt;
&lt;span&gt;  &lt;span&gt;isLoading&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;?&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Loading&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/p&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;span&gt;:&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Component&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;...&lt;/span&gt;&lt;span&gt;props&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the higher-order component uses various JavaScript and not React relevant techniques: arrow functions, higher-order functions, a ternary operator, destructuring and the spread operator. That’s how JavaScript’s functionalities can be used in React applications.&lt;/p&gt;
&lt;hr class=&quot;section-divider&quot;/&gt;&lt;p&gt;Often people say that learning React has a steep learning curve. But it hasn’t when only leaving React in the equation and leaving all the JavaScript out of it. React doesn’t add any foreign abstraction layer on top as other web frameworks are doing it. Instead you have to use JavaScript. So hone your JavaScript skills and you will become a great React developer.&lt;/p&gt;
&lt;div class=&quot;feedback-and-share text-center&quot;&gt;
&lt;hr/&gt;&lt;p class=&quot;lead&quot;&gt;I would like to hear your thoughts :-) Find me on &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; aria-label=&quot;twitter&quot; href=&quot;https://twitter.com/rwieruch&quot;&gt;Twitter&lt;/a&gt; and &lt;a target=&quot;_blank&quot; aria-label=&quot;github&quot; href=&quot;https://github.com/rwieruch&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;lead&quot;&gt;Did the article help you? Share it with your friends on social media , support me on &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; aria-label=&quot;patreon&quot; href=&quot;https://www.patreon.com/rwieruch&quot;&gt;Patreon&lt;/a&gt;, become a React developer with my books&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;box-inline col-md-12&quot;&gt;
&lt;div class=&quot;col-md-12 text-center&quot;&gt;
&lt;h2 class=&quot;newsletter&quot;&gt;The Road to learn React&lt;/h2&gt;
&lt;div class=&quot;col-md-4&quot;&gt;&lt;img class=&quot;img-lazy img-responsive&quot; data-lazy-src=&quot;https://www.robinwieruch.de/img/page/cover.png&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;lead&quot;&gt;Build a Hacker News App along the way. No setup configuration. No tooling. No Redux. Plain React in 190+ pages of learning material. Learn React like &lt;strong&gt;33.000+ readers&lt;/strong&gt;.&lt;/p&gt;
&lt;a class=&quot;btn btn-template-main&quot; href=&quot;https://www.getrevue.co/profile/rwieruch&quot;&gt;Get the Book &lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 19 Jul 2018 20:15:57 +0000</pubDate>
<dc:creator>rwieruch</dc:creator>
<og:title>JavaScript fundamentals before learning React - RWieruch</og:title>
<og:description>All the fundamentals in JavaScript for React applications. Often React newcomers realize that most of the learnings are JavaScript, because React has only a small API ...</og:description>
<og:type>website</og:type>
<og:url>https://www.robinwieruch.de/javascript-fundamentals-react-requirements/</og:url>
<og:image>https://www.robinwieruch.de/img/posts/javascript-fundamentals-react-requirements/banner_640.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.robinwieruch.de/javascript-fundamentals-react-requirements/</dc:identifier>
</item>
<item>
<title>Python has brought computer programming to a vast new audience</title>
<link>https://www.economist.com/science-and-technology/2018/07/21/python-has-brought-computer-programming-to-a-vast-new-audience</link>
<guid isPermaLink="true" >https://www.economist.com/science-and-technology/2018/07/21/python-has-brought-computer-programming-to-a-vast-new-audience</guid>
<description>&lt;p&gt;IN DECEMBER 1989 Guido van Rossum, a Dutch computer scientist, set himself a Christmas project. Irked by shortcomings in other programming languages, he wanted to build his own. His principles were simple. First, it should be easy to read. Rather than sprawling over line-endings and being broken up by a tangle of curly braces, each chunk would be surrounded with indented white space. Second, it should let users create their own packages of special-purpose coding modules, which could then be made available to others to form the basis of new programs. Third, he wanted a “short, unique and slightly mysterious” name. He therefore called it after Monty Python, a British comedy group. The package repository became known as the Cheese Shop.&lt;/p&gt;
&lt;p&gt;Nearly 30 years after his Christmas invention, Mr Van Rossum resembles a technological version of the Monty Python character who accidentally became the Messiah in the film “Life of Brian”. “I certainly didn’t set out to create a language that was intended for mass consumption,” he explains. But in the past 12 months Google users in America have searched for Python more often than for Kim Kardashian, a reality-TV star. The rate of queries has trebled since 2010, while inquiries after other programming languages have been flat or declining (see chart).&lt;/p&gt;
&lt;div class=&quot;newsletter-form newsletter-form--inline&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;newsletter-form__message&quot; readability=&quot;7&quot;&gt;&lt;strong&gt;Get our daily newsletter&lt;/strong&gt;
&lt;p&gt;Upgrade your inbox and get our Daily Dispatch and Editor's Picks.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;latest-updates-panel__container latest-updates-panel__container--blog-post&quot;&gt;

&lt;ul class=&quot;latest-updates-panel__body&quot;&gt;&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Richmond’s monument commission says a statue of Jefferson Davis should go&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;The case for treating disabled travellers better&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Donald Trump is fighting trade wars on several fronts&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;A cacophony of views on what to teach children about God&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Why is vigorous economic competition a good thing?&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-1&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;29&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Danny Fields and Seymour Stein, champions of punk, look back&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;The language’s popularity has grown not merely among professional developers—nearly 40% of whom use it, with a further 25% wishing to do so, according to Stack Overflow, a programming forum—but also with ordinary folk. Codecademy, a website that has taught 45m novices how to use various languages, says that by far the biggest increase in demand is from those wishing to learn Python. It is thus bringing coding to the fingertips of those once baffled by the subject. Pythonistas, as aficionados are known, have helped by adding more than 145,000 packages to the Cheese Shop, covering everything from astronomy to game development.&lt;/p&gt;
&lt;div class=&quot;component-image blog-post__image&quot;&gt;&lt;img src=&quot;https://cdn.static-economist.com/sites/default/files/images/print-edition/20180721_STC872.png&quot; alt=&quot;&quot; class=&quot;component-image__img blog-post-article-image blog-post-article-image__slim&quot; srcset=&quot;/sites/default/files/imagecache/200-width/images/print-edition/20180721_STC872.png 200w, /sites/default/files/imagecache/300-width/images/print-edition/20180721_STC872.png 300w, /sites/default/files/imagecache/400-width/images/print-edition/20180721_STC872.png 400w, /sites/default/files/imagecache/640-width/images/print-edition/20180721_STC872.png 640w, /sites/default/files/imagecache/800-width/images/print-edition/20180721_STC872.png 800w, /sites/default/files/imagecache/1000-width/images/print-edition/20180721_STC872.png 1000w, /sites/default/files/imagecache/1200-width/images/print-edition/20180721_STC872.png 1200w, /sites/default/files/imagecache/1280-width/images/print-edition/20180721_STC872.png 1280w, /sites/default/files/imagecache/1600-width/images/print-edition/20180721_STC872.png 1600w&quot; sizes=&quot;(min-width: 600px) 640px, calc(100vw - 20px)&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Mr Van Rossum, though delighted by this enthusiasm for his software, has come to find the rigours of supervising it, in his role as “benevolent dictator for life”, unbearable. He fears he has become something of an idol. “I’m uncomfortable with that fame,” he says, sounding uncannily like Brian trying to drive away the crowds of disciples. “Sometimes I feel like everything I say or do is seen as a very powerful force.” On July 12th he resigned, leaving the Pythonistas to manage themselves.&lt;/p&gt;
&lt;p class=&quot;xhead&quot;&gt;Nobody expects the faddish statistician&lt;/p&gt;
&lt;p&gt;Python is not perfect. Other languages have more processing efficiency and specialised capabilities. C and C++ are “lower-level” options which give the user more control over what is happening within a computer’s processor. Java is popular for building large, complex applications. JavaScript is the language of choice for applications accessed via a web browser. Countless others have evolved for various purposes. But Python’s killer features—simple syntax that makes its code easy to learn and share, and its huge array of third-party packages—make it a good general-purpose language. Its versatility is shown by its range of users and uses. The Central Intelligence Agency has employed it for hacking, Pixar for producing films, Google for crawling web pages and Spotify for recommending songs.&lt;/p&gt;
&lt;p&gt;Some of the most alluring packages that Pythonistas can find in the Cheese Shop harness artificial intelligence (AI). Users can create neural networks, which mimic the connections in a brain, to pick out patterns in large quantities of data. Mr Van Rossum says that Python has become the language of choice for AI researchers, who have produced numerous packages for it.&lt;/p&gt;
&lt;p&gt;Not all Pythonistas are so ambitious, though. Zach Sims, Codecademy’s boss, believes many visitors to his website are attempting to acquire skills that could help them in what are conventionally seen as “non-technical” jobs. Marketers, for instance, can use the language to build statistical models that measure the effectiveness of campaigns. College lecturers can check whether they are distributing grades properly. (Even journalists on &lt;em class=&quot;Italic&quot;&gt;The Economist&lt;/em&gt;, scraping the web for data, generally use programs written in Python to do so.)&lt;/p&gt;
&lt;p&gt;For professions that have long relied on trawling through spreadsheets, Python is especially valuable. Citigroup, an American bank, has introduced a crash course in Python for its trainee analysts. A jobs website, eFinancialCareers, reports a near-fourfold increase in listings mentioning Python between the first quarters of 2015 and 2018.&lt;/p&gt;
&lt;p&gt;The thirst for these skills is not without risk. Cesar Brea, a partner at Bain &amp;amp; Company, a consultancy, warns that the scariest thing in his trade is “someone who has learned a tool but doesn’t know what is going on under the hood”. Without proper oversight, a novice playing with AI libraries could reach dodgy conclusions. Bernd Ziegler, a partner at Boston Consulting Group, says that his firm reserves such analysis to members of its data team.&lt;/p&gt;
&lt;p class=&quot;xhead&quot;&gt;Rossum’s universal robot&lt;/p&gt;
&lt;p&gt;One solution to the problem of semi-educated tinkerers is to educate them properly in the language’s arcana. Python was already the most popular introductory language at American universities in 2014, but the teaching of it is generally limited to those studying science, technology, engineering and mathematics. A more radical proposal is to catch ’em young by offering computer science to all, and in primary schools. Hadi Partovi, the boss of Code.org, a charity, notes that 40% of American schools now offer such lessons, up from 10% in 2013. Around two-thirds of 10- to 12-year-olds have an account on Code.org’s website. Perhaps unnerved by a future filled with automated jobs, 90% of American parents want their children to study computer science.&lt;/p&gt;
&lt;p&gt;How much longer Python’s rise will continue is anybody’s guess. There have been dominant computer languages in the past that, while not exactly “one with Nineveh and Tyre”, now skulk in the background. In the 1960s, Fortran bestrode the world. As teaching languages for neophytes, both Basic and Pascal had their moments in the sun. And Mr Partovi himself plumped for JavaScript as the language for Code.org’s core syllabus, since it remains the standard choice for animating web pages.&lt;/p&gt;
&lt;p&gt;No computing language can ever be truly general purpose. Specialisation will necessarily remain important. It is nevertheless true that, in that long-past Yuletide, Mr Van Rossum started something memorable. He isn’t the Messiah, but he was a very clever boy.&lt;/p&gt;
</description>
<pubDate>Thu, 19 Jul 2018 20:01:27 +0000</pubDate>
<dc:creator>leonagano</dc:creator>
<og:description>And its inventor has just stepped down</og:description>
<og:image>https://cdn.static-economist.com/sites/default/files/images/print-edition/20180721_STD001_0.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.economist.com/science-and-technology/2018/07/21/python-has-brought-computer-programming-to-a-vast-new-audience</og:url>
<og:title>Python has brought computer programming to a vast new audience</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.economist.com/science-and-technology/2018/07/21/python-has-brought-computer-programming-to-a-vast-new-audience</dc:identifier>
</item>
<item>
<title>Work less, get more: New Zealand firm&amp;#039;s four-day week an &amp;#039;unmitigated success&amp;#039;</title>
<link>https://www.theguardian.com/world/2018/jul/19/work-less-get-more-new-zealand-firms-four-day-week-an-unmitigated-success</link>
<guid isPermaLink="true" >https://www.theguardian.com/world/2018/jul/19/work-less-get-more-new-zealand-firms-four-day-week-an-unmitigated-success</guid>
<description>&lt;p&gt;The &lt;a href=&quot;https://www.theguardian.com/world/newzealand&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;New Zealand&lt;/a&gt; company behind a landmark trial of a four-day working week has concluded it an unmitigated success, with 78% of employees feeling they were able to successfully manage their work-life balance, an increase of 24 percentage points.&lt;/p&gt;
&lt;p&gt;Two-hundred-and-forty staff at Perpetual Guardian, a company which manages trusts, wills and estate planning, trialled a four-day working week over March and April, working four, eight-hour days &lt;a href=&quot;https://www.theguardian.com/world/2018/feb/09/work-four-days-get-paid-for-five-new-zealand-companys-new-shorter-week&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;but getting paid for five.&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Academics studied the trial before, during and after its implementation, collecting qualitative and quantitative data.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-1 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Perpetual Guardian founder Andrew Barnes came up with the idea in an attempt to give his employees better work-life balance, and help them focus on the business while in the office on company time, and manage life and home commitments on their extra day off.&lt;/p&gt;
&lt;p&gt;Jarrod Haar, professor of human resource management at Auckland University of Technology, found job and life satisfaction increased on all levels across the home and work front, with employees performing better in their jobs and enjoying them more than before the experiment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/money/work-life-balance&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Work-life balance&lt;/a&gt;, which reflected how well respondents felt they could successfully manage their work and non-work roles, increased by 24 percentage points.&lt;/p&gt;
&lt;p&gt;In November last year just over half (54%) of staff felt they could effectively balance their work and home commitments, while after the trial this number jumped to 78%.&lt;/p&gt;
&lt;p&gt;Staff stress levels decreased by 7 percentage points across the board as a result of the trial, while stimulation, commitment and a sense of empowerment at work all improved significantly, with overall life satisfaction increasing by 5 percentage points.&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;If you can have parents spending more time with their children, how is that a bad thing?&lt;/p&gt;
&lt;footer&gt;&lt;cite class=&quot;pullquote-cite&quot;&gt;Andrew Barnes&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;Helen Delaney, a senior lecturer at the University of Auckland Business School, said employees’ motivation and commitment to work increased because they were included in the planning of the experiment, and played a key role in designing how the four-day week would be managed so as not to negatively impact productivity.&lt;/p&gt;
&lt;p&gt;“Employees designed a number of innovations and initiatives to work in a more productive and efficient manner, from automating manual processes to reducing or eliminating non-work-related internet usage,” said Delaney.&lt;/p&gt;
&lt;p&gt;Andrew Barnes said he would take the results of the trial to the board to open up a discussion on how a four-day work week could be implemented long-term in his company.&lt;/p&gt;
&lt;details data-snippet-id=&quot;a5947407-4f95-41fe-849d-e7d9248ebcb7&quot; data-snippet-type=&quot;guide&quot; class=&quot;atom atom--snippet atom--snippet--guide&quot;&gt;&lt;span class=&quot;atom--snippet__label&quot;&gt;Quick guide&lt;/span&gt;
&lt;h4 class=&quot;atom--snippet__headline&quot;&gt;What is the Upside?&lt;/h4&gt;
&lt;button class=&quot;atom__button atom__button--large atom__button--rounded atom--snippet__handle&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;is-on&quot;&gt; Show&lt;/span&gt; &lt;span class=&quot;is-off&quot;&gt; Hide&lt;/span&gt;&lt;/button&gt;
&lt;div class=&quot;atom--snippet__body&quot;&gt;
&lt;div class=&quot;atom--snippet__item&quot;&gt;

&lt;p&gt;News doesn't always have to be bad – indeed, the relentless focus on confrontation, disaster, antagonism and blame risks convincing the public that the world is hopeless and there is nothing we can do.&lt;/p&gt;
&lt;p&gt;This series is an antidote, an attempt to show that there is plenty of hope, as our journalists scour the planet looking for pioneers, trailblazers, best practice, unsung heroes, ideas that work, ideas that might and innovations whose time might have come.&lt;/p&gt;
&lt;p&gt;Readers can recommend other projects, people and progress that we should report on by contacting us at theupside@theguardian.com&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;footer class=&quot;atom--snippet__footer&quot;&gt;&lt;div class=&quot;atom--snippet__feedback&quot;&gt;
&lt;div&gt;Was this helpful?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;atom--snippet__ack&quot; hidden=&quot;&quot; aria-role=&quot;alert&quot; aria-live=&quot;polite&quot;&gt;Thank you for your feedback.&lt;/div&gt;
&lt;/footer&gt;&lt;/details&gt; Sign up here for weekly email updates from this series
&lt;p&gt;“If you can have parents spending more time with their children, how is that a bad thing?” asked Barnes, who believes the new work model has the potential to profoundly impact society for the better.&lt;/p&gt;
&lt;p&gt;“Are you likely to get fewer mental health issues when you have more time to take care of yourself and your personal interests? Probably ... if you have fewer people in the office at any one time, can we make smaller offices?”&lt;/p&gt;
&lt;p&gt;New Zealand’s workplace relations minister, Iain Lees-Galloway, said the results of the trial were “very interesting” and he was keen to encourage businesses to trial new and improved work models.&lt;/p&gt;
&lt;p&gt;“I’m really keen to work with any businesses that are looking at how they can be more flexible for their staff and how they can look to improve productivity whilst working alongside their staff and protecting terms and conditions,” Less-Galloway said.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;bullet&quot;&gt;•&lt;/span&gt; This article was amended on 20 July 2018. An earlier version said that there was a 24% increase in the percentage of employees who felt they were able to successfully manage their work-life balance. The increase was from 54% to 78%, which is an increase of 24 percentage points, not 24%. This has been corrected.&lt;br/&gt;&lt;/p&gt;


</description>
<pubDate>Thu, 19 Jul 2018 19:10:07 +0000</pubDate>
<dc:creator>GordonS</dc:creator>
<og:url>http://www.theguardian.com/world/2018/jul/19/work-less-get-more-new-zealand-firms-four-day-week-an-unmitigated-success</og:url>
<og:description>Reduced hours for same pay increased successful work-life balance management, cutting stress levels and boosting commitment</og:description>
<og:image>https://i.guim.co.uk/img/media/d03d1c31df7eb3b37cf00417ac09a201a80d6c75/0_627_5700_3420/master/5700.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly9hc3NldHMuZ3VpbS5jby51ay9pbWFnZXMvb3ZlcmxheXMvZDM1ODZhNWVmNTc4MTc1NmQyMWEzYjYzNWU1MTcxNDEvdGctZGVmYXVsdC5wbmc=&amp;s=32db53483b593ecbeac4d14ed272f65b</og:image>
<og:type>article</og:type>
<og:title>Work less, get more: New Zealand firm's four-day week an 'unmitigated success'</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/world/2018/jul/19/work-less-get-more-new-zealand-firms-four-day-week-an-unmitigated-success</dc:identifier>
</item>
<item>
<title>Show HN: Learn how to work remotely from people doing it every day</title>
<link>http://remotehabits.com/?ref=hackernews</link>
<guid isPermaLink="true" >http://remotehabits.com/?ref=hackernews</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;http://remotehabits.com/?ref=hackernews&quot;&gt;http://remotehabits.com/?ref=hackernews&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17569294&quot;&gt;https://news.ycombinator.com/item?id=17569294&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 299&lt;/p&gt;&lt;p&gt;# Comments: 68&lt;/p&gt;</description>
<pubDate>Thu, 19 Jul 2018 18:56:29 +0000</pubDate>
<dc:creator>Jasber</dc:creator>
<og:url>http://remotehabits.com</og:url>
<og:title>Interviews with remote workers</og:title>
<og:description>RemoteHabits is all about remote working. Learn how other people started with remote work by reading interviews from dozens of people in their fields.</og:description>
<og:image>http://remotehabits.com/static/img/small-logo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://remotehabits.com/?ref=hackernews</dc:identifier>
</item>
<item>
<title>Google Cloud Downtime Postmortem</title>
<link>https://status.cloud.google.com/incident/cloud-networking/18012?m=1</link>
<guid isPermaLink="true" >https://status.cloud.google.com/incident/cloud-networking/18012?m=1</guid>
<description>&lt;h2&gt;ISSUE SUMMARY&lt;/h2&gt;
&lt;p&gt;On Tuesday, 17 July 2018, customers using Google Cloud App Engine, Google HTTP(S) Load Balancer, or TCP/SSL Proxy Load Balancers experienced elevated error rates ranging between 33% and 87% for a duration of 32 minutes. Customers observed errors consisting of either 502 return codes, or connection resets. We apologize to our customers whose services or businesses were impacted during this incident, and we are taking immediate steps to improve the platform’s performance and availability. We will be providing customers with a SLA credit for the affected timeframe that impacted the Google Cloud HTTP(S) Load Balancer, TCP/SSL Proxy Load Balancer and Google App Engine products.&lt;/p&gt;
&lt;h2&gt;DETAILED DESCRIPTION OF IMPACT&lt;/h2&gt;
&lt;p&gt;On Tuesday, 17 July 2018, from 12:17 to 12:49 PDT, Google Cloud HTTP(S) Load Balancers returned 502s for some requests they received. The proportion of 502 return codes varied from 33% to 87% during the period. Automated monitoring alerted Google’s engineering team to the event at 12:19, and at 12:44 the team had identified the probable root cause and deployed a fix. At 12:49 the fix became effective and the rate of 502s rapidly returned to a normal level. Services experienced degraded latency for several minutes longer as traffic returned and caches warmed. Serving fully recovered by 12:55. Connections to Cloud TCP/SSL Proxy Load Balancers would have been reset after connections to backends failed. Cloud services depending upon Cloud HTTP Load Balancing, such as Google App Engine application serving, Google Cloud Functions, Stackdriver's web UI, Dialogflow and the Cloud Support Portal/API, were affected for the duration of the incident.&lt;/p&gt;
&lt;p&gt;Cloud CDN cache hits dropped 70% due to decreased references to Cloud CDN URLs from services behind Cloud HTTP(S) Load balancers and an inability to validate stale cache entries or insert new content on cache misses. Services running on Google Kubernetes Engine and using the Ingress resource would have served 502 return codes as mentioned above. Google Cloud Storage traffic served via Cloud Load Balancers was also impacted.&lt;/p&gt;
&lt;p&gt;Other Google Cloud Platform services were not impacted. For example, applications and services that use direct VM access, or Network Load Balancing, were not affected.&lt;/p&gt;
&lt;h2&gt;ROOT CAUSE&lt;/h2&gt;
&lt;p&gt;Google’s Global Load Balancers are based on a two-tiered architecture of Google Front Ends (GFE). The first tier of GFEs answer requests as close to the user as possible to maximize performance during connection setup. These GFEs route requests to a second layer of GFEs located close to the service which the request makes use of. This type of architecture allows clients to have low latency connections anywhere in the world, while taking advantage of Google’s global network to serve requests to backends, regardless of in which region they are located.&lt;/p&gt;
&lt;p&gt;The GFE development team was in the process of adding features to GFE to improve security and performance. These features had been introduced into the second layer GFE code base but not yet put into service. One of the features contained a bug which would cause the GFE to restart; this bug had not been detected in either of testing and initial rollout. At the beginning of the event, a configuration change in the production environment triggered the bug intermittently, which caused affected GFEs to repeatedly restart. Since restarts are not instantaneous, the available second layer GFE capacity was reduced. While some requests were correctly answered, other requests were interrupted (leading to connection resets) or denied due to a temporary lack of capacity while the GFEs were coming back online.&lt;/p&gt;
&lt;h2&gt;REMEDIATION AND PREVENTION&lt;/h2&gt;
&lt;p&gt;Google engineers were alerted to the issue within 3 minutes and began immediately investigating. At 12:44 PDT, the team discovered the root cause, the configuration change was promptly reverted, and the affected GFEs ceased their restarts. As all GFEs returned to service, traffic resumed its normal levels and behavior.&lt;/p&gt;
&lt;p&gt;In addition to fixing the underlying cause, we will be implementing changes to both prevent and reduce the impact of this type of failure in several ways:&lt;/p&gt;
&lt;p&gt;1. We are adding additional safeguards to disable features not yet in service.&lt;/p&gt;
&lt;p&gt;2. We plan to increase hardening of the GFE testing stack to reduce the risk of having a latent bug in production binaries that may cause a task to restart.&lt;/p&gt;
&lt;p&gt;3. We will also be pursuing additional isolation between different shards of GFE pools in order to reduce the scope of failures.&lt;/p&gt;
&lt;p&gt;4. Finally, to speed diagnosis in the future, we plan to create a consolidated dashboard of all configuration changes for GFE pools, allowing engineers to more easily and quickly observe, correlate, and identify problematic changes to the system.&lt;/p&gt;
&lt;p&gt;We would again like to apologize for the impact that this incident had on our customers and their businesses. We take any incident that affects the availability and reliability of our customers extremely seriously, particularly incidents which span regions. We are conducting a thorough investigation of the incident and will be making the changes which result from that investigation our very top priority in GCP engineering.&lt;/p&gt;
</description>
<pubDate>Thu, 19 Jul 2018 18:27:33 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://status.cloud.google.com/incident/cloud-networking/18012?m=1</dc:identifier>
</item>
</channel>
</rss>