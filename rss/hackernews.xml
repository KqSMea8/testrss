<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Canada facing ‘brain drain’ as tech talent leaves for Silicon Valley</title>
<link>https://www.theglobeandmail.com/business/technology/article-canada-facing-brain-drain-as-young-tech-talent-leaves-for-silicon/</link>
<guid isPermaLink="true" >https://www.theglobeandmail.com/business/technology/article-canada-facing-brain-drain-as-young-tech-talent-leaves-for-silicon/</guid>
<description>&lt;p class=&quot;c-article-body__text&quot;&gt;Canada’s best and brightest computer engineering graduates are leaving for jobs in Silicon Valley at alarmingly high rates, fuelling a worse “brain drain” than the mass exodus by Canadian doctors two decades ago, according to a new study.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;&lt;a href=&quot;https://brocku.ca/social-sciences/political-science/wp-content/uploads/sites/153/Reversing-the-Brain-Drain.pdf&quot; title=&quot;&quot; class=&quot;&quot;&gt;The study&lt;/a&gt;, led by Zachary Spicer, a senior associate with the Munk School of Global Affairs’ Innovation Policy Lab at University of Toronto, found one-in-four recent science, technology, engineering and math (STEM) graduates from three of the country’s top universities – University of Waterloo, University of British Columbia and U of T – were working outside Canada.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;The numbers were higher for graduates of computer engineering and computer science (30 per cent), engineering science (27 per cent) and software engineering, where two out three graduates were working outside Canada, mostly in the United States. Nearly 44 per cent of those working abroad were employed as software engineers, with Microsoft, Google, Facebook and Amazon listed as top employers.&lt;/p&gt;
&lt;div class=&quot;u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads&quot; id=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div id=&quot;c-ad--flex-gpt-1&quot; class=&quot;c-ad c-ad--inline c-ad--flex&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;c-ad__wrapper&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;c-ad__message&quot;&gt;Story continues below advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;c-article-body__text&quot;&gt;The study, spearheaded and partly funded by Toronto-based tech firm Delvinia Interactive Inc., surveyed 3,162 graduates from 2015 and 2016 in 22 STEM programs at the three universities based on their LinkedIn profiles and select follow-up interviews.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;The findings come as a sharp contrast to recent developments suggesting Canada’s star is rising in the tech world.&lt;/p&gt;

&lt;p class=&quot;c-article-body__text&quot;&gt;“I think policy makers should look at this as a bit of a wake-up call,” said Mr. Spicer, who said the study was the first scholarly effort to map out Canada’s tech brain drain. “When we see certain fields where upward of 65 per cent of a graduating class are leaving for the U.S., I think there should be concerns there that our homegrown companies aren’t even going to be able to access some of that talent. If we found in the 1960s that 60 per cent of our auto workers were leaving to work in other countries … we probably would have held a royal commission.”&lt;/p&gt;
&lt;p class=&quot;c-article-body__text c-article-body__text--interstitial&quot;&gt;&lt;a href=&quot;https://www.theglobeandmail.com/business/technology/article-canada-facing-brain-drain-as-young-tech-talent-leaves-for-silicon/&quot; class=&quot;c-article-body__link&quot;&gt;Related: Southern Ontario’s Silicon Valley: Unleashing Waterloo’s tech-innovation sector&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;c-article-body__text c-article-body__text--interstitial&quot;&gt;&lt;a href=&quot;https://www.theglobeandmail.com/report-on-business/rob-commentary/will-canadas-universities-step-up-to-stop-the-brain-drain/article38318121/&quot; class=&quot;c-article-body__link&quot;&gt;Opinion: Will Canada’s universities step up to stop the brain drain?&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;A separate 2017 survey by students from that year’s graduating class of the University of Waterloo systems design engineering program found that 60 per cent were moving to the United States for work. “There’s a premium on California and New York jobs” among graduating students, said Joey Loi, one of the 2017 survey’s authors, who himself moved to San Francisco to work for Dropbox.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;There is a cost to such a heavy brain drain: governments spend billions subsidizing the cost of university education, while students who go on to work for foreign companies help fuel the economic growth of those countries. A lack of successful “scale-up” tech firms in Canada has been cited as one of the reasons research development spending and productivity here have lagged other developed countries.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;Delvinia chief executive Adam Froman said he decided to fund the study after hearing from fellow tech CEOs that Canadian computer-engineering grads “aren’t even considering working at Canadian companies. … We all have so many job opportunities up here,” yet many just want to go to California. “Nobody had really asked those who had left why they left.”&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;The main reasons graduates are leaving in droves, the study found, include higher salaries in such tech hot spots as San Francisco/Silicon Valley and Seattle, where tech workers earn on average close to double the US$73,000 rate of their peers in Toronto, according to &lt;a href=&quot;https://hired.com/state-of-salaries-2018&quot; title=&quot;&quot; class=&quot;&quot;&gt;a recent survey by Hired&lt;/a&gt; (even adjusting for cost of living, average salaries in U.S. cities such as San Francisco and Seattle were 13 per cent to 44 per cent higher).&lt;/p&gt;
&lt;div class=&quot;u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads&quot; id=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div id=&quot;c-ad--flex-gpt-2&quot; class=&quot;c-ad c-ad--inline c-ad--flex&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;c-ad__wrapper&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;c-ad__message&quot;&gt;Story continues below advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;js-ad-slimcut-wrapper&quot; class=&quot;c-ad c-ad--slimcut u-hidden&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;c-ad__wrapper&quot; aria-hidden=&quot;true&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;c-ad__message&quot;&gt;Story continues below advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;c-article-body__text&quot;&gt;But the survey also found students sought out global giants with solid reputations in order to enhance their career options, receive better mentoring and work on a wider scope of projects than was available at home. “Many respondents remarked that there was pressure from their peers to seek work with large American technology firms, buoyed by a ‘Cali[fornia] or bust’ maxim,” the study said.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;Pearl Sullivan, the dean of Waterloo’s engineering school, disputed the assertion that a high number of Waterloo students head south after graduation, maintaining that 85 per cent of alumni list a Canadian address as their preferred point of contact. According to the university, migration rates have dropped sharply since 2000 and are now around 10 per cent.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;Mr. Spicer dismissed Waterloo’s data, saying “the mailing address on file for recent graduates could well be their family address. This is precisely why we picked a data-collection method that could capture recent location and work activity. Graduates have much more incentive to update their LinkedIn profiles than they do to update their address with the university to receive their alumni magazines.”&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;Sheldon Levy, Ontario’s former deputy minister of advanced education and skills development and former president of Ryerson University, said “if two-thirds of our very best people [are leaving] because they don’t see the equivalent opportunity of developing a world-beating career in Canada … then yes, we have a problem.”&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;Mr. Froman called on Canadian companies, governments and universities to work together to develop a “national talent-retention strategy.” Among the study’s recommendations are calls for Canadian tech companies to raise pay levels for incoming workers and to increase their visibility and communication to prospective hires on university campuses. The study calls on government to help students pay back their loans and to help smaller Canadian firms fund co-op salaries. Universities should prioritize Canadian co-op placements, the study suggests.&lt;/p&gt;
&lt;p class=&quot;c-article-body__text&quot;&gt;“The fact that Canadian tech scale-ups are having trouble filling their positions … is something we should all care about,” Mr. Froman said. “I’m not expecting we’ll turn this around [completely]. If you’re a 24-year-old kid, it’s kind of exciting to get paid $100,000 to go down to the Valley. But if we knocked [the number leaving] back by 30 per cent, that’s a good start.”&lt;/p&gt;
&lt;div class=&quot;u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads&quot; id=&quot;&quot;&gt;
&lt;div class=&quot;&quot;&gt;
&lt;div id=&quot;c-ad--flex-gpt-3&quot; class=&quot;c-ad c-ad--inline c-ad--flex&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;c-ad__wrapper&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;c-ad__message&quot;&gt;Story continues below advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 04 May 2018 17:32:24 +0000</pubDate>
<dc:creator>paulashbourne</dc:creator>
<og:title>Canada facing ‘brain drain’ as young tech talent leaves for Silicon Valley</og:title>
<og:url>https://www.theglobeandmail.com/business/technology/article-canada-facing-brain-drain-as-young-tech-talent-leaves-for-silicon/</og:url>
<og:description>A new study one-in-four recent STEM graduates from three of the country’s top universities were working outside Canada</og:description>
<og:type>article</og:type>
<og:image>https://www.theglobeandmail.com/resizer/8JmphsDzBYZkTFEpsT36QJuTN3s=/1200x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/JCDUHTVBZ5GTTP32B4SC35PDXU.JPG</og:image>
<dc:language>en-CA</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theglobeandmail.com/business/technology/article-canada-facing-brain-drain-as-young-tech-talent-leaves-for-silicon/</dc:identifier>
</item>
<item>
<title>Akin&amp;#039;s Laws of Spacecraft Design (2003)</title>
<link>http://spacecraft.ssl.umd.edu/akins_laws.html</link>
<guid isPermaLink="true" >http://spacecraft.ssl.umd.edu/akins_laws.html</guid>
<description>&lt;head&gt;&lt;title&gt;Akin's Laws of Spacecraft Design&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;&lt;meta name=&quot;GENERATOR&quot; content=&quot;Adobe PageMill 2.0 Mac&quot;/&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#E7E7FF&quot; background=&quot;graphics/eng_grid_lite.jpg&quot; id=&quot;readabilityBody&quot; readability=&quot;192.03654098122&quot;&gt;
&lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://spacecraft.ssl.umd.edu/index.html&quot;&gt;&lt;span&gt;Home&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;1. Engineering is done with numbers. Analysis without numbers is only an opinion.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2. To design a spacecraft right takes an infinite amount of effort. This is why it's a good idea to design them to operate when some things are wrong .&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3. Design is an iterative process. The necessary number of iterations is one more than the number you have currently done. This is true at any point in time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4. Your best design efforts will inevitably wind up being useless in the final design. Learn to live with the disappointment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5. (Miller's Law) Three points determine a curve.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;6. (Mar's Law) Everything is linear if plotted log-log with a fat magic marker.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;7. At the start of any design effort, the person who most wants to be team leader is least likely to be capable of it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;8. In nature, the optimum is almost always in the middle somewhere. Distrust assertions that the optimum is at an extreme point.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;9. Not having all the information you need is never a satisfactory excuse for not starting the analysis.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;10. When in doubt, estimate. In an emergency, guess. But be sure to go back and clean up the mess when the real numbers come along.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;11. Sometimes, the fastest way to get to the end is to throw everything out and start over.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;12. There is never a single right solution. There are always multiple wrong ones, though.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;13. Design is based on requirements. There's no justification for designing something one bit &quot;better&quot; than the requirements dictate.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;14. (Edison's Law) &quot;Better&quot; is the enemy of &quot;good&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;15. (Shea's Law) The ability to improve a design occurs primarily at the interfaces. This is also the prime location for screwing it up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;16. The previous people who did a similar analysis did not have a direct pipeline to the wisdom of the ages. There is therefore no reason to believe their analysis over yours. There is especially no reason to present their analysis &lt;em&gt;as&lt;/em&gt; yours.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;17. The fact that an analysis appears in print has no relationship to the likelihood of its being correct.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;18. Past experience is excellent for providing a reality check. Too much reality can doom an otherwise worthwhile design, though.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;19. The odds are greatly against you being immensely smarter than everyone else in the field. If your analysis says your terminal velocity is twice the speed of light, you may have invented warp drive, but the chances are a lot better that you've screwed up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;20. A bad design with a good presentation is doomed eventually. A good design with a bad presentation is doomed immediately.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;21. (Larrabee's Law) Half of everything you hear in a classroom is crap. Education is figuring out which half is which.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;22. When in doubt, document. (Documentation requirements will reach a maximum shortly after the termination of a program.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;23. The schedule you develop will seem like a complete work of fiction up until the time your customer fires you for not meeting it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;24. It's called a &quot;Work Breakdown Structure&quot; because the Work remaining will grow until you have a Breakdown, unless you enforce some Structure on it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;25. (Bowden's Law) Following a testing failure, it's always possible to refine the analysis to show that you really had negative margins all along.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;26. (Montemerlo's Law) Don't do nuthin' dumb.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;27. (Varsi's Law) Schedules only move in one direction.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;28. (Ranger's Law) There ain't no such thing as a free launch.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;29. (von Tiesenhausen's Law of Program Management) To get an accurate estimate of final program requirements, multiply the initial time estimates by pi, and slide the decimal point on the cost estimates one place to the right.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;30. (von Tiesenhausen's Law of Engineering Design) If you want to have a maximum effect on the design of a new engineering system, learn to draw. Engineers always wind up designing the vehicle to look like the initial artist's concept.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;31. (Mo's Law of Evolutionary Development) You can't get to the moon by climbing successively taller trees.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;32. (Atkin's Law of Demonstrations) When the hardware is working perfectly, the really important visitors don't show up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;33. (Patton's Law of Program Planning) A good plan violently executed now is better than a perfect plan next week.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;34. (Roosevelt's Law of Task Planning) Do what you can, where you are, with what you have.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;35. (de Saint-Exupery's Law of Design) A designer knows that he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;36. Any run-of-the-mill engineer can design something which is elegant. A good engineer designs systems to be efficient. A &lt;em&gt;great&lt;/em&gt; engineer designs them to be effective.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;37. (Henshaw's Law) One key to success in a mission is establishing clear lines of blame.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;38. Capabilities drive requirements, regardless of what the systems engineering textbooks say.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;39. Any exploration program which &quot;just happens&quot; to include a new launch vehicle is, &lt;em&gt;de facto&lt;/em&gt;, a launch vehicle program.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;39. (alternate formulation) The three keys to keeping a new human space program affordable and on schedule:&lt;br/&gt;       1)  No new launch vehicles.&lt;br/&gt;       2)  No new launch vehicles.&lt;br/&gt;       3)  Whatever you do, don't develop any new launch vehicles.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;40. (McBryan's Law) You can't make it better until you make it work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;41. There's never enough time to do it right, but somehow, there's always enough time to do it over.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;42. Space is a completely unforgiving environment. If you screw up the engineering, somebody dies (and there's no partial credit because &lt;em&gt;most&lt;/em&gt; of the analysis was right...)&lt;/span&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot; readability=&quot;12&quot;&gt;&lt;img src=&quot;http://spacecraft.ssl.umd.edu/graphics/110920.MMR.png&quot; alt=&quot;MMR&quot;/&gt;&lt;br/&gt;Me and a reduced set of Akin's Laws, framed on the wall&lt;br/&gt;of the NASA Mission Management Room in Building 30&lt;br/&gt;(Mission Control) at the NASA Johnson Space Center&lt;/div&gt;
&lt;p&gt;&lt;span&gt;*I've been involved in spacecraft and space systems design and development for my entire career, including teaching the senior-level capstone spacecraft design course, for ten years at MIT and now at the University of Maryland for more than two decades. These are some bits of wisdom that I have gleaned during that time, some by picking up on the experience of others, but mostly by screwing up myself. I originally wrote these up and handed them out to my senior design class, as a strong hint on how best to survive my design experience. Months later, I get a phone call from a friend in California complimenting me on the Laws, which he saw on a &quot;joke-of-the-day&quot; listserve. Since then, I'm aware of half a dozen sites around the world that present various editions of the Laws, and even one site which has converted them (without attribution, of course) to the Laws of Certified Public Accounting. (Don't ask...) Anyone is welcome to link to these, use them, post them, send me suggestions of additional laws, but I do maintain that &lt;em&gt;this&lt;/em&gt; is the canonical set of Akin's Laws...&lt;/span&gt; &lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Fri, 04 May 2018 17:20:50 +0000</pubDate>
<dc:creator>teeray</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://spacecraft.ssl.umd.edu/akins_laws.html</dc:identifier>
</item>
<item>
<title>What happens before main() is executed in C and why is it important?</title>
<link>http://mymicrocontroller.com/2018/04/03/what-happens-before-main-function-is-executed-in-c-and-why-is-it-important/</link>
<guid isPermaLink="true" >http://mymicrocontroller.com/2018/04/03/what-happens-before-main-function-is-executed-in-c-and-why-is-it-important/</guid>
<description>&lt;p&gt;&lt;img class=&quot;size-medium wp-image-39 alignleft&quot; src=&quot;https://i1.wp.com/mymicrocontroller.com/wp-content/uploads/2018/04/blur-close-up-code-546819.jpg?resize=300%2C199&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;199&quot; srcset=&quot;https://i1.wp.com/mymicrocontroller.com/wp-content/uploads/2018/04/blur-close-up-code-546819.jpg?resize=300%2C199 300w, https://i1.wp.com/mymicrocontroller.com/wp-content/uploads/2018/04/blur-close-up-code-546819.jpg?resize=768%2C510 768w, https://i1.wp.com/mymicrocontroller.com/wp-content/uploads/2018/04/blur-close-up-code-546819.jpg?resize=1024%2C680 1024w, https://i1.wp.com/mymicrocontroller.com/wp-content/uploads/2018/04/blur-close-up-code-546819.jpg?w=1680 1680w, https://i1.wp.com/mymicrocontroller.com/wp-content/uploads/2018/04/blur-close-up-code-546819.jpg?w=2520 2520w&quot; sizes=&quot;(max-width: 300px) 85vw, 300px&quot; data-recalc-dims=&quot;1&quot;/&gt;In embedded applications, since we are working very close to the hardware and since we are typically working with limited space, strict power requirements, and exact timing restrictions, it is very important to know exactly what happens when we run a program from the beginning to the end. Most developers (especially those who come from the non-embedded development world) usually assume that running a C program starts from the main() function. This is not true.&lt;/p&gt;
&lt;p&gt;There are a lot of steps that take place before main() is executed and understanding those steps will help a lot in gaining a better understanding of how the system works and ultimately will be extremely helpful in some debug situations. For example, in embedded systems it is possible to have your program crash before even reaching main(). Understanding what happens before main() will make you better at debugging these type of crashes.&lt;/p&gt;
&lt;p&gt;The best way to learn is to run a very simple program (eg. a program with a main() function that simply returns zero) ideally on a microcontroller and use gdb to step through the code. While what happens before main(), is architecture and platform dependent, there are some generic steps that usually take place. Here they are in no particular order:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;strong&gt;The hardware is initialized.&lt;/strong&gt;&lt;/em&gt; The most important part of this step is setting up the clock that the CPU needs to run the code. This is usually done by programming a PLL (essentially a programmable clock). If there is not clock going to the CPU, the CPU is essentially dead. The other part of hardware initialization is initializing the interrupt handling hardware.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Memory segments are initialized.&lt;/strong&gt;&lt;/em&gt; Memory segments such as .bss (for uninitialized data), .data (for initialized data such as static variables, global variables, local static variables, addresses of functions, and function pointers), and .text (where the actual code resides) are initialized and a valid stack is set up.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Command line arguments are received.&lt;/strong&gt;&lt;/em&gt; This may not be relevant in embedded systems as in embedded systems we don’t usually call main() with arguments&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;The stack pointer is configured.&lt;/strong&gt;&lt;/em&gt; This is necessary because the program needs to know where to start from.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that some microcontrollers may require a start.c or cstart file that has the initialization code (whether this file is manually created or auto generated).&lt;/p&gt;
&lt;p&gt;Now that we know what happens before main(), we might wonder if there’s a way we can control what happens before main, or if there is a way we can write our own version of what happens before main(). In C, the answer is largely no. Whatever happens before main() is largely dependent on your architecture and compiler. However this is in fact possible in C++.&lt;/p&gt;
&lt;p&gt;One way you can do this in C++ is by declaring a global class object. Since global variables are initialized before main(), the constructor of the class you have initialized as global will run before main(). You can therefore place the code you want to run before main() in such a constructor.&lt;/p&gt;
&lt;p&gt;A topic that is related to this is the boot loader, but I will save that for another post.&lt;/p&gt;
&lt;div class=&quot;sfsi_Sicons&quot;&gt;
&lt;div&gt;&lt;span&gt;Please follow and like us:&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;sfsi_socialwpr&quot;&gt;
&lt;div class=&quot;sf_subscrbe&quot;&gt;&lt;a href=&quot;http://www.specificfeeds.com/widgets/emailSubscribeEncFeed/bEtnTHJBcUUza2lkWHF2b1NJUVVxN3VEQUEweS9WQ0J4Y2ZnN05SeFNLdytDRE9KbG5SZHZ4SnExait0ZXAwR3RGdzZoSHZvN05IZm8yMUpQcDl1b0JvYWJ2V1g3amR0b2ZjRnRFNFZVckNSQUx1SU00bmxrZlhDQ2RRTFRNYW58eDlSa2xtQ1djUXBjRTZsak4rSEtyNFdxaWZpRTlLYkFoYU1Bb1c5NG5sVT0=/OA==/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://i1.wp.com/mymicrocontroller.com/wp-content/plugins/ultimate-social-media-icons/images/follow_subscribe.png?w=840&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/a&gt;&lt;/div&gt;




&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;author-info&quot;&gt;
&lt;div class=&quot;author-avatar&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://0.gravatar.com/avatar/c1950ab41acc5cae8633a8ba337bd545?s=42&amp;amp;d=mm&amp;amp;r=g&quot; srcset=&quot;http://0.gravatar.com/avatar/c1950ab41acc5cae8633a8ba337bd545?s=84&amp;amp;d=mm&amp;amp;r=g 2x&quot; class=&quot;avatar avatar-42 photo&quot; height=&quot;42&quot; width=&quot;42&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;author-description&quot;&gt;
&lt;h2 class=&quot;author-title&quot;&gt;&lt;span class=&quot;author-heading&quot;&gt;Author:&lt;/span&gt; Arash Fotouhi&lt;/h2&gt;
&lt;p class=&quot;author-bio&quot;&gt;I am a professional engineer with several years of experience in both software development and electrical engineering with expertise in firmware design and embedded application development. I create custom electronic devices and make mobile apps to talk to and control those devices. Please feel free to contact me at arash@mymicrocontroller.com &lt;a class=&quot;author-link&quot; href=&quot;http://mymicrocontroller.com/author/arash/&quot; rel=&quot;author&quot;&gt;View all posts by Arash Fotouhi&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 04 May 2018 16:24:56 +0000</pubDate>
<dc:creator>arash9k</dc:creator>
<og:type>article</og:type>
<og:title>What happens before main() function is executed in C and why is it important?</og:title>
<og:url>http://mymicrocontroller.com/2018/04/03/what-happens-before-main-function-is-executed-in-c-and-why-is-it-important/</og:url>
<og:description>In embedded applications, since we are working very close to the hardware and since we are typically working with limited space, strict power requirements, and exact timing restrictions, it is very…</og:description>
<og:image>https://s0.wp.com/i/blank.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://mymicrocontroller.com/2018/04/03/what-happens-before-main-function-is-executed-in-c-and-why-is-it-important/</dc:identifier>
</item>
<item>
<title>Never Write Your Own Database (2017)</title>
<link>https://medium.com/@terrycrowley/never-write-your-own-database-736f704c780</link>
<guid isPermaLink="true" >https://medium.com/@terrycrowley/never-write-your-own-database-736f704c780</guid>
<description>&lt;p name=&quot;7da1&quot; id=&quot;7da1&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Note: I originally authored this post while at Microsoft with Vincent Lascaux (the engineer primarily responsible for the work in OneNote described here) and decided to republish in this forum since that version no longer seems to be available. Thanks Vincent for all the detailed information and feedback!&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;2b51&quot; id=&quot;2b51&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There’s an old adage in software engineering — “never write your own database”. So why did the OneNote team go ahead and write one as part of upgrading OneNote’s local cache implementation?&lt;/p&gt;
&lt;p name=&quot;7603&quot; id=&quot;7603&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;First, it’s probably necessary to more carefully define what I mean by a “database” in this context.&lt;/p&gt;
&lt;p name=&quot;15b9&quot; id=&quot;15b9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Most interesting applications need to be able to persist their application state and the user content they create and manage to durable storage. An application can either use its own custom logic for persistence or make use of some pre-existing database management software (DBMS) to handle storing its data. That pre-existing DBMS might be some kind of relational store (e.g. SQLLite, ESENT) or a simpler key-value store (or frequently, a relational store used as a key-value store).&lt;/p&gt;
&lt;p name=&quot;0041&quot; id=&quot;0041&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If you start exploring these technologies, it doesn’t require much time browsing the Wikipedia page for &lt;a href=&quot;http://en.wikipedia.org/wiki/Extensible_Storage_Engine&quot; data-href=&quot;http://en.wikipedia.org/wiki/Extensible_Storage_Engine&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;ESENT&lt;/a&gt; (for example) to get a sense for some of the complexity involved in building a database. While reading through that description, you can almost do an archeological analysis of what were the initial core capabilities and what were additional capabilities developed over time, clearly driven from evolving client requirements (clustered indexes, sparse indexes, covering indexes, versioned columns, etc. etc.). It gives the clear sense that this is a component that has stood the test of time and served as the basis of some key products and how they evolved in the market place.&lt;/p&gt;
&lt;p name=&quot;f642&quot; id=&quot;f642&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There are two rather counter-balancing reactions when evaluating whether to use such a robust and functional component. The first reaction is “holy crap, there is no way that I’m smart enough to duplicate that tech”! That’s a good and righteous reaction! “If I see so far, it is only because I stand on the shoulders of giants…”&lt;/p&gt;
&lt;p name=&quot;a52f&quot; id=&quot;a52f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The other reaction is: “Wow, there’s a lot of stuff there that I don’t need. I wonder what I’m paying for that?” One of the key principles of engineering is TANSTAAFL — “there ain’t no such thing as a free lunch”. Ultimately, when you look under the covers, that extra capability is implemented with extra code, IO, memory and CPU, just as it would be if you implemented it on your own. Sometimes (rarely!) it’s completely pay-for-play and you only pay the cost when you use those extra features. Other times the component’s implementers have built in certain assumptions and trade-offs and those features are likely to constrain future evolution or place constraints on how the component is integrated into a larger system. It is the complexity of analyzing this, even when you understand the core design characteristics of the component, that often leads to the practice of building a full functional prototype to validate your specific performance requirements under your own simulated (or actual) load patterns.&lt;/p&gt;
&lt;p name=&quot;0b1c&quot; id=&quot;0b1c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Let’s get back to the problem of persisting application state.&lt;/p&gt;
&lt;p name=&quot;85c7&quot; id=&quot;85c7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Some applications operate over storage in a relatively simple manner. A file on disk is completely read into data structures in memory, modified, and then the entire file is written back to disk. A simple trick of writing the new file under a separate name and then renaming the new file to replace the old file only after it has been successfully written provides safety against storage corruption.&lt;/p&gt;
&lt;p name=&quot;1c06&quot; id=&quot;1c06&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The next approach is to represent the application’s state using multiple files on disk; the step up in complexity is surprisingly steep. An important challenge is that generally there are interdependencies between the files (e.g. an index of some kind) and file systems do not generally provide any transactional guarantees (or the tradeoffs in using the support they do provide is too great). In the face of failures (guaranteed to occur at scale) the state of the different files can become inconsistent. This means the application must build in techniques for recognizing and repairing this inconsistent “corrupted” state. The very fact that the files are independently accessible to other applications and services through the file system also makes this kind of inconsistency a state that needs to be designed for. However, the interaction with any single file can be still relatively simple — just open and rewrite it in toto. In aggregate, there may be other challenges depending on the scale at which the file system is leveraged (e.g. if 10s, 100s, 1000s of files need to be managed and potentially split across directories to optimize file system performance characteristics that scale with number of files per directory). This approach of using independent files can work well when the files are independently consistent and where the typical file size is large enough that storage space efficiency is not a special concern (due to fragmentation or wasted space due to file system metadata and page size). An example use that meets those requirements is storing email attachments as independent files on disk rather than within a single mail cache file. Storing large independent blobs is a problem file systems have been tuned for, so this offloading can narrow the scope of design points a single file database needs to be targeted at.&lt;/p&gt;
&lt;p name=&quot;963b&quot; id=&quot;963b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The key differentiating approach in a database as I am using the term here is that the single file is only partially read into memory and only incrementally rewritten. For example, OneNote provides a virtualized experience over a potentially very large space (10s of GBs) of notebooks. They cannot be fully loaded into memory and yet the application would like to provide the illusion that all the data is available for browsing and editing at any time. The application would like to boot to a working state quickly (that is, only do a small amount of IO on startup). Modifications typically only involve a small subset of the data and the application would like to write those changes to disk quickly and at low cost. As I browse over new parts of the data model, I would like to quickly fault that data in (e.g. navigate to a new section in OneNote). An additional requirement is that while most writes are small and incremental, the special case of syncing new content needs to be very fast and efficient for bulk transfers.&lt;/p&gt;
&lt;p name=&quot;da67&quot; id=&quot;da67&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Even with this rather simple description of requirements, we already have somewhat conflicting constraints (which is the nature of engineering!). We would like the data packed together so we can reduce total number and size of IOs, but we would like to avoid having to repack it all together when saving back changes to only a small subset of that data. If we only write the changed data our data ends up getting more fragmented over time while if we always repack we end up doing more IO — essentially having to rewrite data that hasn’t changed in order to get better packing. One fundamental change in approach that we’ve seen in the move away from desktop AC-powered machines to battery powered (that is, power constrained) mobile devices is moving away from the assumption that we can handle some of these tradeoffs through sporadic high-cost maintenance processes (e.g. running a whole file compaction or defragmentation process “at 3AM”). Instead, steady-state performance is the focus and costs need to be amortized over time. It was already the case even before the rise of smartphones that our assumptions about our ability to run code at these times was suspect (battery-constrained laptops became dominant starting in the mid-2000’s; “green” AC-powered machines are automatically shut down at night; as disk capacities exploded but IO per second did not, just rewriting all the data could take so long that it could not complete in any maintenance window that was available).&lt;/p&gt;
&lt;p name=&quot;c66b&quot; id=&quot;c66b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We also need to think about how to implement the core database ACID properties (Atomic, Consistent, Isolated, Durable). While there is a long technical history on approaches and techniques here, they are generally embedded in specific implementations rather than available as a simple set of APIs to call. Trying to roll your means joining a mysterious cabal of wizards familiar with file system arcana including things like when is a flush really a flush, what bizarre things virus checkers can do, where and when IO requests can be reordered, how backup systems really work, how sync engines work, how this varies across OS type, etc.&lt;/p&gt;
&lt;p name=&quot;01b6&quot; id=&quot;01b6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The advantage of rolling your own is that you get to optimize and control things at a level that is just not possible when working through a complex external component. In some sense this is the eternal component dependency problem. When does an external component solve a hard problem better than you could yourself? Determining “better” is frequently a hard question that includes aspects like performance, functionality and development time/cost as well as a significant element of “better over time”. Over time your own requirements will change, your view of the importance to your product of optimizing this layer will change, the underlying technology landscape will change, and the component itself will change (or frequently, &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;not&lt;/strong&gt; change, which is problematic when layered on top of that changing technology landscape).&lt;/p&gt;
&lt;p name=&quot;88b8&quot; id=&quot;88b8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;OK, that was all just background. Let’s dive into the details of the OneNote work.&lt;/p&gt;
&lt;p name=&quot;8bb2&quot; id=&quot;8bb2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;OneNote has been morphing for some time into a purely cloud-connected application with data stored in the cloud rather than operating on files stored on local disk. This work was focused on optimizing the OneNote “cache” — the set of files that store a cached copy of cloud notebooks locally to support offline usage and fast and responsive read and write. The original OneNote persistence format stored each section in a separate file (where each section contains a set of pages). A notebook was represented as a folder hierarchy containing section files and other nested folders. A table of contents file stored certain metadata about the folders themselves. OneNote’s original cache format merged all cached notebooks into a single file on disk. A section file is a “database” in the meaning we are using it here (it was designed to be partially read and incrementally rewritten) and the cache file built on top of the core file and object management primitives that were used for reading and writing section files.&lt;/p&gt;
&lt;p name=&quot;81d9&quot; id=&quot;81d9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The cache rewrite effort had some clear goals and one significant constraint. As I talked about above, OneNote’s cache file was designed to have periodic large-scale cleanup processes run that are not appropriate in a more mobile resource-constrained world. So an important goal was eliminating any need for periodic maintenance so that in practical usage the cache would use less storage and require less memory and CPU (since for many devices that maintenance never actually succeeded in running). Another goal was to address a long-time inefficiency related to OneNote’s revision-based storage model. OneNote supports a “save-less” model where all changes are automatically persisted to storage. In order to do this efficiently, it appends a new revision to the page that only contains the changed content. For heavily edited pages (a small but highly valuable subset), these revision chains could get long, resulting in pages that were slower to load and required more memory and CPU. An important goal was to ensure that the cost of loading a page was in line with the actual complexity of the page presented to the user rather than proportional to its editing history.&lt;/p&gt;
&lt;p name=&quot;b9c5&quot; id=&quot;b9c5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The significant constraint was that the work should be limited to the storage layer itself and not require a massive rewrite of the overall application. This ended up driving many of the requirements. When dealing with large, complex systems, a key problem is how to evolve the architecture without just throwing everything up in the air and hoping it lands on time. That approach is a thing of the past in our world of continuous engineering and delivery. In fact, even in the past it was problematic since it deferred many of the trickiest and time-consuming integration tasks and was a source of many a late project.&lt;/p&gt;
&lt;p name=&quot;d910&quot; id=&quot;d910&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In OneNote’s case, this incremental approach drove significant requirements:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;7461&quot; id=&quot;7461&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;The new system should equal or improve on the performance (memory, CPU, storage) of the existing solution (that was really the whole point of the project).&lt;/li&gt;
&lt;li name=&quot;8880&quot; id=&quot;8880&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;It needed to support the ability to snapshot pages (while continuing to allow creation of new page versions concurrently). The sync infrastructure, as well as versioning, indexing and other features rely on the ability to cheaply create snapshots of pages so that these features can operate over a page at the same time it might be being edited by the user. Storing multiple versions of a graph that contains dozens to tens of thousands of nodes in an efficient manner turned out to be a tricky endeavor. This requirement is a good example where a complex system comes to depend on some key operation being highly efficient. As a system evolves, maintaining these implicit performance guarantees is hugely important. Word has a similar requirement where it requires that “cloning” a document is very cheap. It is a non-trivial constraint for new features to maintain that characteristic.&lt;/li&gt;
&lt;li name=&quot;3f5d&quot; id=&quot;3f5d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Efficient computation of changes between versions. The sync engine relies on fast change computation to upload user changes to the server.&lt;/li&gt;
&lt;li name=&quot;37db&quot; id=&quot;37db&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Multiple concurrent writers. Sync happens concurrently with editing and requires the ability for multiple writers of the same page.&lt;/li&gt;
&lt;li name=&quot;0de5&quot; id=&quot;0de5&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Other subtle odd requirements. The existing code required that data could go unreferenced for a short period of time without being deleted. It also required that embedded files be exposed as real files while still maintaining ACID contracts. In practice, one of the main challenges of re-architecting a complex component or layer in a software system is even recognizing these subtle requirements since they are often implicit in the way the component is used rather than an explicit part of the API contract.&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;b3a8&quot; id=&quot;b3a8&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;The team looked carefully at existing database solutions (remember that old adage about never writing your own database?). Ultimately it was really the list of integration requirements above that drove them to write their own database rather than results of an analysis around raw performance or robustness. These kinds of evaluations are notoriously tricky, since you can really fail in both directions — you can underestimate the cost of stabilizing your own low level code in the wild world of real machines and real usage patterns or you can underestimate the cost of delivering your full solution on top of an existing complex component that has its own design point and constraints, especially if you are not starting from scratch but rather are trying to match those component constraints to the existing constraints of your own application. The fact that the team was building on their established expertise in this space gave them confidence that they had a good understanding of where the bear traps were in building their own.&lt;/p&gt;
&lt;p name=&quot;ae82&quot; id=&quot;ae82&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;One of the earliest decisions they made was to split the cache into a separate file per page (with a single master index file). Garbage collecting space allocated to deleted pages and deleted content or closed notebooks had been a major issue with the single file cache design. By splitting out pages, this garbage collection problem was offloaded to the file system, which is highly tuned to deal with it. Additionally, the typical size of a single page is relatively small (although in line with sizes that the file system is tuned for) so that opened opportunities for other simplifications. There were other benefits — it also avoided problems that had arisen with cache files that were exceptionally large (&amp;gt; 4GB). Fortuitously, it also made integrating with Enterprise Data Protection APIs (a new Windows 10 feature) much simpler since each page could be separately encrypted according to the appropriate polices for that content. I said “fortuitously” but in reality this is a good example where having a low-level design that is more in line with the user’s high level model of their content ends up avoiding internal implementation complexity that doesn’t align well with value delivered. This is the kind of “accidental complexity” that can slow down development over time in a large code base.&lt;/p&gt;
&lt;p name=&quot;9c8d&quot; id=&quot;9c8d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;As alluded to above, this does introduce a separate challenge with multi-file consistency. The team took an interesting approach here. The index file points to the location of the root of the page graph and free space map in each page cache file. When persisting a multi-file transaction, all page cache files are flushed to disk before the index file. Each page file now has &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;two&lt;/strong&gt; graph roots (and their related free space map) the old graph and the new graph (which typically share many children). Both are fully consistent and available in the file, depending on where you start looking. The index file is then flushed to disk to point to the new graph roots and new free maps. Transactional consistency for creation and deletion of pages requires an additional small twist. A data structure in the index file (flushed to disk as part of the transaction) describes the files to delete and the files created. New files are created in a separate folder and then moved to the main cache folder after the transaction completes. On restart, these data structures are processed to ensure any actions that didn’t fully complete at last run are finalized. Deletion is idempotent (deleting multiple times results in the same result) so is fairly straightforward. Finalizing the creation transaction is also idempotent (any files no longer in the sub-folder have already been successfully moved to the main folder) and files present in the subfolder but not referenced in the creation list are related to an unfinished new page transaction and can be safely deleted (or made available as part of a “lost pages” recovery feature).&lt;/p&gt;
&lt;p name=&quot;6d65&quot; id=&quot;6d65&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To address the problem of long revision chains, they made a fundamental change in the page-level data structures. Pages are still defined as revision chains, but each revision now stores the lookup table (now a BTree) for all the objects the revision references. The old version only referenced changed objects in the revision and needing to walk down the revision chain explicitly to find any objects that were not changed in that revision.&lt;/p&gt;
&lt;p name=&quot;1019&quot; id=&quot;1019&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The effect is that the cost of loading a version of a page (especially the current version) now reflects the complexity of the page, rather than its editing history. This change does make the computation of changes between revisions different. As noted above, this is one of the operations that much of the system assumes is fast. The team spent quite a bit of time redesigning the differencing algorithm (including building out an extensive set of unit and component tests) to ensure that it had both the reliability and the performance characteristics that the rest of the system required, especially over a broad set of use cases. This is another good example of investing a lot of effort (and surrounding engineering infrastructure to ensure the property is maintained over time as the product evolves) in one particular feature — compute the difference between two page versions — so that the rest of the system can be written to just assume it is reliable and fast. In fact, by writing the differencing algorithm as a general capability to compare any two revisions rather than assuming a chaining relationship, it opened up the feature for other uses (e.g. user-level compare of page versions that were not related by simple revision chaining but more complex branching).&lt;/p&gt;
&lt;p name=&quot;ab3e&quot; id=&quot;ab3e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Fast page snapshot was another feature required of the new implementation. The transactional consistency mechanism that required having multiple instances of the page graph be valid at the same time also could support a robust snapshot mechanism (simply by continuing to hold on to both instances of modified page graphs during the scope of the transaction). By building on the whole cache transaction mechanism it also expanded the capability of the snapshot from a single page in the old system to allowing snapshots of the entire notebook. That is not a mechanism that is currently being used but there are multiple features in early stages of planning that are considering making use of this more fully functional capability.&lt;/p&gt;
&lt;p name=&quot;5537&quot; id=&quot;5537&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Support for multiple writers allows both transactions to proceed independently but then are merged into a single transaction at commit time. This depends on leveraging OneNote’s robust merge capability, including the ability to represent conflicting edits directly in the content model. There are a few cases where the content model cannot be merged and in that case the transaction is backed out. Combining write transactions does have the consequence that a long-running transaction could delay other transactions from committing so care needs to be taken about how this mechanism is used by higher level processes (like sync).&lt;/p&gt;
&lt;p name=&quot;72fe&quot; id=&quot;72fe&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;One of the key approaches they took to minimizing memory was to use memory mapping for the page cache file and minimize the number of additional data structures that needed to be allocated and maintained in order to represent the page in memory. So this storage layer both requires less memory and less CPU since the storage data structures can be directly referenced without additional allocations and data copying. OneNote typically then builds an in-memory graph from the storage structures for ease of overall manipulation. The team is now looking at more opportunities where certain processing (especially bulk operations like sync and indexing with very specific functional requirements) can be implemented directly on the storage layers rather than requiring a graph to be “hydrated”. Experience shows that optimizations like this can be surprisingly effective.&lt;/p&gt;
&lt;p name=&quot;2f64&quot; id=&quot;2f64&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;In the longer term, these changes around flexible threading models and highly efficient processing models sets OneNote up for building on their investment in owning the low-level storage layers. For the OneNote team, it seems clear that at least in this case, that old adage proved false.&lt;/p&gt;
</description>
<pubDate>Fri, 04 May 2018 16:01:45 +0000</pubDate>
<dc:creator>ahiknsr</dc:creator>
<og:title>Never Write Your Own Database – Terry Crowley – Medium</og:title>
<og:url>https://medium.com/@terrycrowley/never-write-your-own-database-736f704c780</og:url>
<og:description>Note: I originally authored this post while at Microsoft with Vincent Lascaux (the engineer primarily responsible for the work in OneNote…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@terrycrowley/never-write-your-own-database-736f704c780</dc:identifier>
</item>
<item>
<title>The rise of the pointless job</title>
<link>https://www.theguardian.com/money/2018/may/04/i-had-to-guard-an-empty-room-the-rise-of-the-pointless-job</link>
<guid isPermaLink="true" >https://www.theguardian.com/money/2018/may/04/i-had-to-guard-an-empty-room-the-rise-of-the-pointless-job</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;O&lt;/span&gt;&lt;/span&gt;ne day, the wall shelves in my office collapsed. This left books scattered all over the floor and a jagged, half-dislocated metal frame that once held the shelves in place dangling over my desk. I’m a professor of anthropology at a university. A carpenter appeared an hour later to inspect the damage, and announced gravely that, as there were books all over the floor, safety rules prevented him from entering the room or taking further action. I would have to stack the books and not touch anything else, whereupon he would return at the earliest available opportunity.&lt;/p&gt;
&lt;p&gt;The carpenter never reappeared. Each day, someone in the anthropology department would call, often multiple times, to ask about the fate of the carpenter, who always turned out to have something extremely pressing to do. By the time a week was out, it had become apparent that there was one man employed by buildings and grounds whose entire job it was to apologise for the fact that the carpenter hadn’t come. He seemed a nice man. Still, it’s hard to imagine he was particularly happy with his work life.&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;A bullshit job is so completely pointless, unnecessary, or pernicious that even the employee can't justify its existence&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;Everyone is familiar with the sort of jobs that don’t seem, to the outsider, really to do much of anything: HR consultants, communications coordinators, PR researchers, financial strategists, corporate lawyers or the sort of people who spend their time staffing committees that discuss the problem of unnecessary committees. What if these jobs really are useless, and those who hold them are actually aware of it? Could there be anything more demoralising than having to wake up in the morning five out of seven days of one’s adult life to perform a task that one believes does not need to be performed, is simply a waste of time or resources, or even makes the world worse? There are plenty of surveys about whether people are happy at work, but what about whether people feel their jobs have any good reason to exist? I decided to investigate this phenomenon by drawing on more than 250 testimonies from people around the world who felt they once had, or now have, what I call a bullshit job.&lt;/p&gt;
&lt;h2&gt;What is a bullshit job?&lt;/h2&gt;
&lt;p&gt;The defining feature is this: one so completely pointless that even the person who has to perform it every day cannot convince themselves there’s a good reason for them to be doing it. They may not be able to admit this to their co-workers – often, there are very good reasons not to do so – but they are convinced the job is pointless nonetheless.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Bullshit jobs are not just jobs that are useless; typically, there has to be some degree of pretence and fraud involved as well. The employee must feel obliged to pretend that there is, in fact, a good reason their job exists, even if, privately, they find such claims ridiculous.&lt;/p&gt;
&lt;p&gt;When people speak of bullshit jobs, they are generally referring to employment that involves being paid to work for someone else, either on a waged or salaried basis (most would include paid consultancies). Obviously, there are many self-employed people who manage to get money from others by means of falsely pretending to provide them with some benefit or service (normally we call them grifters, scam artists, charlatans or frauds), just as there are self-employed people who get money off others by doing or threatening to do them harm (normally we refer to them as muggers, burglars, extortionists or thieves). In the first case, at least, we can definitely speak of bullshit, but not of bullshit jobs, because these aren’t “jobs”, properly speaking. A con job is an act, not a profession. People do sometimes speak of professional burglars, but this is just a way of saying that theft is the burglar’s primary source of income.&lt;/p&gt;
&lt;p&gt;These considerations allow us to formulate what I think can serve as a final working definition of a bullshit job: a form of paid employment that is so completely pointless, unnecessary, or pernicious that even the employee cannot justify its existence, even though, as part of the conditions of employment, the employee feels obliged to pretend that this is not the case.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;The five types of bullshit job&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Flunkies&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;They are given some minor task to justify their existence, but this is really just a pretext: in reality, flunky jobs are those that exist only or primarily to make someone else look or feel important. A classic flunky is someone like Steve, who told me, “I just graduated, and my new ‘job’ basically consists of my boss forwarding emails to me with the message: ‘Steve refer to the below’, and I reply that the email is inconsequential or spam.”&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;In countries such as Brazil, some buildings still have elevator operators whose entire job is to push the button for you&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;Doormen are the most obvious example. They perform the same function in the houses of the very rich that electronic intercoms have performed for everyone else since at least the 1950s. In some countries, such as Brazil, some buildings still have uniformed elevator operators whose entire job is to push the button for you. Further examples are receptionists and front-desk personnel at places that obviously don’t need them. Other flunkies provide a badge of importance. These include cold callers, who make contact with potential clients on the understanding that the broker for whom they work is so busy making money that they need an assistant to make this call.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Goons&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These are people whose jobs have an aggressive element but, crucially, who exist only because other people also employ people in these roles. The most obvious example of this are national armed forces. Countries need armies only because other countries have armies; if no one had an army, armies would not be needed. But the same can be said of most lobbyists, PR specialists, telemarketers and corporate lawyers.&lt;/p&gt;
&lt;p&gt;Goons find their jobs objectionable not just because they feel they lack positive value, but also because they see them as essentially manipulative and aggressive. These include a lot of call-centre employees: “You’re making an active negative contribution to people’s day,” explained one anonymous testimony. “I called people up to hock them useless shit: specifically, access to their ‘credit score’ that they could obtain for free elsewhere, but that we were offering, with some mindless add-ons, for £6.99 a month.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Duct-tapers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These employees’ jobs exist only because of a glitch or fault in the organisation; they are there to solve a problem that ought not to exist. The most obvious examples of duct-tapers are those whose job it is to undo the damage done by sloppy or incompetent superiors.&lt;/p&gt;
&lt;p&gt;Many duct-taper jobs are the result of a glitch in the system that no one has bothered to correct – tasks that could easily be automated, for instance, but haven’t been either because no one has got around to it, or because the manager wants to maintain as many subordinates as possible, or because of some structural confusion.&lt;/p&gt;
&lt;p&gt;Magda’s job required her to proofread research reports written by her company’s star researcher-statistician. “The man didn’t know the first thing about statistics, and he struggled to produce grammatically correct sentences. I’d reward myself with a cake if I found a coherent paragraph. I lost 12lb working in that company. My job was to convince him to undertake a major reworking of every report he produced. Of course, he would never agree to correct anything, so I would then have to take the report to the company directors. They were statistically illiterate, too, but, being the directors, they could drag things out even more.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Box-tickers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These employees exist only or primarily to allow an organisation to be able to claim it is doing something that, in fact, it is not doing. The most miserable thing about box-ticking jobs is that the employee is usually aware that not only does the box-ticking exercise do nothing towards accomplishing its ostensible purpose, but also it undermines it, because it diverts time and resources away from the purpose itself.&lt;/p&gt;
&lt;p&gt;We’re all familiar with box-ticking as a form of government. If a government’s employees are caught doing something very bad – taking bribes, for instance, or shooting citizens at traffic lights – the first reaction is invariably to create a “fact-finding commission” to get to the bottom of things. This serves two functions. First of all, it’s a way of insisting that, aside from a small group of miscreants, no one had any idea that any of this was happening (this, of course, is rarely true); second, it’s a way of implying that once all the facts are in, someone will definitely do something about it (this usually isn’t true, either).&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;I had one responsibility: watching an inbox of forms asking for tech help, and pasting them into a different form&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;Local government has been described as little more than an endless sequence of box-ticking rituals revolving around monthly “target figures”. There are all sorts of ways that private companies employ people to be able to tell themselves they are doing something that they aren’t really doing. Many large corporations, for instance, maintain their own in-house magazines or even television channels, the ostensible purpose of which is to keep employees up to date on interesting news and developments, but which, in fact, exist for almost no reason other than to allow executives to experience that warm and pleasant feeling that comes when you see a favourable story about yourself in the media.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Taskmasters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These fall into two groups. Type one comprises those whose role consists entirely of assigning work to others. This job can be considered bullshit if the taskmaster believes there is no need for their intervention, and that if they were not there, underlings would be perfectly capable of carrying on by themselves.&lt;/p&gt;
&lt;p&gt;Whereas the first variety of taskmaster is merely useless, the second variety does actual harm. These are taskmasters whose primary role is to create bullshit tasks for others to do, to supervise bullshit, or even to create entirely new bullshit jobs.&lt;/p&gt;
&lt;p&gt;A taskmaster may spend at least 75% of their time allocating tasks and monitoring if the underling is doing them, even though they have absolutely no reason to believe the underlings in question would behave any differently if they weren’t there.&lt;/p&gt;
&lt;p&gt;“Strategic mission statements” (or, even worse, “strategic vision documents”) instil a particular terror in academics. These are the primary means by which corporate management techniques – setting up quantifiable methods for assessing performance, forcing teachers and scholars to spend more and more of their time assessing and justifying what they do, and less and less time actually doing it – are insinuated into academic life.&lt;/p&gt;
&lt;p&gt;I should add that there is really only one class of people who not only deny their jobs are pointless, but also express outright hostility to the very idea that our economy is rife with bullshit jobs. These are – predictably enough – business owners and others in charge of hiring and firing. No one, they insist, would ever spend company money on an employee who wasn’t needed. All the people who are convinced their jobs are worthless must be deluded, or self-important, or simply don’t understand their real function, which is fully visible only to those above. One might be tempted to conclude from this response that this is one class of people who genuinely don’t realise their own jobs are bullshit.&lt;/p&gt;
&lt;h2&gt;Do you have a bullshit job?&lt;/h2&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Illustration of someone asleep on a bed made of an alarm clock that is going off&quot; src=&quot;https://i.guim.co.uk/img/media/e8fd576e21b7e479cdc82a4691f2fc0907cd06c5/0_0_1241_899/master/1241.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=c8f110c04fa2646080d14a4631a9ff77&quot;/&gt;&lt;/div&gt;

Illustration: Igor Bastidas
&lt;p&gt;These holders of bullshit jobs testify to the misery that can ensue when the only challenge you can overcome in your work is the challenge of coming to terms with the fact that you are not, in fact, presented with any challenges; when the only way you can exercise your powers is in coming up with creative ways to cover up the fact that you cannot exercise your powers; of managing the fact that you have, completely against your choosing, been turned into a parasite and a fraud. All wanted to remain anonymous:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guarding an empty room&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“I worked as a museum guard for a global security company in a museum where one exhibition room was left unused. My job was to guard that empty room, ensuring no museum guests touched the, well, nothing in the room and ensure nobody set any fires. To keep my mind sharp and attention undivided, I was forbidden any form of mental stimulation, like books, phones, etc. As nobody was ever there, I sat still and twiddled my thumbs for seven and a half hours, waiting for the fire alarm to sound. If it did, I was to calmly stand up and walk out. That was it.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Copying and pasting&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“I was given one responsibility: watching an inbox that received emails in a certain form from employees asking for tech help, and copy and paste it into a different form. Not only was this a textbook example of an automatable job, it actually used to be automated. There was some disagreement between managers that led to a standardisation that nullified the automation.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Looking busy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“I was hired as a temp but not assigned any duties. I was told it was very important that I stay busy, but I wasn’t to play games or surf the web. My primary function seemed to be occupying a chair and contributing to the decorum of the office. At first, this seemed pretty easy, but I quickly discovered that looking busy when you aren’t is one of the least pleasant office activities imaginable. In fact, after two days, it was clear that this was going to be the worst job I had ever had. I installed &lt;a href=&quot;http://lynx.browser.org/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Lynx&lt;/a&gt;, a text-only web browser that basically looks like a DOS [disk-operating system] window. No images, just monospaced text on an endless black background. My absentminded browsing of the internet now appeared to be the work of a skilled technician, the web browser a terminal into which diligently typed commands signalled my endless productivity.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sitting in the right place&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“I work in a college dormitory during the summer. I have worked at this job for three years, and at this point it is still unclear to me what my actual duties are. Primarily, it seems that my job consists of physically occupying space at the front desk. While engaged in this, I am free to ‘pursue my own projects’, which I take to mean mainly creating rubber band balls out of rubber bands I find in the cabinets. When I am not busy with this, I might be checking the office email account (I have basically no training or administrative power, of course, so all I can do is forward these emails to my boss), moving packages from the door, where they get dropped off, to the package room, answering phone calls (again, I know nothing and rarely answer a question to the caller’s satisfaction), or finding ketchup packets from 2005 in the desk drawers. For these duties, I am paid $14 an hour.”&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;bullet&quot;&gt;•&lt;/span&gt; This is an edited extract from Bullshit Jobs: A Theory by David Graeber, published on 14 May by Allen Lane at £20. To order a copy for £17, go to &lt;a href=&quot;https://www.guardianbookshop.com/bullshit-jobs.html?utm_source=editoriallink&amp;amp;utm_medium=merch&amp;amp;utm_campaign=article&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;guardianbookshop.com&lt;/a&gt; or call 0330 333 6846.&lt;/p&gt;
&lt;p&gt;Commenting on this piece? If you would like your comment to be considered for inclusion on Weekend magazine’s letters page in print, please email &lt;a href=&quot;mailto:&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;weekend@theguardian.com&lt;/a&gt;, including your name and address (not for publication).&lt;br/&gt;&lt;/p&gt;


</description>
<pubDate>Fri, 04 May 2018 15:38:02 +0000</pubDate>
<dc:creator>kawera</dc:creator>
<og:url>http://www.theguardian.com/money/2018/may/04/i-had-to-guard-an-empty-room-the-rise-of-the-pointless-job</og:url>
<og:description>Copying and pasting emails. Inventing meaningless tasks for others. Just looking busy. Why do so many people feel their work is completely unnecessary?</og:description>
<og:image>https://i.guim.co.uk/img/media/e2452c3b3ecdedfee0ad90c27acb0ee280103e1d/0_116_2990_1794/master/2990.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxOC8wMS8zMS9mYWNlYm9va19kZWZhdWx0LnBuZw&amp;s=634b11a6ae0e8a9fd1084fa3bd28ddf2</og:image>
<og:type>article</og:type>
<og:title>‘I had to guard an empty room’: the rise of the pointless job</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/money/2018/may/04/i-had-to-guard-an-empty-room-the-rise-of-the-pointless-job</dc:identifier>
</item>
<item>
<title>Moving Fast and Securing Things</title>
<link>https://slack.engineering/moving-fast-and-securing-things-540e6c5ae58a</link>
<guid isPermaLink="true" >https://slack.engineering/moving-fast-and-securing-things-540e6c5ae58a</guid>
<description>&lt;p name=&quot;5f94&quot; id=&quot;5f94&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;For development teams, process can often be antithetical to speed. Ease of deployment and security tend to have an inverse relationship, with some resentment for the security team occasionally mixed in. You may have seen the following tweet:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*Vf6cmbjmOfHkgI2p.&quot; data-width=&quot;1148&quot; data-height=&quot;1214&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*Vf6cmbjmOfHkgI2p.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*Vf6cmbjmOfHkgI2p.&quot;/&gt;&lt;/div&gt;
&lt;a href=&quot;https://twitter.com/petecheslock/status/595617204273618944?lang=en&quot; data-href=&quot;https://twitter.com/petecheslock/status/595617204273618944?lang=en&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://twitter.com/petecheslock/status/595617204273618944?lang=en&lt;/a&gt;
&lt;p name=&quot;e125&quot; id=&quot;e125&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We believe things don’t have to be like that. In this post, we will discuss how we’ve implemented our Security Development Lifecycle (SDL) at Slack, our lessons learned, and the &lt;a href=&quot;https://github.com/slackhq/goSDL&quot; data-href=&quot;https://github.com/slackhq/goSDL&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;tool&lt;/a&gt; we’ve built — and are open sourcing — that makes it all possible!&lt;/p&gt;
&lt;h3 name=&quot;02e8&quot; id=&quot;02e8&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;A Bit of Background&lt;/h3&gt;
&lt;p name=&quot;8a8c&quot; id=&quot;8a8c&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Slack is a rapidly growing company. We have over six million daily active users and over nine million weekly active users. We’re still relatively young, so this reflects a rapid acceleration of people using Slack. To deliver features to a growing number of users, we’ve also grown as an organization. At the start of 2015, Slack had 100 employees. Today, we’re over 800 people! These teams are spread over multiple offices and multiple countries, and our Engineering organization has been growing at a faster rate than our Product Security team.&lt;/p&gt;
&lt;p name=&quot;5552&quot; id=&quot;5552&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We have a culture of continuous integration and continuous deployment. The process of deploying code to production is very simple, and takes about ten minutes total. This results in a life cycle in which we deploy code to production approximately &lt;em class=&quot;markup--em markup--p-em&quot;&gt;100 times per day&lt;/em&gt;. We’ve built our SDL process to provide coverage without being blocking, and to emphasize self-sufficiency rather than having our team manually review every pull request.&lt;/p&gt;
&lt;p name=&quot;756d&quot; id=&quot;756d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Ideally our process isn’t this:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*6TSB8spZHPcnasgo7TFcYQ.png&quot; data-width=&quot;1006&quot; data-height=&quot;750&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*6TSB8spZHPcnasgo7TFcYQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*6TSB8spZHPcnasgo7TFcYQ.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;5300&quot; id=&quot;5300&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;But rather, this:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*di1_QAbKGtLI63x-C5udYw.png&quot; data-width=&quot;1038&quot; data-height=&quot;906&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*di1_QAbKGtLI63x-C5udYw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*di1_QAbKGtLI63x-C5udYw.png&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;f96d&quot; id=&quot;f96d&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Deploying the SDL at Slack&lt;/h3&gt;
&lt;p name=&quot;087e&quot; id=&quot;087e&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--h3&quot;&gt;“SDL” stands for “Security Development Lifecycle”. You may have seen the following image:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*LgQB78Ctimt3pCzf.&quot; data-width=&quot;668&quot; data-height=&quot;230&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*LgQB78Ctimt3pCzf.&quot;/&gt;&lt;/div&gt;
source: Microsoft SDL
&lt;p name=&quot;6fba&quot; id=&quot;6fba&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Microsoft uses this process to highlight security topics throughout numerous development stages and phases. But when talking about secure development, mentioning “life cycle” or “process” can cause people’s eyes to glaze over. The perception of “&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Adding Friction&lt;/strong&gt;” doesn’t work well with the “&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Always Shipping&lt;/strong&gt;” mantra.&lt;/p&gt;
&lt;p name=&quot;aa83&quot; id=&quot;aa83&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To deploy the SDL at Slack, we had to account for a variety of constraints. We have a lot of work to do, and not a lot of time to do it (this isn’t a unique problem, of course). While we have excellent developers, inspiring secure design is sometimes difficult, and we wanted to avoid impeding a team’s output. A traditional waterfall approach to the SDL wouldn’t work in our process.&lt;/p&gt;
&lt;p name=&quot;b6d2&quot; id=&quot;b6d2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We wanted to maintain our culture of developer trust. &lt;a href=&quot;https://slack.engineering/on-empathy-pull-requests-979e4257d158&quot; data-href=&quot;https://slack.engineering/on-empathy-pull-requests-979e4257d158&quot; class=&quot;markup--anchor markup--p-anchor&quot; target=&quot;_blank&quot;&gt;Empathy is an important value at Slack&lt;/a&gt;, and we apply that in our security procedures. An adversarial relationship between the security and development teams is a dangerous possibility if the security team is not thoughtful. Our goal was to empower the development team to be self-sufficient; security is everyone’s responsibility.&lt;/p&gt;
&lt;p name=&quot;5a75&quot; id=&quot;5a75&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;As part of our culture of trust, we place a huge emphasis on transparency and availability. We keep our discussions in an open forum, we host weekly office hours for anyone who wants to stop by and chat about security, and we offer security training during employee onboarding, to both educate and present the faces of the security team. All of these serve to foster mutual trust and collaboration. We wanted a process that was understandable, and had a visible scope from the outside. We wanted something that moved power back to our developers, who are awesome and care a great deal about their work. Developers understand best what they’re building, and they know where the risk is. We use Slack to keep all our discussions in the open and give important stakeholders a voice.&lt;/p&gt;
&lt;h3 name=&quot;fc39&quot; id=&quot;fc39&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The Tool: goSDL&lt;/h3&gt;
&lt;p name=&quot;f937&quot; id=&quot;f937&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;With all of this in mind, we created goSDL, a tool that brings all these concepts together, enabling our developers to produce secure features at high output with low friction. The tool (which you can find here: &lt;a href=&quot;https://github.com/slackhq/goSDL&quot; data-href=&quot;https://github.com/slackhq/goSDL&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/slackhq/goSDL&lt;/a&gt;) is a web application that guides anyone involved with a new feature, like developers or PMs, through questions and checklists to improve the security posture of whatever they’re working on. The name is derived from the process of initiating a feature review — a developer uses a &lt;a href=&quot;https://api.slack.com/slash-commands&quot; data-href=&quot;https://api.slack.com/slash-commands&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;slash command&lt;/a&gt; in Slack, ‘/go sdl’, to begin the SDL process (the app is written in PHP, not Go 🤷).&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*UFWu7EhXIQKbnNLo.&quot; data-width=&quot;1328&quot; data-height=&quot;1034&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*UFWu7EhXIQKbnNLo.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*UFWu7EhXIQKbnNLo.&quot;/&gt;&lt;/div&gt;
The introductory questions
&lt;p name=&quot;db92&quot; id=&quot;db92&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The process starts out with some simple questions. Based upon the user’s responses, an initial risk ranking can be easily determined.&lt;/p&gt;
&lt;h3 name=&quot;3720&quot; id=&quot;3720&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The Initial Risk Assessment&lt;/h3&gt;
&lt;p name=&quot;55e1&quot; id=&quot;55e1&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The Initial Risk Assessment allows a team to estimate their feature or product’s risk before needing involvement from the security team. Developers have insight into their own codebase; they know if the code or feature might impact a sensitive part of the code, such as authentication or authorization functionality. The risk ranking helps inform the level of involvement needed from product security.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*wTIR7VXvjzLC2d2R.&quot; data-width=&quot;1498&quot; data-height=&quot;1190&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*wTIR7VXvjzLC2d2R.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*wTIR7VXvjzLC2d2R.&quot;/&gt;&lt;/div&gt;
Some of the Risk Ranking questions
&lt;h3 name=&quot;3356&quot; id=&quot;3356&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;The Component Survey&lt;/h3&gt;
&lt;p name=&quot;9701&quot; id=&quot;9701&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;After the initial risk level is determined there are further questions specific to the components of the feature being developed. The Component Survey allows the developers creating the software to expertly scope the survey to their needs. By default, it gives an array of “opt-in” content, allowing the questions to be concise and specifically tailored to the team’s work. Components use a plugin-based architecture not specific to Slack’s infrastructure. This approach allows generalization of questions and content, and easy extensibility. If support for a new component, like a new language, is needed, it’s as simple as adding another JSON plugin. This encourages thinking about security at a higher level than just the code itself.&lt;/p&gt;
&lt;p name=&quot;d3c3&quot; id=&quot;d3c3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Each component consists of a primary module, and potential submodules. For example, a feature may include a “WebApp” component. This would be stored as a module, and issues from the &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project&quot; data-href=&quot;https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;OWASP Top 10&lt;/a&gt; could be included as submodules. We’ve included example modules and submodules &lt;a href=&quot;https://github.com/slackhq/goSDL/tree/master/www/sdl/modules&quot; data-href=&quot;https://github.com/slackhq/goSDL/tree/master/www/sdl/modules&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*UFelRWhajVZUpH6Z.&quot; data-width=&quot;1492&quot; data-height=&quot;1468&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*UFelRWhajVZUpH6Z.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*UFelRWhajVZUpH6Z.&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*iH2e91ZDPfNGe9ti.&quot; data-width=&quot;749&quot; data-height=&quot;680&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*iH2e91ZDPfNGe9ti.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*iH2e91ZDPfNGe9ti.&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;3c22&quot; id=&quot;3c22&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;The Checklists&lt;/h3&gt;
&lt;p name=&quot;8b7a&quot; id=&quot;8b7a&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;After the Component Survey is completed, the tool generates checklists for the person working through the SDL. Our approach to checklists is partially inspired by their use in preventing aviation accidents. The vast majority of air accidents and crashes are a result of human error. Many accidents could be avoided by properly adhering to checklists. Aviation checklists aim to enforce safety in the skies, and we employ them in a similar manner to enforce security in our code.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*x-A9GIZ9l2lLHcHT.&quot; data-width=&quot;550&quot; data-height=&quot;372&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*x-A9GIZ9l2lLHcHT.&quot;/&gt;&lt;/div&gt;
One of many shows exploring air accidents and their investigations
&lt;p name=&quot;6ab9&quot; id=&quot;6ab9&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Crash investigations attempt to identify causes of accidents and prevent them in the future. We have added the completion of the SDL and associated checklists to our product team’s launch requirements list. We have simplified tasks as much as possible, presenting the items as statements that require little to no prior context to complete, and we acquire feedback via our &lt;a href=&quot;https://slack.engineering/slack-bug-bounty-three-years-later-ad59e9188603&quot; data-href=&quot;https://slack.engineering/slack-bug-bounty-three-years-later-ad59e9188603&quot; class=&quot;markup--anchor markup--p-anchor&quot; target=&quot;_blank&quot;&gt;bug bounty&lt;/a&gt; program and incident investigations that help us to improve the checklists as we progress.&lt;/p&gt;
&lt;p name=&quot;c2be&quot; id=&quot;c2be&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When the Component Survey portion of goSDL is complete, two JIRA tickets are created for easy task tracking. One item contains the checklist for the team to complete as they build their feature, and one item is assigned to the product security team, allowing us to track our own review of the feature.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*n4dNVosZiVnQh8ta.&quot; data-width=&quot;1504&quot; data-height=&quot;368&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*n4dNVosZiVnQh8ta.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*n4dNVosZiVnQh8ta.&quot;/&gt;&lt;/div&gt;
The interstitial showing where the JIRA item containing the checklist exists
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*ZoddbAdKYfnMjW4o.&quot; data-width=&quot;1600&quot; data-height=&quot;990&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*ZoddbAdKYfnMjW4o.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*ZoddbAdKYfnMjW4o.&quot;/&gt;&lt;/div&gt;
The “SDL Checklist” JIRA item
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*PDuvTLw4pfCH4PeO.&quot; data-width=&quot;1478&quot; data-height=&quot;734&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*PDuvTLw4pfCH4PeO.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*PDuvTLw4pfCH4PeO.&quot;/&gt;&lt;/div&gt;
The JIRA item has check boxes for the team to complete
&lt;p name=&quot;c880&quot; id=&quot;c880&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We are using the &lt;a href=&quot;https://marketplace.atlassian.com/plugins/com.okapya.jira.checklist/server/overview&quot; data-href=&quot;https://marketplace.atlassian.com/plugins/com.okapya.jira.checklist/server/overview&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Checklist for Jira&lt;/a&gt; plugin to enable the checklist custom fields in JIRA tickets, and the &lt;a href=&quot;https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner/server/overview&quot; data-href=&quot;https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner/server/overview&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ScriptRunner for Jira&lt;/a&gt; plugin to create custom a REST API which is then used by goSDL to update the checklist field.&lt;/p&gt;
&lt;p name=&quot;7ce3&quot; id=&quot;7ce3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Within the JIRA ticket, there will be checklists that are populated based on the responses to the component survey question. When the majority of items are marked as done, we reach out to the development team to address any outstanding unchecked items (and find out if an item was unclear or if the team is still working on it).&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*HSpCxNcHJMMN33QJ.&quot; data-width=&quot;1456&quot; data-height=&quot;744&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*HSpCxNcHJMMN33QJ.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*HSpCxNcHJMMN33QJ.&quot;/&gt;&lt;/div&gt;
It’s easy to see when a team has completed the full checklist.
&lt;p name=&quot;7a77&quot; id=&quot;7a77&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;As mentioned earlier, two JIRA tickets are created by the tool. The second is assigned to the product security team. Upon its creation, we receive a Slack message informing us of the new review.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*pY6YGJkTBpW2tFHz.&quot; data-width=&quot;1074&quot; data-height=&quot;266&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*pY6YGJkTBpW2tFHz.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*pY6YGJkTBpW2tFHz.&quot;/&gt;&lt;/div&gt;
The Slack notification of a new security review to perform
&lt;p name=&quot;7ad5&quot; id=&quot;7ad5&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This JIRA review task gives us a heads up of incoming features and their risk ratings. This task item contains all the information we need to perform a security review:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;a362&quot; id=&quot;a362&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Technical/design specifications, which might illuminate other product areas worth exploring&lt;/li&gt;
&lt;li name=&quot;0da0&quot; id=&quot;0da0&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Contacts of the developer(s) involved in the project&lt;/li&gt;
&lt;li name=&quot;b622&quot; id=&quot;b622&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Slack channels related to the project&lt;/li&gt;
&lt;li name=&quot;e823&quot; id=&quot;e823&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Link to the SDL checklist, the first JIRA item&lt;/li&gt;
&lt;li name=&quot;7a14&quot; id=&quot;7a14&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Link to a relevant pull request&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;0bd0&quot; id=&quot;0bd0&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;This provides the product security team with context as we work with the development team on the review.&lt;/p&gt;
&lt;p name=&quot;5134&quot; id=&quot;5134&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To maintain transparent communication, we use multiple Slack channels to discuss features and reviews with developers. Product security has a triage channel in which anyone can consult our team, and every new feature has its own channel (e.g. “#feat-awesome”). This documents progress and builds knowledge as we work through development processes.&lt;/p&gt;
&lt;p name=&quot;dde0&quot; id=&quot;dde0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;These approaches are vital for successful, secure development. We enable development teams to be thoughtful about the security implications of their features, and we provide a process for that via the checklists. We guide developers to build securely through the completion of the SDL. We maintain channels for transparent, quick, and interactive communication; this encourages participation, while also providing a searchable system of record for all future work.&lt;/p&gt;
&lt;h3 name=&quot;67d7&quot; id=&quot;67d7&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Lessons Learned&lt;/h3&gt;
&lt;p name=&quot;7e77&quot; id=&quot;7e77&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;This system has been an invaluable means of gathering feedback about our security processes, as well as our successes and failures. We gain high-level perspective of the software development trends taking place internally at Slack, as well as areas of particular concern to security. Coupled with external feedback (discussed shortly), we have both internal and external feedback which helps us improve.&lt;/p&gt;
&lt;h4 name=&quot;0368&quot; id=&quot;0368&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Internal Feedback&lt;/h4&gt;
&lt;p name=&quot;bf86&quot; id=&quot;bf86&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;We have, on average, between five and ten developers reach out to us each day (often before an SDL or feature is even underway). This gives us a degree of assurance that we are maintaining transparency and availability. Sometimes, developers or teams will reach out with questions about one particular item on a checklist. If multiple individuals reach out, we learn that we should tweak that checklist (e.g. to be more clear or more relevant). We have also received suggestions to add or update more related content for components or checklists. We then create or update content, allowing other teams to quickly benefit from that feedback.&lt;/p&gt;
&lt;p name=&quot;82d1&quot; id=&quot;82d1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Components and checklists are easy to modify or expand. They are all JSON descriptions, which follow a simple and readable format. We have examples in the Github repository, and adding content is as simple as creating a JSON file.&lt;/p&gt;
&lt;p name=&quot;c582&quot; id=&quot;c582&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Developers are smart, and they care about the product. They want to contribute to security, but don’t always have the same security expertise as a more specialized engineer. The checklist approach helps to promote security consideration during the development process, and helps passionate individuals improve their own security knowledge. Here are a few examples of feedback we’ve received from developers about the SDL:&lt;/p&gt;
&lt;blockquote name=&quot;0434&quot; id=&quot;0434&quot; class=&quot;graf graf--blockquote graf--startsWithDoubleQuote graf-after--p&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;“[The SDL] made me think of security things I normally don’t think about.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;043d&quot; id=&quot;043d&quot; class=&quot;graf graf--blockquote graf--startsWithDoubleQuote graf-after--blockquote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;“Having my team see me complete the SDL was useful and made me think through the things I was marking as complete.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;6ed2&quot; id=&quot;6ed2&quot; class=&quot;graf graf--blockquote graf--startsWithDoubleQuote graf-after--blockquote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;“Upon going over [the SDL], we discovered there were a few things we needed to look at… Wonderful.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;7be2&quot; id=&quot;7be2&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;This feedback was unsolicited (😍), and tells us that the process is helping developers as they proceed.&lt;/p&gt;
&lt;h4 name=&quot;0813&quot; id=&quot;0813&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;External Feedback&lt;/h4&gt;
&lt;p name=&quot;82ee&quot; id=&quot;82ee&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Slack runs a bug bounty program, which allows us to get constant feedback on opportunities for improving our product’s security. The program surfaces some truly clever bugs, and provides an excellent source of evaluation of our security, especially when we find patterns in submissions. We’ve noticed that after we release a new feature, we get more activity on that feature from the bug bounty. This makes the bug bounty an excellent source of external feedback for our SDL implementation.&lt;/p&gt;
&lt;p name=&quot;9dae&quot; id=&quot;9dae&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The number of valid bugs that we receive per month has remained fairly constant, while the number of features released (and SDLs completed) has been gradually increasing. Some months have fewer SDLs than average, but this varies based on when feature work begins and is completed.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*hdiByY_4GwcVoF0_.&quot; data-width=&quot;1200&quot; data-height=&quot;742&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*hdiByY_4GwcVoF0_.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*hdiByY_4GwcVoF0_.&quot;/&gt;&lt;/div&gt;
Aggregate of valid bug bounty bugs and new SDLs per month, over time (with average trend lines)
&lt;p name=&quot;18e1&quot; id=&quot;18e1&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;When we plot the number of valid bugs found by our bug bounty versus the number of SDLs completed by our engineering team, we see that our ratio of bug bounty bugs to new features is improving. Feature development is accelerating, while our valid bug bounty bug submissions are decelerating. There are other factors at play here, but in general these are desirable trends which point to the success of our SDL process.&lt;/p&gt;
&lt;h3 name=&quot;5b9d&quot; id=&quot;5b9d&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p name=&quot;61e3&quot; id=&quot;61e3&quot; class=&quot;graf graf--p graf-after--h3 graf--trailing&quot;&gt;First, we owe a big thank you to everyone who has participated in Slack’s ongoing security mission: the developers who build and secure our features, the researchers who submit bugs to our bug bounty, and past and present team members who have helped us build this process! We’ve come a long way, and there is still farther to go. By open-sourcing goSDL, we hope to enable other growing organizations to scale their security. We also hope to learn from their experience; we welcome contributions to the tool, its modules, and its checklists, and are excited to see what pull requests will come in!&lt;/p&gt;
</description>
<pubDate>Fri, 04 May 2018 13:18:19 +0000</pubDate>
<dc:creator>Chris911</dc:creator>
<og:title>Moving Fast and Securing Things – Several People Are Coding</og:title>
<og:url>https://slack.engineering/moving-fast-and-securing-things-540e6c5ae58a</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*I7foPGuLhqRN3U9v_WHf_A.jpeg</og:image>
<og:description>The SDL at Slack and goSDL</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://slack.engineering/moving-fast-and-securing-things-540e6c5ae58a?gi=83989a06b203</dc:identifier>
</item>
<item>
<title>Google embraces, extends, and extinguishes</title>
<link>https://drewdevault.com/2018/05/03/Google-embraces-extends-extinguishes.html</link>
<guid isPermaLink="true" >https://drewdevault.com/2018/05/03/Google-embraces-extends-extinguishes.html</guid>
<description>&lt;p&gt;Microsoft infamously coined the euphemism “&lt;a href=&quot;https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish&quot;&gt;embrace, extend, extinguish&lt;/a&gt;” to describe their strategy for disrupting markets dominated by open standards. These days, Microsoft seems to have turned the other leaf, contributing to a huge amount of open source and supporting open standards, and is becoming a good citizen of the technology community. It’s time to turn our concerns to Google.&lt;/p&gt;&lt;p&gt;Google famously “embraced” email on April Fool’s day, 2004, which is of course based on an open standard and federates with the rest of the world. If you’ve read the news lately, you might have seen that Google is shipping a big update to GMail soon, which adds “self-destructing” emails that vanish from the recipient’s inbox after a time. Leaving aside that this promise is impossible to deliver, look at the implementation - Google emails a link to a webpage with the actual email content, and does magic in their client to make it look seamless. Thus, they “extend” email. The “extinguish” with GMail is also well underway - it’s infamous for having an extremely strict spam filter for incoming emails from people who run personal or niche mail servers.&lt;/p&gt;
&lt;p&gt;Then there’s AMP. It’s an understatement to say Google embraced the web - but AMP is how they enter the “extend” phase. AMP is a “standard”, but they don’t listen to any external feedback on it and it serves as a vehicle for keeping users on their platform even when reading content from other websites. This is thought to be the main intention of the service, as there are plenty of other (and more effective) ways of rewarding lightweight pages in their search results. The “extinguish” phase comes as sites that don’t play ball get pushed out of Google search results and into obscurity. AMP is perhaps the most blatant of Google’s strategies, serving only to further Google’s agenda at the expense of everyone else.&lt;/p&gt;
&lt;p&gt;The list of grievances continues. Consider Google’s dizzying collection of chat applications. In its initial form, gtalk supported XMPP, an open and federated standard for chat applications. Google dropped support for XMPP in 2014 and continued the development of their proprietary platform up thru today’s Hangouts and Google Chat platforms - neither of which support any open standards. Slack is also evidently taking cues from Google here, recently shutting down their own IRC and XMPP bridges.&lt;/p&gt;
&lt;p&gt;Google Reader’s discontinuation fits too. RSS’s decline was evident before Google axed it, but killing Reader dealt a huge blow to any of RSS’s remaining momentum. Google said themselves they wanted to consolidate users onto the rest of their services - none of which, I should add, support any open syndication standards.&lt;/p&gt;
&lt;p&gt;What of Google’s role as a participant in open source? Sure, they make a lot of software open source, but they don’t collaborate with anyone. They forked from WebKit to get Apple out of the picture, and contributing to Chromium as a non-Googler is notoriously difficult. Android is the same story - open source in principle, but non-Googler AOSP contributors bemoan their awful approach to external patches. It took Google over a decade to start making headway on upstreaming their Linux patches for Android, too. Google writes papers about AI, presumably to incentivize their academics with recognition for their work. This is great until you notice that the crucial piece, the trained models, is always absent.&lt;/p&gt;
&lt;p&gt;For many people, the alluring convenience of Google’s services is overwhelming. It’s hard to hear these things. But we must face facts: embrace, extend, extinguish is a core part of Google’s playbook today. It’s important that we work to diversify the internet and fight the monoculture they’re fostering.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;2018-05-04 18:12 UTC&lt;/strong&gt;: I retract my criticism of Google’s open source portfolio as a whole, and acknowledge their positive impact on many projects. However, of the projects explicitly mentioned I maintain that my criticism is valid.&lt;/p&gt;
</description>
<pubDate>Fri, 04 May 2018 11:30:30 +0000</pubDate>
<dc:creator>Sir_Cmpwn</dc:creator>
<og:title>Google embraces, extends, and extinguishes</og:title>
<og:description>Microsoft infamously coined the euphemism “embrace, extend, extinguish” to describe their strategy for disrupting markets dominated by open standards. These days, Microsoft seems to have turned the other leaf, contributing to a huge amount of open source and supporting open standards, and is becoming a good citizen of the technology community. It’s time to turn our concerns to Google.</og:description>
<og:url>http://sircmpwn.github.io/2018/05/03/Google-embraces-extends-extinguishes.html</og:url>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://drewdevault.com/2018/05/03/Google-embraces-extends-extinguishes.html</dc:identifier>
</item>
<item>
<title>C Primer</title>
<link>https://www.enlightenment.org/docs/c/start</link>
<guid isPermaLink="true" >https://www.enlightenment.org/docs/c/start</guid>
<description>&lt;p&gt;PSD conversion plays a vital role in building a handsome WordPress based site. We have tried to give you the basic ideas to have to regard in mind when you convert any PSD to WordPress theme. Hopefully you will like it. If you liked this blog please feel free to share it with your dearest ones &lt;a href=&quot;https://psdtowpservice.com&quot; class=&quot;urlextern&quot; title=&quot;https://psdtowpservice.com&quot; rel=&quot;nofollow&quot;&gt;PSD to Wordpress Conversion Expert&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 04 May 2018 11:23:27 +0000</pubDate>
<dc:creator>chauhankiran</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.enlightenment.org/docs/c/start</dc:identifier>
</item>
<item>
<title>A 1970s Teenager&amp;#039;s Bedroom (1998)</title>
<link>http://www.rocketroberts.com/stereo/stereo.htm</link>
<guid isPermaLink="true" >http://www.rocketroberts.com/stereo/stereo.htm</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;A 1970's Teenager's Bedroom - Vintage Stereo Equipment&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#828282&quot; id=&quot;readabilityBody&quot; readability=&quot;41.857763578275&quot;&gt;
&lt;center&gt;Updated 22 May 2014&lt;/center&gt;
&lt;center&gt;&lt;/center&gt;

&lt;center&gt;

&lt;/center&gt;
&lt;hr /&gt;&lt;h2&gt;Introduction:&lt;/h2&gt;
&lt;p&gt;This page shows some of the evolution of my stereo system and involvement with electronics as a teenager in the mid 1970s. The earliest pictures I have are from 1976, however I started with stereo systems in the early 70s. The photos below are in chronological order.&lt;/p&gt;
&lt;h2&gt;Why this page?&lt;/h2&gt;
&lt;p&gt;At work and in related travels, I often get questioned as to how I got started in electronics. Basically I started playing with batteries and light bulbs at around age 7 (1967). From there things went somewhat slowly until around 1974 when I got into stereo systems. Rather than tell the detailed story many times over, I put together this page to illustrate how things got started for me.&lt;/p&gt;

&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_01.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;A shot of the corner of my bedroom with the stereo system from July 1976. A Harmon Kardon (Trio) tube amp is at the center of the system (this unit was 12 watts per channel). To the right of it is a Halicrafters short-wave radio. Above that is a Harmon Kardon (Rondo) mono tube tuner. The lower turntable is a modified GE phonograph. I got this phonograph in 1972 (had an old Grundig console before that but it died). When I got the Harmon Kardon amp, I had to find a way to wire the turntable to work with the amp (of course compact phono has no provisions for external connections). This was my first major (for the time) accomplishment, taking the phono and rewiring the cartridge output so that I could plug it into the amp. It worked! The other turntable (above the green GE) was a second one I obtained at a later time. The three items above the system are homemade &quot;star dials&quot;, these were motorized planispheres that showed what stars were up at any given time. Two speakers can be seen here, and 8&quot; two way and (below) a 12&quot; two way system. The lower system is homebuilt. Note the Pioneer SX-636 literature on the wall behind the equipment!&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_02.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;A photo of my newly upgraded speaker system. Previously it was a 12&quot; two way system with a horn tweeter originally built in the fall of 1974. Now (October 1976) it has been upgraded to a three way system including a midrange and dome tweeter. The speaker components (woofer and midrange) are Radio Shack brand, however Utah made these speakers for Radio Shack. This system is all homemade, basically made of 1 x 12 pine boards cut with a skillsaw (I did not have any fancy woodworking tools at the time). This system is still in use today, it is fine for low power (up to 30 watts or so) listening.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_03.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;Another view of the system corner, this image is from late 1976. A new woofer can be seen in the 8&quot; two way system. A fan has been installed under the shelf to keep the tube amp cool, it is powered by a train transformer mounted on the wall.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_04.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;January 1977. A new Pioneer PL-112D turntable has been added (it was my big Christmas present for 1976). Had to re-arrange a number of items to accommodate the new gear. With the new turntable, my 45 record collection suffered much less wear (even though I had modified the old GE phono to track a lot lighter). It also sounds a lot better! One old turntable is now retired.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_05.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;Another view from early 1977. Note the pile of 45 records on the desk. Also, the 8&quot; speaker system has a light installed (for special effects). The bulb was wired in series with the woofer, and it flashed in accordance with the volume of sound. Problem was, it blew out too often!&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;


&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_06.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;March 1977. An old Revere reel to reel recorder (salvaged from the town dump by my father) is now mounted on the wall. This unit was from 1957 and despite having no cabinet, worked quite well. It was only mono, but at 7 1/2 ips the sound was actually pretty good. I had this recorder up until around 1999 when I finally retired it permanently. 40+ years of service out of a piece of gear... most of the junk sold today would be lucky to last 1/3 that long. Things were built to last back then, this recorder was very well made and heavy. Also visible in this photo is a Realistic multitester. This item was very helpful in doing various measurements!&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_07.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;December 1976. A new 12&quot; 3-way system made from speakers salvaged from the East Longmeadow MA town dump. One person's trash is another persons treasure! Speaker cabinet was made out of particle board and painted.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_09.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;May 1977. A new Kenwood KA-3500 (40 watts/channel) amp has been added to the system as of 17 May 1977, a major upgrade from the old tube amp (both amps are still in service in 2008). I earned the money for this amp (price was $139.99 at Lechmere) by making a stone walkway. It was a LOT of work, had to locate and haul many large flat rocks to the area and set them in the ground. Probably moved about 5000 pounds of rocks to make this walkway, and it is still there today (as is the amp)! Also, a new shelf has been added to hold equipment that had to be rearranged. Also note that a Realistic SA-100C amplifier has been added. This amp was originally owned by my neighbor Paul Goewey, he later sold it to my brother and then I bought it after that. This amp was used for the Bugging System.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_08.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;June 1977. Another layer of shelving (basically pine boards) has been added to support the added equipment. Power Meters for the speakers have been added as well. Mounted on the front of the shelf (right below a small Radio Shack amplifier) are a number of switches... these controlled what was known as the &quot;bugging system&quot;. I had numerous (at peak about 12) speakers (which also functioned as microphones) wired all around the house and property. Using this system, I could monitor what was going on at remote locations, or send music to those same locations. This system was crude by today's standards, but overall it worked quite well considering what I had to work with. Note the power control switchbox on the wall above the Pioneer PL-112D turntable. This was used to control things like the fans that cool the amp, the bugging system, etc. Clock radios have also been rearranged somewhat due to the expanding system.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_10.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;1977 photo. Some of the speakers that were installed in various speaker systems I made. At top left is a Philips 12&quot; woofer with 40 oz magnet and 2&quot; voice coil (a fine woofer for its day). At top right is a Radio Shack 12&quot; triaxial speaker... actually, these were made by Utah and sold by Radio Shack under the Americana name. This speaker I got in summer of 1977 at a &quot;Where-is-As-is&quot; sale (does anyone remember those)? Unfortunately, they only had the one speaker, so I got it, hoping to locate another (I never did, but today on Ebay that are not uncommon). At the lower right is a 12&quot; Radio Shack speaker that we used to call the &quot;eight dollar woofer&quot;. It was a speaker with minimal capabilities, a 12&quot; speaker with a 1&quot; voice coil and a 5 Oz magnet, but it only cost $8! It was a great entry level speaker for those who could afford little but who wanted a &quot;big&quot; speaker sound. It was basically a Utah PA speaker. Finally, at lower left is a Radio Shack 12&quot; musical instrument speaker. This too was basically a Utah speaker sold under the Radio Shack name. In the middle is an Olsen 5&quot; speaker with 20 oz magnet. I used this as a midrange speaker for a while, however its sensitivity was way too much compared to the rest of the components so I changed it out for a Radio Shack dome midrange speaker in 1979.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_11.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;October 1977. The 8&quot; two way system has been modified once again (now has a new woofer). The woofer is a Radio Shack 8&quot; dual cone woofer. Like the 12&quot; Triaxial woofer above, this was purchased at a Radio Shack &quot;Where-is-As-is&quot; sale. This speaker system is still in use today.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_12.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;October 1977. The east wall of the bedroom, known as the &quot;concert wall&quot;. Most notable here is the addition of my newest speaker system, the &quot;Philips&quot;. This system used (naturally) a Philips 12&quot; woofer with 40 oz magnet and 2&quot; voice coil. This new system was much more powerful than any of the previous systems I had built. Above that is another 12&quot; system that was built over the summer (it used the Radio Shack [Utah] 12&quot; Triaxial speaker, however I disconnected the tweeter). Also seen are several speaker cabinets that use the Radio Shack &quot;eight dollar woofer&quot;. The main problem with all of these speakers was the lack of sufficient power to drive them all (all I had at the time was about 50 watts per channel, and collectively all these speakers could have handled about 250 watts!). Still, this array generated some fairly serious sound for a small bedroom! Above and to the right of these speakers can be seen part of my Estes rocket collection.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_13.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;A view looking under the shelf to show some of the mass of wiring that made up the &quot;bugging system&quot;. Note the microphone that was used to make announcements throughout the house and property. Also seen are dual cooling fans for the amp (not that the transistor amp got all that hot to begin with...). Literature for Pioneer stereo gear graces the walls behind the equipment.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_14.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;Another view of the wiring mass under the shelf. A patch panel can be seen to the right, this worked in a fashion similar to an old telephone switchboard. Note the fuses and large power resistor under the top shelf. This was used (incorrectly) at the time to help the amplifier drive 4 ohm speaker loads.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_15.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;Late 1977, a 40 channel Royce CB radio (and 12 VDC power supply) has been added to the system.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_16.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;A wider angle shot from late 1977/early 1978. To the left of the clock radio can be seen a box for the Audio Technica cartridge that was used on the Pioneer PL-112D.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_17.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;February 1978. The east wall of the room has been modified with another new speaker system. Some of the previous ones have been dismantled. A Tasco telescope can be seen at the far left of the photo.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_18.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;March 1978. A TEAC 2340 4 channel reel-to-reel recorder has been added. This unit was my father's; he hardly ever used it so I took it over after obtaining a new solenoid for it. This unit was a very luxurious item for a teen to have in the 1970's... new, these units went for around $1000 (a LOT of $$ back then)! The sound quality of the unit was very, very good, it will easily compete with the sound from a CD player. And, being a 4 track three head unit, it allowed for some fun editing and special effects. The only problem with having this unit is that when I did get a cassette deck I was so disappointed in the decrease in sound quality! People had talked about how great the modern cassette decks were... however, few (if any) could compete with a reel to reel machine of this caliber. A Nakamichi (big $$$$) could probably come close, but it simply cannot match or exceed the quality of sound these reel to reel machines put out! Also note the Pioneer fold out literature that is posted on the ceiling.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_19.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;My first FM antenna, March 1978. This antenna started the &quot;DXing&quot; era for myself and several friends who also subsequently got FM antennas. Below the 5 element beam is an omni directional FM antenna.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_20.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;May 1978. A new (used) Heathkit AJ-15 FM tuner has been added, this was a vast improvement over the old Harmon Kardon tube (mono) tuner I was using previously. I earned the $$ for this unit (bought it used from a high school classmate) by working for people in the neighborhood. This tuner, coupled with the FM beam, allowed for many, many FM stations to be received, it was a major step up from the old Harmon Kardon unit. Note the rotor for the antenna on the desk. Also, a Radio Shack color organ is now mounted next the TEAC recorder. Note the addition of the Radio Shack SA-10 amplifier (just above the Harmon Kardon tuner). This amp was to replace the other Radio Shack amp I was using for the bugging system. During the summer of 1977, a very violent thunderstorm hit the northeast US and knocked power out for all of New York city and much of the other southern New England states. This same storm took out the bugging system amp. A voltage surge (from wires I had strung about 500 feet to the back of the property) blew the output stage of the amp. I took the amp to Radio Shack but they wanted like $30 just to look at it (that is a LOT of $$ for a teen in 1977). So, this amp was out of service for a while, however I long ago repaired it myself (after learning more about electronics). It is in service to this day. The system corner is very full now!&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_21.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;December 1978. A new Technics SU-7300 amp has been added, this helped the power shortage for all the speakers. Also still in use is the old Harmon Kardon amp. Total system power now was just under 100 watts per channel with all amps combined. That does not sound like a lot of power by today's standards, but it was a significant amount to have as a kid in the 70's! Also added are SWR and power meters for the CB as well as a new amp for the bugging system.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_22.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;January 1979. This photo pretty much represents the peak of the development of my system in this bedroom. Sitting at the &quot;controls&quot; here gave the feeling of being in the control room of a submarine the way that I was surrounded by electronics. The setting was made especially cool with all the room lights off... the glow of many meters and indicators looked especially cool. Many long hours were spent fooling with the gear in this setup. I would stay up until late hours, talking to people on the CB while simultaneously listening to music and watching TV. People used to tell me &quot;you need to get out more&quot; until they saw this room... then they understood why I wanted to stay home and hang out! I have many fond memories of the time I spent in this room. Later in 1979 I moved to another new bedroom, and the system shown here was dismantled and moved. Although the system in the new bedroom was technically improved in terms of power, features and fidelity, it never had the same &quot;feel&quot; as the system in the corner of this room. It was the beginning of the end of an era.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_23.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;June 1979. A shot of a larger FM antenna used for DXing. I eventually had two of these antennas on the roof. We tried stacking them for even more gain, however this did not work out. Nonetheless, one of these antennas did quite a good job at pulling in stations.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_24.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;A view of the system in the new room (late 1979). Several new components have been added (a Kenwood KA-9100 amp, a TEAC A650 cassette deck, and a Nikko NT-850 tuner). I got my first job in the summer of 1979 (and one with pretty good pay) and this allowed me to purchase the Kenwood, the Nikko and the Teac. Not shown here, there are 12 &quot; woofers mounted in thin cabinets under the bed. These were driven by one of the amplifiers with the bass cranked all the way up, the result was a floor that vibrated quite a bit (fortunately this room was on the ground level and no one lived in the basement below!). With the Kenwood the total system power was up to 342 watts, this system ROCKED.&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;http://www.rocketroberts.com/stereo/images/system_25.jpg&quot; /&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;October 1980. A view of the south wall of the new room. The most notable addition here is the light show and a new set of speakers (also homemade). Total system power is now 342 watts. Still modest by today's standards, but it was quite substantial for 1980. In 1995 I had a system with 2,200 watts of power... THAT system can shake a concrete floor! Someday I'll add some photos of that gear (it includes 4 JBL 18&quot; subwoofers).&lt;/center&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;h2&gt;So....&lt;/h2&gt;
&lt;p&gt;That is the quick story of how I became involved in electronics!&lt;/p&gt;
&lt;hr width=&quot;75%&quot; /&gt;&lt;p&gt;&lt;br /&gt;&lt;a href=&quot;http://www.rocketroberts.com/mail.htm&quot;&gt;E-mail to Joe Roberts&lt;/a&gt;&lt;br /&gt;Images and HTML text © Copyright 1998 by Jo e Roberts. Please &lt;a href=&quot;http://www.rocketroberts.com/stereo/copyrt.htm&quot;&gt;request permission&lt;/a&gt; to use photos for purposes other than &quot;personal use&quot;.&lt;/p&gt;
&lt;hr width=&quot;50%&quot; /&gt;&lt;/body&gt;</description>
<pubDate>Fri, 04 May 2018 04:06:51 +0000</pubDate>
<dc:creator>smacktoward</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.rocketroberts.com/stereo/stereo.htm</dc:identifier>
</item>
<item>
<title>Yale physicists find signs of a time crystal</title>
<link>https://news.yale.edu/2018/05/02/yale-physicists-find-signs-time-crystal</link>
<guid isPermaLink="true" >https://news.yale.edu/2018/05/02/yale-physicists-find-signs-time-crystal</guid>
<description>&lt;p&gt;Yale physicists have uncovered hints of a time crystal — a form of matter that “ticks” when exposed to an electromagnetic pulse — in the last place they expected: a crystal you might find in a child’s toy.&lt;/p&gt;
&lt;p&gt;The discovery means there are now new puzzles to solve, in terms of how time crystals form in the first place.&lt;/p&gt;
&lt;p&gt;Ordinary crystals such as salt or quartz are examples of three-dimensional, ordered spatial crystals. Their atoms are arranged in a repeating system, something scientists have known for a century.&lt;/p&gt;
&lt;p&gt;Time crystals, first identified in 2016, are different. Their atoms spin periodically, first in one direction and then in another, as a pulsating force is used to flip them. That’s the “ticking.” In addition, the ticking in a time crystal is locked at a particular frequency, even when the pulse flips are imperfect.&lt;/p&gt;
&lt;p&gt;Scientists say that understanding time crystals may lead to improvements in atomic clocks, gyroscopes, and magnetometers, as well as aid in building potential quantum technologies. The U.S. Department of Defense recently announced a program to fund more research into time crystal systems.&lt;/p&gt;
&lt;p&gt;Yale’s new findings are described in &lt;a href=&quot;https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.120.180603&quot;&gt;a pair of studies, one in Physical Review Letters&lt;/a&gt; and &lt;a href=&quot;https://journals.aps.org/prb/abstract/10.1103/PhysRevB.97.184301&quot;&gt;the other in Physical Review B&lt;/a&gt;. The studies represent the second known experiment observing a telltale signature for a discrete time crystal (DTC) in a solid. Previous experiments led to a flurry of media attention in the past year.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;dquo&quot;&gt;“&lt;/span&gt;We decided to try searching for the DTC signature ourselves,” said &lt;a href=&quot;https://physics.yale.edu/people/sean-barrett&quot;&gt;Yale physics professor Sean Barrett, principal investigator for the two new studies&lt;/a&gt;. “My student Jared Rovny had grown monoammonium phosphate (MAP) crystals for a completely different experiment, so we happened to have one in our lab.”&lt;/p&gt;
&lt;figure class=&quot;caption-wrapper full-width&quot;&gt;&lt;img typeof=&quot;foaf:Image&quot; class=&quot;&quot; src=&quot;https://news.yale.edu/sites/default/files/styles/horizontal_image/public/group_2.jpg?itok=yMk3ImsJ&amp;amp;c=37a09ccd2c79a8aa0d309d8423c1e971&quot; width=&quot;766&quot; height=&quot;445&quot; alt=&quot;Yale researchers Jared Rovny, Robert Blum, and Sean Barrett.&quot;/&gt;&lt;figcaption class=&quot;caption&quot;&gt;Yale researchers Jared Rovny, left, Robert Blum, center, and Sean Barrett, right, made the discovery.&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;MAP crystals are considered so easy to grow that they are sometimes included in crystal growing kits aimed at youngsters. It would be unusual to find a time crystal signature inside a MAP crystal, Barrett explained, because time crystals were thought to form in crystals with more internal “disorder.”&lt;/p&gt;
&lt;p&gt;The researchers used nuclear magnetic resonance (NMR) to look for a DTC signature — and quickly found it. “Our crystal measurements looked quite striking right off the bat,” Barrett said. “Our work suggests that the signature of a DTC could be found, in principle, by looking in a children’s crystal growing kit.”&lt;/p&gt;
&lt;p&gt;Another unexpected thing happened, as well. “We realized that just finding the DTC signature didn’t necessarily prove that the system had a quantum memory of how it came to be,” said Yale graduate student Robert Blum, a co-author on the studies. “This spurred us to try a time crystal ‘echo,’ which revealed the hidden coherence, or quantum order, within the system,” added Rovny, also a Yale graduate student and lead author of the studies.&lt;/p&gt;
&lt;p&gt;Barrett noted that his team’s results, combined with previous experiments, “present a puzzle” for theorists trying to understand how time crystals form.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;dquo&quot;&gt;“&lt;/span&gt;It’s too early to tell what the resolution will be for the current theory of discrete time crystals, but people will be working on this question for at least the next few years,” Barrett said.&lt;/p&gt;
&lt;p&gt;The National Science Foundation supported the research.&lt;/p&gt;

</description>
<pubDate>Thu, 03 May 2018 22:14:33 +0000</pubDate>
<dc:creator>anigbrowl</dc:creator>
<og:image>https://news.yale.edu/sites/default/files/styles/opengraph_image/public/crystal.jpg?itok=SKezpq8h</og:image>
<og:type>article</og:type>
<og:title>Yale physicists find signs of a time crystal</og:title>
<og:url>https://news.yale.edu/2018/05/02/yale-physicists-find-signs-time-crystal</og:url>
<og:description>Time crystals — a form of matter that “ticks” when exposed to an electromagnetic pulse — may help to build better atomic clocks, gyroscopes, and quantum tech.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.yale.edu/2018/05/02/yale-physicists-find-signs-time-crystal</dc:identifier>
</item>
</channel>
</rss>