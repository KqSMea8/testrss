<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>How to run a program without an operating system?</title>
<link>https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545#32483545</link>
<guid isPermaLink="true" >https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545#32483545</guid>
<description>&lt;p&gt;&lt;strong&gt;Runnable examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Technically, a program that runs without an OS, is an OS. So let's see how to create and run some minuscule hello world OSes.&lt;/p&gt;
&lt;p&gt;The code of all examples below is present on &lt;a href=&quot;https://github.com/cirosantilli/x86-bare-metal-examples&quot; rel=&quot;noreferrer&quot;&gt;this GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boot sector&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On x86, the simplest and lowest level thing you can do is to create a &lt;a href=&quot;https://en.wikipedia.org/wiki/Master_boot_record&quot; rel=&quot;noreferrer&quot;&gt;Master Boot Sector (MBR)&lt;/a&gt;, which is a type of &lt;a href=&quot;https://en.wikipedia.org/wiki/Boot_sector&quot; rel=&quot;noreferrer&quot;&gt;boot sector&lt;/a&gt;, and then install it to a disk.&lt;/p&gt;
&lt;p&gt;Here we create one with a single &lt;code&gt;printf&lt;/code&gt; call:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;printf '\364%509s\125\252' &amp;gt; main.img
sudo apt-get install qemu-system-x86
qemu-system-x86_64 -hda main.img
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Outcome:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/CvZ7r.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/CvZ7r.png&quot; alt=&quot;enter image description here&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tested on Ubuntu 18.04, QEMU 2.11.1.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main.img&lt;/code&gt; contains the following:&lt;/p&gt;
&lt;ul readability=&quot;8&quot;&gt;&lt;li readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;code&gt;\364&lt;/code&gt; in octal == &lt;code&gt;0xf4&lt;/code&gt; in hex: the encoding for a &lt;code&gt;hlt&lt;/code&gt; instruction, which tells the CPU to stop working.&lt;/p&gt;
&lt;p&gt;Therefore our program will not do anything: only start and stop.&lt;/p&gt;
&lt;p&gt;We use octal because &lt;code&gt;\x&lt;/code&gt; hex numbers are not specified by POSIX.&lt;/p&gt;
&lt;p&gt;We could obtain this encoding easily with:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;echo hlt &amp;gt; a.asm
nasm -f bin a.asm
hd a
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but the &lt;code&gt;0xf4&lt;/code&gt; encoding is also documented on the Intel manual of course.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;%509s&lt;/code&gt; produce 509 spaces. Needed to fill in the file until byte 510.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;code&gt;\125\252&lt;/code&gt; in octal == &lt;code&gt;0x55&lt;/code&gt; followed by &lt;code&gt;0xaa&lt;/code&gt;: magic bytes required by the hardware. They must be bytes 511 and 512.&lt;/p&gt;
&lt;p&gt;If not present, the hardware will not treat this as a bootable disk.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that even without doing anything, a few characters are already printed on the screen. Those are printed by the firmware, and serve to identify the system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Run on real hardware&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Emulators are fun, but hardware is the real deal.&lt;/p&gt;
&lt;p&gt;Note however that this is dangerous, and you could wipe your disk by mistake: only do this on old machines that don't contain critical data! Or even better, devboards such as the Raspberry Pi, see the ARM example below.&lt;/p&gt;
&lt;p&gt;For a typical laptop, you have to do something like:&lt;/p&gt;
&lt;ul readability=&quot;6&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Burn the image to an USB stick (will destroy your data!):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo dd if=main.img of=/dev/sdX
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;plug the USB on a computer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;turn it on&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;tell it to boot from the USB.&lt;/p&gt;
&lt;p&gt;This means making the firmware pick USB before hard disk.&lt;/p&gt;
&lt;p&gt;If that is not the default behavior of your machine, keep hitting Enter, F12, ESC or other such weird keys after power-on until you get a boot menu where you can select to boot from the USB.&lt;/p&gt;
&lt;p&gt;It is often possible to configure the search order in those menus.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For example, on my old Lenovo Thinkpad T430, UEFI BIOS 1.16, I can see:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/WfLBl.jpg&quot; width=&quot;400&quot;/&gt;&lt;img src=&quot;https://i.stack.imgur.com/S9zBv.jpg&quot; width=&quot;400&quot;/&gt;&lt;img src=&quot;https://i.stack.imgur.com/8pIGP.jpg&quot; width=&quot;400&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hello world&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that we have made a minimal program, let's move to a hello world.&lt;/p&gt;
&lt;p&gt;The obvious question is: how to do IO? A few options:&lt;/p&gt;
&lt;ul readability=&quot;5.4917647058824&quot;&gt;&lt;li&gt;ask the firmware, e.g. BIOS or UEFI, to do if for us&lt;/li&gt;
&lt;li&gt;VGA: special memory region that gets printed to the screen if written to. Can be used on Protected mode.&lt;/li&gt;
&lt;li&gt;write a driver and talk directly to the display hardware. This is the &quot;proper&quot; way to do it: more powerful, but more complex.&lt;/li&gt;
&lt;li readability=&quot;7.6537396121884&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Serial_port&quot; rel=&quot;noreferrer&quot;&gt;serial port&lt;/a&gt;. This is a very simple standardized protocol that sends and retrieves characters from a host terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/2WLqc.jpg&quot; width=&quot;300&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/307390/what-is-the-difference-between-ttys0-ttyusb0-and-ttyama0-in-linux/367882#367882&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is unfortunately not exposed on most modern laptops, but is the common way to go for development boards, see the ARM examples below.&lt;/p&gt;
&lt;p&gt;This is really a shame, since such interfaces are really useful &lt;a href=&quot;https://askubuntu.com/questions/104771/where-are-kernel-panic-logs/932380#932380&quot;&gt;to debug the Linux kernel for example&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.7352941176471&quot;&gt;
&lt;p&gt;use debug features of chips. ARM calls theirs &lt;a href=&quot;https://developer.arm.com/docs/dui0471/k/what-is-semihosting/what-is-semihosting&quot; rel=&quot;noreferrer&quot;&gt;semihosting&lt;/a&gt; for example. On real hardware, it requires some extra hardware and software support, but on emulators it can be a free convenient option. &lt;a href=&quot;https://stackoverflow.com/questions/31990487/how-to-cleanly-exit-qemu-after-executing-bare-metal-program-without-user-interve/40957928#40957928&quot;&gt;Example&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here we will do a BIOS example as it is simpler on x86. But note that it is not the most robust method.&lt;/p&gt;
&lt;p&gt;main.S&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;.code16
    mov $msg, %si
    mov $0x0e, %ah
loop:
    lodsb
    or %al, %al
    jz halt
    int $0x10
    jmp loop
halt:
    hlt
msg:
    .asciz &quot;hello world&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;link.ld&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SECTIONS
{
    . = 0x7c00;
    .text :
    {
        __start = .;
        *(.text)
        . = 0x1FE;
        SHORT(0xAA55)
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Assemble and link with:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;gcc -c -g -o main.o main.S
ld --oformat binary -o main.img -T linker.ld main.o
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Outcome:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/auien.jpg&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/auien.jpg&quot; alt=&quot;enter image description here&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tested on: Lenovo Thinkpad T430, UEFI BIOS 1.16. Disk generated on an Ubuntu 18.04 host.&lt;/p&gt;
&lt;p&gt;Besides the standard userland assembly instructions, we have:&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;.code16&lt;/code&gt;: tells GAS to output 16-bit code&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;cli&lt;/code&gt;: disable software interrupts. Those could make the processor start running again after the &lt;code&gt;hlt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;int $0x10&lt;/code&gt;: does a BIOS call. This is what prints the characters one by one.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The important link flags are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;--oformat binary&lt;/code&gt;: output raw binary assembly code, don't warp it inside an ELF file as is the case for regular userland executables.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Use C instead of assembly&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since C compiles to assembly, using C without the standard library is pretty simple, you basically just need:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a linker script to put things in memory at the right place&lt;/li&gt;
&lt;li&gt;flags that tell GCC not to use the standard library&lt;/li&gt;
&lt;li&gt;a tiny assembly entry point that sets required C state for &lt;code&gt;main&lt;/code&gt;, notably:
&lt;ul&gt;&lt;li&gt;the stack&lt;/li&gt;
&lt;li&gt;zero out BSS&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;TODO: link so some x86 example on GitHub. &lt;a href=&quot;https://github.com/cirosantilli/linux-kernel-module-cheat/tree/54e15e04338c0fecc0be139a0da2d0d972c21419#baremetal-setup-getting-started&quot; rel=&quot;noreferrer&quot;&gt;Here is an ARM one I've created&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Things get more fun if you want to use the standard library however, since we don't have the Linux kernel, which implements much of the C standard library functionality &lt;a href=&quot;https://stackoverflow.com/questions/1780599/what-is-the-meaning-of-posix/31865755#31865755&quot;&gt;through POSIX&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A few possibilities, without going to a full-blown OS like Linux, include:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ARM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In ARM, the general ideas are the same. I have uploaded:&lt;/p&gt;
&lt;p&gt;For the Raspberry Pi, &lt;a href=&quot;https://github.com/dwelch67/raspberrypi&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/dwelch67/raspberrypi&lt;/a&gt; looks like the most popular tutorial available today.&lt;/p&gt;
&lt;p&gt;Some differences from x86 include:&lt;/p&gt;
&lt;ul readability=&quot;3.3145695364238&quot;&gt;&lt;li readability=&quot;1.7333333333333&quot;&gt;
&lt;p&gt;IO is done by writing to magic addresses directly, there is no &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; instructions.&lt;/p&gt;
&lt;p&gt;This is called &lt;a href=&quot;https://stackoverflow.com/questions/3890484/what-is-the-difference-between-memory-mapped-io-and-io-mapped-io&quot;&gt;memory mapped IO&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;for some real hardware, like the Raspberry Pi, you can add the firmware (BIOS) yourself to the disk image.&lt;/p&gt;
&lt;p&gt;That is a good thing, as it makes updating that firmware more transparent.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Firmware&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In truth, your boot sector is not the first software that runs on the system's CPU.&lt;/p&gt;
&lt;p&gt;What actually runs first is the so-called &lt;em&gt;firmware&lt;/em&gt;, which is a software:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;made by the hardware manufacturers&lt;/li&gt;
&lt;li&gt;typically closed source but likely C-based&lt;/li&gt;
&lt;li&gt;stored in read-only memory, and therefore harder / impossible to modify without the vendor's consent.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Well known firmwares include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/BIOS&quot; rel=&quot;noreferrer&quot;&gt;BIOS&lt;/a&gt;: old all-present x86 firmware. SeaBIOS is the default open source implementation used by QEMU.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.osdev.org/UEFI&quot; rel=&quot;noreferrer&quot;&gt;UEFI&lt;/a&gt;: BIOS successor, better standardized, but more capable, and incredibly bloated.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Coreboot&quot; rel=&quot;noreferrer&quot;&gt;Coreboot&lt;/a&gt;: the noble cross arch open source attempt&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The firmware does things like:&lt;/p&gt;
&lt;ul readability=&quot;6&quot;&gt;&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;loop over each hard disk, USB, network, etc. until you find something bootable.&lt;/p&gt;
&lt;p&gt;When we run QEMU, &lt;code&gt;-hda&lt;/code&gt; says that &lt;code&gt;main.img&lt;/code&gt; is a hard disk connected to the hardware, and&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hda&lt;/code&gt; is the first one to be tried, and it is used.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;load the first 512 bytes to RAM memory address &lt;code&gt;0x7c00&lt;/code&gt;, put the CPU's RIP there, and let it run&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;show things like the boot menu or BIOS print calls on the display&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Firmware offers OS-like functionality on which most OS-es depend. E.g. a Python subset has been ported to run on BIOS / UEFI: &lt;a href=&quot;https://www.youtube.com/watch?v=bYQ_lq5dcvM&quot; rel=&quot;noreferrer&quot;&gt;https://www.youtube.com/watch?v=bYQ_lq5dcvM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It can be argued that firmwares are indistinguishable from OSes, and that firmware is the only &quot;true&quot; bare metal programming one can do.&lt;/p&gt;
&lt;p&gt;As this &lt;a href=&quot;https://lennartb.home.xs4all.nl/coreboot/col3.html&quot; rel=&quot;noreferrer&quot;&gt;CoreOS dev puts it&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;22&quot;&gt;
&lt;p&gt;The hard part&lt;/p&gt;
&lt;p&gt;When you power up a PC, the chips that make up the chipset (northbridge, southbridge and SuperIO) are not yet initialized properly. Even though the BIOS ROM is as far removed from the CPU as it could be, this is accessible by the CPU, because it has to be, otherwise the CPU would have no instructions to execute. This does not mean that BIOS ROM is completely mapped, usually not. But just enough is mapped to get the boot process going. Any other devices, just forget it.&lt;/p&gt;
&lt;p&gt;When you run Coreboot under QEMU, you can experiment with the higher layers of Coreboot and with payloads, but QEMU offers little opportunity to experiment with the low level startup code. For one thing, RAM just works right from the start.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Post BIOS initial state&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Like many things in hardware, standardization is weak, and one of the things you should &lt;em&gt;not&lt;/em&gt; rely on is the initial state of registers when your code starts running after BIOS.&lt;/p&gt;
&lt;p&gt;So do yourself a favor and use some initialization code like the following: &lt;a href=&quot;https://stackoverflow.com/a/32509555/895245&quot;&gt;https://stackoverflow.com/a/32509555/895245&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Registers like &lt;code&gt;%ds&lt;/code&gt; and &lt;code&gt;%es&lt;/code&gt; have important side effects, so you should zero them out even if you are not using them explicitly.&lt;/p&gt;
&lt;p&gt;Note that some emulators are nicer than real hardware and give you a nice initial state. Then when you go run on real hardware, everything breaks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GNU GRUB Multiboot&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Boot sectors are simple, but they are not very convenient:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;you can only have one OS per disk&lt;/li&gt;
&lt;li&gt;the load code has to be really small and fit into 512 bytes. This could be solved with the &lt;a href=&quot;https://github.com/cirosantilli/x86-bare-metal-examples/blob/893fdba02c795917c40de17d77220db0115f23fa/bios_disk_load.S&quot; rel=&quot;noreferrer&quot;&gt;int 0x13 BIOS call&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;you have to do a lot of startup yourself, like moving into protected mode&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It is for those reasons that &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_GRUB&quot; rel=&quot;noreferrer&quot;&gt;GNU GRUB&lt;/a&gt; created a more convenient file format called multiboot.&lt;/p&gt;
&lt;p&gt;Minimal working example: &lt;a href=&quot;https://github.com/cirosantilli/x86-bare-metal-examples/tree/d217b180be4220a0b4a453f31275d38e697a99e0/multiboot/hello-world&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/cirosantilli/x86-bare-metal-examples/tree/d217b180be4220a0b4a453f31275d38e697a99e0/multiboot/hello-world&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also use it on my &lt;a href=&quot;https://github.com/cirosantilli/x86-bare-metal-examples/tree/a2ca298afe704b0b9e94cd39edb924094034cc54#getting-started-with-the-big-image&quot; rel=&quot;noreferrer&quot;&gt;GitHub examples repo&lt;/a&gt; to be able to easily run all examples on real hardware without burning the USB a million times. On QEMU it looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/zWfWl.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/zWfWl.png&quot; alt=&quot;enter image description here&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you prepare your OS as a multiboot file, GRUB is then able to find it inside a regular filesystem.&lt;/p&gt;
&lt;p&gt;This is what most distros do, putting OS images under &lt;code&gt;/boot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Multiboot files are basically an ELF file with a special header. They are specified by GRUB at: &lt;a href=&quot;https://www.gnu.org/software/grub/manual/multiboot/multiboot.html&quot; rel=&quot;noreferrer&quot;&gt;https://www.gnu.org/software/grub/manual/multiboot/multiboot.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can turn a multiboot file into a bootable disk with &lt;code&gt;grub-mkrescue&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;El Torito&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Format that can be burnt to CDs: &lt;a href=&quot;https://en.wikipedia.org/wiki/El_Torito_%28CD-ROM_standard%29&quot; rel=&quot;noreferrer&quot;&gt;https://en.wikipedia.org/wiki/El_Torito_%28CD-ROM_standard%29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is also possible to produce a hybrid image that works on either ISO or USB. This is can be done with &lt;code&gt;grub-mkrescue&lt;/code&gt; (&lt;a href=&quot;https://github.com/cirosantilli/x86-bare-metal-examples/blob/d217b180be4220a0b4a453f31275d38e697a99e0/multiboot/hello-world/Makefile#L6&quot; rel=&quot;noreferrer&quot;&gt;example&lt;/a&gt;), and is also done by the Linux kernel on &lt;code&gt;make isoimage&lt;/code&gt; using &lt;code&gt;isohybrid&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 26 Nov 2018 05:50:23 +0000</pubDate>
<dc:creator>Cieplak</dc:creator>
<og:type>website</og:type>
<og:url>https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545</og:url>
<og:image>https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded</og:image>
<og:title>How to run a program without an operating system?</og:title>
<og:description>How do you run a program all by itself without an operating system running? Can you create assembly programs that the computer can load and run at startup, e.g. boot the computer from a flash drive...</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545</dc:identifier>
</item>
<item>
<title>First gene-edited babies claimed in China</title>
<link>http://mainichi.jp/english/articles/20181126/p2g/00m/0fe/047000c</link>
<guid isPermaLink="true" >http://mainichi.jp/english/articles/20181126/p2g/00m/0fe/047000c</guid>
<description>&lt;div class=&quot;img-left&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;img&quot;&gt;&lt;a data-href=&quot;https://cdn.mainichi.jp/vol1/2018/11/26/20181126p2g00m0in050000p/9.jpg?1&quot; data-lightbox=&quot;photos&quot; data-title=&quot;In this Oct. 9, 2018 photo, an embryo receives a small dose of Cas9 protein and PCSK9 sgRNA in a sperm injection microscope in a laboratory in Shenzhen in southern China's Guangdong province. (AP Photo/Mark Schiefelbein)&quot;&gt;&lt;span class=&quot;wrap&quot;&gt;&lt;img src=&quot;https://cdn.mainichi.jp/vol1/2018/11/26/20181126p2g00m0in050000p/6.jpg?1&quot; alt=&quot;&quot; class=&quot;horizontal-photo&quot;/&gt;&lt;/span&gt;&lt;/a&gt;


&lt;/div&gt;
In this Oct. 9, 2018 photo, an embryo receives a small dose of Cas9 protein and PCSK9 sgRNA in a sperm injection microscope in a laboratory in Shenzhen in southern China's Guangdong province. (AP Photo/Mark Schiefelbein)&lt;/div&gt;
&lt;p class=&quot;txt&quot;&gt;HONG KONG (AP) -- A Chinese researcher claims that he helped make the world's first genetically edited babies -- twin girls whose DNA he said he altered with a powerful new tool capable of rewriting the very blueprint of life.&lt;/p&gt;

&lt;p class=&quot;txt&quot;&gt;If true, it would be a profound leap of science and ethics.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;A U.S. scientist said he took part in the work in China, but this kind of gene editing is banned in the United States because the DNA changes can pass to future generations and it risks harming other genes.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Many mainstream scientists think it's too unsafe to try, and some denounced the Chinese report as human experimentation.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The researcher, He Jiankui of Shenzhen, said he altered embryos for seven couples during fertility treatments, with one pregnancy resulting thus far. He said his goal was not to cure or prevent an inherited disease, but to try to bestow a trait that few people naturally have -- an ability to resist possible future infection with HIV, the AIDS virus.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;He said the parents involved declined to be identified or interviewed, and he would not say where they live or where the work was done.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;There is no independent confirmation of He's claim, and it has not been published in a journal, where it would be vetted by other experts. He revealed it Monday in Hong Kong to one of the organizers of an international conference on gene editing that is set to begin Tuesday, and earlier in exclusive interviews with The Associated Press.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;I feel a strong responsibility that it's not just to make a first, but also make it an example,&quot; He told the AP. &quot;Society will decide what to do next&quot; in terms of allowing or forbidding such science.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Some scientists were astounded to hear of the claim and strongly condemned it.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;It's &quot;unconscionable ... an experiment on human beings that is not morally or ethically defensible,&quot; said Dr. Kiran Musunuru, a University of Pennsylvania gene editing expert and editor of a genetics journal.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;This is far too premature,&quot; said Dr. Eric Topol, who heads the Scripps Research Translational Institute in California. &quot;We're dealing with the operating instructions of a human being. It's a big deal.&quot;&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;However, one famed geneticist, Harvard University's George Church, defended attempting gene editing for HIV, which he called &quot;a major and growing public health threat.&quot;&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;I think this is justifiable,&quot; Church said of that goal.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;In recent years scientists have discovered a relatively easy way to edit genes, the strands of DNA that govern the body. The tool, called CRISPR-cas9, makes it possible to operate on DNA to supply a needed gene or disable one that's causing problems.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;It's only recently been tried in adults to treat deadly diseases, and the changes are confined to that person. Editing sperm, eggs or embryos is different -- the changes can be inherited. In the U.S., it's not allowed except for lab research. China outlaws human cloning but not specifically gene editing.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;He Jiankui (HEH JEE'-an-qway), who goes by &quot;JK,&quot; studied at Rice and Stanford universities in the U.S. before returning to his homeland to open a lab at Southern University of Science and Technology of China in Shenzhen, where he also has two genetics companies.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The U.S. scientist who worked with him on this project after He returned to China was physics and bioengineering professor Michael Deem, who was his adviser at Rice in Houston. Deem also holds what he called &quot;a small stake&quot; in -- and is on the scientific advisory boards of -- He's two companies.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The Chinese researcher said he practiced editing mice, monkey and human embryos in the lab for several years and has applied for patents on his methods.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;He said he chose to try embryo gene editing for HIV because these infections are a big problem in China. He sought to disable a gene called CCR5 that forms a protein doorway that allows HIV, the virus that causes AIDS, to enter a cell.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;All of the men in the project had HIV and all of the women did not, but the gene editing was not aimed at preventing the small risk of transmission, He said. The fathers had their infections deeply suppressed by standard HIV medicines and there are simple ways to keep them from infecting offspring that do not involve altering genes.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Instead, the appeal was to offer couples affected by HIV a chance to have a child that might be protected from a similar fate.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;He recruited couples through a Beijing-based AIDS advocacy group called Baihualin. Its leader, known by the pseudonym &quot;Bai Hua,&quot; told the AP that it's not uncommon for people with HIV to lose jobs or have trouble getting medical care if their infections are revealed.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Here is how He described the work:&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The gene editing occurred during IVF, or lab dish fertilization. First, sperm was &quot;washed&quot; to separate it from semen, the fluid where HIV can lurk. A single sperm was placed into a single egg to create an embryo. Then the gene editing tool was added.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;When the embryos were 3 to 5 days old, a few cells were removed and checked for editing. Couples could choose whether to use edited or unedited embryos for pregnancy attempts. In all, 16 of 22 embryos were edited, and 11 embryos were used in six implant attempts before the twin pregnancy was achieved, He said.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Tests suggest that one twin had both copies of the intended gene altered and the other twin had just one altered, with no evidence of harm to other genes, He said. People with one copy of the gene can still get HIV, although some very limited research suggests their health might decline more slowly once they do.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Several scientists reviewed materials that He provided to the AP and said tests so far are insufficient to say the editing worked or to rule out harm.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;They also noted evidence that the editing was incomplete and that at least one twin appears to be a patchwork of cells with various changes.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;It's almost like not editing at all&quot; if only some of certain cells were altered, because HIV infection can still occur, Church said.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Church and Musunuru questioned the decision to allow one of the embryos to be used in a pregnancy attempt, because the Chinese researchers said they knew in advance that both copies of the intended gene had not been altered.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;In that child, there really was almost nothing to be gained in terms of protection against HIV and yet you're exposing that child to all the unknown safety risks,&quot; Musunuru said.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The use of that embryo suggests that the researchers' &quot;main emphasis was on testing editing rather than avoiding this disease,&quot; Church said.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Even if editing worked perfectly, people without normal CCR5 genes face higher risks of getting certain other viruses, such as West Nile, and of dying from the flu. Since there are many ways to prevent HIV infection and it's very treatable if it occurs, those other medical risks are a concern, Musunuru said.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;There also are questions about the way He said he proceeded. He gave official notice of his work long after he said he started it -- on Nov. 8, on a Chinese registry of clinical trials.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;It's unclear whether participants fully understood the purpose and potential risks and benefits. For example, consent forms called the project an &quot;AIDS vaccine development&quot; program.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The Rice scientist, Deem, said he was present in China when potential participants gave their consent and that he &quot;absolutely&quot; thinks they were able to understand the risks.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Deem said he worked with He on vaccine research at Rice and considers the gene editing similar to a vaccine.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;That might be a layman's way of describing it,&quot; he said.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Both men are physics experts with no experience running human clinical trials.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The Chinese scientist, He, said he personally made the goals clear and told participants that embryo gene editing has never been tried before and carries risks. He said he also would provide insurance coverage for any children conceived through the project and plans medical followup until the children are 18 and longer if they agree once they're adults.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Further pregnancy attempts are on hold until the safety of this one is analyzed and experts in the field weigh in, but participants were not told in advance that they might not have a chance to try what they signed up for once a &quot;first&quot; was achieved, He acknowledged. Free fertility treatment was part of the deal they were offered.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;He sought and received approval for his project from Shenzhen Harmonicare Women's and Children's Hospital, which is not one of the four hospitals that He said provided embryos for his research or the pregnancy attempts.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Some staff at some of the other hospitals were kept in the dark about the nature of the research, which He and Deem said was done to keep some participants' HIV infection from being disclosed.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;We think this is ethical,&quot; said Lin Zhitong, a Harmonicare administrator who heads the ethics panel.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;Any medical staff who handled samples that might contain HIV were aware, He said. An embryologist in He's lab, Qin Jinzhou, confirmed to the AP that he did sperm washing and injected the gene editing tool in some of the pregnancy attempts.&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;The study participants are not ethicists, He said, but &quot;are as much authorities on what is correct and what is wrong because it's their life on the line.&quot;&lt;/p&gt;
&lt;p class=&quot;txt&quot;&gt;&quot;I believe this is going to help the families and their children,&quot; He said. If it causes unwanted side effects or harm, &quot;I would feel the same pain as they do and it's going to be my own responsibility.&quot;&lt;/p&gt;

</description>
<pubDate>Mon, 26 Nov 2018 03:48:38 +0000</pubDate>
<dc:creator>sjreese</dc:creator>
<og:title>First gene-edited babies claimed in China - The Mainichi</og:title>
<og:type>article</og:type>
<og:url>https://mainichi.jp/english/articles/20181126/p2g/00m/0fe/047000c</og:url>
<og:description>HONG KONG (AP) -- A Chinese researcher claims that he helped make the world's first genetically edited babies -- twin girls whose DNA he said he alter</og:description>
<og:image>https://cdn.mainichi.jp/vol1/2018/11/26/20181126p2g00m0in049000p/0c8.jpg?2</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://mainichi.jp/english/articles/20181126/p2g/00m/0fe/047000c</dc:identifier>
</item>
<item>
<title>Zstandard – Fast real-time compression algorithm</title>
<link>https://github.com/facebook/zstd</link>
<guid isPermaLink="true" >https://github.com/facebook/zstd</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png&quot; alt=&quot;Zstandard&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zstandard&lt;/strong&gt;, or &lt;code&gt;zstd&lt;/code&gt; as short version, is a fast lossless compression algorithm, targeting real-time compression scenarios at zlib-level and better compression ratios. It's backed by a very fast entropy stage, provided by &lt;a href=&quot;https://github.com/Cyan4973/FiniteStateEntropy&quot;&gt;Huff0 and FSE library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project is provided as an open-source dual &lt;a href=&quot;https://github.com/facebook/zstd/blob/dev/LICENSE&quot;&gt;BSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/facebook/zstd/blob/dev/COPYING&quot;&gt;GPLv2&lt;/a&gt; licensed &lt;strong&gt;C&lt;/strong&gt; library, and a command line utility producing and decoding &lt;code&gt;.zst&lt;/code&gt;, &lt;code&gt;.gz&lt;/code&gt;, &lt;code&gt;.xz&lt;/code&gt; and &lt;code&gt;.lz4&lt;/code&gt; files. Should your project require another programming language, a list of known ports and bindings is provided on &lt;a href=&quot;http://www.zstd.net/#other-languages&quot; rel=&quot;nofollow&quot;&gt;Zstandard homepage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Development branch status : &lt;a href=&quot;https://travis-ci.org/facebook/zstd&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9b5d141da23951adb465b2975ee9550048c703b9/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576&quot; alt=&quot;Build Status&quot; title=&quot;Continuous Integration test suite&quot; data-canonical-src=&quot;https://travis-ci.org/facebook/zstd.svg?branch=dev&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/YannCollet/zstd-p0yf0&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/24c1b80141c393a1de83716b92268d9dabc02d69/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f78743338776264786a6b356d7262656d2f6272616e63682f6465763f7376673d74727565&quot; alt=&quot;Build status&quot; title=&quot;Windows test suite&quot; data-canonical-src=&quot;https://ci.appveyor.com/api/projects/status/xt38wbdxjk5mrbem/branch/dev?svg=true&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/zstd&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/17a2aa1bae71dd23de1e50ce454a985b26f08910/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f7a7374642f747265652f6465762e7376673f7374796c653d736869656c64&quot; alt=&quot;Build status&quot; title=&quot;Short test suite&quot; data-canonical-src=&quot;https://circleci.com/gh/facebook/zstd/tree/dev.svg?style=shield&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Benchmarks&lt;/h3&gt;
&lt;p&gt;For reference, several fast compression algorithms were tested and compared on a server running Linux Debian (&lt;code&gt;Linux version 4.14.0-3-amd64&lt;/code&gt;), with a Core i7-6700K CPU @ 4.0GHz, using &lt;a href=&quot;https://github.com/inikep/lzbench&quot;&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep compiled with &lt;a href=&quot;https://gcc.gnu.org/&quot; rel=&quot;nofollow&quot;&gt;gcc&lt;/a&gt; 7.3.0, on the &lt;a href=&quot;http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia&quot; rel=&quot;nofollow&quot;&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Compressor name&lt;/th&gt;
&lt;th&gt;Ratio&lt;/th&gt;
&lt;th&gt;Compression&lt;/th&gt;
&lt;th&gt;Decompress.&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;zstd 1.3.4 -1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.877&lt;/td&gt;
&lt;td&gt;470 MB/s&lt;/td&gt;
&lt;td&gt;1380 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;zlib 1.2.11 -1&lt;/td&gt;
&lt;td&gt;2.743&lt;/td&gt;
&lt;td&gt;110 MB/s&lt;/td&gt;
&lt;td&gt;400 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;brotli 1.0.2 -0&lt;/td&gt;
&lt;td&gt;2.701&lt;/td&gt;
&lt;td&gt;410 MB/s&lt;/td&gt;
&lt;td&gt;430 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;quicklz 1.5.0 -1&lt;/td&gt;
&lt;td&gt;2.238&lt;/td&gt;
&lt;td&gt;550 MB/s&lt;/td&gt;
&lt;td&gt;710 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lzo1x 2.09 -1&lt;/td&gt;
&lt;td&gt;2.108&lt;/td&gt;
&lt;td&gt;650 MB/s&lt;/td&gt;
&lt;td&gt;830 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lz4 1.8.1&lt;/td&gt;
&lt;td&gt;2.101&lt;/td&gt;
&lt;td&gt;750 MB/s&lt;/td&gt;
&lt;td&gt;3700 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;snappy 1.1.4&lt;/td&gt;
&lt;td&gt;2.091&lt;/td&gt;
&lt;td&gt;530 MB/s&lt;/td&gt;
&lt;td&gt;1800 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lzf 3.6 -1&lt;/td&gt;
&lt;td&gt;2.077&lt;/td&gt;
&lt;td&gt;400 MB/s&lt;/td&gt;
&lt;td&gt;860 MB/s&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Zstd can also offer stronger compression ratios at the cost of compression speed. Speed vs Compression trade-off is configurable by small increments. Decompression speed is preserved and remains roughly the same at all settings, a property shared by most LZ compression algorithms, such as &lt;a href=&quot;http://www.zlib.net/&quot; rel=&quot;nofollow&quot;&gt;zlib&lt;/a&gt; or lzma.&lt;/p&gt;
&lt;p&gt;The following tests were run on a server running Linux Debian (&lt;code&gt;Linux version 4.14.0-3-amd64&lt;/code&gt;) with a Core i7-6700K CPU @ 4.0GHz, using &lt;a href=&quot;https://github.com/inikep/lzbench&quot;&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep compiled with &lt;a href=&quot;https://gcc.gnu.org/&quot; rel=&quot;nofollow&quot;&gt;gcc&lt;/a&gt; 7.3.0, on the &lt;a href=&quot;http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia&quot; rel=&quot;nofollow&quot;&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Compression Speed vs Ratio&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebook/zstd/blob/dev/doc/images/CSpeed2.png&quot;&gt;&lt;img src=&quot;https://github.com/facebook/zstd/raw/dev/doc/images/CSpeed2.png&quot; alt=&quot;Compression Speed vs Ratio&quot; title=&quot;Compression Speed vs Ratio&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebook/zstd/blob/dev/doc/images/DSpeed3.png&quot;&gt;&lt;img src=&quot;https://github.com/facebook/zstd/raw/dev/doc/images/DSpeed3.png&quot; alt=&quot;Decompression Speed&quot; title=&quot;Decompression Speed&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;A few other algorithms can produce higher compression ratios at slower speeds, falling outside of the graph. For a larger picture including slow modes, &lt;a href=&quot;https://github.com/facebook/zstd/blob/dev/doc/images/DCspeed5.png&quot;&gt;click on this link&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;The case for Small Data compression&lt;/h3&gt;
&lt;p&gt;Previous charts provide results applicable to typical file and stream scenarios (several MB). Small data comes with different perspectives.&lt;/p&gt;
&lt;p&gt;The smaller the amount of data to compress, the more difficult it is to compress. This problem is common to all compression algorithms, and reason is, compression algorithms learn from past data how to compress future data. But at the beginning of a new data set, there is no &quot;past&quot; to build upon.&lt;/p&gt;
&lt;p&gt;To solve this situation, Zstd offers a &lt;strong&gt;training mode&lt;/strong&gt;, which can be used to tune the algorithm for a selected type of data. Training Zstandard is achieved by providing it with a few samples (one file per sample). The result of this training is stored in a file called &quot;dictionary&quot;, which must be loaded before compression and decompression. Using this dictionary, the compression ratio achievable on small data improves dramatically.&lt;/p&gt;
&lt;p&gt;The following example uses the &lt;code&gt;github-users&lt;/code&gt; &lt;a href=&quot;https://github.com/facebook/zstd/releases/tag/v1.1.3&quot;&gt;sample set&lt;/a&gt;, created from &lt;a href=&quot;https://developer.github.com/v3/users/#get-all-users&quot;&gt;github public API&lt;/a&gt;. It consists of roughly 10K records weighing about 1KB each.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Compression Ratio&lt;/th&gt;
&lt;th&gt;Compression Speed&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebook/zstd/blob/dev/doc/images/dict-cr.png&quot;&gt;&lt;img src=&quot;https://github.com/facebook/zstd/raw/dev/doc/images/dict-cr.png&quot; alt=&quot;Compression Ratio&quot; title=&quot;Compression Ratio&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebook/zstd/blob/dev/doc/images/dict-cs.png&quot;&gt;&lt;img src=&quot;https://github.com/facebook/zstd/raw/dev/doc/images/dict-cs.png&quot; alt=&quot;Compression Speed&quot; title=&quot;Compression Speed&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/facebook/zstd/blob/dev/doc/images/dict-ds.png&quot;&gt;&lt;img src=&quot;https://github.com/facebook/zstd/raw/dev/doc/images/dict-ds.png&quot; alt=&quot;Decompression Speed&quot; title=&quot;Decompression Speed&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;These compression gains are achieved while simultaneously providing &lt;em&gt;faster&lt;/em&gt; compression and decompression speeds.&lt;/p&gt;
&lt;p&gt;Training works if there is some correlation in a family of small data samples. The more data-specific a dictionary is, the more efficient it is (there is no &lt;em&gt;universal dictionary&lt;/em&gt;). Hence, deploying one dictionary per type of data will provide the greatest benefits. Dictionary gains are mostly effective in the first few KB. Then, the compression algorithm will gradually use previously decoded content to better compress the rest of the file.&lt;/p&gt;
&lt;h4&gt;Dictionary compression How To:&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;Create the dictionary&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;code&gt;zstd --train FullPathToTrainingSet/* -o dictionaryName&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;&lt;li&gt;Compress with dictionary&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;code&gt;zstd -D dictionaryName FILE&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;&lt;li&gt;Decompress with dictionary&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;code&gt;zstd -D dictionaryName --decompress FILE.zst&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Build instructions&lt;/h3&gt;
&lt;h4&gt;Makefile&lt;/h4&gt;
&lt;p&gt;If your system is compatible with standard &lt;code&gt;make&lt;/code&gt; (or &lt;code&gt;gmake&lt;/code&gt;), invoking &lt;code&gt;make&lt;/code&gt; in root directory will generate &lt;code&gt;zstd&lt;/code&gt; cli in root directory.&lt;/p&gt;
&lt;p&gt;Other available options include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;make install&lt;/code&gt; : create and install zstd cli, library and man pages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make check&lt;/code&gt; : create and run &lt;code&gt;zstd&lt;/code&gt;, tests its behavior on local platform&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;cmake&lt;/h4&gt;
&lt;p&gt;A &lt;code&gt;cmake&lt;/code&gt; project generator is provided within &lt;code&gt;build/cmake&lt;/code&gt;. It can generate Makefiles or other build scripts to create &lt;code&gt;zstd&lt;/code&gt; binary, and &lt;code&gt;libzstd&lt;/code&gt; dynamic and static libraries.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; is set to &lt;code&gt;Release&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Meson&lt;/h4&gt;
&lt;p&gt;A Meson project is provided within &lt;code&gt;contrib/meson&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Visual Studio (Windows)&lt;/h4&gt;
&lt;p&gt;Going into &lt;code&gt;build&lt;/code&gt; directory, you will find additional possibilities:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Projects for Visual Studio 2005, 2008 and 2010.
&lt;ul&gt;&lt;li&gt;VS2010 project is compatible with VS2012, VS2013, VS2015 and VS2017.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Automated build scripts for Visual compiler by &lt;a href=&quot;https://github.com/KrzysFR&quot;&gt;@KrzysFR&lt;/a&gt;, in &lt;code&gt;build/VS_scripts&lt;/code&gt;, which will build &lt;code&gt;zstd&lt;/code&gt; cli and &lt;code&gt;libzstd&lt;/code&gt; library without any need to open Visual Studio solution.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Status&lt;/h3&gt;
&lt;p&gt;Zstandard is currently deployed within Facebook. It is used continuously to compress large amounts of data in multiple formats and use cases. Zstandard is considered safe for production environments.&lt;/p&gt;
&lt;h3&gt;License&lt;/h3&gt;
&lt;p&gt;Zstandard is dual-licensed under &lt;a href=&quot;https://github.com/facebook/zstd/blob/dev/LICENSE&quot;&gt;BSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/facebook/zstd/blob/dev/COPYING&quot;&gt;GPLv2&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Contributing&lt;/h3&gt;
&lt;p&gt;The &quot;dev&quot; branch is the one where all contributions are merged before reaching &quot;master&quot;. If you plan to propose a patch, please commit into the &quot;dev&quot; branch, or its own feature branch. Direct commit to &quot;master&quot; are not permitted. For more information, please read &lt;a href=&quot;https://github.com/facebook/zstd/blob/dev/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 26 Nov 2018 02:41:46 +0000</pubDate>
<dc:creator>pierreneter</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/69631?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>facebook/zstd</og:title>
<og:url>https://github.com/facebook/zstd</og:url>
<og:description>Zstandard - Fast real-time compression algorithm. Contribute to facebook/zstd development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/facebook/zstd</dc:identifier>
</item>
<item>
<title>Compiler basics: Lisp to Assembly</title>
<link>http://notes.eatonphil.com/compiler-basics-lisp-to-assembly.html</link>
<guid isPermaLink="true" >http://notes.eatonphil.com/compiler-basics-lisp-to-assembly.html</guid>
<description>&lt;p&gt;In this post we'll write a simple compiler in Javascript (on Node) without any third-party libraries. Our goal is to take an input program like &lt;code&gt;(+ 1 (+ 2 3))&lt;/code&gt; and produce an output assembly program that does these operations to produce &lt;code&gt;6&lt;/code&gt; as the exit code. The resulting compiler can be found &lt;a href=&quot;https://github.com/eatonphil/ulisp&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We'll cover:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parsing&lt;/li&gt;
&lt;li&gt;Code generation&lt;/li&gt;
&lt;li&gt;Assembly basics&lt;/li&gt;
&lt;li&gt;Syscalls&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And for now we'll omit:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Programmable function definitions&lt;/li&gt;
&lt;li&gt;Non-symbol/-numeric data types&lt;/li&gt;
&lt;li&gt;More than 3 function arguments&lt;/li&gt;
&lt;li&gt;Lots of safety&lt;/li&gt;
&lt;li&gt;Lots of error messsages&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;parsing&quot;&gt;Parsing&lt;/h3&gt;
&lt;p&gt;We pick the &lt;a href=&quot;https://en.wikipedia.org/wiki/S-expression&quot;&gt;S-expression&lt;/a&gt; syntax mentioned earlier because it's very easy to parse. Furthermore, our input language is so limited that we won't even break our parser into separate lexing/parsing stages.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;Once you need to support string literals, comments, decimal literals, and other more complex literals it becomes easier to use separate stages.&lt;/p&gt;&lt;p&gt;If you're curious about these separate stages of parsing, you may be interested in my post on &lt;a href=&quot;http://notes.eatonphil.com/writing-a-simple-json-parser.html&quot;&gt;writing a JSON parser&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Or, check out my BSDScheme project for a fully-featured &lt;a href=&quot;https://github.com/eatonphil/bsdscheme/blob/master/src/lex.d&quot;&gt;lexer&lt;/a&gt; and &lt;a href=&quot;https://github.com/eatonphil/bsdscheme/blob/master/src/parse.d&quot;&gt;parser&lt;/a&gt; for Scheme.&lt;/p&gt;
&lt;p&gt;The parser should produce an Abstract Syntax Tree (AST), a data structure representing the input program. Specifically, we want &lt;code&gt;(+ 1 (+ 2 3))&lt;/code&gt; to produce &lt;code&gt;['+', 1, ['+', 2, 3]]&lt;/code&gt; in Javascript.&lt;/p&gt;
&lt;p&gt;There are many different ways to go about parsing but the most intuitive to me is to have a function that accepts a program (a string) and returns a tuple containing the program parsed so far (an AST) and the rest of the program (a string) that hasn't been parsed.&lt;/p&gt;
&lt;p&gt;That leaves us with a function skeleton that looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;module.exports.parse = function parse(program) {
  const tokens = [];

  ... logic to be added ...

  return [tokens, ''];
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The code that initially calls parse will thus have to deal with unwrapping the outermost tuple to get to the AST. For a more helpful compiler we could check that the entire program &lt;em&gt;was&lt;/em&gt; actually parsed by failing if the second element of the return result is not the empty string.&lt;/p&gt;
&lt;p&gt;Within the function we will iterate over each character and accumulate until we hit space, left or right parenthesis:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;module.exports.parse = function parse(program) {
  const tokens = [];
  let currentToken = '';

  for (let i = 0; i &amp;lt; program.length; i++) {
    const char = program.charAt(i);

    switch (char) {
      case '(': // TODO
        break;
      case ')': // TODO
        break;
      case ' ':
        tokens.push(+currentToken || currentToken);
        currentToken = '';
        break;
      default:
        currentToken += char;
        break;
    }
  }

  return [tokens, ''];
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The recursive parts are always the most challenging. The right paren is easiest. We must push the current token and return all tokens with the rest of the program:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;module.exports.parse = function parse(program) {
  const tokens = [];
  let currentToken = '';

  for (let i = 0; i &amp;lt; program.length; i++) {
    const char = program.charAt(i);

    switch (char) {
      case '(': // TODO
        break;
      case ')':
        tokens.push(+currentToken || currentToken);
        return [tokens, program.substring(i + 1)];
      case ' ':
        tokens.push(+currentToken || currentToken);
        currentToken = '';
        break;
      default:
        currentToken += char;
        break;
    }
  }

  return [tokens, ''];
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Finally the left paren should recurse, add the parsed tokens to the list of sibling tokens, and force the loop to start at the new unparsed point.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;module.exports.parse = function parse(program) {
  const tokens = [];
  let currentToken = '';

  for (let i = 0; i &amp;lt; program.length; i++) {
    const char = program.charAt(i);

    switch (char) {
      case '(': {
        const [parsed, rest] = parse(program.substring(i + 1));
        tokens.push(parsed);
        program = rest;
        i = 0;
        break;
      }
      case ')':
        tokens.push(+currentToken || currentToken);
        return [tokens, program.substring(i + 1)];
      case ' ':
        tokens.push(+currentToken || currentToken);
        currentToken = '';
        break;
      default:
        currentToken += char;
        break;
    }
  }

  return [tokens, ''];
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Assuming this is all in &lt;code&gt;parser.js&lt;/code&gt;, let's try it out in the REPL:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs bash&quot;&gt;$ node
&amp;gt; const { parse } = require('./parser');
undefined
&amp;gt; console.log(JSON.stringify(parse('(+ 3 (+ 1 2)')));
[[[&quot;+&quot;,3,[&quot;+&quot;,1,2]]],&quot;&quot;]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Solid. We move on.&lt;/p&gt;
&lt;h3 id=&quot;assembly-101&quot;&gt;Assembly 101&lt;/h3&gt;
&lt;p&gt;Assembly is essentially the lowest-level programming language we can use. It is a human readable, 1:1 representation of the binary instructions the CPU can interpret. Conversion from assembly to binary is done with an assembler; the reverse step is done with a disassembler. We'll use &lt;code&gt;gcc&lt;/code&gt; for assembling since it deals with some &lt;a href=&quot;http://fabiensanglard.net/macosxassembly/index.php&quot;&gt;oddities&lt;/a&gt; of assembly programming on macOS.&lt;/p&gt;
&lt;p&gt;The primary data structures in assembly are registers (temporary variables stored by the CPU) and the program stack. Every function in a program has access to the same registers, but convention cordons off sections of the stack for each function so it ends up being a slightly more durable store than registers. &lt;code&gt;RAX&lt;/code&gt;, &lt;code&gt;RDI&lt;/code&gt;, &lt;code&gt;RDX&lt;/code&gt;, and &lt;code&gt;RSI&lt;/code&gt; are a few registers available to us.&lt;/p&gt;
&lt;p&gt;Now we only need to know a few instructions to compile our program (the rest of programming assembly is convention):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;MOV&lt;/code&gt;: store one register's content into another, or store a literal number into a register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ADD&lt;/code&gt;: store the sum of two register's contents in the first register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PUSH&lt;/code&gt;: store a register's content on the stack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POP&lt;/code&gt;: remove the top-most value from the stack and store in a register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CALL&lt;/code&gt;: enter a new section of the stack and start running the function&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RET&lt;/code&gt;: enter the calling functions stack and return to evaluating from the next instruction after the call&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SYSCALL&lt;/code&gt;: like &lt;code&gt;CALL&lt;/code&gt; but where the function is handled by the kernel&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;function-calling-convention&quot;&gt;Function calling convention&lt;/h3&gt;
&lt;p&gt;Assembly instructions are flexible enough that there is no language-defined way to make function calls. Therefore it is important to answer (at least) the following few questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Where are parameters stored by the caller so that the callee has access to them?&lt;/li&gt;
&lt;li&gt;Where is the return value stored by the callee so the caller has access to it?&lt;/li&gt;
&lt;li&gt;What registers are saved by whom?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Without getting too far into the specifics, we'll assume the following answers for development on x86_64 macOS and Linux systems:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parameters are stored (in order) in the &lt;code&gt;RDI&lt;/code&gt;, &lt;code&gt;RSI&lt;/code&gt;, and &lt;code&gt;RDX&lt;/code&gt; registers
&lt;ul&gt;&lt;li&gt;We won't support passing more than three arguments&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The return value is stored in the &lt;code&gt;RAX&lt;/code&gt; register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RDI&lt;/code&gt;, &lt;code&gt;RSI&lt;/code&gt;, and &lt;code&gt;RDX&lt;/code&gt; registers are stored by the caller&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;code-generation&quot;&gt;Code generation&lt;/h3&gt;
&lt;p&gt;With assembly basics and the function call convention in mind, we've got enough to generate code from the parsed program's AST.&lt;/p&gt;
&lt;p&gt;The skeleton of our compile code will look like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;function emit(depth, code) {
  const indent = new Array(depth + 1).map(() =&amp;gt; '').join('  ');
  console.log(indent + code);
}

function compile_argument(arg, destination) {
  // If arg AST is a list, call compile_call on it

  // Else must be a literal number, store in destination register
}

function compile_call(fun, args, destination) {
  // Save param registers to the stack

  // Compile arguments and store in param registers

  // Call function

  // Restore param registers from the stack

  // Move result into destination if provided
}

function emit_prefix() {
  // Assembly prefix
}

function emit_postfix() {
  // Assembly postfix
}

module.exports.compile = function parse(ast) {
  emit_prefix();
  compile_call(ast[0], ast.slice(1));
  emit_postfix();
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;From our pseudo-code in comments it is simple enough to fill in. Let's fill in everything but the prefix and postfix code.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;function compile_argument(arg, destination) {
  // If arg AST is a list, call compile_call on it
  if (Array.isArray(arg)) {
    compile_call(arg[0], arg.slice(1), destination);
    return;
  }

  // Else must be a literal number, store in destination register
  emit(1, `MOV ${destination}, ${arg}`);
}

const BUILTIN_FUNCTIONS = { '+': 'plus' };
const PARAM_REGISTERS = ['RDI', 'RSI', 'RDX'];

function compile_call(fun, args, destination) {
  // Save param registers to the stack
  args.forEach((_, i) =&amp;gt; emit(1, `PUSH ${PARAM_REGISTERS[i]}`));

  // Compile arguments and store in param registers
  args.forEach((arg, i) =&amp;gt; compile_argument(arg, PARAM_REGISTERS[i]));

  // Call function
  emit(1, `CALL ${BUILTIN_FUNCTIONS[fun] || fun}`);

  // Restore param registers from the stack
  args.forEach((_, i) =&amp;gt; emit(1, `POP ${PARAM_REGISTERS[args.length - i - 1]}`));

  // Move result into destination if provided
  if (destination) {
    emit(1, `MOV ${destination}, RAX`);
  }

  emit(0, ''); // For nice formatting
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In a better compiler, we would not make &lt;code&gt;plus&lt;/code&gt; a built-in function. We'd emit code for the assembly instruction &lt;code&gt;ADD&lt;/code&gt;. However, making &lt;code&gt;plus&lt;/code&gt; a function makes code generation simpler and also allows us to see what function calls look like.&lt;/p&gt;
&lt;p&gt;We'll define the &lt;code&gt;plus&lt;/code&gt; built-in function in the prefix code.&lt;/p&gt;
&lt;h3 id=&quot;the-prefix&quot;&gt;The prefix&lt;/h3&gt;
&lt;p&gt;Assembly programs consist of a few &quot;sections&quot; in memory. The most important of which are the &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; sections. &lt;code&gt;text&lt;/code&gt; is a read-only section where the program instructions themselves are stored. The CPU is instructed to start interpreting from some location in this text section and it will increment through instructions, evaluating each instruction until it reaches an instruction that tells it to jump to a different location to evaluate instructions (e.g. with CALL, RET, or JMP).&lt;/p&gt;
&lt;p&gt;To denote the text section we emit &lt;code&gt;.text&lt;/code&gt; in our prefix before we emit our generated code.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;The data section is for statically initialized values (e.g. global variables). We don't have any need for that right now so we'll ignore it.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.cs.bgu.ac.il/~caspl122/wiki.files/lab2/ch07lev1sec6/ch07lev1sec6.html&quot;&gt;Here&lt;/a&gt; is a good read with more detail on these (and other) sections.&lt;/p&gt;
&lt;p&gt;Additionally, we need to emit an entrypoint (we'll use &lt;code&gt;_main&lt;/code&gt;) and add a notice (&lt;code&gt;.global _main&lt;/code&gt;) so that the location of this entrypoint is visible externally. This is important because we let &lt;code&gt;gcc&lt;/code&gt; handle the hairier parts of generating an executable file and it needs access to the entrypoint.&lt;/p&gt;
&lt;p&gt;So far, our prefix looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;function emit_prefix() {
  emit(1, '.global _main\n');

  emit(1, '.text\n');

  // TODO: add built-in functions

  emit(0, '_main:');
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The last part of our prefix needs to include the &lt;code&gt;plus&lt;/code&gt; built-in function. For this, we add the first two parameter registers we agreed on (&lt;code&gt;RDI&lt;/code&gt; and &lt;code&gt;RSI&lt;/code&gt;) and store the result in &lt;code&gt;RAX&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;function emit_prefix() {
  emit(1, '.global _main\n');

  emit(1, '.text\n');

  emit(0, 'plus:');
  emit(1, 'ADD RDI, RSI');
  emit(1, 'MOV RAX, RDI');
  emit(1, 'RET\n');

  emit(0, '_main:');
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And we're golden.&lt;/p&gt;
&lt;h3 id=&quot;the-postfix&quot;&gt;The postfix&lt;/h3&gt;
&lt;p&gt;The job of the postfix will be simple, call &lt;code&gt;exit&lt;/code&gt; with the value of &lt;code&gt;RAX&lt;/code&gt; since this will be the result of the last function called by the program.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exit&lt;/code&gt; is a syscall, so we'll use the &lt;code&gt;SYSCALL&lt;/code&gt; instruction to call it. The x86_64 calling convention on macOS and Linux for &lt;code&gt;SYSCALL&lt;/code&gt; defines parameters the same way &lt;code&gt;CALL&lt;/code&gt; does. But we also need to tell &lt;code&gt;SYSCALL&lt;/code&gt; what syscall to call. The convention is to set &lt;code&gt;RAX&lt;/code&gt; to the integer representing the syscall on the current system. On Linux it will be &lt;code&gt;60&lt;/code&gt;; on macOS it is &lt;code&gt;0x2000001&lt;/code&gt;.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;When I say &quot;convention&quot;, I don't mean that you really have a choice as a programmer. It was arbitrary when the operating system and standard libraries chose it. But if you want to write a working program that uses syscalls or calls out to (say) glibc, you'll need to follow these conventions.&lt;/p&gt;
&lt;p&gt;The postfix then looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;const os = require('os');

const SYSCALL_MAP = os.platform() === 'darwin' ? {
    'exit': '0x2000001',
} : {
    'exit': 60,
};

function emit_postfix() {
  emit(1, 'MOV RDI, RAX'); // Set exit arg
  emit(1, `MOV RAX, ${SYSCALL_MAP['exit']}`); // Set syscall number
  emit(1, 'SYSCALL');
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And we're set here too.&lt;/p&gt;
&lt;h3 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;/h3&gt;
&lt;p&gt;We can finally write our Javascript entrypoint and run our compiler against a sample program.&lt;/p&gt;
&lt;p&gt;The entrypoint might look like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;const { parse } = require('./parser');
const { compile } = require('./compiler');

function main(args) {
  const script = args[2];
  const [ast] = parse(script);
  compile(ast[0]);
}

main(process.argv);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And we can call it like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs x86asm&quot;&gt;$ node ulisp.js '(+ 3 (+ 2 1))'
  .global _main

  .text

plus:
  ADD RDI, RSI
  MOV RAX, RDI
  RET

_main:
  PUSH RDI
  PUSH RSI
  MOV RDI, 3
  PUSH RDI
  PUSH RSI
  MOV RDI, 2
  MOV RSI, 1
  CALL plus
  POP RSI
  POP RDI
  MOV RSI, RAX

  CALL plus
  POP RSI
  POP RDI

  MOV RDI, RAX
  MOV RAX, 0x2000001
  SYSCALL
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;generating-an-executable-file-from-the-output&quot;&gt;Generating an executable file from the output&lt;/h3&gt;
&lt;p&gt;If we redirect the previous output to an assembly file and call &lt;code&gt;gcc&lt;/code&gt; on it, we can generate a program we can run. Then we can echo the &lt;code&gt;$?&lt;/code&gt; variable to see the exit code of the previous process.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs bash&quot;&gt;$ node ulisp.js '(+ 3 (+ 2 1))' &amp;gt; program.S
$ gcc -mstackrealign -masm=intel -o program program.s
$ ./program
$ echo $?
6
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And we've got a working compiler! The full source of the compiler is available &lt;a href=&quot;https://github.com/eatonphil/ulisp&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;further-reading&quot;&gt;Further reading&lt;/h3&gt;
</description>
<pubDate>Mon, 26 Nov 2018 01:14:10 +0000</pubDate>
<dc:creator>eatonphil</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://notes.eatonphil.com/compiler-basics-lisp-to-assembly.html</dc:identifier>
</item>
<item>
<title>Richard Stallman: We Can Do Better Than Bitcoin</title>
<link>https://cryptosumer.com/2018/11/24/free-software-messiah-richard-stallman-we-can-do-better-than-bitcoin/</link>
<guid isPermaLink="true" >https://cryptosumer.com/2018/11/24/free-software-messiah-richard-stallman-we-can-do-better-than-bitcoin/</guid>
<description>&lt;div readability=&quot;248.33131067961&quot;&gt;
&lt;p&gt;Richard Stallman, the fervently committed founder of the free software movement, is discussing the term “libertarian,” when he stops talking abruptly and says, “Hello?”&lt;/p&gt;
&lt;p&gt;I tell him I’m still listening, but he explains that the confused greeting wasn’t intended for me. Instead, he says a man’s voice – neither mine nor an echo of his – had just cut in with one word: “liberty.”&lt;/p&gt;
&lt;p&gt;“Does that sort of thing happen a lot?” I ask. I hadn’t heard anything.&lt;/p&gt;
&lt;p&gt;“Yes,” he says. “It wasn’t a voice I recognize.” He added, “It could be … ”&lt;/p&gt;
&lt;p&gt;Then a quick burst of static made his next words inaudible.&lt;/p&gt;
&lt;p&gt;It was a strange incident, but apparently not a new experience for Stallman, whose emails urge any NSA or FBI agents reading to “follow Snowden’s example” and blow the whistle.&lt;/p&gt;
&lt;p&gt;Stallman seems to check all of the old school cypherpunk boxes: in addition to being an Edward Snowden admirer, he’s a hacker of the original ’70s and ’80s generation, a privacy activist, and a frequent invoker of liberty. As a result, cryptocurrency enthusiasts could be forgiven for thinking Stallman was also head-over-heels for bitcoin.&lt;/p&gt;
&lt;p&gt;He’s not.&lt;/p&gt;
&lt;p&gt;Before his oration on libertarianism was interrupted, he said that the right-wingers who made up a significant portion of bitcoin’s early adopters don’t really deserve the label. His own pro-freedom views are more “libertarian” than bitcoiners’ “anti-socialism,” he argued.&lt;/p&gt;
&lt;p&gt;As we spoke, it became clear that Stallman doesn’t find the decade-old technology all that appealing, for more reasons than just politics.&lt;/p&gt;
&lt;p&gt;“I have never used it myself,” he told CoinDesk.&lt;/p&gt;
&lt;p&gt;If that’s surprising, keep in mind that fine distinctions matter a great deal to Stallman. For example, he wrote a &lt;a href=&quot;https://www.gnu.org/gnu/gnu-linux-faq.html&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer nofollow&quot; data-wpel-link=&quot;external&quot;&gt;9,000-word explainer&lt;/a&gt; on the difference between the terms GNU and Linux.&lt;/p&gt;
&lt;p&gt;In 40-ish words: GNU, which Stallman proposed in 1983, is an operating system using exclusively free software. Linux, created years later by Linus Torvalds, is a kernel. Many refer to packages combining the two as “Linux,” but Stallman insists that the proper term is GNU/Linux or just GNU.&lt;/p&gt;
&lt;p&gt;He also wrote &lt;a href=&quot;https://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer nofollow&quot; data-wpel-link=&quot;external&quot;&gt;3,000 words&lt;/a&gt; on the differences between free software and open source software. Advocates of both push for the freedom to use, study, change and redistribute software, but Stallman said that those similarities conceal “a deeply important moral disagreement” centered on freedom and human rights, which the free software movement stresses.&lt;/p&gt;
&lt;p&gt;The GNU Project, which Stallman founded, is working on an alternative digital payments system called Taler, which is based on cryptography but is not – forgive the hair-splitting – a cryptocurrency.&lt;/p&gt;
&lt;p&gt;The Taler project’s maintainer Christian Grothoff told CoinDesk that the system is, rather, designed for a “post-blockchain” world.&lt;/p&gt;
&lt;h2&gt;Concerned with privacy…&lt;/h2&gt;
&lt;p&gt;It doesn’t even seem like the technology has been around long enough to already be thinking of a world after it, but to Stallman, bitcoin isn’t suitable as a digital payment system.&lt;/p&gt;
&lt;p&gt;His biggest complaint: bitcoin’s poor privacy protections.&lt;/p&gt;
&lt;p&gt;He told CoinDesk, “What I’d really like is a way to make purchases anonymously from various kinds of stores, and unfortunately it wouldn’t be feasible for me with bitcoin.”&lt;/p&gt;
&lt;p&gt;Using a crypto exchange would allow that company and ultimately the government to identify him, he said. And as for mining the bitcoin himself, it’s a big investment and besides, he continued, “I’ve got other things I’d rather do.”&lt;/p&gt;
&lt;p&gt;Asked what he thought about so-called privacy coins, Stallman said he’d gotten an expert to assess their potential, and “for each one he would point out some serious problems, perhaps in its security or its scalability.”&lt;/p&gt;
&lt;p&gt;And speaking broadly, Stallman continued:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;“If bitcoin protected privacy, I’d probably have found a way to use it by now.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;…But not ‘perfect’ privacy&lt;/h2&gt;
&lt;p&gt;That pessimism aside, the GNU Project’s Taler does share some aspects with cryptocurrency projects – most notably it aims to fill the same niche.&lt;/p&gt;
&lt;p&gt;Start with Taler’s intellectual lineage. It’s based on blind signatures, a cryptographic technique invented by David Chaum, whose DigiCash was among the first attempts at creating secure electronic money. Plus, Taler’s attempt to create a digital money that resists surveillance by governments and payments companies aligns it with many cryptocurrency projects.&lt;/p&gt;
&lt;p&gt;Yet, Taler does not attempt to bypass centralized authority.&lt;/p&gt;
&lt;p&gt;Payments are processed by openly centralized “exchanges” rather than peer-to-peer networks of miners because, Grothoff said, such a system “would again enable dangerous, money laundering kind of practice.”&lt;/p&gt;
&lt;p&gt;Indeed, in a break with the anti-government ethos that has tended to characterize bitcoin and some of its peers, Taler’s design explicitly tries to block opportunities for tax evasion.&lt;/p&gt;
&lt;p&gt;Speaking to this, Stallman told CoinDesk, “We need a state to do many vital jobs, including fund research, fund education, provide people with medical care – provide everyone with medical care – build roads, maintain order, provide justice, including to those who are not rich and powerful, and so the state’s got to bring in a lot of money.”&lt;/p&gt;
&lt;p&gt;What a break from the political leanings of many of bitcoin’s first adherents.&lt;/p&gt;
&lt;p&gt;Stallman continued:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;“&lt;span&gt;I wouldn’t want perfect privacy because that would mean it would be impossible to investigate crimes at all. And that’s one of the jobs we need the state to do.”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Privacy in the Taler system, then, is limited to users spending their digital cash. They are shielded from surveillance because, Grothoff said, “the exchange, when coins are being redeemed, cannot tell if it was customer A or customer B or customer C who received the coin, because they all look identical from the exchange.”&lt;/p&gt;
&lt;p&gt;“Nobody,” he added, “exactly knows who has how many tokens.”&lt;/p&gt;
&lt;p&gt;Merchants (or anyone) receiving payments, on the other hand, do so visibly and in the open, making it possible for governments to assess taxes on their income – not to mention harder for the recipients to participate in money laundering.&lt;/p&gt;
&lt;h2&gt;A place for crypto?&lt;/h2&gt;
&lt;p&gt;While Taler is not a cryptocurrency and doesn’t have a native asset (there are no talers or TalerCoins), as a new payment rail for existing assets, the system could support cryptocurrency at some point.&lt;/p&gt;
&lt;p&gt;Just as euros (the first currency that will be supported by the system), dollars and yen could all be sent using Taler, so could bitcoin.&lt;/p&gt;
&lt;p&gt;Similarly, while Taler is not a blockchain, a blockchain-based system could take the place of a bank within the system.&lt;/p&gt;
&lt;p&gt;For users to be able to move euros into the Taler wallet, though, Taler exchanges will need to interact with the traditional banking system to withdraw that money. In this same way, a blockchain-based system could work with Taler exchanges to allow users to get access to their cryptocurrency.&lt;/p&gt;
&lt;p&gt;Grothoff compared the act of moving bank deposits to a Taler digital wallet to taking cash out of an ATM. Coins in the wallet are stored locally on a user’s device, and if a user loses the key to their wallet, there’s nothing that can be done to recover it, much like the crypto space’s use of private/public key pairs.&lt;/p&gt;
&lt;p&gt;Currently, Taler is in talks with European banks to allow withdrawal into the Taler wallet and also re-deposit from the Taler system back into the traditional banking system.&lt;/p&gt;
&lt;p&gt;While the launch date on the project’s website &lt;a href=&quot;https://taler.net/en/faq.html&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer nofollow&quot; data-wpel-link=&quot;external&quot;&gt;still lists 2018&lt;/a&gt;, Grothoff said, it’s dependent of how quickly discussions with banks can be wrapped up. And he said, “The banks &lt;span&gt;are not necessarily easy or cheap to deal with.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Although, nothing about the traditional banking system per se is essential to Taler’s functioning (except perhaps for regulatory compliance). In principle, the “register-based system” that Taler plugs into could be a bank account or, in theory, a blockchain, said Grothoff.&lt;/p&gt;
&lt;p&gt;If Taler gains traction, developers can experiment with different implementations and integrations – using banks or blockchains or whatever other register system they prefer. After all, Grothoff said:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;“It’s free software.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Richard_Stallman#/media/File:NicoBZH_-_Richard_Stallman_(by-sa)_(10).jpg&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer nofollow&quot; data-wpel-link=&quot;external&quot;&gt;Stallman&lt;/a&gt; image via Wikimedia Commons/NicoBZH&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?&lt;br/&gt;n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;&lt;br/&gt;n.push=n;n.loaded=!0;n.version=’2.0′;n.queue=[];t=b.createElement(e);t.async=!0;&lt;br/&gt;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,&lt;br/&gt;document,’script’,’//connect.facebook.net/en_US/fbevents.js’);&lt;br/&gt;fbq(‘init’, ‘239547076708948’);&lt;br/&gt;fbq(‘track’, “PageView”);&lt;/p&gt;</description>
<pubDate>Sun, 25 Nov 2018 23:27:24 +0000</pubDate>
<dc:creator>em-bee</dc:creator>
<og:image>https://cryptosumer.com/wp-content/uploads/NicoBZH_-_Richard_Stallman_by-sa_10.jpg</og:image>
<og:type>article</og:type>
<og:title>Free Software Messiah Richard Stallman: We Can Do Better Than Bitcoin · Cryptosumer</og:title>
<og:description>Richard Stallman, the fervently committed founder of the free software movement, is discussing the term “libertarian,” when he stops talking abruptly and says, “Hello?” I tell him I’m still listening, but he explains that the confused greeting wasn’t intended for me. Instead, he says a man’s voice – neither mine nor an echo of his</og:description>
<og:url>https://cryptosumer.com/2018/11/24/free-software-messiah-richard-stallman-we-can-do-better-than-bitcoin/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cryptosumer.com/2018/11/24/free-software-messiah-richard-stallman-we-can-do-better-than-bitcoin/</dc:identifier>
</item>
<item>
<title>Dive – A tool for exploring each layer in a Docker image</title>
<link>https://github.com/wagoodman/dive</link>
<guid isPermaLink="true" >https://github.com/wagoodman/dive</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://goreportcard.com/report/github.com/wagoodman/dive&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e32588f298c69930fcf238834350e7c1b43b4b07/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f7761676f6f646d616e2f64697665&quot; alt=&quot;Go Report Card&quot; data-canonical-src=&quot;https://goreportcard.com/badge/github.com/wagoodman/dive&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A tool for exploring a docker image, layer contents, and discovering ways to shrink your Docker image size.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/wagoodman/dive/blob/master/.data/demo.gif&quot;&gt;&lt;img src=&quot;https://github.com/wagoodman/dive/raw/master/.data/demo.gif&quot; alt=&quot;Image&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To analyze a Docker image simply run dive with an image tag/id/digest:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dive &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;your-image-tag&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if you want to build your image then jump straight into analyzing it:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dive build -t &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;some-tag&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;This is beta quality!&lt;/strong&gt; &lt;em&gt;Feel free to submit an issue if you want a new feature or find a bug :)&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Basic Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Show Docker image contents broken down by layer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Indicate what's changed in each layer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Estimate &quot;image efficiency&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage &quot;score&quot; and total wasted file space is provided.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quick build/analysis cycles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can build a Docker image and do an immediate analysis with one command: &lt;code&gt;dive build -t some-tag .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You only need to replace your &lt;code&gt;docker build&lt;/code&gt; command with the same &lt;code&gt;dive build&lt;/code&gt; command.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu/Debian&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
wget https://github.com/wagoodman/dive/releases/download/v0.3.0/dive_0.3.0_linux_amd64.deb
sudo apt install ./dive_0.3.0_linux_amd64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;RHEL/Centos&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
curl -OL https://github.com/wagoodman/dive/releases/download/v0.3.0/dive_0.3.0_linux_amd64.rpm
rpm -i dive_0.3.0_linux_amd64.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Available as &lt;a href=&quot;https://aur.archlinux.org/packages/dive/&quot; rel=&quot;nofollow&quot;&gt;dive&lt;/a&gt; in the Arch User Repository (AUR).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
aurman -S dive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above example assumes &lt;code&gt;aurman&lt;/code&gt; as the tool for installing AUR packages. &lt;em&gt;Note&lt;/em&gt;: the AUR repository is &lt;strong&gt;not&lt;/strong&gt; controlled by the dive project maintainer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
brew tap wagoodman/dive
brew install dive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or download a Darwin build from the releases page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Go tools&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
go get github.com/wagoodman/dive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
docker pull wagoodman/dive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
docker pull quay.io/wagoodman/dive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When running you'll need to include the docker client binary and socket file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
docker run --rm -it \
    -v /var/run/docker.sock:/var/run/docker.sock \
    wagoodman/dive:latest &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;dive arguments...&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Docker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
docker run --rm -it &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    -v /var/run/docker.sock:/var/run/docker.sock &lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
    wagoodman/dive:latest &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;dive arguments...&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
   DOCKER_API_VERSION=1.37 dive ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if you are running with a docker image:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
docker run --rm -it \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -e DOCKER_API_VERSION=1.37
    wagoodman/dive:latest &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;dive arguments...&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;KeyBindings&lt;/h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Key Binding&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + C&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Exit&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Tab&lt;/kbd&gt; or &lt;kbd&gt;Ctrl + Space&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Switch between the layer and filetree views&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + F&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filter files&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Layer view: see aggregated image modifications&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + L&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Layer view: see current layer modifications&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: collapse/uncollapse a directory&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: show/hide added files&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + R&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: show/hide removed files&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + M&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: show/hide modified files&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;Ctrl + U&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: show/hide unmodified files&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: scroll up a page&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Filetree view: scroll down a page&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;No configuration is necessary, however, you can create a config file and override values:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-yaml&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-ent&quot;&gt;log&lt;/span&gt;:
  &lt;span class=&quot;pl-ent&quot;&gt;enabled&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;path&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;./dive.log&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;level&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;info&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Note: you can specify multiple bindings by separating values with a comma.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Note: UI hinting is derived from the first binding&lt;/span&gt;
&lt;span class=&quot;pl-ent&quot;&gt;keybinding&lt;/span&gt;:
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Global bindings&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;quit&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+c&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;toggle-view&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;tab, ctrl+space&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;filter-files&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+f, ctrl+slash&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Layer view specific bindings  &lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;compare-all&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+a&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;compare-layer&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+l&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; File view specific bindings&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;toggle-collapse-dir&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;space&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;toggle-added-files&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+a&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;toggle-removed-files&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+r&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;toggle-modified-files&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+m&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;toggle-unmodified-files&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;ctrl+u&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;page-up&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;pgup&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;page-down&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;pgdn&lt;/span&gt;
  
&lt;span class=&quot;pl-ent&quot;&gt;diff&lt;/span&gt;:
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; You can change the default files show in the filetree (right pane). All diff types are shown by default. &lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;hide&lt;/span&gt;:
    - &lt;span class=&quot;pl-s&quot;&gt;added&lt;/span&gt;
    - &lt;span class=&quot;pl-s&quot;&gt;removed&lt;/span&gt;
    - &lt;span class=&quot;pl-s&quot;&gt;changed&lt;/span&gt;
    - &lt;span class=&quot;pl-s&quot;&gt;unchanged&lt;/span&gt;

&lt;span class=&quot;pl-ent&quot;&gt;filetree&lt;/span&gt;:
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; The default directory-collapse state&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;collapse-dir&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; The percentage of screen width the filetree should take on the screen (must be &amp;gt;0 and &amp;lt;1)&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;pane-width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;0.5&lt;/span&gt;

&lt;span class=&quot;pl-ent&quot;&gt;layer&lt;/span&gt;:
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Enable showing all changes from this layer and ever previous layer&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot;&gt;show-aggregated-changes&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;dive will search for configs in the following locations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;~/.dive.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/dive.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.config/dive.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 25 Nov 2018 19:23:00 +0000</pubDate>
<dc:creator>boyter</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/590471?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>wagoodman/dive</og:title>
<og:url>https://github.com/wagoodman/dive</og:url>
<og:description>A tool for exploring each layer in a docker image. Contribute to wagoodman/dive development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/wagoodman/dive</dc:identifier>
</item>
<item>
<title>How I changed the law with a GitHub pull request</title>
<link>https://arstechnica.com/tech-policy/2018/11/how-i-changed-the-law-with-a-github-pull-request/</link>
<guid isPermaLink="true" >https://arstechnica.com/tech-policy/2018/11/how-i-changed-the-law-with-a-github-pull-request/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/3634380710_ed679cedaf_o-800x534.jpg&quot; alt=&quot;The DC Council meets at the John A. Wilson building.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/3634380710_ed679cedaf_o.jpg&quot; class=&quot;enlarge-link&quot; data-height=&quot;2113&quot; data-width=&quot;3164&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; The DC Council meets at the John A. Wilson building.&lt;/div&gt;&lt;aside id=&quot;social-left&quot; aria-label=&quot;Read the comments or share this article&quot;&gt;
&lt;h4 class=&quot;comment-count-before&quot;&gt;&lt;a title=&quot;50 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2018/11/how-i-changed-the-law-with-a-github-pull-request/?comments=1&quot;&gt;reader comments&lt;/a&gt;&lt;/h4&gt;
&lt;a title=&quot;50 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2018/11/how-i-changed-the-law-with-a-github-pull-request/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-number&quot;&gt;56&lt;/span&gt; &lt;span class=&quot;visually-hidden&quot;&gt;with 50 posters participating&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;
&lt;h4&gt;Share this story&lt;/h4&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;Recently, I found a typo in the District of Columbia’s legal code and corrected it using GitHub. My feat highlights the groundbreaking way the District manages its legal code.&lt;/p&gt;
&lt;p&gt;As a member of the DC Mayor’s &lt;a href=&quot;https://ogag.dc.gov/&quot;&gt;Open Government Advisory Group&lt;/a&gt;, I was researching &lt;a href=&quot;https://code.dccouncil.us/dc/council/code/sections/1-1162.05c.html&quot;&gt;the law that establishes DC’s office of open government,&lt;/a&gt; which issues regulations and advisory opinions for the District’s open meetings law (OMA) and open records law (FOIA). The law was updated last month, and something seemed to have changed: there was no longer a reference to issuing advisory opinions for FOIA. Comparing the DC Code to &lt;a href=&quot;https://code.dccouncil.us/dc/council/laws/22-168.html&quot;&gt;the act that made the change&lt;/a&gt;, I noticed that something was amiss in section (d):&lt;/p&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_Zpu34x1OTy1urN60rbO0RA.png&quot; class=&quot;enlarge&quot; data-height=&quot;808&quot; data-width=&quot;1589&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_Zpu34x1OTy1urN60rbO0RA-980x498.png&quot; width=&quot;980&quot; height=&quot;498&quot;/&gt;&lt;/a&gt;


&lt;blockquote&gt;
&lt;p&gt;(d) The Office of Open Government may issue advisory opinions on the implementation of subchapter I of Chapter 5 of Title 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It had a typo.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://code.dccouncil.us/dc/council/code/titles/2/chapters/5/subchapters/I/&quot;&gt;Subchapter I of Chapter 5 of Title 2 of the DC Code&lt;/a&gt; is about how the DC government makes regulations. FOIA is subchapter II, not subchapter I. In other words, the link to “subchapter I of Chapter 5 of Title 2” took visitors to the wrong part of the law.&lt;/p&gt;
&lt;p&gt;The District does something with its legal code that no other jurisdiction in the world does (to my knowledge): it publishes the law on &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;. GitHub is a website used primarily by software developers to share and collaborate on software code.&lt;/p&gt;
&lt;p&gt;Lawyers and engineers noticed in the early part of this decade that &lt;a href=&quot;https://blog.law.cornell.edu/voxpop/2012/09/17/standardizing-the-worlds-legislative-information-one-hackathon-at-a-time/&quot;&gt;lawmaking and software engineering have a lot in common&lt;/a&gt; when it comes to tracking changes to their code—whether it be legal code or software code. The District has managed to take a practice of modern software development and apply it to its legal code by putting its legal code onto GitHub at &lt;a href=&quot;https://github.com/DCCouncil/dc-law-xml&quot;&gt;https://github.com/DCCouncil/dc-law-xml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This isn’t a copy of the DC law. It is an authoritative source. It is where the DC Council stores the digital versions of enacted laws, and this source feeds directly into the Council’s DC Code website at &lt;a href=&quot;https://code.dccouncil.us/dc/council/code/&quot;&gt;https://code.dccouncil.us/dc/council/code/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Last week, I opened the file on GitHub that had the typo, edited the file, and submitted my edit using GitHub’s “pull request” feature. A pull request is a request to the file’s maintainer to review a change and then, if approved, pull it in to the main file:&lt;/p&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_a6CGq_90Wdu4XvdC4ePn-g.png&quot; class=&quot;enlarge&quot; data-height=&quot;785&quot; data-width=&quot;1123&quot; alt=&quot;This is an XML file for a DC law. On GitHub, the pencil icon begins the process of creating an edit to a file. This is at &amp;lt;a href=&amp;quot;https://github.com/DCCouncil/dc-law-xml/blob/master/dc/council/periods/22/laws/22-168.xml&amp;quot;&amp;gt;https://github.com/DCCouncil/dc-law-xml/blob/master/dc/council/periods/22/laws/22-168.xml&amp;lt;/a&amp;gt;.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_a6CGq_90Wdu4XvdC4ePn-g-980x685.png&quot; width=&quot;980&quot; height=&quot;685&quot; alt=&quot;This is an XML file for a DC law. On GitHub, the pencil icon begins the process of creating an edit to a file. This is at &amp;lt;a href=&amp;quot;https://github.com/DCCouncil/dc-law-xml/blob/master/dc/council/periods/22/laws/22-168.xml&amp;quot;&amp;gt;https://github.com/DCCouncil/dc-law-xml/blob/master/dc/council/periods/22/laws/22-168.xml&amp;lt;/a&amp;gt;.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_a6CGq_90Wdu4XvdC4ePn-g.png&quot; class=&quot;enlarge-link&quot; data-height=&quot;785&quot; data-width=&quot;1123&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; This is an XML file for a DC law. On GitHub, the pencil icon begins the process of creating an edit to a file. This is at &lt;a href=&quot;https://github.com/DCCouncil/dc-law-xml/blob/master/dc/council/periods/22/laws/22-168.xml&quot;&gt;https://github.com/DCCouncil/dc-law-xml/blob/master/dc/council/periods/22/laws/22-168.xml&lt;/a&gt;.&lt;/div&gt;
&lt;p&gt;Here I’m editing the file and changing the roman numeral “I” to “II” in the XML markup of the citation:&lt;/p&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_tB1GphvfHQTefllN3qmhNg.png&quot; class=&quot;enlarge&quot; data-height=&quot;799&quot; data-width=&quot;1123&quot; alt=&quot;I edited the XML file containing the typo (dc/council/periods/22/laws/22–168.xml) and submitted it with a comment for review.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_tB1GphvfHQTefllN3qmhNg-980x697.png&quot; width=&quot;980&quot; height=&quot;697&quot; alt=&quot;I edited the XML file containing the typo (dc/council/periods/22/laws/22–168.xml) and submitted it with a comment for review.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_tB1GphvfHQTefllN3qmhNg.png&quot; class=&quot;enlarge-link&quot; data-height=&quot;799&quot; data-width=&quot;1123&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; I edited the XML file containing the typo (dc/council/periods/22/laws/22–168.xml) and submitted it with a comment for review.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Josh Tauberer&lt;/div&gt;
&lt;p&gt;A few days later, the Council’s codification lawyer merged &lt;a href=&quot;https://github.com/DCCouncil/dc-law-xml/pull/134&quot;&gt;my pull request&lt;/a&gt;:&lt;/p&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_Y2slHln06YJr3WCLZ4cWWQ.png&quot; class=&quot;enlarge&quot; data-height=&quot;318&quot; data-width=&quot;992&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_Y2slHln06YJr3WCLZ4cWWQ-980x314.png&quot; width=&quot;980&quot; height=&quot;314&quot;/&gt;&lt;/a&gt;

&lt;div class=&quot;caption-credit&quot;&gt;Josh Tauberer&lt;/div&gt;
&lt;p&gt;... and the DC Code website was automatically updated, showing what you’ll see on the page today:&lt;/p&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_aFYb8wXB7hWFtfm_vMBBvw.png&quot; class=&quot;enlarge&quot; data-height=&quot;626&quot; data-width=&quot;1956&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/1_aFYb8wXB7hWFtfm_vMBBvw-980x314.png&quot; width=&quot;980&quot; height=&quot;314&quot;/&gt;&lt;/a&gt;

&lt;div class=&quot;caption-credit&quot;&gt;Josh Tauberer&lt;/div&gt;
&lt;p&gt;This is a milestone in the advancement of open government and open legal publishing. No one should expect that editing the law on GitHub is going to become the new normal, however.&lt;/p&gt;
&lt;p&gt;My edit wasn’t substantive. This sort of “technical correction,” as lawyers would call it, didn’t need to be passed by the Council and signed by the Mayor. I also happen to have expertise in this particular law, GitHub, XML, and the Council’s new publishing process created by the Open Law Library. So I knew what change to submit, and DC’s codification counsel was able to merge it with the click of a button. That’s not how lawmaking works, and GitHub’s pull-request feature isn’t going to replace public hearings, expert testimony, negotiations between stakeholders, votes by elected representatives, etc. — and it shouldn’t.&lt;/p&gt;
&lt;p&gt;Yet Open Law Library’s new legal publishing process is groundbreaking.&lt;/p&gt;
&lt;h2&gt;The Open Law Library is changing how we change the law&lt;/h2&gt;
&lt;p&gt;The Code of the District of Columbia (the “DC Code”) is the compilation of laws enacted by our local legislative body, the Council of the District of Columbia. Each time the Council passes an act, it amends existing law—add a section, strike a semicolon, and so on. Those piecemeal changes in the act are then incorporated, one by one, into the Code in a process called codification. During codification, lawyers not only strike those semicolons, but they also make thoughtful decisions about how to arrange new parts of the law so that everything makes some logical sense all together.&lt;/p&gt;
&lt;p&gt;The Council’s codification process has been overhauled in recent years. What was once a largely manual process of dissecting Word documents containing the acts and placing parts into other Word documents containing the organized DC Code, this workflow is becoming more and more automated by the &lt;a href=&quot;http://www.openlawlib.org/&quot;&gt;Open Law Library&lt;/a&gt;, the Council’s new nonprofit codification contractor.&lt;/p&gt;
&lt;p&gt;Open Law Library’s mission as a nonprofit is to make all laws as open and accessible as possible. The library’s strategy is to achieve openness by making openness pay off for governments: it uses open, machine-readable laws to build software tools that make codification faster and more accurate. The cool thing about this is that governments can benefit from using Open Law Library’s software even if open data isn’t their highest priority, but in the background they’ll still be publishing their laws in an open and accessible format—everybody wins.&lt;/p&gt;
&lt;p&gt;Today, instead of authoring the DC Code in Word documents stored on a hard drive in a locked room in a basement, the Code is now stored in XML format in a place everyone can see—on the Web.&lt;/p&gt;
&lt;p&gt;If you looked closely, you may have noticed that the screenshots above aren’t all showing the same document. The Open Law Library’s new technology transforms the XML file that stores DC Law 22–168 (the file I edited) into the website for DC Code § 1–1162.05c. The software changes the text of the citation from “the Freedom of Information Act” into “subchapter I of Chapter 5 of Title 2” and adds an HTML link based on the XML tag around the citation.&lt;/p&gt;
&lt;h2&gt;It’s full circle for me&lt;/h2&gt;
&lt;p&gt;I’m thrilled that the District has come so far in innovating legal publishing—partly because I helped put this all in motion. This transition began in 2013 when local civic hacker Tom MacWright, epic legal data liberator Carl Malamud, the Council’s own lawyer Dave Zvenyach, and I put the first full download of the District’s legal code online. Malamud bought a printed copy of the DC Code, digitized it, and mailed it around on USB thumb drives. After &lt;a href=&quot;https://www.huffingtonpost.com/2013/04/09/dc-code-hackathon_n_3039271.html&quot;&gt;two hackathons&lt;/a&gt; and some funding from the Council, by 2014 we had converted the DC Code into XML and &lt;a href=&quot;https://github.com/DCCouncil/dc-code-prototype&quot;&gt;posted in unofficially on GitHub&lt;/a&gt; for anyone to use.&lt;/p&gt;
&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/11/0_188Vc8YZhbgxquUp.png&quot; width=&quot;375&quot; height=&quot;500&quot; alt=&quot;In 2012, Carl Malamud distributed physical and electronic copies of the DC Code. This shipment went to Waldo Jaquith. The George Washington-shaped USB thumb drive contained the digitized version from Malamud’s scans of the physical edition.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;In 2012, Carl Malamud distributed physical and electronic copies of the DC Code. This shipment went to Waldo Jaquith. The George Washington-shaped USB thumb drive contained the digitized version from Malamud’s scans of the physical edition.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Waldo Jaquith&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://opengovdata.io/2014/state-laws-the-district-columbia-code/&quot;&gt;I wrote more about our efforts back in 2014&lt;/a&gt;, but putting the law online is an ongoing issue. Eighteen states and the District have now enacted &lt;a href=&quot;http://www.uniformlaws.org/Act.aspx?title=Electronic%20Legal%20Material%20Act&quot;&gt;Uniform Electronic Legal Material Acts (UELMA)&lt;/a&gt;, which is driving adoption of modern legal publishing practices by the states.&lt;/p&gt;
&lt;p&gt;But some states are resisting. Earlier this year, Malamud &lt;a href=&quot;http://www.abajournal.com/news/article/appeal_georgia_annotated_code_copyright&quot;&gt;won a case against the state of Georgia&lt;/a&gt; which tried to prevent him from sharing electronic copies of the state’s legal code! And in DC, while the Council is making progress with the DC Code, other parts of DC law, including regulations, now lag behind.&lt;/p&gt;
&lt;p&gt;Besides the District, several other jurisdictions are publishing their legal codes with official bulk XML downloads: the US federal government began publishing XML downloads for the &lt;a href=&quot;https://www.govinfo.gov/help/cfr&quot;&gt;Code of Federal Regulations&lt;/a&gt; in 2009 and the &lt;a href=&quot;http://uscode.house.gov/download/download.shtml&quot;&gt;United States Code&lt;/a&gt; in 2013.&lt;/p&gt;
&lt;p&gt;There are also dozens of private/nonprofit sector projects to create open legal data where it doesn’t exist officially elsewhere, such as &lt;a href=&quot;https://www.courtlistener.com/api/&quot;&gt;CourtListener&lt;/a&gt; for the US courts, and my organization &lt;a href=&quot;https://www.govtrack.us/&quot;&gt;GovTrack.us&lt;/a&gt; did the same for bills before Congress until &lt;a href=&quot;https://medium.com/civic-tech-thoughts-from-joshdata/govtrack-now-actually-uses-open-government-data-5fc16f377e86&quot;&gt;Congress itself began publishing open legislative data&lt;/a&gt;. And there have been many unofficial attempts to put legal codes on collaboration websites like GitHub (&lt;em&gt;e.g.&lt;/em&gt;, in &lt;a href=&quot;https://www.wired.com/2012/08/bundestag/&quot;&gt;Germany&lt;/a&gt;, &lt;a href=&quot;https://www.itworld.com/article/2904079/france-s-laws-are-now-on-github.html&quot;&gt;France&lt;/a&gt;), and related efforts by Waldo Jaquith and the OpenGov Foundation on their &lt;a href=&quot;https://www.statedecoded.com/places/&quot;&gt;State Decoded&lt;/a&gt; project in three states and three cities.&lt;/p&gt;
&lt;p&gt;But the District appears to be the first jurisdiction to combine the two by putting its legal code on GitHub and accepting a change from a member of the public.&lt;/p&gt;
&lt;h2&gt;Why it matters&lt;/h2&gt;
&lt;p&gt;Publishing legal codes on GitHub is a real government innovation. It isn’t like the techno-solutionist blockchain nonsense that is in vogue lately. It’s the cherry on top of real work happening inside the DC government improving a process hundreds of years old:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Council is able to publish the law better and faster than ever before. With the District’s previous codification contractor, updates to the DC Code were published three times a year, and there could be a five-to-seven month delay in seeing the latest laws. But the Open Law Library has shortened the publication process to about a week after a law is enacted.&lt;/li&gt;
&lt;li&gt;It also means we’re all getting to see more of the actual law that governs us—not the law as it was months ago.&lt;/li&gt;
&lt;li&gt;The laws are now published on an easy-to-use, modern, searchable, mobile-friendly, and free website: &lt;a href=&quot;https://code.dccouncil.us/dc/council/code/&quot;&gt;https://code.dccouncil.us/dc/council/code/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This increases access to justice for District residents and lawyers at legal aid organizations who don’t have access to high-priced legal research tools.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I hope other jurisdictions learn from the District and move the law forward with the &lt;a href=&quot;http://www.openlawlib.org/&quot;&gt;Open Law Library,&lt;/a&gt; and I especially hope that the District expands its use of Open Law Library tools to other aspects of DC law starting with the DC Municipal Regulations (DCMR).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://razor.occams.info/&quot;&gt;Joshua Tauberer&lt;/a&gt; is a civic hacker based in the District of Columbia best known for founding &lt;a href=&quot;https://www.govtrack.us/&quot;&gt;GovTrack.us&lt;/a&gt;, which created the first comprehensive open data for legislation in the US Congress. He previously was a consultant for the DC Council, where he created the first data standards for the Council’s ongoing work to modernize the DC Code, and the US House of Representatives’s Office of the Law Revision Counsel, which publishes the United States Code. He is currently a contractor for &lt;a href=&quot;https://govready.com/&quot;&gt;GovReady PBC&lt;/a&gt; and a member of the &lt;a href=&quot;https://ogag.dc.gov/&quot;&gt;DC Mayor’s Open Government Advisory Group.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 25 Nov 2018 19:16:40 +0000</pubDate>
<dc:creator>chha</dc:creator>
<og:url>https://arstechnica.com/tech-policy/2018/11/how-i-changed-the-law-with-a-github-pull-request/</og:url>
<og:title>How I changed the law with a GitHub pull request</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2018/11/3634380710_ed679cedaf_o-760x380.jpg</og:image>
<og:description>Washington DC has made GitHub the authoritative digital source for DC laws.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/tech-policy/2018/11/how-i-changed-the-law-with-a-github-pull-request/</dc:identifier>
</item>
<item>
<title>German federal office publishes Windows 10 telemetry analysis</title>
<link>https://www.ghacks.net/2018/11/23/german-federal-office-bsi-publishes-telemetry-analysis/</link>
<guid isPermaLink="true" >https://www.ghacks.net/2018/11/23/german-federal-office-bsi-publishes-telemetry-analysis/</guid>
<description>&lt;p&gt;The German Federal Office for Information Security, BSI (Bundesamt für Sicherheit in der Informationstechnik) published a detailed Windows 10 Telemetry analysis on November 20, 2018.&lt;/p&gt;
&lt;p&gt;The research paper, which is available in &lt;a href=&quot;https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Cyber-Sicherheit/SiSyPHus/Workpackage4_Telemetry.pdf&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;English&lt;/a&gt; (partially) and &lt;a href=&quot;https://www.bsi.bund.de/DE/Themen/Cyber-Sicherheit/Empfehlungen/SiSyPHuS_Win10/AP4/SiSyPHuS_AP4.html&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;German&lt;/a&gt;, provides a deep analysis of Telemetry functionality that Microsoft implemented in the company's Windows 10 operating system.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-148895&quot; src=&quot;https://www.ghacks.net/wp-content/uploads/2018/11/telemetry.png&quot; alt=&quot;telemetry&quot; width=&quot;1198&quot; height=&quot;657&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The paper is based on Windows 10 version 1607 Enterprise. It covers:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An overview of Windows 10's event tracing functionality for Telemetry.&lt;/li&gt;
&lt;li&gt;A technical analysis on how Telemetry data is collected and processed.&lt;/li&gt;
&lt;li&gt;An analysis of the network interfaces and connections used to transfer Telemetry data.&lt;/li&gt;
&lt;li&gt;A look at configuration and logging capabilities to monitor and control Telemetry data collecting.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The report is quite technical in nature and the first couple of pages are only available in German at the time of writing. You may want to skip ahead to page 9, Executive Summary, if you don't understand German; the English part of the report begins with chapter 1.2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: An extra, &lt;a href=&quot;https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Cyber-Sicherheit/SiSyPHus/Analyse_Telemetriekomponente.pdf?__blob=publicationFile&amp;amp;v=4&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;German-only&lt;/a&gt;, paper is available that includes system-based and network-based options to limit or block the collection or transfer of Telemetry data to Microsoft.&lt;/p&gt;
&lt;p&gt;You find interesting tidbits in the report even if you are not interested in technicalities like the number of Event Tracing for Windows (ETW) providers associated with Autologger-Diagtrack-Listener and Diagtrack Listener for each of the supported Telemetry levels:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Security -- 9 and 4 ETW Providers&lt;/li&gt;
&lt;li&gt;Basic -- 93 and 410 ETW Providers&lt;/li&gt;
&lt;li&gt;Enhanced -- 105 and 418 ETW Providers&lt;/li&gt;
&lt;li&gt;Full -- 112 and 422 ETW Providers&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The Security telemetry level is reserved to Enterprise editions of Windows 10. Home users may choose between Basic and Full, and the difference in providers is not as large as one would think based on the analysis.&lt;/p&gt;
&lt;p&gt;The number of ETW Providers stands in no direct correlation to the amount of data that is collected or its quality according to the researchers.&lt;/p&gt;
&lt;p&gt;The report list hostnames and IP addresses that Windows 10's Telemetry service uses for communication based on a connection log of 48 hours.&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;colgroup width=&quot;331&quot;/&gt;&lt;colgroup width=&quot;105&quot;/&gt;&lt;colgroup width=&quot;155&quot;/&gt;&lt;tbody readability=&quot;14&quot;&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;&lt;strong&gt;Hostname&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;IP Address&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Location&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;geo.settings-win.data.microsoft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;40.77.226.249&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Ireland, Dublin&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;db5-eap.settings-win.data.microsoft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;settings-win.data.microsoft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;db5.settings-win.data.microsoft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;asimov-win.settings.data.microsoft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;db5.vortex.data.microsoft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;40.77.226.250&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Ireland, Dublin&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;v10-win.vortex.data.microsft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;geo.vortex.data.microsoft.com.akadns.net&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;v10.vortex-win.data.microsft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;us.vortex-win.data.microsft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;13.92.194.212&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;United States, Boston&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;eu.vortex-win.data.microsft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;52.178.38.151&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Netherlands, Amsterdam&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;vortex-win-sandbox.data.microsoft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;52.229.39.152&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;United States, LA&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;alpha.telemetry.microsft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;52.183.114.173&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;United States, LA&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;td align=&quot;left&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;oca.telemetry.microsft.com&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;13.78.232.226&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;United States, Cheyenne&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Last but not least, there is an appendix that list external executable files. Not all of them are used for Telemetry purposes though.&lt;/p&gt;
&lt;p&gt;Here is the entire listing:&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;colgroup width=&quot;329&quot;/&gt;&lt;colgroup width=&quot;162&quot;/&gt;&lt;tbody readability=&quot;44&quot;&gt;&lt;tr&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;&lt;strong&gt;Executable&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\System32\telsvc.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\SysWow64\dtdump.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\SysWow64\RdrLeakDiag.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot %system32\RdrLeakDiag.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\appidtel.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\disksnapshot.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\bcdedit.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for managing the Boot Configuration Database (BCD);&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\dxdiag.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for collecting information on devices;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\dispdiag.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for collecting and logging information on displays;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%ProgramFiles%\internet explorer\iediagcmd.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\icacls.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for displaying and modifying access control lists;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\licensingdiag.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\ipconfig.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for displaying network information and configuring network settings&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\msinfo32.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for displaying information about the hardware and software enviroment deployed on a platform;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\logman.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for configuring, and displaying information about, the ETW environment;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\netsh.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for displaying network information and configuring network settings;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\netcfg.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for installing the Windows preinstallation environment, a lightweight version of Windows;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\route.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for displaying and modifying the platform’s IP routing table;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\powercfg.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for configuring power settings (e.g., configuring the platform’s standby mode)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\stordiag.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\settingsynchost.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\verifier.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for detecting and troubleshooting driver issues;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\tracelog.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for managing ETW environment (e.g., activation and deactivation of ETW sessions);&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\whoami.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for displaying information on the user currently logged on to the system; https&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\wevtutil.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;A tool for managing the EventLog environment;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot; height=&quot;17&quot;&gt;%SystemRoot%\system32\wscollect.exe&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;No description available&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Administrators and researchers may also be interested in a &lt;a href=&quot;https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Cyber-Sicherheit/SiSyPHus/Tools_Telemetry.html&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;external noopener noreferrer&quot;&gt;tools and script package&lt;/a&gt; that was released as part of the analysis.&lt;/p&gt;
&lt;h3&gt;Closing Words&lt;/h3&gt;
&lt;p&gt;The reports provide detailed Telemetry information that is useful to interested Windows users but especially to administrators who want to know more about how Telemetry works on Windows 10 devices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related articles:&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&quot;snippet-box&quot; class=&quot;snippet-type-10&quot;&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/Article&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;snippet-image&quot; itemprop=&quot;image&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/ImageObject&quot;&gt;&lt;img width=&quot;180&quot; src=&quot;https://www.ghacks.net/wp-content/uploads/2018/11/telemetry.png&quot; alt=&quot;German federal office BSI publishes Telemetry analysis&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aio-info&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Article Name&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;headline&quot;&gt;German federal office BSI publishes Telemetry analysis&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;description&quot;&gt;The German Federal Office for Information Security published a detailed Windows 10 Telemetry analysis on November 20, 2018.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Author&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;name&quot;&gt;Martin Brinkmann&lt;/span&gt;&lt;/p&gt;

&lt;div itemprop=&quot;publisher&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/Organization&quot;&gt;
&lt;p&gt;Publisher&lt;/p&gt;
&lt;p&gt;&lt;span itemprop=&quot;name&quot;&gt;Ghacks Technology News&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Logo&lt;/p&gt;
&lt;div class=&quot;snippet-data-img publisher-logo&quot; itemprop=&quot;logo&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/ImageObject&quot;&gt;&lt;img width=&quot;180&quot; src=&quot;https://www.ghacks.net/wp-content/uploads/2005/10/ghacks-technology-news.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

Advertisement

</description>
<pubDate>Sun, 25 Nov 2018 18:19:12 +0000</pubDate>
<dc:creator>jakobdabo</dc:creator>
<og:type>article</og:type>
<og:title>German federal office BSI publishes Telemetry analysis - gHacks Tech News</og:title>
<og:description>The German Federal Office for Information Security published a detailed Windows 10 Telemetry analysis on November 20, 2018.</og:description>
<og:url>https://www.ghacks.net/2018/11/23/german-federal-office-bsi-publishes-telemetry-analysis/</og:url>
<og:image>https://www.ghacks.net/wp-content/uploads/2018/11/telemetry.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ghacks.net/2018/11/23/german-federal-office-bsi-publishes-telemetry-analysis/</dc:identifier>
</item>
<item>
<title>AI Mistakes Bus-Side Ad for Famous CEO, Charges Her With Jaywalking</title>
<link>https://www.caixinglobal.com/2018-11-22/ai-mistakes-bus-side-ad-for-famous-ceo-charges-her-with-jaywalkingdo-101350772.html?cxg=web&amp;Sfrom=twitter</link>
<guid isPermaLink="true" >https://www.caixinglobal.com/2018-11-22/ai-mistakes-bus-side-ad-for-famous-ceo-charges-her-with-jaywalkingdo-101350772.html?cxg=web&amp;Sfrom=twitter</guid>
<description>&lt;p&gt;Cities across China have debuted crime-fighting facial recognition technology to much fanfare over the past year. But some of these jaywalker-busting devices aren’t as impressive as they seem.&lt;/p&gt;
&lt;p&gt;A facial recognition system in the city of Ningbo caught &lt;a href=&quot;https://www.caixinglobal.com/2016-12-08/101024257.html&quot; target=&quot;_blank&quot;&gt;Dong Mingzhu,&lt;/a&gt; the chair of appliance-making giant Gree Electric, running a red light. Only it turned out not to be Dong, but rather an advertisement featuring her face on the side of a bus, local police said &lt;a href=&quot;https://www.weibo.com/1968066827/H3I8xdnqY?from=page_1001061968066827_profile&amp;amp;wvr=6&amp;amp;mod=weibotime&amp;amp;type=comment#_rnd1542869245007&quot; target=&quot;_blank&quot;&gt;on Weibo&lt;/a&gt; Wednesday.&lt;/p&gt;
&lt;p&gt;The police said they have upgraded their tech to avoid issues like this in the future. The real Dong, meanwhile, is &lt;a href=&quot;https://www.caixinglobal.com/2018-11-14/chairman-and-president-sued-amid-drama-at-ev-company-101346997.html&quot; target=&quot;_blank&quot;&gt;embroiled in drama&lt;/a&gt; with an electric vehicle company. &lt;/p&gt;
&lt;br /&gt;</description>
<pubDate>Sun, 25 Nov 2018 18:01:50 +0000</pubDate>
<dc:creator>breitling</dc:creator>
<og:image>http://img.caixin.com/2018-11-22/1542874685691155_560_373.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.caixinglobal.com/2018-11-22/ai-mistakes-bus-side-ad-for-famous-ceo-charges-her-with-jaywalkingdo-101350772.html?cxg=web&amp;Sfrom=twitter</dc:identifier>
</item>
<item>
<title>Everyone is totally just winging it, all the time (2014)</title>
<link>https://www.theguardian.com/news/oliver-burkeman-s-blog/2014/may/21/everyone-is-totally-just-winging-it</link>
<guid isPermaLink="true" >https://www.theguardian.com/news/oliver-burkeman-s-blog/2014/may/21/everyone-is-totally-just-winging-it</guid>
<description>&lt;p&gt;Amid the acrimony surrounding &lt;a href=&quot;https://www.theguardian.com/media/jill-abramson&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;the firing of Jill Abramson&lt;/a&gt;, executive editor of the New York Times, there's one point of near-universal consensus: the whole thing was remarkably poorly handled. (Even the Times's publisher, Arthur Sulzberger, &lt;a href=&quot;http://www.vanityfair.com/online/daily/2014/05/arthur-sulzberger-interview-jill-abramson-firing&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;seems to agree about that&lt;/a&gt;.) Whatever your views of the people involved, it seemed hard to believe: how could an institution as august and smoothly competent as the Times have stumbled so badly?&lt;/p&gt;
&lt;p&gt;There were echoes of that same incredulity in Britain this week when Ed Miliband, the Labour leader, revealed &lt;a href=&quot;http://www.telegraph.co.uk/news/politics/ed-miliband/10844063/Ed-Miliband-in-car-crash-local-radio-interview.html&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;in a car-crash of a regional radio interview&lt;/a&gt; that he didn't know who he was campaigning for there. Whether you love him, hate him, or hadn't heard of him before reading this blog post, you'd be forgiven for shaking your head. Surely the head of &lt;a href=&quot;http://ukpollingreport.co.uk/blog/uk-polling-report-average-2&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;the most popular party&lt;/a&gt; in the &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_countries_by_GDP_%28nominal%29&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;world's sixth-largest economy&lt;/a&gt; has someone to brief him on such basics?&lt;/p&gt;
&lt;p&gt;We're similarly shocked whenever authority figures who are supposed to know what they're doing make it plain that they don't, President Obama's &lt;a href=&quot;https://www.theguardian.com/world/2013/oct/21/obama-healthcare-website-problems-live&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;healthcare launch&lt;/a&gt; being probably the most serious recent example. We shouldn't really be shocked, though. Because all these stories illustrate one of the most fundamental yet still under-appreciated truths of human existence, which is this: everyone is totally just winging it, all the time.&lt;/p&gt;
&lt;p&gt;Institutions – from national newspapers to governments and politicial parties – invest an enormous amount of money and effort in denying this truth. The facades they maintain are crucial to their authority, and thus to their legitimacy and continued survival. We need them to appear ultra-competent, too, because we derive much psychological security from the belief that somewhere, in the highest echelons of society, there are some near-infallible adults in charge.&lt;/p&gt;
&lt;p&gt;In fact, though, everyone is totally just winging it.&lt;/p&gt;
&lt;p&gt;For further evidence, consult &lt;a href=&quot;http://www.reddit.com/r/AskReddit/comments/25z7dq/grownups_of_reddit_what_is_the_most_embarrassing/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;this popular Reddit thread&lt;/a&gt;, posted on Monday (I found it via &lt;a href=&quot;http://nymag.com/scienceofus/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Science of Us&lt;/a&gt;): &quot;Grown-Ups of Reddit, What is the most embarrassing thing that you should be able to do, but can’t?&quot; The short version is that nobody has much of a clue what they're doing:&lt;/p&gt;
&lt;blockquote class=&quot;quoted&quot;&gt;
&lt;div class=&quot;quoted__contents&quot;&gt;
&lt;p&gt;Basic arithmetic. Really embarrassing at work when I panic and struggle to add up two small numbers :(&lt;/p&gt;
&lt;p&gt;I'm nearly 30 years old and don't know how to tie my shoes in the normal fashion. Instead I can only do it bunny ears-style.&lt;/p&gt;
&lt;p&gt;Swim, ride a bike, drive a car.&lt;/p&gt;
&lt;p&gt;I am really bad at telling time on an analog clock, I know how it works and I can get there but I can't just glance at the clock and know the time.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've often thought of my experience of adulthood thus far as one of incrementally discovering that there's no institution, or walk of life, in which everybody isn't just winging it. Growing up, I assumed that the newspaper on the breakfast table must be assembled by people who truly knew what they were doing; then I got a job at a newspaper. Unconsciously, I transferred my assumptions of competence to (among others) people who worked in government. Then I got to know a few people who did – and who'd admit, after a pint or two, that their jobs involved staggering from crisis to crisis, concocting credible-sounding policies in cars en route to press conferences, &lt;a href=&quot;https://www.youtube.com/watch?v=p1T7QjbLye4&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;exactly as portrayed in The Thick of It&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And even &lt;em&gt;then&lt;/em&gt; I found myself assuming, self-hatingly, that this might be explained by a certain bumbling Britishness, the perverse pride we sometimes take in shambling mediocrity. Then I started working in America. Where, it turns out, everyone is totally just winging it.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;This realisation is alarming at first, but it's ultimately deeply reassuring. As the UK organisation Action for Happiness &lt;a href=&quot;http://www.actionforhappiness.org/poster-9-acceptance&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;likes to point out&lt;/a&gt;, one of the biggest causes of misery is the way we chronically &quot;compare our insides with other people's outsides&quot;. We're all mini-New York Timeses or White Houses, energetically projecting an image of calm proficiency, while inside we're improvising in a mad panic. Yet we forget (especially in &lt;a href=&quot;http://wanderingstan.com/2010-07-22/facebook-acquaintances-the-new-tv-stars&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;an era of carefully curated Facebook profiles&lt;/a&gt; and suchlike) that everyone else is doing the same thing. The only difference is that they think it's &lt;em&gt;you&lt;/em&gt; who's truly competent.&lt;/p&gt;
&lt;p&gt;I spent a while trying to think of an ingenious conclusion to this post, so as to give the appearance that I'd been confidently advancing toward it from the start. But on this occasion, more than any other, it would seem appropriate to admit that I failed.&lt;/p&gt;
&lt;p&gt;In closing, everyone is totally just winging it.&lt;br/&gt;&lt;/p&gt;


</description>
<pubDate>Sun, 25 Nov 2018 17:12:03 +0000</pubDate>
<dc:creator>mastax</dc:creator>
<og:url>http://www.theguardian.com/news/oliver-burkeman-s-blog/2014/may/21/everyone-is-totally-just-winging-it</og:url>
<og:description>Oliver Burkeman: Every time a public figure behaves with less-than-stellar competence, we're incredulous. We probably shouldn't be</og:description>
<og:image>https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2014/5/21/1400679336666/7e9e33b6-c068-42b9-bedf-522c49c4b9df-2060x1236.jpeg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;fit=crop&amp;overlay-align=bottom%2Cleft&amp;overlay-width=100p&amp;overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&amp;s=f3c5cd3110a08af4fd801e2349354170</og:image>
<og:type>article</og:type>
<og:title>Everyone is totally just winging it, all the time</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/news/oliver-burkeman-s-blog/2014/may/21/everyone-is-totally-just-winging-it</dc:identifier>
</item>
</channel>
</rss>