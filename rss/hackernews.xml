<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Sprawling Mayan network discovered under Guatemala jungle</title>
<link>http://www.bbc.com/news/world-latin-america-42916261</link>
<guid isPermaLink="true" >http://www.bbc.com/news/world-latin-america-42916261</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;A split image with one side showing an aerial look on Mayan ruins in Guatemala's northern jungle, and the other side showing a digital landscape that strips away the forest canopy to reveal structures under the ground.&quot; src=&quot;https://ichef-1.bbci.co.uk/news/320/cpsprodpb/1481B/production/_99859938_mixmayanpic.png&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Wild Blue Media/Channel 4&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The Maya city of Tikal was found to be just a fraction of an immense hidden metropolis
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Researchers have found more than 60,000 hidden Maya ruins in Guatemala in a major archaeological breakthrough.&lt;/p&gt;&lt;p&gt;Laser technology was used to survey digitally beneath the forest canopy, revealing houses, palaces, elevated highways, and defensive fortifications.&lt;/p&gt;&lt;p&gt;The landscape, near already-known Maya cities, is thought to have been home to millions more people than other research had previously suggested.&lt;/p&gt;&lt;p&gt;The researchers mapped over 810 square miles (2,100 sq km) in northern Peten.&lt;/p&gt;&lt;p&gt;Archaeologists believe the cutting-edge technology will change the way the world will see the Maya civilisation.&lt;/p&gt;&lt;p&gt;&quot;I think this is one of the greatest advances in over 150 years of Maya archaeology,&quot; said Stephen Houston, Professor of Archaeology and Anthropology at Brown University.&lt;/p&gt;&lt;p&gt;Mr Houston told the BBC that after decades of work in the archaeological field, he found the magnitude of the recent survey &quot;breathtaking&quot;. He added, &quot;I know it sounds hyperbolic but when I saw the [Lidar] imagery, it did bring tears to my eyes.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Wild Blue Media/Channel 4&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Most structures are believed to be stone platforms for pole-and-thatch homes
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Results from the research using Lidar technology, which is short for &quot;light detection and ranging&quot;, suggest that Central America supported an advanced civilisation more akin to sophisticated cultures like ancient Greece or China.&lt;/p&gt;&lt;p&gt;&quot;Everything is turned on its head,&quot; Ithaca College archaeologist Thomas Garrison told the BBC. &lt;/p&gt;&lt;p&gt;He believes the scale and population density has been &quot;grossly underestimated and could in fact be three or four times greater than previously thought&quot;.&lt;/p&gt;&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How does Lidar work?&lt;/h2&gt;&lt;p&gt;Described as &quot;magic&quot; by some archaeologists, Lidar unveils archaeological finds almost invisible to the naked eye, especially in the tropics.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;It is a sophisticated remote sensing technology that uses laser light to densely sample the surface of the earth &lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Millions of laser pulses every four seconds are beamed at the ground from a plane or helicopter&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;The wavelengths are measured as they bounce back, which is not unlike how bats use sonar to hunt&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;The highly accurate measurements are then used to produce a detailed three-dimensional image of the ground surface topography  &lt;/li&gt;
&lt;/ul&gt;&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Revolutionary treasure map&lt;/h2&gt;&lt;p&gt;The group of scholars who worked on this project used Lidar to digitally remove the dense tree canopy to create a 3D map of what is really under the surface of the now-uninhabited Guatemalan rainforest.&lt;/p&gt;&lt;p&gt;&quot;&lt;a href=&quot;http://www.nationalgeographic.com.au/history/laser-scans-reveal-maya-megalopolis-below-guatemalan-jungle.aspx&quot; class=&quot;story-body__link-external&quot;&gt;Lidar is revolutionising archaeology&lt;/a&gt; the way the Hubble Space Telescope revolutionised astronomy,&quot; Francisco Estrada-Belli, a Tulane University archaeologist, told National Geographic. &quot;We'll need 100 years to go through all [the data] and really understand what we're seeing.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Wild Blue Media/Channel 4&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The Lidar images have surprised surveyors
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Archaeologists excavating a Maya site called El Zotz in northern Guatemala, painstakingly mapped the landscape for years. But the Lidar survey revealed kilometres of fortification wall that the team had never noticed before.&lt;/p&gt;&lt;p&gt;&quot;Maybe, eventually, we would have gotten to this hilltop where this fortress is, but I was within about 150 feet of it in 2010 and didn't see anything,&quot; Mr Garrison told Live Science.&lt;/p&gt;&lt;p&gt;While Lidar imagery has saved archaeologists years of on-the-ground searching, the BBC was told that it also presents a problem. &lt;/p&gt;&lt;p&gt;&quot;The tricky thing about Lidar is that it gives us an image of 3,000 years of Mayan civilisation in the area, compressed,&quot; explained Mr Garrison, who is part of a consortium of archaeologists involved in the recent survey. &lt;/p&gt;&lt;p&gt;&quot;It's a great problem to have though, because it gives us new challenges as we learn more about the Maya.&quot;&lt;/p&gt;&lt;p&gt;In recent years Lidar technology has also been used to reveal previously hidden cities near the iconic ancient temple of Angkor Wat in Cambodia.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Hidden insights&lt;/h2&gt;&lt;p&gt;Maya civilisation, at its peak some 1,500 years ago, covered an area about twice the size of medieval England, with an estimated population of around five million.&lt;/p&gt;&lt;p&gt;&quot;With this new data it's no longer unreasonable to think that there were 10 to 15 million people there,&quot; said Mr Estrada-Belli, &quot;including many living in low-lying, swampy areas that many of us had thought uninhabitable.&quot;&lt;/p&gt;&lt;p&gt;Most of the 60,000 newly identified structures are thought to be stone platforms that would have supported the average pole-and-thatch Maya home. &lt;/p&gt;&lt;p&gt;The archaeologists were struck by the &quot;incredible defensive features&quot;, which included walls, fortresses and moats. &lt;/p&gt;&lt;p&gt;They showed that the Maya invested more resources into defending themselves than previously thought, Mr Garrison said.&lt;/p&gt;&lt;p&gt;One of the hidden finds is a seven-storey pyramid so covered in vegetation that it practically melts into the jungle.&lt;/p&gt;&lt;p&gt;Another discovery that surprised archaeologists was the complex network of causeways linking all the Maya cities in the area. The raised highways, allowing easy passage even during rainy seasons, were wide enough to suggest they were heavily trafficked and used for trade. &lt;/p&gt;&lt;p&gt;&quot;The idea of seeing a continuous landscape, but understanding everything is connected across many square miles is amazing,&quot; said Mr Houston. &lt;/p&gt;&lt;p&gt;&quot;We can expect many further surprises,&quot; he added. &lt;/p&gt;&lt;p&gt;The Lidar survey was the first part of a three-year project led by a Guatemalan organisation that promotes cultural heritage preservation. It will eventually map more than 5,000 sq miles (14,000 sq km) of Guatemala's lowlands.&lt;/p&gt;&lt;p&gt;The project's discoveries will feature in a Channel 4 programme called Lost Cities of the Maya: Revealed, airing in the UK on Sunday 11 February at 20:00 GMT.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Wild Blue Media/Channel 4&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Some sites could not be seen under the jungle foliage
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Wild Blue Media/Channel 4&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    But Lidar technology revealed an undiscovered seven-storey pyramid
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;</description>
<pubDate>Fri, 02 Feb 2018 15:31:48 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:title>Sprawling Maya cities uncovered by lasers</og:title>
<og:type>article</og:type>
<og:description>Latest technology reveals a network of more than 60,000 structures under Guatemala's jungle.</og:description>
<og:url>http://www.bbc.com/news/world-latin-america-42916261</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/1481B/production/_99859938_mixmayanpic.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.com/news/world-latin-america-42916261</dc:identifier>
</item>
<item>
<title>Family fun with deepfakes</title>
<link>http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/</link>
<guid isPermaLink="true" >http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/</guid>
<description>&lt;p&gt;&lt;img data-attachment-id=&quot;1181&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/elke3/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke3.gif&quot; data-orig-size=&quot;480,270&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;elke3&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke3-300x169.gif&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke3.gif&quot; class=&quot;aligncenter size-full wp-image-1181&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke3.gif&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;270&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[Also on &lt;a href=&quot;https://medium.com/@svencharleer/a4454775c011&quot;&gt;Medium&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I’ve first heard of deepfakes a good week ago. Thanks Twitter. Thanks Tim Soret.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;There’s something called Deepfakes on internet, and it’s the most cyberpunk shit you can imagine. Machine learning used to swap porn actresses faces with hollywood stars. Obviously NFSW.&lt;/p&gt;
&lt;p&gt;— timsoret 👁 (@timsoret) &lt;a href=&quot;https://twitter.com/timsoret/status/955869886735114240?ref_src=twsrc%5Etfw&quot;&gt;January 23, 2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, it’s pretty damn cyberpunk. But from a superficial point of view, &lt;a href=&quot;https://www.reddit.com/r/deepfakes/&quot;&gt;/r/deepfakes&lt;/a&gt; (extremely NSFW! You have been warned) consists of people using an app created by user “deepfakes” to create fake celebrity porn.&lt;/p&gt;
&lt;p&gt;This has caused a shitstorm on the Internet, media discussing the &lt;a href=&quot;https://www.wired.com/story/face-swap-porn-legal-limbo/&quot;&gt;legality of it all&lt;/a&gt;, &lt;a href=&quot;https://www.theverge.com/2018/1/31/16956460/gfycat-ai-generated-fake-porn-deepfakes-subreddit-reddit&quot;&gt;websites taking down&lt;/a&gt; the deepfake creations, and people panicking as they realise AI is going to screw us all up (newsflash: it’s already been happening &lt;a href=&quot;https://www.theguardian.com/technology/2017/may/22/social-media-election-facebook-filter-bubbles&quot;&gt;in much less obvious ways&lt;/a&gt;). And meanwhile, &lt;a href=&quot;http://www.digitalspy.com/movies/news/a848882/put-nicolas-cage-in-any-film-fakeapp-deepfakes-subreddit-reddit/&quot;&gt;Nicolas Cage is taking over Hollywood&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While everyone’s debating whether this is good or bad, I just had to find out more. First thing that came into my mind? How can I apply this to everyone I know (in a non-porn way, in case you wondered).&lt;/p&gt;
&lt;h3&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;The deepfakes app is a deep learning algorithm that learns how to reconstruct faces. Give it a bunch of pictures, let it run a few hours, and it spits out fuzzy copies of those images. Do note, it doesn’t create a copy. It learns what a face looks like, in different expressions, and is able to output that face solely based on that. There’s a detailed explanation on &lt;a href=&quot;https://www.reddit.com/r/deepfakes/comments/7pgcg4/detailed_explanation_of_the_algorithm/&quot;&gt;Reddit&lt;/a&gt; but let me try and dumb it down.&lt;/p&gt;
&lt;p&gt;Think of it like this: imagine if you could stare at someone for 12 hours straight, observing all their expressions and absorbing that into your brain. Then that person asks you to sketch his face on paper, smiling, crying, any expression you’ve observed. What do you do? You immediately generate a photographic quality sketch on paper, from the mind! (using a pencil)&lt;/p&gt;
&lt;p&gt;It’s insane!&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1177&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/deepfake_step1/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step1.png&quot; data-orig-size=&quot;123,528&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;deepfake_step1&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step1-70x300.png&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step1.png&quot; class=&quot;aligncenter size-full wp-image-1177&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step1.png&quot; alt=&quot;&quot; width=&quot;123&quot; height=&quot;528&quot; srcset=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step1.png 123w, http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step1-70x300.png 70w&quot; sizes=&quot;(max-width: 123px) 100vw, 123px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;While that’s pretty cool, it only gets better. See that “encoder” part? The FakeApp uses one encoder for all faces. It’s the decoder that’s kept face specific. And here comes the really cool part. Let it learn two faces, and things become more interesting.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1178&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/deepfake_step2/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2.png&quot; data-orig-size=&quot;493,528&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;deepfake_step2&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2-280x300.png&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2.png&quot; class=&quot;aligncenter size-full wp-image-1178&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2.png&quot; alt=&quot;&quot; width=&quot;493&quot; height=&quot;528&quot; srcset=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2.png 493w, http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2-280x300.png 280w&quot; sizes=&quot;(max-width: 493px) 100vw, 493px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Right, now see how this works. The encoder takes an image of a face, let’s it run through its “brain”, and the decoder spits it out again. In the example above, it can do so with faces of Anne Hathaway, and Elke, my wife. Ok, so far so good. But now let’s feed it a picture of Anne, but use the decoder that generates Elke’s face!&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1179&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/deepfake_step3/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step3.png&quot; data-orig-size=&quot;493,523&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;deepfake_step3&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step3-283x300.png&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step3.png&quot; class=&quot;aligncenter size-full wp-image-1179&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step3.png&quot; alt=&quot;&quot; width=&quot;493&quot; height=&quot;523&quot; srcset=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step3.png 493w, http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step3-283x300.png 283w&quot; sizes=&quot;(max-width: 493px) 100vw, 493px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You just created a new photo of Elke. A photo that never existed, in the same angle, the same expression, as Anne! Amazing!&lt;/p&gt;
&lt;h3&gt;Family fun&lt;/h3&gt;
&lt;p&gt;Sure, putting celebrities’ faces on your favorite porn stars is an interesting use case. But we can leverage these celebrities for other things, such as inserting your friends and family into blockbuster movies and shows!&lt;/p&gt;
&lt;p&gt;For the best result, you must first find an actor/actress that has a similar head shape as the person you wish to insert. In case of Elke (my wife) I accidentally noticed, while watching the Dark Knight Rises, that Anne Hathaway might be a good fit. I guess you know Anne, so here’s Elke:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1182&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/img_1847/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847.jpg&quot; data-orig-size=&quot;1280,853&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;IMG_1847&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847-300x200.jpg&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847-1024x682.jpg&quot; class=&quot;size-medium wp-image-1182 alignnone&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847-300x200.jpg&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;200&quot; srcset=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847-300x200.jpg 300w, http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847-1024x682.jpg 1024w, http://svencharleer.com/blog/wp-content/uploads/2018/02/IMG_1847.jpg 1280w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;All I needed was about 850 photos of Elke, a few 1000 of Anne, a lot of computing time, et voila: Elke’s on the Tonight Show starring Jimmy Fallon.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1174&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/elke2/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke2.gif&quot; data-orig-size=&quot;320,180&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;elke2&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke2-300x169.gif&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke2.gif&quot; class=&quot;size-full wp-image-1174 alignnone&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke2.gif&quot; alt=&quot;&quot; width=&quot;320&quot; height=&quot;180&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Bonus effect: now we know what Elke looks like with short hair :D&lt;/p&gt;
&lt;p&gt;Here’s a little comparison gif:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1169&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/anne-2/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/anne-1.gif&quot; data-orig-size=&quot;320,180&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;anne&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/anne-1-300x169.gif&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/anne-1.gif&quot; class=&quot;size-full wp-image-1169&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/anne-1.gif&quot; alt=&quot;&quot; width=&quot;320&quot; height=&quot;180&quot;/&gt;&lt;img data-attachment-id=&quot;1170&quot; data-permalink=&quot;http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/elke-2/&quot; data-orig-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke-1.gif&quot; data-orig-size=&quot;320,180&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;elke&quot; data-image-description=&quot;&quot; data-medium-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke-1-300x169.gif&quot; data-large-file=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke-1.gif&quot; class=&quot;size-full wp-image-1170 style=&quot; src=&quot;http://svencharleer.com/blog/wp-content/uploads/2018/02/elke-1.gif&quot; alt=&quot;&quot; width=&quot;320&quot; height=&quot;180&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I personally think it’s fun, can be innocent, and even makes for a nice surprise/gift. Remember, any tool can be used for evil. And as long as we’re not banning guns, this should not be a high priority, amirite?&lt;/p&gt;
&lt;p&gt;There’s so much you can do with this technology. You know those dumb emails people send around where they replaced dancing elves heads with their own, or even worse, yours? Well, now you can put your best friend into his favourite movie: have her dance with Patrick Swayze and have the time of her life, or have an alien burst out of his stomach. It’s all within your reach now!&lt;/p&gt;
&lt;p&gt;Beyond just pure fun, I can only imagine how people will start turning this tech into business ideas. Fashion will be huge (what would I look like with this kind of hair, this kind of dress…), fitness could be interesting (do I look good with muscles, will I really look better skinny), travel (this is you standing on a beach is going to be quite convincing). It’ll bring advertising to a whole new level. No need to imagine what if, they’ll tell you what your “better” life will look like! And it’ll be hard to get that picture out of your head…&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Also published on &lt;a href=&quot;https://medium.com/@svencharleer/a4454775c011&quot;&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Fri, 02 Feb 2018 15:10:23 +0000</pubDate>
<dc:creator>robinhouston</dc:creator>
<og:type>article</og:type>
<og:title>Family fun with deepfakes. Or how I got my wife onto the Tonight Show</og:title>
<og:url>http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/</og:url>
<og:description>[Also on Medium] I’ve first heard of deepfakes a good week ago. Thanks Twitter. Thanks Tim Soret. There’s something called Deepfakes on internet, and it’s the most cyberpunk shit …</og:description>
<og:image>http://svencharleer.com/blog/wp-content/uploads/2018/02/deepfake_step2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://svencharleer.com/blog/2018/02/02/family-fun-with-deepfakes-or-how-i-got-my-wife-onto-the-tonight-show/</dc:identifier>
</item>
<item>
<title>Solving Minesweeper and making it better (2015)</title>
<link>http://magnushoff.com/minesweeper/</link>
<guid isPermaLink="true" >http://magnushoff.com/minesweeper/</guid>
<description>&lt;p&gt;Minesweeper is a simple game with simple rules, yet some configurations yield interesting challenges. In this article, we will develop a Minesweeper solver of increasing refinement, and discuss how the game dynamics develop as we employ the increasingly advanced help. In the end, we will develop a new variant of the game which has more interesting gameplay.&lt;/p&gt;
&lt;h2&gt;Local reasoning: Zero adjacent mines&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_Minesweeper&quot;&gt;original game&lt;/a&gt; employs one automatic mechanism: When you reveal a square that has zero adjacent mines, all the adjacent squares are revealed by the game engine. This trivially has no risk, so it is safe to let the computer do it, and it is trivially obvious to the player that this is the case, so it should not ruin any fun to do it.&lt;/p&gt;
&lt;p&gt;This reasoning is entirely local: information from only one square is used to determine which action to take next.&lt;/p&gt;
&lt;p&gt;It is hard to make the case that the game would be better without this automatic help. Try the following game to get a feel for how it acts when there is no automatic reveal:&lt;/p&gt;
&lt;div class=&quot;center&quot;&gt;

&lt;div&gt;Mines left: &lt;span class=&quot;mines-left&quot; data-for=&quot;no-auto&quot;&gt;10&lt;/span&gt;&lt;p&gt;&lt;button class=&quot;rule&quot; data-toggle-rule=&quot;autoExploreZero&quot; data-for=&quot;no-auto&quot;&gt;Automatic reveal&lt;/button&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Local with surroundings&lt;/h2&gt;
&lt;p&gt;It shouldn't take long for a new player to realize that when the number of adjacent mines—that is, the number shown on the square—is the same as the number of adjacent unrevealed squares, all of those squares must be mines, so they can be marked as such. Similarly, when the number of adjacent mines equals the number of adjacent flags, the remaining adjacent unrevealed squares must be safe.&lt;/p&gt;
&lt;p&gt;These rules take into account one square and whether or not adjacent squares are revealed or flagged.&lt;/p&gt;
&lt;p&gt;Performing these rules manually can be entertaining. Combined with a timer, you train to be able to execute these rules quickly and accurately. This makes Minesweeper a &lt;a href=&quot;http://en.wikipedia.org/wiki/Twitch_gameplay&quot;&gt;twitch game&lt;/a&gt;. So what happens if we automate these rules?&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;6&quot;&gt;

&lt;div readability=&quot;7&quot;&gt;Mines left: &lt;span class=&quot;mines-left&quot; data-for=&quot;auto-flag-and-reveal&quot;&gt;40&lt;/span&gt;&lt;p&gt;&lt;button class=&quot;rule checked&quot; data-toggle-rule=&quot;autoFlag&quot; data-for=&quot;auto-flag-and-reveal&quot;&gt;Automatic flagging&lt;/button&gt;&lt;br/&gt;&lt;button class=&quot;rule checked&quot; data-toggle-rule=&quot;autoExplore&quot; data-for=&quot;auto-flag-and-reveal&quot;&gt;Automatic reveal&lt;/button&gt;&lt;br/&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;One interesting side effect of making this automatic is that placing a flag in the wrong place can now be an immediately fatal mistake.&lt;/p&gt;
&lt;p&gt;For the rest of the game, we are left with situations that fall into three categories:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Games that are completely resolved by the automatic rules&lt;/li&gt;
&lt;li&gt;Elaborate situations that require reasoning involving more squares&lt;/li&gt;
&lt;li&gt;Game states that have no logical way forward—the player is left with no recourse other than to guess at random, maybe weighted by probability&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;While situation 1 above is kind of neat, it is hardly satisfying to play many such games. Would those games have been better without the automatic resolution? Maybe not; such games are very straightforward even when you solve them manually, and it is not very satisfying to win at games where you have not felt challenged. Of course, for a twitch game there is always some challenge in acting more quickly.&lt;/p&gt;
&lt;p&gt;I find situation 2 very satisfying. We get to focus more on resolving logical requirements and less on accurately aiming and clicking the correct buttons. This makes Minesweeper more of a &lt;a href=&quot;http://en.wikipedia.org/wiki/Puzzle_video_game#Action_puzzle&quot;&gt;puzzle game&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Situation 3, however, completely ruins the fun. Although I have heard about people that like to play &lt;a href=&quot;http://en.wikipedia.org/wiki/Game_of_chance&quot;&gt;games of chance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Can we eliminate situation 3?&lt;/p&gt;
&lt;h2&gt;Complete solution: Global reasoning&lt;/h2&gt;
&lt;p&gt;To algorithmically discover all logical necessities from the game state, we have to resort to exhaustive search of all game states. &lt;a href=&quot;http://web.mat.bham.ac.uk/R.W.Kaye/minesw/ordmsw.htm&quot;&gt;Minesweeper is actually proven to be NP-complete&lt;/a&gt;. The following is a small, but interesting and illustrative example of a game state that has only one logical solution, but you need to take into account the entire game state to find it:&lt;/p&gt;

&lt;p&gt;Is it feasible to search the entire game state space? How many possible states, &lt;em&gt;s&lt;/em&gt;, are there?&lt;/p&gt;
&lt;p&gt;Given&lt;/p&gt;
&lt;div role=&quot;math&quot; class=&quot;center&quot;&gt;
&lt;table class=&quot;math-definitions&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;em&gt;w&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;= the width of the board&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;em&gt;h&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;= the height of the board&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;em&gt;k&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;= the number of mines&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;splitter&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;em&gt;n&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;= &lt;em&gt;w&lt;/em&gt; · &lt;em&gt;h&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Then the number of possible states, &lt;em&gt;s&lt;/em&gt;, is&lt;/p&gt;

&lt;p&gt;For the standard beginner, intermediate and expert configurations, this works out to:&lt;/p&gt;
&lt;div role=&quot;math&quot; class=&quot;center&quot;&gt;
&lt;table class=&quot;math-definitions&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;beginner&lt;/sub&gt; =&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;= 151 473 214 816&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;intermediate&lt;/sub&gt; =&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;= 1.050 · 10&lt;sup&gt;47&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;expert&lt;/sub&gt; =&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;= 5.602 · 10&lt;sup&gt;104&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;That's a solid &quot;no&quot;, the naive approach is out the window. Let's examine what the naive algorithm would have been and see if we can optimize it into something workable.&lt;/p&gt;
&lt;h3&gt;The naive algorithm&lt;/h3&gt;
&lt;p&gt;The goal for the algorithm is to find all logical necessities from a given board state. It is tricky to reason about this in a smart way; the computer is better at doing lots of stupid things quickly.&lt;/p&gt;
&lt;p&gt;What we can do stupidly, is to generate all possible permutations of mine positions for all the remaining mines. If such a permutation fits with all the revealed numbers it could be the correct solution for the game. When we explore all the possible permutations, we find all possible solutions, but we still do not know which is the correct one.&lt;/p&gt;
&lt;p&gt;If there is something in common, either open squares or squares marked as mines, between all the possible solutions, we know that this must be a part of the correct solution for the current board. It is indeed impossible to create a sound solution that does not have this in common, or else we would have discovered it.&lt;/p&gt;
&lt;p&gt;This way, we can find all the logical necessities from the current board state.&lt;/p&gt;
&lt;h3&gt;Constrained and unconstrained squares&lt;/h3&gt;
&lt;p&gt;The immediate problem with the above algorithm is the number of states it has to explore, as calculated above. But not all squares are the same. The unrevealed squares that are adjacent to a number are obviously constrained by this number. We will call these squares the constrained squares. We will call the remaining squares the unconstrained squares.&lt;/p&gt;
&lt;p&gt;If we implement the above algorithm but only search the state space of the constrained squares, and we make sure to backtrack as soon as we violate a constraint, we can resolve all logical requirements in a reasonable amount of time for many games:&lt;/p&gt;

&lt;p&gt;For the unconstrained squares we have no way of knowing where the mines go, and we know this logically up front. This means we can remove them from the calculation and only consider the placement of mines adjacent to revealed numbers.&lt;/p&gt;
&lt;p&gt;However, we do know that some amount of mines can go into the set of unconstrained squares; if there are 6 mines and 4 constrained squares, at most 4 mines go in the constrained squares, hence at least 2 mines go in the unconstrained squares. By similar logic we can sometimes determine that all the unconstrained squares must be empty or that all of them have mines.&lt;/p&gt;
&lt;p&gt;For the following case, we know the position of all the mines, so the AI should be able to realize that the remaining squares are unoccupied:&lt;/p&gt;
&lt;div class=&quot;center&quot;&gt;

&lt;div&gt;Mines left: &lt;span class=&quot;mines-left&quot; data-for=&quot;global-solver-case-1&quot;&gt;0&lt;/span&gt;&lt;p&gt;&lt;button class=&quot;execute-global-solver&quot; data-for=&quot;global-solver-case-1&quot;&gt;Run AI&lt;/button&gt;&lt;br/&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For the next case, we don't know the position of all the mines, but we can tell that we need to place the remaining mine in one of the two upper left squares. This means that the remaining square in the lower right corner is free:&lt;/p&gt;
&lt;div class=&quot;center&quot;&gt;

&lt;div&gt;Mines left: &lt;span class=&quot;mines-left&quot; data-for=&quot;global-solver-case-2&quot;&gt;1&lt;/span&gt;&lt;p&gt;&lt;button class=&quot;execute-global-solver&quot; data-for=&quot;global-solver-case-2&quot;&gt;Run AI&lt;/button&gt;&lt;br/&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;The chance version&lt;/h3&gt;
&lt;p&gt;If we automatically execute the global solver, we get the chance optimized version of Minesweeper:&lt;/p&gt;

&lt;p&gt;We can kind of divide the games in this version into three categories:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Games where you make some arbitrary choices, and you win&lt;/li&gt;
&lt;li&gt;Games where you make some arbitrary choices, and you lose&lt;/li&gt;
&lt;li&gt;Games where the AI takes a long time to execute, and you can actually do some reasoning&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This is clearly a game of chance. What is the allure of such games? In a logical sense, the above game is similar to the following one:&lt;/p&gt;

&lt;p&gt;But which is the better chance game? It seems that other games of chance make a point of having an elaborate connection between your actions and whether or not you win. Drawings of lottery numbers use complicated machines that deliberately take time to select a number and make a show of which number is chosen.&lt;/p&gt;
&lt;p&gt;Maybe the large board that is automatically resolved is a somewhat good chance game, given the show of watching all the squares be revealed.&lt;/p&gt;
&lt;p&gt;Can we make another type of game?&lt;/p&gt;
&lt;h3&gt;The deterministic version&lt;/h3&gt;
&lt;p&gt;We now have an AI that can determine what all the logical steps from a given game state is. Sometimes it will find no logical steps. These are the situations where the player has to guess and may lose the game because of bad luck.&lt;/p&gt;
&lt;p&gt;What if we add a new rule? When the game has no logical way forward, you can ask for help. If the AI agrees that there is nothing you can do, you get help. Otherwise, you immediately lose the game. This could be interesting. What should the help be? Maybe that you get to reveal one square regardless of whether or not it holds a mine:&lt;/p&gt;

&lt;p&gt;At this point, we have truly gotten rid of the game forcing you into situations where you can lose by chance.&lt;/p&gt;
&lt;p&gt;There is only one exception to this, namely that it is still possible to get into degenerate situations for which the global solver will not finish evaluating in a reasonable amount of time. This is unfortunately an unescapable result of the problem being NP-complete, as noted above.&lt;/p&gt;
&lt;p&gt;How does the &quot;Request help&quot; button affect the gameplay? It makes for a logically focused game; this is the ultimate puzzle game variant of Minesweeper. One might think that the game would become easier, but instead it gets harder. You no longer have any excuse to make mistakes, and the button is sure to call you out on anything you might have missed. Without the button it is easy to come to the conclusion that you have exhausted all logical possibilities and the only course of action is to guess randomly. With the button, you have to be correct in this assessment.&lt;/p&gt;
&lt;h2&gt;Concluding remarks&lt;/h2&gt;
&lt;p&gt;By implementing a full solver for Minesweeper, we were able to develop a variant of the game that gets rid of the bane of Minesweeper; when you risk losing the game randomly after you have invested time and thought into solving almost all of the board. This version is different from the original only in the situations that would require random guessing, so I would suggest that this version is strictly more fun than the original game.&lt;/p&gt;
&lt;p&gt;We also developed a variant that will automatically resolve the simple local rules. Whether or not you employ this help is more a matter of taste. It shifts the focus of the game to be less mechanical and more puzzle focused, and is not necessary for getting the improved gameplay that the &quot;Request help&quot; button gives.&lt;/p&gt;
</description>
<pubDate>Fri, 02 Feb 2018 14:06:46 +0000</pubDate>
<dc:creator>maggit</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://magnushoff.com/minesweeper/</dc:identifier>
</item>
<item>
<title>John Hennessy named chairman of Alphabet/Google</title>
<link>https://www.spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/from-stanford-university-president-to-chairman-of-alphabetgoogle</link>
<guid isPermaLink="true" >https://www.spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/from-stanford-university-president-to-chairman-of-alphabetgoogle</guid>
<description>&lt;img src=&quot;https://www.spectrum.ieee.org/image/MzAxNDg5OQ.jpeg&quot; alt=&quot;Former IEEE Medal of Honor winner John Hennessy.&quot;/&gt; Photo: Gabriela Hasbun
&lt;section id=&quot;side-module&quot;&gt;&lt;div class=&quot;medium-top-ad&quot;&gt;
&lt;div class=&quot;ad-module&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;recommended-side&quot; readability=&quot;8.5&quot;&gt;
&lt;p&gt;Editor’s Picks&lt;/p&gt;
&lt;div id=&quot;article-rec&quot; readability=&quot;37&quot;&gt;
&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://www.spectrum.ieee.org/image/MjUwODkyMw.jpeg&quot; width=&quot;140&quot; height=&quot;140&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Post-Snowden, Silicon Valley Execs Give U.S. Cyberpolicy a D-minus&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://www.spectrum.ieee.org/image/MjQzODIwNg.jpeg&quot; width=&quot;140&quot; height=&quot;140&quot; alt=&quot;Photo of John L. Hennessy&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;John L. Hennessy: Risk Taker&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://www.spectrum.ieee.org/image/MjUxMDA5OQ.jpeg&quot; width=&quot;140&quot; height=&quot;140&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Silicon Valley Luminaries Predict Next Big Thing&lt;/h4&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;p&gt;When John Hennessy announced in 2015 that he was stepping down as president of Stanford University the following year, &lt;a href=&quot;https://www.bizjournals.com/sanjose/news/2015/06/11/john-hennessy-stepping-down-as-stanford-president.html&quot;&gt;he said&lt;/a&gt;, &quot;The time has come to return to what brought me to Stanford—teaching and research.&quot;&lt;/p&gt;&lt;p&gt;Turns out, you can’t keep a guy like Hennessy down on &lt;a href=&quot;https://www.stanford.edu/campus-life/stanford-speak/&quot;&gt;The Farm&lt;/a&gt;, at least in that small of a corral. Hennessy this week was &lt;a href=&quot;http://fortune.com/2018/02/01/alphabet-google-john-hennessy/&quot;&gt;named the new chairman of Alphabet&lt;/a&gt;, the parent company of Google. Eric Schmidt, who joined Google as CEO in 2001 to provide “adult supervision,” announced in December that he was stepping down.&lt;/p&gt;
&lt;p&gt;Hennessy, meanwhile, has been on the &lt;a href=&quot;https://abc.xyz/&quot;&gt;Google/Alphabet&lt;/a&gt; board since 2004. He also serves as a director at &lt;a href=&quot;https://www.cisco.com/&quot;&gt;Cisco Systems&lt;/a&gt;, &lt;a href=&quot;http://www.danielpearl.org/&quot;&gt;the Daniel Pearl Foundation&lt;/a&gt;, and &lt;a href=&quot;https://www.moore.org/&quot;&gt;the Gordon and Betty Moore Foundation&lt;/a&gt;. But his main gig over the decades has been as a professor—and then dean of engineering, provost, and president before going back to professor—at &lt;a href=&quot;https://www.stanford.edu/&quot;&gt;Stanford University&lt;/a&gt;. (He’s also heading up the &lt;a href=&quot;http://kh.stanford.edu&quot;&gt;Knight-Hennessy Scholars&lt;/a&gt;, a new program aimed at funding graduate students trying to help the world.)&lt;/p&gt;
&lt;p&gt;I’ve spoken to Hennessy a number of times over the years as his career evolved—always a great interview, for Hennessy is known for his sense of humor, and his willingness to be blunt on occasion. A pioneer in reduced-instruction-set computing (RISC), &lt;a href=&quot;https://www.spectrum.ieee.org/geek-life/profiles/risc-maker&quot;&gt;Hennessy told me in 2002&lt;/a&gt; that his “career parallels the coming of age of computer science.”&lt;/p&gt;
&lt;p&gt;Hennessy built his first computer, a machine that played tic-tac-toe, back in the 1960s, when he was 16. As a Stanford professor in the early 1980s, Hennessy worked with Forest Baskett and Jim Clark on the chip that became the Geometry Engine and launched &lt;a href=&quot;https://en.wikipedia.org/wiki/Silicon_Graphics&quot;&gt;Silicon Graphics&lt;/a&gt;. He then designed a VLSI chip that proved the concept of the RISC architecture and helped launch &lt;a href=&quot;https://en.wikipedia.org/wiki/MIPS_Technologies&quot;&gt;MIPS Computer Systems&lt;/a&gt; to commercialize the technology.  He also helped start &lt;a href=&quot;https://www.qualcomm.com/news/releases/2011/01/05/qualcomm-acquire-atheros-leader-connectivity-networking-solutions&quot;&gt;Atheros Communications&lt;/a&gt;, now part of Qualcomm, and wrote several books.&lt;/p&gt;
&lt;p&gt;In the current vernacular, this is a guy who has always had a side hustle. And while he took short sabbaticals, or sometime dialed back his Stanford job to a more part-time commitment, he never actually left Stanford, moving between teaching and administration, and becoming president in 2000. As president, he set out to shake up higher education by focusing on remote learning over the Internet. He told me about &lt;a href=&quot;https://www.spectrum.ieee.org/geek-life/profiles/john-l-hennessy-risk-taker&quot;&gt;these plans&lt;/a&gt; in detail in 2012.&lt;/p&gt;
&lt;p&gt;Hennessy stepped down as president—and back into his former post as a professor—in 2016. He &lt;a href=&quot;https://www.spectrum.ieee.org/geek-life/profiles/risc-maker&quot;&gt;said in 2002&lt;/a&gt;, shortly after taking the job, that &quot;the great thing about being a university president is you can keep that most wonderful of titles—professor. So you are able to go back to teaching and working with students.”&lt;/p&gt;
&lt;p&gt;And perhaps a side hustle or two—like the chairmanship of Alphabet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Updated 2 February 2018&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 02 Feb 2018 02:12:20 +0000</pubDate>
<dc:creator>teklaperry</dc:creator>
<og:title>From Stanford University President to Chairman of Alphabet/Google</og:title>
<og:url>https://spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/from-stanford-university-president-to-chairman-of-alphabetgoogle</og:url>
<og:description>RISC pioneer John Hennessy’s side hustle gets serious</og:description>
<og:image>https://spectrum.ieee.org/image/MzAxNDkzMA.jpeg</og:image>
<og:type>blog-view-from-the-valley</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/from-stanford-university-president-to-chairman-of-alphabetgoogle</dc:identifier>
</item>
<item>
<title>Firefox 59 to strip path information from referrer values for 3rd parties</title>
<link>https://blog.mozilla.org/security/2018/01/31/preventing-data-leaks-by-stripping-path-information-in-http-referrers/</link>
<guid isPermaLink="true" >https://blog.mozilla.org/security/2018/01/31/preventing-data-leaks-by-stripping-path-information-in-http-referrers/</guid>
<description>&lt;p&gt;To help prevent third party data leakage while browsing privately, Firefox Private Browsing Mode will remove path information from referrers sent to third parties starting in Firefox 59.&lt;/p&gt;
&lt;h2&gt;Referrers can leak sensitive data&lt;/h2&gt;
&lt;div id=&quot;attachment_2288&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;https://www.eff.org/files/2015/01/20/hc_gov_requests.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-2288 size-large&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/security/files/2018/01/hc_gov_requests-600x65.png&quot; alt=&quot;Screenshot of healthcare.gov requests. Source: EFF&quot; width=&quot;600&quot; height=&quot;65&quot; srcset=&quot;https://blog.mozilla.org/security/files/2018/01/hc_gov_requests-600x65.png 600w, https://blog.mozilla.org/security/files/2018/01/hc_gov_requests-252x27.png 252w, https://blog.mozilla.org/security/files/2018/01/hc_gov_requests-768x83.png 768w, https://blog.mozilla.org/security/files/2018/01/hc_gov_requests.png 1525w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;An example of personal health data being sent to third parties from healthcare.gov. Source: &lt;a href=&quot;https://www.eff.org/deeplinks/2015/01/healthcare.gov-sends-personal-data&quot;&gt;EFF&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When you click a link in your browser to navigate to a new site, the new site you visit receives the exact address of the site you came from through the so-called “Referrer value”. For example, if you came to this Mozilla Security Blog from reddit.com, the browser would send blog.mozilla.org this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Referer: https://www.reddit.com/r/privacy/comments/Preventing_data_leaks_by_stripping_path_information_in_HTTP_Referrers/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This leaks user data to websites, telling websites the exact page you were looking at when you clicked the link. To make things worse, browsers also send a referrer value when requesting sub-resources, like ads, or other social media snippets integrated in a modern web site. In other words, embedded content also knows exactly what page you are visiting&lt;/p&gt;
&lt;p&gt;Most sites log this data for operational and statistical purposes. Many sites also log this data to collect as much information about their users as possible.  They can then use that data for a variety of purposes, or even sell that data – e.g., for re-targeting.&lt;/p&gt;
&lt;p&gt;While the data above may not be a problem, consider this example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Referer: https://www.&lt;br/&gt;healthcare.gov/see-plans/85601/results/?county=04019&amp;amp;age=40&amp;amp;smoker=1&amp;amp;pregnant=1&amp;amp;zip=85601&amp;amp;state=AZ&amp;amp;income=35000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;EFF researchers discovered this &lt;a href=&quot;https://www.eff.org/deeplinks/2015/01/healthcare.gov-sends-personal-data&quot;&gt;leak of personal health data from healthcare.gov to DoubleClick&lt;/a&gt;. As indicated, the referrer in this case leaks information about your age, your zip code, whether you are a smoker or not, and potentially even your income. Other companies (&lt;a href=&quot;https://blogs.dropbox.com/dropbox/2014/05/web-vulnerability-affecting-shared-links/&quot;&gt;link1&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/notes/facebook-engineering/protecting-privacy-with-referrers/392382738919&quot;&gt;link2&lt;/a&gt;) have disclosed similar vulnerabilities and leaks.&lt;/p&gt;
&lt;h2 role=&quot;note&quot;&gt;Private Browsing will strip paths in HTTP referrers&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large wp-image-2289&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/security/files/2018/01/fx-pbm-600x488.png&quot; alt=&quot;Screenshot: Firefox Private Browsing window&quot; width=&quot;600&quot; height=&quot;488&quot; srcset=&quot;https://blog.mozilla.org/security/files/2018/01/fx-pbm-600x488.png 600w, https://blog.mozilla.org/security/files/2018/01/fx-pbm-252x205.png 252w, https://blog.mozilla.org/security/files/2018/01/fx-pbm-768x624.png 768w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To prevent this type of data leakage when Firefox users are browsing privately, we are changing the way Firefox sends referrers in Private Browsing Mode.&lt;/p&gt;
&lt;p&gt;Starting with Firefox 59, Private Browsing will remove path information from referrer values sent to third parties (i.e. technically, setting a Referrer Policy of &lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;In the previous examples, this setting would remove the path and query string data from the referrer values so that they are stripped down to:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Referer: https://www.reddit.com/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Referer: https://www.healthcare.gov/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This change prevents site authors from accidentally leaking user data to third parties when their users choose Private Browsing Mode.  We made this change only after first ensuring that this would have minimal to no effect on &lt;a href=&quot;https://blog.mozilla.org/data/2018/01/26/improving-privacy-without-breaking-the-web/&quot;&gt;web usability&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Other ways of controlling referrers&lt;/h2&gt;
&lt;p&gt;Vendors and authors continue to &lt;a href=&quot;https://briansmith.org/referrer-01&quot;&gt;propose changes to Referrers&lt;/a&gt; to improve web privacy, security, and functionality.&lt;/p&gt;
&lt;p&gt;In 2014, the W3C Web Application Security Working Group started its &lt;a href=&quot;https://www.w3.org/TR/referrer-policy/&quot;&gt;Referrer Policy&lt;/a&gt; Recommendation. This Policy lets vendors and authors control referrer values. For example, it defines a secure-by-default &lt;code&gt;no-referrer-when-downgrade&lt;/code&gt; policy for user agents, which does not send referrers to HTTP resources from an HTTPS page. In Firefox Regular and Private Browsing Mode, if a site specifically sets a more restrictive or more liberal Referrer Policy than the browser default, the browser will honor the websites request since the site author is intentionally changing the value.&lt;/p&gt;
&lt;p&gt;Users can also &lt;a href=&quot;https://wiki.mozilla.org/Security/Referrer&quot;&gt;change their default referrer options in Firefox&lt;/a&gt;.  These will override the browser’s default Referrer Policy and override the site author’s Referrer Policy, putting the users choice first.&lt;/p&gt;

</description>
<pubDate>Thu, 01 Feb 2018 21:32:25 +0000</pubDate>
<dc:creator>jhatax</dc:creator>
<og:title>Preventing data leaks by stripping path information in HTTP Referrers</og:title>
<og:url>https://blog.mozilla.org/security/2018/01/31/preventing-data-leaks-by-stripping-path-information-in-http-referrers/</og:url>
<og:description>To help prevent third party data leakage while browsing privately, Firefox Private Browsing Mode will remove path information from referrers sent to third parties starting ...</og:description>
<og:image>https://blog.mozilla.org/security/files/2018/01/hc_gov_requests-252x27.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.mozilla.org/security/2018/01/31/preventing-data-leaks-by-stripping-path-information-in-http-referrers/</dc:identifier>
</item>
<item>
<title>The full-time job of keeping up with Kubernetes</title>
<link>https://gravitational.com/blog/kubernetes-release-cycle/#</link>
<guid isPermaLink="true" >https://gravitational.com/blog/kubernetes-release-cycle/#</guid>
<description>&lt;h4 class=&quot;center&quot;&gt;Feb 1, 2018 by Abraham Ingersoll&lt;/h4&gt;
&lt;h2 id=&quot;there-is-no-such-thing-as-kubernetes-lts-and-that-s-fantastic&quot;&gt;There is no such thing as Kubernetes LTS (and that’s fantastic)&lt;/h2&gt;
&lt;p&gt;TL;DR - Unabated 1.xx major “minor” releases of “vanilla” upstream Kubernetes every three months could continue forever. You have to keep up, while also paying close attention to Kubernetes API object versioning. This relentless pace is the key ingredient in Kubernetes’ domination of the distributed infrastructure world.&lt;/p&gt;
&lt;h2 id=&quot;what-is-the-kubernetes-release-cycle&quot;&gt;What is the Kubernetes Release Cycle?&lt;/h2&gt;
&lt;p&gt;One of the questions we encounter when talking to those looking to leverage Kubernetes, especially for DIY deployments, is simply “How do you stay up-to-date?”&lt;/p&gt;
&lt;p&gt;This leads to a Kubistential awakening:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Who really runs the Kubernetes community project?&lt;/li&gt;
&lt;li&gt;How consistent has their release cycle &amp;amp; quality been?&lt;/li&gt;
&lt;li&gt;Like Debian, Ubuntu or RHEL - does Kubernetes have a Long Term Support version – a Kubernetes LTS?&lt;/li&gt;
&lt;li&gt;What sort of effort is required of a cluster maintainer or product owner to keep up each time a new Kubernetes release comes out?&lt;/li&gt;
&lt;li&gt;What happens when a cluster owner doesn’t stay on top of updates?&lt;/li&gt;
&lt;li&gt;Are their plausible alternatives to inheriting the task of managing Kubernetes?&lt;/li&gt;
&lt;li&gt;And if the answer is simply “cloud,” is it safe to use &lt;a href=&quot;https://www.cncf.io/certification/software-conformance/&quot;&gt;“certified” Kubernetes platforms&lt;/a&gt; without getting locked in?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Let’s dive into a little bit of Kubernetes lore and figure out what’s going on behind a project whose most recent release notes were a whopping &lt;a href=&quot;https://github.com/kubernetes/kubernetes/blame/master/CHANGELOG-1.9.md#L1890&quot;&gt;1,890 lines long&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;kubernetes-founding-story-and-leadership-background&quot;&gt;Kubernetes founding story and leadership background&lt;/h2&gt;
&lt;p&gt;The initial stewards of Kubernetes within Google established a strong open community around the project from the start, taking lessons both good and not so great from the &lt;a href=&quot;https://www.linuxfoundation.org/projects/linux/&quot;&gt;Linux kernel project&lt;/a&gt;, &lt;a href=&quot;https://www.jwz.org/about.html&quot;&gt;Mozilla&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/bcantrill/status/824028457847832576&quot;&gt;Openstack&lt;/a&gt;, &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chrome&lt;/a&gt;, and even the &lt;a href=&quot;https://github.com/joyent/libuv/commit/804d40ee14dc0f82c482dcc8d1c41c14333fcb48&quot;&gt;infamous node.js fork&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;commit 2c4b3a562ce34cddc3f8218a2c4d11c7310e6d56
Author: Joe Beda &amp;lt;&lt;a href=&quot;https://gravitational.com/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;cea4a1abe0a9a7baa6bbac8eacabaaafa8afa3a7a2b7e0ada1a3&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
Date:   Fri Jun 6 16:40:48 2014 -0700

    First commit
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you’re coming to the party late, check out the nearly three-year-old &lt;a href=&quot;https://techcrunch.com/2015/07/21/as-kubernetes-hits-1-0-google-donates-technology-to-newly-formed-cloud-native-computing-foundation-with-ibm-intel-twitter-and-others/&quot;&gt;Techcrunch article covering the Kubernetes 1.0 release&lt;/a&gt;. Read all the way to the end.&lt;/p&gt;
&lt;p&gt;The effervescent open source community builder who leads the Linux Foundation, &lt;a href=&quot;https://en.wikipedia.org/wiki/Jim_Zemlin&quot;&gt;Jim Zemlin&lt;/a&gt;, is a veritable silicon-valley fortune teller:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;I predict this technology will be too good to resist, those who are not participating today will change their mind later.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even Bryan Cantrill, the &lt;a href=&quot;https://youtu.be/-zRN7XLCRhc?t=38m20s&quot;&gt;awe inspiring&lt;/a&gt; Joyent CTO and long-time unix genius, expressed a &lt;a href=&quot;https://www.joyent.com/blog/the-foundation-of-cloud-native-computing&quot;&gt;mea culpa to his open source anti-pattern screed&lt;/a&gt; after witnessing the Kubernetes communal birth.&lt;/p&gt;
&lt;p&gt;Another secret and largely underappreciated ingredient to Kubernetes success is the CNCF (Cloud Native Computing Foundation) releasing it under Apache-2.0, an open source license that inspires religious arguments over claims that it is an antidote to &lt;a href=&quot;https://www.cncf.io/blog/2017/02/01/cncf-recommends-aslv2/&quot;&gt;a long-brewing commercial software patent cold war&lt;/a&gt; among tech giants.&lt;/p&gt;
&lt;p&gt;If you can catch Jim Zemlin when his guard is down and ask him what’s so special about all this, he’ll beam about the amazing legal feat of getting Alphabet, Inc to give away its nascent Kubernetes baby – all under a &lt;a href=&quot;http://en.swpat.org/wiki/Patent_clauses_in_software_licences#Apache_License_2.0&quot;&gt;patent-protected open source license&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;As it has grown, the various CNCF and Kubernetes contributors have maintained a famously collaborative, open and self-introspective community with surprisingly few bad actors. Which leads us to SIGs.&lt;/p&gt;
&lt;h2 id=&quot;kubernetes-special-interest-group-background&quot;&gt;Kubernetes Special Interest Group Background&lt;/h2&gt;
&lt;p&gt;Besides its genesis downstream of ten plus years of Borg at Google and a brilliant “planned community” guarded by the CNCF, another superpower driving Kubernetes is its &lt;a href=&quot;https://github.com/kubernetes/community/blob/master/sig-list.md&quot;&gt;Special Interest Group&lt;/a&gt; model. SIGs are basically ad-hoc groups held together by technical consensus. Their day-to-day materialization tends to follow the same patterns as the best scrum teams at leading software companies. The most critical SIGs steward the end-to-end testing and CI/CD system that faithfully enforces the Kubernetes release procedure. Interest in outlying or more esoteric SIGs ebbs and flows as work heats up and is delivered in particular areas. There is even an overall &lt;a href=&quot;https://github.com/kubernetes/community/blob/master/sig-product-management/README.md&quot;&gt;Product Management SIG&lt;/a&gt; staffed by top-shelf PMs.&lt;/p&gt;
&lt;p&gt;SIGs and their working groups are interesting in the context of understanding Kubernetes relentless release cycle because the leadership, cadence and key attributes such as long-term quality are all the bumper crop of seeds sown by this SIG structure. For a great background on how SIGs interact with the larger ecosystem of corporate interests, listen to this &lt;a href=&quot;https://soundcloud.com/thenewstackmakers/maintaining-kubernetes-life-cycle&quot;&gt;New Stack Interview with Caleb Miles&lt;/a&gt;, a Technical Program Manager savant and SIG-Product lead.&lt;/p&gt;
&lt;p&gt;One of the great things about the SIGs is their diversity of participants and leadership. However, as is generally true with popular emerging technologies, there are always desires to consolidate power and influence roadmaps. With the &lt;a href=&quot;https://www.redhat.com/en/about/press-releases/red-hat-acquire-coreos-expanding-its-kubernetes-and-containers-leadership&quot;&gt;acquisition of CoreOS&lt;/a&gt;, Redhat is now “&lt;a href=&quot;https://twitter.com/openshift/status/948249680407941121&quot;&gt;Proud that Red Hat engineers are able to Chair or Co-Char [sic] 12 SIGs.&lt;/a&gt;” It’s not clear this is something for the community to celebrate but it will be interesting to see how this affects the project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gravitational.com/blog/images/2018/red-hat-sigs.png&quot; alt=&quot;SIG-ownership&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;kubernetes-release-versioning-background&quot;&gt;Kubernetes Release Versioning Background&lt;/h2&gt;
&lt;p&gt;The basic formula for Kubernetes releases is to expect big releases every three to four months. The &lt;a href=&quot;https://github.com/kubernetes/community/blob/master/contributors/design-proposals/release/versioning.md&quot;&gt;Kubernetes Release Versioning&lt;/a&gt; design document has some nitty details that have boiled down remarkably well in the community melting pot. Raw &lt;a href=&quot;https://groups.google.com/forum/#!topic/kubernetes-sig-release/qLaRarwBooc&quot;&gt;pride-driven craftsmanship&lt;/a&gt; sets the expectations and maintains the pace of these “minor” releases. Notably, while the initial momentum came from Google, the core release team has morphed into a rolling cadrae of individuals from dozens of tech companies.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;There is no mandated timeline for major versions and there are currently no criteria for shipping 2.0.0.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is a mass critical eye toward “vanilla” Kubernetes quality and as such the collective managers of any release target are afforded wide latitude to shift dates or push back on pull requests that aren’t deemed ready by the relevant SIGs. Hawk-eyed readers of the versioning document will note that there “are currently no criteria for shipping 2.0.0” and that Kubernetes has spent its public life as 1.X.Y – where X increases once per quarter and Y ticks along at the community’s collective technical whim.&lt;/p&gt;
&lt;p&gt;Keep the nomenclature in mind: what the broad contributor community calls a “minor” release can have a drastic (usually positive) impact on the experience of operating and using live clusters.&lt;/p&gt;
&lt;p&gt;Dan Kohn, the Executive Directory née Professor Albus Dumbledore of the CNCF, admiring the swift pace of the larger CNCF landscape coalescing around Kubernetes during an &lt;a href=&quot;https://youtu.be/A_oCM8A-1Us?t=58s&quot;&gt;interview at KubeCon Austin 2017&lt;/a&gt; shortly before the release of v1.9.0 put it well: “&lt;em&gt;We sort of describe this moment for the organization and the community as being the end of the beginning.&lt;/em&gt;“&lt;/p&gt;
&lt;h2 id=&quot;kubernetes-historic-release-cadence&quot;&gt;Kubernetes Historic Release Cadence&lt;/h2&gt;
&lt;p&gt;Since midsummer 2015 when Googlers &lt;a href=&quot;https://hackernoon.com/@brendan.d.burns&quot;&gt;Brendan Burns&lt;/a&gt;, &lt;a href=&quot;http://www.hockin.org/~thockin/&quot;&gt;Tim Hockin&lt;/a&gt; and &lt;a href=&quot;https://github.com/zmerlynn&quot;&gt;Zach Loafman&lt;/a&gt; triggered the jump from the &lt;a href=&quot;https://github.com/kubernetes/kubernetes/pull/11103&quot;&gt;pre-1.x series of 0.xx tags&lt;/a&gt;, Kubernetes has had nine “minor” releases.&lt;/p&gt;
&lt;p&gt;Their comments when cutting the 1.0.0 branch were prophetic. Brendan goofed the pull request and had to go twice, leaving a final comment “for realz this time!” Tim is a teary-eyed “great big LGTM” and Zach mic-drops a “Do it” after a simple inline comment on the gitMajor and gitMinor diff: “Scary.”&lt;/p&gt;
&lt;p&gt;Digging through press releases and git tags, you find an amazingly reliable adherence to a quarterly release cadence or about every hundred days.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Kubernetes Release&lt;/th&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Cadence&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Christening of 1.0&lt;/td&gt;
&lt;td&gt;10th July 2015&lt;/td&gt;
&lt;td&gt;~one year from inception&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From 1.0 to 1.1&lt;/td&gt;
&lt;td&gt;9th November 2015&lt;/td&gt;
&lt;td&gt;122 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.2.md&quot;&gt;1.1 to 1.2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16th March 2016&lt;/td&gt;
&lt;td&gt;128 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/sig-release/blob/master/releases/release-1.3/release-1.3.md&quot;&gt;1.2 to 1.3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1st July 2016&lt;/td&gt;
&lt;td&gt;107 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/features/blob/master/release-1.4/Release-1.4.md&quot;&gt;1.3 to 1.4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;26th September 2016&lt;/td&gt;
&lt;td&gt;87 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/features/blob/master/release-1.5/release-1.5.md&quot;&gt;1.4 to 1.5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;12th December 2016&lt;/td&gt;
&lt;td&gt;77 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/features/blob/master/release-1.6/release-1.6.md&quot;&gt;1.5 to 1.6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;28th March 2017&lt;/td&gt;
&lt;td&gt;106 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/features/blob/master/release-1.7/release-1.7.md&quot;&gt;1.6 to 1.7&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;30th June 2017&lt;/td&gt;
&lt;td&gt;94 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/features/blob/master/release-1.8/release-1.8.md&quot;&gt;1.7 to 1.8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;28th September 2017&lt;/td&gt;
&lt;td&gt;90 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/features/blob/master/release-1.9/release-1.9.md&quot;&gt;1.8 to 1.9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;15th December 2017&lt;/td&gt;
&lt;td&gt;78 days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;From &lt;a href=&quot;https://github.com/kubernetes/sig-release/tree/master/releases/release-1.10&quot;&gt;1.9 to 1.10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ETA mid-March 2018&lt;/td&gt;
&lt;td&gt;~100 days&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;kubernetes-feature-development-process&quot;&gt;Kubernetes Feature Development Process&lt;/h2&gt;
&lt;p&gt;The versioned releases of Kubernetes binary components themselves have become almost boring. The real action, and the real meat in each Kubernetes 1.x release, is in the “&lt;a href=&quot;https://kubernetes.io/docs/reference/api-overview/&quot;&gt;fundamental fabric&lt;/a&gt;” represented by its RESTful API.&lt;/p&gt;
&lt;p&gt;Every part of Kubernetes uses a &lt;a href=&quot;https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#api-conventions&quot;&gt;well defined API&lt;/a&gt; to communicate with every other part. Imagine this API as Kubernetes heart, wrapped by a constantly-beating set of components pumping oxygen into a declarative configuration schema. The “core” does nothing more than reconcile current cluster state with the desired state. As you radiate out to extremities you find constant API growth and refinement as an unending onslaught of infrastructure coders aim to abstract more and more traditional datacenter building blocks into consumable Kubernetes API endpoints. These &lt;a href=&quot;https://github.com/kubernetes/features&quot;&gt;additional Kubernetes features&lt;/a&gt; (read: APIs) leap from newborn alpha to toddler beta stages in random spurts driven by contributor zeal and larger community interest.&lt;/p&gt;
&lt;p&gt;The founders of Kubernetes specifically designed the &lt;a href=&quot;https://kubernetes.io/docs/reference/api-overview/#api-versioning&quot;&gt;API versioning&lt;/a&gt; and &lt;a href=&quot;https://kubernetes.io/docs/reference/deprecation-policy/&quot;&gt;deprecation&lt;/a&gt; standards to deal with this constant evolution. Similar to the release versioning document, there’s an &lt;a href=&quot;https://github.com/kubernetes/community/blob/master/contributors/devel/api_changes.md#alpha-beta-and-stable-versions&quot;&gt;even longer policy&lt;/a&gt; around what developers and end-users should expect as features traverse their palpably awkward “tween” stages.&lt;/p&gt;
&lt;p&gt;This is all to say, what matters in each Kubernetes release isn’t the release itself, but the nuanced details of what APIs have gone from “alpha” to “beta” to “stable.” If you’re wearing a t-shirt with a Kubernetes logo on it right now, you probably even tear open the changelog to see sub-level version bumps or which exact parameter fields have been added or removed.&lt;/p&gt;
&lt;p&gt;While there have been some notable false starts along Kubernetes sprawling evolution (”&lt;a href=&quot;https://github.com/kubernetes/kubernetes/pull/35663&quot;&gt;PetSets&lt;/a&gt;”, for example) and waiting for API objects to graduate from alpha or beta can seem like waiting for Christmas, the stable APIs are rock solid. Those who try it never go back.&lt;/p&gt;
&lt;h2 id=&quot;kubernetes-compared-to-ubuntu-lts-or-rhel&quot;&gt;Kubernetes Compared to Ubuntu LTS or RHEL&lt;/h2&gt;
&lt;p&gt;Redhat Enterprise Linux famously has a ten year long-term support guarantee. Their kernel patches and related build process is supposedly so gnarly that no one, besides a small handful of dedicated descendants such as CentOS or OEL, can really claim to have binary compatibility. Ubuntu &lt;a href=&quot;https://wiki.ubuntu.com/LTS&quot;&gt;halves that to five years&lt;/a&gt;. CoreOS (&lt;a href=&quot;https://techcrunch.com/2018/01/30/red-hat-acquirescoreos-for-250-million-in-kubernetes-expansion/&quot;&gt;used to&lt;/a&gt;) throw it all to the wind with “automatic updates” sold with an inspiring plea that updates must be autonomous lest we fail to “&lt;a href=&quot;https://coreos.com/blog/why-we-started-coreos&quot;&gt;secure the internet&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;In the case of the major cloud providers and their “Managed Kubernetes Platforms,” they take care of control plane upgrades for you. As part of that, Kubernetes platform providers are magically handling the migration around backwards-incompatible or forced migrations within upstream Kubernetes APIs. The Kubernetes-as-a-Service offerings, particularly Google Cloud’s Kubernetes Engine (GKE), are the &lt;a href=&quot;https://cloud.google.com/kubernetes-engine/versioning-and-upgrades&quot;&gt;well-polished bellwethers&lt;/a&gt; of what is currently the most stable and production-worthy version of Kubernetes.&lt;/p&gt;

&lt;p&gt;The aforementioned release versioning design proposal states that users are expected to stay “reasonably up-to-date with versions of Kubernetes they use in production.” The other key takeaway is that the upstream Kubernetes community only aims to support up to three “minor” Kubernetes version at a time. In practice, within 1.X where the X is really dang significant, the three-minor policy means Kubernetes 1.5 falls out of scope for SIG-release once 1.8 makes it out the door. That means that if you deployed a Kubernetes 1.6 soon after it came out last March, you were expected to upgrade to 1.7 within roughly nine months or by the time 1.9 shipped in mid-December.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;You sow the cluster in early spring and you harvest it before deep winter sets in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Does Kubernetes release cadence and the short upstream support window hurt the project? Honestly, from the perspectives of end-users, not very much. If you dig through SIG &lt;a href=&quot;https://groups.google.com/forum/#!searchin/kubernetes-dev/LTS%7Csort:date/kubernetes-dev/muNCWWxaPiI/E3p4q0ZSDAAJ&quot;&gt;meeting notes&lt;/a&gt;, &lt;a href=&quot;https://github.com/kubernetes/community/issues/567&quot;&gt;Github issues&lt;/a&gt;, design proposals and &lt;a href=&quot;https://groups.google.com/forum/#!topic/kubernetes-pm/SPEQyO7FqAA&quot;&gt;mailing lists&lt;/a&gt; you’ll discover that the community’s &lt;a href=&quot;https://groups.google.com/forum/#!searchin/kubernetes-dev/LTS%7Csort:date/kubernetes-dev/z0jYiJp5V1Y/SkfYIhHfAQAJ&quot;&gt;consensus on long-term support&lt;/a&gt; is still very much in flux. And, perhaps rightfully so, there’s a strong bent toward keeping the upstream project as flexible as possible for as long as possible. When your already released core API primitives are mostly staying the same or rarely have backwards-incompatible changes once out of “beta,” why put artificial constraints on “vanilla” Kubernetes releases?&lt;/p&gt;
&lt;p&gt;In practice and actual fact, what really matters for older Kubernetes version support is the continued availability and exercising of its end-to-end testing pipeline. If the machinery to quickly update an old release continues to exist, and exist in a state of good (non-flakey) repair, cutting a patch release is just a matter of someone – you, your provider or your vendor – having the engineering gumption to push it through. If a critical security fix isn’t back-ported to an older Kubernetes version, that’s a strong sign that no reasonably professional team is using that version in production anymore.&lt;/p&gt;
&lt;h2 id=&quot;upgrading-a-live-kubernetes-cluster&quot;&gt;Upgrading a Live Kubernetes Cluster&lt;/h2&gt;
&lt;p&gt;One of the magical things about orchestrators is that they (&lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44843.pdf&quot;&gt;or their configuration files&lt;/a&gt;) inevitably become nearly Turing complete. If you have big Kubernetes cluster with diverse workloads, you’ll likewise want an SRE with Alan Turing-level Kubernetes smarts at hand to ensure upgrades go smoothly.&lt;/p&gt;
&lt;p&gt;Adherents to the idea of self-hosted Kubernetes clusters take the Turing gambit one step further and are hurtling toward the notion that a cluster can manage itself. There are even Kubernetes installer projects that stretch the self-hosted notion deep into inceptionville by running clusters upon clusters upon clusters upon… it’s turtles all the way down.&lt;/p&gt;
&lt;p&gt;While the basic APIs that Kubernetes reliably supplies are becoming key building blocks of interesting solutions to all types of distributed systems problems, there is healthy skepticism at the notion of “self-driving, self-hosted” clusters.&lt;/p&gt;
&lt;p&gt;Even the community endorsed management tools and installers have yet to achieve enterprise-grade, highly-available Kubernetes deployments out of the box. Google Cloud itself runs its GKE Kubernetes-as-a-Service control plane as externally virtualized VMs that live-migrates to avoid component failure (rather than “self-drive” within the cluster control plane).&lt;/p&gt;
&lt;p&gt;One viable strategy is to deploy once and leave Kubernetes alone, to cross your fingers that a bug in the underlying operating system or Docker itself doesn’t force your hand. For an internal-facing cluster a “deferred maintenance” strategy has been completely valid for many early adopters. Just pray to &lt;a href=&quot;https://www.youtube.com/watch?v=07jq-5VbBVQ&quot;&gt;sweet baby Kubernetes Jesus&lt;/a&gt; (Kelsey Hightower) that you never have to leap from Kubernetes v1.3 to v1.9.&lt;/p&gt;
&lt;h2 id=&quot;moving-kubernetes-workloads-to-new-clusters-instead-of-upgrading&quot;&gt;Moving Kubernetes Workloads to New Clusters instead of Upgrading&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/kubernetes/kubernetes/issues/52185&quot;&gt;most reliable strategy for upgrading a cluster&lt;/a&gt; is thus a phantom cluster “headswap.” If you can’t incrementally update a Kubernetes control plane (and its various components), you incrementally drain the load from an old cluster on to a new one using external load routing of some older-fashioned sort. Or even if you do practice incremental in-place updates, one of your key steps to ensuring the reliability of such upgrades is to run old load on new clusters before trying the stepped migration.&lt;/p&gt;
&lt;h2 id=&quot;current-best-alternatives-to-diy-kubernetes&quot;&gt;Current Best Alternatives to DIY Kubernetes&lt;/h2&gt;
&lt;p&gt;The absolute safest place to run Kubernetes application is still Google’s GKE. They created it and &lt;a href=&quot;https://landing.google.com/sre/book.html&quot;&gt;Google’s SRE culture wrote the book&lt;/a&gt; on successfully running large-scale distributed systems. With GKE and similar Kuberentes “platforms,” you can’t touch most of the interesting knobs and buttons that control your clusters. You may eventually pay the ridiculous public cloud bandwidth egress tax. So buyer beware, but BUY NOW.&lt;/p&gt;
&lt;p&gt;What if you simply need clusters in places where GKE is yet to exist, like on your rpi3?&lt;/p&gt;
&lt;p&gt;This is probably the most fascinating area of the Kubernetes community, particularly the vendors. There are now at least &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1LxSqBzjOxfGx3cmtZ4EbB_BGCxT_wlxW_xgHVVa23es/edit?usp=sharing&quot;&gt;two dozen viable Kubernetes distributions&lt;/a&gt;. Like carbon-copies of Uber or InstaCart tailor-made to exploit local market quirks, there is a torrent of Kubernetes VARs crafting their pitch just beyond the horizon.&lt;/p&gt;
&lt;p&gt;So what do you do after you’ve outgrown minikube and realize that every pod in your kops cluster has “root” access to your control plane? Find your favorite VAR and demand vanilla Kubernetes, in any form, that’s reasonably up-to-date and has a &lt;em&gt;well-proven&lt;/em&gt; plan for handling upgrades. Then forget about it and focus on building on its abstractions and the things around it that actually impact your product.&lt;/p&gt;
&lt;h2 id=&quot;closing-thoughts-on-kubernetes-releases&quot;&gt;Closing Thoughts on Kubernetes Releases&lt;/h2&gt;
&lt;p&gt;Kubernetes and the democratization of distributed systems is here to stay. While keeping up with the pace of change is difficult, just imagine the resources you would need to replicate it.&lt;/p&gt;
&lt;p&gt;If the SIGs shut down and Google’s engineering teams vanish in a puff of an EU regulators anti-monopoly death ray, we’d still use and love Kubernetes v1.X for a very, very long time. The contributor and leadership community is constantly discussing the balance between stabilization and velocity. If you have any doubts, grab a hot beverage and cozy up with &lt;a href=&quot;https://www.youtube.com/watch?v=gCQfFXSHSxw&quot;&gt;Brendan’s Burns keynote from the latest Kubecon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to Sasha Klizhentas, &lt;a href=&quot;https://github.com/bigkraig&quot;&gt;Kraig Amador&lt;/a&gt; and &lt;a href=&quot;https://www.gkogan.co/&quot;&gt;Greg Kogan&lt;/a&gt; for reading a draft of this.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 01 Feb 2018 19:48:19 +0000</pubDate>
<dc:creator>twakefield</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gravitational.com/blog/kubernetes-release-cycle/</dc:identifier>
</item>
<item>
<title>An introduction to Reactive Programming</title>
<link>https://gist.github.com/staltz/868e7e9bc2a7b8c1f754</link>
<guid isPermaLink="true" >https://gist.github.com/staltz/868e7e9bc2a7b8c1f754</guid>
<description>&lt;h2&gt;The introduction to Reactive Programming you've been missing&lt;/h2&gt;
&lt;p&gt;(by &lt;a href=&quot;https://twitter.com/andrestaltz&quot; rel=&quot;nofollow&quot;&gt;@andrestaltz&lt;/a&gt;)&lt;/p&gt;
&lt;hr/&gt;&lt;h3&gt;This tutorial as a series of videos&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;If you prefer to watch video tutorials with live-coding, then check out this series I recorded with the same contents as in this article: &lt;a href=&quot;https://egghead.io/series/introduction-to-reactive-programming&quot; rel=&quot;nofollow&quot;&gt;Egghead.io - Introduction to Reactive Programming&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;So you're curious in learning this new thing called Reactive Programming, particularly its variant comprising of Rx, Bacon.js, RAC, and others.&lt;/p&gt;
&lt;p&gt;Learning it is hard, even harder by the lack of good material. When I started, I tried looking for tutorials. I found only a handful of practical guides, but they just scratched the surface and never tackled the challenge of building the whole architecture around it. Library documentations often don't help when you're trying to understand some function. I mean, honestly, look at this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Rx.Observable.prototype.flatMapLatest(selector, [thisArg])&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Projects each element of an observable sequence into a new sequence of observable sequences by incorporating the element's index and then transforms an observable sequence of observable sequences into an observable sequence producing values only from the most recent observable sequence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Holy cow.&lt;/p&gt;
&lt;p&gt;I've read two books, one just painted the big picture, while the other dived into how to use the Reactive library. I ended up learning Reactive Programming the hard way: figuring it out while building with it. At my work in &lt;a href=&quot;https://www.futurice.com&quot; rel=&quot;nofollow&quot;&gt;Futurice&lt;/a&gt; I got to use it in a real project, and had the &lt;a href=&quot;http://blog.futurice.com/top-7-tips-for-rxjava-on-android&quot; rel=&quot;nofollow&quot;&gt;support of some colleagues&lt;/a&gt; when I ran into troubles.&lt;/p&gt;
&lt;p&gt;The hardest part of the learning journey is &lt;strong&gt;thinking in Reactive&lt;/strong&gt;. It's a lot about letting go of old imperative and stateful habits of typical programming, and forcing your brain to work in a different paradigm. I haven't found any guide on the internet in this aspect, and I think the world deserves a practical tutorial on how to think in Reactive, so that you can get started. Library documentation can light your way after that. I hope this helps you.&lt;/p&gt;
&lt;h2&gt;&quot;What is Reactive Programming?&quot;&lt;/h2&gt;
&lt;p&gt;There are plenty of bad explanations and definitions out there on the internet. &lt;a href=&quot;https://en.wikipedia.org/wiki/Reactive_programming&quot; rel=&quot;nofollow&quot;&gt;Wikipedia&lt;/a&gt; is too generic and theoretical as usual. &lt;a href=&quot;http://stackoverflow.com/questions/1028250/what-is-functional-reactive-programming&quot; rel=&quot;nofollow&quot;&gt;Stackoverflow&lt;/a&gt;'s canonical answer is obviously not suitable for newcomers. &lt;a href=&quot;http://www.reactivemanifesto.org/&quot; rel=&quot;nofollow&quot;&gt;Reactive Manifesto&lt;/a&gt; sounds like the kind of thing you show to your project manager or the businessmen at your company. Microsoft's &lt;a href=&quot;https://rx.codeplex.com/&quot; rel=&quot;nofollow&quot;&gt;Rx terminology&lt;/a&gt; &quot;Rx = Observables + LINQ + Schedulers&quot; is so heavy and Microsoftish that most of us are left confused. Terms like &quot;reactive&quot; and &quot;propagation of change&quot; don't convey anything specifically different to what your typical MV* and favorite language already does. Of course my framework views react to the models. Of course change is propagated. If it wouldn't, nothing would be rendered.&lt;/p&gt;
&lt;p&gt;So let's cut the bullshit.&lt;/p&gt;
&lt;h4&gt;Reactive programming is programming with asynchronous data streams.&lt;/h4&gt;
&lt;p&gt;In a way, this isn't anything new. Event buses or your typical click events are really an asynchronous event stream, on which you can observe and do some side effects. Reactive is that idea on steroids. You are able to create data streams of anything, not just from click and hover events. Streams are cheap and ubiquitous, anything can be a stream: variables, user inputs, properties, caches, data structures, etc. For example, imagine your Twitter feed would be a data stream in the same fashion that click events are. You can listen to that stream and react accordingly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On top of that, you are given an amazing toolbox of functions to combine, create and filter any of those streams.&lt;/strong&gt; That's where the &quot;functional&quot; magic kicks in. A stream can be used as an input to another one. Even multiple streams can be used as inputs to another stream. You can &lt;em&gt;merge&lt;/em&gt; two streams. You can &lt;em&gt;filter&lt;/em&gt; a stream to get another one that has only those events you are interested in. You can &lt;em&gt;map&lt;/em&gt; data values from one stream to another new one.&lt;/p&gt;
&lt;p&gt;If streams are so central to Reactive, let's take a careful look at them, starting with our familiar &quot;clicks on a button&quot; event stream.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/36c0a9ffd8ed22236bd6237d44a1d3eecbaec336/687474703a2f2f692e696d6775722e636f6d2f634c344d4f73532e706e67&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/36c0a9ffd8ed22236bd6237d44a1d3eecbaec336/687474703a2f2f692e696d6775722e636f6d2f634c344d4f73532e706e67&quot; alt=&quot;Click event stream&quot; data-canonical-src=&quot;http://i.imgur.com/cL4MOsS.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A stream is a sequence of &lt;strong&gt;ongoing events ordered in time&lt;/strong&gt;. It can emit three different things: a value (of some type), an error, or a &quot;completed&quot; signal. Consider that the &quot;completed&quot; takes place, for instance, when the current window or view containing that button is closed.&lt;/p&gt;
&lt;p&gt;We capture these emitted events only &lt;strong&gt;asynchronously&lt;/strong&gt;, by defining a function that will execute when a value is emitted, another function when an error is emitted, and another function when 'completed' is emitted. Sometimes these last two can be omitted and you can just focus on defining the function for values. The &quot;listening&quot; to the stream is called &lt;strong&gt;subscribing&lt;/strong&gt;. The functions we are defining are observers. The stream is the subject (or &quot;observable&quot;) being observed. This is precisely the &lt;a href=&quot;https://en.wikipedia.org/wiki/Observer_pattern&quot; rel=&quot;nofollow&quot;&gt;Observer Design Pattern&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An alternative way of drawing that diagram is with ASCII, which we will use in some parts of this tutorial:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;--a---b-c---d---X---|-&amp;gt;

a, b, c, d are emitted values
X is an error
| is the 'completed' signal
---&amp;gt; is the timeline
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since this feels so familiar already, and I don't want you to get bored, let's do something new: we are going to create new click event streams transformed out of the original click event stream.&lt;/p&gt;
&lt;p&gt;First, let's make a counter stream that indicates how many times a button was clicked. In common Reactive libraries, each stream has many functions attached to it, such as &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;scan&lt;/code&gt;, etc. When you call one of these functions, such as &lt;code&gt;clickStream.map(f)&lt;/code&gt;, it returns a &lt;strong&gt;new stream&lt;/strong&gt; based on the click stream. It does not modify the original click stream in any way. This is a property called &lt;strong&gt;immutability&lt;/strong&gt;, and it goes together with Reactive streams just like pancakes are good with syrup. That allows us to chain functions like &lt;code&gt;clickStream.map(f).scan(g)&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  clickStream: ---c----c--c----c------c--&amp;gt;
               vvvvv map(c becomes 1) vvvv
               ---1----1--1----1------1--&amp;gt;
               vvvvvvvvv scan(+) vvvvvvvvv
counterStream: ---1----2--3----4------5--&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;map(f)&lt;/code&gt; function replaces (into the new stream) each emitted value according to a function &lt;code&gt;f&lt;/code&gt; you provide. In our case, we mapped to the number 1 on each click. The &lt;code&gt;scan(g)&lt;/code&gt; function aggregates all previous values on the stream, producing value &lt;code&gt;x = g(accumulated, current)&lt;/code&gt;, where &lt;code&gt;g&lt;/code&gt; was simply the add function in this example. Then, &lt;code&gt;counterStream&lt;/code&gt; emits the total number of clicks whenever a click happens.&lt;/p&gt;
&lt;p&gt;To show the real power of Reactive, let's just say that you want to have a stream of &quot;double click&quot; events. To make it even more interesting, let's say we want the new stream to consider triple clicks as double clicks, or in general, multiple clicks (two or more). Take a deep breath and imagine how you would do that in a traditional imperative and stateful fashion. I bet it sounds fairly nasty and involves some variables to keep state and some fiddling with time intervals.&lt;/p&gt;
&lt;p&gt;Well, in Reactive it's pretty simple. In fact, the logic is just &lt;a href=&quot;http://jsfiddle.net/staltz/4gGgs/27/&quot; rel=&quot;nofollow&quot;&gt;4 lines of code&lt;/a&gt;. But let's ignore code for now. Thinking in diagrams is the best way to understand and build streams, whether you're a beginner or an expert.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/995c301de2f566db10748042a5a67cc5d9ac45d9/687474703a2f2f692e696d6775722e636f6d2f484d47574e4f352e706e67&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/995c301de2f566db10748042a5a67cc5d9ac45d9/687474703a2f2f692e696d6775722e636f6d2f484d47574e4f352e706e67&quot; alt=&quot;Multiple clicks stream&quot; data-canonical-src=&quot;http://i.imgur.com/HMGWNO5.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grey boxes are functions transforming one stream into another. First we accumulate clicks in lists, whenever 250 milliseconds of &quot;event silence&quot; has happened (that's what &lt;code&gt;buffer(stream.throttle(250ms))&lt;/code&gt; does, in a nutshell. Don't worry about understanding the details at this point, we are just demoing Reactive for now). The result is a stream of lists, from which we apply &lt;code&gt;map()&lt;/code&gt; to map each list to an integer matching the length of that list. Finally, we ignore &lt;code&gt;1&lt;/code&gt; integers using the &lt;code&gt;filter(x &amp;gt;= 2)&lt;/code&gt; function. That's it: 3 operations to produce our intended stream. We can then subscribe (&quot;listen&quot;) to it to react accordingly how we wish.&lt;/p&gt;
&lt;p&gt;I hope you enjoy the beauty of this approach. This example is just the tip of the iceberg: you can apply the same operations on different kinds of streams, for instance, on a stream of API responses; on the other hand, there are many other functions available.&lt;/p&gt;
&lt;h2&gt;&quot;Why should I consider adopting RP?&quot;&lt;/h2&gt;
&lt;p&gt;Reactive Programming raises the level of abstraction of your code so you can focus on the interdependence of events that define the business logic, rather than having to constantly fiddle with a large amount of implementation details. Code in RP will likely be more concise.&lt;/p&gt;
&lt;p&gt;The benefit is more evident in modern webapps and mobile apps that are highly interactive with a multitude of UI events related to data events. 10 years ago, interaction with web pages was basically about submitting a long form to the backend and performing simple rendering to the frontend. Apps have evolved to be more real-time: modifying a single form field can automatically trigger a save to the backend, &quot;likes&quot; to some content can be reflected in real time to other connected users, and so forth.&lt;/p&gt;
&lt;p&gt;Apps nowadays have an abundancy of real-time events of every kind that enable a highly interactive experience to the user. We need tools for properly dealing with that, and Reactive Programming is an answer.&lt;/p&gt;
&lt;h2&gt;Thinking in RP, with examples&lt;/h2&gt;
&lt;p&gt;Let's dive into the real stuff. A real-world example with a step-by-step guide on how to think in RP. No synthetic examples, no half-explained concepts. By the end of this tutorial we will have produced real functioning code, while knowing why we did each thing.&lt;/p&gt;
&lt;p&gt;I picked &lt;strong&gt;JavaScript&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS&quot;&gt;RxJS&lt;/a&gt;&lt;/strong&gt; as the tools for this, for a reason: JavaScript is the most familiar language out there at the moment, and the &lt;a href=&quot;http://www.reactivex.io&quot; rel=&quot;nofollow&quot;&gt;Rx* library family&lt;/a&gt; is widely available for many languages and platforms (&lt;a href=&quot;https://rx.codeplex.com/&quot; rel=&quot;nofollow&quot;&gt;.NET&lt;/a&gt;, &lt;a href=&quot;https://github.com/Netflix/RxJava&quot;&gt;Java&lt;/a&gt;, &lt;a href=&quot;https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-scala&quot;&gt;Scala&lt;/a&gt;, &lt;a href=&quot;https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-clojure&quot;&gt;Clojure&lt;/a&gt;, &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://github.com/Reactive-Extensions/Rx.rb&quot;&gt;Ruby&lt;/a&gt;, &lt;a href=&quot;https://github.com/Reactive-Extensions/RxPy&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;https://github.com/Reactive-Extensions/RxCpp&quot;&gt;C++&lt;/a&gt;, &lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot;&gt;Objective-C/Cocoa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-groovy&quot;&gt;Groovy&lt;/a&gt;, etc). So whatever your tools are, you can concretely benefit by following this tutorial.&lt;/p&gt;
&lt;h2&gt;Implementing a &quot;Who to follow&quot; suggestions box&lt;/h2&gt;
&lt;p&gt;In Twitter there is this UI element that suggests other accounts you could follow:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/81e5d63c69768e1b04447d2e246f47540dd83fbd/687474703a2f2f692e696d6775722e636f6d2f65416c4e62306a2e706e67&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/81e5d63c69768e1b04447d2e246f47540dd83fbd/687474703a2f2f692e696d6775722e636f6d2f65416c4e62306a2e706e67&quot; alt=&quot;Twitter Who to follow suggestions box&quot; data-canonical-src=&quot;http://i.imgur.com/eAlNb0j.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We are going to focus on imitating its core features, which are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;On startup, load accounts data from the API and display 3 suggestions&lt;/li&gt;
&lt;li&gt;On clicking &quot;Refresh&quot;, load 3 other account suggestions into the 3 rows&lt;/li&gt;
&lt;li&gt;On click 'x' button on an account row, clear only that current account and display another&lt;/li&gt;
&lt;li&gt;Each row displays the account's avatar and links to their page&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We can leave out the other features and buttons because they are minor. And, instead of Twitter, which recently closed its API to the unauthorized public, let's build that UI for following people on Github. There's a &lt;a href=&quot;https://developer.github.com/v3/users/#get-all-users&quot;&gt;Github API for getting users&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The complete code for this is ready at &lt;a href=&quot;http://jsfiddle.net/staltz/8jFJH/48/&quot; rel=&quot;nofollow&quot;&gt;http://jsfiddle.net/staltz/8jFJH/48/&lt;/a&gt; in case you want to take a peak already.&lt;/p&gt;
&lt;h2&gt;Request and response&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;How do you approach this problem with Rx?&lt;/strong&gt; Well, to start with, (almost) &lt;em&gt;everything can be a stream&lt;/em&gt;. That's the Rx mantra. Let's start with the easiest feature: &quot;on startup, load 3 accounts data from the API&quot;. There is nothing special here, this is simply about (1) doing a request, (2) getting a response, (3) rendering the response. So let's go ahead and represent our requests as a stream. At first this will feel like overkill, but we need to start from the basics, right?&lt;/p&gt;
&lt;p&gt;On startup we need to do only one request, so if we model it as a data stream, it will be a stream with only one emitted value. Later, we know we will have many requests happening, but for now, it is just one.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;--a------|-&amp;gt;

Where a is the string 'https://api.github.com/users'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is a stream of URLs that we want to request. Whenever a request event happens, it tells us two things: when and what. &quot;When&quot; the request should be executed is when the event is emitted. And &quot;what&quot; should be requested is the value emitted: a string containing the URL.&lt;/p&gt;
&lt;p&gt;To create such stream with a single value is very simple in Rx*. The official terminology for a stream is &quot;Observable&quot;, for the fact that it can be observed, but I find it to be a silly name, so I call it &lt;em&gt;stream&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;just&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But now, that is just a stream of strings, doing no other operation, so we need to somehow make something happen when that value is emitted. That's done by &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypesubscribeobserver--onnext-onerror-oncompleted&quot;&gt;subscribing&lt;/a&gt; to the stream.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;requestStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;requestUrl&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; execute the request&lt;/span&gt;
  &lt;span class=&quot;pl-smi&quot;&gt;jQuery&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;getJSON&lt;/span&gt;(requestUrl, &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;responseData&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; ...&lt;/span&gt;
  });
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice we are using a jQuery Ajax callback (which we assume you &lt;a href=&quot;http://devdocs.io/jquery/jquery.getjson&quot; rel=&quot;nofollow&quot;&gt;should know already&lt;/a&gt;) to handle the asynchronicity of the request operation. But wait a moment, Rx is for dealing with &lt;strong&gt;asynchronous&lt;/strong&gt; data streams. Couldn't the response for that request be a stream containing the data arriving at some time in the future? Well, at a conceptual level, it sure looks like it, so let's try that.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;requestStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;requestUrl&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; execute the request&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; responseStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;observer&lt;/span&gt;) {
    &lt;span class=&quot;pl-smi&quot;&gt;jQuery&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;getJSON&lt;/span&gt;(requestUrl)
    .&lt;span class=&quot;pl-en&quot;&gt;done&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;response&lt;/span&gt;) { &lt;span class=&quot;pl-smi&quot;&gt;observer&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;onNext&lt;/span&gt;(response); })
    .&lt;span class=&quot;pl-en&quot;&gt;fail&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;jqXHR&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;status&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;error&lt;/span&gt;) { &lt;span class=&quot;pl-smi&quot;&gt;observer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;onError&lt;/span&gt;(error); })
    .&lt;span class=&quot;pl-en&quot;&gt;always&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() { &lt;span class=&quot;pl-smi&quot;&gt;observer&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;onCompleted&lt;/span&gt;(); });
  });
  
  &lt;span class=&quot;pl-smi&quot;&gt;responseStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;response&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; do something with the response&lt;/span&gt;
  });
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservablecreatesubscribe&quot;&gt;&lt;code&gt;Rx.Observable.create()&lt;/code&gt;&lt;/a&gt; does is create your own custom stream by explicitly informing each observer (or in other words, a &quot;subscriber&quot;) about data events (&lt;code&gt;onNext()&lt;/code&gt;) or errors (&lt;code&gt;onError()&lt;/code&gt;). What we did was just wrap that jQuery Ajax Promise. &lt;strong&gt;Excuse me, does this mean that a Promise is an Observable?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/4df519edd2d527bf5e90b7d00e22cdc3c3be00d4/687474703a2f2f7777772e6d79666163657768656e2e6e65742f75706c6f6164732f333332342d616d617a65642d666163652e676966&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4df519edd2d527bf5e90b7d00e22cdc3c3be00d4/687474703a2f2f7777772e6d79666163657768656e2e6e65742f75706c6f6164732f333332342d616d617a65642d666163652e676966&quot; alt=&quot;Amazed&quot; data-canonical-src=&quot;http://www.myfacewhen.net/uploads/3324-amazed-face.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yes.&lt;/p&gt;
&lt;p&gt;Observable is Promise++. In Rx you can easily convert a Promise to an Observable by doing &lt;code&gt;var stream = Rx.Observable.fromPromise(promise)&lt;/code&gt;, so let's use that. The only difference is that Observables are not &lt;a href=&quot;http://promises-aplus.github.io/promises-spec/&quot; rel=&quot;nofollow&quot;&gt;Promises/A+&lt;/a&gt; compliant, but conceptually there is no clash. A Promise is simply an Observable with one single emitted value. Rx streams go beyond promises by allowing many returned values.&lt;/p&gt;
&lt;p&gt;This is pretty nice, and shows how Observables are at least as powerful as Promises. So if you believe the Promises hype, keep an eye on what Rx Observables are capable of.&lt;/p&gt;
&lt;p&gt;Now back to our example, if you were quick to notice, we have one &lt;code&gt;subscribe()&lt;/code&gt; call inside another, which is somewhat akin to callback hell. Also, the creation of &lt;code&gt;responseStream&lt;/code&gt; is dependent on &lt;code&gt;requestStream&lt;/code&gt;. As you heard before, in Rx there are simple mechanisms for transforming and creating new streams out of others, so we should be doing that.&lt;/p&gt;
&lt;p&gt;The one basic function that you should know by now is &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypemapselector-thisarg&quot;&gt;&lt;code&gt;map(f)&lt;/code&gt;&lt;/a&gt;, which takes each value of stream A, applies &lt;code&gt;f()&lt;/code&gt; on it, and produces a value on stream B. If we do that to our request and response streams, we can map request URLs to response Promises (disguised as streams).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; responseMetastream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; requestStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;requestUrl&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromPromise&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;jQuery&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;getJSON&lt;/span&gt;(requestUrl));
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we will have created a beast called &quot;&lt;em&gt;metastream&lt;/em&gt;&quot;: a stream of streams. Don't panic yet. A metastream is a stream where each emitted value is yet another stream. You can think of it as &lt;a href=&quot;https://en.wikipedia.org/wiki/Pointer_(computer_programming)&quot; rel=&quot;nofollow&quot;&gt;pointers&lt;/a&gt;: each emitted value is a &lt;em&gt;pointer&lt;/em&gt; to another stream. In our example, each request URL is mapped to a pointer to the promise stream containing the corresponding response.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/2a8a9cc75acd13443f588fd7f386bd7a6dcb271a/687474703a2f2f692e696d6775722e636f6d2f48486e6d6c61632e706e67&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/2a8a9cc75acd13443f588fd7f386bd7a6dcb271a/687474703a2f2f692e696d6775722e636f6d2f48486e6d6c61632e706e67&quot; alt=&quot;Response metastream&quot; data-canonical-src=&quot;http://i.imgur.com/HHnmlac.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A metastream for responses looks confusing, and doesn't seem to help us at all. We just want a simple stream of responses, where each emitted value is a JSON object, not a 'Promise' of a JSON object. Say hi to &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypeflatmapselector-resultselector&quot;&gt;Mr. Flatmap&lt;/a&gt;: a version of &lt;code&gt;map()&lt;/code&gt; that &quot;flattens&quot; a metastream, by emitting on the &quot;trunk&quot; stream everything that will be emitted on &quot;branch&quot; streams. Flatmap is not a &quot;fix&quot; and metastreams are not a bug, these are really the tools for dealing with asynchronous responses in Rx.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; responseStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; requestStream
  .&lt;span class=&quot;pl-en&quot;&gt;flatMap&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;requestUrl&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromPromise&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;jQuery&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;getJSON&lt;/span&gt;(requestUrl));
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/0b0ac4a249e1c15d7520c220957acfece1af3e95/687474703a2f2f692e696d6775722e636f6d2f4869337a4e7a4a2e706e67&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/0b0ac4a249e1c15d7520c220957acfece1af3e95/687474703a2f2f692e696d6775722e636f6d2f4869337a4e7a4a2e706e67&quot; alt=&quot;Response stream&quot; data-canonical-src=&quot;http://i.imgur.com/Hi3zNzJ.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nice. And because the response stream is defined according to request stream, &lt;strong&gt;if&lt;/strong&gt; we have later on more events happening on request stream, we will have the corresponding response events happening on response stream, as expected:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;requestStream:  --a-----b--c------------|-&amp;gt;
responseStream: -----A--------B-----C---|-&amp;gt;

(lowercase is a request, uppercase is its response)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now that we finally have a response stream, we can render the data we receive:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;responseStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;response&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; render `response` to the DOM however you wish&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Joining all the code until now, we have:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;just&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; responseStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; requestStream
  .&lt;span class=&quot;pl-en&quot;&gt;flatMap&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;requestUrl&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromPromise&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;jQuery&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;getJSON&lt;/span&gt;(requestUrl));
  });

&lt;span class=&quot;pl-smi&quot;&gt;responseStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;response&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; render `response` to the DOM however you wish&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The refresh button&lt;/h2&gt;
&lt;p&gt;I did not yet mention that the JSON in the response is a list with 100 users. The API only allows us to specify the page offset, and not the page size, so we're using just 3 data objects and wasting 97 others. We can ignore that problem for now, since later on we will see how to cache the responses.&lt;/p&gt;
&lt;p&gt;Everytime the refresh button is clicked, the request stream should emit a new URL, so that we can get a new response. We need two things: a stream of click events on the refresh button (mantra: anything can be a stream), and we need to change the request stream to depend on the refresh click stream. Gladly, RxJS comes with tools to make Observables from event listeners.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; refreshButton &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;.refresh&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; refreshClickStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromEvent&lt;/span&gt;(refreshButton, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the refresh click event doesn't itself carry any API URL, we need to map each click to an actual URL. Now we change the request stream to be the refresh click stream mapped to the API endpoint with a random offset parameter each time.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; refreshClickStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because I'm dumb and I don't have automated tests, I just broke one of our previously built features. A request doesn't happen anymore on startup, it happens only when the refresh is clicked. Urgh. I need both behaviors: a request when &lt;em&gt;either&lt;/em&gt; a refresh is clicked &lt;em&gt;or&lt;/em&gt; the webpage was just opened.&lt;/p&gt;
&lt;p&gt;We know how to make a separate stream for each one of those cases:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestOnRefreshStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; refreshClickStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  });
  
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; startupRequestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;just&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But how can we &quot;merge&quot; these two into one? Well, there's &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypemergemaxconcurrent--other&quot;&gt;&lt;code&gt;merge()&lt;/code&gt;&lt;/a&gt;. Explained in the diagram dialect, this is what it does:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;stream A: ---a--------e-----o-----&amp;gt;
stream B: -----B---C-----D--------&amp;gt;
          vvvvvvvvv merge vvvvvvvvv
          ---a-B---C--e--D--o-----&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It should be easy now:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestOnRefreshStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; refreshClickStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  });
  
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; startupRequestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;just&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(
  requestOnRefreshStream, startupRequestStream
);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is an alternative and cleaner way of writing that, without the intermediate streams.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; refreshClickStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  })
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;just&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;));
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Even shorter, even more readable:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; refreshClickStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  })
  .&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypestartwithscheduler-args&quot;&gt;&lt;code&gt;startWith()&lt;/code&gt;&lt;/a&gt; function does exactly what you think it does. No matter how your input stream looks like, the output stream resulting of &lt;code&gt;startWith(x)&lt;/code&gt; will have &lt;code&gt;x&lt;/code&gt; at the beginning. But I'm not &lt;a href=&quot;https://en.wikipedia.org/wiki/Don't_repeat_yourself&quot; rel=&quot;nofollow&quot;&gt;DRY&lt;/a&gt; enough, I'm repeating the API endpoint string. One way to fix this is by moving the &lt;code&gt;startWith()&lt;/code&gt; close to the &lt;code&gt;refreshClickStream&lt;/code&gt;, to essentially &quot;emulate&quot; a refresh click on startup.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;startup click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nice. If you go back to the point where I &quot;broke the automated tests&quot;, you should see that the only difference with this last approach is that I added the &lt;code&gt;startWith()&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Modelling the 3 suggestions with streams&lt;/h2&gt;
&lt;p&gt;Until now, we have only touched a &lt;em&gt;suggestion&lt;/em&gt; UI element on the rendering step that happens in the responseStream's &lt;code&gt;subscribe()&lt;/code&gt;. Now with the refresh button, we have a problem: as soon as you click 'refresh', the current 3 suggestions are not cleared. New suggestions come in only after a response has arrived, but to make the UI look nice, we need to clean out the current suggestions when clicks happen on the refresh.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; clear the 3 suggestion DOM elements &lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No, not so fast, pal. This is bad, because we now have &lt;strong&gt;two&lt;/strong&gt; subscribers that affect the suggestion DOM elements (the other one being &lt;code&gt;responseStream.subscribe()&lt;/code&gt;), and that doesn't really sound like &lt;a href=&quot;https://en.wikipedia.org/wiki/Separation_of_concerns&quot; rel=&quot;nofollow&quot;&gt;Separation of concerns&lt;/a&gt;. Remember the Reactive mantra?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/e581baffb3db3e4f749350326af32de8d5ba4363/687474703a2f2f692e696d6775722e636f6d2f4149696d5138432e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e581baffb3db3e4f749350326af32de8d5ba4363/687474703a2f2f692e696d6775722e636f6d2f4149696d5138432e6a7067&quot; alt=&quot;Mantra&quot; data-canonical-src=&quot;http://i.imgur.com/AIimQ8C.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So let's model a suggestion as a stream, where each emitted value is the JSON object containing the suggestion data. We will do this separately for each of the 3 suggestions. This is how the stream for suggestion #1 could look like:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; suggestion1Stream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; responseStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; get one random user from the list&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; listUsers[&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;)];
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The others, &lt;code&gt;suggestion2Stream&lt;/code&gt; and &lt;code&gt;suggestion3Stream&lt;/code&gt; can be simply copy pasted from &lt;code&gt;suggestion1Stream&lt;/code&gt;. This is not DRY, but it will keep our example simple for this tutorial, plus I think it's a good exercise to think how to avoid repetition in this case.&lt;/p&gt;
&lt;p&gt;Instead of having the rendering happen in responseStream's subscribe(), we do that here:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;suggestion1Stream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;suggestion&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; render the 1st suggestion to the DOM&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Back to the &quot;on refresh, clear the suggestions&quot;, we can simply map refresh clicks to &lt;code&gt;null&lt;/code&gt; suggestion data, and include that in the &lt;code&gt;suggestion1Stream&lt;/code&gt;, as such:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; suggestion1Stream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; responseStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; get one random user from the list&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; listUsers[&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;)];
  })
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(){ &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;; })
  );
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And when rendering, we interpret &lt;code&gt;null&lt;/code&gt; as &quot;no data&quot;, hence hiding its UI element.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;suggestion1Stream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;suggestion&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (suggestion &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; hide the first suggestion DOM element&lt;/span&gt;
  }
  &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; show the first suggestion DOM element&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; and render the data&lt;/span&gt;
  }
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The big picture is now:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;refreshClickStream: ----------o--------o----&amp;gt;
     requestStream: -r--------r--------r----&amp;gt;
    responseStream: ----R---------R------R--&amp;gt;   
 suggestion1Stream: ----s-----N---s----N-s--&amp;gt;
 suggestion2Stream: ----q-----N---q----N-q--&amp;gt;
 suggestion3Stream: ----t-----N---t----N-t--&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Where &lt;code&gt;N&lt;/code&gt; stands for &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As a bonus, we can also render &quot;empty&quot; suggestions on startup. That is done by adding &lt;code&gt;startWith(null)&lt;/code&gt; to the suggestion streams:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; suggestion1Stream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; responseStream
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; get one random user from the list&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; listUsers[&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;)];
  })
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(){ &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;; })
  )
  .&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which results in:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;refreshClickStream: ----------o---------o----&amp;gt;
     requestStream: -r--------r---------r----&amp;gt;
    responseStream: ----R----------R------R--&amp;gt;   
 suggestion1Stream: -N--s-----N----s----N-s--&amp;gt;
 suggestion2Stream: -N--q-----N----q----N-q--&amp;gt;
 suggestion3Stream: -N--t-----N----t----N-t--&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Closing a suggestion and using cached responses&lt;/h2&gt;
&lt;p&gt;There is one feature remaining to implement. Each suggestion should have its own 'x' button for closing it, and loading another in its place. At first thought, you could say it's enough to make a new request when any close button is clicked:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; close1Button &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;.close1&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; close1ClickStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromEvent&lt;/span&gt;(close1Button, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; and the same for close2Button and close3Button&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;startup click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(close1ClickStream) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; we added this&lt;/span&gt;
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That does not work. It will close and reload &lt;em&gt;all&lt;/em&gt; suggestions, rather than just only the one we clicked on. There are a couple of different ways of solving this, and to keep it interesting, we will solve it by reusing previous responses. The API's response page size is 100 users while we were using just 3 of those, so there is plenty of fresh data available. No need to request more.&lt;/p&gt;
&lt;p&gt;Again, let's think in streams. When a 'close1' click event happens, we want to use the &lt;em&gt;most recently emitted&lt;/em&gt; response on &lt;code&gt;responseStream&lt;/code&gt; to get one random user from the list in the response. As such:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    requestStream: --r---------------&amp;gt;
   responseStream: ------R-----------&amp;gt;
close1ClickStream: ------------c-----&amp;gt;
suggestion1Stream: ------s-----s-----&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Rx* there is a combinator function called &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypecombinelatestargs-resultselector&quot;&gt;&lt;code&gt;combineLatest&lt;/code&gt;&lt;/a&gt; that seems to do what we need. It takes two streams A and B as inputs, and whenever either stream emits a value, &lt;code&gt;combineLatest&lt;/code&gt; joins the two most recently emitted values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; from both streams and outputs a value &lt;code&gt;c = f(x,y)&lt;/code&gt;, where &lt;code&gt;f&lt;/code&gt; is a function you define. It is better explained with a diagram:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;stream A: --a-----------e--------i--------&amp;gt;
stream B: -----b----c--------d-------q----&amp;gt;
          vvvvvvvv combineLatest(f) vvvvvvv
          ----AB---AC--EC---ED--ID--IQ----&amp;gt;

where f is the uppercase function
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can apply combineLatest() on &lt;code&gt;close1ClickStream&lt;/code&gt; and &lt;code&gt;responseStream&lt;/code&gt;, so that whenever the close 1 button is clicked, we get the latest response emitted and produce a new value on &lt;code&gt;suggestion1Stream&lt;/code&gt;. On the other hand, combineLatest() is symmetric: whenever a new response is emitted on &lt;code&gt;responseStream&lt;/code&gt;, it will combine with the latest 'close 1' click to produce a new suggestion. That is interesting, because it allows us to simplify our previous code for &lt;code&gt;suggestion1Stream&lt;/code&gt;, like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; suggestion1Stream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; close1ClickStream
  .&lt;span class=&quot;pl-en&quot;&gt;combineLatest&lt;/span&gt;(responseStream,             
    &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;click&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;) {
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; listUsers[&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;)];
    }
  )
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(){ &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;; })
  )
  .&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One piece is still missing in the puzzle. The combineLatest() uses the most recent of the two sources, but if one of those sources hasn't emitted anything yet, combineLatest() cannot produce a data event on the output stream. If you look at the ASCII diagram above, you will see that the output has nothing when the first stream emitted value &lt;code&gt;a&lt;/code&gt;. Only when the second stream emitted value &lt;code&gt;b&lt;/code&gt; could it produce an output value.&lt;/p&gt;
&lt;p&gt;There are different ways of solving this, and we will stay with the simplest one, which is simulating a click to the 'close 1' button on startup:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; suggestion1Stream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;close1ClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;startup click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; we added this&lt;/span&gt;
  .&lt;span class=&quot;pl-en&quot;&gt;combineLatest&lt;/span&gt;(responseStream,             
    &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;click&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;) {l
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; listUsers[&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;)];
    }
  )
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(){ &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;; })
  )
  .&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Wrapping up&lt;/h2&gt;
&lt;p&gt;And we're done. The complete code for all this was:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; refreshButton &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;.refresh&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; refreshClickStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromEvent&lt;/span&gt;(refreshButton, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; closeButton1 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;.close1&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; close1ClickStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromEvent&lt;/span&gt;(closeButton1, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; and the same logic for close2 and close3&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; requestStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;startup click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;() {
    &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; randomOffset &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;500&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;https://api.github.com/users?since=&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; randomOffset;
  });

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; responseStream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; requestStream
  .&lt;span class=&quot;pl-en&quot;&gt;flatMap&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;requestUrl&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;fromPromise&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ajax&lt;/span&gt;({url&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; requestUrl}));
  });

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; suggestion1Stream &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;close1ClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;startup click&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;combineLatest&lt;/span&gt;(responseStream,             
    &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;click&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;) {
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; listUsers[&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;random&lt;/span&gt;()&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;listUsers&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;)];
    }
  )
  .&lt;span class=&quot;pl-en&quot;&gt;merge&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;refreshClickStream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(){ &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;; })
  )
  .&lt;span class=&quot;pl-en&quot;&gt;startWith&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; and the same logic for suggestion2Stream and suggestion3Stream&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;suggestion1Stream&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;suggestion&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (suggestion &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; hide the first suggestion DOM element&lt;/span&gt;
  }
  &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; show the first suggestion DOM element&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; and render the data&lt;/span&gt;
  }
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can see this working example at &lt;a href=&quot;http://jsfiddle.net/staltz/8jFJH/48/&quot; rel=&quot;nofollow&quot;&gt;http://jsfiddle.net/staltz/8jFJH/48/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That piece of code is small but dense: it features management of multiple events with proper separation of concerns, and even caching of responses. The functional style made the code look more declarative than imperative: we are not giving a sequence of instructions to execute, we are just &lt;strong&gt;telling what something is&lt;/strong&gt; by defining relationships between streams. For instance, with Rx we told the computer that &lt;em&gt;&lt;code&gt;suggestion1Stream&lt;/code&gt; &lt;strong&gt;is&lt;/strong&gt; the 'close 1' stream combined with one user from the latest response, besides being &lt;code&gt;null&lt;/code&gt; when a refresh happens or program startup happened&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Notice also the impressive absence of control flow elements such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and the typical callback-based control flow that you expect from a JavaScript application. You can even get rid of the &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; in the &lt;code&gt;subscribe()&lt;/code&gt; above by using &lt;code&gt;filter()&lt;/code&gt; if you want (I'll leave the implementation details to you as an exercise). In Rx, we have stream functions such as &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;scan&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;combineLatest&lt;/code&gt;, &lt;code&gt;startWith&lt;/code&gt;, and many more to control the flow of an event-driven program. This toolset of functions gives you more power in less code.&lt;/p&gt;
&lt;h2&gt;What comes next&lt;/h2&gt;
&lt;p&gt;If you think Rx* will be your preferred library for Reactive Programming, take a while to get acquainted with the &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md&quot;&gt;big list of functions&lt;/a&gt; for transforming, combining, and creating Observables. If you want to understand those functions in diagrams of streams, take a look at &lt;a href=&quot;https://github.com/Netflix/RxJava/wiki/Creating-Observables&quot;&gt;RxJava's very useful documentation with marble diagrams&lt;/a&gt;. Whenever you get stuck trying to do something, draw those diagrams, think on them, look at the long list of functions, and think more. This workflow has been effective in my experience.&lt;/p&gt;
&lt;p&gt;Once you start getting the hang of programming with Rx*, it is absolutely required to understand the concept of &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/creating.md#cold-vs-hot-observables&quot;&gt;Cold vs Hot Observables&lt;/a&gt;. If you ignore this, it will come back and bite you brutally. You have been warned. Sharpen your skills further by learning real functional programming, and getting acquainted with issues such as side effects that affect Rx*.&lt;/p&gt;
&lt;p&gt;But Reactive Programming is not just Rx*. There is &lt;a href=&quot;http://baconjs.github.io/&quot; rel=&quot;nofollow&quot;&gt;Bacon.js&lt;/a&gt; which is intuitive to work with, without the quirks you sometimes encounter in Rx*. The &lt;a href=&quot;http://elm-lang.org/&quot; rel=&quot;nofollow&quot;&gt;Elm Language&lt;/a&gt; lives in its own category: it's a Functional Reactive Programming &lt;strong&gt;language&lt;/strong&gt; that compiles to JavaScript + HTML + CSS, and features a &lt;a href=&quot;http://debug.elm-lang.org/&quot; rel=&quot;nofollow&quot;&gt;time travelling debugger&lt;/a&gt;. Pretty awesome.&lt;/p&gt;
&lt;p&gt;Rx works great for event-heavy frontends and apps. But it is not just a client-side thing, it works great also in the backend and close to databases. In fact, &lt;a href=&quot;http://techblog.netflix.com/2013/02/rxjava-netflix-api.html&quot; rel=&quot;nofollow&quot;&gt;RxJava is a key component for enabling server-side concurrency in Netflix's API&lt;/a&gt;. Rx is not a framework restricted to one specific type of application or language. It really is a paradigm that you can use when programming any event-driven software.&lt;/p&gt;
&lt;p&gt;If this tutorial helped you, &lt;a href=&quot;https://twitter.com/intent/tweet?original_referer=https%3A%2F%2Fgist.github.com%2Fstaltz%2F868e7e9bc2a7b8c1f754%2F&amp;amp;text=The%20introduction%20to%20Reactive%20Programming%20you%27ve%20been%20missing&amp;amp;tw_p=tweetbutton&amp;amp;url=https%3A%2F%2Fgist.github.com%2Fstaltz%2F868e7e9bc2a7b8c1f754&amp;amp;via=andrestaltz&quot; rel=&quot;nofollow&quot;&gt;tweet it forward&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;h3&gt;Legal&lt;/h3&gt;
&lt;p&gt;© Andre Cesar de Souza Medeiros (alias &quot;Andre Staltz&quot;), 2014. Unauthorized use and/or duplication of this material without express and written permission from this site’s author and/or owner is strictly prohibited. Excerpts and links may be used, provided that full and clear credit is given to Andre Medeiros and &lt;a href=&quot;http://andre.staltz.com&quot; rel=&quot;nofollow&quot;&gt;http://andre.staltz.com&lt;/a&gt; with appropriate and specific direction to the original content.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;https://camo.githubusercontent.com/29dd0fb2d4b736b5726cc8202b39b04a24afbb48/68747470733a2f2f6c6963656e7365627574746f6e732e6e65742f6c2f62792d6e632f342e302f38387833312e706e67&quot; data-canonical-src=&quot;https://licensebuttons.net/l/by-nc/4.0/88x31.png&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&quot;Introduction to Reactive Programming you've been missing&quot; by &lt;a href=&quot;http://andre.staltz.com&quot; rel=&quot;nofollow&quot;&gt;Andre Staltz&lt;/a&gt; is licensed under a &lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot; rel=&quot;nofollow&quot;&gt;Creative Commons Attribution-NonCommercial 4.0 International License&lt;/a&gt;.&lt;br/&gt;Based on a work at &lt;a href=&quot;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&quot;&gt;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 01 Feb 2018 19:37:51 +0000</pubDate>
<dc:creator>jxub</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/90512?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>The introduction to Reactive Programming you've been missing</og:title>
<og:url>https://gist.github.com/staltz/868e7e9bc2a7b8c1f754</og:url>
<og:description>The introduction to Reactive Programming you've been missing</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gist.github.com/staltz/868e7e9bc2a7b8c1f754</dc:identifier>
</item>
<item>
<title>How does ‘class-passing’ actually work?</title>
<link>https://www.theguardian.com/us-news/2018/feb/01/poor-americans-poverty-rich-class</link>
<guid isPermaLink="true" >https://www.theguardian.com/us-news/2018/feb/01/poor-americans-poverty-rich-class</guid>
<description>&lt;p&gt;On an October night in 2003, a flat tire changed Muhammad Faridi’s life forever.&lt;/p&gt;
&lt;p&gt;Faridi was 20. An immigrant who’d moved from a small village in Pakistan to Brighton Beach, Brooklyn when he was 12, he split his time studying at City University of &lt;a href=&quot;https://www.theguardian.com/us-news/new-york&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;New York&lt;/a&gt; during the day, and driving his dad’s cab at night to make money.&lt;/p&gt;
&lt;p&gt;One of his professors had organized a human rights conference in New Jersey and, knowing about Faridi’s side job, asked him to drive the woman delivering the keynote lecture to the conference and back. And that’s what Faridi was doing until he got a flat and had to pull over in the dark on the side of Route 80. As it turned out, Faridi’s passenger was Mary Robinson: the first female president of Ireland and the United Nations high commissioner for human rights from 1997 to 2002.&lt;/p&gt;
&lt;p&gt;It took Faridi a while to change the tire – everything seemed to be going wrong that night – and as he was struggling with the car jack, the two got talking.&lt;/p&gt;
&lt;p&gt;It was coming up to the second anniversary of 9/11 and Faridi told Robinson that, as a Muslim, he was no longer sure what his place was in America. A lot of his Pakistani friends had been rounded up in immigration raids and had been deported. “You’ve got to become a lawyer,” Robinson told Faridi firmly. That would be the best way to help his community. Her words stuck with him.&lt;/p&gt;
&lt;p&gt;Fast forward 14 years, and Faridi is a partner at a prestigious New York law firm. As a kid, Faridi’s loftiest goal was maybe one day being a limo driver, doing just a little better than his father. He never thought he’d be where he is today: conducting billion-dollar lawsuits and leading pro bono cases, representing Muslim community centers and death row inmates.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Muhammed Faridi at work.&quot; src=&quot;https://i.guim.co.uk/img/media/f5e1cccc84fd1df0487ad96c2f9930f8b4884092/0_0_6996_4664/master/6996.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=73edf4d544f8f6d4617b137426e76096&quot;/&gt;&lt;/div&gt;

Muhammed Faridi at work. Photograph: Ali Smith/The Guardian
&lt;p&gt;I’m talking to Faridi in his plush office on the 30th floor of a fancy Manhattan skyscraper. Our conversation is part of a number of interviews I’m conducting with people who have dramatically changed their social class. I want to find out what it’s like to be a class “migrant”. What you learn when you journey from one socioeconomic group to another, and whether it takes an emotional toll.&lt;/p&gt;
&lt;p&gt;Stories like Faridi’s are becoming increasingly rare. Economic mobility has fallen steeply in America over the last few decades; one study estimates it has &lt;a href=&quot;https://inequality.stanford.edu/sites/default/files/fading-american-dream.pdf&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;almost halved since 1940&lt;/a&gt;. Increasingly, your class is your destiny. Nevertheless, the country remains enamored of these rags-to-riches tales which perpetuate the myth that, in the US, anything is possible if you pull yourself up by your bootstraps.&lt;/p&gt;
&lt;p&gt;It’s not just hard work that propels you up the social ladder. Success, as Faridi stresses repeatedly, is often large parts luck. But there’s also another, less tangible ingredient involved: “class-passing”.&lt;/p&gt;
&lt;p&gt;In the UK, class consciousness is woven into the national identity. In America, however, people often like to pretend that a class system doesn’t really exist. But, of course, it does.&lt;/p&gt;
&lt;p&gt;Going from a taxi driver’s son to a partner at a law firm isn’t just about academic qualifications. It’s also a matter of figuring out the right social cues. You have to understand the subtle signifiers that indicate to people that you’re one of them – whether that be the way you hold your fork, where you go on holiday or what brand of shoes you wear.&lt;/p&gt;
&lt;p&gt;As a young lawyer, Faridi spent large amounts of time trying to figure out how to crack the unspoken conventions of his new world. How to dress, for example. “I remember wearing a lot of cufflinks, because that was the thing to do,” he says.&lt;/p&gt;
&lt;p&gt;Fancy lunches with clients also became a minefield. “I was very nervous about how to pick up the cutlery so I watched a bunch of YouTube videos on proper ways to handle silverwear,” he says. Faridi grew up in a Muslim household, where you get taught to eat with your right hand. According to YouTube, Faridi chuckles, “the proper way of putting food in your mouth is by using your left hand. And I remember having a lot of discomfort with that because it was something I’d never done before.”&lt;/p&gt;
&lt;p&gt;In law school, Faridi clerked for a judge. One night, he helped the judge load some heavy documents into a taxi; the driver was his father. Faridi froze, not sure what to do. “I was embarrassed to go over and shake [my father’s] hand, so I waited until the judge had already gotten in the cab. I didn’t want the judge to see me, and I didn’t want my father to think that I was embarrassed to see him.”&lt;/p&gt;
&lt;p&gt;It wasn’t until he made partner in 2016 that Faridi lost his sense of embarrassment. After the big announcement, he remembers, he took the elevator down to the bottom of the building, where his dad was waiting in his taxi. “And he came out of the cab and we hugged each other for a good couple of minutes.”&lt;/p&gt;
&lt;p&gt;But there’s still a gulf between his new life and his old. His best friends from high school work as cab drivers and busboys or in Pathmark, a major supermarket chain, and he doesn’t get invited to poker nights at their houses. “None of them came to my wedding,” Faridi says sadly.&lt;/p&gt;
&lt;p&gt;While he’s proud of everything he’s achieved, there is part of him that mourns the person he used to be.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;The clean-energy CEO meeting Silicon Valley elites&lt;/strong&gt;&lt;/h2&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Donnel Baird with a copy of The Hard Things About Hard Things, a book he values highly.&quot; src=&quot;https://i.guim.co.uk/img/media/4bc397f383563f332bd4ba2ca77c269df11c4053/0_287_6418_4532/master/6418.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=89ebe784967f002ee7191dd3af57f35b&quot;/&gt;&lt;/div&gt;

Donnel Baird with a copy of The Hard Things About Hard Things, a book he values highly. Photograph: Ali Smith/The Guardian
&lt;p&gt;Donnel Baird spent part of his childhood in Brooklyn. In the years since, the borough has rapidly gentrified, and so has Baird. We’re chatting in a WeWork co-working office in the pricey Dumbo neighbourhood, where Baird is the CEO and founder of &lt;a href=&quot;http://blocpower.io/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;BlocPower&lt;/a&gt;, a clean-energy startup that has raised over $1m in funding from some of Silicon Valley’s biggest names – including Andreessen Horowitz, which has invested in the likes of Twitter and Airbnb.&lt;/p&gt;
&lt;p&gt;BlocPower had $4m in revenue in 2017 and has a contract to perform sustainability retrofits of 500 buildings in Brooklyn. It likely won’t be long before the company outgrows its current office space.&lt;/p&gt;
&lt;p&gt;There weren’t any trendy office spaces in Baird’s Bed-Stuy neighbourhood when he was a kid. Co-living, on the other hand, was common. He lived with his parents and sister in a in a one-bedroom apartment; two aunts and five of his cousins lived in a studio upstairs. They shared a bathroom in the hall with another family.&lt;/p&gt;
&lt;p&gt;Bed-Stuy in the 1980s was rough. Baird saw a teenager shoot another kid in the head when he was just six. It was all a far cry from the Baird family’s life in Guyana. Baird’s dad had had an important job and a big house, but in America they had to start from scratch. It took a toll on the marriage and, when Baird was eight, his parents split up and his mom moved with him down to Atlanta.&lt;/p&gt;
&lt;p&gt;In Atlanta, Baird managed to get a place at one of the better public schools, the one where rich white kids went. At first they told his mom there was no room; there literally wasn’t a spare desk. “So she got on the bus to Home Depot and bought a desk,” Baird remembers. “She dragged it back to the school and said, ‘You can just stick the desk in a corner of one of a classroom and my son will sit there. He’s extremely well behaved.’ And they said ‘OK’.”&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Donnel Baird, founder of BlockPower, at his home in Brooklyn, New York.&quot; src=&quot;https://i.guim.co.uk/img/media/9e12a165b43b575f1f23670965fac2804acaba62/0_0_7360_4417/master/7360.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=06639a2e8d870eea3e8553c4f3c92be0&quot;/&gt;&lt;/div&gt;

Donnel Baird, founder of BlockPower, at his home in Brooklyn, New York. Photograph: Ali Smith/The Guardian
&lt;p&gt;As a senior, Baird got offered a full scholarship by Howard, a historically black university. It was a great deal. But he’d also been accepted to Duke, a prestigious, largely white school. The financial aid package they offered was nowhere near as generous. Still, he ended up picking Duke, his mind swayed by a conversation with the father of one of his white friends.&lt;/p&gt;
&lt;p&gt;“Her dad was a lawyer and he told me, you know, I’m 55 years old and I come to an event like this with all these other rich, white guys, and they still ask me where I went to undergrad. I live next door to them. I have as much money as them. And they &lt;em&gt;still&lt;/em&gt; ask me because it &lt;em&gt;still&lt;/em&gt; matters to them.” Because he didn’t go to a prestigious school, the man told Baird, he’s always treated as somewhat inferior, no matter how much money makes.&lt;/p&gt;
&lt;p&gt;“Now, you’re black,” his friend’s dad said. “If you go to Howard you will never have a shot at getting the inside track. You have to go to Duke.”&lt;/p&gt;
&lt;p&gt;Having learned how to navigate the old-money world of Duke, Baird now finds himself struggling to adapt to the culture of new-money Silicon Valley as he attempts to fundraise.&lt;/p&gt;
&lt;p&gt;Rather than bonding over golf, the tech set play &lt;a href=&quot;https://www.wsj.com/articles/SB126092289275692825&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Settlers of Catan&lt;/a&gt;. They wear hoodies rather than suits. They have their own set of conventions and Baird has to code-switch accordingly. In his meetings with New York banks, for example, Baird dresses formally. “But if you go to Silicon Valley dressed like that,” he explains, “they’ll be like, this guy is a suit, he doesn’t dress like a tech person. That matters. The meeting is over.”&lt;/p&gt;
&lt;p&gt;He has even, he tells me with more than a tinge of embarrassment, bought a pair of Allbird loafers – which are &lt;a href=&quot;https://www.nytimes.com/2017/08/11/technology/allbird-shoes-silicon-valley.html?mtrref=www.google.com&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;de rigeur in the Valley&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Class and colour are, of course, inextricably intertwined, and moving to a higher social class in America often seems to involve “acting white”. Throughout his life, Baird has been accused of betraying his race.&lt;/p&gt;
&lt;p&gt;“Early on, people say that I talked white, even in my own family, which was painful. I don’t think that they would say it to hurt my feelings, they were just stating it as a fact. There’s a mix across my family of people who are very proud of me, and people are kind of resentful.”&lt;/p&gt;
&lt;p&gt;“I have family members that are living here illegally, who can’t find work, who are addicted to crack cocaine. I’m still very much connected to them, but we live in very different worlds.”&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;The real estate queen who went from South Bronx to Southampton&lt;/strong&gt;&lt;/h2&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Mary Ann Tighe always hoped to live in Manhattan so she could visit the Metropolitan Museum of Art. She never thought she might one day own an apartment opposite it.&quot; src=&quot;https://i.guim.co.uk/img/media/1c40f0463c9fe694bb525117420106ac05d06186/0_0_7360_4823/master/7360.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=685e41882f4b64efb7ad6ce4fb395a16&quot;/&gt;&lt;/div&gt;

Mary Ann Tighe always hoped to live in Manhattan so she could visit the Metropolitan Museum of Art. She never thought she might one day own an apartment opposite it. Photograph: Ali Smith/Ali Smith for The Guardian
&lt;p&gt;Someone who knows more than most about moving between different worlds is Mary Ann Tighe, routinely ranked as one of the most powerful women in New York.&lt;/p&gt;
&lt;p&gt;The 69-year-old CEO of the New York Tri-State Region of CBRE, the world’s largest commercial real estate services firm, may be a property legend, but she got into the industry fairly late, at age 36. Before that she worked as an arts adviser in the White House and helping to launch the TV channel A&amp;amp;E.&lt;/p&gt;
&lt;p&gt;Tighe grew up in a working-class Italian American family in the South Bronx. She’d always hoped to live in Manhattan one day, so she could visit the Metropolitan Museum of Art, but never thought she’d end up owning an apartment opposite the Met and be brokering billion-dollar deals. Her ambitions stretched nowhere near that high, nor were they encouraged to.&lt;/p&gt;
&lt;p&gt;One of the biggest revelations of her life, she tells me, is that many of the people around her “had lowered their own personal expectations because life had been hard. They didn’t expect to be special”.&lt;/p&gt;
&lt;p&gt;It’s a common phenomenon: research by the &lt;a href=&quot;https://www.jrf.org.uk/report/psychological-perspectives-poverty&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Joseph Rowntree Foundation&lt;/a&gt; in 2015, for example, found that those experiencing poverty are significantly less confident in their own ability to succeed, which becomes a self-fulfilling prophecy.&lt;/p&gt;
&lt;p&gt;For a short time, Tighe internalised this attitude. She was 13 and had just moved from a free elementary school into a fee-paying high school; her parents were working all hours to afford it and Tighe was acutely conscious of this.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Mary Ann Tighe: ‘I couldn’t listen to them tell me that I couldn’t do something.’&quot; src=&quot;https://i.guim.co.uk/img/media/6955888a4a29a9314d4fc5f1a41d95225741574d/0_178_6603_3961/master/6603.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=8574e94c8256f4f0c9327388e4d889d8&quot;/&gt;&lt;/div&gt;

Mary Ann Tighe: ‘I couldn’t listen to them tell me that I couldn’t do something.’ Photograph: Ali Smith for The Guardian
&lt;p&gt;Her new high school had a policy whereby the five top-performing kids in the grade got free tuition. Tighe wondered if she might be able to get in the top five and mentioned it to her family and a teacher. All of them had the same reaction: “You were the smartest person in the class in elementary school but you’re in a much bigger pond now, so you’re not going to be the smartest any more.”&lt;/p&gt;
&lt;p&gt;Tighe says she took that to heart and didn’t bother trying hard in class. But even without trying, Tighe came number six in her first semester. “I had a kind of breakdown,” Tighe says. “I wept and wept.”&lt;/p&gt;
&lt;p&gt;She was so angry with herself, she says, for believing that she couldn’t be the best and for not working to relieve the financial burden on her parents. “Suffice to say I was never again not number one in that school,” she says. “It was at that moment that I realized that other people’s worldviews were not the same as mine. I couldn’t listen to them tell me that I couldn’t do something.”&lt;/p&gt;
&lt;p&gt;One of the most valuable (and least studied) aspects of growing up with economic privilege, I’ve observed, is the sense of entitlement and the confidence it gives you. “Almost unreasonable confidence,” Tighe notes. “The confidence that comes from the achievement of others. Your parents are successful and you think that’s you.”&lt;/p&gt;
&lt;p&gt;Today, Tighe is involved with her old high school in the Bronx and also works with the Inner City scholarship fund which gives free tuition to children. She has been funding scholarships since 1982, and she stays in touch with the recipients.&lt;/p&gt;
&lt;p&gt;“Every one of these kids tells me the same thing,” she says. “Getting that scholarship made me realize I was special and changed everything. That vote of confidence in someone is transformational.”&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;From prep school to the managing director of an ad agency&lt;/strong&gt;&lt;/h2&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Nancy Reyes at The Harvard Club in Midtown Manhattan, where she is a member.&quot; src=&quot;https://i.guim.co.uk/img/media/15f032d6bcd0b02cf7b525684d895dedf630525c/0_210_5758_4072/master/5758.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=a0ac85d83c6eff5dbe9f8716ae2e26b6&quot;/&gt;&lt;/div&gt;

Nancy Reyes at The Harvard Club in Midtown Manhattan, where she is a member. Photograph: Ali Smith/The Guardian
&lt;p&gt;When Nancy Reyes was 11 she was selected for a diversity initiative called &lt;a draggable=&quot;true&quot; href=&quot;https://www.prepforprep.org/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;Prep for Prep&lt;/a&gt;. The program identifies promising students of colour in New York and sends them to private schools.&lt;/p&gt;
&lt;p&gt;Reyes was living in Queens at the time. Her dad was a taxi driver and her mom was a cleaner. She says: it was “a very paycheck-to-paycheck kind of life.” She went to the program after school to get caught up on things that private school kids learned, like Latin. Then, at age 13, she got a place at Trinity, one of the most prestigious schools in the US.&lt;/p&gt;
&lt;p&gt;Reyes credits Prep for Prep for where she is today: the managing director of New York ad agency TBWA/Chiat/Day, and one of the most respected women in advertising.&lt;/p&gt;
&lt;p&gt;But being plucked from working-class Queens and inserted into a school filled with Manhattan aristocracy was tough. “If you’re going to do these programs where you insert people of color into private schools, then they also need some therapy,” Reyes tells me. “I certainly did.”&lt;/p&gt;
&lt;p&gt;Her accent, for example, immediately marked her out as different. “I wanted so badly not to have an accent; to speak ‘properly.’” Kids would say “&lt;a href=&quot;https://en.wikipedia.org/wiki/Rosie_Perez&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline in-body-link--immersive&quot;&gt;do the Rosie Perez,&lt;/a&gt;” to her a lot, Reyes remembers.&lt;/p&gt;
&lt;p&gt;In private, she was training herself to speak differently. “Not to say &lt;em&gt;cawfee&lt;/em&gt;, for example, and not to do any of the things that I think were perceived as being people-of color-things. Like rolling your eyes or doing those kind of side-to-side head movements. I always thought, that’s not me, I’m not that person. I belong here, I’m gonna behave like everybody else behaves.”&lt;/p&gt;
&lt;p&gt;The fact that her parents would never be like the other kids’ parents, however, was sometimes frustrating. “I remember having a moment where I yelled at my mom because she wouldn’t learn English. I remember saying, ‘This is America, you have to speak English!’ I was so brutal to her.”&lt;/p&gt;
&lt;p&gt;So desperate was Reyes to fit that, on occasion, she – literally – almost died of embarrassment. Trinity students all knew how to swim well; the school had a big pool and everyone had summer houses with pools. She didn’t. One year, she was invited to a pool party. “Everybody was pushing everybody into the pool, messing around. I got pushed into the pool and I was treading water, because I didn’t know how to swim. I was too embarrassed to tell anyone or ask for help, even though I might have drowned.”&lt;/p&gt;
&lt;p&gt;When time came to apply for college, Reyes ended up getting accepted to all the Ivy League colleges she’d applied to. She came home one day and the acceptance letters were there waiting for her. That was the moment, Reyes says, when she thought for the first time, “Oh my God, I think I belong. I remember sitting on the stoop and opening them and thinking, I earned it.”&lt;/p&gt;
&lt;p&gt;At Harvard, Reyes was selected (“punched,” they call it in Harvardese) for the prestigious Hasty Pudding Club. She was excited about it until she started filling out the application, which asked about her parents’ occupation.&lt;/p&gt;
&lt;p&gt;“I remember thinking, ‘Why do you need to know their occupation?’ As soon as I put that down, you’re gonna be like, ‘No way a taxi driver’s kid can come here.’” Reyes shrugged. “So, I was like, fuck it, and I didn’t do it. I didn’t have to be reminded that I was poor, while everybody else was rich.”&lt;/p&gt;
&lt;p&gt;After years of trying to fit in with her over-privileged peers, Reyes realized that perhaps she didn’t want to be so much like them after all.&lt;/p&gt;

</description>
<pubDate>Thu, 01 Feb 2018 17:34:38 +0000</pubDate>
<dc:creator>kevbam</dc:creator>
<og:url>http://www.theguardian.com/us-news/2018/feb/01/poor-americans-poverty-rich-class</og:url>
<og:description>America is built on rags-to-riches tales. But how does ‘class-passing’ actually work – and how to navigate your new life and your old?</og:description>
<og:image>https://i.guim.co.uk/img/media/eac94617bfb07800fde86166e557fd458d8166fa/0_495_7360_4417/master/7360.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxOC8wMS8zMS9mYWNlYm9va19kZWZhdWx0LnBuZw&amp;s=d9db3e8eaf698dd0497465b1be03221f</og:image>
<og:type>article</og:type>
<og:title>'Class-passing': how do you learn the rules of being rich?</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/us-news/2018/feb/01/poor-americans-poverty-rich-class</dc:identifier>
</item>
<item>
<title>Boosting teeth’s healing ability by mobilizing stem cells in dental pulp</title>
<link>https://www.scientificamerican.com/article/instead-of-filling-cavities-dentists-may-soon-regenerate-teeth/</link>
<guid isPermaLink="true" >https://www.scientificamerican.com/article/instead-of-filling-cavities-dentists-may-soon-regenerate-teeth/</guid>
<description>&lt;div class=&quot;mura-region&quot;&gt;
&lt;div class=&quot;mura-region-local&quot;&gt;
&lt;p&gt;For dentists, a cavity is a conundrum—in order to save the tooth they must further damage it. Currently, the primary way to treat a cavity is to excavate the decay and the surrounding area before filling the resulting crater with a durable surrogate material such as metal, plastic or glass cement.&lt;/p&gt;
&lt;p&gt;But what if instead of drilling holes into teeth and patching them up with synthetic fillers, dentists could coax our pearly whites to regrow themselves? Recently, Paul Sharpe, a bioengineer at King’s College London, and his colleagues discovered a new way to do exactly this in mice. Last year they published a &lt;a href=&quot;https://www.nature.com/articles/srep39654&quot;&gt;study&lt;/a&gt; describing their innovative techniques in &lt;em&gt;Scientific Reports&lt;/em&gt;. And since then they have made even more progress that edges this experimental procedure closer to human clinical trials. If the treatment eventually becomes part of the dentist’s standard tool kit, scientists say it would easily be one of the field’s most important advances in 50 years.&lt;/p&gt;
&lt;p&gt;Our teeth get damaged all the time. Most of the injuries they endure are due to everyday wear and tear as well as the activity of microbes in the mouth. These organisms coat the surface of each tooth and feed on meal remnants. As they break down particles of food, some of these microbes produce and secrete acids as a by-product. And that acidity degrades enamel—the tooth’s hard outer layer.&lt;/p&gt;
&lt;p&gt;Like skin, teeth can usually repair minor mishaps themselves. When our teeth remain uncleaned for too long, however, acid can eat through the enamel and begin dissolving underlying layers of dense, bony tissue called dentin. When dentin is seriously injured, stem cells located in the tooth's soft, innermost layer—the dental pulp—morph into cells called odontoblasts, which secrete new tissue. (Stem cells are capable of becoming virtually any type of cell.) Yet when the injury is too large or deep, that fresh dentin is not sufficient to restore the tooth. The result is often a cavity.&lt;/p&gt;
&lt;p&gt;Sharpe suspected he could dramatically boost teeth’s natural healing ability by mobilizing stem cells in the dental pulp. Earlier research had demonstrated the &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2634250/&quot;&gt;Wnt signaling pathway&lt;/a&gt;—a particular cascade of molecules involved in cell-to-cell communication—is essential for tissue repair and stem cell development in many parts of the body such as the skin, intestines and brain. Sharpe wondered: Could this signaling pathway also be important for self-repair processes in teeth? If so, maybe exposing damaged teeth to drugs that stimulate Wnt signaling would similarly encourage the activity of stem cells in the dental pulp—giving teeth the kind of regenerative superpowers usually seen only in plants, salamanders and starfish.&lt;/p&gt;
&lt;p&gt;To test this idea, Sharpe and his fellow researchers drilled holes into the molars of mice, mimicking cavities. They then soaked tiny collagen sponges (which are made from the same protein found in dentin) in various drugs known to stimulate Wnt signaling, including tideglusib, a compound that has been investigated in clinical trials for its potential to treat Alzheimer's and other neurological disorders. The scientists then placed these drug-soaked sponges in the drilled mouse molars, sealed them up and left them for four to six weeks. The teeth treated with these drugs produced significantly more dentin than ones untreated or stuffed with an unsoaked sponge or typical dental fillers. In most cases the technique restored the rodents’ pearly whites to their former intact state. “It was essentially a complete repair,” Sharpe says. “You can barely see the joint where the old and new dentin meet. This could eventually be the first routine pharmaceutical treatment in dentistry.”&lt;/p&gt;
&lt;p&gt;David Mooney, a professor or bioengineering at Harvard University who has also investigated new ways to heal teeth but was not involved in the study, says he is “very impressed” by these findings. “This is not just scientifically important, but has significant practical advantages,&quot; he says. Adam Celiz, an assistant professor of bioengineering at Imperial College London who was also not involved in the recent research, says this is an important advance in the emerging field of regenerative dentistry. “The materials dentists use could soon be revolutionized,” he says.&lt;/p&gt;
&lt;p&gt;Any treatment that recruits the body's native stem cells or adds new stems cells to the body, however, poses a risk of uncontrolled tissue growth. Experimental and unregulated stem cell therapies have resulted in brain tumors, for example, as well as &lt;a href=&quot;https://www.scientificamerican.com/article/stem-cell-cosmetics/&quot;&gt;bones growing in eyelids&lt;/a&gt;. But in this case, Sharpe says, the amounts of drug used are so tiny that the risk of unwanted growth is minimal. Celiz agrees the danger is small but he says rigorous testing in lab animals and clinical trials should be done to rule out potential side effects.&lt;/p&gt;
&lt;p&gt;Since publishing their initial study Sharpe and his colleagues have tested their regenerative technique on rats. (Because those rodents have larger teeth than mice, a drilled rat molar better approximates human tooth decay.) The treatment worked just as well on the rats as it had on the mice, Sharpe says, but the data has not yet been published. Now Sharpe’s team is investigating a larger group of candidate drugs in order to determine whether another medication works better than those already tested, and to determine the optimal dose. They are also developing an alternative delivery system that is more amenable to modern dental practices: The chosen drug will be dissolved in a gel that is injected into a cavity and bathed with ultraviolet light to solidify it—a quick and easy procedure similar to one dentists already use to seal and repair teeth.&lt;/p&gt;
&lt;p&gt;In order to formally introduce this treatment to modern dentistry, however, the researchers will need to perform clinical trials with human patients. Such work is at least several years away, Sharpe says. But some of the drugs he might consider are already approved for other uses in humans, which he hopes could expedite the process for eventual approval. &quot;A lot of dental treatments are still in the dark ages,&quot; Sharpe says. &quot;It's time to move on.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 01 Feb 2018 17:23:08 +0000</pubDate>
<dc:creator>digital55</dc:creator>
<og:type>article</og:type>
<og:title>Instead of Filling Cavities, Dentists May Soon Regenerate Teeth</og:title>
<og:description>Researchers recently discovered certain drugs, including one developed to treat Alzheimer&amp;rsquo;s, stimulate innate self-repair mechanisms</og:description>
<og:image>https://www.scientificamerican.com/sciam/cache/file/9B2A27CB-E172-4223-9373CC0C742CA9E6_agenda.jpg?w=600&amp;h=335</og:image>
<og:url>https://www.scientificamerican.com/article/instead-of-filling-cavities-dentists-may-soon-regenerate-teeth/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scientificamerican.com/article/instead-of-filling-cavities-dentists-may-soon-regenerate-teeth/</dc:identifier>
</item>
<item>
<title>Startup Investor School: The Basics of Seed Investing</title>
<link>http://blog.ycombinator.com/startup-investor-school/</link>
<guid isPermaLink="true" >http://blog.ycombinator.com/startup-investor-school/</guid>
<description>&lt;div class=&quot;loop-post-title single-title&quot;&gt;


&lt;div class=&quot;loop-post-meta loop-post-meta-single&quot;&gt;&lt;span class=&quot;post-share-buttons&quot;/&gt;

&lt;span class=&quot;post-date&quot;&gt;February 1, 2018&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;post-content&quot; readability=&quot;69.876553793399&quot;&gt;
&lt;p&gt;Last year, for the first time, we taught a MOOC (massively open online course) for startup founders called Startup School. This year, we’re adding a new course called &lt;a href=&quot;https://investor.startupschool.org&quot;&gt;Startup Investor School&lt;/a&gt; which will teach the basics of seed (early) stage startup investing to anyone interested.&lt;/p&gt;
&lt;p&gt;It will be a free, 4-day course held live in Y Combinator’s office in Mountain View, CA and live-streamed around the world. The class will run Monday, March 5th to Thursday, March 8th from 10am – 12pm each day.&lt;/p&gt;
&lt;p&gt;We believe that the more great seed investors there are the more chance startups have to succeed. Startup Investor School will be open and accessible to anyone, and therefore we hope to be relevant to as diverse a group of investors as possible. By adding more and more diverse investors to the mix, the entire startup ecosystem will improve. This will give us more, better startups, more innovation, and, we firmly believe, make the world a better place.&lt;/p&gt;
&lt;p&gt;It turns out there are lots of hard and sometimes non-intuitive things to do to be a great seed investor. We’ll cover those things as part of these course topics:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How to get started?&lt;/li&gt;
&lt;li&gt;How much should you invest?&lt;/li&gt;
&lt;li&gt;How do you choose the right company in which to invest?&lt;/li&gt;
&lt;li&gt;How should you make your decisions?&lt;/li&gt;
&lt;li&gt;How do you get dealflow?&lt;/li&gt;
&lt;li&gt;How do you construct a portfolio?&lt;/li&gt;
&lt;li&gt;How much should you hope to own of a company?&lt;/li&gt;
&lt;li&gt;How does dilution work?&lt;/li&gt;
&lt;li&gt;What’s the difference between a safe, a convertible note, and equity?&lt;/li&gt;
&lt;li&gt;Are those the same thing as options?&lt;/li&gt;
&lt;li&gt;How is a cap table structured?&lt;/li&gt;
&lt;li&gt;How should investors work with companies?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The class leads up to Y Combinator’s famous &lt;a href=&quot;https://www.ycombinator.com/demoday/faq/&quot;&gt;Demo Days&lt;/a&gt; on March 19 and 20, where YC’s latest batch of startups present their companies to a room full of investors. We’ll extend a Demo Day livestream invitation to all participants in Startup Investor School who verify they qualify as accredited investors (meaning they meet the &lt;a href=&quot;https://www.ecfr.gov/cgi-bin/retrieveECFR?gp=&amp;amp;SID=8edfd12967d69c024485029d968ee737&amp;amp;r=SECTION&amp;amp;n=17y3.0.1.1.12.0.46.176&quot;&gt;SEC requirements&lt;/a&gt; for accreditation). Ten course participants will be chosen at random to get invitations to join Demo Day in person in Mountain View.&lt;/p&gt;
&lt;p&gt;Apply here starting today: &lt;a href=&quot;https://investor.startupschool.org&quot;&gt;https://investor.startupschool.org&lt;/a&gt;. The application will be open until 11:59PM Pacific Time on Sunday, February 18th.&lt;/p&gt;
&lt;p&gt;Email us at &lt;a href=&quot;mailto:startupschool@ycombinator.com&quot;&gt;startupschool@ycombinator.com&lt;/a&gt; with any questions. Also, check out &lt;a href=&quot;https://www.forbes.com/sites/alexkonrad/2018/02/01/y-combinator-launches-online-startup-investor-program/&quot;&gt;this Forbes article&lt;/a&gt; by Alex Konrad about the new program.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;h3 id=&quot;mc_copy&quot;&gt;Sign up for weekly updates from Y Combinator.&lt;/h3&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 01 Feb 2018 16:10:03 +0000</pubDate>
<dc:creator>sandslash</dc:creator>
<og:title>Startup Investor School: The Basics of Seed Investing</og:title>
<og:url>http://blog.ycombinator.com/startup-investor-school/</og:url>
<og:type>article</og:type>
<og:description>Last year, for the first time, we taught a MOOC (massively open online course) for startup founders called Startup School. This year, we’re adding a new course called Startup Investor School which will teach the basics of seed (early) stage startup investing to anyone interested. Applications are op</og:description>
<og:image>http://blog.ycombinator.com/wp-content/uploads/2018/01/Startup-Investor-School-The-Basics-of-Seed-Investing.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.ycombinator.com/startup-investor-school/</dc:identifier>
</item>
</channel>
</rss>