<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Elon Musk emails employees about &amp;#039;extensive and damaging sabotage&amp;#039; by employee</title>
<link>https://www.cnbc.com/2018/06/18/elon-musk-email-employee-conducted-extensive-and-damaging-sabotage.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2018/06/18/elon-musk-email-employee-conducted-extensive-and-damaging-sabotage.html</guid>
<description>&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Tesla CEO &lt;a href=&quot;https://www.cnbc.com/elon-musk/&quot;&gt;Elon Musk&lt;/a&gt; sent an email to all employees on Monday morning &lt;a href=&quot;https://www.cnbc.com/2018/06/18/elon-musk-email-tesla-factory-paint-shop-fire-sunday.html&quot;&gt;about a factory fire&lt;/a&gt;, and seemed to reference possible sabotage.&lt;/p&gt;
&lt;p&gt;Now, CNBC has learned that Musk also sent an e-mail to all employees at &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;74213&quot; data-inline-quote-symbol=&quot;TSLA&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=TSLA&quot;&gt;Tesla&lt;/a&gt; late on Sunday night alleging that he has discovered a saboteur in the company's ranks.&lt;/p&gt;
&lt;p&gt;Musk said this person had conducted &quot;quite extensive and damaging sabotage&quot; to the company's operations, including by changing code to an internal product and exporting data to outsiders.&lt;/p&gt;

&lt;p&gt;In 2016, after a SpaceX rocket exploded while being fueled up before an engine test, Musk and SpaceX COO and President Gwynne Shotwell also &lt;a class=&quot;inline_asset&quot; href=&quot;http://spacenews.com/spacexs-musk-says-sabotage-unlikely-cause-of-sept-1-explosion-but-still-a-worry/&quot; title=&quot;http://spacenews.com/spacexs-musk-says-sabotage-unlikely-cause-of-sept-1-explosion-but-still-a-worry/&quot;&gt;looked into&lt;/a&gt; the possibility of sabotage.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Several employees, from different divisions within Tesla, confirmed receipt of the e-mail to CNBC.&lt;/p&gt;
&lt;p&gt;Tesla is currently ramping up production to make its previously stated goal of 5,000 Model 3s per week by the end of June. Last week, Tesla announced a &lt;a href=&quot;https://www.cnbc.com/2018/06/12/tesla-to-cut-about-9-percent-of-jobs-across-company-report.html&quot;&gt;broad restructuring&lt;/a&gt;, slashing at least 9 percent of its workforce. Workers who are actively involved in Model 3 production would not be affected, the company said.&lt;/p&gt;
&lt;p&gt;Tesla declined to comment on the e-mail.&lt;/p&gt;
&lt;p&gt;Here's the full email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From: Elon Musk&lt;/p&gt;
&lt;p&gt;To: Everybody&lt;/p&gt;
&lt;p&gt;Subject: Some concerning news&lt;/p&gt;
&lt;p&gt;June 17, 2018&lt;/p&gt;
&lt;p&gt;11:57 p.m.&lt;/p&gt;
&lt;p&gt;I was dismayed to learn this weekend about a Tesla employee who had conducted quite extensive and damaging sabotage to our operations. This included making direct code changes to the Tesla Manufacturing Operating System under false usernames and exporting large amounts of highly sensitive Tesla data to unknown third parties.&lt;/p&gt;
&lt;p&gt;The full extent of his actions are not yet clear, but what he has admitted to so far is pretty bad. His stated motivation is that he wanted a promotion that he did not receive. In light of these actions, not promoting him was definitely the right move.&lt;/p&gt;
&lt;p&gt;However, there may be considerably more to this situation than meets the eye, so the investigation will continue in depth this week. We need to figure out if he was acting alone or with others at Tesla and if he was working with any outside organizations.&lt;/p&gt;
&lt;p&gt;As you know, there are a long list of organizations that want Tesla to die. These include Wall Street short-sellers, who have already lost billions of dollars and stand to lose a lot more. Then there are the oil &amp;amp; gas companies, the wealthiest industry in the world — they don't love the idea of Tesla advancing the progress of solar power &amp;amp; electric cars. Don't want to blow your mind, but rumor has it that those companies are sometimes not super nice. Then there are the multitude of big gas/diesel car company competitors. If they're willing to cheat so much about emissions, maybe they're willing to cheat in other ways?&lt;/p&gt;
&lt;p&gt;Most of the time, when there is theft of goods, leaking of confidential information, dereliction of duty or outright sabotage, the reason really is something simple like wanting to get back at someone within the company or at the company as a whole. Occasionally, it is much more serious.&lt;/p&gt;
&lt;p&gt;Please be extremely vigilant, particularly over the next few weeks as we ramp up the production rate to 5k/week. This is when outside forces have the strongest motivation to stop us.&lt;/p&gt;
&lt;p&gt;If you know of, see or suspect anything suspicious, please send a note to [&lt;em&gt;email address removed for privacy&lt;/em&gt;] with as much info as possible. This can be done in your name, which will be kept confidential, or completely anonymously.&lt;/p&gt;
&lt;p&gt;Looking forward to having a great week with you as we charge up the super exciting ramp to 5000 Model 3 cars per week!&lt;/p&gt;
&lt;p&gt;Will follow this up with emails every few days describing the progress and challenges of the Model 3 ramp.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Thanks for working so hard to make Tesla successful,&lt;br/&gt;Elon&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;/&gt;</description>
<pubDate>Mon, 18 Jun 2018 22:26:53 +0000</pubDate>
<dc:creator>yasp</dc:creator>
<og:type>article</og:type>
<og:url>https://www.cnbc.com/2018/06/18/elon-musk-email-employee-conducted-extensive-and-damaging-sabotage.html</og:url>
<og:image>https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2017/10/10/104763989-GettyImages-855370098-elon-musk.1910x1000.jpg</og:image>
<og:title>Elon Musk sends company email about 'extensive and damaging sabotage' by employee</og:title>
<og:description>Tesla CEO Elon Musk sent an e-mail to all employees late on Sunday night alleging a saboteur within the company's ranks had tweaked code on internal products and sent company data out without authorization.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2018/06/18/elon-musk-email-employee-conducted-extensive-and-damaging-sabotage.html</dc:identifier>
</item>
<item>
<title>Amazon shareholders demand it stop selling facial recognition to governments</title>
<link>https://www.independent.co.uk/news/business/amazon-recognition-shareholders-jeff-bezos-letter-privacy-surveillance-facial-recognition-a8405221.html</link>
<guid isPermaLink="true" >https://www.independent.co.uk/news/business/amazon-recognition-shareholders-jeff-bezos-letter-privacy-surveillance-facial-recognition-a8405221.html</guid>
<description>&lt;p&gt;A group of &lt;a href=&quot;https://www.independent.co.uk/topic/amazon&quot;&gt;Amazon&lt;/a&gt; shareholders is asking CEO &lt;a href=&quot;https://www.independent.co.uk/topic/jeff-bezos&quot;&gt;Jeff Bezos&lt;/a&gt; to stop selling and marketing pattern-recognition technology to governments after civil liberties groups warned of the potential for abuse.&lt;/p&gt;&lt;p&gt;Earlier this year, a group of advocacy organisations led by the American Civil Liberties Union (ACLU) published a report detailing how Amazon was marketing its Rekognition tool to American law enforcement agencies. In addition to touting the technology as helping to find suspects by allowing law enforcement to sift through images of faces, Amazon has said it could be used to preemptively identify “persons of interest” and prevent crimes.&lt;/p&gt;&lt;p&gt;A letter signed by 19 shareholders - and provided to &lt;em&gt;The&lt;/em&gt; &lt;em&gt;Independent&lt;/em&gt; by the ACLU - urges Mr Bezos to halt the tool’s expansion until those concerns can be addressed.&lt;/p&gt;&lt;p&gt;Furnishing police and sheriff’s departments with the tool would bolster “government surveillance infrastructure technology” and could drive down Amazon’s value, the letter warned. It also echoed concerns about the potential for misuse.&lt;/p&gt;&lt;p&gt;“While Rekognition may be intended to enhance some law enforcement activities, we are deeply concerned it may ultimately violate civil and human rights”, the letter said. “We are concerned the technology would be used to unfairly and disproportionately target and surveil people of colour, immigrants, and civil society organisations”.&lt;/p&gt;&lt;p&gt;Outside of the United States, authoritarian regimes in other countries could use the tool to intimidate democracy advocates, the letter warned.&lt;/p&gt;&lt;div readability=&quot;556&quot;&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;1/50&lt;/span&gt; 18 June 2018&lt;/h2&gt;
&lt;p&gt;Residents pass by a temple gate collapsed by an earthquake in Ibaraki, Osaka Prefecture, western Japan. The earthquake, which struck western Japan, killed three people and injured more than 50.&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;2/50&lt;/span&gt; 17 June 2018&lt;/h2&gt;
&lt;p&gt;Juan Carlos Osorio, manager of Mexico's national football team, celebrates their World Cup victory against Germany&lt;/p&gt;
&lt;p&gt;Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;3/50&lt;/span&gt; 16 June 2018&lt;/h2&gt;
&lt;p&gt;Kashmiri youths through stones during clashes between protestors and Indian government forces in Srinagar&lt;/p&gt;
&lt;p&gt;AFP/Getty Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;4/50&lt;/span&gt; 16 June 2018&lt;/h2&gt;
&lt;p&gt;People are silhouetted on the flybridge of a yacht as fireworks illuminates the sky over the Yas Viceroy luxury hotel on the first day of the Muslim holiday of Eid Al-Fitr at the Marina on Yas Island, Abu Dhabi&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;5/50&lt;/span&gt; 15 June 2018&lt;/h2&gt;
&lt;p&gt;Somali Muslims take part in Eid al-Fitr prayer which marks the end of the holy month of Ramadan at the football pitch of the Jamacadaha stadium in Mogadishu.&lt;/p&gt;
&lt;p&gt;AFP/Getty Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;6/50&lt;/span&gt; 14 June 2018&lt;/h2&gt;
&lt;p&gt;Artists perform during the opening ceremony of the 2018 World Cup in Russia ahead of the group A match between Russia and Saudi Arabia at Luzhniki Stadium in Moscow.&lt;/p&gt;
&lt;p&gt;Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;7/50&lt;/span&gt; 13 June 2018&lt;/h2&gt;
&lt;p&gt;Pope Francis arrives to lead the Wednesday general audience in Saint Peter's square at the Vatican&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;8/50&lt;/span&gt; 12 June 2018&lt;/h2&gt;
&lt;p&gt;US President Donald Trump shakes hands with North Korean leader Kim Jong Un during their historic meeting at the Capella Hotel on Sentosa island in Singapore.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;9/50&lt;/span&gt; 11 June 2018&lt;/h2&gt;
&lt;p&gt;US President Donald Trump looking at a cake being brought for him during a working lunch with Singapore's Prime Minister Lee Hsien Loong during his visit to The Istana, the official residence of the prime minister, in Singapore. Kim Jong Un and Donald Trump will meet on June 12 for an unprecedented summit, with the US President calling it a &quot;one time shot&quot; at peace.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;10/50&lt;/span&gt; 10 June 2018&lt;/h2&gt;
&lt;p&gt;Muharrem Ince, presidential candidate of Turkey's main opposition Republican People's Party (CHP), delivers a speech from the roof of a bus during a campaign meeting in Istanbul.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;11/50&lt;/span&gt; 9 June 2018&lt;/h2&gt;
&lt;p&gt;French President Emmanuel Macron, German Chancellor Angela Merkel and Japan's Prime Minister Shinzo Abe speaking to US Presidend Donald Trump during the second day of the G7 meeting in Charlevoix, Canada. Looking on is US National Security Advisor John Bolton.&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;12/50&lt;/span&gt; 8 June 2018&lt;/h2&gt;
&lt;p&gt;Former South African President Jacob Zuma sings and dances on stage after delivering a speech during a rally in his support outside the High Court, in Durban.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;13/50&lt;/span&gt; 7 June 2018&lt;/h2&gt;
&lt;p&gt;Russian President Vladimir Putin listens to a question during his annual call-in show in Moscow. Putin hosts call-in shows every year, which typically provide a platform for ordinary Russians to appeal to the president on issues ranging from foreign policy to housing and utilities.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;14/50&lt;/span&gt; 6 June 2018&lt;/h2&gt;
&lt;p&gt;Protesters wave flags and shout slogans during a demonstration against the use of the term &quot;Macedonia&quot; in any solution to a dispute between Athens and Skopje over the former Yugoslav republic's name, in the northern town of Pella, Greece.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;15/50&lt;/span&gt; 5 June 2018&lt;/h2&gt;
&lt;p&gt;Police officers salute as the caskets of policewomen Soraya Belkacemi, 44, and Lucile Garcia, 54, arrive during their funeral in Liege. The two officers, and one bystander were killed in Liege on Tuesday by a gunman. Police later killed the attacker, and other officers were wounded in the shooting.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;16/50&lt;/span&gt; 4 June 2018&lt;/h2&gt;
&lt;p&gt;A rescue worker carries a child covered with ash after a volcano erupted violently in El Rodeo, Guatemala. Volcan de Fuego, whose name means &quot;Volcano of Fire&quot;, spewed an 8km (5-mile) stream of red hot lava and belched a thick plume of black smoke and ash that rained onto the capital and other regions. Dozens were killed across three villages.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;17/50&lt;/span&gt; 3 June 2018&lt;/h2&gt;
&lt;p&gt;A recycler drags a huge bag of paper sorted for recycling past a heap of non-recyclable material at Richmond sanitary landfill site in the industrial city of Bulawayo. Plastic waste remains a challenging waste management issue due to its non-biodegrable nature, if not managed properly plastic ends up as litter polluting water ways, wetlands and storm drains causing flash flooding around Zimbabwe's cities and towns. Urban and rural areas are fighting the continuous battle against a scourge of plastic litter. On June 5, 2018 the United Nations mark the World Environment Day which plastic pollution is the main theme this year.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;18/50&lt;/span&gt; 2 June 2018&lt;/h2&gt;
&lt;p&gt;Palestinian mourners carry the body of 21-year-old medical volunteer Razan al-Najjar during her funeral after she was shot dead by Israeli soldiers near the Gaza border fence on June 1, in another day of protests and violence. She was shot near Khan Yunis in the south of the territory, health ministry spokesman Ashraf al-Qudra said, bringing the toll of Gazans killed by Israeli fire since the end of March to 123.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;19/50&lt;/span&gt; 1 June 2018&lt;/h2&gt;
&lt;p&gt;Spain's new Prime Minister Pedro Sanchez poses after a vote on a no-confidence motion at the Spanish Parliament in Madrid. Spain's parliament ousted Prime Minister Mariano Rajoy in a no-confidence vote sparked by fury over his party's corruption woes, with his Socialist arch-rival Pedro Sanchez automatically taking over.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;20/50&lt;/span&gt; 31 May 2018&lt;/h2&gt;
&lt;p&gt;Zinedine Zidane looks on after a press conference to announce his resignation as manager from Real Madrid. He confirmed he was leaving the Spanish giants, just days after winning the Champions League for the third year in a row.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;21/50&lt;/span&gt; 30 May 2018&lt;/h2&gt;
&lt;p&gt;A worker cleans up the Millenaire migrants makeshift camp along the Canal de Saint-Denis near Porte de la Villette, northern Paris, following its evacuation on May 30. More than a thousand migrants and refugees were evacuated early in the morning from the camp that had been set up for several weeks along the Canal.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;22/50&lt;/span&gt; 29 May 2018&lt;/h2&gt;
&lt;p&gt;Police and ambulances are seen at the site where a gunman shot dead three people, two of them policemen, before being killed by elite officers, in the eastern Belgian city of Liege.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;23/50&lt;/span&gt; 28 May 2018&lt;/h2&gt;
&lt;p&gt;French President Emmanuel Macron meets with Mamoudou Gassama, 22, from Mali, at the presidential Elysee Palace in Paris. Gassama living illegally in France is being honored by Macron for scaling an apartment building over the weekend to save a 4-year-old child dangling from a fifth-floor balcony.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;24/50&lt;/span&gt; 27 May 2018&lt;/h2&gt;
&lt;p&gt;Migrants wait to disembark from the ship Aquarius in the Sicilian harbour of Catania, Italy&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;25/50&lt;/span&gt; 26 May 2018&lt;/h2&gt;
&lt;p&gt;Ireland awaits the official result of a referendum that could end the country’s ban on abortion. Co-Director of Together For Yes Ailbhe Smyth speaks to the media after exit polls suggested victory for the Yes campaign.&lt;/p&gt;
&lt;p&gt;PA Wire/PA Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;26/50&lt;/span&gt; 25 May 2018&lt;/h2&gt;
&lt;p&gt;Film producer Harvey Weinstein arrives at the 1st Precinct in Manhattan where he turned himself in to New York police for sexual misconduct charges.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;27/50&lt;/span&gt; 24 May 2018&lt;/h2&gt;
&lt;p&gt;Russian President Vladimir Putin (R) meets with his French counterpart Emmanuel Macron at the Konstantin Palace in Strelna, outside Saint Petersburg, on May 24, 2018&lt;/p&gt;
&lt;p&gt;Getty Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;28/50&lt;/span&gt; 23 May 2018&lt;/h2&gt;
&lt;p&gt;People protest outisde the Tamil Nadu House after at least 10 people were killed when police fired on protesters seeking closure of plant on environmental grounds in town of Thoothukudi in southern state of Tamil Nadu, in New Delhi.&lt;/p&gt;
&lt;p&gt;ANI via Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;29/50&lt;/span&gt; 22 May 2018&lt;/h2&gt;
&lt;p&gt;People demonstrate in Paris during a nationwide day protest by French public sector employees and public servants against the overhauls proposed by French President Emmanuel Macron, calling them an &quot;attack&quot; by the centrist leader against civil services as well as their economic security.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;30/50&lt;/span&gt; 21 May 2018&lt;/h2&gt;
&lt;p&gt;Newly appointed Catalan president Quim Torra arrives to visit jailed Catalan separatist politicians at the Estremera jail near Madrid.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;31/50&lt;/span&gt; 20 May 2018&lt;/h2&gt;
&lt;p&gt;Venezuelan President Nicolas Maduro casts his vote during the presidential elections in Caracas. Maduro was seeking a second term in power.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;32/50&lt;/span&gt; 19 May 2018&lt;/h2&gt;
&lt;p&gt;Channelized lava emerges on Kilauea Volcano's lower East Rift Zone on Hawaii. The USGS said on its website that &quot;a fast-moving pahoehoe lava flow that emerged from fissure 20... continues to flow southeast,&quot; with the quickest of three &quot;lobes&quot; progressing at 230 yards (210 meters) per hour.&lt;/p&gt;
&lt;p&gt;AFP/US Geological Survey&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;33/50&lt;/span&gt; 18 May 2018&lt;/h2&gt;
&lt;p&gt;Santa Fe High School student Dakota Shrader is comforted by her mother Susan Davidson following a shooting at the school in Texas. Shrader said her friend was shot in the incident. Multiple people have been killed.&lt;/p&gt;
&lt;p&gt;Stuart Villanueva/The Galveston County Daily News via AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;34/50&lt;/span&gt; 17 May 2018&lt;/h2&gt;
&lt;p&gt;French President Emmanuel Macron, British Prime Minister Theresa May and German Chancellor Angela Merkel meeting during the EU-Western Balkans Summit in Sofia, Bulgaria.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;35/50&lt;/span&gt; 16 May 2018&lt;/h2&gt;
&lt;p&gt;People hold flags with the state coat of arms of Russia as they drive along a bridge, which was constructed to connect the Russian mainland with the Crimean Peninsula across the Kerch Strait.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;36/50&lt;/span&gt; 15 May 2018&lt;/h2&gt;
&lt;p&gt;Palestinians run away from tear gas shot at them by Israeli forces during a protest in Ramallah, in the occupied West Bank&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;37/50&lt;/span&gt; 14 May 2018&lt;/h2&gt;
&lt;p&gt;A Palestinian demonstrator runs during a protest against the US embassy move to Jerusalem and ahead of the 70th anniversary of the Nakba at the Israel-Gaza border.&lt;/p&gt;
&lt;p&gt;REUTERS&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;38/50&lt;/span&gt; 13 May 2018&lt;/h2&gt;
&lt;p&gt;A bullet hole on the window of a cafe in Paris, the day after a knifeman killed one man and wounded four other people before being shot dead by police&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;39/50&lt;/span&gt; 12 May 2018&lt;/h2&gt;
&lt;p&gt;Germany's Chancellor Angela Merkel looks on after receiving the 'Lamp of Peace, the &quot;Nobel&quot; Catholic award for &quot;her work of conciliation for the peaceful cohabitation of peoples&quot; at The Basilica Superiore of St Francis of Assisi in Italy.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;40/50&lt;/span&gt; 11 May 2018&lt;/h2&gt;
&lt;p&gt;Police forensics investigate the death of seven people in a suspected murder-suicide in Australia. Four children are among seven people that were found dead at a rural property in Osmington, near Margaret River. Detectives are investigating the incident, which was said to be treated as a murder-suicide, media reported. Two firearms were found at the scene, Western Australia Police said.&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;41/50&lt;/span&gt; 10 May 2018&lt;/h2&gt;
&lt;p&gt;Missiles rise into the sky as Israeli missiles hit air defense position and other military bases, in Damascus, Syria. The Israeli military on Thursday said it attacked &quot;dozens&quot; of Iranian targets in neighboring Syria in response to an Iranian rocket barrage on Israeli positions in the Golan Heights, in the most serious military confrontation between the two bitter enemies to date.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;42/50&lt;/span&gt; 9 May 2018&lt;/h2&gt;
&lt;p&gt;Iranian MPs burning a US flag in the parliament in Tehran. Iran said it will hold talks with signatories to a nuclear deal after US President Donald Trump's decision to withdraw from the accord, which it branded &quot;psychological warfare&quot;. President Hassan Rouhani also said Iran could resume uranium enrichment &quot;without limit&quot; in response to Trump's announcement.&lt;/p&gt;
&lt;p&gt;AFP/Islamic Consultative Assembly News Agency&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;43/50&lt;/span&gt; 8 May 2018&lt;/h2&gt;
&lt;p&gt;Newly elected Prime Minister of Armenia Nikol Pashinian addresses the crowd in Republic Square in Yerevan. The leader of protests that gripped Armenia for weeks was named the country's new prime minister on Tuesday, overcoming the immediate political turmoil but raising uncertainty about the longer term.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;44/50&lt;/span&gt; 7 May 2018&lt;/h2&gt;
&lt;p&gt;Russian President Vladimir Putin walks before his President inauguration ceremony at the Kremlin in Moscow.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;45/50&lt;/span&gt; 6 May 2018&lt;/h2&gt;
&lt;p&gt;Lava from a robust fissure eruption on Kilauea's east rift zone consumes a home, then threatens another, near Pahoa, Hawaii. The total number of homes lost within the Leilani Estates subdivision thus far is 21, and geologists from the Hawaii Volcanoes Observatory do not expect the eruption to cease any time soon. A local state of emergency has been declared after Mount Kilauea erupted near residential areas, forcing mandatory evacuation of about 1,700 citizens from their nearby homes. The crater's floor collapsed on 01 May and is since then continuing to erode its walls and generating huge explosions of ashes. Several earthquakes have been recorded in the area where the volcanic eruptions continue, including a 6.9 magnitue earthquake which struck the area on 4 May.&lt;/p&gt;
&lt;p&gt;EPA/PARADISE HELICOPTERS&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;46/50&lt;/span&gt; 5 May 2018&lt;/h2&gt;
&lt;p&gt;Russian police carrying struggling opposition leader Alexei Navalny at a demonstration against President Vladimir Putin in Moscow. Thousands of demonstrators denouncing Putin's upcoming inauguration into a fourth term gathered in the capital's Pushkin Square.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;47/50&lt;/span&gt; 4 May 2018&lt;/h2&gt;
&lt;p&gt;Chinese President Xi Jinping speaks at an event to mark Karl Marx’s 200th birthday at the Great Hall of the People in Beijing.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;48/50&lt;/span&gt; 3 May 2018&lt;/h2&gt;
&lt;p&gt;President Vladimir Putin meets with FIFA president Gianni Infantino in Sochi, ahead of the 2018 World Cup in Russia.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;49/50&lt;/span&gt; 2 May 2018&lt;/h2&gt;
&lt;p&gt;Supporters of opposition lawmaker Nikol Pashinyan protest in Republic Square in Yerevan, Armenia. Pashinyan has urged his supporters to block roads, railway stations and airports after the governing Republican Party voted against his election as prime minister.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;50/50&lt;/span&gt; 1 May 2018&lt;/h2&gt;
&lt;p&gt;Cubans march during the May Day rally at Revolution Square in Havana.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;1/50&lt;/span&gt; 18 June 2018&lt;/h2&gt;
&lt;p&gt;Residents pass by a temple gate collapsed by an earthquake in Ibaraki, Osaka Prefecture, western Japan. The earthquake, which struck western Japan, killed three people and injured more than 50.&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;2/50&lt;/span&gt; 17 June 2018&lt;/h2&gt;
&lt;p&gt;Juan Carlos Osorio, manager of Mexico's national football team, celebrates their World Cup victory against Germany&lt;/p&gt;
&lt;p&gt;Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;3/50&lt;/span&gt; 16 June 2018&lt;/h2&gt;
&lt;p&gt;Kashmiri youths through stones during clashes between protestors and Indian government forces in Srinagar&lt;/p&gt;
&lt;p&gt;AFP/Getty Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;4/50&lt;/span&gt; 16 June 2018&lt;/h2&gt;
&lt;p&gt;People are silhouetted on the flybridge of a yacht as fireworks illuminates the sky over the Yas Viceroy luxury hotel on the first day of the Muslim holiday of Eid Al-Fitr at the Marina on Yas Island, Abu Dhabi&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;5/50&lt;/span&gt; 15 June 2018&lt;/h2&gt;
&lt;p&gt;Somali Muslims take part in Eid al-Fitr prayer which marks the end of the holy month of Ramadan at the football pitch of the Jamacadaha stadium in Mogadishu.&lt;/p&gt;
&lt;p&gt;AFP/Getty Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;6/50&lt;/span&gt; 14 June 2018&lt;/h2&gt;
&lt;p&gt;Artists perform during the opening ceremony of the 2018 World Cup in Russia ahead of the group A match between Russia and Saudi Arabia at Luzhniki Stadium in Moscow.&lt;/p&gt;
&lt;p&gt;Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;7/50&lt;/span&gt; 13 June 2018&lt;/h2&gt;
&lt;p&gt;Pope Francis arrives to lead the Wednesday general audience in Saint Peter's square at the Vatican&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;8/50&lt;/span&gt; 12 June 2018&lt;/h2&gt;
&lt;p&gt;US President Donald Trump shakes hands with North Korean leader Kim Jong Un during their historic meeting at the Capella Hotel on Sentosa island in Singapore.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;9/50&lt;/span&gt; 11 June 2018&lt;/h2&gt;
&lt;p&gt;US President Donald Trump looking at a cake being brought for him during a working lunch with Singapore's Prime Minister Lee Hsien Loong during his visit to The Istana, the official residence of the prime minister, in Singapore. Kim Jong Un and Donald Trump will meet on June 12 for an unprecedented summit, with the US President calling it a &quot;one time shot&quot; at peace.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;10/50&lt;/span&gt; 10 June 2018&lt;/h2&gt;
&lt;p&gt;Muharrem Ince, presidential candidate of Turkey's main opposition Republican People's Party (CHP), delivers a speech from the roof of a bus during a campaign meeting in Istanbul.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;11/50&lt;/span&gt; 9 June 2018&lt;/h2&gt;
&lt;p&gt;French President Emmanuel Macron, German Chancellor Angela Merkel and Japan's Prime Minister Shinzo Abe speaking to US Presidend Donald Trump during the second day of the G7 meeting in Charlevoix, Canada. Looking on is US National Security Advisor John Bolton.&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;12/50&lt;/span&gt; 8 June 2018&lt;/h2&gt;
&lt;p&gt;Former South African President Jacob Zuma sings and dances on stage after delivering a speech during a rally in his support outside the High Court, in Durban.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;13/50&lt;/span&gt; 7 June 2018&lt;/h2&gt;
&lt;p&gt;Russian President Vladimir Putin listens to a question during his annual call-in show in Moscow. Putin hosts call-in shows every year, which typically provide a platform for ordinary Russians to appeal to the president on issues ranging from foreign policy to housing and utilities.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;14/50&lt;/span&gt; 6 June 2018&lt;/h2&gt;
&lt;p&gt;Protesters wave flags and shout slogans during a demonstration against the use of the term &quot;Macedonia&quot; in any solution to a dispute between Athens and Skopje over the former Yugoslav republic's name, in the northern town of Pella, Greece.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;15/50&lt;/span&gt; 5 June 2018&lt;/h2&gt;
&lt;p&gt;Police officers salute as the caskets of policewomen Soraya Belkacemi, 44, and Lucile Garcia, 54, arrive during their funeral in Liege. The two officers, and one bystander were killed in Liege on Tuesday by a gunman. Police later killed the attacker, and other officers were wounded in the shooting.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;16/50&lt;/span&gt; 4 June 2018&lt;/h2&gt;
&lt;p&gt;A rescue worker carries a child covered with ash after a volcano erupted violently in El Rodeo, Guatemala. Volcan de Fuego, whose name means &quot;Volcano of Fire&quot;, spewed an 8km (5-mile) stream of red hot lava and belched a thick plume of black smoke and ash that rained onto the capital and other regions. Dozens were killed across three villages.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;17/50&lt;/span&gt; 3 June 2018&lt;/h2&gt;
&lt;p&gt;A recycler drags a huge bag of paper sorted for recycling past a heap of non-recyclable material at Richmond sanitary landfill site in the industrial city of Bulawayo. Plastic waste remains a challenging waste management issue due to its non-biodegrable nature, if not managed properly plastic ends up as litter polluting water ways, wetlands and storm drains causing flash flooding around Zimbabwe's cities and towns. Urban and rural areas are fighting the continuous battle against a scourge of plastic litter. On June 5, 2018 the United Nations mark the World Environment Day which plastic pollution is the main theme this year.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;18/50&lt;/span&gt; 2 June 2018&lt;/h2&gt;
&lt;p&gt;Palestinian mourners carry the body of 21-year-old medical volunteer Razan al-Najjar during her funeral after she was shot dead by Israeli soldiers near the Gaza border fence on June 1, in another day of protests and violence. She was shot near Khan Yunis in the south of the territory, health ministry spokesman Ashraf al-Qudra said, bringing the toll of Gazans killed by Israeli fire since the end of March to 123.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;19/50&lt;/span&gt; 1 June 2018&lt;/h2&gt;
&lt;p&gt;Spain's new Prime Minister Pedro Sanchez poses after a vote on a no-confidence motion at the Spanish Parliament in Madrid. Spain's parliament ousted Prime Minister Mariano Rajoy in a no-confidence vote sparked by fury over his party's corruption woes, with his Socialist arch-rival Pedro Sanchez automatically taking over.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;20/50&lt;/span&gt; 31 May 2018&lt;/h2&gt;
&lt;p&gt;Zinedine Zidane looks on after a press conference to announce his resignation as manager from Real Madrid. He confirmed he was leaving the Spanish giants, just days after winning the Champions League for the third year in a row.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;21/50&lt;/span&gt; 30 May 2018&lt;/h2&gt;
&lt;p&gt;A worker cleans up the Millenaire migrants makeshift camp along the Canal de Saint-Denis near Porte de la Villette, northern Paris, following its evacuation on May 30. More than a thousand migrants and refugees were evacuated early in the morning from the camp that had been set up for several weeks along the Canal.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;22/50&lt;/span&gt; 29 May 2018&lt;/h2&gt;
&lt;p&gt;Police and ambulances are seen at the site where a gunman shot dead three people, two of them policemen, before being killed by elite officers, in the eastern Belgian city of Liege.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;23/50&lt;/span&gt; 28 May 2018&lt;/h2&gt;
&lt;p&gt;French President Emmanuel Macron meets with Mamoudou Gassama, 22, from Mali, at the presidential Elysee Palace in Paris. Gassama living illegally in France is being honored by Macron for scaling an apartment building over the weekend to save a 4-year-old child dangling from a fifth-floor balcony.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;24/50&lt;/span&gt; 27 May 2018&lt;/h2&gt;
&lt;p&gt;Migrants wait to disembark from the ship Aquarius in the Sicilian harbour of Catania, Italy&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;25/50&lt;/span&gt; 26 May 2018&lt;/h2&gt;
&lt;p&gt;Ireland awaits the official result of a referendum that could end the country’s ban on abortion. Co-Director of Together For Yes Ailbhe Smyth speaks to the media after exit polls suggested victory for the Yes campaign.&lt;/p&gt;
&lt;p&gt;PA Wire/PA Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;26/50&lt;/span&gt; 25 May 2018&lt;/h2&gt;
&lt;p&gt;Film producer Harvey Weinstein arrives at the 1st Precinct in Manhattan where he turned himself in to New York police for sexual misconduct charges.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;27/50&lt;/span&gt; 24 May 2018&lt;/h2&gt;
&lt;p&gt;Russian President Vladimir Putin (R) meets with his French counterpart Emmanuel Macron at the Konstantin Palace in Strelna, outside Saint Petersburg, on May 24, 2018&lt;/p&gt;
&lt;p&gt;Getty Images&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;28/50&lt;/span&gt; 23 May 2018&lt;/h2&gt;
&lt;p&gt;People protest outisde the Tamil Nadu House after at least 10 people were killed when police fired on protesters seeking closure of plant on environmental grounds in town of Thoothukudi in southern state of Tamil Nadu, in New Delhi.&lt;/p&gt;
&lt;p&gt;ANI via Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;29/50&lt;/span&gt; 22 May 2018&lt;/h2&gt;
&lt;p&gt;People demonstrate in Paris during a nationwide day protest by French public sector employees and public servants against the overhauls proposed by French President Emmanuel Macron, calling them an &quot;attack&quot; by the centrist leader against civil services as well as their economic security.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;30/50&lt;/span&gt; 21 May 2018&lt;/h2&gt;
&lt;p&gt;Newly appointed Catalan president Quim Torra arrives to visit jailed Catalan separatist politicians at the Estremera jail near Madrid.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;31/50&lt;/span&gt; 20 May 2018&lt;/h2&gt;
&lt;p&gt;Venezuelan President Nicolas Maduro casts his vote during the presidential elections in Caracas. Maduro was seeking a second term in power.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;32/50&lt;/span&gt; 19 May 2018&lt;/h2&gt;
&lt;p&gt;Channelized lava emerges on Kilauea Volcano's lower East Rift Zone on Hawaii. The USGS said on its website that &quot;a fast-moving pahoehoe lava flow that emerged from fissure 20... continues to flow southeast,&quot; with the quickest of three &quot;lobes&quot; progressing at 230 yards (210 meters) per hour.&lt;/p&gt;
&lt;p&gt;AFP/US Geological Survey&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;33/50&lt;/span&gt; 18 May 2018&lt;/h2&gt;
&lt;p&gt;Santa Fe High School student Dakota Shrader is comforted by her mother Susan Davidson following a shooting at the school in Texas. Shrader said her friend was shot in the incident. Multiple people have been killed.&lt;/p&gt;
&lt;p&gt;Stuart Villanueva/The Galveston County Daily News via AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;34/50&lt;/span&gt; 17 May 2018&lt;/h2&gt;
&lt;p&gt;French President Emmanuel Macron, British Prime Minister Theresa May and German Chancellor Angela Merkel meeting during the EU-Western Balkans Summit in Sofia, Bulgaria.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;35/50&lt;/span&gt; 16 May 2018&lt;/h2&gt;
&lt;p&gt;People hold flags with the state coat of arms of Russia as they drive along a bridge, which was constructed to connect the Russian mainland with the Crimean Peninsula across the Kerch Strait.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;36/50&lt;/span&gt; 15 May 2018&lt;/h2&gt;
&lt;p&gt;Palestinians run away from tear gas shot at them by Israeli forces during a protest in Ramallah, in the occupied West Bank&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;37/50&lt;/span&gt; 14 May 2018&lt;/h2&gt;
&lt;p&gt;A Palestinian demonstrator runs during a protest against the US embassy move to Jerusalem and ahead of the 70th anniversary of the Nakba at the Israel-Gaza border.&lt;/p&gt;
&lt;p&gt;REUTERS&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;38/50&lt;/span&gt; 13 May 2018&lt;/h2&gt;
&lt;p&gt;A bullet hole on the window of a cafe in Paris, the day after a knifeman killed one man and wounded four other people before being shot dead by police&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;39/50&lt;/span&gt; 12 May 2018&lt;/h2&gt;
&lt;p&gt;Germany's Chancellor Angela Merkel looks on after receiving the 'Lamp of Peace, the &quot;Nobel&quot; Catholic award for &quot;her work of conciliation for the peaceful cohabitation of peoples&quot; at The Basilica Superiore of St Francis of Assisi in Italy.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;40/50&lt;/span&gt; 11 May 2018&lt;/h2&gt;
&lt;p&gt;Police forensics investigate the death of seven people in a suspected murder-suicide in Australia. Four children are among seven people that were found dead at a rural property in Osmington, near Margaret River. Detectives are investigating the incident, which was said to be treated as a murder-suicide, media reported. Two firearms were found at the scene, Western Australia Police said.&lt;/p&gt;
&lt;p&gt;EPA&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;41/50&lt;/span&gt; 10 May 2018&lt;/h2&gt;
&lt;p&gt;Missiles rise into the sky as Israeli missiles hit air defense position and other military bases, in Damascus, Syria. The Israeli military on Thursday said it attacked &quot;dozens&quot; of Iranian targets in neighboring Syria in response to an Iranian rocket barrage on Israeli positions in the Golan Heights, in the most serious military confrontation between the two bitter enemies to date.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;42/50&lt;/span&gt; 9 May 2018&lt;/h2&gt;
&lt;p&gt;Iranian MPs burning a US flag in the parliament in Tehran. Iran said it will hold talks with signatories to a nuclear deal after US President Donald Trump's decision to withdraw from the accord, which it branded &quot;psychological warfare&quot;. President Hassan Rouhani also said Iran could resume uranium enrichment &quot;without limit&quot; in response to Trump's announcement.&lt;/p&gt;
&lt;p&gt;AFP/Islamic Consultative Assembly News Agency&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;43/50&lt;/span&gt; 8 May 2018&lt;/h2&gt;
&lt;p&gt;Newly elected Prime Minister of Armenia Nikol Pashinian addresses the crowd in Republic Square in Yerevan. The leader of protests that gripped Armenia for weeks was named the country's new prime minister on Tuesday, overcoming the immediate political turmoil but raising uncertainty about the longer term.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;44/50&lt;/span&gt; 7 May 2018&lt;/h2&gt;
&lt;p&gt;Russian President Vladimir Putin walks before his President inauguration ceremony at the Kremlin in Moscow.&lt;/p&gt;
&lt;p&gt;Reuters&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;45/50&lt;/span&gt; 6 May 2018&lt;/h2&gt;
&lt;p&gt;Lava from a robust fissure eruption on Kilauea's east rift zone consumes a home, then threatens another, near Pahoa, Hawaii. The total number of homes lost within the Leilani Estates subdivision thus far is 21, and geologists from the Hawaii Volcanoes Observatory do not expect the eruption to cease any time soon. A local state of emergency has been declared after Mount Kilauea erupted near residential areas, forcing mandatory evacuation of about 1,700 citizens from their nearby homes. The crater's floor collapsed on 01 May and is since then continuing to erode its walls and generating huge explosions of ashes. Several earthquakes have been recorded in the area where the volcanic eruptions continue, including a 6.9 magnitue earthquake which struck the area on 4 May.&lt;/p&gt;
&lt;p&gt;EPA/PARADISE HELICOPTERS&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;46/50&lt;/span&gt; 5 May 2018&lt;/h2&gt;
&lt;p&gt;Russian police carrying struggling opposition leader Alexei Navalny at a demonstration against President Vladimir Putin in Moscow. Thousands of demonstrators denouncing Putin's upcoming inauguration into a fourth term gathered in the capital's Pushkin Square.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;47/50&lt;/span&gt; 4 May 2018&lt;/h2&gt;
&lt;p&gt;Chinese President Xi Jinping speaks at an event to mark Karl Marx’s 200th birthday at the Great Hall of the People in Beijing.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;48/50&lt;/span&gt; 3 May 2018&lt;/h2&gt;
&lt;p&gt;President Vladimir Putin meets with FIFA president Gianni Infantino in Sochi, ahead of the 2018 World Cup in Russia.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;49/50&lt;/span&gt; 2 May 2018&lt;/h2&gt;
&lt;p&gt;Supporters of opposition lawmaker Nikol Pashinyan protest in Republic Square in Yerevan, Armenia. Pashinyan has urged his supporters to block roads, railway stations and airports after the governing Republican Party voted against his election as prime minister.&lt;/p&gt;
&lt;p&gt;AP&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;count&quot;&gt;50/50&lt;/span&gt; 1 May 2018&lt;/h2&gt;
&lt;p&gt;Cubans march during the May Day rally at Revolution Square in Havana.&lt;/p&gt;
&lt;p&gt;AFP/Getty&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;“Experience has shown repressive governments tend toward incarceration and torture of identified people who are opposing repressive practices, and the surveillance technologies will tend to harden this circle of repression”, the document said.&lt;/p&gt;&lt;p&gt;A representative of Amazon declined to comment on the record.&lt;/p&gt;&lt;p&gt;Shareholders of major technology companies have increasingly been broadcasting their concerns about the financial and reputational damage of privacy violations.&lt;/p&gt;&lt;p&gt;In a tense Facebook shareholder meeting last month, one investor accused the company of a “human rights violation” for failing to steward a reservoir of consumer data that was revealed to have ended up in the hands of consulting firm Cambridge Analytica.&lt;/p&gt;</description>
<pubDate>Mon, 18 Jun 2018 21:13:23 +0000</pubDate>
<dc:creator>pmoriarty</dc:creator>
<og:url>https://www.independent.co.uk/news/business/amazon-recognition-shareholders-jeff-bezos-letter-privacy-surveillance-facial-recognition-a8405221.html</og:url>
<og:title>Amazon shareholders want Jeff Bezos to stop selling a controversial facial recognition tool</og:title>
<og:description>Concerns that surveillance technology could be used to target activists, immigrants and people of colour</og:description>
<og:image>https://static.independent.co.uk/s3fs-public/thumbnails/image/2018/06/18/19/jeff-bezos.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.independent.co.uk/news/business/amazon-recognition-shareholders-jeff-bezos-letter-privacy-surveillance-facial-recognition-a8405221.html</dc:identifier>
</item>
<item>
<title>Machine Learning: The High Interest Credit Card of Technical Debt (2014)</title>
<link>https://ai.google/research/pubs/pub43146</link>
<guid isPermaLink="true" >https://ai.google/research/pubs/pub43146</guid>
<description>&lt;p&gt;Machine learning offers a fantastically powerful toolkit for building complex systems quickly. This paper argues that it is dangerous to think of these quick wins as coming for free. Using the framework of technical debt, we note that it is remarkably easy to incur massive ongoing maintenance costs at the system level when applying machine learning. The goal of this paper is highlight several machine learning specific risk factors and design patterns to be avoided or refactored where possible. These include boundary erosion, entanglement, hidden feedback loops, undeclared consumers, data dependencies, changes in the external world, and a variety of system-level anti-patterns.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 19:48:26 +0000</pubDate>
<dc:creator>amzans</dc:creator>
<og:image>https://ai.google/static/images/share.png</og:image>
<og:title>Machine Learning: The High Interest Credit Card of Technical Debt – Google AI</og:title>
<og:type>website</og:type>
<og:url>https://ai.google/research/pubs/pub43146</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ai.google/research/pubs/pub43146</dc:identifier>
</item>
<item>
<title>How modern Linux systems boot</title>
<link>https://utcc.utoronto.ca/~cks/space/blog/linux/LinuxBootOverview?</link>
<guid isPermaLink="true" >https://utcc.utoronto.ca/~cks/space/blog/linux/LinuxBootOverview?</guid>
<description>&lt;p&gt;For &lt;a href=&quot;https://old.reddit.com/r/programming/comments/8rhvfv/how_does_linux_start_up/e0rm0bu/&quot;&gt;reasons beyond the scope of this entry&lt;/a&gt;, today I feel like writing down a broad and simplified overview of how modern Linux systems boot. Due to being a sysadmin who has stubbed his toe here repeatedly, I'm going to especially focus on points of failure.&lt;/p&gt;
&lt;ol readability=&quot;33.835144409494&quot;&gt;&lt;li readability=&quot;2.6102719033233&quot;&gt;The system loads and starts the basic bootloader somehow, through either BIOS MBR booting or UEFI. This can involve many steps on its own and any number of things can go wrong, such as &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/Fedora27SecureBootMistake&quot;&gt;unsigned UEFI bootloaders on a Secure Boot system&lt;/a&gt;. Generally these failures are the most total; the system reports there's nothing to boot, or it repeatedly reboots, or the bootloader aborts with what is generally a cryptic error message.
&lt;p&gt;On a UEFI system, the bootloader needs to live in the EFI system partition, which is always a FAT32 filesystem. Some people have had luck making this a software RAID mirror with &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/SoftwareRaidSuperblockFormats&quot;&gt;the right superblock format&lt;/a&gt;; see the comments on &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/Grub2UEFIBigMistake&quot;&gt;this entry&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9.6296296296296&quot;&gt;The bootloader loads its configuration file and perhaps additional modules from somewhere, usually your &lt;code&gt;/boot&lt;/code&gt; but also perhaps your UEFI system partition. Failures here can result in &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/GrubDiskMismatchError&quot;&gt;extremely cryptic errors&lt;/a&gt;, dropping you into a GRUB shell, or ideally a message saying 'can't find your menu file'. The configuration file location is usually hardcoded, which is sometimes unfortunate if your distribution has picked &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/Grub2UEFIBigMistake&quot;&gt;a bad spot&lt;/a&gt;.
&lt;p&gt;For GRUB, this spot has to be on a filesystem and storage stack that GRUB understands, which is not necessarily the same as what your Linux kernel understands. Fortunately GRUB understands a lot these days, so under normal circumstances you're unlikely to run into this.&lt;/p&gt;
&lt;p&gt;(Some GRUB setups have a two stage configuration file, where the first stage just finds and loads the second one. This allows you more flexibility in where the second stage lives, which can be important on UEFI systems.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4.3294117647059&quot;&gt;Using your configuration file, the bootloader loads your chosen Linux kernel and &lt;a href=&quot;https://en.wikipedia.org/wiki/Initial_ramdisk&quot;&gt;an initial ramdisk&lt;/a&gt; into memory and transfers control to the kernel. The kernel and initramfs image also need to come from a filesystem that your bootloader understands, but with GRUB the configuration file allows you to be very flexible about &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/MigratingBootFSIntoRootFS&quot;&gt;how they're found and where they come from&lt;/a&gt; (and it doesn't have to be the same place as &lt;code&gt;grub.cfg&lt;/code&gt; is, although on a non-UEFI system both are usually in &lt;code&gt;/boot&lt;/code&gt;).
&lt;p&gt;There are two things that can go wrong here; your &lt;code&gt;grub.cfg&lt;/code&gt; can have entries for kernels that don't exist any more, or GRUB can fail to locate and bring up the filesystem where the kernel(s) are stored. The latter can happen if, for example, &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/Grub2MoveBootDisk&quot;&gt;your &lt;code&gt;grub.cfg&lt;/code&gt; has the wrong UUIDs for your filesystems&lt;/a&gt;. It's possible to patch this up on the fly so you can boot your system.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;23.929384965831&quot;&gt;The kernel starts up, creates PID 1, and runs &lt;code&gt;/init&lt;/code&gt; from the initramfs as PID 1. This process and things that it run then flail around doing various things, with the fundamental goal of finding and mounting your real root filesystem and transferring control to it. In the process of doing this it will try to &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/ModernSoftwareRaidAssembly&quot;&gt;assemble software RAID devices and other storage stuff like LVM&lt;/a&gt;, perhaps &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/FedoraInitramfsSysctl&quot;&gt;set sysctls&lt;/a&gt;, and so on. The obvious and traditional failure mode here is that the initramfs can't find or mount your root filesystem for some reason; this usually winds up dropping you into some sort of very minimal rescue shell. If this happens to you, you may want to boot from a USB live image instead; they tend to have more tools and a better environment.
&lt;p&gt;(Sometimes the reasons for failure are &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/linux/RaidGrowthGotcha&quot;&gt;obscure and annoying&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On many traditional systems, the initramfs &lt;code&gt;/init&lt;/code&gt; was its own separate thing, often a shell script, and was thus independent from and different from your system's real init. On systemd based systems, the initramfs &lt;code&gt;/init&lt;/code&gt; is actually systemd itself and so even very early initramfs boot is under systemd's control. In general, a modern initramfs is a real (root) filesystem that processes in the initramfs will see as &lt;code&gt;/&lt;/code&gt;, and its contents (both configuration files and programs) are usually copied from the versions in your root filesystem. You can inspect the whole thing with &lt;code&gt;lsinitrd&lt;/code&gt; or &lt;code&gt;lsinitramfs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: It turns out that the initramfs init is still a shell script in some Linux distributions, prominently Debian and Ubuntu. The initramfs init being systemd may be a Red Hat-ism (Fedora and RHEL). Thanks to Ben Hutchings in the comments for the correction.&lt;/p&gt;
&lt;p&gt;How the initramfs &lt;code&gt;/init&lt;/code&gt; pivots into running your real system's init daemon on your real system's root filesystem is beyond the scope of this entry. The commands may be simple (systemd just runs '&lt;code&gt;systemctl switch-root&lt;/code&gt;'), but how they work is complicated.&lt;/p&gt;
&lt;p&gt;(That systemd is the initramfs &lt;code&gt;/init&lt;/code&gt; is convenient in a way, because it means that you don't need to learn an additional system to inspect how your initramfs works; instead you can just look at the systemd units included in the initramfs and follow along in the systemd log.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;Your real init system starts up to perform basic system setup to bring the system to a state that we think of as the normal basic way it is; basically, this is everything you usually get if you boot into a modern single user mode. This does things like set the hostname, mount the root filesystem so it can be written to, apply your sysctl settings (from the real root filesystem this time), configure enough networking so that you have a loopback device and the IPv4 and IPv6 localhost addresses, have udev fiddle around with hardware, and especially mount all of your local filesystems (which includes activating underlying storage systems like software RAID and LVM, if they haven't been activated already in the initramfs).
&lt;p&gt;The traditional thing that fails here is that one or more of your local filesystems can't be mounted. This often causes this process to abort and drop you into a single user rescue shell environment.&lt;/p&gt;
&lt;p&gt;(On a systemd system the hostname is actually set twice, once in the initramfs and then again in this stage.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;12&quot;&gt;With your local filesystems mounted and other core configuration in place, your init system continues on to boot your system the rest of the way. This does things like configure your network (well, perhaps; these days some systems may defer it until you log in), start all of the system's daemons, and eventually enable logins on text consoles and perhaps start a graphical login environment like GDM or LightDM. At the end of this process, your system is fully booted.
&lt;p&gt;Things that fail here are problems like a daemon not starting or, more seriously, the system not finding the network devices it expects and so not getting itself on the network at all. Usually the end result is that you still wind up with a login prompt (either a text console or graphics), it's just that there were error messages (which you may not have seen) or some things aren't working. Very few modern systems abort the boot and drop into a rescue environment for failures during this stage.&lt;/p&gt;
&lt;p&gt;On a systemd system, this transfers control from the initramfs systemd to the systemd binary on your root filesystem (which takes over as PID 1), but systemd maintains continuity of its state and boot process and you can see the whole thing in &lt;code&gt;journalctl&lt;/code&gt;. The point where the switch happens is reported as 'Starting Switch Root...' and then 'Switching root.'&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;All of System V init, Upstart, and systemd have this distinction between the basic system setup steps and the later 'full booting' steps, but they implement it in different ways. Systemd doesn't draw a hard distinction between the two phases and you can shim your own steps into either portion in basically the same way. System V init tended to implement the early 'single user' stage as a separate nominal runlevel, runlevel 'S', that the system transitioned through on the way to its real target runlevel. Upstart is sort of a hybrid; it has &lt;a href=&quot;https://www.systutorials.com/docs/linux/man/7-startup/&quot;&gt;a &lt;code&gt;startup&lt;/code&gt; event&lt;/a&gt; that's emitted to trigger a number of things before things start fully booting.&lt;/p&gt;
&lt;p&gt;(This really is an overview. Booting Linux on PC hardware has become a complicated process at the best of times, with a lot of things to set up and fiddle around with.)&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 17:31:31 +0000</pubDate>
<dc:creator>adamnemecek</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://utcc.utoronto.ca/~cks/space/blog/linux/LinuxBootOverview?</dc:identifier>
</item>
<item>
<title>X86 assembly doesn’t have to be scary</title>
<link>https://blog.benjojo.co.uk/post/interactive-x86-bootloader-tutorial</link>
<guid isPermaLink="true" >https://blog.benjojo.co.uk/post/interactive-x86-bootloader-tutorial</guid>
<description>&lt;p&gt;Assembly programming can be intimidating for people who have never looked into it any deeper than a glance, but giving that it underpins how the computers we use work it can be helpful having context in regards to what is actually being run by the CPU.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/EZp0wqx9xN&quot; alt=&quot;IBM PC&quot; /&gt;&lt;/p&gt;
&lt;p&gt;[Photo by: &lt;a href=&quot;https://www.flickr.com/photos/136804333@N03/22561463609/&quot;&gt;Drew Sadik&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;x86 PCs are impressive in that they are fully backwards compatible with the original IBM PC. All the way down to timing circuits and boot process. This is both great in that almost all PCs should be able to run software from 1983, but this backwards compatibility also has a very high cost. The x86 ISA is inframous in it’s edge cases and complexity.&lt;/p&gt;
&lt;p&gt;To boot a modern x86 PC, you need to step through the history of x86, this is handled by the bootloader in 99% of cases:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/m9a5CyE1Ef&quot; alt=&quot;flow of a modern system booting&quot; /&gt;&lt;/p&gt;
&lt;p&gt;For the case of our demo’s we are going to focus on the first mode. 16 bit “real mode” is the mode that DOS and other vintage operating systems run on. This mode offers no system security that we are used to on our modern systems. When a program is run it has full access to the system and can alter the operating system if it wants to. This allowed a creative virus scene to spring up for DOS (though these viruses were more annoying than actually malicious)&lt;/p&gt;
&lt;p&gt;This mode also has a very simple model for interacting with hardware. Because PCs had a wide range of hardware they outsourced a lot of the code to interact with hardware with software interrupts (often handled by the BIOS)&lt;/p&gt;
&lt;p&gt;This makes the initial stages of OS development easy, since you only need to know a handful of software interrupts to get most of of the I/O work done.&lt;/p&gt;
&lt;p&gt;With that, we can start on our first demo:&lt;/p&gt;

&lt;p&gt;
&lt;textarea id=&quot;nasm_1&quot;&gt;&lt;/textarea&gt;&lt;textarea id=&quot;output_1&quot; disabled=&quot;true&quot;&gt;&lt;/textarea&gt;&lt;button id=&quot;compile_1&quot;&gt;Run&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;You can play around with the demo above. The assembler (NASM) and VM is being run in your browser thanks to &lt;a href=&quot;https://github.com/kripken/emscripten&quot;&gt;emscripten&lt;/a&gt; and &lt;a href=&quot;https://github.com/copy/v86&quot;&gt;V86&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So what is happening here? The &lt;code&gt;mov&lt;/code&gt; instruction moves data from one place to another. In this case we are purely setting registers in the CPU and not touching RAM in the code. The &lt;code&gt;int&lt;/code&gt; instruction fires off a software interrupt, in our case the 16th one.&lt;/p&gt;
&lt;p&gt;After that, we invoke &lt;code&gt;hlt&lt;/code&gt; to stop the CPU from doing anything else. Since we are done with what we wanted to do.&lt;/p&gt;
&lt;p&gt;But hang on, how did we even get to this stage? What did the computer do to get our code running just then?&lt;/p&gt;
&lt;p&gt;The BIOS is generally the first thing that gets run on the system, its job is to setup and test that the computer is working correctly, It also writes out information about the system so that operating systems later on can easily detect hardware.&lt;/p&gt;
&lt;p&gt;Assuming the BIOS knows what device it wants to boot off, it will load the first sector (512 bytes) from that, into a standardised position of memory, and then hand over control by jumping to that part of memory&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/bvv1rGqfV4&quot; alt=&quot;memory loading&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In the demo above, the browser made the 512 byte payload, padded it into a 1.4MB floppy disk image, and gave it into a emulator to run.&lt;/p&gt;
&lt;p&gt;So what happens when the program you need to run is more than 512 bytes?&lt;/p&gt;
&lt;p&gt;Luckily for us the BIOS has us covered with disk I/O as well with int 13h calls that allow easy access to the drives in the system.&lt;/p&gt;

&lt;p&gt;
&lt;textarea id=&quot;nasm_2&quot;&gt;&lt;/textarea&gt;&lt;textarea id=&quot;output_2&quot; disabled=&quot;true&quot;&gt;&lt;/textarea&gt;&lt;button id=&quot;compile_2&quot;&gt;Run&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;This code loads a segment from the next sector of the virtual floppy disk, and then jumps to it! The int 13h API is pretty simple, and gives away some of the low level details of how storage works (though with the invention of flash memory, a lot of these values are emulated to retain compatibility)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/c7iWI5c9mK&quot; alt=&quot;int13 breakdown&quot; /&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of BIOS provided services out there, some are more official than others, there is a great reference guide at &lt;a href=&quot;http://www.ctyme.com/intr/rb-0608.htm&quot;&gt;http://www.ctyme.com/intr/rb-0608.htm&lt;/a&gt; (Though I do warn you about the 90’s style porn banner ads at the bottom of these pages)&lt;/p&gt;
&lt;p&gt;Hopefully this was a fun intro, You can move onwards and &lt;a href=&quot;https://wiki.osdev.org/GCC_Cross-Compiler&quot;&gt;even switch to C&lt;/a&gt; (&lt;a href=&quot;https://github.com/charliesome/rustboot&quot;&gt;or Rust!&lt;/a&gt;) and find more information about the underlying hardware of most of the computers you sit down and use daily on &lt;a href=&quot;http://wiki.osdev.org/&quot;&gt;http://wiki.osdev.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you found this post interesting, you might like the other things I’ve done! If not you can always stay up to date with when I push out a new post by following me on &lt;a href=&quot;https://twitter.com/benjojo12&quot;&gt;Twitter&lt;/a&gt;, or using my blog’s &lt;a href=&quot;https://blog.benjojo.co.uk/rss.xml&quot;&gt;RSS&lt;/a&gt; if that is more of your thing.&lt;/p&gt;
&lt;p&gt;Until next time!&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 17:11:14 +0000</pubDate>
<dc:creator>signa11</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.benjojo.co.uk/post/interactive-x86-bootloader-tutorial</dc:identifier>
</item>
<item>
<title>Diablo devolved – magic behind the 1996 computer game</title>
<link>https://github.com/galaxyhaxz/devilution</link>
<guid isPermaLink="true" >https://github.com/galaxyhaxz/devilution</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Diablo devolved - magic behind the 1996 computer game&lt;/p&gt;
&lt;p&gt;Reverse engineered by GalaXyHaXz in 2018&lt;/p&gt;

&lt;p&gt;Diablo was everything but loved by Blizzard. The last update to the game was in 2001, and Blizzard stopped supporting/selling it altogether a few years ago. I took up a mission to fix this problem. Diablo was a game I played extensively as a teenager; but as time passed, it became difficult to run the game on newer hardware. The lack of new content also took away from the re-playability. The ideal solution would be to modernize the source, but reversing the whole game initially sounded impossible.&lt;/p&gt;
&lt;p&gt;Thankfully, there was a little oversight in 1998. Blizzard gave Diablo's source code to two developers: Synergestic Software (to create an expansion), and Climax Studios (to create a Playstation port). Now Sony of Japan has long been known for letting things slide in their QA department. Anything from prototypes to full source code leaks (Beatmania), and Diablo was no exception. A symbolic file was accidentally left on the Japanese port, which contained a layout of everything in the game. This includes functions, data, types, and more! A beta version of the port also leaked, which contained yet another one of these files.&lt;/p&gt;
&lt;p&gt;To top it all off, a debug build of the PC version is contained right there on your Diablo disc! Hidden in &lt;code&gt;DIABDAT.MPQ -&amp;gt; D1221A.MPQ -&amp;gt; DIABLO.EXE&lt;/code&gt;. This build contains debug tools not found in the retail game, and many assert strings giving away code information. Combining these aspects not only makes reversing the game much easier, but it makes it far more accurate. File names, function names, and even line numbers will be fairly close to the real deal.&lt;/p&gt;
&lt;p&gt;After four months of hard work, I present to you Devilution! Instead of seeing how Diablo evolved, we'll see it devolved!&lt;/p&gt;

&lt;p&gt;Having the source code makes things much easier to maintain. For years mod-makers had to rely on tedious code editing and memory injection. A few even went even further and reversed a good chunk of the game (such as Belzebub/The Hell). The problem is that they never released their sources. Usually being a one-man job, they move on with their lives inevitably due to the amount of time/work required or lack of interest. This leaves people with a half-finished mod; one which had countless hours put into it, but left full of bugs and unfinished potential. So we're back to square one. Devilution aims to fix this, by making the source code of Diablo freely available to all.&lt;/p&gt;
&lt;p&gt;The goal of Devilution itself is to recreate the original source code as accurately as possible, in order to ensure that everything is preserved. This goes as far as bugs and badly written code in the original game. However, it becomes a solid base for developers to work with; making it much easier than before to update, fix, and port the game to other platforms.&lt;/p&gt;
&lt;p&gt;As a side goal, Devilution helps document the unused and cut content from the final game. Development of Diablo was rushed near the end--many ideas were scrapped and Multiplayer was quickly hacked in. By examining the source, we can see various quirks of planned development.&lt;/p&gt;

&lt;p&gt;Development of Diablo began around the time Windows 95 released, for which it was optimized. The compiler used was Microsoft Visual C++ 4.20, which was upgraded to 5.10 in later patches (&lt;a href=&quot;https://github.com/galaxyhaxz/devilution/blob/master/Support/linker.xls&quot;&gt;ref: spreadsheet&lt;/a&gt;). Compatibility with these tools is retained to help ensure the reversal is as accurate as possible. There are also Makefiles provided to compile with modern tools as well.&lt;/p&gt;
&lt;p&gt;Building with Visual C++ 5.10&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make sure Service Pack 3 is installed in order to update the linker from 5.00 -&amp;gt; 5.10! Newer versions of Visual Studio work as well, but will upgrade the project.&lt;/li&gt;
&lt;li&gt;Open the project workspace &lt;code&gt;Diablo.dsw&lt;/code&gt; and select &lt;code&gt;Build Diablo.exe&lt;/code&gt;. This will build all dependencies and only takes a few seconds.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Building with MinGW(32/64)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ensure that the MinGW binary paths have been added to the command line.&lt;/li&gt;
&lt;li&gt;For MinGW32, navigate to the project root and execute &lt;code&gt;mingw32-make -f Makefile32&lt;/code&gt;. The process will take longer than Visual Studio.&lt;/li&gt;
&lt;li&gt;For MinGW64, refer to the respective documentation: &lt;a href=&quot;https://github.com/galaxyhaxz/devilution/blob/master/Support/INSTALL_linux.md&quot;&gt;Linux&lt;/a&gt; | &lt;a href=&quot;https://github.com/galaxyhaxz/devilution/blob/master/Support/INSTALL_windows.md&quot;&gt;Windows&lt;/a&gt;. Note that only x86 systems may be targeted for the time being.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Compiling Definitions&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;COPYPROT&lt;/code&gt; (default: on) will define whether or not to use the CD drive for DIABDAT.MPQ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEBUGGER&lt;/code&gt; (default: off) will define whether to skip reloading for direct execution through debuggers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SLEEP&lt;/code&gt; (default: off) will define whether to sleep the program to prevent 100% CPU usage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_DEBUG&lt;/code&gt; (default: off) will define whether to include debug features (refer to 'Debugging' section)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once compiled, the Devilution binary will serve as a replacement for &lt;code&gt;Diablo.exe&lt;/code&gt;. A clean installation of Diablo patched to 1.09(b) is needed to run the game. Either copy Devilution into Diablo's installation folder, or make sure the following files are present:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;DIABDAT.MPQ&lt;/code&gt; : if &lt;code&gt;COPYPROT&lt;/code&gt; was defined, then the Diablo CD will be required&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiabloUI.dll&lt;/code&gt; : provides module for the title screen interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SmackW32.dll&lt;/code&gt; : provides library for playing Smacker video files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Storm.dll&lt;/code&gt; : provides various &quot;standard&quot; functions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While Devilution should produce a binary close to the original (compatible with Windows 95/NT), it may cause issues on newer systems. It has been reported to frequently crash on some setups, although for many it appears to be running flawless otherwise. Windows 7, Linux-WINE, and Windows 10 have all reported success.&lt;/p&gt;
&lt;p&gt;Note that newer compilers may need to be tweaked to properly produce an executable. Currently this is being worked on to provide multiple Makefiles for a variety of systems. To ensure the best results, either MinGW or Visual Studio 2003/older should be used for the time being.&lt;/p&gt;

&lt;p&gt;There are debug features available through both in-game and through the command-line. These have been ported from the 12-21-96 debug build. Note that not all of them are available yet.&lt;/p&gt;
&lt;p&gt;Command-line parameters&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-^&lt;/code&gt; : enable god mode and debug tools&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-$&lt;/code&gt; : enable god mode with less stuff (further documenting needed) [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; : enables item drop log [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; : disable startup video + increased item drops [PARTIALLY IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; : display frames per second&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; : disable network timeout&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; : disable startup video&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; : unused&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; : draw yellow debug tiles&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt; : enable cheats&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; : disable exclusive DirectDraw access [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-j &amp;lt;##&amp;gt;&lt;/code&gt; : init trigger at level [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l &amp;lt;#&amp;gt; &amp;lt;##&amp;gt;&lt;/code&gt; : start in level as type&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m &amp;lt;###&amp;gt;&lt;/code&gt; : add debug monster, up to 10 allowed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q &amp;lt;#&amp;gt;&lt;/code&gt; : force a certain quest&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r &amp;lt;##########&amp;gt;&lt;/code&gt; : set map seed to&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t &amp;lt;##&amp;gt;&lt;/code&gt; : sets current quest level&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In-game hotkeys&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;?&lt;/code&gt; -&amp;gt; start quest text mode (&lt;code&gt;-&lt;/code&gt;/&lt;code&gt;_&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;Enter&lt;/code&gt; to use) [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Esc&lt;/code&gt; -&amp;gt; stop quest text mode [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shift&lt;/code&gt; -&amp;gt; while holding, use the mouse to scroll screen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F2&lt;/code&gt; -&amp;gt; display dungeon information [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F3&lt;/code&gt; -&amp;gt; display number of items on the ground/cursor item&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F4&lt;/code&gt; -&amp;gt; display quest status information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;/&lt;code&gt;)&lt;/code&gt; -&amp;gt; cycle through active item flags [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;8&lt;/code&gt;/&lt;code&gt;*&lt;/code&gt; -&amp;gt; level up character&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt; -&amp;gt; refresh vendor items (Griswold premium and Adria)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;]&lt;/code&gt; -&amp;gt; all spells level 10&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:&lt;/code&gt; -&amp;gt; all spells preset level&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[&lt;/code&gt; -&amp;gt; delete all gold in inventory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; -&amp;gt; fill inventory with gold (5000 piece piles)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; -&amp;gt; display dungeon Y/sum [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; -&amp;gt; increase level of the last spell casted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt; -&amp;gt; display &quot;Mid&quot; monster related&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; -&amp;gt; print debug player info&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; -&amp;gt; switch current debug player&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt; -&amp;gt; display &quot;EFlag&quot;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;/&lt;code&gt;L&lt;/code&gt; -&amp;gt; toggle lighting in dungeon [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; -&amp;gt; print debug monster info&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt; -&amp;gt; switch current debug monster&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;/&lt;code&gt;R&lt;/code&gt; -&amp;gt; display game seeds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt;/&lt;code&gt;T&lt;/code&gt; -&amp;gt; display player and cursor coordinates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Currently there are a few issues with the decompiled code. The focus should be on fixing these issues for now instead of cleaning up the code. Currently only Diablo.exe has been reversed, the other files are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Battle.snp&lt;/code&gt;: code for battle.net, outdated protocol and not worth the time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiabloUI.dll&lt;/code&gt;: code for the main menu, this is entirely Windows specific and poorly written. However, it needs to be reversed to complete the source code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SmackW32.dll&lt;/code&gt;: code for the Smacker video library, not worth the time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Standard.snp&lt;/code&gt;: code for local multiplayer, again outdated. Starcraft uses the same format and TCP/IP was added in a later patch. Reversing the UDP portion is desired.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Storm.dll&lt;/code&gt;: we want Diablo to be independent of this library, the main file functions have been reversed as part of StormLib.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VidSize.exe&lt;/code&gt;: changes one byte in registry, ignore.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you are experienced with reversing, help is needed to reverse the user interface (DiabloUI) to help make Diablo cross-platform.&lt;/p&gt;

&lt;p&gt;Here are some screenshots of a few things I tinkered around with, to demonstrate the relative ease of improving the game:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/9426dfe5fc03654a8f1d3c024019cd7c5fb468b6/68747470733a2f2f7333332e706f7374696d672e63632f36786e6e68686c6d6e2f6469616275696d6f6e2e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9426dfe5fc03654a8f1d3c024019cd7c5fb468b6/68747470733a2f2f7333332e706f7374696d672e63632f36786e6e68686c6d6e2f6469616275696d6f6e2e706e67&quot; alt=&quot;Screenshot 1: Monster lifebar+items&quot; title=&quot;Monster lifebar+items&quot; data-canonical-src=&quot;https://s33.postimg.cc/6xnnhhlmn/diabuimon.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/c1b4f8890a676b46fe2b5cae7764c9fae252c7b2/68747470733a2f2f7332322e706f7374696d672e63632f7a3866687575746b312f6469616273746f72652e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c1b4f8890a676b46fe2b5cae7764c9fae252c7b2/68747470733a2f2f7332322e706f7374696d672e63632f7a3866687575746b312f6469616273746f72652e706e67&quot; alt=&quot;Screenshot 2: New trade screen&quot; title=&quot;New trade screen&quot; data-canonical-src=&quot;https://s22.postimg.cc/z8fhuutk1/diabstore.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/sanctuary&quot;&gt;sanctuary&lt;/a&gt; - documenting the Windows-specific Diablo code (engine, mpq, directx)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bwapi&quot;&gt;BWAPI Team&lt;/a&gt; - providing library API to work with Storm&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ladislav-zezula&quot;&gt;Ladislav Zezula&lt;/a&gt; - decompiling PKWARE library, decompiling Storm (StormLib)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fearedbliss&quot;&gt;fearedbliss&lt;/a&gt; - being awe-inspiring&lt;/li&gt;
&lt;li&gt;Climax Studios &amp;amp; Sony - secretly helping with their undercover QA :P&lt;/li&gt;
&lt;li&gt;Blizzard North - wait, this was a typo!&lt;/li&gt;
&lt;li&gt;Depression - reason to waste four months of my life doing this ;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This work is being released to the Public Domain. No assets of Diablo are being provided. You must own a copy of Diablo and have access to the assets beforehand in order to use this software.&lt;/p&gt;
&lt;p&gt;Battle.net(R) - Copyright (C) 1996 Blizzard Entertainment, Inc. All rights reserved. Battle.net and Blizzard Entertainment are trademarks or registered trademarks of Blizzard Entertainment, Inc. in the U.S. and/or other countries.&lt;/p&gt;
&lt;p&gt;Diablo(R) - Copyright (C) 1996 Blizzard Entertainment, Inc. All rights reserved. Diablo and Blizzard Entertainment are trademarks or registered trademarks of Blizzard Entertainment, Inc. in the U.S. and/or other countries.&lt;/p&gt;
&lt;p&gt;This software is in no way associated with or endorsed by Blizzard Entertainment(R).&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Mon, 18 Jun 2018 15:23:16 +0000</pubDate>
<dc:creator>cyberfart</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/15209402?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>galaxyhaxz/devilution</og:title>
<og:url>https://github.com/galaxyhaxz/devilution</og:url>
<og:description>devilution - Diablo devolved - magic behind the 1996 computer game</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/galaxyhaxz/devilution</dc:identifier>
</item>
<item>
<title>Apple sets up iPhones to relay location for 911 calls</title>
<link>http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</link>
<guid isPermaLink="true" >http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</guid>
<description>&lt;aside class=&quot;mod-inline media&quot;&gt;
Credit: Apple&lt;/aside&gt;&lt;div id=&quot;modal-magnify-photo-&quot; class=&quot;reveal-modal&quot; data-reveal=&quot;&quot; aria-labelledby=&quot;modalTitle&quot; aria-hidden=&quot;true&quot; role=&quot;dialog&quot;&gt;
&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;https://media.wpri.com/nxs-wpritv-media-us-east-1/photo/2017/11/06/apple-products-iphone_38459369_ver1.0_640_360.jpg&quot; alt=&quot;Apple sets up iPhones to relay location for 911 calls&quot;/&gt;&lt;small class=&quot;copyright&quot;&gt;Copyright by WPRI - All rights reserved&lt;/small&gt;&lt;/div&gt;
Credit: Apple &lt;/div&gt;

&lt;p&gt;SAN FRANCISCO (AP) — Apple is trying to drag the U.S.'s antiquated system for handling 911 calls into the 21st century.&lt;/p&gt;
&lt;p&gt;If it lives up to Apple's promise, the iPhone's next operating system will automatically deliver quicker and more reliable information pinpointing the location of 911 calls to about 6,300 emergency response centers in the U.S.&lt;/p&gt;
&lt;p&gt;Apple is trying to solve a problem caused by the technological mismatch between a 50-year-old system built for landlines and today's increasingly sophisticated smartphones.&lt;/p&gt;
&lt;p&gt;An estimated 80 percent of roughly 240 million emergency calls in the U.S. this year will come from mobile phones, most of which are capable of precisely tracking where their users are.&lt;/p&gt;
&lt;p&gt;Emergency calling centers, however, don't get that detailed location information from mobile 911 calls. Instead, they get the location of the cellular tower transmitting the call, and must rely on other methods to figure out where the caller is.&lt;/p&gt;
&lt;p&gt;That can take up precious time and often isn't very accurate, especially when calls come from inside a building. Emergency responders are sometimes dispatched a mile or more away from a caller's location.&lt;/p&gt;
&lt;p&gt;Apple's upcoming 911 feature relies on technology from RapidSOS, a New York startup. The approach developed by Apple and RapidSOS sends location data from an iPhone to a &quot;clearinghouse&quot; accessible to emergency calling centers. Only the 911 calling centers will be able to see the data during the call, and none of it can be used for non-emergency purposes, according to Apple.&lt;/p&gt;
&lt;p&gt;Individual call centers will each have to embrace the technology required to communicate with the RapidSOS clearinghouse. Some centers already have the compatible software, according to Apple, but others will have to install upgrades to their existing software.&lt;/p&gt;
&lt;p&gt;Apple expects calling centers for large metropolitan areas to upgrade more quickly than those in rural areas.&lt;/p&gt;
&lt;p&gt;Tom Wheeler, a former chairman for the Federal Communications Commission, believes Apple's new approach for locating 911 calls will set a new industry standard. &quot;This is going to save a lot of lives,&quot; said Wheeler, now a visiting professor at Harvard University. He said he hopes other phone makers will follow Apple's lead.&lt;/p&gt;
&lt;p&gt;The planned changes were announced Monday in Nashville, Tennessee during a 911 convention. They'll be part of iOS 12, the next version of Apple's iPhone software, which the company will release in September as a free update.&lt;/p&gt;


</description>
<pubDate>Mon, 18 Jun 2018 14:57:45 +0000</pubDate>
<dc:creator>chmaynard</dc:creator>
<og:title>Apple sets up iPhones to relay location for 911 calls</og:title>
<og:description>Apple is trying to drag the U.S.'s antiquated system for handling 911 calls into the 21st century.</og:description>
<og:type>article</og:type>
<og:url>http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</og:url>
<og:image>https://media.wpri.com/nxs-wpritv-media-us-east-1/photo/2017/11/06/apple-products-iphone_38459369_ver1.0_1280_720.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</dc:identifier>
</item>
<item>
<title>YouTube’s Piracy Filter Blocks MIT Courses, Blender Videos, and More</title>
<link>https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</link>
<guid isPermaLink="true" >https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://torrentfreak.com/images/sadyoutube.jpg&quot; alt=&quot;&quot; width=&quot;275&quot; height=&quot;196&quot; class=&quot;alignright size-full wp-image-117196&quot;/&gt;To protect copyright holders, YouTube uses an advanced piracy recognition system that flags and disables videos which are used without permission.&lt;/p&gt;
&lt;p&gt;This system, known as Content ID, works well most of the time, but it is far from perfect.&lt;/p&gt;
&lt;p&gt;It’s not well equipped to determine whether content deployment is protected under ‘fair use’, and in some cases it even views &lt;a href=&quot;https://torrentfreak.com/musicians-white-noise-youtube-video-hit-with-copyright-complaints-180105/&quot;&gt;white noise&lt;/a&gt; or &lt;a href=&quot;https://news.ycombinator.com/item?id=3637124&quot;&gt;birds chirping&lt;/a&gt; as piracy.&lt;/p&gt;
&lt;p&gt;Over the past several days, an even more worrying trend has appeared. Several popular YouTube accounts including those belonging to ‘&lt;a href=&quot;https://ocw.mit.edu/index.htm&quot;&gt;MIT OpenCourseWare&lt;/a&gt;‘ and the ‘&lt;a href=&quot;https://www.blender.org/&quot;&gt;Blender Foundation&lt;/a&gt;,’ have suddenly had all their videos blocked.&lt;/p&gt;
&lt;p&gt;People who try to watch one of the freely available &lt;a href=&quot;https://www.youtube.com/watch?v=j4b9U9m9MQA&quot;&gt;MIT courses on YouTube&lt;/a&gt; get the following message, which typically appears if an uploader doesn’t have the rights to show content locally.&lt;/p&gt;
&lt;p&gt;“This video contains content from MIT. It is not available in your country.”&lt;/p&gt;
&lt;p&gt;The message appears in all locations that we were able to check, suggesting that it may very well apply worldwide. In any case, on social media there’s no shortage of people mentioning that they can no longer access the courses.&lt;/p&gt;
&lt;center&gt;&lt;strong&gt;Blocked courseware…&lt;/strong&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://torrentfreak.com/images/course-e1529312774179.png&quot; alt=&quot;&quot; width=&quot;567&quot; height=&quot;379&quot; class=&quot;alignnone size-full wp-image-157240&quot;/&gt;&lt;/center&gt;
&lt;p&gt;The issue hasn’t gone unnoticed by MIT’s OpenCourseWare team which is investigating the matter, without pointing fingers.&lt;/p&gt;
&lt;p&gt;“You may have noticed that we are having some trouble with our videos! Please stand by. The elves are working around the clock to fix the issue,” they &lt;a href=&quot;https://twitter.com/MITOCW/status/1007943441035268096&quot;&gt;write&lt;/a&gt;, referring people to non-video content in the meantime.&lt;/p&gt;
&lt;p&gt;Interestingly, the MIT case doesn’t appear to be an isolated incident. Another organization that was hit by the same mysterious blocking efforts is the Blender Foundation.&lt;/p&gt;
&lt;p&gt;The nonprofit organization, which is leading the development of the open source 3D content-creation application Blender, has also had its &lt;a href=&quot;https://www.youtube.com/watch?v=Y-rmzh0PI3c&quot;&gt;videos blocked&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ton Roosendaal, Chairman of the Blender Foundation, noticed the issue on Saturday and contacted YouTube. “This is most probably an error from their side,” Roosendaal said.&lt;/p&gt;
&lt;p&gt;At the time of writing, the issue still hasn’t been resolved.&lt;/p&gt;
&lt;center&gt;&lt;strong&gt;What the heck…&lt;/strong&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://torrentfreak.com/images/tontweet.png&quot; alt=&quot;&quot; width=&quot;578&quot; height=&quot;397&quot; class=&quot;alignnone size-full wp-image-157233&quot;/&gt;&lt;/center&gt;
&lt;p&gt;Both organizations have verified YouTube accounts and many subscribers, which makes them high profile targets. However, two days have passed and it’s still unclear what’s going on.&lt;/p&gt;
&lt;p&gt;The blocking message is part of YouTube’s piracy filter system, but why it was triggered is unknown. As the original publishers, both certainly have the right to publish the videos in question.&lt;/p&gt;
&lt;p&gt;Looking even further, we were able to spot dozens of accounts which show similar “blocking” messages. They include verified ones, such as &lt;a href=&quot;https://www.youtube.com/user/pibindia/videos&quot;&gt;India’s Press Information Bureau&lt;/a&gt;, soccer club &lt;a href=&quot;https://www.youtube.com/watch?v=qZyW4IFf1-E&quot;&gt;Sparta Praha&lt;/a&gt;, and &lt;a href=&quot;https://www.youtube.com/watch?v=zW9zh_9V0SQ&amp;amp;list=TL4s-H0g91xaEI_XL2yG9w-a8irMWSM-An&quot;&gt;England Rugby&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TorrentFreak reached out to YouTube to ask why the videos of these accounts have been blocked but at the time of publication, we had yet to hear back. Something appears to be awfully wrong though.&lt;/p&gt;
&lt;p&gt;The timing of the incident is interesting, to say the least. This week there’s an &lt;a href=&quot;https://torrentfreak.com/judgment-day-nears-for-eus-piracy-filters-180604/&quot;&gt;important vote&lt;/a&gt; scheduled in the European Parliament, which will determine the course of EU copyright law.&lt;/p&gt;
&lt;p&gt;One of the most contested changes is the so-called “upload filter,” which is detailed in Article 13 of the copyright reform proposal. According to opponents, such YouTube-like piracy filters are a threat to free speech.&lt;/p&gt;
&lt;p&gt;These apparent “mistakes” show that there is a point to that.&lt;/p&gt;
&lt;p&gt;Ironically, even French politicians, who were expected to vote in favor of the upload filters, may now reconsider &lt;a href=&quot;https://www.privateinternetaccess.com/blog/2018/06/politicians-about-to-vote-in-favor-of-mandatory-upload-filtering-in-europe-get-channel-deleted-by-youtubes-upload-filtering/&quot;&gt;their stance&lt;/a&gt; after YouTube temporarily &lt;a href=&quot;http://www.europe1.fr/medias-tele/le-compte-youtube-de-la-chaine-dextreme-droite-tv-libertes-ferme-le-rn-sinsurge-3683666&quot;&gt;disabled their account&lt;/a&gt; following three copyright strikes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; YouTube notes that the issue is related to it updated partner agreements. The company is working on a solution.&lt;/p&gt;
&lt;p&gt;“Videos on a limited number of sites have been blocked as we updated our partner agreements. We are working with MITOpenCourseWare and Blender Foundation to get their videos back online,” a YouTube spokesperson tells TorrentFreak.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 14:57:39 +0000</pubDate>
<dc:creator>gooseus</dc:creator>
<og:type>article</og:type>
<og:title>YouTube's Piracy Filter Blocks MIT Courses, Blender Videos, and More (Updated) - TorrentFreak</og:title>
<og:description>Several popular YouTube accounts, including those belonging to 'MIT OpenCourseWare' and the 'Blender Foundation,' have had all their videos blocked. People who try to access the videos are informed that they are not available in their country, suggesting that YouTube's piracy filters have been triggered. It's unclear, however, who or what is to blame.</og:description>
<og:url>https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</og:url>
<og:image>https://torrentfreak.com/images/roadblock-blocked-feat.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</dc:identifier>
</item>
<item>
<title>Face recognition in images and video with Python</title>
<link>https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/</link>
<guid isPermaLink="true" >https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/face-recognition-opencv/face_recognition_opencv_animation_01.gif&quot; alt=&quot;&quot; width=&quot;450&quot; height=&quot;248&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In today’s blog post you are going to learn how to perform &lt;strong&gt;face recognition&lt;/strong&gt; in both images and video streams using:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;OpenCV&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Deep learning&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As we’ll see, the deep learning-based facial embeddings we’ll be using here today are both (1) &lt;em&gt;highly accurate&lt;/em&gt; and (2) capable of being executed in &lt;em&gt;real-time&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To learn more about face recognition with OpenCV, Python, and deep learning, &lt;em&gt;just keep reading!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Face recognition with OpenCV, Python, and deep learning&lt;/h2&gt;
&lt;p&gt;Inside this tutorial, you will learn how to perform facial recognition using OpenCV, Python, and deep learning.&lt;/p&gt;
&lt;p&gt;We’ll start with a brief discussion of how deep learning-based facial recognition works, including the concept of “deep metric learning”.&lt;/p&gt;
&lt;p&gt;From there, I will help you install the libraries you need to actually perform face recognition.&lt;/p&gt;
&lt;p&gt;Finally, we’ll implement face recognition for both still images and video streams.&lt;/p&gt;
&lt;p&gt;As we’ll discover, our face recognition implementation will be capable of running in real-time.&lt;/p&gt;
&lt;h3&gt;Understanding deep learning face recognition embeddings&lt;/h3&gt;
&lt;p&gt;So, how does deep learning + face recognition work?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The secret is a technique called &lt;em&gt;deep metric learning.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have any prior experience with deep learning you know that we typically train a network to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Accept a single input image&lt;/li&gt;
&lt;li&gt;And output a classification/label for that image&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;However, deep metric learning is different.&lt;/p&gt;
&lt;p&gt;Instead, of trying to output a single label (or even the coordinates/bounding box of objects in an image), &lt;strong&gt;we are instead outputting a real-valued feature vector.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For the dlib facial recognition network, the output feature vector is &lt;strong&gt;128-d&lt;/strong&gt; (i.e., a list of 128 real-valued numbers) that is used to &lt;em&gt;quantify the face&lt;/em&gt;. Training the network is done using &lt;strong&gt;triplets&lt;/strong&gt;:&lt;/p&gt;
&lt;div id=&quot;attachment_7840&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;31.710280373832&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_triplet.jpg&quot;&gt;&lt;img class=&quot;wp-image-7840 size-full&quot; src=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_triplet.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;496&quot; srcset=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_triplet.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_triplet-300x248.jpg 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 1:&lt;/strong&gt; Facial recognition via deep metric learning involves a “triplet training step.” The triplet consists of 3 unique face images — 2 of the 3 are the same person. The NN generates a 128-d vector for each of the 3 face images. For the 2 face images of the same person, we tweak the neural network weights to make the vector closer via distance metric. &lt;em&gt;Image credit:&lt;/em&gt; &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Adam Geitgey’s &lt;em&gt;“Machine Learning is Fun”&lt;/em&gt; blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here we provide three images to the network:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Two of these images are example faces of the &lt;em&gt;same&lt;/em&gt; person.&lt;/li&gt;
&lt;li&gt;The third image is a &lt;em&gt;random&lt;/em&gt; face from our dataset and is &lt;em&gt;not&lt;/em&gt; the same person as the other two images.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As an example, let’s again consider &lt;strong&gt;Figure 1&lt;/strong&gt; above where we provided three images: one of Chad Smith and two of Will Ferrell.&lt;/p&gt;
&lt;p&gt;Our network quantifies the faces, constructing the 128-d embedding (quantification) for each.&lt;/p&gt;
&lt;p&gt;From there, the general idea is that we’ll &lt;strong&gt;tweak the weights&lt;/strong&gt; of our neural network so that the 128-d measurements of the two Will Ferrel will be &lt;em&gt;closer to each other&lt;/em&gt; and farther from the measurements for Chad Smith.&lt;/p&gt;
&lt;p&gt;Our network architecture for face recognition is based on ResNet-34 from the &lt;a href=&quot;https://arxiv.org/abs/1512.03385&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Deep Residual Learning for Image Recognition&lt;/em&gt;&lt;/a&gt; paper by He et al., but with fewer layers and the number of filters reduced by half.&lt;/p&gt;
&lt;p&gt;The network itself was trained by &lt;strong&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2017/03/13/an-interview-with-davis-king-creator-of-the-dlib-toolkit/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Davis King&lt;/a&gt;&lt;/strong&gt; on a dataset of ~3 million images. On the &lt;a href=&quot;http://vis-www.cs.umass.edu/lfw/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Labeled Faces in the Wild (LFW)&lt;/a&gt; dataset the network compares to other state-of-the-art methods, reaching &lt;strong&gt;99.38% accuracy&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Both Davis King (the creator of &lt;a href=&quot;http://dlib.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dlib&lt;/a&gt;) and &lt;strong&gt;&lt;a href=&quot;https://adamgeitgey.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Adam Geitgey&lt;/a&gt;&lt;/strong&gt; (the author of the &lt;a href=&quot;https://github.com/ageitgey/face_recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;face_recognition module&lt;/a&gt; we’ll be using shortly) have written detailed articles on how deep learning-based facial recognition works:&lt;/p&gt;
&lt;p&gt;I would highly encourage you to read the above articles for more details on how deep learning facial embeddings work.&lt;/p&gt;
&lt;h3&gt;Install your face recognition libraries&lt;/h3&gt;
&lt;p&gt;In order to perform face recognition with Python and OpenCV we need to install two additional libraries:&lt;/p&gt;
&lt;p&gt;The dlib library, maintained by &lt;a href=&quot;https://www.pyimagesearch.com/2017/03/13/an-interview-with-davis-king-creator-of-the-dlib-toolkit/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Davis King&lt;/a&gt;, contains our implementation of “deep metric learning” which is used to construct our face embeddings used for the actual recognition process.&lt;/p&gt;
&lt;p&gt;The &lt;span id=&quot;crayon-5b28b05396d8a354570067&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  library, created by &lt;a href=&quot;https://adamgeitgey.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Adam Geitgey&lt;/a&gt;, wraps &lt;em&gt;around&lt;/em&gt; dlib’s facial recognition functionality, making it easier to work with.&lt;/p&gt;
&lt;center&gt;&lt;a href=&quot;https://www.pyimageconf.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn from Adam Geitgey and Davis King at &lt;em&gt;PyImageConf&lt;/em&gt; 2018&lt;/a&gt;&lt;/center&gt;
 
&lt;p&gt;I assume that you have &lt;strong&gt;OpenCV installed on your system&lt;/strong&gt;. If not, no worries — just visit my &lt;a href=&quot;https://www.pyimagesearch.com/opencv-tutorials-resources-guides/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OpenCV install tutorials&lt;/a&gt; page and follow the guide appropriate for your system.&lt;/p&gt;
&lt;p&gt;From there, let’s install &lt;span id=&quot;crayon-5b28b05396d9a452470090&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and the &lt;span id=&quot;crayon-5b28b05396d9e050471059&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  packages.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;For the following installs, ensure you are in a Python virtual environment if you’re using one. I highly recommend virtual environments for isolating your projects — it is a Python best practice. If you’ve followed my OpenCV install guides (and installed &lt;span id=&quot;crayon-5b28b05396da3228094792&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;virtualenv&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  + &lt;span id=&quot;crayon-5b28b05396da7296495924&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;virtualenvwrapper&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ) then you can use the &lt;span id=&quot;crayon-5b28b05396dab151838743&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  command prior to installing &lt;span id=&quot;crayon-5b28b05396daf122609956&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and &lt;span id=&quot;crayon-5b28b05396db2720705920&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;Installing &lt;code&gt;dlib&lt;/code&gt; &lt;em&gt;without&lt;/em&gt; GPU support&lt;/h4&gt;
&lt;p&gt;If you do not have a GPU you can install &lt;span id=&quot;crayon-5b28b05396db6152824278&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  using pip by &lt;a href=&quot;https://www.pyimagesearch.com/2018/01/22/install-dlib-easy-complete-guide/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;following this guide&lt;/a&gt;:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396dba922853136&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;7&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ workon # optional
$ pip install dlib
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;2&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot;&gt;
&lt;div class=&quot;crayon-pre&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;# optional&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or you can compile from source:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396dbe789064080&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;9&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ workon &amp;lt;your env name here&amp;gt; # optional
$ git clone https://github.com/davisking/dlib.git
$ cd dlib
$ mkdir build
$ cd build
$ cmake .. -DUSE_AVX_INSTRUCTIONS=1
$ cmake --build .
$ cd ..
$ python setup.py install --yes USE_AVX_INSTRUCTIONS
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;2&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;4&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;# optional&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.com&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;davisking&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.git&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;dlib&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;build&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;build&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;DUSE_AVX_INSTRUCTIONS&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;USE_AVX_INSTRUCTIONS&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Installing &lt;code&gt;dlib&lt;/code&gt; &lt;em&gt;with&lt;/em&gt; GPU support (optional)&lt;/h4&gt;
&lt;p&gt;If you &lt;em&gt;do&lt;/em&gt; have a CUDA compatible GPU you can install &lt;span id=&quot;crayon-5b28b05396dc2291184267&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  with GPU support, making facial recognition faster and more efficient.&lt;/p&gt;
&lt;p&gt;For this, I recommend installing &lt;span id=&quot;crayon-5b28b05396dc6034533681&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  from source as you’ll have more control over the build:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396dc9086322637&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;9&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ workon &amp;lt;your env name here&amp;gt; # optional
$ git clone https://github.com/davisking/dlib.git
$ cd dlib
$ mkdir build
$ cd build
$ cmake .. -DDLIB_USE_CUDA=1 -DUSE_AVX_INSTRUCTIONS=1
$ cmake --build .
$ cd ..
$ python setup.py install --yes USE_AVX_INSTRUCTIONS --yes DLIB_USE_CUDA
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;2&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;4&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;# optional&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.com&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;davisking&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.git&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;dlib&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;build&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;build&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;DDLIB_USE_CUDA&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;DUSE_AVX_INSTRUCTIONS&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;USE_AVX_INSTRUCTIONS&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;DLIB_USE_CUDA&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Install the &lt;code&gt;face_recognition&lt;/code&gt; package&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/ageitgey/face_recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;face_recognition module&lt;/a&gt; is installable via a simple pip command:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396dcd735378380&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;7&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ workon &amp;lt;your env name here&amp;gt; # optional
$ pip install face_recognition
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;2&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;# optional&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Install &lt;code&gt;imutils&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;You’ll also need my package of convenience functions, &lt;a href=&quot;https://github.com/jrosebr1/imutils&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;imutils&lt;/a&gt;. You may install it in your Python virtual environment via pip:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396dd1138495851&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;7&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ workon &amp;lt;your env name here&amp;gt; # optional
$ pip install imutils
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;2&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-c&quot;&gt;# optional&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;imutils&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Our face recognition dataset&lt;/h3&gt;
&lt;div id=&quot;attachment_7815&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/build_face_dataset_jurassic_park.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-7815&quot; src=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/build_face_dataset_jurassic_park.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;352&quot; srcset=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/build_face_dataset_jurassic_park.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/06/build_face_dataset_jurassic_park-300x176.jpg 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 2:&lt;/strong&gt; An example face recognition dataset was created programmatically with Python and the Bing Image Search API. Shown are six of the characters from the Jurassic Park movie series.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Since &lt;em&gt;&lt;a href=&quot;https://www.imdb.com/title/tt0107290/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jurassic Park&lt;/a&gt;&lt;/em&gt; (1993) is my favorite movie of all time, and in honor of &lt;em&gt;&lt;a href=&quot;https://www.imdb.com/title/tt4881806/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jurassic World: Fallen Kingdom&lt;/a&gt;&lt;/em&gt; (2018) being released this Friday in the U.S., we are going to apply face recognition to a sample of the characters in the films:&lt;/p&gt;
&lt;p&gt;This dataset was constructed in &amp;lt; 30 minutes using the method discussed in my &lt;em&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2018/04/09/how-to-quickly-build-a-deep-learning-image-dataset/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to (quickly) build a deep learning image dataset&lt;/a&gt;&lt;/em&gt; tutorial&lt;em&gt;.&lt;/em&gt; Given this dataset of images we’ll:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create the 128-d embeddings for each face in the dataset&lt;/li&gt;
&lt;li&gt;Use these embeddings to recognize the faces of the characters in both images and video streams&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Face recognition project structure&lt;/h3&gt;
&lt;p&gt;Our project structure can be seen by examining the output from the &lt;span id=&quot;crayon-5b28b05396dd7862844129&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;tree&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  command:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396ddb861693559&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;11&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ tree --filelimit 10 --dirsfirst
.
├── dataset
│   ├── alan_grant [22 entries]
│   ├── claire_dearing [53 entries]
│   ├── ellie_sattler [31 entries]
│   ├── ian_malcolm [41 entries]
│   ├── john_hammond [36 entries]
│   └── owen_grady [35 entries]
├── examples
│   ├── example_01.png
│   ├── example_02.png
│   └── example_03.png
├── output
│   └── lunch_scene_output.avi
├── videos
│   └── lunch_scene.mp4
├── search_bing_api.py
├── encode_faces.py
├── recognize_faces_image.py
├── recognize_faces_video.py
├── recognize_faces_video_file.py
└── encodings.pickle

10 directories, 11 files
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;4&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;8&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;p&gt;25&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;21&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;41&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;filelimit&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;dirsfirst&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-i&quot;&gt;dataset&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;alan&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;grant &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;claire&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;dearing &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;ellie&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;sattler &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;ian&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;malcolm &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;john&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;hammond &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   └── &lt;span class=&quot;crayon-v&quot;&gt;owen&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;_&lt;/span&gt;grady &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-i&quot;&gt;examples&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;example_01&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   ├── &lt;span class=&quot;crayon-v&quot;&gt;example_02&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   └── &lt;span class=&quot;crayon-v&quot;&gt;example_03&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-i&quot;&gt;output&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   └── &lt;span class=&quot;crayon-v&quot;&gt;lunch_scene_output&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;avi&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-i&quot;&gt;videos&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;│   └── &lt;span class=&quot;crayon-v&quot;&gt;lunch_scene&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;mp4&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-v&quot;&gt;search_bing_api&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_image&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;├── &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video_file&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;└── &lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-cn&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;files&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Our project has &lt;strong&gt;4 top-level directories:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396de0406788632&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Contains face images for six characters organized into subdirectories based on their respective names.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396de4620551803&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;examples&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Has three face images for testing that are &lt;em&gt;not&lt;/em&gt; in the dataset.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396de7939372018&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : This is where you can store your processed face recognition videos. I’m leaving one of mine in the folder — the classic “lunch scene” from the original &lt;em&gt;Jurassic Park&lt;/em&gt; movie.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396deb789228181&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;videos&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Input videos should be stored in this folder. This folder also contains the “lunch scene” video but it hasn’t undergone our face recognition system yet.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We also have &lt;strong&gt;6 files&lt;/strong&gt; in the root directory:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396def935235796&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;search_bing_api&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Step 1 is to build a dataset (I’ve already done this for you). To learn how to use the Bing API to build a dataset with my script, just see &lt;a href=&quot;https://www.pyimagesearch.com/2018/04/09/how-to-quickly-build-a-deep-learning-image-dataset/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;this blog post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396df3305377291&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Encodings (128-d vectors) for faces are built with this script.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396df7154015759&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_image&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Recognize faces in a single image (based on encodings from your dataset).&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396dfb583556413&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Recognize faces in a live video stream from your webcam and output a video.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396dff178395102&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video_file&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Recognize faces in a video file residing on disk and output the processed video to disk. I won’t be discussing this file today as the bones are from the same skeleton as the video stream file.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396e03937440273&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Facial recognitions encodings are generated from your dataset via &lt;span id=&quot;crayon-5b28b05396e07988171161&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and then serialized to disk.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;After a dataset of images is created (with &lt;span id=&quot;crayon-5b28b05396e0a748337510&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;search_bing_api&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ), we’ll run &lt;span id=&quot;crayon-5b28b05396e0e762153425&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to build the embeddings.&lt;/p&gt;
&lt;p&gt;From there, we’ll run the recognize scripts to actually recognize the faces.&lt;/p&gt;
&lt;h3&gt;Encoding the faces using OpenCV and deep learning&lt;/h3&gt;
&lt;div id=&quot;attachment_7844&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_embedding.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-7844&quot; src=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_embedding.jpg&quot; alt=&quot;&quot; width=&quot;514&quot; height=&quot;300&quot; srcset=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_embedding.jpg 514w, https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_embedding-300x175.jpg 300w&quot; sizes=&quot;(max-width: 514px) 100vw, 514px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 3:&lt;/strong&gt; Facial recognition via deep learning and Python using the &lt;code&gt;face_recognition&lt;/code&gt; module method generates a 128-d real-valued number feature vector per face.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Before we can recognize faces in images and videos, we first need to quantify the faces in our training set. Keep in mind that we are not actually training a network here — &lt;strong&gt;the network has &lt;em&gt;already been trained&lt;/em&gt; to create 128-d embeddings&lt;/strong&gt; on a dataset of ~3 million images.&lt;/p&gt;
&lt;p&gt;We certainly &lt;em&gt;could&lt;/em&gt; train a network from scratch or even fine-tune the weights of an existing model but that is more than likely overkill for many projects. Furthermore, you would need a &lt;em&gt;lot&lt;/em&gt; of images to train the network from scratch.&lt;/p&gt;
&lt;p&gt;Instead, it’s easier to use the pre-trained network and then use it to construct 128-d embeddings for each of the 218 faces in our dataset.&lt;/p&gt;
&lt;p&gt;Then, during classification, we can use a simple k-NN model + votes to make the final face classification. Other traditional machine learning models can be used here as well.&lt;/p&gt;
&lt;p&gt;To construct our face embeddings open up &lt;span id=&quot;crayon-5b28b05396e13017034703&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  from the &lt;em&gt;&lt;strong&gt;“Downloads”&lt;/strong&gt;&lt;/em&gt; associated with this blog post:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396e17890623141&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# import the necessary packages
from imutils import paths
import face_recognition
import argparse
import pickle
import cv2
import os
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# import the necessary packages&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;imutils&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;paths&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;cv2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;os&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;First, we need to import required packages. Again, take note that this script requires &lt;span id=&quot;crayon-5b28b05396e1b135449187&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;imutils&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , &lt;span id=&quot;crayon-5b28b05396e1e713897541&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , and OpenCV installed. Scroll up to the “&lt;em&gt;Install your face recognition libraries”&lt;/em&gt; to make sure you have the libraries ready to go on your system.&lt;/p&gt;
&lt;p&gt;Let’s handle our &lt;a href=&quot;https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;command line arguments&lt;/a&gt; that are processed at runtime with &lt;span id=&quot;crayon-5b28b05396e22647828844&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; :&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396e26963195109&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;20&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument(&quot;-i&quot;, &quot;--dataset&quot;, required=True,
        help=&quot;path to input directory of faces + images&quot;)
ap.add_argument(&quot;-e&quot;, &quot;--encodings&quot;, required=True,
        help=&quot;path to serialized db of facial encodings&quot;)
ap.add_argument(&quot;-d&quot;, &quot;--detection-method&quot;, type=str, default=&quot;cnn&quot;,
        help=&quot;face detection model to use: either `hog` or `cnn`&quot;)
args = vars(ap.parse_args())
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;8.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;17&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;17&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;33&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# construct the argument parser and parse the arguments&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-i&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--dataset&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;path to input directory of faces + images&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-e&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;path to serialized db of facial encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-d&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--detection-method&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;cnn&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;face detection model to use: either `hog` or `cnn`&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;vars&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you’re new to PyImageSearch, let me direct your attention to the above code block which will become familiar to you as you read more of my blog posts. We’re using &lt;span id=&quot;crayon-5b28b05396e2a990749924&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to parse command line arguments. When you run a Python program in your command line, you can provide additional information to the script without leaving your terminal. &lt;strong&gt;Lines 10-17&lt;/strong&gt; do not need to be modified as they parse input coming from the terminal. Check out my blog post about &lt;a href=&quot;https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;command line arguments&lt;/a&gt; if these lines look unfamiliar.&lt;/p&gt;
&lt;p&gt;Let’s list out the argument flags and discuss them:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396e2e973487969&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;dataset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : The path to our dataset (we created a dataset with &lt;span id=&quot;crayon-5b28b05396e32774420773&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;search_bing_api&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  described in &lt;a href=&quot;https://www.pyimagesearch.com/2018/06/11/how-to-build-a-custom-face-recognition-dataset/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;method #2 of last week’s blog post&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396e36846211281&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Our face encodings are written to the file that this argument points to.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396e39930293956&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;detection&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Before we can &lt;em&gt;encode&lt;/em&gt; faces in images we first need to &lt;em&gt;detect&lt;/em&gt; them. Or two face detection methods include either &lt;span id=&quot;crayon-5b28b05396e3d301018033&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;hog&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  or &lt;span id=&quot;crayon-5b28b05396e41924415025&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;cnn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; . Those two flags are the only ones that will work for &lt;span id=&quot;crayon-5b28b05396e44898900837&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;detection&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Now that we’ve defined our arguments, let’s grab the paths to the files in our dataset (as well as perform two initializations):&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396e48485884974&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;9&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# grab the paths to the input images in our dataset
print(&quot;[INFO] quantifying faces...&quot;)
imagePaths = list(paths.list_images(args[&quot;dataset&quot;]))

# initialize the list of known encodings and known names
knownEncodings = []
knownNames = []
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;2&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;4&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;p&gt;25&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# grab the paths to the input images in our dataset&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] quantifying faces...&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePaths&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;list_images&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;dataset&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# initialize the list of known encodings and known names&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownEncodings&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownNames&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Line 21&lt;/strong&gt; uses the path to our input dataset directory to build a list of all &lt;span id=&quot;crayon-5b28b05396e4c369612585&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePaths&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  contained therein.&lt;/p&gt;
&lt;p&gt;We also need to initialize two lists before our loop,  &lt;span id=&quot;crayon-5b28b05396e50886501595&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownEncodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and &lt;span id=&quot;crayon-5b28b05396e53816599100&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownNames&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , respectively. These two lists will contain the face encodings and corresponding names for each person in the dataset (&lt;strong&gt;Lines 24 and 25&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;It’s time to begin looping over our &lt;em&gt;Jurassic Park&lt;/em&gt; character faces!&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396e57034538802&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;13&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# loop over the image paths
for (i, imagePath) in enumerate(imagePaths):
        # extract the person name from the image path
        print(&quot;[INFO] processing image {}/{}&quot;.format(i + 1,
                len(imagePaths)))
        name = imagePath.split(os.path.sep)[-2]

        # load the input image and convert it from RGB (OpenCV ordering)
        # to dlib ordering (RGB)
        image = cv2.imread(imagePath)
        rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;10&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;27&lt;/p&gt;
&lt;p&gt;28&lt;/p&gt;
&lt;p&gt;29&lt;/p&gt;
&lt;p&gt;30&lt;/p&gt;
&lt;p&gt;31&lt;/p&gt;
&lt;p&gt;32&lt;/p&gt;
&lt;p&gt;33&lt;/p&gt;
&lt;p&gt;34&lt;/p&gt;
&lt;p&gt;35&lt;/p&gt;
&lt;p&gt;36&lt;/p&gt;
&lt;p&gt;37&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;12.5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;24&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the image paths&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePaths&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# extract the person name from the image path&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] processing image {}/{}&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePaths&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;os.path&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# load the input image and convert it from RGB (OpenCV ordering)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# to dlib ordering (RGB)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;COLOR_BGR2RGB&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This loop will cycle 218 times corresponding to our 218 face images in the dataset. We’re looping over the paths to each of the images on &lt;strong&gt;Line 28&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;From there, we’ll extract the &lt;span id=&quot;crayon-5b28b05396e5b450371086&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  of the person from the &lt;span id=&quot;crayon-5b28b05396e5f668327012&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePath&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  (as our subdirectory is named appropriately) on &lt;strong&gt;Line 32&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then let’s load the &lt;span id=&quot;crayon-5b28b05396e63671431320&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  while passing the &lt;span id=&quot;crayon-5b28b05396e66177116561&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;imagePath&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to &lt;span id=&quot;crayon-5b28b05396e6a875154128&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;imread&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  (&lt;strong&gt;Line 36&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;OpenCV orders color channels in BGR, but the &lt;span id=&quot;crayon-5b28b05396e6e678260914&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  actually expects RGB. The &lt;span id=&quot;crayon-5b28b05396e71915527864&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  module uses &lt;span id=&quot;crayon-5b28b05396e75985355311&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;dlib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , so before we proceed, let’s swap color spaces on &lt;strong&gt;Line 37&lt;/strong&gt;, naming the new image &lt;span id=&quot;crayon-5b28b05396e79895157437&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/p&gt;
&lt;p&gt;Next, let’s localize the face and compute encodings:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396e7c664843793&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;13&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# detect the (x, y)-coordinates of the bounding boxes
        # corresponding to each face in the input image
        boxes = face_recognition.face_locations(rgb,
                model=args[&quot;detection_method&quot;])

        # compute the facial embedding for the face
        encodings = face_recognition.face_encodings(rgb, boxes)

        # loop over the encodings
        for encoding in encodings:
                # add each encoding + name to our set of known names and
                # encodings
                knownEncodings.append(encoding)
                knownNames.append(name)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;10&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;39&lt;/p&gt;
&lt;p&gt;40&lt;/p&gt;
&lt;p&gt;41&lt;/p&gt;
&lt;p&gt;42&lt;/p&gt;
&lt;p&gt;43&lt;/p&gt;
&lt;p&gt;44&lt;/p&gt;
&lt;p&gt;45&lt;/p&gt;
&lt;p&gt;46&lt;/p&gt;
&lt;p&gt;47&lt;/p&gt;
&lt;p&gt;48&lt;/p&gt;
&lt;p&gt;49&lt;/p&gt;
&lt;p&gt;50&lt;/p&gt;
&lt;p&gt;51&lt;/p&gt;
&lt;p&gt;52&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;14.5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;28&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# detect the (x, y)-coordinates of the bounding boxes&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# corresponding to each face in the input image&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;face_locations&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;detection_method&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# compute the facial embedding for the face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;face_encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the encodings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# add each encoding + name to our set of known names and&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# encodings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownEncodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownNames&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is the fun part of the script!&lt;/p&gt;
&lt;p&gt;For each iteration of the loop, we’re going to detect a face (or possibly multiple faces and assume that it is the same person in multiple locations of the image — this assumption may or may not hold true in your own images so be careful here).&lt;/p&gt;
&lt;p&gt;For example, let’s say that &lt;span id=&quot;crayon-5b28b05396e81114516727&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  contains a picture (or pictures) of Ellie Sattler’s face.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lines 41 and 42&lt;/strong&gt; actually find/localize the faces of her resulting in a list of face &lt;span id=&quot;crayon-5b28b05396e85091969036&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; . We pass two parameters to the &lt;span id=&quot;crayon-5b28b05396e88381781073&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_locations&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  method:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396e8c157914553&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Our RGB image.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396e8f537247249&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;model&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : Either &lt;span id=&quot;crayon-5b28b05396e93970120987&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;cnn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  or &lt;span id=&quot;crayon-5b28b05396e97926250470&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;hog&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (this value is contained within our command line arguments dictionary associated with the &lt;span id=&quot;crayon-5b28b05396e9a484332010&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;detection_method&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  key). The CNN method is more accurate but slower. HOG is faster but less accurate.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Then, we’re going to turn the bounding &lt;span id=&quot;crayon-5b28b05396e9e526931842&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  of Ellie Sattler’s face into a list of 128 numbers on &lt;strong&gt;Line 45&lt;/strong&gt;. This is known as &lt;em&gt;encoding&lt;/em&gt; the face into a vector and the &lt;span id=&quot;crayon-5b28b05396ea2629408004&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  method handles it for us.&lt;/p&gt;
&lt;p&gt;From there we just need to append the Ellie Sattler &lt;span id=&quot;crayon-5b28b05396eb0475409153&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encoding&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and &lt;span id=&quot;crayon-5b28b05396eb4226505473&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to the appropriate list ( &lt;span id=&quot;crayon-5b28b05396eb8693865377&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownEncodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and &lt;span id=&quot;crayon-5b28b05396ebc730124673&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;knownNames&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ).&lt;/p&gt;
&lt;p&gt;We’ll continue to do this for all 218 images in the dataset.&lt;/p&gt;
&lt;p&gt;What would be the point of encoding the images unless we could use the &lt;span id=&quot;crayon-5b28b05396ed7637087077&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  in another script which handles the recognition?&lt;/p&gt;
&lt;p&gt;Let’s take care of that now:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396ede698128187&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;11&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# dump the facial encodings + names to disk
print(&quot;[INFO] serializing encodings...&quot;)
data = {&quot;encodings&quot;: knownEncodings, &quot;names&quot;: knownNames}
f = open(args[&quot;encodings&quot;], &quot;wb&quot;)
f.write(pickle.dumps(data))
f.close()
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;3&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;6&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;54&lt;/p&gt;
&lt;p&gt;55&lt;/p&gt;
&lt;p&gt;56&lt;/p&gt;
&lt;p&gt;57&lt;/p&gt;
&lt;p&gt;58&lt;/p&gt;
&lt;p&gt;59&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;17&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# dump the facial encodings + names to disk&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] serializing encodings...&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;knownEncodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;names&quot;&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;knownNames&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;wb&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Line 56&lt;/strong&gt; constructs a dictionary with two keys — &lt;span id=&quot;crayon-5b28b05396ee2702433815&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and &lt;span id=&quot;crayon-5b28b05396ee7405461527&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;names&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/p&gt;
&lt;p&gt;From there &lt;strong&gt;Lines 57-59&lt;/strong&gt; dump the names and encodings to disk for future recall.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How should I run the &lt;span id=&quot;crayon-5b28b05396eeb398947793&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  script in the terminal?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To create our facial embeddings open up a terminal and execute the following command:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396eef103805178&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;10&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ python encode_faces.py --dataset dataset --encodings encodings.pickle
[INFO] quantifying faces...
[INFO] processing image 1/218
[INFO] processing image 2/218
[INFO] processing image 3/218
...
[INFO] processing image 216/218
[INFO] processing image 217/218
[INFO] processing image 218/218
[INFO] serializing encodings...
$ ls -lh encodings*
-rw-r--r--@ 1 adrian  staff   234K May 29 13:03 encodings.pickle
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;3.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;7&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;25&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;quantifying&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;faces&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;216&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;217&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;218&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;serializing&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;lh&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;*&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rw&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;adrian  &lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;staff&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt;  &lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;234K&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;May&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see from our output, we now have a file named &lt;span id=&quot;crayon-5b28b05396ef3552619355&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  — this file contains the 128-d face embeddings for each face in our dataset.&lt;/p&gt;
&lt;p&gt;On my Titan X GPU, processing the entire dataset took a little over a minute, but if you’re using a CPU, &lt;em&gt;&lt;strong&gt;be prepared to wait awhile for this script complete!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On my Macbook Pro (no GPU), encoding 218 images required &lt;strong&gt;21min 20sec&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You should expect much faster speeds if you have a GPU and compiled dlib with GPU support.&lt;/p&gt;
&lt;h3&gt;Recognizing faces in images&lt;/h3&gt;
&lt;div id=&quot;attachment_7848&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_03.jpg&quot;&gt;&lt;img class=&quot;wp-image-7848 size-full&quot; src=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_03.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;394&quot; srcset=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_03.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_03-300x197.jpg 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 4:&lt;/strong&gt; John Hammond’s face is recognized using Adam Geitgey’s deep learning &lt;code&gt;face_recognition&lt;/code&gt; Python module.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now that we have created our 128-d face embeddings for each image in our dataset, we are now ready to recognize faces in image using OpenCV, Python, and deep learning.&lt;/p&gt;
&lt;p&gt;Open up &lt;span id=&quot;crayon-5b28b05396ef8442283521&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_image&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and insert the following code (or better yet, grab the files and image data associated with this blog post from the &lt;em&gt;&lt;strong&gt;“Downloads”&lt;/strong&gt;&lt;/em&gt; section found at the bottom of this post, and follow along):&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396efc739024079&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;20&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# import the necessary packages
import face_recognition
import argparse
import pickle
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument(&quot;-e&quot;, &quot;--encodings&quot;, required=True,
        help=&quot;path to serialized db of facial encodings&quot;)
ap.add_argument(&quot;-i&quot;, &quot;--image&quot;, required=True,
        help=&quot;path to input image&quot;)
ap.add_argument(&quot;-d&quot;, &quot;--detection-method&quot;, type=str, default=&quot;cnn&quot;,
        help=&quot;face detection model to use: either `hog` or `cnn`&quot;)
args = vars(ap.parse_args())
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;8.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;17&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;18&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;35&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# import the necessary packages&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# construct the argument parser and parse the arguments&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-e&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;path to serialized db of facial encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-i&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--image&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;path to input image&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-d&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--detection-method&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;cnn&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;face detection model to use: either `hog` or `cnn`&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;vars&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This script requires just four imports on &lt;strong&gt;Lines 2-5&lt;/strong&gt;. The &lt;span id=&quot;crayon-5b28b05396f00632252825&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  module will do the heavy lifting and OpenCV will help us to load, convert, and display the processed image.&lt;/p&gt;
&lt;p&gt;We’ll parse three command line arguments on &lt;strong&gt;Lines 8-15:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396f04213675396&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : The path to the pickle file containing our face encodings.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396f08958323156&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : This is the image that is undergoing facial recognition.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05396f0c877712723&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;detection&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : You should be familiar with this one by now — we’re either going to use a &lt;span id=&quot;crayon-5b28b05396f10295169694&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;hog&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  or &lt;span id=&quot;crayon-5b28b05396f14619451737&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;cnn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  method depending on the capability of your system. For speed, choose &lt;span id=&quot;crayon-5b28b05396f18802833644&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;hog&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and for accuracy, choose &lt;span id=&quot;crayon-5b28b05396f1b228368946&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;cnn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; On the Raspberry Pi you’ll need to choose &lt;span id=&quot;crayon-5b28b05396f1f324722081&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;hog&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  as there isn’t enough memory to support the CNN method.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;From there, let’s load the pre-computed encodings + face names and then construct the 128-d face encoding for the input image:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396f23924540035&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;16&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# load the known faces and embeddings
print(&quot;[INFO] loading encodings...&quot;)
data = pickle.loads(open(args[&quot;encodings&quot;], &quot;rb&quot;).read())

# load the input image and convert it from BGR to RGB
image = cv2.imread(args[&quot;image&quot;])
rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# detect the (x, y)-coordinates of the bounding boxes corresponding
# to each face in the input image, then compute the facial embeddings
# for each face
print(&quot;[INFO] recognizing faces...&quot;)
boxes = face_recognition.face_locations(rgb,
        model=args[&quot;detection_method&quot;])
encodings = face_recognition.face_encodings(rgb, boxes)

# initialize the list of names for each face detected
names = []
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;6.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;13&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;p&gt;25&lt;/p&gt;
&lt;p&gt;26&lt;/p&gt;
&lt;p&gt;27&lt;/p&gt;
&lt;p&gt;28&lt;/p&gt;
&lt;p&gt;29&lt;/p&gt;
&lt;p&gt;30&lt;/p&gt;
&lt;p&gt;31&lt;/p&gt;
&lt;p&gt;32&lt;/p&gt;
&lt;p&gt;33&lt;/p&gt;
&lt;p&gt;34&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;19&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;37&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# load the known faces and embeddings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] loading encodings...&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;rb&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# load the input image and convert it from BGR to RGB&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;COLOR_BGR2RGB&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# detect the (x, y)-coordinates of the bounding boxes corresponding&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# to each face in the input image, then compute the facial embeddings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# for each face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] recognizing faces...&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;face_locations&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;detection_method&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;face_encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# initialize the list of names for each face detected&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Line 19&lt;/strong&gt; loads our pickled encodings and face names from disk. We’ll need this data later during the actual face recognition step.&lt;/p&gt;
&lt;p&gt;Then, on &lt;strong&gt;Lines 22 and 23&lt;/strong&gt; we load and convert the input &lt;span id=&quot;crayon-5b28b05396f28370908749&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to &lt;span id=&quot;crayon-5b28b05396f2b997383931&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  color channel ordering (just as we did in the &lt;span id=&quot;crayon-5b28b05396f2f941612893&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encode_faces&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  script).&lt;/p&gt;
&lt;p&gt;We then proceed to detect all faces in the input image and compute their 128-d &lt;span id=&quot;crayon-5b28b05396f33194516819&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  on &lt;strong&gt;Lines 29-31&lt;/strong&gt; (these lines should also look familiar).&lt;/p&gt;
&lt;p&gt;Now is a good time to initialize a list of &lt;span id=&quot;crayon-5b28b05396f37201292823&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  for each face that is detected — this list will be populated in the next step.&lt;/p&gt;
&lt;p&gt;Next, let’s loop over the facial &lt;span id=&quot;crayon-5b28b05396f3a082594557&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; :&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396f3e018943365&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;10&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# loop over the facial embeddings
for encoding in encodings:
        # attempt to match each face in the input image to our known
        # encodings
        matches = face_recognition.compare_faces(data[&quot;encodings&quot;],
                encoding)
        name = &quot;Unknown&quot;
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;2.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;5&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;36&lt;/p&gt;
&lt;p&gt;37&lt;/p&gt;
&lt;p&gt;38&lt;/p&gt;
&lt;p&gt;39&lt;/p&gt;
&lt;p&gt;40&lt;/p&gt;
&lt;p&gt;41&lt;/p&gt;
&lt;p&gt;42&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the facial embeddings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# attempt to match each face in the input image to our known&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# encodings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;compare_faces&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;On &lt;strong&gt;Line 37&lt;/strong&gt; we begin to loop over the face encodings computed from our input image.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Then the facial recognition magic happens!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We attempt to match each face in the input image ( &lt;span id=&quot;crayon-5b28b05396f42054244197&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;encoding&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ) to our known encodings dataset (held in &lt;span id=&quot;crayon-5b28b05396f47786374257&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ) using &lt;span id=&quot;crayon-5b28b05396f4b808041996&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;compare_faces&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  (&lt;strong&gt;Lines 40 and 41&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;This function returns a list of &lt;span id=&quot;crayon-5b28b05396f4f944327050&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; / &lt;span id=&quot;crayon-5b28b05396f53861273435&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  values, one for each image in our dataset. For our &lt;em&gt;Jurassic Park&lt;/em&gt; example, there are 218 images in the dataset and therefore the returned list will have 218 boolean values.&lt;/p&gt;
&lt;p&gt;Internally, the &lt;span id=&quot;crayon-5b28b05396f56206163572&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;compare_faces&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  function is computing the Euclidean distance between the candidate embedding and all faces in our dataset:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the distance is below some tolerance (the smaller the tolerance, the more strict our facial recognition system will be) then we return &lt;span id=&quot;crayon-5b28b05396f5a027781394&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , &lt;strong&gt;indicating the faces match.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Otherwise, if the distance is above the tolerance threshold we return &lt;span id=&quot;crayon-5b28b05396f5e780027096&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  as &lt;strong&gt;the faces do not match.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Essentially, we are utilizing a “more fancy” &lt;a href=&quot;https://www.pyimagesearch.com/2016/08/08/k-nn-classifier-for-image-classification/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;k-NN model&lt;/a&gt; for classification. Be sure to refer to the &lt;a href=&quot;https://github.com/ageitgey/face_recognition/blob/master/face_recognition/api.py#L213&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;compare_faces implementation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;The &lt;span id=&quot;crayon-5b28b05396f62597136165&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  variable will eventually hold the name string of the person — for now, we leave it as &lt;span id=&quot;crayon-5b28b05396f66310841150&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  in case there are no “votes” (&lt;strong&gt;Line 42&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Given our &lt;span id=&quot;crayon-5b28b05396f69900210240&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  list we can compute the number of “votes” for each name (number of &lt;span id=&quot;crayon-5b28b05396f6d429291205&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  values associated with each name), tally up the votes, and select the person’s name with the most corresponding votes:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396f71878424132&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;13&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# check to see if we have found a match
        if True in matches:
                # find the indexes of all matched faces then initialize a
                # dictionary to count the total number of times each face
                # was matched
                matchedIdxs = [i for (i, b) in enumerate(matches) if b]
                counts = {}

                # loop over the matched indexes and maintain a count for
                # each recognized face face
                for i in matchedIdxs:
                        name = data[&quot;names&quot;][i]
                        counts[name] = counts.get(name, 0) + 1

                # determine the recognized face with the largest number of
                # votes (note: in the event of an unlikely tie Python will
                # select first entry in the dictionary)
                name = max(counts, key=counts.get)
        
        # update the list of names
        names.append(name)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;10&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;44&lt;/p&gt;
&lt;p&gt;45&lt;/p&gt;
&lt;p&gt;46&lt;/p&gt;
&lt;p&gt;47&lt;/p&gt;
&lt;p&gt;48&lt;/p&gt;
&lt;p&gt;49&lt;/p&gt;
&lt;p&gt;50&lt;/p&gt;
&lt;p&gt;51&lt;/p&gt;
&lt;p&gt;52&lt;/p&gt;
&lt;p&gt;53&lt;/p&gt;
&lt;p&gt;54&lt;/p&gt;
&lt;p&gt;55&lt;/p&gt;
&lt;p&gt;56&lt;/p&gt;
&lt;p&gt;57&lt;/p&gt;
&lt;p&gt;58&lt;/p&gt;
&lt;p&gt;59&lt;/p&gt;
&lt;p&gt;60&lt;/p&gt;
&lt;p&gt;61&lt;/p&gt;
&lt;p&gt;62&lt;/p&gt;
&lt;p&gt;63&lt;/p&gt;
&lt;p&gt;64&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;16.5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# check to see if we have found a match&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# find the indexes of all matched faces then initialize a&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# dictionary to count the total number of times each face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# was matched&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;matchedIdxs&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the matched indexes and maintain a count for&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# each recognized face face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;matchedIdxs&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;names&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# determine the recognized face with the largest number of&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# votes (note: in the event of an unlikely tie Python will&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# select first entry in the dictionary)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# update the list of names&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If there are any &lt;span id=&quot;crayon-5b28b05396f75985730666&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  votes in &lt;span id=&quot;crayon-5b28b05396f79695277896&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  (&lt;strong&gt;Line 45&lt;/strong&gt;) we need to determine the &lt;em&gt;indexes&lt;/em&gt; of where these &lt;span id=&quot;crayon-5b28b05396f7d604567049&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  values are in &lt;span id=&quot;crayon-5b28b05396f81591772806&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; . We do just that on &lt;strong&gt;Line 49&lt;/strong&gt; where we construct a simple list of &lt;span id=&quot;crayon-5b28b05396f84121764645&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;matchedIdxs&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  which might look like this for &lt;span id=&quot;crayon-5b28b05396f88148882051&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;example_01&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; :&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396f8c382370796&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover wrap&quot; readability=&quot;47&quot;&gt;


&lt;p&gt;
&lt;textarea class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
(Pdb) matchedIdxs
[35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75]
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;21&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;42&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;24&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;47&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;Pdb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;matchedIdxs&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;49&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;58&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;68&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;69&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;71&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;72&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;73&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;74&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We then initialize a dictionary called &lt;span id=&quot;crayon-5b28b05396f90358746622&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  which will hold the character name as the &lt;em&gt;key&lt;/em&gt; the number of votes as the &lt;em&gt;value&lt;/em&gt; (&lt;strong&gt;Line 50&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;From there, let’s loop over the &lt;span id=&quot;crayon-5b28b05396f94192742855&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;matchedIdxs&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and set the value associated with each name while incrementing it as necessary in &lt;span id=&quot;crayon-5b28b05396fa1652872110&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .  The &lt;span id=&quot;crayon-5b28b05396fa5133815616&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  dictionary might look like this for a high vote score for Ian Malcolm:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396fa9256764348&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;7&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
(Pdb) counts
{'ian_malcolm': 40}
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;2&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot;&gt;
&lt;div class=&quot;crayon-pre&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;Pdb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;counts&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;'ian_malcolm'&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Recall that we only have 41 pictures of Ian in the dataset, so a score of 40 with no votes for anybody else is extremely high.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line 61&lt;/strong&gt; extracts the name with the most votes from &lt;span id=&quot;crayon-5b28b05396fad111901735&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , in this case it would be &lt;span id=&quot;crayon-5b28b05396fc8089591609&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-s&quot;&gt;'ian_malcolm'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/p&gt;
&lt;p&gt;The second iteration of our loop (as there are two faces in our example image) of the main facial encodings loop yields the following for   &lt;span id=&quot;crayon-5b28b05396fce536868470&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; :&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396fd2745073500&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;7&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
(Pdb) counts
{'alan_grant': 5}
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;2&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot;&gt;
&lt;div class=&quot;crayon-pre&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;Pdb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;counts&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;'alan_grant'&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That is definitely a smaller vote score, but still, there is only one name in the dictionary so we likely have found Alan Grant.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/em&gt;&lt;em&gt;The PDB Python Debugger was used to verify values of the &lt;span id=&quot;crayon-5b28b05396fd6306599487&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  dictionary. PDB usage is outside the scope of this blog post; however, you can discover how to use it on the &lt;a href=&quot;https://docs.python.org/3/library/pdb.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python docs page&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As shown in &lt;strong&gt;Figure 5 &lt;/strong&gt;below, both Ian Malcolm and Alan Grant have been correctly recognized, so this part of the script is working well.&lt;/p&gt;
&lt;p&gt;Let’s move on and loop over the bounding boxes and labeled names for each person and draw them on our output image for visualization purposes:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396fdc556911102&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;33&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# loop over the recognized faces
for ((top, right, bottom, left), name) in zip(boxes, names):
        # draw the predicted face name on the image
        cv2.rectangle(image, (left, top), (right, bottom), (0, 255, 0), 2)
        y = top - 15 if top - 15 &amp;gt; 15 else top + 15
        cv2.putText(image, name, (left, y), cv2.FONT_HERSHEY_SIMPLEX,
                0.75, (0, 255, 0), 2)

# show the output image
cv2.imshow(&quot;Image&quot;, image)
cv2.waitKey(0)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;15&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;30&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;66&lt;/p&gt;
&lt;p&gt;67&lt;/p&gt;
&lt;p&gt;68&lt;/p&gt;
&lt;p&gt;69&lt;/p&gt;
&lt;p&gt;70&lt;/p&gt;
&lt;p&gt;71&lt;/p&gt;
&lt;p&gt;72&lt;/p&gt;
&lt;p&gt;73&lt;/p&gt;
&lt;p&gt;74&lt;/p&gt;
&lt;p&gt;75&lt;/p&gt;
&lt;p&gt;76&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;19.5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;38&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the recognized faces&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# draw the predicted face name on the image&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;putText&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# show the output image&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;Image&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;waitKey&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;On &lt;strong&gt;Line 67&lt;/strong&gt; we begin looping over the detected face bounding  &lt;span id=&quot;crayon-5b28b05396fe0969533673&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and predicted  &lt;span id=&quot;crayon-5b28b05396fe4443012255&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; . To create an iterable object so we can easily loop through the values, we call &lt;span id=&quot;crayon-5b28b05396fe8578944426&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  resulting in tuples that we can extract the box coordinates and name from.&lt;/p&gt;
&lt;p&gt;We use the box coordinates to draw a green rectangle on &lt;strong&gt;Line 69&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We also use the coordinates to calculate where we should draw the text for the person’s name (&lt;strong&gt;Line 70&lt;/strong&gt;) followed by actually placing the name text on the image (&lt;strong&gt;Lines 71 and 72&lt;/strong&gt;). If the face bounding box is at the very top of the image, we need to move the text below the top of the box (handled on &lt;strong&gt;Line 70&lt;/strong&gt;), otherwise the text would be cut off.&lt;/p&gt;
&lt;p&gt;We then proceed to display the image until a key is pressed (&lt;strong&gt;Lines 75 and 76&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How should you run the facial recognition Python script?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using your terminal, first ensure you’re in your respective Python correct virtual environment with the &lt;span id=&quot;crayon-5b28b05396fed892486900&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;workon&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  command (if you are using a virtual environment, of course).&lt;/p&gt;
&lt;p&gt;Then run the script while providing the two &lt;a href=&quot;https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;command line arguments&lt;/a&gt; at a minimum. If you choose to use the HoG method, be sure to pass &lt;span id=&quot;crayon-5b28b05396ff2740308266&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;--detection-method hog&lt;/span&gt;&lt;/span&gt;  as well (otherwise it will default to the deep learning detector).&lt;/p&gt;
&lt;p&gt;Let’s go for it!&lt;/p&gt;
&lt;p&gt;To recognize a face using OpenCV and Python open up your terminal and execute our script:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396ff5737388886&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ python recognize_faces_image.py --encodings encodings.pickle \
        --image examples/example_01.png
[INFO] loading encodings...
[INFO] recognizing faces...
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_image&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;examples&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;example_01&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;recognizing&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;faces&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;attachment_7851&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_01.jpg&quot;&gt;&lt;img class=&quot;wp-image-7851 size-full&quot; src=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_01.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;450&quot; srcset=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_01.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_01-300x225.jpg 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 5:&lt;/strong&gt; Alan Grant and Ian Malcom’s faces are recognized using our Python + OpenCV + deep learning method.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A second face recognition example follows:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05396ffa789882283&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ python recognize_faces_image.py --encodings encodings.pickle \
        --image examples/example_02.png
[INFO] loading encodings...
[INFO] recognizing faces...
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_image&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;examples&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;example_02&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;recognizing&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;faces&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;attachment_7852&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_02.jpg&quot;&gt;&lt;img class=&quot;wp-image-7852 size-full&quot; src=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_02.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;363&quot; srcset=&quot;https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_02.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/06/face_recognition_opencv_example_02-300x182.jpg 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 6:&lt;/strong&gt; Face recognition with OpenCV and Python.&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;Recognizing faces in video&lt;/h3&gt;
&lt;div id=&quot;attachment_7855&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;a href=&quot;https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/face-recognition-opencv/face_recognition_opencv_animation_02.gif&quot;&gt;&lt;img class=&quot;wp-image-7855&quot; src=&quot;https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/face-recognition-opencv/face_recognition_opencv_animation_02.gif&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;338&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;&lt;strong&gt;Figure 7:&lt;/strong&gt; Facial recognition in video via Python, OpenCV, and deep learning.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now that we have applied face recognition to &lt;em&gt;images&lt;/em&gt; let’s also apply face recognition to &lt;em&gt;videos&lt;/em&gt; (in real-time) as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important Performance Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;The CNN face recognizer should only be used in real-time if you are working with a GPU (you can use it with a CPU, but expect less than 0.5 FPS which makes for a choppy video). Alternatively (you are using a CPU), you should use the HoG method (or even OpenCV Haar cascades covered in a future blog post) and expect adequate speeds. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The following script draws many parallels from the previous &lt;span id=&quot;crayon-5b28b05396fff764807616&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_image&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  script. Therefore I’ll be breezing past what we’ve already covered and just review the video components so that you understand what is going on.&lt;/p&gt;
&lt;p&gt;Once you’ve grabbed the &lt;em&gt;&lt;strong&gt;“Downloads”&lt;/strong&gt;&lt;/em&gt;, open up &lt;span id=&quot;crayon-5b28b05397003529448188&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and follow along:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05397008541341066&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;24&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# import the necessary packages
from imutils.video import VideoStream
import face_recognition
import argparse
import imutils
import pickle
import time
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument(&quot;-e&quot;, &quot;--encodings&quot;, required=True,
        help=&quot;path to serialized db of facial encodings&quot;)
ap.add_argument(&quot;-o&quot;, &quot;--output&quot;, type=str,
        help=&quot;path to output video&quot;)
ap.add_argument(&quot;-y&quot;, &quot;--display&quot;, type=int, default=1,
        help=&quot;whether or not to display output frame to screen&quot;)
ap.add_argument(&quot;-d&quot;, &quot;--detection-method&quot;, type=str, default=&quot;cnn&quot;,
        help=&quot;face detection model to use: either `hog` or `cnn`&quot;)
args = vars(ap.parse_args())
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;10.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;21&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;23&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;45&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# import the necessary packages&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;imutils&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;VideoStream&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;face_recognition&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;imutils&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;time&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-r&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# construct the argument parser and parse the arguments&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-e&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;path to serialized db of facial encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-o&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--output&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;path to output video&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-y&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--display&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;whether or not to display output frame to screen&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;-d&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;--detection-method&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;cnn&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;face detection model to use: either `hog` or `cnn`&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;vars&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We import packages on &lt;strong&gt;Lines 2-8&lt;/strong&gt; and then proceed to parse our command line arguments on &lt;strong&gt;Lines 11-20&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We have four command line arguments, two of which you should recognize from above ( &lt;span id=&quot;crayon-5b28b0539700c848178938&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and &lt;span id=&quot;crayon-5b28b05397010084232095&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;detection&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ). The other two arguments are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span id=&quot;crayon-5b28b05397013900543816&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;output&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : The path to the output video.&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;crayon-5b28b05397017084918962&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;display&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : A flag which instructs the script to display the frame to the screen. A value of &lt;span id=&quot;crayon-5b28b0539701b128164690&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  displays and a value of  &lt;span id=&quot;crayon-5b28b05397024611744598&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  will not display the output frames to our screen.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;From there we’ll load our encodings and start our &lt;span id=&quot;crayon-5b28b05397029767413347&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;VideoStream&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; :&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b0539702d673335754&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;12&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# load the known faces and embeddings
print(&quot;[INFO] loading encodings...&quot;)
data = pickle.loads(open(args[&quot;encodings&quot;], &quot;rb&quot;).read())

# initialize the video stream and pointer to output video file, then
# allow the camera sensor to warm up
print(&quot;[INFO] starting video stream...&quot;)
vs = VideoStream(src=0).start()
writer = None
time.sleep(2.0)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;4.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;9&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;p&gt;25&lt;/p&gt;
&lt;p&gt;26&lt;/p&gt;
&lt;p&gt;27&lt;/p&gt;
&lt;p&gt;28&lt;/p&gt;
&lt;p&gt;29&lt;/p&gt;
&lt;p&gt;30&lt;/p&gt;
&lt;p&gt;31&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;21&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# load the known faces and embeddings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] loading encodings...&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-k&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;rb&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# initialize the video stream and pointer to output video file, then&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# allow the camera sensor to warm up&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;[INFO] starting video stream...&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;vs&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;VideoStream&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;None&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To access our camera we’re using the &lt;span id=&quot;crayon-5b28b05397031675117606&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;VideoStream&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  class from &lt;a href=&quot;https://github.com/jrosebr1/imutils/blob/master/imutils/video/videostream.py&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;imutils&lt;/a&gt;. &lt;strong&gt;Line 29&lt;/strong&gt; starts the stream. If you have multiple cameras on your system (such as a built-in webcam and an external USB cam), you can change the &lt;span id=&quot;crayon-5b28b05397035945189166&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to &lt;span id=&quot;crayon-5b28b05397038960883781&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and so forth.&lt;/p&gt;
&lt;p&gt;We’ll be optionally writing processed video frames to disk later, so we initialize &lt;span id=&quot;crayon-5b28b0539703c182101547&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  to &lt;span id=&quot;crayon-5b28b05397040743944321&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-t&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (&lt;strong&gt;Line 30&lt;/strong&gt;). Sleeping for 2 complete seconds allows our camera to warm up (&lt;strong&gt;Line 31&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;From there we’ll start a &lt;span id=&quot;crayon-5b28b05397044837285595&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-st&quot;&gt;while&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  loop and begin to grab and process frames:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05397048813271808&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;16&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# loop over frames from the video file stream
while True:
        # grab the frame from the threaded video stream
        frame = vs.read()
        
        # convert the input frame from BGR to RGB then resize it to have
        # a width of 750px (to speedup processing)
        rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        rgb = imutils.resize(frame, width=750)
        r = frame.shape[1] / float(rgb.shape[1])

        # detect the (x, y)-coordinates of the bounding boxes
        # corresponding to each face in the input frame, then compute
        # the facial embeddings for each face
        boxes = face_recognition.face_locations(rgb,
                model=args[&quot;detection_method&quot;])
        encodings = face_recognition.face_encodings(rgb, boxes)
        names = []
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;6.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;13&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;33&lt;/p&gt;
&lt;p&gt;34&lt;/p&gt;
&lt;p&gt;35&lt;/p&gt;
&lt;p&gt;36&lt;/p&gt;
&lt;p&gt;37&lt;/p&gt;
&lt;p&gt;38&lt;/p&gt;
&lt;p&gt;39&lt;/p&gt;
&lt;p&gt;40&lt;/p&gt;
&lt;p&gt;41&lt;/p&gt;
&lt;p&gt;42&lt;/p&gt;
&lt;p&gt;43&lt;/p&gt;
&lt;p&gt;44&lt;/p&gt;
&lt;p&gt;45&lt;/p&gt;
&lt;p&gt;46&lt;/p&gt;
&lt;p&gt;47&lt;/p&gt;
&lt;p&gt;48&lt;/p&gt;
&lt;p&gt;49&lt;/p&gt;
&lt;p&gt;50&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;19&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;37&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over frames from the video file stream&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# grab the frame from the threaded video stream&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# convert the input frame from BGR to RGB then resize it to have&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# a width of 750px (to speedup processing)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;COLOR_BGR2RGB&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;imutils&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;750&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# detect the (x, y)-coordinates of the bounding boxes&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# corresponding to each face in the input frame, then compute&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# the facial embeddings for each face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;face_locations&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;detection_method&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;face_encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Our loop begins on &lt;strong&gt;Line 34&lt;/strong&gt; and the first step we take is to grab a &lt;span id=&quot;crayon-5b28b0539704c968129594&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  from the video stream (&lt;strong&gt;Line 36&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;The remaining &lt;strong&gt;Lines 40-50&lt;/strong&gt; in the above code block are nearly identical to the lines in the previous script with the exception being that this is a video frame and not a static image. Essentially we read the &lt;span id=&quot;crayon-5b28b05397050405537988&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; , preprocess, and then detect face bounding &lt;span id=&quot;crayon-5b28b05397054321299330&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  + calculate &lt;span id=&quot;crayon-5b28b05397057226949135&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  for each bounding box.&lt;/p&gt;
&lt;p&gt;Next, let’s loop over the facial &lt;span id=&quot;crayon-5b28b0539705b578923268&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  associated with the faces we have just found:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b0539705f873566608&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;14&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# loop over the facial embeddings
        for encoding in encodings:
                # attempt to match each face in the input image to our known
                # encodings
                matches = face_recognition.compare_faces(data[&quot;encodings&quot;],
                        encoding)
                name = &quot;Unknown&quot;

                # check to see if we have found a match
                if True in matches:
                        # find the indexes of all matched faces then initialize a
                        # dictionary to count the total number of times each face
                        # was matched
                        matchedIdxs = [i for (i, b) in enumerate(matches) if b]
                        counts = {}

                        # loop over the matched indexes and maintain a count for
                        # each recognized face face
                        for i in matchedIdxs:
                                name = data[&quot;names&quot;][i]
                                counts[name] = counts.get(name, 0) + 1

                        # determine the recognized face with the largest number
                        # of votes (note: in the event of an unlikely tie Python
                        # will select first entry in the dictionary)
                        name = max(counts, key=counts.get)
                
                # update the list of names
                names.append(name)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;5.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;11&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;52&lt;/p&gt;
&lt;p&gt;53&lt;/p&gt;
&lt;p&gt;54&lt;/p&gt;
&lt;p&gt;55&lt;/p&gt;
&lt;p&gt;56&lt;/p&gt;
&lt;p&gt;57&lt;/p&gt;
&lt;p&gt;58&lt;/p&gt;
&lt;p&gt;59&lt;/p&gt;
&lt;p&gt;60&lt;/p&gt;
&lt;p&gt;61&lt;/p&gt;
&lt;p&gt;62&lt;/p&gt;
&lt;p&gt;63&lt;/p&gt;
&lt;p&gt;64&lt;/p&gt;
&lt;p&gt;65&lt;/p&gt;
&lt;p&gt;66&lt;/p&gt;
&lt;p&gt;67&lt;/p&gt;
&lt;p&gt;68&lt;/p&gt;
&lt;p&gt;69&lt;/p&gt;
&lt;p&gt;70&lt;/p&gt;
&lt;p&gt;71&lt;/p&gt;
&lt;p&gt;72&lt;/p&gt;
&lt;p&gt;73&lt;/p&gt;
&lt;p&gt;74&lt;/p&gt;
&lt;p&gt;75&lt;/p&gt;
&lt;p&gt;76&lt;/p&gt;
&lt;p&gt;77&lt;/p&gt;
&lt;p&gt;78&lt;/p&gt;
&lt;p&gt;79&lt;/p&gt;
&lt;p&gt;80&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;21&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;41&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the facial embeddings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# attempt to match each face in the input image to our known&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# encodings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;face_recognition&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;compare_faces&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;encodings&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# check to see if we have found a match&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# find the indexes of all matched faces then initialize a&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# dictionary to count the total number of times each face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# was matched&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;matchedIdxs&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;}&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the matched indexes and maintain a count for&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# each recognized face face&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;matchedIdxs&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;names&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# determine the recognized face with the largest number&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# of votes (note: in the event of an unlikely tie Python&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# will select first entry in the dictionary)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# update the list of names&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this code block, we loop over each of the &lt;span id=&quot;crayon-5b28b05397063479932751&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-k&quot;&gt;encodings&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  and attempt to match the face. If there are matches found, we count the votes for each name in the dataset. We then extract the highest vote count and that is the name associated with the face. These lines are &lt;em&gt;identical&lt;/em&gt; to the previous script we reviewed, so let’s move on.&lt;/p&gt;
&lt;p&gt;In this next block, we loop over the recognized faces and proceed to draw a box around the face and the display name of the person above the face:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05397067817956678&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;32&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# loop over the recognized faces
        for ((top, right, bottom, left), name) in zip(boxes, names):
                # rescale the face coordinates
                top = int(top * r)
                right = int(right * r)
                bottom = int(bottom * r)
                left = int(left * r)

                # draw the predicted face name on the image
                cv2.rectangle(frame, (left, top), (right, bottom),
                        (0, 255, 0), 2)
                y = top - 15 if top - 15 &amp;gt; 15 else top + 15
                cv2.putText(frame, name, (left, y), cv2.FONT_HERSHEY_SIMPLEX,
                        0.75, (0, 255, 0), 2)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;14.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;29&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;82&lt;/p&gt;
&lt;p&gt;83&lt;/p&gt;
&lt;p&gt;84&lt;/p&gt;
&lt;p&gt;85&lt;/p&gt;
&lt;p&gt;86&lt;/p&gt;
&lt;p&gt;87&lt;/p&gt;
&lt;p&gt;88&lt;/p&gt;
&lt;p&gt;89&lt;/p&gt;
&lt;p&gt;90&lt;/p&gt;
&lt;p&gt;91&lt;/p&gt;
&lt;p&gt;92&lt;/p&gt;
&lt;p&gt;93&lt;/p&gt;
&lt;p&gt;94&lt;/p&gt;
&lt;p&gt;95&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;17.5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# loop over the recognized faces&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# rescale the face coordinates&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# draw the predicted face name on the image&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;15&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;putText&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Those lines are identical too, so let’s focus on the video related code.&lt;/p&gt;
&lt;p&gt;Optionally, we’re going to write the frame to disk, so let’s see how &lt;a href=&quot;https://www.pyimagesearch.com/2016/02/22/writing-to-video-with-opencv/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;writing video to disk with OpenCV&lt;/strong&gt;&lt;/a&gt; works:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b0539706c223200372&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;16&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# if the video writer is None *AND* we are supposed to write
        # the output video to disk initialize the writer
        if writer is None and args[&quot;output&quot;] is not None:
                fourcc = cv2.VideoWriter_fourcc(*&quot;MJPG&quot;)
                writer = cv2.VideoWriter(args[&quot;output&quot;], fourcc, 20,
                        (frame.shape[1], frame.shape[0]), True)

        # if the writer is not None, write the frame with recognized
        # faces t odisk
        if writer is not None:
                writer.write(frame)
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;6.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;13&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;97&lt;/p&gt;
&lt;p&gt;98&lt;/p&gt;
&lt;p&gt;99&lt;/p&gt;
&lt;p&gt;100&lt;/p&gt;
&lt;p&gt;101&lt;/p&gt;
&lt;p&gt;102&lt;/p&gt;
&lt;p&gt;103&lt;/p&gt;
&lt;p&gt;104&lt;/p&gt;
&lt;p&gt;105&lt;/p&gt;
&lt;p&gt;106&lt;/p&gt;
&lt;p&gt;107&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;25&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# if the video writer is None *AND* we are supposed to write&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# the output video to disk initialize the writer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;output&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;fourcc&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;VideoWriter_fourcc&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;MJPG&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;VideoWriter&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;output&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;fourcc&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# if the writer is not None, write the frame with recognized&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# faces t odisk&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Assuming we have an output file path provided in the command line arguments and we haven’t already initialized a video &lt;span id=&quot;crayon-5b28b05397070392110799&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  (&lt;strong&gt;Line 99&lt;/strong&gt;), let’s go ahead and initialize it.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;Line 100&lt;/strong&gt;, we initialize the &lt;span id=&quot;crayon-5b28b05397074988982363&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;VideoWriter_fourcc&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; . &lt;a href=&quot;https://www.fourcc.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FourCC&lt;/a&gt; is a 4-character code and in our case we’re going to use the “MJPG” 4-character code.&lt;/p&gt;
&lt;p&gt;From there, we’ll pass that object into the &lt;span id=&quot;crayon-5b28b05397078308014971&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;VideoWriter&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  along with our output file path, frames per second target, and frame dimensions (&lt;strong&gt;Lines 101 and 102&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Finally, if the &lt;span id=&quot;crayon-5b28b0539707c784732762&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  exists, we can go ahead and write a frame to disk (&lt;strong&gt;Lines 106-107&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Let’s handle whether or not we should display the face recognition video frames on the screen:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b0539707f166531493&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;11&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# check to see if we are supposed to display the output frame to
        # the screen
        if args[&quot;display&quot;] &amp;gt; 0:
                cv2.imshow(&quot;Frame&quot;, frame)
                key = cv2.waitKey(1) &amp;amp; 0xFF

                # if the `q` key was pressed, break from the loop
                if key == ord(&quot;q&quot;):
                        break
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;4&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;8&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;109&lt;/p&gt;
&lt;p&gt;110&lt;/p&gt;
&lt;p&gt;111&lt;/p&gt;
&lt;p&gt;112&lt;/p&gt;
&lt;p&gt;113&lt;/p&gt;
&lt;p&gt;114&lt;/p&gt;
&lt;p&gt;115&lt;/p&gt;
&lt;p&gt;116&lt;/p&gt;
&lt;p&gt;117&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# check to see if we are supposed to display the output frame to&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# the screen&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;Frame&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;waitKey&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0xFF&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# if the `q` key was pressed, break from the loop&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;crayon-k&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;q&quot;&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;break&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If our display command line argument is set, we go ahead and display the frame (&lt;strong&gt;Line 112&lt;/strong&gt;) and check if the quit key ( &lt;span id=&quot;crayon-5b28b05397083356535761&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-s&quot;&gt;&quot;q&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ) has been pressed (&lt;strong&gt;Lines 113-116&lt;/strong&gt;), at which point we’d &lt;span id=&quot;crayon-5b28b05397094654816562&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-st&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  out of the loop (&lt;strong&gt;Line 117&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Lastly, let’s perform our housekeeping duties:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b05397099449279114&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
# do a bit of cleanup
cv2.destroyAllWindows()
vs.stop()

# check to see if the video writer point needs to be released
if writer is not None:
        writer.release()
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;2.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;5&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;
&lt;div class=&quot;crayon-nums-content&quot;&gt;
&lt;p&gt;119&lt;/p&gt;
&lt;p&gt;120&lt;/p&gt;
&lt;p&gt;121&lt;/p&gt;
&lt;p&gt;122&lt;/p&gt;
&lt;p&gt;123&lt;/p&gt;
&lt;p&gt;124&lt;/p&gt;
&lt;p&gt;125&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# do a bit of cleanup&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;destroyAllWindows&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;crayon-c&quot;&gt;# check to see if the video writer point needs to be released&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-st&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-v&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In &lt;strong&gt;Lines 120-125&lt;/strong&gt;, we clean up and release the display, video stream, and video writer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Are you ready to see the script in action?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To demonstrate &lt;strong&gt;real-time face recognition with OpenCV and Python&lt;/strong&gt; in action, open up a terminal and execute the following command:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b0539709d378943838&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ python recognize_faces_video.py --encodings encodings.pickle \
        --output output/webcam_face_recognition_output.avi --display 1
[INFO] loading encodings...
[INFO] starting video stream...
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;webcam_face_recognition_output&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.avi&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;starting&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Below you can find an output example video that I recorded demonstrating the face recognition system in action:&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;500&quot; height=&quot;281&quot; src=&quot;https://www.youtube.com/embed/dCKl4oGP69s?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;h4&gt;Face recognition in video files&lt;/h4&gt;
&lt;p&gt;As I mentioned in our &lt;em&gt;“Face recognition project structure”&lt;/em&gt; section, there’s an additional script included in the &lt;em&gt;&lt;strong&gt;“Downloads”&lt;/strong&gt;&lt;/em&gt; for this blog post — &lt;span id=&quot;crayon-5b28b053970a1741137683&quot; class=&quot;crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco&quot;&gt;&lt;span class=&quot;crayon-pre crayon-code&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video_file&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; .&lt;/p&gt;
&lt;p&gt;This file is essentially the same as the one we just reviewed for the webcam except it will take an input video file and generate an output video file if you’d like.&lt;/p&gt;
&lt;p&gt;I applied our face recognition code to the popular “lunch scene” from the original &lt;em&gt;Jurassic Park&lt;/em&gt; movie where the cast is sitting around a table sharing their concerns with the park:&lt;/p&gt;
&lt;div id=&quot;crayon-5b28b053970a5450361289&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;&quot; readonly=&quot;readonly&quot;&gt;
$ python recognize_faces_video_file.py --encodings encodings.pickle \
        --input videos/lunch_scene.mp4 --output output/lunch_scene_output.avi \
        --display 0
&lt;/textarea&gt;&lt;/p&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot; readability=&quot;1.5&quot;&gt;&lt;tr class=&quot;crayon-row&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot; readability=&quot;5&quot;&gt;
&lt;div class=&quot;crayon-pre&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span class=&quot;crayon-sy&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;recognize_faces_video_file&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.py&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;encodings&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;encodings&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.pickle&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;videos&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;lunch_scene&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.mp4&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;lunch_scene_output&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;.avi&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;crayon-o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here’s the result:&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;500&quot; height=&quot;281&quot; src=&quot;https://www.youtube.com/embed/A5wqscP8OIE?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;Recall that our model was trained on four members of the original cast: Alan Grant, Ellie Sattler, Ian Malcolm, and John Hammond. The model was &lt;strong&gt;not&lt;/strong&gt; trained on Donald Gennaro (the lawyer) which is why his face is labeled as “Unknown”. This behavior was by design (not an accident) to show that our face recognition system can recognize faces it was trained on while leaving faces it cannot recognize as “Unknown”.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And in the following video I have put together a “highlight reel” of &lt;em&gt;Jurassic Park&lt;/em&gt; and &lt;em&gt;Jurassic World&lt;/em&gt; clips, mainly from the trailers:&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;500&quot; height=&quot;281&quot; src=&quot;https://www.youtube.com/embed/ZweuQ_qcfrw?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;As we can see, we can see, our face recognition and OpenCV code works quite well!&lt;/p&gt;
&lt;h3&gt;Can I use the this face recognizer code on the Raspberry Pi?&lt;/h3&gt;
&lt;p&gt;Kinda, sorta. There are a few limitations though:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The Raspberry Pi does not have enough memory to utilize the more accurate CNN-based face detector…&lt;/li&gt;
&lt;li&gt;&lt;em&gt;…so we are limited to HOG instead&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Except that HOG is far too slow on the Pi for real-time face detection…&lt;/li&gt;
&lt;li&gt;&lt;em&gt;…so we need to utilize OpenCV’s Haar cascades&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;And once you get it running you can expect only 1-2 FPS, and even reaching that level of FPS takes a few tricks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The good news is that I’ll be back next week to discuss how to run our face recognizer on the Raspberry Pi, so stay tuned!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;In this tutorial, you learned how to perform face recognition with OpenCV, Python, and deep learning.&lt;/p&gt;
&lt;p&gt;Additionally, we made use of Davis King’s &lt;a href=&quot;http://dlib.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dlib library&lt;/a&gt; and Adam Geitgey’s &lt;a href=&quot;https://github.com/ageitgey/face_recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;face_recognition module&lt;/a&gt; which wraps around dlib’s deep metric learning, making facial recognition easier to accomplish.&lt;/p&gt;
&lt;p&gt;As we found out, our face recognition implementation is both:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Accurate&lt;/li&gt;
&lt;li&gt;Capable of being executed in real-time with a GPU&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I hope you enjoyed today’s blog post on face recognition!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To download the source code to this post, and be notified when future tutorials are published here on PyImageSearch, &lt;em&gt;just enter your email address in the form below!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;post_downloads&quot;&gt;Downloads:&lt;/h2&gt;

</description>
<pubDate>Mon, 18 Jun 2018 14:13:32 +0000</pubDate>
<dc:creator>zionsrogue</dc:creator>
<og:type>article</og:type>
<og:title>Face recognition with OpenCV, Python, and deep learning - PyImageSearch</og:title>
<og:description>Learn how to perform face recognition using OpenCV, Python, and dlib by applying deep learning for highly accurate facial recognition.</og:description>
<og:url>https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/</og:url>
<og:image>https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/face-recognition-opencv/face_recognition_opencv_animation_01.gif</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/</dc:identifier>
</item>
<item>
<title>A Visual Introduction to Machine Learning – Part II</title>
<link>http://www.r2d3.us/visual-intro-to-machine-learning-part-2/</link>
<guid isPermaLink="true" >http://www.r2d3.us/visual-intro-to-machine-learning-part-2/</guid>
<description>&lt;span id=&quot;sub-title&quot;&gt;A visual introduction&lt;br/&gt;to machine learning—Part II&lt;/span&gt;&lt;p&gt;The goal of modeling is to approximate real-life situations by identifying and encoding patterns in data. Models make mistakes if those patterns are overly simple or overly complex.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&quot; target=&quot;_blank&quot;&gt;Part 1&lt;/a&gt;, we created a model that distinguishes homes in San Francisco from those in New York. Now, we'll talk about tuning and the Bias-Variance tradeoff.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 13:22:07 +0000</pubDate>
<dc:creator>rrherr</dc:creator>
<og:url>http://www.r2d3.us/visual-intro-to-machine-learning-part-2/</og:url>
<og:type>article</og:type>
<og:title>A visual introduction to machine learning, Part II</og:title>
<og:description>Learn about bias and variance in our second animated data visualization.</og:description>
<og:image>http://www.r2d3.us/static/pages/decision-trees-part2-v2/part2-preview-en.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.r2d3.us/visual-intro-to-machine-learning-part-2/</dc:identifier>
</item>
</channel>
</rss>