<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>How to hack a turned-off computer, or running unsigned code in Intel ME [pdf]</title>
<link>https://www.blackhat.com/docs/eu-17/materials/eu-17-Goryachy-How-To-Hack-A-Turned-Off-Computer-Or-Running-Unsigned-Code-In-Intel-Management-Engine-wp.pdf</link>
<guid isPermaLink="true" >https://www.blackhat.com/docs/eu-17/materials/eu-17-Goryachy-How-To-Hack-A-Turned-Off-Computer-Or-Running-Unsigned-Code-In-Intel-Management-Engine-wp.pdf</guid>
<description>&lt;a href=&quot;https://www.blackhat.com/docs/eu-17/materials/eu-17-Goryachy-How-To-Hack-A-Turned-Off-Computer-Or-Running-Unsigned-Code-In-Intel-Management-Engine-wp.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Wed, 27 Dec 2017 16:08:44 +0000</pubDate>
<dc:creator>danjoc</dc:creator>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://www.blackhat.com/docs/eu-17/materials/eu-17-Goryachy-How-To-Hack-A-Turned-Off-Computer-Or-Running-Unsigned-Code-In-Intel-Management-Engine-wp.pdf</dc:identifier>
</item>
<item>
<title>Airbus ready to axe A380 if fails to win Emirates deal</title>
<link>https://www.reuters.com/article/us-airbus-a380/airbus-ready-to-axe-a380-if-fails-to-win-emirates-deal-sources-idUSKBN1EL11L</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-airbus-a380/airbus-ready-to-axe-a380-if-fails-to-win-emirates-deal-sources-idUSKBN1EL11L</guid>
<description>&lt;p&gt;PARIS (Reuters) - Airbus is drawing up contingency plans to phase out production of the world’s largest jetliner, the A380 superjumbo, if it fails to win a key order from Dubai’s Emirates, three people familiar with the matter said.&lt;/p&gt;
&lt;p&gt;The moment of truth for the slow-selling airliner looms after just 10 years in service and leaves one of Europe’s most visible international symbols hanging by a thread, despite a major airline investment in new cabins unveiled this month.&lt;/p&gt;
&lt;p&gt;“If there is no Emirates deal, Airbus will start the process of ending A380 production,” a person briefed on the plans said. A supplier added such a move was logical due to weak demand.&lt;/p&gt;
&lt;p&gt;Airbus and Emirates declined to comment. Airbus also declined to say how many people work on the project.&lt;/p&gt;
&lt;p&gt;Any shutdown is expected to be gradual, allowing Airbus to produce orders it has in hand, mainly from Emirates.&lt;/p&gt;
&lt;p&gt;It has enough orders to last until early next decade at current production rates, according to a Reuters analysis.&lt;/p&gt;
&lt;p&gt;The A380 was developed at a cost of 11 billion euros to carry some 500 people and challenge the reign of the Boeing 747.&lt;/p&gt;
&lt;p&gt;But demand for these four-engined goliaths has fallen as airlines choose smaller twin-engined models, which are easier to fill and cheaper to maintain.&lt;/p&gt;
&lt;p&gt;Emirates, however, has been a strong believer in the A380 and is easily the largest customer with total orders of 142 aircraft, of which it has taken just over 100.&lt;/p&gt;
&lt;p&gt;Talks between Airbus and Emirates over a new order for 36 superjumbos worth $16 billion broke down at the Dubai Airshow last month. Negotiations are said to have resumed, but there are no visible signs that a deal is imminent.&lt;/p&gt;
&lt;p&gt;Although airlines such as British Airways have expressed interest in the A380, Airbus is reluctant to keep factories open without the certainty that a bulk Emirates order would provide.&lt;/p&gt;
&lt;p&gt;Emirates, for its part, wants a guarantee that Airbus will keep production going for a decade to protect its investment.&lt;/p&gt;
&lt;div class=&quot;Image_container_1tVQo&quot; tabindex=&quot;-1&quot;&gt;

&lt;span class=&quot;Image_caption_KoNH1&quot;&gt;FILE PHOTO: Visitors walk down an Airbus A380, showing a picture of United Arab Emirates' Former President Sheikh Zayed bin Sultan al-Nahayan, during the Dubai Airshow in Dubai, United Arab Emirates November 13, 2017. REUTERS/Satish Kumar/File Photo&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;A decision to cancel would mark a rupture between Airbus and one of its largest customers and tie Emirates’ future growth to recent Boeing orders. European sources say that reflects growing American influence in the Gulf under President Donald Trump, but U.S. and UAE industry sources deny politics are involved.&lt;/p&gt;
&lt;p&gt;There are also potential hurdles to a deal over engine choices and after-sales support.&lt;/p&gt;
&lt;h3&gt;SAFETY NET&lt;/h3&gt;
&lt;p&gt;Yet if talks succeed, European sources say there is a glimmer of hope for the double-deck jet, which Airbus says will become more popular with airlines due to congestion.&lt;/p&gt;
&lt;div class=&quot;Image_container_1tVQo&quot; tabindex=&quot;-1&quot;&gt;

&lt;span class=&quot;Image_caption_KoNH1&quot;&gt;FILE PHOTO: An Airbus logo is pictured during the delivery of the new Airbus A380 aircraft to Singapore Airlines at the French headquarters of aircraft company Airbus in Colomiers near Toulouse, France, December 13, 2017. REUTERS/Regis Duvignau&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Singapore Airlines, which first introduced the A380 to passengers in 2007, showcased an $850 million cabin re-design this month and expressed confidence in the model’s future.&lt;/p&gt;
&lt;p&gt;Airbus hopes to use an Emirates order to stabilise output and establish a safety net from which to attract A380 sales to other carriers, but has ruled out trying to do this the other way round, industry sources said.&lt;/p&gt;
&lt;p&gt;As of the end of November, Airbus had won orders for 317 A380s and delivered 221, leaving 96 unfilled orders.&lt;/p&gt;
&lt;p&gt;But based on airlines’ intentions or finances, 47 of those are unlikely to be delivered, according to industry sources, which halves the number of jets in play.&lt;/p&gt;
&lt;p&gt;Airbus needs to sell at least another 30 to keep lines open for 10 years and possibly more to justify the price concessions likely to be demanded by any new buyers.&lt;/p&gt;
&lt;p&gt;To bridge the gap, Airbus plans to cut output to six a year beyond 2019, from 12 in 2018 and 8 in 2019, even if it means producing at a loss, Reuters recently reported.&lt;/p&gt;
&lt;p&gt;Chief Operating Officer Fabrice Bregier confirmed this month Airbus was looking at cutting output to 6-7 a year.&lt;/p&gt;
&lt;p&gt;If Airbus does decide to wind down production, some believe Emirates will ask Airbus to deliver the remaining 41 it has on order and then keep most A380s in service as long as possible.&lt;/p&gt;
&lt;p&gt;Even so, some A380s are likely to be heading for scrap.&lt;/p&gt;
&lt;div class=&quot;Attribution_attribution_o4ojT&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content_27_rw&quot;&gt;Reporting by Tim Hepher; Editing by Mark Potter&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer_1gqgJ&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle_7sKLj&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 27 Dec 2017 14:18:50 +0000</pubDate>
<dc:creator>tiff</dc:creator>
<og:title>Airbus ready to phase out A380 if fails to win Emirates deal: sources</og:title>
<og:url>https://www.reuters.com/article/us-airbus-a380/airbus-ready-to-axe-a380-if-fails-to-win-emirates-deal-sources-idUSKBN1EL11L</og:url>
<og:type>article</og:type>
<og:description>Airbus is drawing up contingency plans to phase out production of the world's largest jetliner, the A380 superjumbo, if it fails to win a key order from Dubai's Emirates, three people familiar with the matter said.</og:description>
<og:image>https://s4.reutersmedia.net/resources/r/?m=02&amp;d=20171227&amp;t=2&amp;i=1217514537&amp;w=1200&amp;r=LYNXMPEDBQ0RT</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-airbus-a380/airbus-ready-to-axe-a380-if-fails-to-win-emirates-deal-sources-idUSKBN1EL11L</dc:identifier>
</item>
<item>
<title>A History of the Silmarils in the Fifth Age</title>
<link>http://slatestarcodex.com/2017/12/26/a-history-of-the-silmarils-in-the-fifth-age/</link>
<guid isPermaLink="true" >http://slatestarcodex.com/2017/12/26/a-history-of-the-silmarils-in-the-fifth-age/</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;em&gt;[Spoiler warning for &lt;a href=&quot;https://www.amazon.com/Silmarillion-J-R-R-Tolkien/dp/0618135049/ref=as_li_ss_tl?_encoding=UTF8&amp;amp;qid=1514328533&amp;amp;sr=8-1&amp;amp;linkCode=ll1&amp;amp;tag=slatestarcode-20&amp;amp;linkId=5ec80baf6613d15d413cb1b13f29ecb8&quot;&gt;The Silmarillion&lt;/a&gt;]&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Silmarillion&lt;/em&gt; describes the fate of the three Silmarils. Earendil kept one, and traveled with it through the sky, where it became the planet Venus. Maedhros stole another, but regretted his deed and jumped into a fiery chasm. And Maglor took the last one, but threw it into the sea in despair.&lt;/p&gt;
&lt;p&gt;Well, Venus is still around. But what happened to the latter two? Surely over all the intervening millennia, with so many people wanting a Silmaril, they haven’t just hung around in the earth and ocean?&lt;/p&gt;
&lt;p&gt;After some research, I’ve developed a couple of promising leads for the location of the Silmarils in the Fifth Age.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;II.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I &lt;a href=&quot;https://slatestarscratchpad.tumblr.com/post/152824927151/slatestarscratchpad-slatestarscratchpad&quot;&gt;previously sketched out&lt;/a&gt; the argument that Maglor’s Silmaril probably belongs to a Los Angeles crime lord.&lt;/p&gt;
&lt;p&gt;The movie &lt;em&gt;Pulp Fiction&lt;/em&gt; centers around a mysterious briefcase. We’re never told exactly what’s inside, but we get some clues:&lt;/p&gt;
&lt;p&gt;1. It’s described as “so beautiful” and captivates anyone who looks at it&lt;br/&gt;2. It shines with an inner light&lt;br/&gt;3. When Jules and Vincent are trying to get it, all the shots aimed at them miss, implying they’re miraculously immune to bullets, implying that they’re on some kind of divine quest.&lt;br/&gt;4. Marsellus Wallace really wants to get it, and keeps killing anyone else who has it&lt;/p&gt;
&lt;p&gt;So far this is only suggestive, but there’s more. While searching for the briefcase, Jules (!) keeps quoting a verse:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;The path of the righteous man is beset on all sides by the inequities of the selfish and the tyranny of evil men. Blessed is he who, in the name of charity and good will, shepherds the weak through the valley of the darkness, for he is truly his brother’s keeper and the finder of lost children. And I will strike down upon thee with great vengeance and furious anger those who would attempt to poison and destroy my brothers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They describe this as Ezekiel 25:17, but &lt;a href=&quot;http://truthbygrace.org/pulp-fiction-and-ezekiel-2517/&quot;&gt;it isn’t&lt;/a&gt;. In fact, it isn’t anywhere in the Bible, and it doesn’t match any Biblical story. This isn’t from the Old Testament at all. It’s a description of the life of Maglor in the &lt;em&gt;Silmarillion&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;During the First Age, Maglor ruled “Maglor’s Gap”, a valley which connected the lands of the Elves and the lands of Morgoth. Maglor held Maglor’s Gap for 450 years until Morgoth finally conquered the valley; Maglor led the retreat of his people, thus “shepherding the weak through the valley of darkness”.&lt;/p&gt;
&lt;p&gt;He fled to the fortress of his brother, Maedhros, in Himling, where he helped defend Maedhros’ lands and people in battle – making him “his brother’s keeper”.&lt;/p&gt;
&lt;p&gt;In the ensuing battles, he captured the young Elrond and Elros, who had been orphaned after their parents fled across the sea, and adopted them – making him “the finder of lost children”.&lt;/p&gt;
&lt;p&gt;As for “striking down with great vengeance and furious anger those who would attempt to poison and destroy my brothers”, that’s about as Noldor as it gets.&lt;/p&gt;
&lt;p&gt;What is going on here, and why do we keep finding these connections to Maglor?&lt;/p&gt;
&lt;p&gt;Maglor is unique as possibly the only Noldo still remaining in the world. According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Maglor&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;Maglor, along with Galadriel and Gil-galad, was the greatest surviving Noldo at the beginning of the Second Age. There is speculation that he remained even after the Third Age in Middle-earth, forbidden forever from returning to Valinor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If he were still alive in our times, he would remain bound by his oath and be hunting the Silmaril. So: could Marsellus Wallace, the mysterious gang boss who wants the briefcase so badly, be Maglor himself? Given that the name “Maglor” is a Sindarinization of his birth name “Makalaure”, “Marsellus” doesn’t even sound like much of a pseudonym.&lt;/p&gt;
&lt;p&gt;The main argument against this point is that Tolkien’s elves are usually depicted as fair-skinned and lithe, but Marsellus Wallace is shown in the movie as a big black guy. Does this disprove the theory?&lt;/p&gt;
&lt;p&gt;It would, &lt;em&gt;unless&lt;/em&gt; Marsellus were under some kind of magical glamor to hide his true appearance. And there’s actually some evidence for this.&lt;/p&gt;
&lt;p&gt;There’s one character in &lt;em&gt;Pulp Fiction&lt;/em&gt; who is clearly able to cast illusion-related magic: Mia Wallace. In the parking lot of the restaurant, she tells Vinnie “Don’t be a…”. Then she traces a square in the air with her finger, and the square appears in glittering light. Marsellus Wallace is married to someone who can cast visual illusions.&lt;/p&gt;
&lt;p&gt;But why should we believe Marsellus’ appearance is itself such an illusion? Well, in the scene with Jules and Brett, Jules puts a gun to Brett’s head and asks him what Marsellus looks like. Brett says he looks like a tall bald black guy, which seems to satisfy Jules.&lt;/p&gt;
&lt;p&gt;The hit men try to play this off as some kind of intimidation thing, but they’re just going to shoot Brett anyway – there’s no need to intimidate him. It would only make sense if they’re actually checking how Marsellus appears to Brett – ie whether a certain illusion he’s projecting is working. When they follow up with “Does he look like a bitch?“, this is their foul-mouthed way of asking whether he looks androgynous. When Brett confirms that he looks masculine, this seems to satisfy the hit men, who then go ahead and shoot him. Unclear why they’re expecting the illusion to fail in Brett’s case, but it seems like if it has they’ll need to interrogate him further and maybe track down anybody else who might have learned too much.&lt;/p&gt;
&lt;p&gt;How is Mia Wallace able to cast these illusions?&lt;/p&gt;
&lt;p&gt;I would guess that “Mia” is actually Maia, ie one of the Maiar who is sent from Valinor to guide Elves and Men with their good counsel and magic powers. There’s a previous example of a female Maia marrying an elflord to guide him: Melian and Thingol. Mia is following in this tradition, and just as Melian granted Thingol’s kingdom invulnerability to attack, so Mia grants Maglor/Marsellus the ability to look like a big muscular black guy.&lt;/p&gt;
&lt;p&gt;We actually have further proof of this in the movie. Mia overdoses on heroin and goes unconscious. It looks like she goes a really long time without breathing. You get anoxic brain injury in like four or five minutes; Mia was out way longer than that. But once they give her adrenaline, she instantly and completely recuperates in a medically implausible way. Suffice it to say that she’s proven beyond a shadow of a doubt that she doesn’t have a human circulatory system, and given us at least strong evidence that she is literally immortal.&lt;/p&gt;
&lt;p&gt;I would guess that Maglor survived, found his Silmaril, lost his Silmaril again, and that &lt;em&gt;Pulp Fiction&lt;/em&gt; is an account of him getting it back. “Quentin Tarantino” is probably a made-up pen name for a group of elvish historians – the name “Quentin” obviously deriving from “Quendi”, the elvish word for elves. “Tarantino” is more obscure, but it may be a reference to &lt;a href=&quot;http://tolkiengateway.net/wiki/Tar-Atanamir&quot;&gt;Tar-Atanamir&lt;/a&gt;, the Numenorean king who refused to die when his time came – something which must carry a lot of metaphorical associations for any elves remaining on Earth.&lt;/p&gt;
&lt;p&gt;If all of this is true, Maglor’s Silmaril probably remains with Maglor in his Los Angeles mansion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;III.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The fate of Maedhros’ Silmaril is less clear, but one promising possibility is linked with the fate of Utumno.&lt;/p&gt;
&lt;p&gt;Utumno was the fortress of the dark god Melkor during the First Age. It was built in the far north of Middle-Earth, “upon the borders of the regions of everlasting cold”. &lt;a href=&quot;http://tolkiengateway.net/wiki/Dor_Daidelos&quot;&gt;Tolkien Gateway writes&lt;/a&gt; that “the frigid temperatures of the northern regions were thought to originate from the evil of [Melkor’s] realm”.&lt;/p&gt;
&lt;p&gt;What was Utumno like? Like most of Tolkien’s villains, Melkor was at least partly a technologist; his realm was one of forges and smithies ceaselessly building weapons for his war against the gods. &lt;a href=&quot;http://www.thelandofshadow.com/utumno/&quot;&gt;This page&lt;/a&gt; describes it as “a fortress for war, with many armories, forges, dungeons and breeding pits.” Some of the descriptions sound like it was emitting pollution, destroying the land around it: “The lands of the far north were all made desolate in those days; for there Utumno was delved exceeding deep, and its pits were filled with fires and with great hosts of the servants of Melkor.”&lt;/p&gt;
&lt;p&gt;Who manned these factories? Enslaved elves. As per the book, “All those of the Quendi who came into the hands of Melkor, ere Utumno was broken, were put there in prison, and by slow arts of cruelty were corrupted and enslaved”.&lt;/p&gt;
&lt;p&gt;Eventually the gods decided enough was enough and marched against Utumno with a mighty host led by Tulkas, God of War. He wrestled with Melkor, defeated him, and bound him with a mighty chain.&lt;/p&gt;
&lt;p&gt;What happened to Utumno after this? The &lt;em&gt;Silmarillion&lt;/em&gt; is vague, but in retrospect it’s super obvious. &lt;em&gt;What happened to the magical factory at the North Pole run by elves?&lt;/em&gt; Everyone knows the answer to that one!&lt;/p&gt;
&lt;p&gt;Presumably Tulkas and the other gods, after defeating Melkor, decided it was poetically appropriate to turn Utumno from a place of darkness to a wonderland of holiday cheer. The elves agreed to stay on to help, and they repurposed Melkor’s forges to create toys for children around the world.&lt;/p&gt;
&lt;p&gt;“Santa Claus” supposedly derives from St. Nicholas, on the grounds that “Santa” means “saint” and “Claus” is short for “Nicholas”. But “Santa” means a female saint; a male saint is “San”. Santa is male, so a more reasonable derivation would be “San Tulkas”. Once a year, Tulkas goes forth and distributes the toys created by the elves of Utumno.&lt;/p&gt;
&lt;p&gt;(remember, the &lt;em&gt;Silmarillion&lt;/em&gt; describes Tulkas as a huge bearded man who “laughs ever, in sport or in war, and even in the face of Melkor he laughed in battles before the Elves were born”. And remember, of his wife Nessa, it says “Deer she loves, and they follow her train whenever she goes in the wild”. Having deer follow your family around everywhere seems sounds pretty annoying, but at least it gives you a ready-made supply of draft animals.)&lt;/p&gt;
&lt;p&gt;Since we never see Santa’s workshop, it must be hidden from the world in the same manner as the Undying Lands. How does Tulkas cross back into the mortal world to deliver gifts?&lt;/p&gt;
&lt;p&gt;The only successful example of such a journey we have from Tolkien is that of Earendil, who travels from Middle-Earth to the Undying Lands using a Silmaril worn on his brow. Later, even after the two worlds are separated entirely, he is able use the same Silmaril to voyage through the sky in his flying boat. “The wise have said that it was by reason of the power of that holy jewel that they came in time to waters that no vessels save those of the Teleri had known”. So presumably any living being with a Silmaril upon their head can fly through the gulfs between the worlds safely.&lt;/p&gt;
&lt;p&gt;Tulkas is a god and should have no trouble finding the only unclaimed Silmaril, the one Maedhros dropped into a chasm in the earth. His main issue would be preventing the surviving Noldor from learning what he has and invoking their vendetta. He would have to disguise it as something else, something so ridiculous that the stick-up-their-ass Noldor would never think to identify it with their holy jewels.&lt;/p&gt;
&lt;p&gt;So…&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Rudolph the Red-Nosed Reindeer&lt;br/&gt;Had a very shiny nose&lt;br/&gt;And if you ever saw it&lt;br/&gt;You would even say it glows…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 27 Dec 2017 13:30:45 +0000</pubDate>
<dc:creator>mpweiher</dc:creator>
<og:type>article</og:type>
<og:title>A History Of The Silmarils In The Fifth Age</og:title>
<og:url>http://slatestarcodex.com/2017/12/26/a-history-of-the-silmarils-in-the-fifth-age/</og:url>
<og:description>[Spoiler warning for The Silmarillion] I. The Silmarillion describes the fate of the three Silmarils. Earendil kept one, and traveled with it through the sky, where it became the planet Venus. Maed…</og:description>
<og:image>http://slatestarcodex.com/wp-content/themes/two_column_pujugama/images/codex_spotlight.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://slatestarcodex.com/2017/12/26/a-history-of-the-silmarils-in-the-fifth-age/</dc:identifier>
</item>
<item>
<title>34th Chaos Communication Congress Live Streams</title>
<link>http://streaming.media.ccc.de</link>
<guid isPermaLink="true" >http://streaming.media.ccc.de</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;http://streaming.media.ccc.de&quot;&gt;http://streaming.media.ccc.de&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16013960&quot;&gt;https://news.ycombinator.com/item?id=16013960&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 272&lt;/p&gt;&lt;p&gt;# Comments: 56&lt;/p&gt;</description>
<pubDate>Wed, 27 Dec 2017 10:25:39 +0000</pubDate>
<dc:creator>lawl</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://streaming.media.ccc.de/34c3</dc:identifier>
</item>
<item>
<title>Candy Japan 2017 Year in Review</title>
<link>https://www.candyjapan.com/behind-the-scenes/2017-year-in-review</link>
<guid isPermaLink="true" >https://www.candyjapan.com/behind-the-scenes/2017-year-in-review</guid>
<description>&lt;p&gt;Hello internets, Bemmu here.&lt;/p&gt;
&lt;p&gt;I run a site called &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;Candy Japan&lt;/a&gt;, which ships boxes of Japanese surprise candies to subscribers around the world, twice a month.&lt;/p&gt;
&lt;p&gt;Five years ago I started writing these annual review posts after being inspired by &lt;a href=&quot;http://www.kalzumeus.com/2011/12/21/bingo-card-creator-etc-year-in-review-2011/&quot;&gt;patio11's year in review posts&lt;/a&gt;. They are a great way to reflect on each year, and inspire me to improve. In this one I'll start off with some background for those who haven't been following the &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes&quot;&gt;previous ones&lt;/a&gt; and then proceed to the numbers for this year.&lt;/p&gt;
&lt;h2&gt;My background&lt;/h2&gt;
&lt;p&gt;As a computer science student in Finland I had a lot of side projects, with some of them generating some income as well. Learning Japanese has always been a major life goal for me. My minor subject was Japanese, and as part of my studies I spent 2 years as an exchange student in Tokyo. I was still eager to continue to improve, and wanted to live in Japan again.&lt;/p&gt;
&lt;p&gt;After graduating and having saved up some money, in 2011 I decided to make it happen and moved to Japan with my wife. She is from Japan, and I first met her when she was an exchange student at my university. We settled in Tokushima, which is a smallish city (by Japanese standards) in Shikoku island. The reason for picking Tokushima was the company she entered after graduating.&lt;/p&gt;
&lt;p&gt;Even though I had no job waiting for me in Tokushima, I could follow along as some online projects I had started in Finland were still generating revenue. Pretty soon however they started to dry up, so I had to come up with something new.&lt;/p&gt;
&lt;h2&gt;Starting Candy Japan&lt;/h2&gt;
&lt;p&gt;Starting to look for a new project, I recalled bouncing around some ideas with a friend while we had been on a holiday together. I had mentioned to him this website I had heard of called &lt;a href=&quot;https://en.wikipedia.org/wiki/Birchbox#History&quot;&gt;BirchBox&lt;/a&gt;, a service that sends people makeup samples on a monthly basis. I thought it was an interesting model – a subscription not for software, but for surprises.&lt;/p&gt;
&lt;p&gt;Is there anything we could send like that? Maybe introduce items from around Asia.&lt;/p&gt;
&lt;p&gt;Since we were both busy with other projects at the time, we didn't end up doing any of the ideas we had bounced around. But now that I found myself in Japan with free time to start something new, I decided to try it.&lt;/p&gt;
&lt;p&gt;With my wife's work locking her here in Tokushima, I didn't want to start traveling around the world to hunt for items, so I decided to find something I could just send from Japan instead. Anything would be fine at first, I could always expand later (&lt;em&gt;never did though&lt;/em&gt; ). What would be easy to try to send? I saw a lot of unique candies here, and looking into it I discovered that they were also &lt;a href=&quot;https://www.youtube.com/watch?v=_T2_80viWps&quot;&gt;trending on YouTube&lt;/a&gt;. So candy it was.&lt;/p&gt;
&lt;p&gt;While I was an exchange student I had a side income from selling comic books (by using the university post office no less) from Japan to Finland, so I emailed those past customers to see if they would be interested in subscribing to candy. Two people agreed, so I started sending stuff to them.&lt;/p&gt;
&lt;p&gt;Next I put up a simple website. At first it was just a landing page, but over time as it grew, I &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/how-many-lines-of-code-is-candy-japan&quot;&gt;wrote a bunch of code&lt;/a&gt; to automate things (no readymade solution existed back then). I submitted the website to Hacker News, where some bloggers spotted it and posted about it. Other bloggers saw those posts and reblogged it. This in turn caused the site to rank #1 in Google for the head term &quot;Japanese candy&quot;, sending even more visitors to the site.&lt;/p&gt;
&lt;h2&gt;Story up to 2016&lt;/h2&gt;
&lt;p&gt;The Hacker News post, blog mentions and Google rankings combined to mean that by the end of 2011 a total of 300 people had become subscribers. It turned out to be a stable number that lasted all the way to 2014. It wasn't just that people were subscribing for that long, but also new subscriptions were roughly matching the number of cancellations to keep the subscriber count stable.&lt;/p&gt;
&lt;p&gt;Here's a chart showing the number of members subscribing to Candy Japan:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Story up to 2016&quot; src=&quot;https://www.candyjapan.com/static/2016_chart_real.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You might notice that in 2014 something wonderful happened: the subscriber count roughly tripled. I didn't do anything clever to make that happen, rather I got lifted by a wave as the whole concept of Japanese candy started to trend.&lt;/p&gt;
&lt;p&gt;Below is a chart from Google Trends showing how many people were searching for japanese candy:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Story up to 2016&quot; src=&quot;https://www.candyjapan.com/static/candy_google_trends.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see the number of searches slowly builds, but from 2014 to 2015 it rapidly doubles, making it about three times as much as it had been in the early days. This was directly reflected in our subscriber count.&lt;/p&gt;
&lt;p&gt;By no means was this still a big business, but Candy Japan alone could now cover &lt;a href=&quot;https://www.candyjapan.com/life-in-japan/what-it-costs-to-live-in-japan&quot;&gt;our living expenses&lt;/a&gt;, and I started to get hopeful that it could get bigger still.&lt;/p&gt;
&lt;p&gt;Next year in 2015 it seemed that my hopes were coming true; the subscriber count crossed 1200. Or so I thought. What seemed to be the best year ever turned out to be miserable: I discovered that I had been &lt;a href=&quot;http://www.candyjapan.com/candy-japan-hit-with-credit-card-fraud&quot;&gt;hit by credit card fraud&lt;/a&gt;. All those new subscribers beyond the first 800 were actually fakes who had subscribed with stolen credit card numbers.&lt;/p&gt;
&lt;p&gt;I had already sent them the items, but now had to return all the money and on top of that pay a bunch of fees. Add insult to injury a lot of shipping addresses turned out to be fake as well, so I had hundreds of boxes returned to my address. Our mailbox was constantly swamped and our apartment was littered with returned boxes I had to manually examine to see if they were from legit subscribers or fakes.&lt;/p&gt;
&lt;p&gt;While this fraud issue was going on, I was also in the process of moving my tax residency to Japan. It was a stressful year spent dealing with fraud and taxes. I even got a phone call from a US police officer after someone had complained to them about an unknown charge on their card, because their number had been stolen and someone used it to place a candy order.&lt;/p&gt;
&lt;p&gt;I survived, but discovered I don't handle stress quite as well as I thought I would. I was panicky and high-anxiety a lot of the time. I'd rather forget that year, but it did teach me a valuable lesson:&lt;/p&gt;
&lt;p&gt;Fraud is something that affects any business that accepts credit cards, &lt;a href=&quot;http://blog.watsi.org/donation-fraud/&quot;&gt;even charities&lt;/a&gt;. Even if everything seems to be OK, make a habit of reading through new orders as they come in. Pay attention to email addresses, shipping addresses and bursts of failed payments. You can spot suspicious behavior if you do this.&lt;/p&gt;
&lt;p&gt;I thought I didn't have a problem, until thousands of dollars started getting reversed. While I did know that a small percentage of all ecommerce is fraud, I always understood that as fraud being interlaced with legit orders. 100 real payments, 1 fake payment, 100 real payments, 1 fake payment. But that's not how it played out. Rather it was 10000 real payments over years lulling you into believing that everything is fine, then suddenly getting hit by hundreds of fake payments in a matter of days.&lt;/p&gt;
&lt;p&gt;If 2015 was a high-anxiety year, 2016 was rather quiet by comparison. Subscriber numbers did continue to slide, as &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/nobodys-going-to-steal-your-idea&quot;&gt;competition was getting tough&lt;/a&gt; while also the overall interest in Japanese candy was waning. I ran some marketing experiments, but was unable to find any good channels. Japanese yen becoming increasingly expensive, forcing me to increase prices and leading to even less sales.&lt;/p&gt;
&lt;h2&gt;2017&lt;/h2&gt;
&lt;p&gt;This year was a bloodbath. From the start of 2017 to the end, subscribers declined by 40%, going from 636 to 385 members.&lt;/p&gt;
&lt;p&gt;Here's the subscriber chart extended to include 2017:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;2017&quot; src=&quot;https://www.candyjapan.com/static/2017-subscriber-chart.png&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Sales stats&lt;/h3&gt;
&lt;p&gt;Sales net of refunds: $141,220&lt;/p&gt;
&lt;p&gt;Expenses: $102,846 (candy, shipping, boxes, ads)&lt;/p&gt;
&lt;p&gt;Profit: $38,374&lt;/p&gt;
&lt;p&gt;Wage per hour (assuming ~2 hours per day): ~$50&lt;/p&gt;
&lt;h3&gt;Site stats&lt;/h3&gt;
&lt;p&gt;Visits: 138k&lt;/p&gt;
&lt;p&gt;Unique visitors: 114k&lt;/p&gt;
&lt;p&gt;Page views: 241k&lt;/p&gt;
&lt;p&gt;Traffic sources of note: Search engines (30%), Social media (22%), Paid ads (13%)&lt;/p&gt;
&lt;h3&gt;What went wrong?&lt;/h3&gt;
&lt;p&gt;This year I didn't have as much to blog about. In 2016 I had five popular posts (&lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/how-i-got-credit-card-fraud-somewhat-under-control&quot;&gt;1&lt;/a&gt; &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/results-from-box-design-ab-test&quot;&gt;2&lt;/a&gt; &lt;a href=&quot;https://www.candyjapan.com/life-in-japan/%E5%8F%A3&quot;&gt;3&lt;/a&gt; &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/how-many-lines-of-code-is-candy-japan&quot;&gt;4&lt;/a&gt; &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/algorithmic-fitting-of-japanese-candy&quot;&gt;5&lt;/a&gt;), while in 2017 I only managed two (&lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/sales-cross-million-dollars&quot;&gt;1&lt;/a&gt; &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/twice-as-happy-half-the-price&quot;&gt;2&lt;/a&gt;). The posts tend to send a lot of high-quality traffic, so the impact was bigger than you might expect. I haven't figured out how to invent posts from thin air when I simply have nothing new to share.&lt;/p&gt;
&lt;p&gt;Organic search traffic declined from 68,383 clicks in 2016 to 41,358 clicks in 2017. I think the reason for this is twofold. First, competition is getting tougher, meaning there is fierce competition for head search terms. I have been pushed off the first page completely for some.&lt;/p&gt;
&lt;p&gt;Secondly overall searches for Japanese candy declined by 33% according to Google Trends, while on YouTube it more than halved. There was a point when a lot of YouTubers were doing a video showing their reactions to eating strange Japanese candy, but now that is ancient history.&lt;/p&gt;
&lt;p&gt;Changes in USDJPY exchange rates made me decide to increase USD prices. Naturally a higher price leads to less conversions.&lt;/p&gt;
&lt;p&gt;Another major hit was that all the packages we were sending to Germany started bouncing back. After this continued for several shipments, I decided just not to ship to Germany any more. This meant losing 10% of subscribers and needing to send a lot of refunds for packages that never arrived.&lt;/p&gt;
&lt;h3&gt;Things I tried&lt;/h3&gt;
&lt;p&gt;Tried paid YouTube ads, and while I did get some subscribers, in the end they were just too expensive to keep running. Tweaking the ads was very time consuming and expensive (but fun). I learned a lot though and &lt;a href=&quot;https://www.youtube.com/watch?v=hs30WPkRpsY&quot;&gt;gave a presentation about it&lt;/a&gt; at a Hacker News meetup in Osaka. I managed to decrease their cost, but not enough to break even.&lt;/p&gt;
&lt;p&gt;Tried putting &lt;a href=&quot;https://www.candyjapan.com/past-boxes&quot;&gt;all of our old newsletters&lt;/a&gt; on the site. Had to reformat them by hand from ill-defined HTML newsletters to MarkDown. Attempts at automating with BeautifulSoup failed, as there was no coherent layout. I submitted them to webmaster tools, but this resulted in… silence. Less than one organic search click per day.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;2017&quot; src=&quot;https://www.candyjapan.com/static/webmaster-tools-click-stats.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Improved response time by serving the landing page from a static file served by Google CDN instead of from Python. This may increase conversions slightly and could improve SEO, but there is still a lot of work to do to make the site faster.&lt;/p&gt;
&lt;p&gt;Tried to branch out by asked my customers if they would like to subscribe to Gashapon capsule toys, but the result was near-silence. I have a bimonthly newsletter with a great open rate, I wonder what other ideas I could throw at them?&lt;/p&gt;
&lt;p&gt;Tried redesigning the site to be more colorful and not so gloomy, but am not sure if it helped or hurt. I don't have enough data anymore to say for sure, as you need hundreds of conversions to say anything meaningful.&lt;/p&gt;
&lt;p&gt;Tried to learn how to take better product photos for putting on the site to match what my competitors are doing, but was unable to take decent shots by myself. In the end hired a photographer to do it.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;2017&quot; src=&quot;https://www.candyjapan.com/static/candy_japan_october_2017.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The pictures look good, and will probably boost conversions a bit. Again I can't be sure of the impact due to lack of data. Who knows, maybe visitors might feel that seeing the products ruins the surprise or something.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I wish I could report having discovered some kind of a breakthrough marketing trick to reverse the decline, but sadly no.&lt;/p&gt;
&lt;p&gt;For the time being &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;Candy Japan&lt;/a&gt; is still popular enough to keep running, and since I have most things automated I see no reason to shut it down. If the trends of declining popularity of Japanese candy and increasing competition continue, 2018 will be another down year.&lt;/p&gt;
&lt;p&gt;I will start spending more time trying new projects again. Hopefully nothing involving physical products this time!&lt;/p&gt;
&lt;p&gt;Thanks for reading, and do &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;subscribe&lt;/a&gt; if you'd like to try some candy for yourself. You can use the code HACKERNEWS to get 10% off.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;&lt;img alt=&quot;Conclusion&quot; src=&quot;https://www.candyjapan.com/static/illustration-4.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.candyjapan.com/past-boxes&quot;&gt;More past boxes&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 27 Dec 2017 05:55:52 +0000</pubDate>
<dc:creator>hamstercat</dc:creator>
<og:title>Candy Japan 2017 Year in Review</og:title>
<og:description>This was another tough year for Candy Japan, with many factors combining to a sharp decline in subscriber numbers. Contains revenue numbers, site statistics and learnings from 2017.</og:description>
<og:url>https://www.candyjapan.com/past-boxes/2017-year-in-review</og:url>
<og:type>article</og:type>
<og:image>https://www.candyjapan.com/static/2017-year-in-review-illustration.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.candyjapan.com/behind-the-scenes/2017-year-in-review</dc:identifier>
</item>
<item>
<title>Darktable 2.4.0 released</title>
<link>https://www.darktable.org/2017/12/darktable-240-released/</link>
<guid isPermaLink="true" >https://www.darktable.org/2017/12/darktable-240-released/</guid>
<description>&lt;p&gt;we’re proud to finally announce the new feature release of darktable, 2.4.0!&lt;/p&gt;
&lt;p&gt;the github release is here: &lt;a href=&quot;https://github.com/darktable-org/darktable/releases/tag/release-2.4.0&quot;&gt;https://github.com/darktable-org/darktable/releases/tag/release-2.4.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;as always, please don’t use the autogenerated tarball provided by github, but only our tar.xz. the checksums are:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
$ sha256sum darktable-2.4.0.tar.xz
9d37388aee79d5ada71062bbac3cda612a61d1a781f6320b784b27308f3a1878 darktable-2.4.0.tar.xz
$ sha256sum darktable-2.4.0.dmg
??? darktable-2.4.0.dmg
$ sha256sum darktable-2.4.0-win64.exe
5b7b00a0bed8ea0d5ac45b0a0668f1998ad396e4bc3b5791e7a17f7c70b90f7c darktable-2.4.0.exe
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;when updating from the currently stable 2.2.x series, please bear in mind that your edits will be preserved during this process, but it will not be possible to downgrade from 2.4 to 2.2.x any more.&lt;/p&gt;
&lt;h4&gt;Important note: to make sure that darktable can keep on supporting the raw file format for your camera, &lt;em&gt;please&lt;/em&gt; read &lt;a href=&quot;https://discuss.pixls.us/t/raw-samples-wanted/5420?u=lebedevri&quot;&gt;this post&lt;/a&gt; on how/what raw samples you can contribute to ensure that we have the &lt;em&gt;full&lt;/em&gt; raw sample set for your camera under &lt;span class=&quot;caps&quot;&gt;CC0&lt;/span&gt; license!&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;The maintainership of the &lt;a href=&quot;https://github.com/darktable-org/rawspeed&quot;&gt;RawSpeed library&lt;/a&gt; was transferred to the darktable project. The work on code cleanup, hardening, modernization, simplification and testing is ongoing.&lt;/li&gt;
&lt;li&gt;Almost 3 thousand commits to darktable+rawspeed since 2.2.0&lt;/li&gt;
&lt;li&gt;273 pull requests handled&lt;/li&gt;
&lt;li&gt;340+ issues closed&lt;/li&gt;
&lt;li&gt;Updated user manual is coming soon™&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Gource visualization of git log from 2.2.0 to right before 2.4.0:&lt;/p&gt;

&lt;h2&gt;Hell Froze Over&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;As you might have read on our &lt;a href=&quot;https://www.darktable.org/2017/08/darktable-for-windows/&quot;&gt;news post&lt;/a&gt; we finally ported darktable to Windows and intend to support it in the future. At the moment it’s still lacking a few features (for example there is no printing support), has a few limitations (tethering requires special drivers to be installed) and comes with its own set of bugs (&lt;span class=&quot;caps&quot;&gt;TIFF&lt;/span&gt; import and export doesn’t support non-&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt; characters in file names). But overall we are confident that it’s quite usable already and hope you will enjoy it. A very special thanks goes to Peter Budai who finally convinced us to agree to the port and who did most of the work.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;The Big Ones&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;A new module for haze removal&lt;/li&gt;
&lt;li&gt;The local contrast module can now be pushed much further, it also got a new &lt;a href=&quot;https://www.darktable.org/2017/11/local-laplacian-pyramids/&quot;&gt;local laplacian&lt;/a&gt; mode&lt;/li&gt;
&lt;li&gt;Add undo support for masks and more intelligent grouping of undo steps&lt;/li&gt;
&lt;li&gt;Blending now allows to display individual channels using false colors&lt;/li&gt;
&lt;li&gt;darktable now supports loading Fujifilm compressed RAFs&lt;/li&gt;
&lt;li&gt;darktable now supports loading floating point &lt;span class=&quot;caps&quot;&gt;HDR&lt;/span&gt; DNGs as written by &lt;span class=&quot;caps&quot;&gt;HDRMERGE&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;We also added channel specific blend modes for Lab and &lt;span class=&quot;caps&quot;&gt;RGB&lt;/span&gt; color spaces&lt;/li&gt;
&lt;li&gt;The base curve module allows for more control of the &lt;a href=&quot;https://www.darktable.org/2016/08/compressing-dynamic-range-with-exposure-fusion/&quot;&gt;exposure fusion&lt;/a&gt; feature using the newly added bias slider&lt;/li&gt;
&lt;li&gt;The tonecurve module now supports auto colour adjustment in &lt;span class=&quot;caps&quot;&gt;RGB&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Add absolute color input as an option to the color look up table module&lt;/li&gt;
&lt;li&gt;A new X-Trans demosaicing algorithm, Frequency Domain Chroma, was implemented.&lt;/li&gt;
&lt;li&gt;You can now choose from pre-defined scheduling profiles for OpenCL&lt;/li&gt;
&lt;li&gt;Speaking of OpenCL, darktable now allows to force-use OpenCL for a specific pixelpipe&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;XMP&lt;/span&gt; sidecar files are no longer written to disk when the content didn’t actually change. That mostly helps with network storage and backup systems that use files’ time stamps&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;New Features And Changes&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Show a dialog window that tells when locking the database/library failed&lt;/li&gt;
&lt;li&gt;Don’t shade the whole region on the map when searching for a location. Instead just draw a border around it.&lt;/li&gt;
&lt;li&gt;Also in map mode: Clear the search list and map indicators when resetting the search module.&lt;/li&gt;
&lt;li&gt;With OsmGPSMap newer than version 1.1.0 (i.e., anything released after that OsmGPSMap version) the map will show copyright info.&lt;/li&gt;
&lt;li&gt;Running jobs with a progressbar (mostly import and export) will show that progress bar ontop the window entry in your task bar – if the system supports it. It should work on &lt;span class=&quot;caps&quot;&gt;GNOME&lt;/span&gt;, &lt;span class=&quot;caps&quot;&gt;KDE&lt;/span&gt; and Windows at least.&lt;/li&gt;
&lt;li&gt;Add bash like string replacement for variables (export, watermark, session settings)&lt;/li&gt;
&lt;li&gt;Add a preferences option to ask before removing empty dirs&lt;/li&gt;
&lt;li&gt;The “colorbalance” module got a lot faster, thanks to &lt;span class=&quot;caps&quot;&gt;SSE&lt;/span&gt; optimized code&lt;/li&gt;
&lt;li&gt;Make gradient sliders a little more colorful&lt;/li&gt;
&lt;li&gt;Make &lt;span class=&quot;caps&quot;&gt;PNG&lt;/span&gt; compression level used for exporting configurable&lt;/li&gt;
&lt;li&gt;On &lt;span class=&quot;caps&quot;&gt;OSX&lt;/span&gt;, load single images from command line or via drag&amp;amp;drop in darkroom mode&lt;/li&gt;
&lt;li&gt;Add an option to omit the intermediate tag hierarchy in exported files and only add the last level&lt;/li&gt;
&lt;li&gt;In the watermark module, sort the list of &lt;span class=&quot;caps&quot;&gt;SVG&lt;/span&gt; files and omit the file extension&lt;/li&gt;
&lt;li&gt;Support &lt;span class=&quot;caps&quot;&gt;XYZ&lt;/span&gt; as a proofing profile&lt;/li&gt;
&lt;li&gt;Local contrast now got a new slider to set the midtone range&lt;/li&gt;
&lt;li&gt;darktable got two new helper scripts (those are not installed by default, grab them from &lt;a href=&quot;https://github.com/darktable-org/darktable/tree/master/tools&quot;&gt;the sources&lt;/a&gt;)
&lt;ul&gt;&lt;li&gt;One to purge thumbnails that no longer have an associated image in the database,&lt;/li&gt;
&lt;li&gt;and a second script that uses inotify to watch a folder for new files to open them in a running darktable instance.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;In the curve editors of base curve and tone curve you can now delete nodes with a right click and see coordinates of nodes while editing. Note that you can use keyboard modifiers &lt;code&gt;ctrl&lt;/code&gt; and &lt;code&gt;shift&lt;/code&gt; to change the precision of your changes&lt;/li&gt;
&lt;li&gt;Creating a new instance of a module can now be done with a quick click of the middle mouse button on the multi-instance icon&lt;/li&gt;
&lt;li&gt;New darktable installations on computers with more than 8 Gb of memory will now by default use half of that per module&lt;/li&gt;
&lt;li&gt;Several background colors and the brush color are now configurable in the &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Some new cameras can bump the &lt;span class=&quot;caps&quot;&gt;ISO&lt;/span&gt; level to insane highs. We try to follow as good as we can by no longer limiting it to 51200 in the &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Base curve and the highlights module now support multiple instances and use blending and masks&lt;/li&gt;
&lt;li&gt;Having the &lt;code&gt;1&lt;/code&gt; key toggle between 1 and 0 stars wasn’t very popular with many people. You can disable that extra feature and have it behave like the other rating shortcuts now&lt;/li&gt;
&lt;li&gt;You can decide if you want to be asked before resetting the history stacks of images from the lighttable&lt;/li&gt;
&lt;li&gt;The grain module was slightly changed to have a more pleasing, photographic-paper like appearance&lt;/li&gt;
&lt;li&gt;Using the color look up table module you can now convert your images to monochrome, honoring the Helmholtz-Kohlrausch effect&lt;/li&gt;
&lt;li&gt;Support basic import of Lightroom 7 settings&lt;/li&gt;
&lt;li&gt;Change the styling of insensitive bauhaus widgets&lt;/li&gt;
&lt;li&gt;Don’t hide the mode combobox in the exposure module, just disable it&lt;/li&gt;
&lt;li&gt;Read primaries and whitepoint from .hdr files and default to those as the input color profile&lt;/li&gt;
&lt;li&gt;Some more small improvements were made&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Bugfixes&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Fix the problem with rating images by accident when moving the mouse while typing an image size in the export module&lt;/li&gt;
&lt;li&gt;Fix several oddities in folder and tag mode of the collect module&lt;/li&gt;
&lt;li&gt;Print mode’s color profile settings no longer interact with the export module&lt;/li&gt;
&lt;li&gt;Update the style lists when importing a style&lt;/li&gt;
&lt;li&gt;Fix some bugs with multiple module instances used in a style&lt;/li&gt;
&lt;li&gt;On &lt;span class=&quot;caps&quot;&gt;OSX&lt;/span&gt; only the main window should be fullscreen, not the popups&lt;/li&gt;
&lt;li&gt;Some speedups with &lt;span class=&quot;caps&quot;&gt;VERY&lt;/span&gt; big libraries or having A &lt;span class=&quot;caps&quot;&gt;LOT&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;OF&lt;/span&gt; tags&lt;/li&gt;
&lt;li&gt;Significantly speed up tagging many images&lt;/li&gt;
&lt;li&gt;Fix searching locations using OpenStreetMap&lt;/li&gt;
&lt;li&gt;Fix partial copies of large files in “import from camera”&lt;/li&gt;
&lt;li&gt;Fix a crash in the import dialog when using Lua to add widgets there&lt;/li&gt;
&lt;li&gt;Fix some false-positive warnings about another running darktable instance and it having locked the databases&lt;/li&gt;
&lt;li&gt;No longer switch to the favourite modules group when duplicating one of its modules&lt;/li&gt;
&lt;li&gt;Fix loading of &lt;span class=&quot;caps&quot;&gt;XYZ&lt;/span&gt; files&lt;/li&gt;
&lt;li&gt;Fix Lab export when the profile was set from the lighttable&lt;/li&gt;
&lt;li&gt;Create temporary snapshot files with mode 0600 to stop other people looking at them&lt;/li&gt;
&lt;li&gt;Fix several bugs with Wayland. However, there are still issues, so darktable will prefer XWayland&lt;/li&gt;
&lt;li&gt;Google deprecated the Picasa Web &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; so it’s no longer possible to create G+ albums&lt;/li&gt;
&lt;li&gt;Fix the default for sliders with target not being “red” in the channel mixer&lt;/li&gt;
&lt;li&gt;Fix the removal of directories&lt;/li&gt;
&lt;li&gt;Make the escape key cancel history dialogs&lt;/li&gt;
&lt;li&gt;Block keyboard accels when editing camera controls&lt;/li&gt;
&lt;li&gt;Properly delete &lt;span class=&quot;caps&quot;&gt;XMP&lt;/span&gt; sidecars&lt;/li&gt;
&lt;li&gt;Make sure that the rating set in darktable is used for the exported file, not something set inside the raw file&lt;/li&gt;
&lt;li&gt;Don’t re-write all &lt;span class=&quot;caps&quot;&gt;XMP&lt;/span&gt; files when detaching a tag&lt;/li&gt;
&lt;li&gt;Sync XMPs when a tag is removed from the database&lt;/li&gt;
&lt;li&gt;Sync XMPs after a tag is attached/detached via the Lua &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Bail out of darktable-cli when the &lt;span class=&quot;caps&quot;&gt;XMP&lt;/span&gt; file is not readable&lt;/li&gt;
&lt;li&gt;Show ratings on zoomable lighttable without a delay&lt;/li&gt;
&lt;li&gt;Rely on &lt;span class=&quot;caps&quot;&gt;CUPS&lt;/span&gt; color management when printing without configuring any color profile in darktable&lt;/li&gt;
&lt;li&gt;Fix spurious segfault in local contrast&lt;/li&gt;
&lt;li&gt;Make calls to exiv2’s readMetadata thread safe to not crash randomly&lt;/li&gt;
&lt;li&gt;Properly read Lightroom XMPs on systems with &lt;code&gt;,&lt;/code&gt; as the decimal separator&lt;/li&gt;
&lt;li&gt;Fix setting the &lt;span class=&quot;caps&quot;&gt;PNG&lt;/span&gt; bit depth from the gui&lt;/li&gt;
&lt;li&gt;Many more bugs got fixed&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Lua&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;darktable now uses Lua 5.3. The bundled copy got updated accordingly&lt;/li&gt;
&lt;li&gt;Add dt.print_log. It’s like print_error but without the &lt;span class=&quot;caps&quot;&gt;ERROR&lt;/span&gt; prefix&lt;/li&gt;
&lt;li&gt;Reorder callback parameters for intermediate export image: add the actual image to the parameters of the event&lt;/li&gt;
&lt;li&gt;Call lua post-import-image event synchronously&lt;/li&gt;
&lt;li&gt;Add darktable.configuration.running_os to detect the &lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; darktable is running on&lt;/li&gt;
&lt;li&gt;New widget type: section_label, adds a label which looks like a section change&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Changed Dependencies&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;CMake 3.1 is now required&lt;/li&gt;
&lt;li&gt;In order to compile darktable you now need at least gcc-5.0+/clang-3.4+&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;ZLIB&lt;/span&gt; is now required for the &lt;span class=&quot;caps&quot;&gt;DNG&lt;/span&gt; Deflate compressed raw support&lt;/li&gt;
&lt;li&gt;darktable now uses Lua 5.3&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Camera support, compared to 2.2.0&lt;/h2&gt;
&lt;h4&gt;Warning: support for Nikon &lt;span class=&quot;caps&quot;&gt;NEF&lt;/span&gt; ‘lossy after split’ raws was unintentionally broken due to the lack of such samples. Please see &lt;a href=&quot;https://discuss.pixls.us/t/nikon-a-specific-raw-sample-wanted/5483?u=lebedevri&quot;&gt;this post&lt;/a&gt; for more details. If you have affected raws, please contribute samples!&lt;/h4&gt;
&lt;h3&gt;Base Support&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 200D&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; Kiss X9&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; Rebel &lt;span class=&quot;caps&quot;&gt;SL2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 6D Mark &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt; (sRaw1, sRaw2)&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 77D&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 9000D&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 800D&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; Kiss X9i&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; Rebel T7i&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; M100&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; M5&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; M6&lt;/li&gt;
&lt;li&gt;Canon PowerShot G9 X Mark &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Canon PowerShot &lt;span class=&quot;caps&quot;&gt;SX40&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;HS&lt;/span&gt; (dng)&lt;/li&gt;
&lt;li&gt;Fujifilm &lt;span class=&quot;caps&quot;&gt;GFX&lt;/span&gt; 50S (compressed)&lt;/li&gt;
&lt;li&gt;Fujifilm X-A3&lt;/li&gt;
&lt;li&gt;Fujifilm X-&lt;span class=&quot;caps&quot;&gt;E2S&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Fujifilm X-E3 (compressed)&lt;/li&gt;
&lt;li&gt;Fujifilm X-Pro2 (compressed)&lt;/li&gt;
&lt;li&gt;Fujifilm X-T2 (compressed)&lt;/li&gt;
&lt;li&gt;Fujifilm X-T20 (compressed)&lt;/li&gt;
&lt;li&gt;Fujifilm &lt;span class=&quot;caps&quot;&gt;X100F&lt;/span&gt; (compressed)&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;GITUP&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;GIT2P&lt;/span&gt; (chdk-a, chdk-b)&lt;/li&gt;
&lt;li&gt;Kodak EasyShare Z980&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;LG&lt;/span&gt; D855 (dng)&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;LG&lt;/span&gt; H815 (dng)&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;LG&lt;/span&gt; Nexus 5X (dng)&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;LG&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;US996&lt;/span&gt; (dng)&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;LG&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;VS995&lt;/span&gt; (dng)&lt;/li&gt;
&lt;li&gt;Leica D-&lt;span class=&quot;caps&quot;&gt;LUX&lt;/span&gt; (Typ 109) (4:3, 3:2, 16:9, 1:1)&lt;/li&gt;
&lt;li&gt;Leica X2 (dng)&lt;/li&gt;
&lt;li&gt;Nikon &lt;span class=&quot;caps&quot;&gt;COOLPIX&lt;/span&gt; B700 (12bit-uncompressed)&lt;/li&gt;
&lt;li&gt;Nikon D500 (14bit-uncompressed, 12bit-uncompressed)&lt;/li&gt;
&lt;li&gt;Nikon D5600 (12bit-compressed, 12bit-uncompressed, 14bit-compressed, 14bit-uncompressed)&lt;/li&gt;
&lt;li&gt;Nikon D7500 (12bit-compressed, 14bit-compressed)&lt;/li&gt;
&lt;li&gt;Nikon D850 (12bit-compressed, 12bit-uncompressed, 14bit-compressed, 14bit-uncompressed)&lt;/li&gt;
&lt;li&gt;Nikon &lt;span class=&quot;caps&quot;&gt;LS&lt;/span&gt;-5000 (dng)&lt;/li&gt;
&lt;li&gt;Nokia Lumia 1020 (dng)&lt;/li&gt;
&lt;li&gt;Olympus E-M10 Mark &lt;span class=&quot;caps&quot;&gt;III&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Olympus E-M1MarkII&lt;/li&gt;
&lt;li&gt;Olympus &lt;span class=&quot;caps&quot;&gt;TG&lt;/span&gt;-5&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ82&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ80&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ85&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;GH5&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ91&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ92&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ93&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ90&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;ZS70&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ330&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;GF6&lt;/span&gt; (16:9, 3:2, 1:1)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ61&lt;/span&gt; (4:3, 3:2, 1:1, 16:9)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;ZS40&lt;/span&gt; (4:3, 3:2, 1:1, 16:9)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ80&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ81&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ85&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;ZS60&lt;/span&gt; (4:3)&lt;/li&gt;
&lt;li&gt;Pentax K-5 (dng)&lt;/li&gt;
&lt;li&gt;Pentax K-r (dng)&lt;/li&gt;
&lt;li&gt;Pentax &lt;span class=&quot;caps&quot;&gt;K10D&lt;/span&gt; (dng)&lt;/li&gt;
&lt;li&gt;Phase One &lt;span class=&quot;caps&quot;&gt;IQ140&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Samsung &lt;span class=&quot;caps&quot;&gt;G920F&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Samsung &lt;span class=&quot;caps&quot;&gt;G935F&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Samsung &lt;span class=&quot;caps&quot;&gt;GX10&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCE&lt;/span&gt;-6500&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCE&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;7RM3&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCE&lt;/span&gt;-9&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;White Balance Presets&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 6D Mark &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Fujifilm X-T20&lt;/li&gt;
&lt;li&gt;Fujifilm &lt;span class=&quot;caps&quot;&gt;X100F&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Nikon 1 &lt;span class=&quot;caps&quot;&gt;AW1&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Nikon Coolpix A&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;GX80&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;GX85&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ100&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ101&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ110&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;ZS110&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Pentax K-3 &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Noise Profiles&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 1300D&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; Kiss X80&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; Rebel T6&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 5D Mark &lt;span class=&quot;caps&quot;&gt;IV&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; 6D Mark &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Canon &lt;span class=&quot;caps&quot;&gt;EOS&lt;/span&gt; M5&lt;/li&gt;
&lt;li&gt;Canon PowerShot G16&lt;/li&gt;
&lt;li&gt;Canon PowerShot G3 X&lt;/li&gt;
&lt;li&gt;Canon PowerShot G7 X Mark &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Canon PowerShot G9 X Mark &lt;span class=&quot;caps&quot;&gt;II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Fujifilm X-M1&lt;/li&gt;
&lt;li&gt;Fujifilm X-Pro1&lt;/li&gt;
&lt;li&gt;Fujifilm X-Pro2&lt;/li&gt;
&lt;li&gt;Fujifilm X-T20&lt;/li&gt;
&lt;li&gt;Leica X2&lt;/li&gt;
&lt;li&gt;Nikon Coolpix A&lt;/li&gt;
&lt;li&gt;Nikon &lt;span class=&quot;caps&quot;&gt;D2X&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Nikon D3000&lt;/li&gt;
&lt;li&gt;Nikon D3400&lt;/li&gt;
&lt;li&gt;Nikon D4&lt;/li&gt;
&lt;li&gt;Nikon D500&lt;/li&gt;
&lt;li&gt;Olympus E-M1MarkII&lt;/li&gt;
&lt;li&gt;Olympus E-P5&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ200&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;FZ300&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-G7&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-G70&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-G8&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-G80&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-G81&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-G85&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;GX80&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;GX85&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;LX100&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ100&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ101&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;TZ110&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Panasonic &lt;span class=&quot;caps&quot;&gt;DMC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;ZS110&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Pentax K-70&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;DSC&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;RX100M5&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCA&lt;/span&gt;-68&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCE&lt;/span&gt;-5000&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCE&lt;/span&gt;-6500&lt;/li&gt;
&lt;li&gt;Sony &lt;span class=&quot;caps&quot;&gt;ILCE&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;7RM3&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Translations&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Catalan&lt;/li&gt;
&lt;li&gt;Czech&lt;/li&gt;
&lt;li&gt;Danish&lt;/li&gt;
&lt;li&gt;Dutch&lt;/li&gt;
&lt;li&gt;French&lt;/li&gt;
&lt;li&gt;German&lt;/li&gt;
&lt;li&gt;Greek&lt;/li&gt;
&lt;li&gt;Hebrew&lt;/li&gt;
&lt;li&gt;Hungarian&lt;/li&gt;
&lt;li&gt;Italian&lt;/li&gt;
&lt;li&gt;Japanese&lt;/li&gt;
&lt;li&gt;Polish&lt;/li&gt;
&lt;li&gt;Russian&lt;/li&gt;
&lt;li&gt;Slovak&lt;/li&gt;
&lt;li&gt;Slovenian&lt;/li&gt;
&lt;li&gt;Spanish&lt;/li&gt;
&lt;li&gt;Swedish&lt;/li&gt;
&lt;li&gt;Ukrainian&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Wed, 27 Dec 2017 02:50:48 +0000</pubDate>
<dc:creator>trop</dc:creator>
<og:title>darktable 2.4.0 released</og:title>
<og:type>article</og:type>
<og:image>https://www.darktable.org/2017/12/darktable-240-released/shore.jpg</og:image>
<og:description>we’re proud to finally announce the new feature release of darktable, 2.4.0! the github release is here: https://github.com/darktable-org/darktable/releases/tag/release-2.4.0. as always, please don’t use the autogenerated tarball provided by github, but only our tar.xz. the checksums are …</og:description>
<og:url>https://www.darktable.org/2017/12/darktable-240-released/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.darktable.org/2017/12/darktable-240-released/</dc:identifier>
</item>
<item>
<title>DC police used sonic cannon to direct crowd flow during Women&amp;#039;s March</title>
<link>https://www.muckrock.com/news/archives/2017/nov/20/dc-lrad/</link>
<guid isPermaLink="true" >https://www.muckrock.com/news/archives/2017/nov/20/dc-lrad/</guid>
<description>&lt;header class=&quot;news__article__header&quot; readability=&quot;26.549295774648&quot;&gt;&lt;time title=&quot;2017-11-20T07:00:00&quot; datetime=&quot;2017-11-20T07:00:00&quot; itemprop=&quot;datePublished&quot;&gt;November 20, 2017&lt;/time&gt;
&lt;p&gt;Despite risks which include permanent hearing loss, LRADs are increasingly part of police’s crowd control arsenal&lt;/p&gt;

&lt;/header&gt;&lt;p&gt;After a wait of nearly ten months, MuckRock has finally received documents from the D.C. Metropolitan Police Department regarding &lt;a href=&quot;https://www.muckrock.com/foi/washington-48/j20-protests-metropolitan-police-department-32371/#file-162166&quot;&gt;their response to the protests surrounding President Donald Trump’s inauguration&lt;/a&gt; early this year. Surprisingly, while we didn’t receive any records &lt;a href=&quot;https://theintercept.com/2017/10/25/trump-inauguration-protest-j20-trial/&quot;&gt;related to the J20 protests&lt;/a&gt;, we &lt;em&gt;did&lt;/em&gt; receive documents relating to January 21st’s Women’s March, which in &lt;a href=&quot;https://www.nytimes.com/2017/01/21/us/womens-march.html&quot;&gt;Washington D.C. alone attracted&lt;/a&gt; by conservative estimates between 450,000 and 500,000 people. While it was the largest protest in the city since the anti-Vietnam War protests of the ’60s and ’70s, no arrests were made.&lt;/p&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn.muckrock.com/news_photos/2017/11/19/metro.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The After-Action Report provided by the DCMPD, under the header “Improvements,” contains the information that the department utilized both a D.C. National Guard Jump Team, and a Long Range Acoustical Device, better known &lt;a href=&quot;https://gizmodo.com/what-is-the-lrad-sound-cannon-5860592&quot;&gt;as an LRAD&lt;/a&gt;. The LRAD was used “to assist in instructing the crowd flows on continuing to flow away from the entrances of the stations.”&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn.muckrock.com/news_photos/2017/11/19/LRAD.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Since the first documented use of an LRAD sound cannon on protesters by Pittsburgh Police during the 2009 G20 summit, LRAD use by police against activists appears to be on the rise. The Pittsburgh Police Bureau used it again in 2011 during the Super Bowl, the New York Police Department has used it several times including the Eric Garner protests and during Occupy, the Oakland Police Department also used it against Occupy protesters, and more recently and perhaps most prominently, an LRAD was deployed &lt;a href=&quot;http://www.slate.com/blogs/future_tense/2014/08/14/lrad_long_range_acoustic_device_sound_cannons_were_used_for_crowd_control.html&quot;&gt;during the Ferguson unrest&lt;/a&gt; and &lt;a href=&quot;http://www.motherjones.com/politics/2016/10/standing-rock-protests-pipeline-police-tasers-teargas/&quot;&gt;the Standing Rock protests&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&quot;800&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/QSMyY3_dmrM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;There are various models of LRAD, with military grade versions that can send voice communications up to 5.5 miles away, and slightly less powerful versions like the LRAD 500X or 300X which are what police departments generally use. All can produce a sound somewhat akin to a high-powered car alarm that can cause intense headaches, nausea, loss of balance, and potentially permanent hearing loss.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.nidcd.nih.gov/health/noise-induced-hearing-loss&quot;&gt;National Institutes of Health&lt;/a&gt; says that the risk of hearing loss can begin at as low as 85 dB. The higher the decibels, the higher the chances of permanent hearing damage - pain from sustained sound begins at 120 dB, and at 130 dB, permanent hearing loss is inevitable. Even low-powered models of LRAD’s can easily go up to 140 dB, with most police models capable of reaching at least 152 dB.&lt;/p&gt;
&lt;p&gt;In a &lt;a href=&quot;https://motherboard.vice.com/en_us/article/qkve7q/the-new-sound-of-crowd-control&quot;&gt;Motherboard piece&lt;/a&gt; written just after Ferguson, protesters describe the experience of being on the receiving end of this sound cannon. Photojournalist Anika Edrei told Motherboard reporter Alex Pasternack, “It was really loud - I could hear it through my fingers.” She continued,&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;“For the first week, I had a migraine, and just a lot of facial pressure,” she said. “Since the LRAD incident, I’ve been pretty freaked out about going back,” she added. “I’m worried about what damage it caused and it could cause if I went out there again.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Said photojournalist Shay Horse,&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;“It feels like your eardrums are beating out of your head. It makes the side of your body that you’ve been hit on feel numb and that your sinuses are inflamed. I felt like I had blood coming out of my orifices. I heard the ringing for about a week.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DCMPD refused all comment on the subject, so we do not know whether the department has their own LRAD (like the NYPD, which purchased one for roughly around $35,000), or whether it was borrowed from another agency, nor do we have any information on usage or training guidelines. We hope &lt;a href=&quot;https://www.muckrock.com/foi/washington-48/long-range-acoustical-device-metropolitan-police-department-46026/&quot;&gt;a public records request&lt;/a&gt; can uncover some of the answers.&lt;/p&gt;
&lt;p&gt;What we do know is that this won’t be the last time the DCMPD plans on deploying its LRAD. If you look at the opening page of the After-Action Report embedded below, it includes the line, “The use of this document is critical for future planning and deployment of Metropolitan Police Department assets and resources.” Read the full records embedded below, or on &lt;a href=&quot;https://www.muckrock.com/foi/washington-48/j20-protests-metropolitan-police-department-32371/#file-162166&quot;&gt;the request page&lt;/a&gt;.&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Image by Ted Eytan via &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Women%27s_March_Washington,_DC_USA_32.jpg&quot;&gt;Wikimedia Commons&lt;/a&gt; and &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/2.0/&quot;&gt;licensed under Creative Commons BY-SA 2.0&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 27 Dec 2017 01:16:21 +0000</pubDate>
<dc:creator>anigbrowl</dc:creator>
<og:title>Records show D.C. Police used an LRAD sound cannon to &quot;direct crowd flow&quot; during the Women's March</og:title>
<og:type>article</og:type>
<og:url>https://www.muckrock.com/news/archives/2017/nov/20/dc-lrad/</og:url>
<og:image>https://cdn.muckrock.com/news_images/2017/11/19/LRADcov.jpg.1200x400_q85.jpg</og:image>
<og:description>Records released last week show D.C. Metropolitan Police Department employed a Long Range Acoustic Device during the Women's March to “direct the crowd flow.” This is the latest evidence of an worrying trend in which police departments are increasingly using the incredibly powerful LRAD to deal with non-violent protests at the risk of causing permanent hearing loss.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.muckrock.com/news/archives/2017/nov/20/dc-lrad/</dc:identifier>
</item>
<item>
<title>How I learned to program</title>
<link>https://danluu.com/learning-to-program/</link>
<guid isPermaLink="true" >https://danluu.com/learning-to-program/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;How I learned to program&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;/&gt;&lt;link rel=&quot;icon&quot; href=&quot;data:;base64,iVBORw0KGgo=&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;1037.0904191918&quot;&gt;
&lt;p&gt;&lt;strong&gt;How I learned to program&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Tavish Armstrong has a great document &lt;a href=&quot;https://github.com/tarmstrong/longcv/blob/master/bio.md&quot;&gt;where he describes how and when he learned the programming skills he has&lt;/a&gt;. I like this idea because I’ve found that the paths that people take to get into programming are much more varied than stereotypes give credit for, and I think it’s useful to see that there are many possible paths into programming.&lt;/p&gt;
&lt;p&gt;Personally, I spent a decade working as an electrical engineer before taking a programming job. When I talk to people about this, they often want to take away a smooth narrative of my history. Maybe it’s that my math background gives me tools I can apply to a lot of problems, maybe it’s that my hardware background gives me a good understanding of performance and testing, or maybe it’s that the combination makes me a great fit for hardware/software co-design problems. &lt;a href=&quot;https://www.youtube.com/watch?v=RoEEDKwzNBw&quot;&gt;People like a good narrative&lt;/a&gt;. One narrative people seem to like is that I’m a good problem solver, and that problem solving ability is generalizable. But reality is messy. Electrical engineering seemed like the most natural thing in the world, and I picked it up without trying very hard. Programming was unnatural for me, and didn’t make any sense at all for years. If you believe in the common “you either have it or you don’t” narrative about programmers, I definitely don’t have it. And yet, I now make a living programming, and people seem to be pretty happy with the work I do.&lt;/p&gt;
&lt;p&gt;How’d that happen? Well, if we go back to the beginning, before becoming a hardware engineer, I spent a fair amount of time doing failed kid-projects (e.g., writing a tic-tac-toe game and AI) and not really “getting” programming. I do sometimes get a lot of value out of my math or hardware skills, but I suspect I could teach someone the actually applicable math and hardware skills I have in less than a year. Spending five years in a school and a decade in industry to pick up those skills was a circuitous route to getting where I am. Amazingly, I’ve found that my path has been more direct than that of most of my co-workers, giving the lie to the narrative that most programmers are talented whiz kids who took to programming early.&lt;/p&gt;
&lt;p&gt;And while I only use a small fraction of the technical skills I’ve learned on any given day, I find that I have a meta-skill set that I use all the time. There’s nothing profound about the meta-skill set, but because I often work in new (to me) problem domains, I find my meta skillset to be more valuable than my actual skills. I don’t think that you can communicate the importance of meta-skills (like communication) by writing a blog post any more than you can &lt;a href=&quot;https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/&quot;&gt;explain what a monad is by saying that it’s like a burrito&lt;/a&gt;. That being said, I’m going to tell this story anyway.&lt;/p&gt;
&lt;h3 id=&quot;ineffective-fumbling-1980s-1996&quot;&gt;Ineffective fumbling (1980s - 1996)&lt;/h3&gt;
&lt;p&gt;Many of my friends and I tried and failed multiple times to learn how to program. We tried BASIC, and could write some simple loops, use conditionals, and print to the screen, but never figured out how to do anything fun or useful.&lt;/p&gt;
&lt;p&gt;We were exposed to some kind of lego-related programming, uhhh, thing in school, but none of us had any idea how to do anything beyond what was in the instructions. While it was fun, it was no more educational than a video game and had a similar impact.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/jeshua-smith-1a873858&quot;&gt;One of us&lt;/a&gt; got &lt;a href=&quot;https://www.amazon.com/gp/product/1568301839/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;tag=abroaview-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1568301839&amp;amp;linkId=408c9bc67c8e6b0a405ce7ccdd7ed7b4&quot;&gt;a game programming book&lt;/a&gt;. We read it, tried to do a few things, and made no progress.&lt;/p&gt;
&lt;h3 id=&quot;high-school-1996-2000&quot;&gt;High school (1996 - 2000)&lt;/h3&gt;
&lt;p&gt;Our ineffective fumbling continued through high school. Due to an interest in gaming, I got interested in benchmarking, which eventually led to learning about CPUs and CPU microarchitecture. This was in the early days of Google, before Google Scholar, and before most CS/EE papers could be found online for free, so this was mostly material from enthusiast sites. Luckily, the internet was relatively young, as were the users on the sites I frequented. Much of the material on hardware was targeted at (and even written by) people like me, which made it accessible. Unfortunately, a lot of the material on programming was written by and targeted at professional programmers, things like &lt;a href=&quot;http://www.azillionmonkeys.com/qed/optimize.html&quot;&gt;Paul Hsieh’s optimization guide&lt;/a&gt;. There were some beginner-friendly guides to programming out there, but my friends and I didn’t stumble across them.&lt;/p&gt;
&lt;p&gt;We had programming classes in high school: an introductory class that covered Visual Basic and an &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Placement_exams&quot;&gt;AP class&lt;/a&gt; that taught C++. Both classes were taught by someone who didn’t really know how to program or how to teach programming. My class had a couple of kids who already knew how to program and &lt;a href=&quot;https://www.topcoder.com/members/po/&quot;&gt;would make good money doing programming competitions on topcoder when it opened&lt;/a&gt;, but they failed to test out of the intro class because that test included things like a screenshot of the VB6 IDE, where you got a point for correctly identifying what each button did. The class taught about as much as you’d expect from a class where the pre-test involved identifying UI elements from an IDE.&lt;/p&gt;
&lt;p&gt;The AP class the year after was similarly effective. About halfway through the class, a couple of students organized an independent study group which worked through an alternate textbook because the class was clearly not preparing us for the AP exam. I passed the AP exam because it was one of those multiple choice tests that’s possible to pass without knowing the material.&lt;/p&gt;
&lt;p&gt;Although I didn’t learn much, I wouldn’t have graduated high school if not for AP classes. I failed enough individual classes that I almost didn’t have enough credits to graduate. I got those necessary credits for two reasons: first, a lot of the teachers had a deal where, if you scored well on the AP exam, they would give you a passing grade in the class (usually an A, but sometimes a B). Even that wouldn’t have been enough if my chemistry teacher hadn’t also changed my grade to a passing grade when he found out I did well on the AP chemistry test.&lt;/p&gt;
&lt;p&gt;Other than not failing out of high school, I’m not sure I got much out of my AP classes. My AP CS class actually had a net negative effect on my learning to program because the AP test let me opt out of the first two intro CS classes in college (an introduction to programming and a data structures course). In retrospect, I should have taken the intro classes, but I didn’t, which left me with huge holes in my knowledge that I didn’t really fill in for nearly a decade.&lt;/p&gt;
&lt;h3 id=&quot;college-2000-2003&quot;&gt;College (2000 - 2003)&lt;/h3&gt;
&lt;p&gt;Because I’d nearly failed out of high school, there was no reasonable way I could have gotten into a “good” college. Luckily, I grew up in Wisconsin, a state with a “good” school that used a formula to determine who would automatically get admitted: the GPA cutoff depended on standardized test scores, and anyone with standardized test scores above a certain mark was admitted regardless of GPA. During orientation, I talked to someone who did admissions and found out that my year was the last year they used the formula.&lt;/p&gt;
&lt;p&gt;I majored in computer engineering and math for reasons that seem quite bad in retrospect. I had no idea what I really wanted to study. I settled on either computer engineering or engineering mechanics because both of those sounded “hard”.&lt;/p&gt;
&lt;p&gt;I made a number of attempts to come up with better criteria for choosing a major. The most serious was when I spent a week talking to professors in an attempt to find out what day-to-day life in different fields was like. That approach had two key flaws. First, most professors don’t know what it’s like to work in industry; now that I work in industry and talk to folks in academia, I see that most academics who haven’t done stints in industry have a lot of misconceptions about what it’s like. Second, even if I managed to get accurate descriptions of different fields, it turns out that there’s a wide body of research that indicates that humans are basically hopeless at predicting which activities they’ll enjoy. Ultimately, I decided by coin flip.&lt;/p&gt;
&lt;h4 id=&quot;math&quot;&gt;Math&lt;/h4&gt;
&lt;p&gt;I wasn’t planning on majoring in math, but my freshman intro calculus course was so much fun that I ended up adding a math major. That only happened because a high-school friend of mine passed me the application form for the honors calculus sequence because he thought I might be interested in it (he’d already taken the entire calculus sequence as well as linear algebra). The professor for the class covered the material at an unusually fast pace: he finished what was supposed to be a year-long calculus textbook in part-way through the semester and then lectured on his research for the rest of the semester. The class was theorem-proof oriented and didn’t involve any of that yucky memorization that I’d previously associated with math. That was the first time I’d found school engaging in my entire life and it made me really look forward to going to math classes. I later found out that non-honors calculus involved a lot of memorization when the engineering school required me to go back and take calculus II, which I’d skipped because I’d already covered the material in the intro calculus course.&lt;/p&gt;
&lt;p&gt;If I hadn’t had a friend drop the application for honors calculus in my lap, I probably wouldn’t have majored in math and it’s possible I never would have found any classes that seemed worth attending. Even as it was, all of the most engaging undergrad professors I had were math professors and I mostly skipped my other classes. I don’t know how much of that was because my math classes were much smaller, and therefore much more customized to the people in the class (computer engineering was very trendy at the time, and classes were overflowing), and how much was because these professors were really great teachers.&lt;/p&gt;
&lt;p&gt;Although I occasionally get some use out of the math that I learned, most of the value was in becoming confident that I can learn and work through the math I need to solve any particular problem.&lt;/p&gt;
&lt;h4 id=&quot;engineering&quot;&gt;Engineering&lt;/h4&gt;
&lt;p&gt;In my engineering classes, I learned how to &lt;a href=&quot;http://danluu.com/teach-debugging/&quot;&gt;debug&lt;/a&gt; and how computers work down to the transistor level. I spent a fair amount of time skipping classes and reading about topics of interest in the library, which included things like computer arithmetic and circuit design. I still have fond memories of &lt;a href=&quot;https://www.amazon.com/gp/product/1568811608/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;tag=abroaview-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1568811608&amp;amp;linkId=ebede6c98dc79cb83fa8695049df4dc4&quot;&gt;Koren’s Computer Arithmetic Algorithms&lt;/a&gt;, &lt;a href=&quot;https://www.amazon.com/gp/product/078036001X/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;tag=abroaview-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=078036001X&amp;amp;linkId=e806434c2ef1eeef9e3d5963ecb68393&quot;&gt;Chandrakasan et al.’s Design of High-Performance Microprocessor Circuits&lt;/a&gt;. I also started reading papers; I spent a lot of time in libraries reading physics and engineering papers that mostly didn’t make sense to me. The notable exception were systems papers, which I found to be easy reading. I distinctly remember reading &lt;a href=&quot;http://www.hpl.hp.com/techreports/1999/HPL-1999-77.html&quot;&gt;the Dynamo paper&lt;/a&gt; (this was HP’s paper on JITs, not the more recent Amazon work of the same name), but I can’t recall any other papers I read back then.&lt;/p&gt;
&lt;h4 id=&quot;internships&quot;&gt;Internships&lt;/h4&gt;
&lt;p&gt;I had two internships, one at Micron where I “worked on” flash memory, and another at IBM where I worked on the POWER6. The Micron internship was a textbook example of a bad internship. When I showed up, my manager was surprised that he was getting an intern and had nothing for me to do. After a while (perhaps a day), he found an assignment for me: press buttons on a phone. He’d managed to find a phone that used Micron flash chips; he handed it to me, told me to test it, and walked off.&lt;/p&gt;
&lt;p&gt;After poking at the phone for an hour or two and not being able to find any obvious bugs, I walked around and found people who had tasks I could do. Most of them were only slightly less manual than “testing” a phone by mashing buttons, but I did one not-totally-uninteresting task, which was to verify that a flash chip’s controller behaved correctly. Unlike my other tasks, this was amenable to automation and I was able to write a Perl script to do the testing for me.&lt;/p&gt;
&lt;p&gt;I chose Perl because someone had a Perl book on their desk that I could borrow, which seemed like as good a reason as any at the time. I called up a friend of mine to tell him about this great “new” language and we implemented Age of Renaissance, a board game we’d played in high school. We didn’t finish, but Perl was easy enough to use that we felt like we could write a program that actually did something interesting.&lt;/p&gt;
&lt;p&gt;Besides learning Perl, I learned that I could ask people for books and read them, and I spent most of the rest of my internship half keeping an eye on a manual task while reading the books people had lying around. Most of the books had to do with either analog circuit design or flash memory, so that’s what I learned. None of the specifics have really been useful to me in my career, but I learned two meta-items that were useful.&lt;/p&gt;
&lt;p&gt;First, no one’s going to stop you from spending time reading at work or spending time learning (on most teams). Micron did its best to keep interns from learning by having a default policy of blocking interns from having internet access (managers could override the policy, but mine didn’t), but no one will go out of their way to prevent an intern from reading books when their other task is to randomly push buttons on a phone.&lt;/p&gt;
&lt;p&gt;Second, I learned that there are a lot of engineering problems we can solve without anyone knowing why. One of the books I read was a survey of then-current research on flash memory. At the time, flash memory relied on some behaviors that were well characterized but not really understood. There were theories about how the underlying physical mechanisms might work, but determining which theory was correct was still an open question.&lt;/p&gt;
&lt;p&gt;The next year, I had a much more educational internship at IBM. I was attached to a logic design team on the POWER6, and since they didn’t really know what to do with me, they had me do verification on the logic they were writing. They had a relatively new tool called &lt;a href=&quot;https://danluu.com/testing/#fn:S&quot;&gt;SixthSense, which you can think of as a souped-up quickcheck&lt;/a&gt;. The obvious skill I learned was how to write tests using a fancy testing framework, but the meta-thing I learned which has been even more useful is the fact that writing a test-case generator and a checker is often much more productive than the manual test-case writing that passes for automated testing in most places.&lt;/p&gt;
&lt;p&gt;The other thing I encountered for the first time at IBM was version control (CVS, unfortunately). Looking back, I find it a bit surprising that not only did I never use version control in any of my classes, but I’d never met any other students who were using version control. My IBM internship was between undergrad and grad school, so I managed to get a B.S. degree without ever using or seeing anyone use version control.&lt;/p&gt;
&lt;h4 id=&quot;computer-science&quot;&gt;Computer Science&lt;/h4&gt;
&lt;p&gt;I took a couple of CS classes. The first was algorithms, which was poorly taught and so heavily curved as a result that I got an A despite not learning anything at all. The course involved no programming and while I could have done some implementation in my free time, I was much more interested in engineering and didn’t try to apply any of the material.&lt;/p&gt;
&lt;p&gt;The second course was databases. There were a couple of programming projects, but they were all projects where you got some scaffolding and only had to implement a few key methods to make things work, so it was possible to do ok without having any idea how to program. I got involved in a competition to see who could attend fewest possible classes, didn’t learn anything, and scraped by with a B.&lt;/p&gt;
&lt;h3 id=&quot;grad-school-2003-2005&quot;&gt;Grad school (2003 - 2005)&lt;/h3&gt;
&lt;p&gt;After undergrad, I decided to go to grad school for a couple of silly reasons. One was a combination of “why not?” and the argument that most of professors gave, which was that you’ll never go if you don’t go immediately after undergrad because it’s really hard to go back to school later. But the reason that people don’t go back later is because they have more information (they know what both school and work are like), and they almost always choose work! The other major reason was that I thought I’d get a more interesting job with a master’s degree. That’s not obviously wrong, but it appears to be untrue in general for people going into electrical engineering and programming.&lt;/p&gt;
&lt;p&gt;I don’t know that I learned anything that I use today, either in the direct sense or in a meta sense. I had some great professors and I made some good friends, but I think that this wasn’t a good use of time because of two bad decisions I made at the age of 19 or 20. Rather than attended a school that had a lot of people working in an area I was interested in, I went with a school that gave me a fellowship that only had one person working in an area I was really interested. That person left just before I started.&lt;/p&gt;
&lt;p&gt;I ended up studying optics, and while learning a new field was a lot of fun, the experience was of no particular value to me, and I could have had fun studying something I had more of an interest in.&lt;/p&gt;
&lt;p&gt;While I was officially studying optics, I still spent a lot of time learning unrelated things. At one point, I decided I should learn Lisp or Haskell, probably because of something Paul Graham wrote. I couldn’t find a Lisp textbook in the library, but I found a Haskell textbook. After I worked through the exercises, I had no idea how to accomplish anything practical. But I did learn about list comprehensions and got in the habit of using higher-order functions.&lt;/p&gt;
&lt;p&gt;Based on internet comments and advice, I had the idea learning more languages would teach me how to be a good programmer so I worked through introductory books on Python and Ruby. As far as I can tell, this taught me basically nothing useful and I would have been much better off learning about a specific area (like algorithms or networking) than learning lots of languages.&lt;/p&gt;
&lt;h3 id=&quot;first-real-job-2005-2013&quot;&gt;First real job (2005 - 2013)&lt;/h3&gt;
&lt;p&gt;Towards the end of grad school, I mostly looked for, and found, electrical/computer engineering jobs. The one notable exception was Google, which called me up in order to fly me out to Mountain View for an interview. I told them that they probably had the wrong person because they hadn’t even done a phone screen, so they offered to do a phone interview instead. I took the phone interview expecting to fail because I didn’t have any CS background, and I failed as expected. In retrospect, I should have asked to interview for a hardware position, but at the time I didn’t know they had hardware positions, even though they’d been putting together their own servers and designing some of their own hardware for years.&lt;/p&gt;
&lt;p&gt;Anyway, I ended up at a little chip company called Centaur. I was hesitant about taking the job because the interview was the easiest interview I had at any company, which made me wonder if they had a low hiring bar, and therefore relatively weak engineers. It turns out that, on average, that’s the best group of people I’ve ever worked with. I didn’t realize it at the time, but this would later teach me that companies that claim to have brilliant engineers because they have super hard interviews are full of it, and that the interview difficulty one-upmanship a lot of companies promote is more of a prestige play than anything else.&lt;/p&gt;
&lt;p&gt;But I’m getting ahead of myself – my first role was something they call “regression debug”, which included debugging test failures for both newly generated tests as well as regression tests. The main goal of this job was to teach new employees the ins-and-outs of the x86 architecture. At the time, Centaur’s testing was very heavily based on chip-level testing done by injecting real instructions, interrupts, etc., onto the bus, so debugging test failures taught new employees everything there is to know about x86.&lt;/p&gt;
&lt;p&gt;The Intel x86 manual is thousands of pages long and it isn’t sufficient to implement a compatible x86 chip. When Centaur made its first x86 chip, they followed the Intel manual in perfect detail, and left all instances of undefined behavior up to individual implementers. When they got their first chip back and tried it, they found that some compilers produced code that relied on the behavior that’s technically undefined on x86, but happened to always be the same on Intel chips. While that’s technically a compiler bug, you can’t ship a chip that isn’t compatible with actually existing software, and ever since then, Centaur has implemented x86 chips by making sure that the chips match the exact behavior of Intel chips, down to matching officially undefined behavior.&lt;/p&gt;
&lt;p&gt;For years afterwards, I had encyclopedic knowledge of x86 and could set bits in control registers and &lt;a href=&quot;https://en.wikipedia.org/wiki/Model-specific_register&quot;&gt;MSRs&lt;/a&gt; from memory. I didn’t have a use for any of that knowledge at any future job, but the meta-skill of not being afraid of low-level hardware comes in handy pretty often, especially when I run into compiler or chip bugs. People look at you like you’re a crackpot if you say you’ve found a hardware bug, but because we were so careful about characterizing the exact behavior of Intel chips, we would regularly find bugs and then have discussions about whether we should match the bug or match the spec (the Intel manual).&lt;/p&gt;
&lt;p&gt;The other thing I took away from the regression debug experience was a lifelong love of automation. Debugging often involves a large number of &lt;a href=&quot;https://danluu.com/teach-debugging/&quot;&gt;mechanical steps&lt;/a&gt;. After I learned enough about x86 that debugging became boring, I started automating debugging. At that point, I knew how to write simple scripts but didn’t really know how to program, so I wasn’t able to totally automate the process. However, I was able to automate enough that, for 99% of failures, I just had to glance at a quick summary to figure out what the bug was, rather than spend what might be hours debugging. That turned what was previously a full-time job into something that took maybe 30-60 minutes a day (excluding days when I’d hit a bug that involved some obscure corner of x86 I wasn’t already familiar with, or some bug that my script couldn’t give a useful summary of).&lt;/p&gt;
&lt;p&gt;At that point, I did two things that I’d previously learned in internships. First, I started reading at work. I began with online commentary about programming, but there wasn’t much of that, so I asked if I could expense books and read them at work. This seemed perfectly normal because a lot of other people did the same thing, and there were at least two people who averaged more than one technical book per week, including one person who averaged a technical book every 2 or 3 days.&lt;/p&gt;
&lt;p&gt;I settled in at a pace of somewhere between a book a week and a book a month. I read a lot of engineering books that imparted some knowledge that I no longer use, now that I spend most of my time writing software; some “big idea” software engineering books like Design Patterns and Refactoring, which I didn’t really appreciate because I was just writing scripts; and a ton of books on different programming languages, which doesn’t seem to have had any impact on me.&lt;/p&gt;
&lt;p&gt;The only book I read back then that changed how I write software in a way that’s obvious to me was &lt;a href=&quot;https://www.amazon.com/gp/product/0465050654/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;tag=abroaview-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0465050654&amp;amp;linkId=48b09d6605f7fcaa58922dcf4060a7df&quot;&gt;The Design of Everyday Things&lt;/a&gt;. The core idea of the book is that while people beat themselves up for failing to use hard-to-understand interfaces, we should blame designers for designing poor interfaces, not users for failing to use them.&lt;/p&gt;
&lt;p&gt;If you ever run into a door that you incorrectly try to pull instead of push (or vice versa) and have some spare time, try watching how other people use the door. Whenever I do this, I’ll see something like half the people who try the door use it incorrectly. That’s a design flaw!&lt;/p&gt;
&lt;p&gt;The Design of Everyday Things has made me a lot more receptive to API and UX feedback, and a lot less tolerant of programmers who say things like “it’s fine – everyone knows that the arguments to &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; just have to be given in the opposite order” or “Duh! Everyone knows that you just need to click on the menu &lt;code&gt;X&lt;/code&gt;, select &lt;code&gt;Y&lt;/code&gt;, navigate to tab &lt;code&gt;Z&lt;/code&gt;, open &lt;code&gt;AA&lt;/code&gt;, go to tab &lt;code&gt;AB&lt;/code&gt;, and then slide the setting to &lt;code&gt;AC&lt;/code&gt;.”&lt;/p&gt;
&lt;p&gt;I don’t think all of that reading was a waste of time, exactly, but I would have been better off picking a few sub-fields in CS or EE and learning about them, rather than reading the sorts of books O’Reilly and Manning produce.&lt;/p&gt;
&lt;p&gt;It’s not that these books aren’t useful, it’s that almost all of them are written to make sense without any particular background beyond what any random programmer might have, and you can only get so much out of reading your 50th book targeted at random programmers. IMO, most non-academic conferences have the same problem. As a speaker, you want to give a talk that works for everyone in the audience, but a side effect of that is that many talks have relatively little educational value to experienced programmers who have been to a few conferences.&lt;/p&gt;
&lt;p&gt;I think I got positive things out of all that reading as well, but I don’t know yet how to figure out what those things are.&lt;/p&gt;
&lt;p&gt;As a result of my reading, I also did two things that were, in retrospect, quite harmful.&lt;/p&gt;
&lt;p&gt;One was that I really got into functional programming and used a functional style everywhere I could. Immutability, higher-order X for any possible value of X, etc. The result was code that I could write and modify quickly that was incomprehensible to anyone but a couple of coworkers who were also into functional programming.&lt;/p&gt;
&lt;p&gt;The second big negative was that I became convinced that Perl was causing us a lot of problems. We had Perl scripts that were hard to understand and modify. They’d often be thousands of lines of code with only one or two functions and no tests which used every obscure Perl feature you could think of. Static! Magic sigils! Implicit everything! You name it, we used it. For me, the last straw was when I inserted a new function between two functions which didn’t explicitly pass any arguments and return values – and broke the script because one of the functions was returning a value into an implicit variable which was getting read by the next function. By putting another function in between the two closely coupled functions, I broke the script.&lt;/p&gt;
&lt;p&gt;After that, I convinced a bunch of people to use Ruby and started using it myself. The problem was that I only managed to convince half of my team to do this The other half kept using Perl, which resulted in language fragmentation. Worse yet, in another group, they also got fed up with Perl, but started using Python, resulting in the company having code in Perl, Python, and Ruby.&lt;/p&gt;
&lt;p&gt;Centaur has an explicit policy of not telling people how to do anything, which precludes having team-wide or company-wide standards. Given the environment, using a “better” language seemed like a natural thing to do, but I didn’t recognize the cost of fragmentation until, later in my career, I saw a company that uses standardization to good effect.&lt;/p&gt;
&lt;p&gt;Anyway, while I was causing horrific fragmentation, I also automated away most of my regression debug job. I got bored of spending 80% of my time at work reading and I started poking around for other things to do, which is something I continued for my entire time at Centaur. I like learning new things, so I did almost everything you can do related to chip design. The only things I didn’t do were circuit design (the TL of circuit design didn’t want a non-specialist interfering in his area) and a few roles where I was told “Dan, you can do that if you really want to, but we pay you too much to have you do it full-time.”&lt;/p&gt;
&lt;p&gt;If I hadn’t interviewed regularly (about once a year, even though I was happy with my job), I probably would’ve wondered if I was stunting my career by doing so many different things, because the big chip companies produce specialists pretty much exclusively. But in interviews I found that my experience was valued because it was something they couldn’t get in-house. The irony is that every single role I was offered would have turned me into a specialist. Big chip companies talk about wanting their employees to move around and try different things, but when you dig into what that means, it’s that they like to have people work one very narrow role for two or three years before moving on to their next very narrow role.&lt;/p&gt;
&lt;p&gt;For a while, I wondered if I was doomed to either eventually move to a big company and pick up a hyper-specialized role, or stay at Centaur for my entire career (not a bad fate – Centaur has, by far, the lowest attrition rate of any place I’ve worked because people like it so much). But I later found that software companies building hardware accelerators actually have generalist roles for hardware engineers, and that software companies have generalist roles for programmers, although that might be a moot point since most software folks would probably consider me an extremely niche specialist.&lt;/p&gt;
&lt;p&gt;Regardless of whether spending a lot of time in different hardware-related roles makes you think of me as a generalist or a specialist, I picked up a lot of skills which came in handy &lt;a href=&quot;http://www.anandtech.com/show/10340/googles-tensor-processing-unit-what-we-know&quot;&gt;when I worked on hardware accelerators&lt;/a&gt;, but that don’t really generalize to the pure software project I’m working on today. A lot of the meta-skills I learned transfer over pretty well, though.&lt;/p&gt;
&lt;p&gt;If I had to pick the three most useful meta-skills I learned back then, I’d say they were debugging, bug tracking, and figuring out how to approach hard problems.&lt;/p&gt;
&lt;p&gt;Debugging is a funny skill to claim to have because everyone thinks they know how to debug. For me, I wouldn’t even say that I learned how to debug at Centaur, but that I learned how to be persistent. Non-deterministic hardware bugs are so much worse than non-deterministic software bugs that I always believe I can track down software bugs. In the absolute worst case, when there’s a bug that isn’t caught in logs and can’t be caught in a debugger, I can always add tracing information until the bug becomes obvious. The same thing’s true in hardware, but “recompiling” to add tracing information takes 3 months per “recompile”; compared to that experience, tracking down a software bug that takes three months to figure out feels downright pleasant.&lt;/p&gt;
&lt;p&gt;Bug tracking is another meta-skill that everyone thinks they have, but when when I look at most projects I find that they literally don’t know what bugs they have and they lose bugs all the time due to a failure to triage bugs effectively. I didn’t even know that I’d developed this skill until after I left Centaur and saw teams that don’t know how to track bugs. At Centaur, depending on the phase of the project, we’d have between zero and a thousand open bugs. The people I worked with most closely kept a mental model of what bugs were open; this seemed totally normal at the time, and the fact that a bunch of people did this made it easy for people to be on the same page about the state of the project and which areas were ahead of schedule and which were behind.&lt;/p&gt;
&lt;p&gt;Outside of Centaur, I find that I’m lucky to even find one person who’s tracking what the major outstanding bugs are. Until I’ve been on the team for a while, people are often uncomfortable with the idea of taking a major problem and putting it into a bug instead of fixing it immediately because they’re so used to bugs getting forgotten that they don’t trust bugs. But that’s what bug tracking is for! I view this as analogous to teams whose test coverage is so low and staging system is so flaky that they don’t trust themselves to make changes because they don’t have confidence that issues will be caught before hitting production. It’s a huge drag on productivity, but people don’t really see it until they’ve seen the alternative.&lt;/p&gt;
&lt;p&gt;Perhaps the most important meta-skill I picked up was learning how to solve large problems. When I joined Centaur, I saw people solving problems I didn’t even know how to approach. There were folks like Glenn Henry, a fellow from IBM back when IBM was at the forefront of computing, and Terry Parks, who Glenn called the best engineer he knew at IBM. It wasn’t that they were 10x engineers; they didn’t just work faster. In fact, I can probably type 10x as quickly as Glenn (a hunt and peck typist) and could solve trivial problems that are limited by typing speed more quickly than him. But Glenn, Terry, and some of the other wizards knew how to approach problems that I couldn’t even get started on.&lt;/p&gt;
&lt;p&gt;I can’t cite any particular a-ha moment. It was just eight years of work. When I went looking for problems to solve, Glenn would often hand me a problem that was slightly harder than I thought possible for me. I’d tell him that I didn’t think I could solve the problem, he’d tell me to try anyway, and maybe 80% of the time I’d solve the problem. We repeated that for maybe five or six years before I stopped telling Glenn that I didn’t think I could solve the problem. Even though I don’t know when it happened, I know that I eventually started thinking of myself as someone who could solve any open problem that we had.&lt;/p&gt;
&lt;h3 id=&quot;grad-school-again-2008-2010&quot;&gt;Grad school, again (2008 - 2010)&lt;/h3&gt;
&lt;p&gt;At some point during my tenure at Centaur, I switched to being part-time and did a stint taking classes and doing a bit of research at the local university. For reasons which I can’t recall, I split my time between software engineering and CS theory.&lt;/p&gt;
&lt;p&gt;I read a lot of software engineering papers and came to the conclusion that we know very little about what makes teams (or even individuals) productive, and that the field is unlikely to have actionable answers in the near future. I also got my name on a couple of papers that I don’t think made meaningful contributions to the state of human knowledge.&lt;/p&gt;
&lt;p&gt;On the CS theory side of things, I took some graduate level theory classes. That was genuinely educational and I really “got” algorithms for the first time in my life, as well as complexity theory, etc. I could have gotten my name on a paper that I didn’t think made a meaningful contribution to the state of human knowledge, but my would-be co-author felt the same way and we didn’t write it up.&lt;/p&gt;
&lt;p&gt;I originally tried grad school again because I was considering getting a PhD, but I didn’t find the work I was doing to be any more “interesting” than the work I had at Centaur, and after seeing the job outcomes of people in the program, I decided there was less than 1% chance that a PhD would provide any real value to me and went back to Centaur full time.&lt;/p&gt;
&lt;h3 id=&quot;rc-https-www-recurse-com-scout-click-t-b504af89e87b77920c9b60b2a1f6d5e8-spring-2013&quot;&gt;&lt;a href=&quot;https://www.recurse.com/scout/click?t=b504af89e87b77920c9b60b2a1f6d5e8&quot;&gt;RC&lt;/a&gt; (Spring 2013)&lt;/h3&gt;
&lt;p&gt;After eight years at Centaur, I wanted to do something besides microprocessors. I had enough friends at other hardware companies to know that I’d be downgrading in basically every dimension except name recognition if I switched to another hardware company, so I started applying to software jobs.&lt;/p&gt;
&lt;p&gt;While I was applying to jobs, I heard about &lt;a href=&quot;https://www.recurse.com/scout/click?t=b504af89e87b77920c9b60b2a1f6d5e8&quot;&gt;RC&lt;/a&gt;. It sounded great, maybe even too great: when I showed my friends what people were saying about it, they thought the comments were fake. It was a great experience, and I can see why so many people raved about it, to the point where real comments sound impossibly positive. It was transformative for a lot of people; I heard a lot of exclamations like “I learned more here in 3 months here than in N years of school” or “I was totally burnt out and this was the first time I’ve been productive in a year”. It wasn’t transformative for me, but it was as fun a 3 month period as I’ve ever had, and I even learned a thing or two.&lt;/p&gt;
&lt;p&gt;From a learning standpoint, the one major thing I got out of RC was feedback from &lt;a href=&quot;https://github.com/majek&quot;&gt;Marek&lt;/a&gt;, whom I worked with for about two months. While the freedom and lack of oversight at Centaur was great for letting me develop my ability to work independently, I basically didn’t get any feedback on my work since they didn’t do code review while I was there, and I never really got any actionable feedback in performance reviews.&lt;/p&gt;
&lt;p&gt;Marek is really great at giving feedback while pair programming, and working with him broke me of a number of bad habits as well as teaching me some new approaches for solving problems. At a meta level, RC is relatively more focused on pair programming than most places and it got me to pair program for the first time. I hadn’t realized how effective pair programming with someone is in terms of learning how they operate and what makes them effective. Since then, I’ve asked a number of super productive programmers to pair program and I’ve gotten something out of it every time.&lt;/p&gt;
&lt;h3 id=&quot;second-real-job-2013-2014&quot;&gt;Second real job (2013 - 2014)&lt;/h3&gt;
&lt;p&gt;I was in the right place at the right time to land on a project that was just transitioning from &lt;a href=&quot;https://www.linkedin.com/in/andrew-phelps-31438b6&quot;&gt;Andy Phelps’ pet 20% time project&lt;/a&gt; into what would later be called the &lt;a href=&quot;https://www.google.com/patents/WO2016186801A1&quot;&gt;Google&lt;/a&gt; &lt;a href=&quot;https://www.google.com/patents/US20160342889&quot;&gt;TPU&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As far as I can tell, it was pure luck that I was the second engineer on the project as opposed to the fifth or the tenth. I got to see what it looks like to take a project from its conception and turn it into something real. There was a sense in which I got that at Centaur, but every project I worked on was either part of a CPU, or a tool whose goal was to make CPU development better. This was the first time I worked on a non-trivial project from its inception, where I wasn’t just working on part of the project but the whole thing.&lt;/p&gt;
&lt;p&gt;That would have been educational regardless of the methodology used, but it was a particularly great learning experience because of how the design was done. We started with a lengthy discussion on what core algorithm we were going to use. After we figured out an algorithm that would give us acceptable performance, we coded up design docs for every major module before getting serious about implementation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/codinghorror/status/724541041827713024&quot;&gt;Many people consider writing design docs to be a waste of time nowadays&lt;/a&gt;, but going through this process, which took months, had a couple big advantages. The first is that working through a design collaboratively teaches everyone on the team everyone else’s tricks. It’s a lot like the kind of skill transfer you get with pair programming, but applied to design. This was great for me, because as someone with only a decade of experience, I was one of the least experienced people in the room.&lt;/p&gt;
&lt;p&gt;The second is that the iteration speed is much faster in the design phase, where throwing away a design just means erasing a whiteboard. Once you start coding, iterating on the design can mean throwing away code; for infrastructure projects, that can easily be person-years or even tens of persons-years of work. Since working on the TPU project, I’ve seen a couple of teams on projects of similar scope insist on getting “working” code as soon as possible. In every single case, that resulted in massive delays as huge chunks of code had to be re-written, and in a few cases the project was fundamentally flawed in a way that required the team had to start over from scratch.&lt;/p&gt;
&lt;p&gt;I get that on product-y projects, where you can’t tell how much traction you’re going to get from something, you might want to get an &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_viable_product&quot;&gt;MVP&lt;/a&gt; out the door and iterate, but for pure infrastructure, it’s often possible to predict how useful something will be in the design phase.&lt;/p&gt;
&lt;p&gt;The other big thing I got out of the job was a better understanding of what’s possible when a company makes a real effort to make engineers productive. Something I’d seen repeatedly at Centaur was that someone would come in, take a look around, find the tooling to be a huge productivity sink, and then make a bunch of improvements. They’d then feel satisfied that they’d improved things a lot and then move on to other problems. Then the next new hire would come in, have the same reaction, and do the same thing. The result was tools that improved a lot while I was there, but not to the point where someone coming in would be satisfied with them. Google was the only place I’d worked where a lot of the tools seem like magic compared to what exists in the outside world. Sure, people complain that a lot of the tooling is falling over, that there isn’t enough documentation, and that a lot of it is out of date. All true. But the situation is much better than it’s been at any other company I’ve worked at. That doesn’t seem to actually be a competitive advantage for Google’s business, but it makes the development experience really pleasant.&lt;/p&gt;
&lt;h3 id=&quot;third-real-job-2015-2017&quot;&gt;Third real job (2015 - 2017)&lt;/h3&gt;
&lt;p&gt;This was a surprising experience. I think I’m too close to it to really know what I got out of the experience, so fully filling in this section is a TODO.&lt;/p&gt;
&lt;p&gt;However, I can already tell that this experienced broadened my horizons. Two examples are: I got out of the experience are a better understanding of how sales worked and I have a better idea of the range of processes that exist across different teams.&lt;/p&gt;
&lt;p&gt;To the first point, the company produced some decent products backed by a world class sales team. Watching the sales team work was a revelation. The sales people would regularly go in and create sales even when the product wasn’t the best thing for customers. I’d always known that sales was at least as important as engineering, but seeing this in action was different from knowing in the abstract.&lt;/p&gt;
&lt;p&gt;To the second point, I once wrote a blog post on &lt;a href=&quot;https://danluu.com/broken-builds/&quot;&gt;build uptime&lt;/a&gt; where I looked at uptime data that seemed surprisingly bad to me and said&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;at every place I’ve worked, two 9s of reliability (99% uptime) on the build would be considered bad. That would mean that the build is failing for over three and a half days a year, or seven hours per month. Even three 9s (99.9% uptime) is about forty-five minutes of downtime a month. That’s kinda ok if there isn’t a hard system in place to prevent people from checking in bad code, but it’s quite bad for a place that’s serious about having working builds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A number of people responded with comments like “lololol that guy has been pretty lucky in the team’s he’s worked on”. I didn’t think much of those comments until this job. At my first team on this company, we couldn’t build on most days for most of the time I was there! My second team was better, but I would regularly get broken builds when I fetched and merged from &lt;code&gt;origin/master&lt;/code&gt;. I had no idea that companies that considered themselves serious about development could have practices like this and it’s good to have this new information.&lt;/p&gt;
&lt;h3 id=&quot;rc-https-www-recurse-com-scout-click-t-b504af89e87b77920c9b60b2a1f6d5e8-2017-present&quot;&gt;&lt;a href=&quot;https://www.recurse.com/scout/click?t=b504af89e87b77920c9b60b2a1f6d5e8&quot;&gt;RC&lt;/a&gt; (2017 - present)&lt;/h3&gt;
&lt;p&gt;I was pretty burnt out after my last job, so I went back to RC to do fun programming-related stuff and recharge. I haven’t written up most of what I’ve worked on (e.g., an analysis of 80k games on Terra Mystica, MTA (NYC) subway data analysis, etc.). I’ve written up a few things, like latency analysis of &lt;a href=&quot;https://danluu.com/input-lag/&quot;&gt;computers&lt;/a&gt;, &lt;a href=&quot;https://danluu.com/term-latency/&quot;&gt;terminals&lt;/a&gt;, &lt;a href=&quot;https://danluu.com/keyboard-latency/&quot;&gt;keyboards&lt;/a&gt;, and &lt;a href=&quot;https://danluu.com/web-bloat/&quot;&gt;websites&lt;/a&gt;, though.&lt;/p&gt;
&lt;p&gt;One thing my time at RC has got me thinking about is why it’s so hard to get &lt;a href=&quot;https://twitter.com/danluu/status/931018170420400128&quot;&gt;paid well&lt;/a&gt; to write. There appears to be a lot of demand for “good” writing, but companies don’t seem very willing to create roles for people who could program but want to write. Steve Klabnik has had a tremendous impact on Rust through his writing, probably more impact than the median programmer on most projects, but my impression is that he’s taking a significant pay cut over what he could make as a programmer in order to do this really useful and important thing.&lt;/p&gt;
&lt;p&gt;I’ve tried pitching this kind of role at a few places and the response so far has mostly been a combination of:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We value writing! I don’t think it makes sense to write full-time or even half-time, but you join my team where we support writing and you can write as a 20%-time project or in your spare time!&lt;/li&gt;
&lt;li&gt;Uhhh, we could work something out, but why would anyone who can program want to write?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Neither of these responses makes me think that writing would actually be as valued as programming on those teams even if writing is more valued on those teams relative to most. There are some “developer evangelist” roles that involve writing, but when I read engineering blogs written by people with that title, most of the writing appears to be thinly disguised press releases (there are obviously exceptions to this, but even in the cases where blogs have interesting engineering output, the interesting output is often interleaved with pseudo press releases). In addition to be boring, that kind of thing seems pretty ineffective. At one company I worked for, I ran the traffic numbers for their developer evanglist blogs vs. my own blog, and there were a lot of months where my blog got more traffic than all of their hosted evangelist blogs combined. I don’t think it’s surprising to find that programmers would rather read explanations/analysis/history than PR, but it seems difficult to convince the right people of this, so I’ll probably go back to a programming job after this. We’ll see.&lt;/p&gt;
&lt;p&gt;BTW, this isn’t to say that I don’t enjoy programming or don’t think that it’s important. It’s just that writing seems undervalued in a way that makes it relatively easy to have outsized impact through writing. But the same the same forces that make it easy to have outsized impact also make it difficult to get &lt;a href=&quot;https://danluu.com/startup-tradeoffs/&quot;&gt;paid well&lt;/a&gt;!&lt;/p&gt;
&lt;h3 id=&quot;what-about-the-bad-stuff&quot;&gt;What about the bad stuff?&lt;/h3&gt;
&lt;p&gt;When I think about my career, it seems to me that it’s been one lucky event after the next. I’ve been unlucky a few times, but I don’t really know what to take away from the times I’ve been unlucky.&lt;/p&gt;
&lt;p&gt;For example, I’d consider my upbringing to be mildly abusive. I remember having nights where I couldn’t sleep because I’d have nightmares about my father every time I fell asleep. Being awake during the day wasn’t a great experience, either. That’s obviously not good and in retrospect it seems pretty directly related to the academic problems I had until I moved out, but I don’t know that I could give useful advice to a younger version of myself. Don’t be born into an abusive family? That’s something people would already do if they had any control over the matter.&lt;/p&gt;
&lt;p&gt;Or to pick a more recent example, I once joined a team that scored a 1 on the &lt;a href=&quot;http://www.joelonsoftware.com/articles/fog0000000043.html&quot;&gt;Joel Test&lt;/a&gt;. The Joel Test is now considered to be obsolete because it awards points for things like “Do you have testers?” and “Do you fix bugs before writing new code?”, which aren’t considered best practices by most devs today. Of the items that aren’t controversial, many seem so obvious that they’re not worth asking about, things like:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Do you use source control?&lt;/li&gt;
&lt;li&gt;Can you make a build in one step?&lt;/li&gt;
&lt;li&gt;Do you make (at least) daily builds?&lt;/li&gt;
&lt;li&gt;Do you have a bug database?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For anyone who cares about this kind of thing, it’s clearly not a great idea to join a team that does, at most, 1 item off of Joel’s checklist (and the 1 wasn’t any of the above). Getting first-hand experience on a team that scored a 1 didn’t give me any new information that would make me reconsider my opinion.&lt;/p&gt;
&lt;p&gt;You might say that I should have asked about those things. It’s true! I should have, and I probably will in the future. However, when I was hired, the TL who was against version control and other forms of automation hadn’t been hired yet, so I wouldn’t have found out about this if I’d asked. Furthermore, even if he’d already been hired, I’m still not sure I would have found out about it – this is the only time I’ve joined a team and then found that most of the factual statements made during the recruiting process were untrue. I made sure to ask specific, concrete, questions about the state of the project, processes, experiments that had been run, etc., but it turned out the answers were alright falsehoods. When I was on that team, every day featured a running joke between team members about how false the recruiting pitch was!&lt;/p&gt;
&lt;p&gt;I could try to prevent similar problems in the future by asking for concrete evidence of factual claims (e.g., if someone claims the attrition rate is X, I could ask for access to the HR database to verify), but considering that I have a finite amount of time and the relatively low probability of being told outright falsehoods, I think I’m going to continue to prioritize finding out other information when I’m considering a job and just accept that there’s a tiny probability I’ll end up in a similar situation in the future.&lt;/p&gt;
&lt;p&gt;When I look at the bad career-related stuff I’ve experienced, almost all of it falls into one of two categories: something obviously bad that was basically unavoidable, or something obviously bad that I don’t know how to reasonably avoid, given limited resources. I don’t see much to learn from that. That’s not to say that I haven’t made and learned from mistakes. I’ve made a lot of mistakes and do a lot of things differently as a result of mistakes! But my worst experiences have come out of things that I don’t know how to prevent in any reasonable way.&lt;/p&gt;
&lt;p&gt;This also seems to be true for most people I know. For example, something I’ve seen a lot is that a friend of mine will end up with a manager whose view is that managers are people who dole out rewards and punishments (as opposed to someone who believes that managers should make the team as effective as possible, or someone who believes that managers should help people grow). When you have a manager like that, a common failure mode is that you’re given work that’s a bad fit, and then maybe you don’t do a great job because the work is a bad fit. If you ask for something that’s a better fit, that’s refused (why should you be rewarded with doing something you want when you’re not doing good work, instead you should be punished by having to do more of this thing you don’t like), which causes a spiral that ends in the person leaving or getting fired. In the most recent case I saw, the firing was a surprise to both the person getting fired and their closest co-workers: my friend had managed to find a role that was a good fit despite the best efforts of management; when management decided to fire my friend, they didn’t bother to consult the co-workers on the new project, who thought that my friend was doing great and had been doing great for months!&lt;/p&gt;
&lt;p&gt;I hear a lot of stories like that, and I’m happy to listen because I like stories, but I don’t know that there’s anything actionable here. Avoid managers who prefer doling out punishments to helping their employees? Obvious but not actionable.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The most common sort of career advice I see is “you should do what I did because I’m successful”. It’s usually phrased differently, but that’s the gist of it. That basically never works. When I compare notes with friends and acquaintances, it’s pretty clear that my career has been unusual in a number of ways, but it’s not really clear why.&lt;/p&gt;
&lt;p&gt;Just for example, I’ve almost always had a supportive manager who’s willing to not only let me learn whatever I want on my own, but who’s willing to expend substantial time and effort to help me improve as an engineer. Most folks I’ve talked to have never had that. Why the difference? I have no idea.&lt;/p&gt;
&lt;p&gt;One &lt;a href=&quot;https://www.youtube.com/watch?v=RoEEDKwzNBw&quot;&gt;story&lt;/a&gt; might be: the two times I had unsupportive managers, I quickly found other positions, whereas a lot of friends of mine will stay in roles that are a bad fit for years. Maybe I could spin it to make it sound like the moral of the story is that you should leave roles sooner than you think, but both of the bad situations I ended up in, I only ended up in because I left a role sooner than I should have, so the advice can’t be “prefer to leave roles sooner than you think”. Maybe the moral of the story should be “leave bad roles more quickly and stay in good roles longer”, but that’s so obvious that it’s not even worth stating. This is arguably non-obvious because people do, in fact, stay in roles where they’re miserable, but when I think of people who do so, they fall into one of two categories. Either they’re stick for extrinsic reasons (e.g., need to wait out the visa clock) or they know that they should leave but can’t bring themselves to do so. There’s not much to do about the former case, and in the latter case, knowing that they should leave isn’t the problem. Every strategy that I can think of is either incorrect in the general case, or so obvious there’s no reason to talk about it.&lt;/p&gt;
&lt;p&gt;Another story might be: I’ve learned a lot of meta-skills that are valuable, so you should learn these skills. But you probably shouldn’t. The particular set of meta-skills I’ve picked have been great for me because they’re skills I could easily pick up in places I worked (often because I had a great mentor) and because they’re things I really strongly believe in doing. Your circumstances and core beliefs are probably different from mine and you have to figure out for yourself what it makes sense to learn.&lt;/p&gt;
&lt;p&gt;Yet another story might be: while a lot of opportunities come from serendipity, I’ve had a lot of opportunities because I spend a lot of time generating possible opportunities. When I passed around the draft of this post to some friends, basically everyone told me that I emphasized luck too much in my narrative and that all of my lucky breaks came from a combination of hard work and trying to create opportunities. While there’s a sense in which that’s true, many of my opportunities also came out of making outright bad decisions.&lt;/p&gt;
&lt;p&gt;For example, I ended up at Centaur because I turned down the chance to work at IBM for a terrible reason! At the end of my internship, my manager made an attempt to convince me to stay on as a full-time employee, but I declined because I was going to grad school. But I was only going to grad school because I wanted to get a microprocessor logic design position, something I thought I couldn’t get with just a bachelor’s degree. But I could have gotten that position if I hadn’t turned my manager down! I’d just forgotten the reason that I’d decided to go to grad school and incorrectly used the cached decision as a reason to turn down the job. By sheer luck, that happened to work out well and I got better opportunities than anyone I know from my intern cohort who decided to take a job at IBM. Have I “mostly” been lucky or prepared? Hard to say; maybe even impossible.&lt;/p&gt;
&lt;p&gt;Careers don’t have the logging infrastructure you’d need to determine the impact of individual decisions. Careers in programming, anyway. Many sports now track play-by-play data in a way that makes it possible to try to determine how much of success in any particular game or any particular season was luck and how much was skill.&lt;/p&gt;
&lt;p&gt;Take baseball, which is one of the better understood sports. If we look at the statistical understanding we have of performance today, it’s clear that almost no one had a good idea about what factors made players successful 20 years ago. One thing I find particularly interesting is that we now have much better understanding of which factors are fundamental and which factors come down to luck, and it’s not at all what almost anyone would have thought 20 years ago. We can now look at a pitcher and say something like “they’ve gotten unlucky this season, but their foo, bar, and baz rates are all great so it appears to be bad luck on balls in play as opposed any sort of decline in skill”, and we can also make statements like “they’ve done well this season but their fundamental stats haven’t moved so it’s likely that their future performance will be no better than their past performance before this season”. We couldn’t have made a statement like that 20 years ago. And this is a sport that’s had play-by-play video available going back what seems like forever, where play-by-play stats have been kept for a century, etc.&lt;/p&gt;
&lt;p&gt;In this sport where everything is measured, it wasn’t until relatively recently that we could disambiguate between fluctuations in performance due to luck and fluctuations due to changes in skill. And then there’s programming, where it’s generally believed to be impossible to measure people’s performance and the state of the art in grading people’s performance is that you ask five people for their comments on someone and then aggregate the comments. If we’re only just now able to make comments on what’s attributable to luck and what’s attributable to skill in a sport where every last detail of someone’s work is available, how could we possibly be anywhere close to making claims about what comes down to luck vs. other factors in something as nebulous as a programming career?&lt;/p&gt;
&lt;p&gt;In conclusion, life is messy and I don’t have any advice.&lt;/p&gt;
&lt;h3 id=&quot;appendix-a-meta-skills-i-d-like-to-learn&quot;&gt;Appendix A: meta-skills I’d like to learn&lt;/h3&gt;
&lt;h4 id=&quot;documentation&quot;&gt;Documentation&lt;/h4&gt;
&lt;p&gt;I once worked with &lt;a href=&quot;https://www.linkedin.com/in/jared-davis-a8b62611b&quot;&gt;Jared Davis, a documentation wizard&lt;/a&gt; whose documentation was so good that I’d go to him to understand how a module worked before I talked to the owner the module. As far as I could tell, he wrote documentation on things he was trying to understand to make life easier for himself, but his documentation was so good that it was a force multiplier for the entire company.&lt;/p&gt;
&lt;p&gt;Later, at Google, I noticed a curiously strong correlation between the quality of initial design docs and the success of projects. Since then, I’ve tried to write solid design docs and documentation for my projects, but I still have a ways to go.&lt;/p&gt;
&lt;h4 id=&quot;fixing-totally-broken-danluu-com-wat-situations&quot;&gt;Fixing &lt;a href=&quot;https://danluu.com/wat/&quot;&gt;totally broken&lt;/a&gt; situations&lt;/h4&gt;
&lt;p&gt;So far, I’ve only landed on teams where things are much better than average and on teams where things are much worse than average. You might think that, because there’s so much low hanging fruit on teams that are much worse than average, it should be easier to improve things on teams that are terrible, but it’s just the opposite. The places that have a lot of problems have problems because something makes it hard to fix the problems.&lt;/p&gt;
&lt;p&gt;When I joined the team that scored a 1 on the Joel Test, it took months of campaigning just to get everyone to use version control.&lt;/p&gt;
&lt;p&gt;I’ve never seen an environment go from “bad” to “good” and I’d be curious to know what that looks like and how it happens. Yossi Kreinin’s thesis is that &lt;a href=&quot;http://yosefk.com/blog/people-can-read-their-managers-mind.html&quot;&gt;only management can fix broken situations&lt;/a&gt;. That might be true, but I’m not quite ready to believe it just yet, even though I don’t have any evidence to the contrary.&lt;/p&gt;
&lt;h3 id=&quot;appendix-b-other-how-i-became-a-programmer-stories&quot;&gt;Appendix B: other “how I became a programmer” stories&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mail-archive.com/kragen-tol@canonical.org/msg00184.html&quot;&gt;Kragen&lt;/a&gt;. Describes 27 years of learning to program. Heavy emphasis on conceptual phases of development (e.g., understanding how to use provided functions vs. understanding that you can write arbitrary functions)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://jvns.ca/blog/2015/02/17/how-i-learned-to-program-in-10-years/&quot;&gt;Julia Evans&lt;/a&gt;. Started programming on a TI-83 in 2004. Dabbled in programming until college (2006-2011) and has been working as a professional programmer ever since. Some emphasis on the “journey” and how long it takes to improve.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pgbovine.net/how-i-learned-programming.htm&quot;&gt;Philip Guo&lt;/a&gt;. A non-traditional story of learning to program, which might be surprising if you know that Philip’s career path was MIT -&amp;gt; Stanford -&amp;gt; Google.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tarmstrong/longcv/blob/master/bio.md&quot;&gt;Tavish Armstrong&lt;/a&gt;. 4th grade through college. Emphasis on particular technologies (e.g., LaTeX or Python).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://caitiem.com/2013/03/30/origin-story-becoming-a-game-developer/&quot;&gt;Caitie McCaffrey&lt;/a&gt;. Started programming in AP computer science. Emphasis on how interests led to a career in programming.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mattdeboard.net/2011/11/23/how-i-became-a-programmer/&quot;&gt;Matt DeBoard&lt;/a&gt;. Spent 12 weeks learning Django with the help of a mentor. Emphasis on the fact that it’s possible to become a programmer without programming background.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.kchodorow.com/blog/2010/11/30/how-i-became-a-programmer/&quot;&gt;Kristina Chodorow&lt;/a&gt;. Started in college. Emphasis on alternatives (math, grad school).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://michaelrbernste.in/2014/12/11/you-are-learning-haskell-right-now.html&quot;&gt;Michael Bernstein&lt;/a&gt;. Story of learning Haskell over the course of years. Emphasis on how long it took to become even minimally proficient.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Thanks to Leah Hanson, Lindsey Kuper, Kelley Eskridge, Jeshua Smith, Tejas Sapre, Joe Wilder, Adrien Lamarque, Maggie Zhou, Lisa Neigut, Steve McCarthy, Darius Bacon, Kaylyn Gibilterra, Sarah Ransohoff, @HamsterRaging, and “biktian” for comments/criticism/discussion.&lt;/small&gt;&lt;/p&gt;


&lt;footer&gt;
&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Tue, 26 Dec 2017 18:50:02 +0000</pubDate>
<dc:creator>deafcalculus</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://danluu.com/learning-to-program/</dc:identifier>
</item>
<item>
<title>A Dark Room: From Sabbatical Year to $800k</title>
<link>https://failory.com/battle-scars</link>
<guid isPermaLink="true" >https://failory.com/battle-scars</guid>
<description>&lt;div readability=&quot;91&quot;&gt;
&lt;p&gt;Sit back. This is gonna be a long one.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h2&gt;TL;DR:&lt;/h2&gt;
&lt;p&gt;Did the whole &quot;get a degree, get a job&quot; thing. Ended up being incredibly well paid, but horribly empty because of corporate America. Decided to rage quit, downsize (sell pretty much everything I own), and take a sabbatical. After binge coding on random crap, I partnered with a guy in Canada and ported a web based, incremental, text based game to iOS (A Dark Room iOS). Welp. It went viral and hit the #1 spot. That let me extend my sabbatical for another three years. I built four more games, none of which succeeded. Now I'm back in Corporate America (luckily only part time now... I make enough off my games and other assets to not have to work all year).&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h2&gt;The Long Version:&lt;/h2&gt;
&lt;h3&gt;Frustration:&lt;/h3&gt;
&lt;p&gt;There is such a heavy dose of luck in success. There are those that will give one thousand percent, and because the roll of the dice wasn't perfect, nothing materializes. They have as much love for the game development as I have... they've worked as hard as I have... but just didn't get a kiss from Lady Luck. And it sucks. It just isn't fair that they want to create more than their next breathe, but can't catch a good break to devote time to it. They have to look over at those that have the privaledge to take multiple rolls of the dice, eat their cake and have it too, and if everything still fails, they get bailed out by mommy and daddy.&lt;/p&gt;
&lt;p&gt;I was one of the lucky ones. I saved up for ten years, and was able to role _once_. I hit lucky number eleven. And even then, I still find myself having to grind in a 9 to 5 yet again. Sometimes it's fine. Other times I feel like I should have never taken that sabbatical and remained ignorant of the pure joy that comes from putting yourself in a creation.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;Before Sabbatical:&lt;/h3&gt;
&lt;p&gt;I did what you were supposed to do. Did well (really well) in school. Went to college. Got a degree in Software Engineering and Computer Science. Did internships and landed a job as a developer for an insurance company right out of college. I did that for three years (two years of internships, one year as a full time employee). I then went to work for a company that build veterinary software. Did that for a couple of years. I really really loved coding. Lived and breathed it. I interviewed at a prestigious consulting company and got in on the ground floor. Spent three years there only to be scooped up by another consulting powerhouse. So here I am with a disgusting $140,000 in total compensation. A sea of cubicals, souless sheep that want nothing more than to do their time and go home. I didn't belong cause I actually cared about my craft. I tried to compensate for my unfulfilling corporate work with open source development after hours. This put a toll on my familial relationships (spending 45 hours a week working, then trying to get another 30 hours on nights and weekends, doesn't leave much time for anything else). I was at the brink of collapse. Lose my sanity, my wife, or my job. I decided to get rid of the job. I liquidated my 401k savings (took all the tax penalties up front), and said &quot;alright, gonna live off of this for as long as I can until I figure something out&quot;.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;During Sabbatical:&lt;/h3&gt;
&lt;p&gt;It was great to breathe. I was 178 pounds at 5'8 (a little portly). That changed during the sabbatical. It took me three months just to _figure out_ what my routine looked like. I'd code on whatever my heart desired. It was wonderful. I didn't even know what day it was. I didn't miss my stuff. I didn't miss the anxiety attacks I got Sunday nights before having to go to work. All of that gone. By month four I came across the web based version of A Dark Room. I immediately connected with its sparse presentation. I reached out the Michael and asked his permission to port it to mobile. That night I lost track of time. I blinked and it was 3am. I had never felt that kind of loss of time before. Nothing around me existed, it was just me and my creation. After another four months, A Dark Room was done and released to the App Store. It got a whopping thirty downloads the first day. I didn't care. Cause it was my creation and it was awesome. I redesigned so much of the original game. So much of me went into it. Oh and I dropped 30 pounds too. Best shape of my life.&lt;/p&gt;
&lt;p&gt;I still remember one of my happiest days. It was early January. I was working on a stupid little multiplayer fighting game written in JavaScript and Pixi.js. I didn't care that ADR was barely getting 10 downloads a day, I didn't care that my savings was dwindling away. I found what I was supposed to do (build digital, evocative experiences).&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;171&quot;&gt;
&lt;h3&gt;Savings Dwindling:&lt;/h3&gt;
&lt;p&gt;The party was over at this point. My savings was dwindling down. A Dark Room was making its meager two thousand downloads a month (after Apple's cut, taxes, and splits, that's not a lot of take home). I started interviewing again for a job. I was better mentally, physically. And I never want my wife's quality of live to suffer (she was still in college at the time). Being the main bread winner of the home, I knew I had to suck it up and go back to work. I wasn't okay with it, but I knew it was my responsibility. I was interviewing again for those big salaries. I would save as much as possible given my now humble lifestyle. After I had enough cash tucked away, I'd quit and try again. Then. A Dark Room went viral. Out of nowhere it made $800 in one day. Then it made $1,200 in one day. Then it made $5,000. Then it made $8,000. Then it hit the #1 spot and I woke up to a $20,000 sales report.&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://failory.com/images/Income-Graph.jpg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;A Dark Room at #1:&lt;/h3&gt;
&lt;p&gt;A Dark Room stayed at the number one spot. I was elated the first day. I was on cloud nine the second day. Then reality reared its ugly face with a sobering message: &quot;this will come to an end.&quot;&lt;/p&gt;
&lt;p&gt;So I waited for it to come to an end. I didn't sleep for 18 days. My life: was hitting the refresh button on the App Store, seeing if I had fallen. I'd do it every 3 hours on the hour, day or night. I did it for eighteen days. I read every review that came through. I'd refresh the page again and see if I had dropped. This was my life. I was waiting for all this success to end. 250,000 downloads later, A Dark Room finally fell from the #1 spot. It was over. From there sales dwindled. After another four months, I was down to 100 downloads a day. I had recouped what I had &quot;spent&quot; taking the sabbatical (and then some). My wife was tired of living in a cramped one bedroom apartment. So, we put a huge down payment on a house.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;After A Dark Room Fell:&lt;/h3&gt;
&lt;p&gt;I built a prequel to A Dark Room called The Ensign. It did okay (nowhere near as successful.. but not bad... this was around the time I did my interview with Indie Hackers). I wrote a book about Surviving the App Store too. I put my heart and soul into a game inspired by Edwin Abbot's &quot;Flatland: Romance of Many Dimensions&quot; called A Noble Circle. I created a digital Go board after binge watching Hikaru no Go. I built a touched based mobile RTS called Mildly Interesting RTS (MIRTS for short). Every game had &quot;me&quot; in it. I didn't do ads, I didn't do micro-transactions, scummy energy bars, and all those other bullshit monetization tactics. I ported A Dark Room to Android (which was almost not worth it). I did everything to keep building games. I wrote about all of my journey, presented, did podcasts, hoping to inspire others. And yet revenue kept dwindling. The writing was on the wall. Everything I did after ADR wasn't enough. And I got a job.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;Now:&lt;/h3&gt;
&lt;p&gt;So here I am. Updating all my games to work well on iPhone X. Because I love them. I try to build what I can in my free time. But I'm back in Corporate America (it's been ten months so far). Two months in, everything became too real. My journey as a game dev was really over. I got so frustrated. I purged everything online. Took the book down, deleted all of my Reddit entries, my developer logs, my open source games. I removed all of it. All the content I created felt like a lie. Cause even with all this &quot;success&quot;, I couldn't keep my dream going. I felt so much worse off because I got a taste of a fulfilling life that I wish I had been ignorant to. It has been eight months since &quot;The Purge&quot;. I'm _much_ better now. Mostly invisible outside of already established relationships. I stream occasionally on Twitch, keep my games maintained, and work on new ones as time allows.&lt;/p&gt;
&lt;p&gt;I no longer deal with anxiety attacks Sunday nights at the thought of &quot;clocking in&quot; Monday morning. I'm at peace with it. The people I once called sheep, aren't that. They just didn't have the means to roll the dice. All code I see is beautiful in its own way. It tells a story of the resonable programmers put in unresonable situations. Again, I'm one of the lucky ones. Because maybe in another year, I'll have enough _play money_ saved up to role the dice again.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;Silver Lining:&lt;/h3&gt;
&lt;p&gt;My games provide a stable passive income (and I have a _decade_ worth of an emergency funds in the bank). A Dark Room recently hit the #2 spot _overall_ on Google Play (pro tip: stick to iOS, the revenue is almost an order of magnitude better). More importantly, I've very recently acquired the platform that helped me create my labors of love: RubyMotion. So between my games, subscription revenue, and my well paying contract gigs, I do alright for myself. Thank you Lady Luck. And my sincerest, deepest apologies for the 99.9999% that will never see the &quot;failure&quot; I've seen. I really do empathize with you. And I wish I had a better story.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h3&gt;Numbers?&lt;/h3&gt;
&lt;p&gt;I'm sure some of you are asking about numbers. Do you remember the title of this post? Do you remember what I said about the 99.9999% failure rate? Do your remember what I said about privaledge, and eating your cake and having it too? What's the point of talking about the numbers I'm making now? So you can dream about one day making these numbers too? You wont. Start with that and work from there.&lt;/p&gt;
&lt;p&gt;But if you really want numbers, here are some of the numeric sacrifices I made to role the dice _once_:&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;p&gt;- Have a 4.0 GPA through High School.&lt;/p&gt;
&lt;p&gt;- Graduate #36 out of a class of 800+.&lt;/p&gt;
&lt;p&gt;- Go to a community college cause it's cheap.&lt;/p&gt;
&lt;p&gt;- Work two jobs in the summer to pay for college and save up.&lt;/p&gt;
&lt;p&gt;- Go to university in 2001 when it was still possible to pay out of  pocket and graduate without crippling debt.&lt;/p&gt;
&lt;p&gt;- Get a degree in something that is valued. Even better if you  actually like what you got a degree in.&lt;/p&gt;
&lt;p&gt;- Land a job right out of school that makes you $55k a year.&lt;/p&gt;
&lt;p&gt;- Live off of $15k a year. Don't buy a house. Don't buy a fancy  car. Just save.&lt;/p&gt;
&lt;p&gt;- Do this for a year.&lt;/p&gt;
&lt;p&gt;- Land a job that makes you $100k a year. Save the rest. Max out your 401k contribution.&lt;/p&gt;
&lt;p&gt;- Celebrate by living off of $30k a year.&lt;/p&gt;
&lt;p&gt;- Do this for three years.&lt;/p&gt;
&lt;p&gt;- Land a job that makes you $140k a year. Save the rest. Max out your 401k contribution. Get a Roth, put $5k a year into that.&lt;/p&gt;
&lt;p&gt;- Celebrate by living off of $60k a year.&lt;/p&gt;
&lt;p&gt;- Do this for three years.&lt;/p&gt;
&lt;p&gt;- Don't have kids. Don't get sick. Don't have any catastrophic  events that leave you bankrupt. Probably best to just not leave the house.&lt;/p&gt;
&lt;p&gt;- Quit your job. Sell everything. Liquidate your 401k. Pay all the tax  penaties.&lt;/p&gt;
&lt;p&gt;- Live without insurance cause COBRA costs $2000 a month. Still Don't  have kids. Don't get sick. Don't have any catastrophic events that  leave you bankrupt.&lt;/p&gt;
&lt;p&gt;- Now you can take a year and a half off and roll the dice _once_. Now  you can read all the success stories online and dream that you'll  get that too.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;p&gt;But you probably wont. And that's okay.&lt;/p&gt;
&lt;p&gt;‍&lt;/p&gt;
&lt;h2&gt;Failory Opinion&lt;/h2&gt;
&lt;p&gt;With a sabbatical year, Amir started his own business and stop feeling empty, by finding what he was supposed to do in life. He received a kiss from Lady Luck and achieved success with his app &quot;A Dark Room&quot;. But as we always say, chances of failing are always present. During the last years, they have risen to 90% (Amir ensures this number is even higher, 99.9999%) and succeeding with your startup is the most similar to the roll of a dice. If we spend a second thinking about this, if 9 out of 10 startups fail, then we only need to roll the dice 10 times and the last startup will (by statistics) achieve success. From the previous 9, we will have learned from our mistakes. When smart and hard work meets luck, ventures like &quot;A Dark Room&quot; achieve success.&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;We’re always digging for more failure stories. Sign up for our newsletter to keep updated on the latest additions. You can unsubscribe whenever you want!&lt;/p&gt;</description>
<pubDate>Tue, 26 Dec 2017 17:54:49 +0000</pubDate>
<dc:creator>nicoserdeir</dc:creator>
<og:title>Battle Scars</og:title>
<og:description>Amir Rajan tells the success story of his mobile game called &quot;A Dark Room&quot;, which hit #1 on the App Store and grossed over $800,000.</og:description>
<og:image>https://daks2k3a4ib2z.cloudfront.net/5966ea9a9217ca534caf139f/5a4026d380557a000177b59e_Battle%20Scars.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://failory.com/battle-scars</dc:identifier>
</item>
<item>
<title>Power Prices Go Negative in Germany</title>
<link>https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html</guid>
<description>&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;192&quot; data-total-count=&quot;1391&quot; id=&quot;story-continues-3&quot;&gt;Demand is particularly low on weekends and holidays, when factories are idle and offices empty. The energy supplies that Germany depends on, however, are less predictable than they used to be.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;226&quot; data-total-count=&quot;1617&quot;&gt;Wind power, in particular, is highly dependent on changes in weather patterns. Giant spinning turbines produce, on average, about 12 percent of Germany’s power, but on windy days, they can generate several times that amount.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;218&quot; data-total-count=&quot;1835&quot;&gt;At the same time, other mainstays of the country’s electricity supply, especially some coal and nuclear power plants, are unable to dial back quickly enough, leading to negative prices on electricity trading markets.&lt;/p&gt;
&lt;h4 class=&quot;story-subheading story-content&quot; data-para-count=&quot;26&quot; data-total-count=&quot;1861&quot;&gt;Where do they go negative?&lt;/h4&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;136&quot; data-total-count=&quot;1997&quot;&gt;Several countries in Europe have experienced negative power prices, including Belgium, Britain, France, the Netherlands and Switzerland.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;282&quot; data-total-count=&quot;2279&quot;&gt;But Germany’s forays into negative pricing are the most frequent. At times, Germany is able to export its surplus electricity to its neighbors, helping to balance the market. Still, its experiences of negative prices are often longer, and deeper, than they are in other countries.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;200&quot; data-total-count=&quot;2479&quot;&gt;In one recent example, power prices spent 31 hours below zero during the last weekend of October. At one point, they dipped as low as minus €83, or minus $98, per megawatt-hour, a wholesale measure.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;133&quot; data-total-count=&quot;2612&quot;&gt;In other words, anyone who was able to hook up for a large blast of electricity at that time was paid €83 per unit for the trouble.&lt;/p&gt;
&lt;div id=&quot;story-ad-2&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html#story-continues-4&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;h4 class=&quot;story-subheading story-content&quot; data-para-count=&quot;24&quot; data-total-count=&quot;2636&quot;&gt;Why is supply so uneven?&lt;/h4&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;153&quot; data-total-count=&quot;2789&quot; id=&quot;story-continues-4&quot;&gt;The major drawback of both wind and solar power is that they wax and wane with the breeze and sunshine, and not in response to when they are most needed.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;294&quot; data-total-count=&quot;3083&quot;&gt;Battery storage capacity, meanwhile, is not yet advanced enough to take in all of the excess generation. And because older power plants that run on fossil fuels take a long time to ramp up and reduce electricity generation, they are not able to respond decisively enough to the shifting supply.&lt;/p&gt;


&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;308&quot; data-total-count=&quot;3391&quot;&gt;Like most traditional power systems, Germany’s was designed to match output to demand. However, “we now have technology that cannot produce according to the demand, but is producing according to the weather,” said Tobias Kurth, the managing director of Energy Brainpool, a Berlin-based consulting firm.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;114&quot; data-total-count=&quot;3505&quot;&gt;That, he said, is “one of the key challenges in the whole transition of the energy market to renewable power.”&lt;/p&gt;
&lt;h4 class=&quot;story-subheading story-content&quot; data-para-count=&quot;17&quot; data-total-count=&quot;3522&quot;&gt;What can be done?&lt;/h4&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;170&quot; data-total-count=&quot;3692&quot;&gt;Negative prices indicate that Germany’s power grid, like most others around the world, has not yet adapted to the increasing amounts of renewable energy being produced.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;145&quot; data-total-count=&quot;3837&quot;&gt;“We have a lot of stress on the grid,” said Ulrike Hörchens, a spokeswoman for Tennet, a large grid operator in Germany and the Netherlands.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;143&quot; data-total-count=&quot;3980&quot;&gt;For now, technological improvements that would help store additional power, and better distribute it across and between countries, are lagging.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;156&quot; data-total-count=&quot;4136&quot;&gt;But regulatory tweaks could make a difference. Germany, for example, does not do enough to encourage customers to increase their use at times of oversupply.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;261&quot; data-total-count=&quot;4397&quot;&gt;On a basic level, that could be as simple as providing incentives for people to turn on the washing machine when power is plentiful, and cheap. Companies could make even more use of such guidance, ramping up energy-hungry tasks at times of low-cost electricity.&lt;/p&gt;
&lt;div id=&quot;story-ad-3&quot; class=&quot;story-ad ad ad-placeholder nocontent robots-nocontent&quot;&gt;

&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html#story-continues-5&quot;&gt;Continue reading the main story&lt;/a&gt;&lt;/div&gt;
&lt;h4 class=&quot;story-subheading story-content&quot; data-para-count=&quot;55&quot; data-total-count=&quot;4452&quot;&gt;Do German consumers benefit from ‘negative prices’?&lt;/h4&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;13&quot; data-total-count=&quot;4465&quot; id=&quot;story-continues-5&quot;&gt;Not directly.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;217&quot; data-total-count=&quot;4682&quot;&gt;The wholesale costs of power make up only about a fifth of the average household electricity bill in Germany. The rest is a stew of taxes, fees to finance renewable-energy investments, and charges for use of the grid.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;248&quot; data-total-count=&quot;4930&quot;&gt;That means their bills are lower than they otherwise would be, because power prices are sometimes negative, though household energy bills have been rising over all anyway. Basically, utilities are not depositing money in customers’ bank accounts.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;56&quot; data-total-count=&quot;4986&quot;&gt;Power producers are learning to adapt to this new world.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;200&quot; data-total-count=&quot;5186&quot;&gt;RWE, one of Germany’s largest operators of power installations, employs a weather forecaster to help anticipate surges in wind power, and to match the spikes to when the company expects peak demand.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;151&quot; data-total-count=&quot;5337&quot;&gt;While negative prices create problems for the company, they also enhance the value of its more flexible installations, including large storage systems.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;224&quot; data-total-count=&quot;5561&quot;&gt;In one case, it takes advantage of negative prices by being paid to pump large volumes of water into a mountain lake in Austria. When prices are higher, the company releases the water, using turbines to generate electricity.&lt;/p&gt;
&lt;p class=&quot;story-body-text story-content&quot; data-para-count=&quot;170&quot; data-total-count=&quot;5731&quot;&gt;“We are able to ramp units down, and switch the pumps on,” said Martin Keiner, RWE’s head of commercial asset optimization. “You can earn a lot on flexibility.”&lt;/p&gt;
&lt;a class=&quot;visually-hidden skip-to-text-link&quot; href=&quot;https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html#whats-next&quot;&gt;Continue reading the main story&lt;/a&gt;</description>
<pubDate>Tue, 26 Dec 2017 17:37:07 +0000</pubDate>
<dc:creator>kwindla</dc:creator>
<og:url>https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html</og:url>
<og:type>article</og:type>
<og:title>Power Prices Go Negative in Germany, a Positive for Energy Users</og:title>
<og:description>Germany has spent $200 billion over the past two decades to promote cleaner sources of electricity. That enormous investment is now having an unexpected impact.</og:description>
<og:image>https://static01.nyt.com/images/2017/12/26/world/26Negativepower/26Negativepower-facebookJumbo.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2017/12/25/business/energy-environment/germany-electricity-negative-prices.html</dc:identifier>
</item>
</channel>
</rss>