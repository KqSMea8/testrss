<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Google YOLO clickjacking</title>
<link>https://blog.innerht.ml/google-yolo/</link>
<guid isPermaLink="true" >https://blog.innerht.ml/google-yolo/</guid>
<description>&lt;p&gt;Buttons are everywhere. Elevator buttons, machinery buttons, and even &quot;Nuclear Button&quot; that sits on the President's office desk. But are you always sure the button you push really performs what you want it to do?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; is a HTML element that lets a web page embed another web page. Here I'm embedding a fake banking website (shamelessly stolen from &lt;a href=&quot;https://lcamtuf.blogspot.hk/2011/12/x-frame-options-or-solving-wrong.html&quot;&gt;@lcamtuf&lt;/a&gt; with slight modification).&lt;/p&gt;

&lt;p&gt;The scenario here is after clicking the &quot;Transfer everything&quot; button, all your funds will be transferred to me. Of course, clicking it won't actually do anything. But &lt;em&gt;will&lt;/em&gt; you click it?&lt;/p&gt;
&lt;p&gt;Now, I'm presenting you another button. It doesn't have much to say except &quot;harmless&quot;, and I challenge you to click it.&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;Uh-oh looks like all your moneyz are belong to me. Don't worry, it's just virtual money worth nothing like Bitcoin. Anyway what's happened? CSS has a property called &lt;code&gt;position&lt;/code&gt; that allows an element to sit on top of another element. In addition, the property &lt;code&gt;pointer-events&lt;/code&gt; allows click events to passthrough an element, so that the click is actually registered on the element underneath. When two combined, I can stack a fake button on top of the actual button and trick you to click it. You can use the &quot;Behind the scene&quot; button to have a visual understanding of how it works. This is an often overlooked and misunderstood web application vulnerability called Clickjacking.&lt;/p&gt;

&lt;p&gt;So &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; is dangerous, &lt;code&gt;pointer-events&lt;/code&gt; is lethal and we should remove them? Yes and no. Things wouldn't exist if there were no use cases, and same as &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;. Online advertising heavily relies on &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;. More importantly, web widgets use &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; too. Facebook like button and Facebook comments plugin are prime examples of such kind.&lt;/p&gt;
&lt;p&gt;Here's another harmless button and I challenge you to click it.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fake-button&quot;&gt;Click Me&lt;/span&gt; &lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;If you have logged in Facebook, then what you just did was to like my blog post (which I appreciate) without realizing it. This time, &lt;code&gt;opacity&lt;/code&gt; is used instead of &lt;code&gt;pointer-events&lt;/code&gt;. &lt;code&gt;opacity&lt;/code&gt; is a CSS property that controls the opacity of an element. Therefore, I can simply stack the transparent Facebook like button on top of another button visible to you to achieve the same Clickjacking effect, making the remediation of removing &lt;code&gt;pointer-events&lt;/code&gt; useless. And by the way, this is a Blackhat SEO technique called Likejacking which exploits Clickjacking to gain organic likes.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fake-button&quot;&gt;Click Me&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;People have been exploiting Clickjacking with web widgets. Many social media sites were actually vulnerable to this. For example, you could use &lt;a href=&quot;http://nogues.pro/twitter-follow-clickjacking.html&quot;&gt;Clickjacking to gain followers with Twitter follow button&lt;/a&gt;, and a more recent issue on LinkedIn AutoFill button that &lt;a href=&quot;https://lightningsecurity.io/blog/linkedin/&quot;&gt;leaks visitor's infomation to third-party websites&lt;/a&gt;. Sites have started fixing it by requiring addition user interactions, for example, open a new window for users to confirm an action. In fact, Likejacking probably no longer works nowadays. If you try to click the above Facebook like button, it may turn into a &quot;Confirm&quot; button which requires you to click again after you click it. Essentially, they now use an algorithm to determine if an embedding site is trustworthy and hence the number of additional user interactions. Ultimately this is a trade-off between usability and security.&lt;/p&gt;
&lt;div class=&quot;cookie-consent hide&quot; readability=&quot;6.2857142857143&quot;&gt;This website uses cookies to ensure you get the best experience on our website. &lt;a&gt;Learn more&lt;/a&gt; &lt;span class=&quot;cookie-consent__button&quot; onclick=&quot;document.querySelector('.cookie-consent').classList.add('cookie-consent--clicked');&quot;&gt;Got it!&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;Apparently killing &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; and CSS properties is not a good idea. What we really need is the ability for websites to forbid other websites from embedding them. Back in the day, people developed a technique called Framebusting which uses JavaScript to check if a website is being embedded by another site. Since &lt;code&gt;window.top&lt;/code&gt; always points to the outermost frame, by comparing it to &lt;code&gt;window.self&lt;/code&gt; it is possible to determine if the embedding site is not itself. Here was the most commonly used snippet:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;if (top != self)
  top.location = self.location
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, JavaScript based framebusters have many flaws. For example, &lt;code&gt;onBeforeUnload&lt;/code&gt; can abort navigation, XSS Filter can disable partial JavaScript execution as mentioned in my &lt;a href=&quot;https://blog.innerht.ml/the-misunderstood-x-xss-protection/&quot;&gt;previous blog post&lt;/a&gt;, and the &lt;code&gt;sandbox&lt;/code&gt; attribute of &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; can even completely disable JavaScript of the embedded site. The research &lt;a href=&quot;https://crypto.stanford.edu/~dabo/pubs/papers/framebust.pdf&quot;&gt;Busting Frame Busting:&lt;br/&gt;a Study of Clickjacking Vulnerabilities on Popular Sites&lt;/a&gt; further shows that JavaScript based framebusters are fragile.&lt;/p&gt;
&lt;p&gt;Fortunately, browsers started supporting the HTTP response header &lt;code&gt;X-Frame-Options&lt;/code&gt; which allows websites to control framing behavior. &lt;code&gt;X-Frame-Options: DENY&lt;/code&gt; indicates the site doesn't want anyone to frame it, &lt;code&gt;X-Frame-Options: SAMEORIGIN&lt;/code&gt; indicates that only web pages on the same origin can frame it, and &lt;code&gt;X-Frame-Options: ALLOW-FROM&lt;/code&gt; indicates only the specified site can frame it. The &lt;code&gt;frame-ancestors&lt;/code&gt; directive of Content Security Policy Level 2 later attempts to deprecate &lt;code&gt;X-Frame-Options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, &lt;code&gt;X-Frame-Options: SAMEORIGIN&lt;/code&gt; has a serious flaw. &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=725490&quot;&gt;It only compares the embedded site against the top frame&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.innerht.ml/content/images/2018/05/x-frame-options-sameorigin.png&quot; alt=&quot;XFO sameorigin&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You may wonder, yeah as long as the top frame is same origin why does it matter? Keep in mind some websites explicitly and &lt;strong&gt;implicitly&lt;/strong&gt; allow custom iframe. In fact, &lt;a href=&quot;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/player-card&quot;&gt;Twitter Player Card&lt;/a&gt; was vulnerable to it. When you tweet a link, Twitter will fetch the link and read its meta. If the Open Graph attributes specify a player URL, Twitter will embed the URL in an iframe directly in your timeline. I could embed a sensitive page on Twitter on my &quot;player&quot;, say OAuth authorization, and mask a fake button on top of the authorize button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.innerht.ml/content/images/2018/05/twitter-player-card.png&quot; alt=&quot;Twitter Player Card Clickjacking&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/268071086?loop=1&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;In the actual exploit I used &lt;code&gt;onblur&lt;/code&gt; on the main window to detect any click events since clicking on the iframe will trigger a focus event on the iframe, then I delivered a feedback (play video) to make the Clickjacking less obvious. You can learn more vulnerable examples from my &lt;a href=&quot;https://speakerdeck.com/filedescriptor/exploiting-the-unexploitable-with-lesser-known-browser-tricks&quot;&gt;presentations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the time of writing, only Chrome and Firefox have fixed the issue by making the check against all frame ancestors, which is compliant to CSP's &lt;code&gt;frame-ancestors 'self'&lt;/code&gt;.&lt;/p&gt;
&lt;table readability=&quot;2&quot;&gt;&lt;tr&gt;&lt;td/&gt;
&lt;td&gt;Chrome&lt;/td&gt;
&lt;td&gt;Firefox&lt;/td&gt;
&lt;td&gt;Safari&lt;/td&gt;
&lt;td&gt;Edge&lt;/td&gt;
&lt;td&gt;Internet Explorer&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;X-Frame-Options: SAMEORIGIN&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;🐛&lt;/td&gt;
&lt;td&gt;🐛&lt;/td&gt;
&lt;td&gt;🐛&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Content-Security-Policy: frame-ancestors 'self'&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;I know what you're thinking. What does it have to do with &quot;Google YOLO&quot;? &lt;span class=&quot;not-login hide&quot;&gt;Before I tell you, I recommend you to login Google and refresh this page :)&lt;/span&gt;&lt;span class=&quot;outdated hide&quot;&gt;I have a surprise if you browse this page with a modern browser in PC :)&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/jZRourZbZLzrdNGQEKfkVWWa1Mql01XX9jmI_CkCMWccMDT6NPDzlOtvo9ObmLy9GhWouchEYRsbXSybPUMrGpZzWRigtYE=s688&quot; alt=&quot;Google YOLO&quot;/&gt;&lt;/p&gt;
&lt;img class=&quot;avatar hide&quot;/&gt;&lt;p&gt;&lt;a href=&quot;https://developers.google.com/identity/one-tap/web/&quot;&gt;YOLO (You Only Login Once)&lt;/a&gt; is a web widget for &quot;One-tap sign-up and auto sign-in on websites&quot; by Google. You embed Google provided iframe on your websites and your users can authenticate with their Google account in one simple click. Ironically, &quot;web widgets&quot; and &quot;one click&quot; is indeed YOLO (You Only Live Once).&lt;/p&gt;
&lt;p&gt;Remember the cookie consent button you clicked at the very beginning? That's right, it was a Clickjacking attempt :).&lt;/p&gt;
&lt;p&gt;When you try to login with Google YOLO, the following data will be transmitted:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;{
  &quot;id&quot;: &quot;filedescriptor@gmail.com&quot;,
  &quot;authMethod&quot;: &quot;https://accounts.google.com&quot;,
  &quot;authDomain&quot;: &quot;https://blog.innerht.ml&quot;,
  &quot;displayName&quot;: &quot;file descriptor&quot;,
  &quot;profilePicture&quot;: &quot;https://lh6.googleusercontent.com/-enDr8I8LBzQ/AAAAAAAAAAI/AAAAAAAAAH0/bANw2nF8nWI/photo.jpg?sz=96&quot;,
  &quot;idToken&quot;: &quot;redacted&quot;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Exploiting Clickjacking on Google YOLO allows visitors' name, profile picture and email address to be leaked. That's right, I can even know your email address. :). &lt;s&gt;Click &lt;a href=&quot;https://blog.innerht.ml/google-yolo/?reveal&quot;&gt;here&lt;/a&gt; if you want to see behind the sense (make sure you have logged in Google with a modern browser, PC preferably).&lt;/s&gt; This was silently &quot;fixed&quot; by Google, see the end of article.&lt;/p&gt;
&lt;p&gt;I've reported this privacy issue to Google and they refused to fix it as they consider it an &quot;intended behavior&quot;.&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;Thanks for your bug report and research to keep our users secure! We've investigated your submission and made the decision not to track it as a security bug.&lt;/p&gt;
&lt;p&gt;The login widget has to be frameable for it to work. I'm not sure how we could fix this to prevent this problem, but thanks for the report!&lt;/p&gt;
&lt;p&gt;This report will unfortunately not be accepted for our VRP. Only first reports of technical security vulnerabilities that substantially affect the confidentiality or integrity of our users' data are in scope, and we feel the issue you mentioned does not meet that bar :(&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;s&gt;Don't push random buttons&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;Actually don't even click anything. Malicious websites can simply track your cursor's position and change the invisible button/iframe's position accordingly. So even if you make a click by mistake you will be forced to click on something else.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fake-button stalker&quot;&gt;Click me&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There's no reliable way to prevent Clickjacking, though mitigation can be done on both ends:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sites need to proactively deploy &lt;code&gt;X-Frame-Options&lt;/code&gt; or &lt;code&gt;Content-Security-Policy&lt;/code&gt; header.&lt;/li&gt;
&lt;li&gt;Web widget providers need to make sure sufficient user interactions are required&lt;/li&gt;
&lt;li&gt;Users can consider disabling third-party cookies&lt;/li&gt;
&lt;li&gt;Use browser profiles&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Last but not least, dare you click this button :)?&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fake-button&quot;&gt;???&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Shortly after thie article was published, Google silently prevented my domain from using the API:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;The client origin is not permitted to use this API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Welp.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.innerht.ml/content/images/2018/05/demo.gif&quot; alt=&quot;Demo&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 11 May 2018 02:13:08 +0000</pubDate>
<dc:creator>bobross</dc:creator>
<og:type>article</og:type>
<og:title>Google YOLO</og:title>
<og:description>Buttons are everywhere. Elevator buttons, machinery buttons, and even &amp;quot;Nuclear Button&amp;quot; that sits on the President's office desk. But are you always sure the button you push really performs what you want it to do? &amp;lt;iframe&amp;gt; is a HTML element that lets a web page embed</og:description>
<og:url>https://blog.innerht.ml/google-yolo/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.innerht.ml/google-yolo/</dc:identifier>
</item>
<item>
<title>Emails Show FDA Chemists Have Been Finding Glyphosate in Food</title>
<link>https://modernfarmer.com/2018/05/emails-show-fda-chemists-have-been-quietly-finding-glyphosate-in-food/</link>
<guid isPermaLink="true" >https://modernfarmer.com/2018/05/emails-show-fda-chemists-have-been-quietly-finding-glyphosate-in-food/</guid>
<description>&lt;p class=&quot;mf-single-article-excerpt&quot;&gt;The way the Food and Drug Administration tests for glyphosate—the most widely-used pesticide in the U.S.—is coming under fire after internal emails revealed some curious results of testing.&lt;/p&gt;
&lt;p&gt;First, some background: Glyphosate, which is commonly sold by Monsanto under the brand name Roundup, is the most widely-used pesticide in the United States; it is an herbicide most often used to kill weeds. The EPA is responsible for setting maximum limits for pesticides, and the FDA tests food to make sure those limits are not exceeded.&lt;/p&gt;
&lt;p&gt;Until very recently, the government had not tested food for glyphosate residue at all, despite the product’s long history in agricultural and home use. In 2014, the Government Accountability Office &lt;a href=&quot;https://www.gao.gov/products/GAO-15-38&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;issued a release&lt;/a&gt; stating the FDA should begin testing for the herbicide’s presence on the food we eat. Shortly thereafter, a string of studies and reviews indicated that glyphosate should probably be further studied, and in March of 2015, the cancer research arm of the World Health Organization &lt;a href=&quot;https://www.nature.com/news/widely-used-herbicide-linked-to-cancer-1.17181&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;declared glyphosate&lt;/a&gt; a “probable carcinogen.”&lt;/p&gt;
&lt;p&gt;In 2016, the FDA began what they call a “special assignment” to test certain food for glyphosate residue. The special assignment was immediately littered with issues, and, as &lt;a href=&quot;https://www.huffingtonpost.com/entry/fda-resumes-testing-foods-for-weed-killer-safety-questions_us_593843b2e4b014ae8c69dd1b&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;the Huffington Post notes&lt;/a&gt;, testing was delayed, was strangely opaque in its operations, and was &lt;a href=&quot;https://www.bloomberg.com/news/articles/2017-02-27/monsanto-cancer-suits-turn-to-alleged-whitewash-by-epa-official&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mired by accusations&lt;/a&gt; of collusion between Monsanto and a top EPA official. Eventually, in 2017, the FDA tested samples of four items: soybeans, corn, milk, and eggs. (They refer to it as the “2016 special assignment” although the testing was actually done the following year.) “Preliminary results for samples collected under the 2016 special assignment showed no pesticide residue violations for glyphosate in any of the four commodities tested,” wrote Peter Cassell, a press officer for the FDA, in an emailed statement to &lt;em&gt;Modern Farmer&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Freedom of Information Act (FOIA) requests were quickly filed, and the newest set, this one by the non-profit food industry research group &lt;a href=&quot;https://usrtk.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;US Right to Know&lt;/a&gt; and published this past weekend by &lt;a href=&quot;https://www.theguardian.com/us-news/2018/apr/30/fda-weedkiller-glyphosate-in-food-internal-emails&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;the Guardian&lt;/a&gt;, turned up some interesting emails from within the FDA showing that their chemists have been busy doing some extra-curricular work testing regular foods brought from home, as opposed to the official samples tested by the FDA, for the presence of glyphosate.&lt;/p&gt;
&lt;p&gt;All of the official samples passed the test and were within the legal limits of glyphosate residue. But those off-the-record, unofficial samples, though done with the same equipment and tested by the same chemists, showed glyphosate.&lt;/p&gt;
&lt;p&gt;That’s right. The chemists found glyphosate residue on just about everything: crackers, granola, cornmeal, honey, oatmeal, baby food, and even corn. &lt;a href=&quot;https://usrtk.org/wp-content/uploads/2018/04/Over-the-tolerance-finding-in-corn.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Their surreptitious corn test&lt;/a&gt;—one of the four items the FDA is actually testing—found glyphosate significantly over the legal limit set by the EPA. The chemists emailed their bosses to ask what to do. The FDA’s response (which was also captured in the FOIA documents): That corn was not an “official sample” and will thus be ignored.&lt;/p&gt;
&lt;p&gt;Requests for comment from the FDA resulted in an emailed statement saying that the four items tested did not show illegal levels of glyphosate, and that they will increase testing. “This year, FDA has expanded capacity for testing for glyphosate, 2,4-D and dicamba as part of the general panel of pesticides the agency samples and the related results will be included in the 2018 and future pesticide monitoring reports,” wrote Cassell. Follow-up questions quickly hit a brick wall, with Cassell quickly replying, “I’ve provided all we can provide at this time.”&lt;/p&gt;



</description>
<pubDate>Thu, 10 May 2018 22:58:15 +0000</pubDate>
<dc:creator>clumsysmurf</dc:creator>
<og:type>article</og:type>
<og:title>Emails Show FDA Chemists Have Been Quietly Finding Glyphosate in Food - Modern Farmer</og:title>
<og:description>Did the FDA ignore findings from its own chemists?</og:description>
<og:url>https://modernfarmer.com/2018/05/emails-show-fda-chemists-have-been-quietly-finding-glyphosate-in-food/</og:url>
<og:image>https://cdn.modernfarmer.com/wp-content/uploads/2018/05/roundupspray.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://modernfarmer.com/2018/05/emails-show-fda-chemists-have-been-quietly-finding-glyphosate-in-food/</dc:identifier>
</item>
<item>
<title>Man Allegedly Used Change of Address Form to Move UPS Headquarters</title>
<link>https://www.npr.org/sections/thetwo-way/2018/05/10/610102872/man-allegedly-used-change-of-address-form-to-move-ups-headquarters-to-his-apartm</link>
<guid isPermaLink="true" >https://www.npr.org/sections/thetwo-way/2018/05/10/610102872/man-allegedly-used-change-of-address-form-to-move-ups-headquarters-to-his-apartm</guid>
<description>&lt;div id=&quot;res610136437&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/05/10/gettyimages-72846750-1a9b4a797a6eed716bf6c5915979b45578cab620-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/05/10/gettyimages-72846750-1a9b4a797a6eed716bf6c5915979b45578cab620-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;A Chicago man has been charged with mail fraud and mail theft after allegedly changing UPS's corporate mailing address to the address of his own apartment. Here, mail is sorted at Chicago's main post office in 2006. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Scott Olson/Getty Images&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Scott Olson/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2018/05/10/gettyimages-72846750-1a9b4a797a6eed716bf6c5915979b45578cab620-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;A Chicago man has been charged with mail fraud and mail theft after allegedly changing UPS's corporate mailing address to the address of his own apartment. Here, mail is sorted at Chicago's main post office in 2006.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Scott Olson/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Updated at 4:37 p.m. ET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As federal crimes go, this one seems to have been ridiculously easy to pull off.&lt;/p&gt;
&lt;p&gt;Dushaun Henderson-Spruce submitted a U.S. Postal Service change of address form on Oct. 26, 2017, according to court documents. He requested changing a corporation's mailing address from an address in Atlanta to the address of his apartment on Chicago's North Side.&lt;/p&gt;
&lt;p&gt;The post office duly updated the address, and Henderson-Spruce allegedly began receiving the company's mail — including checks. It went on for months. Prosecutors say he deposited some $58,000 in checks improperly forwarded to his address.&lt;/p&gt;
&lt;p&gt;The corporation isn't named in the court documents, but the &lt;em&gt;Chicago Tribune&lt;/em&gt; &lt;a href=&quot;http://www.chicagotribune.com/news/local/breaking/ct-met-ups-scam-investigation-20180417-story.html&quot;&gt;reports&lt;/a&gt; that it's the shipping company UPS.&lt;/p&gt;
&lt;p&gt;In a statement to NPR, UPS said it &quot;was notified that some U.S. mail, intended for UPS employees at the company's headquarters address, was redirected by an unauthorized change of address by a third party. The U.S. Postal Service (USPS) corrected the issue and the USPS Postal Inspector is investigating the incident.&quot;&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;div id=&quot;res610173998&quot; class=&quot;bucketwrap image medium&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/05/10/dushaun-henderson-spruce_vert-dd3021d1c839b3095ebf7f8310dbd16444653ebd-s800-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/05/10/dushaun-henderson-spruce_vert-dd3021d1c839b3095ebf7f8310dbd16444653ebd-s800.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Dushaun Henderson-Spruce in a November 2016 police photo. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Evanston (Ill.) Police Department&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Evanston (Ill.) Police Department&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2018/05/10/dushaun-henderson-spruce_vert-dd3021d1c839b3095ebf7f8310dbd16444653ebd-s1400.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;Dushaun Henderson-Spruce in a November 2016 police photo.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Evanston (Ill.) Police Department&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Henderson-Spruce allegedly messed up the form a little. &quot;Henderson-Spruce did not identify himself on the one-page form. At first, the initials 'HS' were written on the signature line, but the initials were then scratched out and replaced with 'UPS,' according to the charges,&quot; the &lt;em&gt;Tribune&lt;/em&gt; reports.&lt;/p&gt;
&lt;p&gt;But that was apparently good enough for the U.S. Postal Service. Henderson-Spruce began receiving &quot;[s]everal thousand pieces of First Class US mail and registered mail&quot; addressed to the corporation, according to a criminal complaint filed in U.S. District Court.&lt;/p&gt;
&lt;p&gt;For nearly three months, mail addressed to UPS's corporate headquarters was forwarded to Henderson-Spruce's apartment. He received so much mail that the mail carrier had to leave it in a USPS tub outside his door, the &lt;em&gt;Tribune&lt;/em&gt; reports.&lt;/p&gt;
&lt;p&gt;The mail carrier told investigators that &quot;voluminous&quot; amounts of company mail were delivered to Henderson-Spruce, sometimes handed to him directly.&lt;/p&gt;
&lt;p&gt;The mail contained personal identifying information of employees, as well as business checks and invoices, according to the affadavit. He was also sent American Express corporate credit cards. Henderson-Spruce allegedly deposited into his bank account some 10 checks addressed to the company, totaling approximately $58,000.&lt;/p&gt;
&lt;p&gt;This went on until Jan. 16, when UPS security flagged the situation to the U.S. Postal Inspection Service.&lt;/p&gt;
&lt;p&gt;On Jan. 25, postal inspectors searched Henderson-Spruce's apartment in Chicago's Rogers Park neighborhood and found about 3,000 pieces of mail addressed to the company in Atlanta, court documents say. He reportedly told investigators that he had worked part-time at a company facility in 2012 or so.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Tribune&lt;/em&gt; spoke briefly with Henderson-Spruce outside his apartment building and &lt;a href=&quot;https://www.npr.org/sections/thetwo-way/2018/05/10/610102872/man-allegedly-used-change-of-address-form-to-move-ups-headquarters-to-his-apartm#Henderson-Spruce&quot;&gt;reported&lt;/a&gt; that he &quot;hinted that he'd received the UPS mail as a result of a mix-up that was not his fault and that his identity may have been stolen, but he declined to elaborate.&quot;&lt;/p&gt;
&lt;p&gt;In November 2016, police in nearby Evanston, Ill., charged Henderson-Spruce with one count of misdemeanor bank fraud, for possession of a stolen check.&lt;/p&gt;
&lt;p&gt;Henderson-Spruce now faces federal charges of mail theft, which carries a maximum sentence of five years, and mail fraud, which can be up to 20.&lt;/p&gt;
&lt;p&gt;While this case is eye-popping — no one at the post office thought it weird that a guy was getting thousands of pieces of a company's mail forwarded to his apartment? — there have been many reports of regular people having their mailing addresses changed without their knowledge.&lt;/p&gt;
&lt;p&gt;KPIX, a CBS affiliate in San Francisco, &lt;a href=&quot;http://sanfrancisco.cbslocal.com/2017/11/20/address-fraud-consumerwatch-problem/&quot;&gt;reported&lt;/a&gt; in November that it had filed Freedom of Information Act requests with multiple branches of the Postal Service. It learned that the Postal Inspection Service had received 17,077 complaints &quot;relating to fraudulent address changes&quot; in the past year and that the USPS had received &quot;approximately 46,058 inquiries from customers concerning the validity of the change-of-address order&quot; since January 2016.&lt;/p&gt;
&lt;p&gt;In a statement to NPR, the USPS says it processed nearly 37 million change-of-address requests last year, and not all change-of-address complaints turn out to be fraud:&lt;/p&gt;
&lt;blockquote class=&quot;edTag&quot; readability=&quot;8.5&quot;&gt;
&lt;div readability=&quot;16&quot;&gt;
&lt;p&gt;&quot;The rate of suspicious transactions reported by customers is less than 1/10 of 1 percent and many of the complaints are determined not to be related to fraud. A number of these complaints can be traced to domestic or other disputes between families and friends, who have access as a result of their relationship to information which allows one to forward mail. Still others can be attributed to service-related issues.&lt;/p&gt;
&lt;p&gt;&quot;We are continuously implementing security enhancements to enhance the security of our change of address process. We continue to assess these options, as we determine the best alternatives to protect the needs of our customers.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Postal Service encourages customers to retrieve their mail on a daily basis or &lt;a href=&quot;https://informeddelivery.usps.com/box/pages/intro/start.action&quot;&gt;monitor it online&lt;/a&gt;. &quot;Any suspicious activity, or non-receipt of mail over a couple days should be reported to their local post office, or to our federal law enforcement arm, the U.S. Postal Inspection Service.&quot;&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 21:32:44 +0000</pubDate>
<dc:creator>augustocallejas</dc:creator>
<og:title>Man Allegedly Used Change Of Address Form To Move UPS Headquarters To His Apartment</og:title>
<og:url>https://www.npr.org/sections/thetwo-way/2018/05/10/610102872/man-allegedly-used-change-of-address-form-to-move-ups-headquarters-to-his-apartm</og:url>
<og:type>article</og:type>
<og:description>Prosecutors say he received thousands of pieces of mail intended for the company, including checks and corporate credit cards. He is now facing federal charges.</og:description>
<og:image>https://media.npr.org/assets/img/2018/05/10/gettyimages-72846750_wide-5c765271a209872860edbe2a65f38cb7307c9b1f.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/sections/thetwo-way/2018/05/10/610102872/man-allegedly-used-change-of-address-form-to-move-ups-headquarters-to-his-apartm</dc:identifier>
</item>
<item>
<title>SQLite Query Language: upsert</title>
<link>https://www.sqlite.org/draft/lang_UPSERT.html</link>
<guid isPermaLink="true" >https://www.sqlite.org/draft/lang_UPSERT.html</guid>
<description>&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;link href=&quot;sqlite.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&lt;title&gt;SQLite Query Language: upsert&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;88.82716888768&quot;&gt;
&lt;div class=&quot;nosearch&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/draft/index.html&quot;&gt;&lt;img class=&quot;logo&quot; src=&quot;https://www.sqlite.org/draft/images/sqlite370_banner.gif&quot; alt=&quot;SQLite&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;

&lt;p&gt;&lt;span&gt;*** DRAFT ***&lt;/span&gt;&lt;/p&gt;



&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.sqlite.org/draft/syntax/upsert-clause.html&quot;&gt;upsert-clause:&lt;/a&gt;&lt;/strong&gt; &lt;button id=&quot;x1199&quot; onclick=&quot;hideorshow(&amp;quot;x1199&amp;quot;,&amp;quot;x1200&amp;quot;)&quot;&gt;hide&lt;/button&gt;&lt;/p&gt;

&lt;p&gt;UPSERT is a special syntax addition to &lt;a href=&quot;https://www.sqlite.org/draft/lang_insert.html&quot;&gt;INSERT&lt;/a&gt; that causes the INSERT to behave as an &lt;a href=&quot;https://www.sqlite.org/draft/lang_update.html&quot;&gt;UPDATE&lt;/a&gt; or a no-op if the INSERT would violate a uniqueness constraint. UPSERT is not standard SQL. UPSERT in SQLite follows the syntax established by PostgreSQL. UPSERT syntax was added to SQLite with version 3.24.0 (pending).&lt;/p&gt;
&lt;p&gt;An UPSERT is an ordinary &lt;a href=&quot;https://www.sqlite.org/draft/lang_insert.html&quot;&gt;INSERT&lt;/a&gt; statement that is followed by the special ON CONFLICT clause shown above.&lt;/p&gt;
&lt;p&gt;The syntax that occurs in between the &quot;ON CONFLICT&quot; and &quot;DO&quot; keywords is called the &quot;conflict target&quot;. The conflict target specifies a specific uniqueness constraint that will trigger the upsert. The conflict target is required for DO UPDATE upserts, but is optional for DO NOTHING. A DO NOTHING upsert without a conflict target works the same as an &lt;a href=&quot;https://www.sqlite.org/draft/lang_conflict.html&quot;&gt;INSERT OR IGNORE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the insert operation would cause the uniqueness constraint identified by the conflict-target clause to fail, then the insert is omitted and either the DO NOTHING or DO UPDATE operation is performed instead. In the case of a multi-row insert, this decision is made separately for each row of the insert.&lt;/p&gt;
&lt;p&gt;Column names in the expressions of a DO UPDATE refer to the original unchanged value of the column, before the attempted INSERT. To use the value that would have been inserted had the constraint not failed, add the special &quot;excluded.&quot; table qualifier to the column name.&lt;/p&gt;
&lt;p&gt;Some examples will help illustrate the difference:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;pre&gt;
CREATE TABLE vocabulary(word TEXT PRIMARY KEY, count INT DEFAULT 1);
INSERT INTO vocabulary(word) VALUES('jovial')
  ON CONFLICT(word) DO UPDATE SET count=count+1;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The upsert above inserts the new vocabulary word &quot;jovial&quot; if that word is not already in the dictionary, or if it is already in the dictionary, it increments the counter. The &quot;count+1&quot; expression could also be written as &quot;vocabulary.count&quot;. PostgreSQL requires the second form, but SQLite accepts either.&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;pre&gt;
CREATE TABLE phonebook(name TEXT PRIMARY KEY, phonenumber TEXT);
INSERT INTO phonebook(name,phonenumber) VALUES('Alice','704-555-1212')
  ON CONFLICT(name) DO UPDATE SET phonenumber=excluded.phonenumber;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;In the second example, the expression in the DO UPDATE clause is of the form &quot;excluded.phonenumber&quot;. The &quot;excluded.&quot; prefix causes the &quot;phonenumber&quot; to refer to the value for phonenumber that would have been inserted had there been no conflict. Hence, the effect of the upsert is to insert a phonenumber of Alice if none exists, or to overwrite any prior phonenumber for Alice with the new one.&lt;/p&gt;
&lt;p&gt;Note that the DO UPDATE clause acts only on the single row that experienced the constraint error during INSERT. It is not necessary to include a WHERE clause that restrictions the action to that one row. The only use for the WHERE clause at the end of the DO UPDATE is to optionally change the DO UPDATE into a no-op depending on the original and/or new values. For example:&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;pre&gt;
CREATE TABLE phonebook2(
  name TEXT PRIMARY KEY,
  phonenumber TEXT,
  validDate DATE
);
INSERT INTO phonebook2(name,phonenumber,validDate)
  VALUES('Alice','704-555-1212','2018-05-08')
  ON CONFLICT(name) DO UPDATE SET
    phonenumber=excluded.phonenumber,
    validDate=excluded.validDate
  WHERE excluded.validDate&amp;gt;phonebook2.validDate;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;In this last example, the phonebook2 entry is only updated if the validDate for the newly inserted value is newer than the entry already in the table. If the table already contains an entry with the same name and a current validDate, then the WHERE clause causes the DO UPDATE to become a no-op.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;span&gt;*** DRAFT ***&lt;/span&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Thu, 10 May 2018 18:20:10 +0000</pubDate>
<dc:creator>coleifer</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sqlite.org/draft/lang_UPSERT.html</dc:identifier>
</item>
<item>
<title>Rust 1.26 released</title>
<link>https://blog.rust-lang.org/2018/05/10/Rust-1.26.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2018/05/10/Rust-1.26.html</guid>
<description>&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.26.0. Rust is a systems programming language focused on safety, speed, and concurrency.&lt;/p&gt;&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.26.0 is as easy as:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rustup update stable
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you don’t have it already, you can &lt;a href=&quot;https://www.rust-lang.org/install.html&quot;&gt;get &lt;code class=&quot;highlighter-rouge&quot;&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes for 1.26.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h2 id=&quot;whats-in-1260-stable&quot;&gt;What’s in 1.26.0 stable&lt;/h2&gt;
&lt;p&gt;The past few releases have had a steady stream of relatively minor additions. We’ve been working on a lot of stuff, however, and it’s all starting to land in stable. 1.26 is possibly the most feature-packed release since Rust 1.0. Let’s dig in!&lt;/p&gt;
&lt;h4 id=&quot;the-rust-programming-language-second-edition&quot;&gt;“The Rust Programming Language” Second Edition&lt;/h4&gt;
&lt;p&gt;For almost 18 months, Carol, Steve, and others have been working on a complete re-write of “The Rust Programming Language.” We’ve learned a lot about how people learn Rust since the first book was written, and this version is an improvement in every way.&lt;/p&gt;
&lt;p&gt;We’ve shipped the draft of the second edition on the website for a while now, but with a disclaimer that it was a work in progress. At this point, the book is undergoing some final, minor copy-edits, and being prepared for print. As such, with this release, we are recommending the second edition over the first. You can &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/&quot;&gt;read it on doc.rust-lang.org&lt;/a&gt; or locally via &lt;code class=&quot;highlighter-rouge&quot;&gt;rustup doc --book&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Speaking of print, you can pre-order a dead tree version of the book &lt;a href=&quot;https://www.nostarch.com/Rust&quot;&gt;from NoStarch Press&lt;/a&gt;. The contents are identical, but you get a nice physical book to put on a shelf, or a beautifully typeset PDF. Proceeds are going to charity.&lt;/p&gt;
&lt;h4 id=&quot;impl-trait&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;At long last, &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; is here! This feature has been highly desired for quite a while, and provides a feature known as “existential types.” It’s simpler than that sounds, however. The core of it is this idea:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This type signature says “&lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; is a function that takes no arguments but returns a type that implements the &lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;/code&gt; trait.” That is, we’re not going to tell you what the return type of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; actually is, only that it implements a particular trait. You may wonder how this differs from a trait object:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;While it’s true that you could have written this code today, it’s not ideal in all situations. Let’s say we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;/code&gt; trait that is implemented for both &lt;code class=&quot;highlighter-rouge&quot;&gt;i32&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;f32&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// implementation goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;f32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// implementation goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Consider this function:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We want to fill in the return type with something. Previously, only the trait object version was possible:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But this introduces a &lt;code class=&quot;highlighter-rouge&quot;&gt;Box&lt;/code&gt;, which means allocation. We’re not actually returning some kind of dynamic data here either, so the dynamic dispatch of the trait object hurts too. So instead, as of Rust 1.26, you can write this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This doesn’t create a trait object, it’s like we had written &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt; i32&lt;/code&gt;, but instead, we’re only mentioning the part about &lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;/code&gt;. We get static dispatch, but we can hide the real type like this.&lt;/p&gt;
&lt;p&gt;Why is this useful? One good use is closures. Remember that closures in Rust all have a unique, un-writable type, yet implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;/code&gt; trait. This means that if your function returns a closure, you can do this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// before&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// after&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;No boxing, no dynamic dispatch. A related scenario happens when returning iterators. Not only do iterators often include closures, but since they nest, you get quite deeply nested types. For example:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;when compiled, gives this error:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;35&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;error[E0308]: mismatched types
 --&amp;gt; src/main.rs:5:5
  |
5 | /     vec![1, 2, 3]
6 | |         .into_iter()
7 | |         .map(|x| x + 1)
8 | |         .filter(|x| x % 2 == 0)
  | |_______________________________^ expected (), found struct `std::iter::Filter`
  |
  = note: expected type `()`
             found type `std::iter::Filter&amp;lt;std::iter::Map&amp;lt;std::vec::IntoIter&amp;lt;{integer}&amp;gt;, [closure@src/main.rs:7:14: 7:23]&amp;gt;, [closure@src/main.rs:8:17: 8:31]&amp;gt;`
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That’s a huge ‘found type’. Each adapter in the chain adds a new type. Additionally, we have that closure in there. Previously, we’d have had to use a trait object here, but now we can simply do&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and be done with it. Working with &lt;a href=&quot;https://crates.io/crates/futures&quot;&gt;futures&lt;/a&gt; is very similar.&lt;/p&gt;
&lt;p&gt;It’s important to note that sometimes trait objects are still what you need. You can only use &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; if your function returns a single type; if you want to return multiple, you need dynamic dispatch. For example:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here, we may return a filtered iterator, or maybe not. There’s two different types that can be returned, and so we must use a trait object.&lt;/p&gt;
&lt;p&gt;Oh, and one last thing: to make the syntax a bit more symmetrical, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; in argument position too. That is:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// before&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// after&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which can look a bit nicer for short signatures.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;Side note for you type theorists out there: this isn’t an existential, still a universal. In other words, &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; is universal in an input position, but existential in an output position.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;nicer-match-bindings&quot;&gt;Nicer &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt; bindings&lt;/h4&gt;
&lt;p&gt;Have you ever had a reference to an &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt;, and tried to use &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;? For example, code like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I don't know who you are.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you tried to compile this in Rust 1.25, you’d get this error:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;error[E0658]: non-reference pattern used to match a reference (see issue #42640)
 --&amp;gt; src/main.rs:6:9
  |
6 |         Some(name) =&amp;gt; println!(&quot;Hello {}!&quot;, name),
  |         ^^^^^^^^^^ help: consider using a reference: `&amp;amp;Some(name)`

error[E0658]: non-reference pattern used to match a reference (see issue #42640)
 --&amp;gt; src/main.rs:7:9
  |
7 |         None =&amp;gt; println!(&quot;I don't know who you are.&quot;),
  |         ^^^^ help: consider using a reference: `&amp;amp;None`
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Okay, sure. Let’s modify the code:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I don't know who you are.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We added the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;s the compiler complained about. Let’s try to compile again:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;33.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;error[E0507]: cannot move out of borrowed content
 --&amp;gt; src/main.rs:6:9
  |
6 |         &amp;amp;Some(name) =&amp;gt; println!(&quot;Hello {}!&quot;, name),
  |         ^^^^^^----^
  |         |     |
  |         |     hint: to prevent move, use `ref name` or `ref mut name`
  |         cannot move out of borrowed content
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Okay, sure. Let’s make the compiler happy again by taking its advice:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I don't know who you are.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will finally compile. We had to add two &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;s, and a &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;. But more importantly, none of this was really &lt;em&gt;helpful&lt;/em&gt; to us as programmers. Sure, we forgot a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; at first, but does that matter? We had to add &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt; to get a reference to the inside of the option, but we couldn’t do anything &lt;em&gt;but&lt;/em&gt; get a reference, as we can’t move out of a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;T&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, as of Rust 1.26, the initial code, without the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;s and &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;, will just compile and do exactly what you’d expect. In short, the compiler will automatically reference or de-reference in &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt; statements. So when we say&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;the compiler automatically references the &lt;code class=&quot;highlighter-rouge&quot;&gt;Some&lt;/code&gt;, and since we’re borrowing, &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; is bound as &lt;code class=&quot;highlighter-rouge&quot;&gt;ref name&lt;/code&gt; automatically as well. If we were mutating:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.push_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;the compiler will automatically borrow by mutable reference, and &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; will be bound as &lt;code class=&quot;highlighter-rouge&quot;&gt;ref mut&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;We think this will remove a significant papercut for new and old Rustaceans alike. The compiler will just do the right thing more often without the need for boilerplate.&lt;/p&gt;
&lt;h4 id=&quot;main-can-return-a-result&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; can return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Speaking of papercuts, since Rust uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt; type for returning errors, and &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; to make handling them easy, a common pain-point of new Rustaceans is to try and use &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will give an error like “error[E0277]: the &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; operator can only be used in a function that returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;”. This leads to a pattern where many people write code that &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch12-03-improving-error-handling-and-modularity.html#extracting-logic-from-main&quot;&gt;looks like this&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// --snip--&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// --snip--&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Application error: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nn&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Our &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; function has all of the real logic, and &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; calls &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;, only checking to see if there was an error and exiting. We need to make this second function because &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; can’t return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;, but we’d like to use &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; in that logic.&lt;/p&gt;
&lt;p&gt;In Rust 1.26, you can now declare &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; that returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This now works just fine! If &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; returns an error, this will exit with an error code, and print out a debug representation of the error.&lt;/p&gt;
&lt;h4 id=&quot;inclusive-ranges-with-&quot;&gt;Inclusive ranges with &lt;code class=&quot;highlighter-rouge&quot;&gt;..=&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Since well before Rust 1.0, you’ve been able to create exclusive ranges with &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will print &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 1&lt;/code&gt; and then &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 2&lt;/code&gt;. In Rust 1.26, you can now create an inclusive range, like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will print &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 1&lt;/code&gt; and then &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 2&lt;/code&gt; like before, but also &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 3&lt;/code&gt;; the three is included in the range. Inclusive ranges are especially useful if you want to iterate over every possible value in a range. For example, this is a surprising Rust program:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;What does this program do? The answer: nothing. The warning we get when compiling has a hint:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;warning: literal out of range for u8
 --&amp;gt; src/main.rs:6:17
  |
6 |     for i in 0..256 {
  |                 ^^^
  |
  = note: #[warn(overflowing_literals)] on by default
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That’s right, since &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; is a &lt;code class=&quot;highlighter-rouge&quot;&gt;u8&lt;/code&gt;, this overflows, and is the same as writing &lt;code class=&quot;highlighter-rouge&quot;&gt;for i in 0..0&lt;/code&gt;, so the loop executes zero times.&lt;/p&gt;
&lt;p&gt;We can do this with inclusive ranges, however:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will produce those 256 lines of output you might have been expecting.&lt;/p&gt;
&lt;h4 id=&quot;basic-slice-patterns&quot;&gt;Basic slice patterns&lt;/h4&gt;
&lt;p&gt;Another long-awaited feature is “slice patterns.” These let you match on slices similar to how you match on other data types. For example:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;starts with one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;starts with something else&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this case, we know &lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; has a length of three, and so we need three entries inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;s. We can also match when we don’t know the length:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here, we don’t know how long &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; is, so we can write the first two arms, each with different lengths. This also means we need a &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; term, since we aren’t covering every possible length, nor could we!&lt;/p&gt;
&lt;h4 id=&quot;speed-improvements&quot;&gt;Speed improvements&lt;/h4&gt;
&lt;p&gt;We continue to work on the speed of the compiler. We discovered that deeply nesting types was non-linear in some cases, and &lt;a href=&quot;https://github.com/rust-lang/rust/pull/48296&quot;&gt;a fix was implemented&lt;/a&gt;. We’re seeing up to a 12% reduction in compile times from this change, but many other smaller fixes landed as well. More to come in the future!&lt;/p&gt;
&lt;h4 id=&quot;128-bit-integers&quot;&gt;128 bit integers&lt;/h4&gt;
&lt;p&gt;Finally, a very simple feature: Rust now has 128 bit integers!&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i128&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u128&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;These are twice the size of &lt;code class=&quot;highlighter-rouge&quot;&gt;u64&lt;/code&gt;, and so can hold more values. More specifically,&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;u128&lt;/code&gt;: 0 - 340,282,366,920,938,463,463,374,607,431,768,211,455&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i128&lt;/code&gt;: −170,141,183,460,469,231,731,687,303,715,884,105,728 - 170,141,183,460,469,231,731,687,303,715,884,105,727&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Whew!&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3 id=&quot;library-stabilizations&quot;&gt;Library stabilizations&lt;/h3&gt;
&lt;p&gt;We stabilized &lt;a href=&quot;https://doc.rust-lang.org/std/fs/fn.read_to_string.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fs::read_to_string&lt;/code&gt;&lt;/a&gt;, a convenience over &lt;code class=&quot;highlighter-rouge&quot;&gt;File::open&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;io::Read::read_to_string&lt;/code&gt; for easily reading an entire file into memory at once:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketAddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SocketAddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read_to_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;address.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can now &lt;a href=&quot;https://github.com/rust-lang/rust/pull/48978&quot;&gt;format numbers as hexadecimal with &lt;code class=&quot;highlighter-rouge&quot;&gt;Debug&lt;/code&gt; formatting&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;format!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{:02x?}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Foo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[46, 6f, 6f, 00]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Trailing commas &lt;a href=&quot;https://github.com/rust-lang/rust/pull/48056&quot;&gt;are now supported by all macros in the standard library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3 id=&quot;cargo-features&quot;&gt;Cargo features&lt;/h3&gt;
&lt;p&gt;Cargo didn’t receive many big new features this release but rather saw a steady stream of stability and performance improvements. Cargo should now resolve lock files even faster, backtrack more intelligently, and require manual &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo update&lt;/code&gt; invocations less. Cargo’s binary &lt;a href=&quot;https://github.com/rust-lang/cargo/pull/5083&quot;&gt;now also shares the same version as &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2 id=&quot;contributors-to-1260&quot;&gt;Contributors to 1.26.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.26. We couldn’t have done it without all of you.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://thanks.rust-lang.org/rust/1.26.0&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 17:17:06 +0000</pubDate>
<dc:creator>dikiaap</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2018/05/10/Rust-1.26.html</dc:identifier>
</item>
<item>
<title>Carnegie Mellon Launches Undergraduate Degree in Artificial Intelligence</title>
<link>https://www.cs.cmu.edu/news/carnegie-mellon-launches-undergraduate-degree-artificial-intelligence</link>
<guid isPermaLink="true" >https://www.cs.cmu.edu/news/carnegie-mellon-launches-undergraduate-degree-artificial-intelligence</guid>
<description>&lt;p&gt;The School of Computer Science will launch a bachelor of science program in artificial intelligence this fall.&lt;/p&gt;&lt;div readability=&quot;131.12621359223&quot;&gt;
&lt;p class=&quot;Normal1&quot;&gt;Carnegie Mellon University's School of Computer Science will offer a new &lt;a href=&quot;https://www.cs.cmu.edu/bs-in-artificial-intelligence&quot;&gt;undergraduate degree in artificial intelligence&lt;/a&gt; beginning this fall, providing students with in-depth knowledge of how to transform large amounts of data into actionable decisions.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;SCS has created the new AI degree, the first offered by a U.S. university, in response to extraordinary technical breakthroughs in AI and the growing demand by students and employers for training that prepares people for careers in AI.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;&quot;Specialists in artificial intelligence have never been more important, in shorter supply or in greater demand by employers,&quot; said Andrew Moore, dean of the School of Computer Science. &quot;Carnegie Mellon has an &lt;a href=&quot;https://ai.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;unmatched depth of expertise in AI&lt;/a&gt;, making us uniquely qualified to address this need for graduates who understand how the power of AI can be leveraged to help people.&quot;&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;This spring, U.S. News and World Report ranked SCS as the No. 1 graduate school for artificial intelligence.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;The bachelor's degree program in computer science teaches students to think broadly about methods that can accomplish a wide variety of tasks across many disciplines, said &lt;a href=&quot;http://www.cs.cmu.edu/~reids/&quot; target=&quot;_blank&quot;&gt;Reid Simmons&lt;/a&gt;, research professor of robotics and computer science and director of the new AI degree program. The bachelor's degree in AI will focus more on how complex inputs — such as vision, language and huge databases — are used to make decisions or enhance human capabilities, he added. AI majors will receive the same solid grounding in computer science and math courses as other computer science students. In addition, they will have additional course work in AI-related subjects such as statistics and probability, computational modeling, machine learning, and symbolic computation.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Simmons said the program also would include a strong emphasis on ethics and social responsibility. This will include independent study opportunities in using AI for social good, such as improving transportation, health care or education.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Students accepted by SCS as first-year students can enter the AI degree program in their second year. All students, thus, will take first-year courses in core computer science competencies and introductory courses. This will enable them to make informed choices when it is time to declare a major, whether it's AI, computer science or computational biology — the latter an undergraduate degree program that began in fall 2017.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Initially, AI undergraduate enrollment will accommodate no more than 100 second-, third- and fourth-year students — or about 30–35 new students each year. (SCS enrolls about 735 undergraduates.) In fall 2018, a limited number of second- and third-year students who have already taken a substantial number of relevant courses can apply to join the new AI degree program.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Just as artificial intelligence unites such disciplines as machine learning, natural language processing, computer vision, robotics and human-computer interaction, instruction in the AI program will draw on the faculty of SCS's &lt;a href=&quot;https://www.ml.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Machine Learning Department&lt;/a&gt;, &lt;a href=&quot;https://www.lti.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Language Technologies Institute&lt;/a&gt;, &lt;a href=&quot;https://www.ri.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Robotics Institute&lt;/a&gt;, &lt;a href=&quot;https://www.hcii.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Human-Computer Interaction Institute,&lt;/a&gt; &lt;a href=&quot;https://www.csd.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Computer Science Department&lt;/a&gt; and &lt;a href=&quot;http://www.isri.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Institute for Software Research&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;The degree will leverage CMU's traditional strength in cross-disciplinary instruction, particularly in exploring the ethical and societal implications of AI, by involving faculty members from the &lt;a href=&quot;https://www.cmu.edu/dietrich/&quot; target=&quot;_blank&quot;&gt;Dietrich College of Humanities and Social Sciences&lt;/a&gt;, the &lt;a href=&quot;https://www.heinz.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Heinz College&lt;/a&gt; and the &lt;a href=&quot;https://engineering.cmu.edu/&quot; target=&quot;_blank&quot;&gt;College of Engineering&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;CMU has a long history in artificial intelligence, including the creation of the first AI computer program in 1956 and pioneering work in self-driving cars, facial recognition and natural language processing. Last year, SCS began its &lt;a href=&quot;https://ai.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;CMU AI research and education initiative&lt;/a&gt;, which involves almost 200 faculty members working in AI-related areas that range from art to public policy.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;CMU also has been a leader in education, offering the first university-level course in computer programming in 1958, launching the first Ph.D. program in robotics and creating the world's first Machine Learning Department. SCS will once again advance computer science education through its AI degree program, said Simmons, who is completing a 2.5-year stint as program director in the National Science Foundation's Computer and Information Science and Engineering (CISE) Directorate and lead for the National Robotics Initiative.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;&quot;It's an opportunity for us to shape what it means to be a degree program in AI, as opposed to offering courses related to AI,&quot; Simmons said. The new program will employ the same academic rigor — no more, no less — that has made CMU's undergraduate program the gold standard for computer science.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;&quot;We want to be the first to offer an AI undergraduate degree,&quot; he continued. &quot;I'm sure we won't be the last. AI is here to stay.&quot;&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;For more information, visit the BSAI website at &lt;a href=&quot;https://www.cs.cmu.edu/bs-in-artificial-intelligence&quot;&gt;https://www.cs.cmu.edu/bs-in-artificial-intelligence.&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt; &lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 10 May 2018 16:28:03 +0000</pubDate>
<dc:creator>e15ctr0n</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cs.cmu.edu/news/carnegie-mellon-launches-undergraduate-degree-artificial-intelligence</dc:identifier>
</item>
<item>
<title>ISPs Say They Don’t Make Enough Money</title>
<link>https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</guid>
<description>&lt;p&gt;In their effort to prevent states from protecting a free and open Internet, a small handful of massive and extraordinarily profitably Internet service providers (ISPs) are telling state legislatures that network neutrality would hinder their ability to raise revenues to pay for upgrades and thus force them to charge consumers higher bills for Internet access. This is because state-based network neutrality will prohibit data discrimination schemes known as “paid prioritization” where the ISP charges websites and applications new tolls and relegate those that do not pay to the slow lane.&lt;/p&gt;
&lt;p&gt;In essence, they are saying they have to charge new fees to websites and applications in order to pay for upgrades and maintenance to their networks. In other words, people are using so much of their broadband product that they can’t keep up on our monthly subscriptions.&lt;/p&gt;
&lt;p&gt;Nothing could be further from the truth.&lt;/p&gt;
&lt;p&gt;Today in America we have ISPs that are already deploying 21st-century high-speed broadband without resorting to violating network neutrality or monetizing our personal information with advertisers. The fact is nothing—and certainly not a lack of funds—prevents incumbents from upgrading their networks and bringing a vast majority of American cities they serve into the 21st century of Internet access. That means gigabit broadband services anywhere between $40 to $70 a month (the range people in the handful of competitive markets pay today). Yet, year after year, these ISPs have pocketed billions in profits and it is not until they face competition from a rival provider that they upgrade their networks.&lt;/p&gt;
&lt;p&gt;Ultimately, it’s not network neutrality that prevents the large ISPs from upgrading their networks while lowering prices. It is a lack of incentive.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;The Biggest Cost For An ISP is the Initial Deployment, Not Internet Usage&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;ISPs misrepresent to policymakers the true cost drivers of broadband deployment as a way to stave off pro-consumer protections. In fact, the biggest cost barrier for an ISP’s creation is the initial construction of the network (as opposed to its future upgrades) and the civil works that entails. That is what the &lt;a href=&quot;https://oversight.house.gov/wp-content/uploads/2012/01/TestimonyofMiloMedin_1.pdf&quot;&gt;Google Fiber deployment&lt;/a&gt; &lt;a href=&quot;http://www.fclj.org/wp-content/uploads/2014/01/66-1Trogdon.pdf&quot;&gt;has taught us&lt;/a&gt; and that is what &lt;a href=&quot;https://localhost/here%20https/::ec.europa.eu:digital-single-market:news:support-preparation-impact-assessment-accompany-eu-initiative-reducing-costs-high-speed&quot;&gt;studies&lt;/a&gt; in the European Union concluded when analyzing how to improve the market entry prospects of ISPs.&lt;/p&gt;
&lt;p&gt;Some estimates suggest the cost of deployment can be close to 80 percent of the entire cost portfolio of an ISP. Note that means operations and maintenance of the network (that includes all of the broadband usages of its customers) could be as little as 20% of the ISP’s costs. This is acutely true when it comes to a fiber to the home deployment where the infrastructure (fiber optic cable) is effectively future-proof and can be upgraded cheaply with advances in electronics.&lt;/p&gt;
&lt;p&gt;It is worth remembering that our current incumbent telephone and cable companies have made back their initial investment costs because they entered the market as monopolies in the old days and likely enjoyed favorable financing as safe bets (nothing is safer to invest in than a monopoly). Our current incumbents enjoyed a litany of advantages for being the first to deploy. For example, many buildings as they were constructed prospectively required the installation of a telephone and cable line, which in essence gave them virtually a free ride to customers that new entrants will not enjoy.&lt;/p&gt;
&lt;p&gt;This is also why it has been very hard to get new competition because they have to navigate the infrastructure deployment and rights-of-way from a very different position. Another example, when Google was deploying its fiber network in Austin, Texas, it needed to run its wires along the telephone pole system. Unfortunately for Google, AT&amp;amp;T owned many of those poles and simply &lt;a href=&quot;https://arstechnica.com/tech-policy/2013/12/why-att-says-it-can-deny-google-fiber-access-to-its-poles-in-austin&quot;&gt;denied them access to build in their entirety&lt;/a&gt;. This is a big reason why &lt;a href=&quot;https://www.eff.org/deeplinks/2017/06/isps-across-country-tell-chairman-pai-not-repeal-network-neutrality&quot;&gt;many small ISPs supported the FCC’s 2015 Open Internet Order&lt;/a&gt; because it guaranteed them rights to access infrastructure if it was owned by an incumbent and prohibited by law the conduct AT&amp;amp;T exhibited in Austin, Texas.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;The World’s Fastest ISP Adheres to Network Neutrality and Privacy and Still Makes a Profit&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;In addition to ISPs not needing new huge sums of money to upgrade and operate their networks, we have a case study that shows that adhering to network neutrality principles while also respecting user privacy by not monetizing their personal information doesn’t prevent ISPs from making the money they need to deploy high-speed affordable Internet.&lt;/p&gt;
&lt;p&gt;EPB Fiber Optics, a community broadband company run by Chattanooga, Tennessee, offers both gigabit broadband and 10-gigabit broadband as well. A decade of their financial information, including how much they invest, how much the network costs, and how much profit they are making, is &lt;a href=&quot;https://epb.com/about-epb/leadership-annual-reports&quot;&gt;available here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;378&quot; src=&quot;https://www.eff.org/files/2018/05/04/epb_financials.jpeg&quot; width=&quot;671&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Here is what the data demonstrates in regards to the scalability of fiber optic cable and why ISPs are misleading policymakers when they assert that Internet usage or high bandwidth applications drive their costs.&lt;/p&gt;
&lt;p&gt;At the launch of its gigabit broadband service in 2009, EPB started in the red with capital expenditures (money spent on purchasing equipment and improving infrastructure) and operating expenses (maintaining and running the network) far above the revenue. But once they had about 35,000 customers, the network became profitable (all while following network neutrality and not monetizing the personal information of their customers).&lt;/p&gt;
&lt;p&gt;In the years that followed, the revenue gained from adding new customers far outpaced their maintenance costs and money spent upgrading their network. It is almost impossible to detect the increased spending EPB underwent to upgrade to a 10-gigabit network in 2016. Often &lt;a href=&quot;https://www.engadget.com/2014/03/21/atandt-netflix-bandwidth-problems/&quot;&gt;ISPs blame companies like Netflix for driving their costs&lt;/a&gt;, yet there is no evidence that increased consumption by the customers of EPB resulted in an increase in their costs that wasn’t already more than compensated by their $50-$70 a month charge. If it was true that high bandwidth applications incurred uniquely high costs to ISPs, then the revenue line would not be outpacing the operating expenses line year after year of growth as online video consumption grew. Those lines would have to be moving closer together.&lt;/p&gt;
&lt;p&gt;EPB is able to deploy a 21st Century ISP with the world’s fastest service with just 90,000 customers today while following network neutrality and forgoing extra profits from monetizing personal information like web browsing history. Meanwhile, Comcast sits on about 25 million customers and made $8.6 billion in profits for 2016 (and this was before Congress cut the corporate tax rates). At the same time, both AT&amp;amp;T and Verizon each collected around $13 billion each in profits for 2016.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Charging Low Prices for Huge Amounts of Bandwidth Is Not Exclusively Reserved for Community Broadband&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Being able to provide affordable high-speed Internet for a profit while respecting network neutrality and user privacy is something the competitors to the incumbents have repeatedly demonstrated.  Take regional provider Sonic for an example and their Brentwood, California deployment where the city’s infrastructure policies eliminated a majority of the costs of building the ISP. Right now Sonic sells gigabit broadband in the city of Brentwood at $40 a month, one of the lowest priced offerings for gigabit service. Again, they are doing this for a profit all while following network neutrality and protecting their customers’ privacy (Sonic regularly &lt;a href=&quot;https://www.mercurynews.com/2017/04/27/sonic-ceo-talks-expansion-broadband-policy/&quot;&gt;supports laws codifying their commitments&lt;/a&gt; as well). &lt;/p&gt;
&lt;p&gt;The provisioning of the service is not the expensive part of an ISPs business, and the usage of Internet access is not an unsustainable cost driver. If one would to properly diagnose the most efficient way to reduce ISP costs, they would look towards city planning and learn from Brentwood. The Sonic gigabit network all came about because in 1999 the city adopted a building code conduit requirement for all new development. The code required developers to build a 4-inch conduit pipe and then deed it back to the city. The policy goal at the time was to lay infrastructure with the hope of franchising a second cable television provider. However, no new cable company arrived and the city-owned nearly 120 to 150 miles of unused conduit reaching 8,000 homes and commercial zones built since 1999.&lt;/p&gt;
&lt;p&gt;In response to the proposal by Sonic to utilize the infrastructure, the city issued a Request for Expression of Interest (RFEI) highlighting the available conduit to the companies Astound, AT&amp;amp;T, Comcast, Google, Level 3, Lit San Leandro, XO Communications, and Sonic. However, the only respondent to the RFEI was Sonic and &lt;a href=&quot;http://brentwood.granicus.com/MetaViewer.php?view_id=36&amp;amp;clip_id=1846&amp;amp;meta_id=151754&quot;&gt;so the city chose them to deploy the network&lt;/a&gt;, which was so lucrative an agreement that Sonic agreed to provide the local schools within the conduit network free gigabit service among other things while still making money.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;We Already Pay More Than Enough to Get High-Speed, Affordable Internet Where Our Privacy is Protected and Net Neutrality is Preserved&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;The fact is, more than half of Americans have one choice for high-speed broadband and the incumbents know they can rest on their legacy investments to maximize profits until they face competition from other broadband providers. They don’t have to make their service better or faster, because most of their customers have to choose between them or nothing. They worked so hard to repeal our privacy protections and repeal net neutrality because since so many of us lack choice in the market they can start increasing their profits and give nothing to the consumer in return.&lt;/p&gt;
&lt;p&gt;No regulations banning paid prioritization have prevented them from upgrading their network. We see this in both Chattanooga’s EPB and Brentwood’s Sonic, which operate perfectly well while following network neutrality and have forgoing extra profits from monetizing our personal information.&lt;/p&gt;
&lt;p&gt;Net neutrality ensures that ISPs are prevented from harming the competition they face from edge providers (particularly video providers that compete with television such Hulu, Netflix, and Amazon) as well as preserve the innovation benefits an open Internet yields. It also prohibits them from charging unjustified fees on Internet services that will do nothing to improve the Internet but will do real harm to the free and open nature of the network we have enjoyed for decades.&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 16:20:40 +0000</pubDate>
<dc:creator>davegauer</dc:creator>
<og:type>article</og:type>
<og:title>The Big Lie ISPs Are Spreading in State Legislatures Is That They Don’t Make Enough Money</og:title>
<og:url>https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</og:url>
<og:description>In their effort to prevent states from protecting a free and open Internet, a small handful of massive and extraordinarily profitably Internet service providers (ISPs) are telling state legislatures that network neutrality would hinder their ability to raise revenues to pay for upgrades and thus...</og:description>
<og:image>https://www.eff.org/files/2016/04/12/og-neutrality-banner.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</dc:identifier>
</item>
<item>
<title>Microsoft Turned Consumers Against the Skype Brand</title>
<link>https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</guid>
<description>&lt;p&gt;It's relatively easy these days to find critics of Skype, the popular online calling service that Microsoft acquired in 2011 for $8.5 billion. Former devotees routinely gripe on social media that the software has become too difficult to use. On the Apple App store and Google Play store, negative reviews of the smartphone app are piling up, citing everything from poor call quality to gluttonous battery demand.&lt;/p&gt;


&lt;p&gt;In March tech investor and commentator Om Malik summarized the negativity by tweeting that Skype was “a turd of the highest quality” and directing his ire at its owner. “Way to ruin Skype and its experience. I was forced to use it today, but never again.”&lt;/p&gt;


&lt;p&gt;Microsoft Corp. says the criticism is overblown and reflects, in part, people's grumpiness with software updates. There are also other factors undermining users’ affection for an internet tool that 15 years ago introduced the idea of making calls online, radically resetting the telecommunications landscape in the process.&lt;/p&gt;




&lt;p&gt;Since acquiring Skype from private equity investors, Microsoft has refocused the online calling service on the corporate market, a change that has made Skype less intuitive and harder to use, prompting many Skypers to defect to similar services operated by Apple, Google, Facebook and Snap.&lt;/p&gt;


&lt;p&gt;&lt;span&gt;The company hasn’t updated the number of Skype users since 2016, when it put the total at 300 million. Some analysts suspect the numbers are flat at best, and two former employees describe a general sense of panic that they’re actually falling. The ex-Microsofters, who requested anonymity to discuss confidential statistics, say that as late as 2017 they never heard a figure higher than 300 million discussed internally.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Chief Executive Officer Satya Nadella has repeatedly said he wants the company’s products to be widely used and loved. By turning Skype into a key part of its lucrative Office suite for corporate customers, Microsoft is threatening what made it appealing to regular folks in the first place. “It is like Tim Tebow trying to be a baseball player,” Malik says. “The product is so confusing, kludgey and unusable.”&lt;/p&gt;
&lt;p&gt;Founded in 2003 by a pair of Nordic entrepreneurs, Skype freed tens of millions of people from the tyranny of the phone companies by offering cheap overseas calls. Most chatted free, and Skype made money charging for prepaid calls to regular phones. The company has cycled through various owners, including EBay. By 2011, the company was controlled by a Silver Lake-led consortium of investors and shopping itself to potential acquirers including Google and Microsoft even as it prepared for an initial public offering.&lt;/p&gt;
&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-327624388&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i3byu9.s1Be8/v3/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i3byu9.s1Be8/v3/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Steve Ballmer discusses Microsoft's acquisition of Skype Technologies SA, in 2011. &lt;/p&gt;
&lt;p&gt;Photographer: Noah Berger/Bloomberg&lt;/p&gt;
&lt;p&gt;Keen to reduce Microsoft’s reliance on the personal computer, former CEO Steve Ballmer saw in Skype an internet brand that was so popular it had become a verb. Having erred previously by acquiring No. 2 players to save money, Ballmer decided to buy the leading incumbent and pay a 40 percent premium over what Skype valued itself at the time.&lt;/p&gt;

&lt;p&gt;“It was the biggest asset in the space at the time with the most recognized brand,” says Lori Wright, who joined the Skype team as general manager last year from video-conference rival BlueJeans. “It was an opportunistic way for Microsoft to enter into something that was going to be significant.”&lt;/p&gt;
&lt;p&gt;After the acquisition, Microsoft executive and former Skype CFO Bill Koefoed was routinely reminded of Skype’s popularity as a way to make cheap, or free, international calls. He recalls identifying himself to immigration officers on business trips overseas and constantly hearing variations of: I use Skype to call my grandmother!  “Skype was such an iconic brand,” he says. &lt;/p&gt;
&lt;p&gt;Focusing on corporations was a reasonable strategy and one shared by Skype’s prior management. Originally Ballmer and company pledged to let Skype operate independently from Lync, Microsoft’s nascent internet phone service for corporations. But two years later the company began merging the two into Skype for Business and folded that into Office.&lt;/p&gt;

&lt;p&gt;Today, Microsoft is using Skype for Business to help sell subscriptions to its cloud-based Office 365 and steal customers from Cisco. Microsoft has essentially turned Skype into a replacement for a corporate telephone system—with a few modern features borrowed from instant messaging, artificial intelligence and social networking. Teams, the company’s year-old version of Slack, is being merged with Skype for Business. LinkedIn, another acquisition, will provide work bios of the people Skypers are about to call. Drawing on Microsoft’s pioneering work in AI, Skype can now translate calls into 12 languages.&lt;/p&gt;
&lt;p&gt;As proof that the strategy is working, Microsoft points to a roster of blue-chip customers. Among them is General Electric, which says it rolled out Skype for Business to 220,000 employees late last year and is logging 5.5 million meeting minutes a day. Accenture and some of the largest banks are also big users, according to Office 365 marketing vice president Ron Markezich. In a Forrester survey of 6,259 information workers, 28 percent said they used Skype for Business for conferencing, compared with 21 percent for Cisco’s products.&lt;/p&gt;&lt;p&gt;Atkins, a U.K. engineering-design company that’s part of SNC Lavalin Group, says its 18,500 workers use Skype for telephone service, conferences and sharing projects – to the tune of 10 million minutes a month. “We did a full competitor analysis but we trusted Microsoft's vision,” says Atkins collaboration manager Nick Ledger, who says he likes how Skype is integrated with Office. “Very rarely do we have any problems.”&lt;/p&gt;
&lt;p&gt;But Microsoft has paid a price for prioritizing corporations over consumers. The former seek robust security, search and the ability to host town halls; the latter ease-of-use and decent call quality. Inevitably, the complexity of the corporate software crowds out the simplicity consumers prefer. While the company maintains two separate apps, the underlying technology is the same and it's built with workers in mind. &lt;/p&gt;
&lt;p&gt;Skype has tried to be all things to all people, “and almost all those things are executed better elsewhere,” says Matthew Culnane, a user experience and content strategist at the U.K.’s Open University.&lt;/p&gt;
&lt;p&gt;It doesn’t help that Microsoft keeps overhauling the app. A redesign last summer sent ratings plunging. In a scorching Twitter commentary, security journalist Brian Krebs said finding basic buttons was a PITA (pain in the ass) and that the recent update was “probably the worst so far.” The tweet—and retweets—got the attention of Skype’s social network team.  “Brian, we’re sorry to hear this,” a representative replied. “Would love to hear more feedback and see if there’s anything we can help with.”&lt;/p&gt;
&lt;p&gt;“&lt;span&gt;There was a demographic that loved Skype for what it was; it was clean and simple,” says Carolina Milanesi, an analyst at Creative Strategies. “That's no longer the case.” Milanesi once paid for a Skype subscription for her mother in Italy. Then her mom got an iPad and now they talk on Apple Facetime. Millions do the same, despite the fact that Skype apps are a download away on iPhone and Android smart phones and tablets. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Microsoft’s focus on the corporate market may also have blinded it to the rise of WhatsApp, Facebook Messenger and Tencent’s WeChat. Microsoft killed off Windows Live Messenger five years ago, right when WhatsApp was amassing hundreds of millions of users around the globe. The instant messaging service now has 1.5 billion users and has started adding key Skype features. Meanwhile, upstarts like Discord, a free voice and text chat app for gamers, are gaining users.&lt;/p&gt;
&lt;p&gt;People who have remained loyal to Skype despite all the alternatives complain most about service quality—calls that don't connect, connections that drop every other word, address books that disappear after software updates. Business customers have similar issues too, according to Forrester analyst Nick Barber. “It's not uncommon for me to talk to companies that have Skype for Business, yet they are still looking at other options because it's not working for them,” he said. “It's usually around the call quality and consistency both with audio and video.”&lt;/p&gt;
&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;Microsoft says it takes quality seriously and tracks dropped calls to ascertain what went wrong. Wright says sometimes the customer’s network is at fault, not Skype. She argues that most companies are struggling to perfect the technology. “People get frustrated that it doesn’t work like dial-tone and say ‘I am just going to switch to the next app or service,’ only to find out that the next service has the same issue,” she says.  “We are making rapid progress.”&lt;/p&gt;
&lt;p&gt;Downloads of Skype’s Android app reached 1 billion in October, although Microsoft doesn’t say how often people log on. Ratings are starting to recover from the initial nosedive as customers become accustomed to the changes. “It’s a really radical redesign, so we thought there was going to be a pretty negative reaction; we were braced for that,” Wright says. “What we are seeing now is they don’t hate it anymore.”&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 14:31:37 +0000</pubDate>
<dc:creator>gorbachev</dc:creator>
<og:description>Since buying the internet phone service in 2011, Microsoft has signed up corporations like GE and alienated long-time Skypers.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/igQchLPaTzgE/v1/1200x800.jpg</og:image>
<og:title>Don't Skype Me: How Microsoft Turned Consumers Against a Beloved Brand</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</dc:identifier>
</item>
<item>
<title>Amazon Aurora Backtrack</title>
<link>https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</link>
<guid isPermaLink="true" >https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</guid>
<description>&lt;p&gt;We’ve all been there! You need to make a quick, seemingly simple fix to an important production database. You compose the query, give it a once-over, and let it run. Seconds later you realize that you forgot the WHERE clause, dropped the wrong table, or made another serious mistake, and interrupt the query, but the damage has been done. You take a deep breath, whistle through your teeth, wish that reality came with an Undo option. Now what?&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;New Amazon Aurora Backtrack&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;Today I would like to tell you about the new backtrack feature for &lt;a href=&quot;https://aws.amazon.com/rds/aurora/&quot; title=&quot;&quot;&gt;Amazon Aurora&lt;/a&gt;. This is as close as we can come, given present-day technology, to an Undo option for reality.&lt;/p&gt;
&lt;p&gt;This feature can be enabled at launch time for all newly-launched Aurora database clusters. To enable it, you simply specify how far back in time you might want to rewind, and use the database as usual (this is on the &lt;strong&gt;Configure advanced settings&lt;/strong&gt; page):&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_config_backtrack_3.png&quot; width=&quot;810&quot; height=&quot;445&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Aurora uses a distributed, log-structured storage system (read &lt;a href=&quot;http://allthingsdistributed.com/files/p1041-verbitski.pdf&quot;&gt;Design Considerations for High Throughput Cloud-Native Relational Databases&lt;/a&gt; to learn a lot more); each change to your database generates a new log record, identified by a Log Sequence Number (LSN). Enabling the backtrack feature provisions a FIFO buffer in the cluster for storage of LSNs. This allows for quick access and recovery times measured in seconds.&lt;/p&gt;
&lt;p&gt;After that regrettable moment when all seems lost, you simply pause your application, open up the Aurora Console, select the cluster, and click &lt;strong&gt;Backtrack DB cluster:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtrack_menu_2.png&quot; width=&quot;590&quot; height=&quot;432&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then you select &lt;strong&gt;Backtrack&lt;/strong&gt; and choose the point in time just before your epic fail, and click &lt;strong&gt;Backtrack DB cluster&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtrack_now_2.png&quot; width=&quot;810&quot; height=&quot;508&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then you wait for the rewind to take place, unpause your application and proceed as if nothing had happened. When you initiate a backtrack, Aurora will pause the database, close any open connections, drop uncommitted writes, and wait for the backtrack to complete. Then it will resume normal operation and be able to accept requests. The instance state will be &lt;strong&gt;backtracking&lt;/strong&gt; while the rewind is underway:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtracking_1.png&quot; width=&quot;860&quot; height=&quot;316&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The console will let you know when the backtrack is complete:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtracked_1.png&quot; width=&quot;900&quot; height=&quot;162&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If it turns out that you went back a bit too far, you can backtrack to a later time. Other Aurora features such as &lt;a href=&quot;https://aws.amazon.com/blogs/aws/amazon-aurora-fast-database-cloning/&quot;&gt;cloning&lt;/a&gt;, backups, and restores continue to work on an instance that has been configured for backtrack.&lt;/p&gt;
&lt;p&gt;I’m sure you can think of some creative and non-obvious use cases for this cool new feature. For example, you could use it to restore a test database after running a test that makes changes to the database. You can initiate the restoration from the API or the CLI, making it easy to integrate into your existing test framework.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Things to Know&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;This option applies to newly created MySQL-compatible Aurora database clusters and to MySQL-compatible clusters that have been restored from a backup. You must opt-in when you create or restore a cluster; you cannot enable it for a running cluster.&lt;/p&gt;
&lt;p&gt;This feature is available now in all AWS Regions where Amazon Aurora runs, and you can start using it today.&lt;/p&gt;
&lt;p&gt;— &lt;a href=&quot;https://twitter.com/jeffbarr&quot;&gt;Jeff&lt;/a&gt;;&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 13:53:48 +0000</pubDate>
<dc:creator>jeffbarr</dc:creator>
<og:title>Amazon Aurora Backtrack – Turn Back Time | Amazon Web Services</og:title>
<og:type>article</og:type>
<og:url>https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</og:url>
<og:description>We’ve all been there! You need to make a quick, seemingly simple fix to an important production database. You compose the query, give it a once-over, and let it run. Seconds later you realize that you forgot the WHERE clause, dropped the wrong table, or made another serious mistake, and interrupt the query, but the […]</og:description>
<og:image>https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2018/05/10/pit_backtrack_now_2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</dc:identifier>
</item>
<item>
<title>Alexa and Siri Can Hear Hidden Commands</title>
<link>https://www.nytimes.com/2018/05/10/technology/alexa-siri-hidden-command-audio-attacks.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/05/10/technology/alexa-siri-hidden-command-audio-attacks.html</guid>
<description>&lt;div readability=&quot;45.755458515284&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;37.391557496361&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;BERKELEY, Calif. — Many people have grown accustomed to talking to their smart devices, asking them to read a text, play a song or set an alarm. But someone else might be secretly talking to them, too.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Over the last two years, researchers in China and the United States have begun demonstrating that they can send hidden commands that are undetectable to the human ear to Apple’s Siri, Amazon’s Alexa and Google’s Assistant. Inside university labs, the researchers have been able to secretly activate the artificial intelligence systems on smartphones and smart speakers, making them dial phone numbers or open websites. In the wrong hands, the technology could be used to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.forbes.com/sites/aarontilley/2017/02/16/amazon-alexa-can-now-unlock-your-front-door&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;unlock doors&lt;/a&gt;, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.youtube.com/watch?v=Jwb4kdDk2wg&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;wire money&lt;/a&gt; or buy stuff online — simply with music playing over the radio.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;A group of students from University of California, Berkeley, and Georgetown University showed in 2016 that they could hide commands in white noise played over loudspeakers and through YouTube videos to get smart devices to turn on airplane mode or open a website.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;This month, some of those Berkeley researchers published a research paper that went further, saying they could embed commands directly into recordings of music or spoken text. So while a human listener hears someone talking or an orchestra playing, Amazon’s Echo speaker might hear an instruction to add something to your shopping list.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;43.071126760563&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;31.684507042254&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;“We wanted to see if we could make it even more stealthy,” said Nicholas Carlini, a fifth-year Ph.D. student in computer security at U.C. Berkeley and one of the paper’s authors.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;[&lt;em class=&quot;css-2fg4z9 ehxkw330&quot;&gt;Read more on what&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/03/31/business/media/amazon-google-privacy-digital-assistants.html?action=click&amp;amp;module=Intentional&amp;amp;pgtype=Article&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;css-2fg4z9 ehxkw330&quot;&gt;Alexa can hear&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;css-2fg4z9 ehxkw330&quot;&gt;when brought into your home&lt;/em&gt;]&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Mr. Carlini added that while there was no evidence that these techniques have left the lab, it may only be a matter of time before someone starts exploiting them. “My assumption is that the malicious people already employ people to do what I do,” he said.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;These deceptions illustrate how artificial intelligence — even as it is making great strides — can still be tricked and manipulated. Computers can be fooled into identifying an airplane as a cat just by changing a few pixels of a digital image, while researchers can make a self-driving car swerve or speed up simply by pasting small stickers on road signs and confusing the vehicle’s computer vision system.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;With audio attacks, the researchers are exploiting the gap between human and machine speech recognition. Speech recognition systems typically translate each sound to a letter, eventually compiling those into words and phrases. By making slight changes to audio files, researchers were able to cancel out the sound that the speech recognition system was supposed to hear and replace it with a sound that would be transcribed differently by machines while being nearly undetectable to the human ear.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;28.164490861619&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;10.088772845953&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;The proliferation of voice-activated gadgets amplifies the implications of such tricks. Smartphones and smart speakers that use digital assistants like Amazon’s Alexa or Apple’s Siri are set to outnumber people by 2021, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://ovum.informa.com/resources/product-content/virtual-digital-assistants-to-overtake-world-population-by-2021&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;according to the research firm Ovum&lt;/a&gt;. And more than half of all American households will have &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.juniperresearch.com/press/press-releases/amazon-echo-google-home-to-reside&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;at least one smart speaker&lt;/a&gt; by then, according to Juniper Research.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;50.521327014218&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;47.60663507109&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Amazon said that it doesn’t disclose specific security measures, but it has taken steps to ensure its Echo smart speaker is secure. Google said security is an ongoing focus and that its Assistant has features to mitigate undetectable audio commands. Both companies’ assistants employ voice recognition technology to prevent devices from acting on certain commands unless they recognize the user’s voice.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Apple said its smart speaker, HomePod, is designed to prevent commands from doing things like unlocking doors, and it noted that iPhones and iPads must be unlocked before Siri will act on commands that access sensitive data or open apps and websites, among other measures.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Yet many people leave their smartphones unlocked, and, at least for now, voice recognition systems are notoriously &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://youtu.be/JQAc1UhUA2s&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;easy to fool&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;There is already a history of smart devices being exploited for commercial gains through spoken commands.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Last year, Burger King &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://nyti.ms/2op9SoY&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;caused a stir&lt;/a&gt; with an online ad that purposely asked ‘O.K., Google, what is the Whopper burger?” Android devices with voice-enabled search would respond by reading from the Whopper’s Wikipedia page. The ad was canceled after viewers started editing the Wikipedia page to comic effect.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;&lt;em class=&quot;css-2fg4z9 ehxkw330&quot;&gt;[Read more on how we may soon be living in&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/02/21/technology/amazon-alexa-world.html?action=click&amp;amp;module=Intentional&amp;amp;pgtype=Article&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;css-2fg4z9 ehxkw330&quot;&gt;Alexa’s world&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 ehxkw330&quot;&gt;]&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;A few months later, the animated series South Park followed up with an &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://southpark.cc.com/clips/6zs9up/alexas-the-coolest&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;entire episode&lt;/a&gt; built around voice commands that caused viewers’ voice-recognition assistants to parrot adolescent obscenities.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;There is no American law against broadcasting subliminal messages to humans, let alone machines. The Federal Communications Commission discourages the practice as “counter to the public interest,” and the Television Code of the National Association of Broadcasters bans “transmitting messages below the threshold of normal awareness.” Neither say anything about subliminal stimuli for smart devices.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;35.5&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;16&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Courts have ruled that subliminal messages may constitute an invasion of privacy, but the law has not extended the concept of privacy to machines.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Now the technology is racing even further ahead of the law. Last year, researchers at Princeton University and China’s Zhejiang University demonstrated that voice-recognition systems could be activated by using frequencies inaudible to the human ear. The attack first muted the phone so the owner wouldn’t hear the system’s responses, either.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;46.451612903226&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;39.677419354839&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;The technique, which the Chinese researchers called DolphinAttack, can instruct smart devices to visit malicious websites, initiate phone calls, take a picture or send text messages. While DolphinAttack has its limitations — the transmitter must be close to the receiving device — experts warned that more powerful ultrasonic systems were possible.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;That warning was borne out in April, when researchers at the University of Illinois at Urbana-Champaign demonstrated ultrasound attacks from 25 feet away. While the commands couldn’t penetrate walls, they could control smart devices through open windows from outside a building.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;This year, another group of Chinese and American researchers from China’s Academy of Sciences and other institutions, demonstrated they could control voice-activated devices with commands &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://sites.google.com/view/commandersong/&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;embedded in songs&lt;/a&gt; that can be broadcast over the radio or played on services like YouTube.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;More recently, Mr. Carlini and his colleagues at Berkeley have &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://nicholas.carlini.com/code/audio_adversarial_examples/&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;incorporated commands&lt;/a&gt; into audio recognized by Mozilla’s DeepSpeech voice-to-text translation software, an open-source platform. They were able to hide the command, “O.K. Google, browse to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://evil.com/&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;evil.com&lt;/a&gt;” in a recording of the spoken phrase, “Without the data set, the article is useless.” Humans cannot discern the command.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;The Berkeley group also embedded the command in music files, including a four-second clip from Verdi’s “Requiem.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;40.336448598131&quot;&gt;
&lt;div class=&quot;css-949bq emamhsk2&quot; readability=&quot;27.214953271028&quot;&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;How device makers respond will differ, especially as they balance security with ease of use.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;“Companies have to ensure user-friendliness of their devices, because that’s their major selling point,” said Tavish Vaidya, a researcher at Georgetown. He wrote one of the first papers on audio attacks, which he titled &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.usenix.org/node/191969&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;“Cocaine Noodles”&lt;/a&gt; because devices interpreted the phrase “cocaine noodles” as “O.K., Google.”&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Mr. Carlini said he was confident that in time he and his colleagues could mount successful adversarial attacks against any smart device system on the market.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;“We want to demonstrate that it’s possible,” he said, “and then hope that other people will say, ‘O.K. this is possible, now let’s try and fix it.’ ”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-15v9f0h emamhsk1&quot;/&gt;&lt;/div&gt;&lt;div readability=&quot;25.095238095238&quot;&gt;

&lt;div class=&quot;ExtendedInformation-extendedInformation--3og6I&quot; readability=&quot;5.6666666666667&quot;&gt;
&lt;p&gt;Follow Craig S. Smith on Twitter: &lt;a href=&quot;https://twitter.com/craigss&quot;&gt;@craigss&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;</description>
<pubDate>Thu, 10 May 2018 13:43:20 +0000</pubDate>
<dc:creator>GW150914</dc:creator>
<og:url>https://www.nytimes.com/2018/05/10/technology/alexa-siri-hidden-command-audio-attacks.html</og:url>
<og:type>article</og:type>
<og:title>Alexa and Siri Can Hear This Hidden Command. You Can’t.</og:title>
<og:image>https://static01.nyt.com/images/2018/05/11/technology/11SUBLIMINAL/11SUBLIMINAL-facebookJumbo.gif</og:image>
<og:description>Researchers can now send secret audio instructions undetectable to the human ear to Apple’s Siri, Amazon’s Alexa and Google’s Assistant.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/05/10/technology/alexa-siri-hidden-command-audio-attacks.html</dc:identifier>
</item>
</channel>
</rss>