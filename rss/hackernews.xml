<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The Land of Lisp</title>
<link>http://landoflisp.com/</link>
<guid isPermaLink="true" >http://landoflisp.com/</guid>
<description>So, you still don't think it's worth learning Lisp?&lt;p&gt;Well, you'll have to make your own decisions on how to make the best use of your valuable free time. However, Lisp really does contain some great programming ideas that you may never encounter anywhere else.&lt;/p&gt;&lt;p&gt;In the interactive comic below (adapted from the epilogue of the book) I've given my best shot at explaining, precisely, what the most interesting features in Lisp are that you'd be missing out on... So why don't you give it a quick read?&lt;/p&gt;&lt;p&gt;&lt;em&gt;Oh, and be sure to click on all the throbbing text!&lt;/em&gt;&lt;/p&gt;</description>
<pubDate>Fri, 06 Oct 2017 15:50:16 +0000</pubDate>
<dc:creator>adgasf</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://landoflisp.com/</dc:identifier>
</item>
<item>
<title>AIM will shut down after 20 years</title>
<link>https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</link>
<guid isPermaLink="true" >https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</guid>
<description>&lt;p id=&quot;SpxCWM&quot;&gt;It’s a sad moment: AIM, AOL’s long-running instant messenger service that was core to many people’s first social experiences on the internet, will shut down once and for all on December 15th. AOL announced &lt;a href=&quot;https://aimemories.tumblr.com/post/166091776077/aimemories&quot;&gt;the shutdown&lt;/a&gt; today, acknowledging that people now communicate in new ways online, so AIM is no longer needed.&lt;/p&gt;
&lt;p id=&quot;cCgsoL&quot;&gt;“AIM tapped into new digital technologies and ignited a cultural shift, but the way in which we communicate with each other has profoundly changed,” writes Michael Albers, communications products VP at Oath (the Verizon behemoth that consumed AOL).&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;5kYYPk&quot;&gt;&lt;q&gt;Time to set your final away message&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;WTH9tv&quot;&gt;AOL cut off access to AIM from third-party chat clients &lt;a href=&quot;https://www.engadget.com/2017/03/01/aol-starts-to-shut-down-third-party-aim-apps/&quot;&gt;back in March&lt;/a&gt;, hinting at this eventual shutdown. It’s hard to imagine that many people are still using AIM, so that change, nor this upcoming shutdown, are likely to make a huge difference.&lt;/p&gt;
&lt;p id=&quot;pOoEN6&quot;&gt;AIM was one of the first and most successful instant messengers, widely used in the late ‘90s and even throughout the 2000s. I was still using AIM to chat with my friends throughout college at the end of the decade, including to stay in touch with my (not-yet) significant other while she was studying abroad.&lt;/p&gt;
&lt;p id=&quot;ZfVWmi&quot;&gt;But with the proliferation of smartphones, everything has changed. Text messaging has taken over for desktop instant messaging apps, and increasingly, we’re seeing other social apps, like Snapchat and Instagram, take over for those in certain ways. For straight messaging, Facebook also makes things much easier, since you’re already connected to everyone you know and can just start up a chat without exchanging arcane things like screen names. In fact, Facebook has multiple billion-user messaging services at this point, &lt;a href=&quot;https://www.theverge.com/2016/7/20/12235476/facebook-messenger-1-billion-users-milestone-ios-app&quot;&gt;Messenger&lt;/a&gt; and &lt;a href=&quot;https://www.theverge.com/2016/2/1/10889534/whats-app-1-billion-users-facebook-mark-zuckerberg&quot;&gt;WhatsApp&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;5MHtk9&quot;&gt;Other classic chat apps have shut down in recent years, too. &lt;a href=&quot;https://www.theverge.com/2014/8/29/6082199/msn-messenger-shutting-down-15-years-history&quot;&gt;MSN Messenger shut down in 2014&lt;/a&gt;, and &lt;a href=&quot;https://www.engadget.com/2016/06/10/goodbye-old-yahoo-messenger/&quot;&gt;Yahoo Messenger shut down last year&lt;/a&gt; (although Yahoo also launched a new messaging service under the same name). It was only a matter of time until AIM joined them, but there’s still some nostalgia in seeing it go.&lt;/p&gt;
&lt;p id=&quot;aQOe11&quot;&gt;With AIM on its way out the door, now’s your last chance to write that perfect away message.&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 14:27:50 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:description>It’s a sad moment: AIM, AOL’s long-running instant messenger service that was core to many people’s first social experiences on the internet, will shut down once and for all on December 15th. AOL...</og:description>
<og:image>https://cdn0.vox-cdn.com/thumbor/KV4BtqsztjfW0GMR59H5lPVYCcs=/0x19:998x542/fit-in/1200x630/cdn0.vox-cdn.com/uploads/chorus_asset/file/9405823/Screen_Shot_2017_10_06_at_10.06.22_AM.png</og:image>
<og:title>AIM will shut down after 20 years</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2017/10/6/16435690/aim-shutting-down-after-20-years-aol-instant-messenger</dc:identifier>
</item>
<item>
<title>Security.txt</title>
<link>https://securitytxt.org/</link>
<guid isPermaLink="true" >https://securitytxt.org/</guid>
<description>&lt;h3&gt;FAQ&lt;/h3&gt;
&lt;h5&gt;What is the main purpose of security.txt?&lt;/h5&gt;
&lt;p&gt;The main purpose of security.txt is to help make things easier for companies and security researchers when trying to secure platforms. Thanks to security.txt, security researchers can easily get in touch with companies about security issues.&lt;/p&gt;
&lt;h5&gt;Where should I put the security.txt file?&lt;/h5&gt;
&lt;p&gt;The /security.txt file should be located under /.well-known/ (/.well-known/security.txt) [RFC5785].&lt;/p&gt;
&lt;h5&gt;Is security.txt supposed to replace bug bounty platforms?&lt;/h5&gt;
&lt;p&gt;No. Security.txt is supposed to accompany them.&lt;/p&gt;
&lt;h5&gt;Will adding an email address expose me to spam bots?&lt;/h5&gt;
&lt;p&gt;The email value is an optional field. If you are worried about spam you can set a URI as the value and link to your security policy.&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 12:20:23 +0000</pubDate>
<dc:creator>janvdberg</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://securitytxt.org/</dc:identifier>
</item>
<item>
<title>Compute Engine machine types with up to 96 vCPUs and 624GB of memory</title>
<link>https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</link>
<guid isPermaLink="true" >https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</guid>
<description></description>
<pubDate>Fri, 06 Oct 2017 10:45:02 +0000</pubDate>
<dc:creator>ramshanker</dc:creator>
<og:title>Now shipping: Compute Engine machine types with up to 96 vCPUs and 624GB of memory</og:title>
<og:url>https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</og:url>
<og:type>article</og:type>
<og:image>https://3.bp.blogspot.com/-lm6g841oCcU/WdYy3G2rkwI/AAAAAAAAElY/SCDiWc0Q5ScyWiDYD_cIl_4QpVMJuVTggCLcBGAs/s640/image1.png</og:image>
<og:description>By Hanan Youssef and Scott Van Woudenberg, Product Managers, Compute Engine Got compute- and memory-hungry applications? We’ve got you c...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cloudplatform.googleblog.com/2017/10/new-compute-engine-machine-types.html</dc:identifier>
</item>
<item>
<title>Uncle Bob and Silver Bullets</title>
<link>https://www.hillelwayne.com/post/uncle-bob/</link>
<guid isPermaLink="true" >https://www.hillelwayne.com/post/uncle-bob/</guid>
<description>&lt;p&gt;A while back I &lt;a href=&quot;https://www.hillelwayne.com/post/10x&quot;&gt;wrote&lt;/a&gt; that Robert Martin was ruining software by being too good at programming. That was supposed to be a joke. Since then he’s done his damndest to actually ruin software by telling people they’re doing it wrong. His most recent response where he yells at &lt;a href=&quot;http://blog.cleancoder.com/uncle-bob/2017/10/04/CodeIsNotTheAnswer.html&quot;&gt;software correctness&lt;/a&gt; was the breaking point for me, so I’m going to go ahead and say what many of us have been thinking:&lt;/p&gt;
&lt;p&gt;Uncle Bob gives &lt;em&gt;terrible&lt;/em&gt; advice. Following it will make your code worse.&lt;/p&gt;
&lt;p&gt;He begins &lt;a href=&quot;http://blog.cleancoder.com/uncle-bob/2017/10/04/CodeIsNotTheAnswer.html&quot;&gt;Tools are not the Answer&lt;/a&gt; by listing some of the “new” tools that are not “the answer”: Light Table, Model Driven Engineering, and TLA+. Now, I’m pretty biased here, what with writing a &lt;a href=&quot;https://learntla.com&quot;&gt;TLA+ manual&lt;/a&gt; and all. But I agree with what (I thought) was the core critique: there is no silver bullet. TLA+ has shown some astounded successes at &lt;a href=&quot;https://cacm.acm.org/magazines/2015/4/184701-how-amazon-web-services-uses-formal-methods/abstract&quot;&gt;Amazon&lt;/a&gt; and &lt;a href=&quot;https://channel9.msdn.com/Events/Build/2014/3-642&quot;&gt;Microsoft&lt;/a&gt;, but it only verifies specs, not code. While it’s incredible for designing systems, you should combine it with other correctness techniques, like type systems and tests. A pretty good argument.&lt;/p&gt;
&lt;p&gt;But it turns out that argument was only in my head, because he follows it with this:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;The solution to the software apocalypse is not more tools. The solution is better programming discipline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just what is “discipline”, anyway? Uncle Bob says that means not “doing a half-assed job.” Uncle Bob is saying the solution for people writing bad code… is to not write bad code. Our programs would be perfect if it weren’t for the programmers!&lt;/p&gt;
&lt;p&gt;One of the core assumptions of modern systems engineering is that there’s a constant flow of defects: &lt;em&gt;that people make mistakes&lt;/em&gt;. You can’t rely on people to not fuck up on their own: after all, the US still has 30,000 auto deaths a year. Rather, the best way to reduce the volume and severity of mistakes is to adjust the system itself. Either make them harder to do, make them easier to catch, or make them cause less damage when they do happen. Don’t just blame the drivers, give them safe roads! Give them seatbelts!&lt;/p&gt;
&lt;p&gt;One way of doing this is to add a bureaucratic &lt;em&gt;process&lt;/em&gt;, such as code review. If your code doesn’t conform to requirements (it lacks tests, you named your variables &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;, etc), the code will be rejected. That, on a systems level, reduces bugs. When we adopt mechanical tools, like tests and IDEs, all we are doing is automating those processes. We use the way we create code, and the kind of code we create, to check our work. This is the vast field of software correctness, and spans everything from type systems to language design.&lt;/p&gt;
&lt;p&gt;Uncle Bob is okay with software correctness: after all, he uses the phrase “unit testing” like a smurf uses “smurf”. But what about every &lt;em&gt;other&lt;/em&gt; correctness technique?&lt;/p&gt;
&lt;p&gt;In other words, any correctness technique that isn’t unit tests can be dismissed. But unit tests don’t give you much confidence in your code. That’s because humans make mistakes, and we can’t always guarantee that the mistakes we make are the nicely unit testable ones. For example, here’s a ceiling function I wrote. Quick, what numbers would you test it with?&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;ceiling&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;num&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;num&lt;/span&gt; &lt;span&gt;==&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;num&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;))&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;num&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;round&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;num&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;0.5&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Did you try &lt;code&gt;-1e-100&lt;/code&gt;? You’d have seen that &lt;code&gt;ceiling(-1e-100) == 1&lt;/code&gt; when it should be &lt;code&gt;0&lt;/code&gt;. That’s because of how floating point works: &lt;code&gt;0.5 - 1e-100 == 0.5&lt;/code&gt;. I’d be shocked if many people remembered to check that, if they even knew that floating point has quirks at all. But a property-based test catches it easily. Okay, function two:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;clamp&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;max&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;Math.&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;(Math.&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span&gt;min&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function is perfectly fine. The bug isn’t in the function at all! It’s that, in our 50 kLoC codebase, there is a single path that eventually ends with calling &lt;code&gt;clamp&lt;/code&gt; with a null value. Are you going to test every possible path? Is that really superior to using a type system? Okay, last one:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; &lt;span&gt;append_to_body&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;text&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; &lt;span&gt;d&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;document.&lt;/span&gt;&lt;span&gt;createElement&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
    &lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;innerHTML&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;text&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;document.&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;appendChild&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;d&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function works fine, except you’ve now opened up an XSS vector. That’s why we have static analysis. These aren’t just toy examples. These are topics with plenty of research, plenty of development, and plenty of history. We’ve learned what they’re good for and what their limitations are. We use these tool because they work. Exactly the same reason we have unit tests and TDD.&lt;/p&gt;
&lt;p&gt;But unit tests are not enough. Type systems are not enough. Contracts are not enough, formal specs are not enough, code review isn’t enough, &lt;em&gt;nothing&lt;/em&gt; is enough. We have to use everything we have to even hope of writing correct code, because there’s only one way a program is right and infinite ways a program can be wrong, and we can’t assume that any tool we use will prevent more than a narrow slice of all those wrong ways.&lt;/p&gt;
&lt;p&gt;That’s what makes Bob’s advice so toxic. By being so dismissive of everything but unit tests, he’s actively discouraging us from using our whole range of techniques. He demands we run blind and blames us for tripping.&lt;/p&gt;
&lt;p&gt;Uncle Bob can say whatever he likes. We don’t have to listen to him. He’s welcome to keep shouting that tools won’t help, better languages won’t help, better process won’t help, the only thing that’ll help is lots and lots of unit tests. Meanwhile, we’ll continue to struggle with our bugs, curse our model checkers, and make software engineering just a little bit better. We don’t believe in silver bullets.&lt;/p&gt;

</description>
<pubDate>Fri, 06 Oct 2017 08:35:23 +0000</pubDate>
<dc:creator>henrik_w</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.hillelwayne.com/post/uncle-bob/</dc:identifier>
</item>
<item>
<title>Edward is officially moving into TensorFlow</title>
<link>https://discourse.edwardlib.org/t/edward-is-officially-moving-into-tensorflow/387</link>
<guid isPermaLink="true" >https://discourse.edwardlib.org/t/edward-is-officially-moving-into-tensorflow/387</guid>
<description>&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Hello everyone,&lt;/p&gt;
&lt;p&gt;I have an exciting announcement to share: we’re officially merging Edward into TensorFlow.&lt;/p&gt;
&lt;p&gt;Specifically, Edward will be in the contrib module for now, and to avoid redundancy with other submodules, we’ll be merging its many features across libraries with a primary focus on:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;tf.contrib.distributions&lt;/code&gt;—for distributions such as &lt;code&gt;Empirical&lt;/code&gt; and properties such as supports;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tf.contrib.bayesflow&lt;/code&gt;—for inference such as &lt;code&gt;ed.KLqp&lt;/code&gt; and &lt;code&gt;ed.HMC&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We’re not sure if &lt;em&gt;all of Edward’s features&lt;/em&gt; will be in TensorFlow just yet: for example, it’s unclear where to put Edward’s precise PPL. That said, expect that in this move many new innovations in Edward’s design will appear as we make programmable inference far more flexible, more generally compatible with hardware and distributed choices, and most importantly, more accessible by researchers and applied MLers alike.&lt;/p&gt;
&lt;p&gt;Dustin&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;/&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;/&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;/&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;This is super news.&lt;/p&gt;
&lt;p&gt;What will contributing to Edward look like under this model? Will it be like keras, where development is done on the original repo then mirrored into the tensorflow mono-repo? Or will development happen on &lt;code&gt;tensorflow/tensorflow&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 06 Oct 2017 01:49:40 +0000</pubDate>
<dc:creator>pepopep</dc:creator>
<og:image>http://discourse.edwardlib.org/uploads/edwardlib/original/1X/0bfaeaf71ba4c5b32132f504f3535c41a868cf6a.png</og:image>
<og:url>http://discourse.edwardlib.org/t/edward-is-officially-moving-into-tensorflow/387?_escaped_fragment_=</og:url>
<og:title>Edward is officially moving into TensorFlow</og:title>
<og:description>Hello everyone, I have an exciting announcement to share: we’re officially merging Edward into TensorFlow. Specifically, Edward will be in the contrib module for now, and to avoid redundancy with other submodules, we’ll be merging its many features across libraries with a primary focus on: tf.contrib.distributions—for distributions such as Empirical and properties such as supports; tf.contrib.bayesflow—for inference such as ed.KLqp and ed.HMC. We’re not sure if all of Edward’s features wi...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://discourse.edwardlib.org/t/edward-is-officially-moving-into-tensorflow/387?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>iOS 11&amp;#039;s Misleading &quot;Off-Ish&quot; Setting for Radios Is Bad for User Security</title>
<link>https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</guid>
<description>&lt;p&gt;Turning off your &lt;a href=&quot;https://www.wired.com/story/turn-off-bluetooth-security/&quot; target=&quot;_blank&quot;&gt;Bluetooth&lt;/a&gt; and &lt;a href=&quot;https://nakedsecurity.sophos.com/2012/10/02/what-is-your-phone-saying-behind-your-back/&quot; target=&quot;_blank&quot;&gt;Wi-Fi&lt;/a&gt; radios when you’re not using them is good security practice (not to mention good for your battery usage). When you consider Bluetooth’s known &lt;a href=&quot;http://go.armis.com/hubfs/BlueBorne%20Technical%20White%20Paper.pdf&quot; target=&quot;_blank&quot;&gt;vulnerabilities&lt;/a&gt;, it’s especially important to make sure your Bluetooth and Wi-Fi settings are doing what you want them to. The iPhone’s newest operating system, however, makes it harder for users to control these settings.&lt;/p&gt;
&lt;p&gt;On an iPhone, users might instinctively swipe up to open Control Center and toggle Wi-Fi and Bluetooth off from the quick settings. Each icon switches from blue to gray, leading a user to reasonably believe they have been turned off—in other words, fully disabled. In iOS 10, that was true. However, in iOS 11, &lt;a href=&quot;https://support.apple.com/en-us/HT208086&quot; target=&quot;_blank&quot;&gt;the same setting change no longer actually turns Wi-Fi or Bluetooth  “off.”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instead, what actually happens in iOS 11 when you toggle your quick settings to “off” is that the phone will disconnect from Wi-Fi networks and some devices, but remain on for Apple services. Location Services is still enabled, Apple devices (like Apple Watch and Pencil) stay connected, and services such as Handoff and Instant Hotspot stay on. Apple’s UI fails to even attempt to communicate these exceptions to its users.&lt;/p&gt;
&lt;p&gt;It gets even worse. When you toggle these settings in the Control Center to what is best described as&quot;off-ish,&quot; they don’t stay that way. The Wi-Fi will turn back full-on if you drive or walk to a new location. And both Wi-Fi and Bluetooth will turn back on at 5:00 AM. This is not clearly explained to users, nor left to them to choose, which makes security-aware users vulnerable as well.&lt;/p&gt;
&lt;p&gt;The only way to turn &lt;em&gt;off&lt;/em&gt; the Wi-Fi and Bluetooth radios is to enable Airplane Mode or navigate into Settings and go to the Wi-Fi and Bluetooth sections.&lt;/p&gt;
&lt;p&gt;When a phone is designed to behave in a way other than what the UI suggests, it results in both security and privacy problems. A user has no visual or textual clues to understand the device's behavior, which can result in a loss of trust in operating system designers to faithfully communicate what’s going on. Since users rely on the operating system as the bedrock for most security and privacy decisions, no matter what app or connected device they may be using, this trust is fundamental.&lt;/p&gt;
&lt;p&gt;In an attempt to keep you connected to Apple devices and services, iOS 11 compromises users' security. Such a loophole in connectivity can potentially leave users open to new attacks. Closing this loophole would not be a hard fix for Apple to make. At a bare minimum, Apple should make the Control Center toggles last until the user flips them back on, rather than overriding the user’s choice early the next morning. It's simply a question of communicating better to users, and giving them control and clarity when they want their settings off—not “off-ish.”&lt;/p&gt;
</description>
<pubDate>Fri, 06 Oct 2017 00:53:53 +0000</pubDate>
<dc:creator>panarky</dc:creator>
<og:type>article</og:type>
<og:title>iOS 11’s Misleading “Off-ish” Setting for Bluetooth and Wi-Fi is Bad for User Security</og:title>
<og:url>https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</og:url>
<og:description>Turning off your Bluetooth and Wi-Fi radios when you’re not using them is good security practice (not to mention good for your battery usage). When you consider Bluetooth’s known vulnerabilities, it’s especially important to make sure your Bluetooth and Wi-Fi settings are doing what you want them...</og:description>
<og:image>https://www.eff.org/files/issues/icon-security-1.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2017/10/ios-11s-misleading-ish-setting-bluetooth-and-wi-fi-bad-user-security</dc:identifier>
</item>
<item>
<title>Sublime Text 3 now has font ligature support</title>
<link>https://forum.sublimetext.com/t/dev-build-3145/32340</link>
<guid isPermaLink="true" >https://forum.sublimetext.com/t/dev-build-3145/32340</guid>
<description>&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Dev Build 3145 is out now at &lt;a href=&quot;https://www.sublimetext.com/3dev&quot;&gt;https://www.sublimetext.com/3dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're on Windows, there are two additional undocumented options for font_options: dwrite_cleartype_classic, and dwrite_cleartype_natural. These correspond to different DirectWrite rendering options, and depending on the font used, they may make the output more or less pleasing. Let me know if you find them useful, as if no one uses them I'll remove them in a future build.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;The Goto References functionality is controlled by the showInIndexedReferenceList preference, see &quot;Default/Indexed Reference List.tmPreferences&quot; for the default value&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Did the default font options change? I'm seeing weird rendering and I enabled nothing new:&lt;/p&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a data-download-href=&quot;//forum.sublimetext.com/uploads/default/2b3cd83957cb17f525abd70c67619148427c83d0&quot; href=&quot;https://forum.sublimetext.com/uploads/default/original/3X/2/b/2b3cd83957cb17f525abd70c67619148427c83d0.png&quot; class=&quot;lightbox&quot; title=&quot;2017-10-05.png&quot;&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/optimized/3X/2/b/2b3cd83957cb17f525abd70c67619148427c83d0_1_690x274.png&quot; width=&quot;690&quot; height=&quot;274&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;p&gt;Not only that, I have a big cursor and tiny text. It's real weird. I'm on Windows 10.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Font rendering has been totally redone, it looks like you're running in High DPI mode? I'll take a look into it&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Ah, yes, I am High DPI.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Strange problem with Xubuntu 17.10.&lt;/p&gt;
&lt;p&gt;I have some text files where sections of text are separated by lines of 100 dashes or hyphens. In build 3145 I'm only seeing the first 33 displayed. The remaining 67 are hidden. Opening the files in build 3143 displays the separating lines correctly.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Microscopic text on Windows 10 High DPI.&lt;/p&gt;
&lt;p&gt;I'm aware of settings options to switch between 'gdi' and 'directdraw' rendering, but changing those options does do nothing. Had to revert to stable build to continue my work.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;It looks like &lt;code&gt;no_round&lt;/code&gt; are always turned on on my machine.&lt;/p&gt;
&lt;p&gt;macOS 10.13.1 beta&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;no_round is not currently supported, so it should act as if it's always off - I meant to remove it from the comment in Preferences.sublime-settings, but missed doing so.&lt;/p&gt;
&lt;p&gt;When you say it looks like it's always turned on, is that because you're noticing a visible difference compared to the previous version, or just that it doesn't do anything now?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;mention&quot; href=&quot;https://forum.sublimetext.com/u/jps&quot;&gt;@jps&lt;/a&gt; The letter spacing is too wide with my font. I like 3144 better &lt;img src=&quot;https://forum.sublimetext.com/images/emoji/emoji_one/smiley.png?v=3&quot; title=&quot;:smiley:&quot; class=&quot;emoji&quot; alt=&quot;:smiley:&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a data-download-href=&quot;//forum.sublimetext.com/uploads/default/d3735ae012400e14322673cecca8d02a267d5a33&quot; href=&quot;https://forum.sublimetext.com/uploads/default/original/3X/d/3/d3735ae012400e14322673cecca8d02a267d5a33.png&quot; class=&quot;lightbox&quot; title=&quot;Untitled.png&quot;&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/optimized/3X/d/3/d3735ae012400e14322673cecca8d02a267d5a33_1_690x462.png&quot; width=&quot;690&quot; height=&quot;462&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;p&gt;The indent guides are not showing up as well.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I am on a Mac with Bootcamp.&lt;br/&gt;After updating to 3145, the font is very very small now.&lt;br/&gt;Is there a way to adjust?&lt;br/&gt;Tried Font under Preference and it does not work.&lt;br/&gt;Thanks&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Another issue:&lt;/p&gt;
&lt;p&gt;I use SF Mono font. All the colons become angle brackets. When I select it, it turns back to colons.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/:&lt;/code&gt; becomes &lt;code&gt;/&amp;gt;&lt;/code&gt;&lt;br/&gt;select &lt;code&gt;/&lt;/code&gt; onward: still showing &lt;code&gt;/&amp;gt;&lt;/code&gt;&lt;br/&gt;select &lt;code&gt;:&lt;/code&gt; onward: becomes &lt;code&gt;/:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If I open preferences window (press &lt;code&gt;cmd+,&lt;/code&gt;) it turns back to colons.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgur.com/a/HG8FW&quot; class=&quot;onebox&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://imgur.com/a/HG8FW&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a data-download-href=&quot;//forum.sublimetext.com/uploads/default/e2c5b6733c9d75861bd82ff0c1499094c8825be7&quot; href=&quot;https://forum.sublimetext.com/uploads/default/original/3X/e/2/e2c5b6733c9d75861bd82ff0c1499094c8825be7.png&quot; class=&quot;lightbox&quot; title=&quot;image.png&quot;&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/optimized/3X/e/2/e2c5b6733c9d75861bd82ff0c1499094c8825be7_1_443x500.png&quot; width=&quot;443&quot; height=&quot;500&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;br/&gt;On Windows, change back to use gdi fixes small font problem. But the font in tabs is still small. I have 4k screen. 3144 was fine.&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;mention&quot; href=&quot;https://forum.sublimetext.com/u/jps&quot;&gt;@jps&lt;/a&gt; I really like the new reference index, thank you for adding it. This may have been asked before, so forgive me: any chance the indexes could include the scope name at say the start point of the region of each entry in the index? I think that would be helpful when using the API methods. Being able to tell what language each reference points to, as well as whether it is a method or not would be very nice. Of course, I have no idea what adding this would do to the size of the index, or the time it takes to index. In any case, this is a great new feature, so thanks again!&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I've just upgraded, and I'm seeing this on all triple-quoted strings in my python modules. Docstrings nested under functions are not affected at all. It appears to just be a text rendering issue, the files look right (&quot;&quot;&quot; not &quot;+$) when opened otherwise.&lt;br/&gt;(So... no file content was altered. That's good)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/original/3X/b/3/b3eb0e1d8a7c17d4fcf5942253d607d8c1423dcc.png&quot; width=&quot;565&quot; height=&quot;53&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I am not able to see indent guides being drawn.&lt;/p&gt;
&lt;p&gt;MacOS Sierra&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;me too, win10 with UHD screen&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/original/3X/4/0/4054ac3c806c1461c11d9b23764234be5bccf9ee.png&quot; width=&quot;397&quot; height=&quot;491&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://forum.sublimetext.com/uploads/default/original/3X/8/6/8633850ff9348a80c2e2d34c83d33d3c1961479a.png&quot; width=&quot;401&quot; height=&quot;230&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Very cool build, but yeah, there seems to be a problem with some of the ligatures as well. I don't usually use FiraCode, but I wanted to check out how the ligatures worked. Things like &lt;code&gt;!=&lt;/code&gt; got translated to &lt;code&gt;![&lt;/code&gt;. And when you select just the &lt;code&gt;[&lt;/code&gt; in &lt;code&gt;![&lt;/code&gt;, it turns back into &lt;code&gt;!=&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;3146 is out now, addressing the directwrite+high dpi issue, long sequences of punctuation appearing truncated, and indent guides not showing on macOS.&lt;/p&gt;
&lt;p&gt;The issue with punctuation appearing incorrectly has not been tracked down yet.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;thanks for the quick fix!&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 06 Oct 2017 00:12:11 +0000</pubDate>
<dc:creator>indentit</dc:creator>
<og:image>http://forum.sublimetext.com/uploads/st-apple-touch-icon.png</og:image>
<og:url>http://forum.sublimetext.com/t/dev-build-3145/32340?_escaped_fragment_=</og:url>
<og:title>Dev Build 3145</og:title>
<og:description>Dev Build 3145 is out now at https://www.sublimetext.com/3dev If you're on Windows, there are two additional undocumented options for font_options: dwrite_cleartype_classic, and dwrite_cleartype_natural. These correspond to different DirectWrite rendering options, and depending on the font used, they may make the output more or less pleasing. Let me know if you find them useful, as if no one uses them I'll remove them in a future build.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://forum.sublimetext.com/t/dev-build-3145/32340?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Japanese Vending Machines at Night Juxtaposed with a Wintry Hokkaido Landscape</title>
<link>http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</link>
<guid isPermaLink="true" >http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</guid>
<description>&lt;div class=&quot;post-content&quot; readability=&quot;39.741435035553&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-nigh-juxtaposed-with-a-wintry-hokkaido-landscape/#more-42384&quot;&gt;&lt;img class=&quot;alignnone wp-image-42386 size-full&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4.jpg&quot; alt=&quot;&quot; width=&quot;1047&quot; height=&quot;720&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4.jpg 1047w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-200x138.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-300x206.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-768x528.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-633x435.jpg 633w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-4-676x465.jpg 676w&quot; sizes=&quot;(max-width: 1047px) 100vw, 1047px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“In Hokkaido where I live, winters are harsh and snows are deep,” says photographer &lt;a href=&quot;https://www.sapporo-creation.com/&quot;&gt;Eiji Ohashi&lt;/a&gt;. “Every day can become rather inconvenient” due to the constant snowfall. But heavy snows also bring wintry wonderlands and the discovery of small pleasures.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42385&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3.jpg&quot; alt=&quot;&quot; width=&quot;1079&quot; height=&quot;719&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3.jpg 1079w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-200x133.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-300x200.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-768x512.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-653x435.jpg 653w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-3-676x450.jpg 676w&quot; sizes=&quot;(max-width: 1079px) 100vw, 1079px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;One snowy night. Ohashi was walking outside when he found himself transfixed by the form of snow that had piled up on top of a vending machine. Japan has the highest penetration of vending machines per person (there’s roughly 1 vending machine for every 23 people in Japan) and the fact that the majority of them are outdoors is a testament to the country’s safety and respect for property. Very rarely are these machines ever vandalized.&lt;/p&gt;
&lt;p&gt;Outdoor vending machines, especially the ones in remote locations, buried in snowfall, became not only a &lt;a href=&quot;https://www.japantimes.co.jp/culture/2017/07/22/books/book-reviews/roadside-lights-capturing-japan-lonely-vending-machines/#.WdUcO1tSyH_&quot;&gt;photographic subject for Ohashi&lt;/a&gt; but also a welcome oasis from the harsh winters of Hokkaido. The deep snows can become inconvenient “but even then I can get warm drinks from the vending machines. When I hold a warm bottle that I buy from the vending machine, my feelings relax.”&lt;/p&gt;
&lt;p&gt;A collection of these photographs by Ohashi are &lt;a href=&quot;https://www.shashasha.co/en/book/roadside-lights&quot;&gt;available as a photobook&lt;/a&gt;. You can also see more of his work &lt;a href=&quot;https://www.sapporo-creation.com/&quot;&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;center/&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42397&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2.jpg&quot; alt=&quot;&quot; width=&quot;1089&quot; height=&quot;711&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2.jpg 1089w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-200x131.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-300x196.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-768x501.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-666x435.jpg 666w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-2-676x441.jpg 676w&quot; sizes=&quot;(max-width: 1089px) 100vw, 1089px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42387&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5.jpg&quot; alt=&quot;&quot; width=&quot;938&quot; height=&quot;634&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5.jpg 938w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-200x135.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-300x203.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-768x519.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-644x435.jpg 644w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-5-676x457.jpg 676w&quot; sizes=&quot;(max-width: 938px) 100vw, 938px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42388&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6.jpg&quot; alt=&quot;&quot; width=&quot;925&quot; height=&quot;620&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6.jpg 925w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-200x134.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-300x201.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-768x515.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-649x435.jpg 649w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-6-676x453.jpg 676w&quot; sizes=&quot;(max-width: 925px) 100vw, 925px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42389&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11.jpg&quot; alt=&quot;&quot; width=&quot;1070&quot; height=&quot;716&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11.jpg 1070w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-200x134.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-300x201.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-768x514.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-650x435.jpg 650w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-11-676x452.jpg 676w&quot; sizes=&quot;(max-width: 1070px) 100vw, 1070px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42390&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12.jpg&quot; alt=&quot;&quot; width=&quot;789&quot; height=&quot;528&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12.jpg 789w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-200x134.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-300x201.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-768x514.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-650x435.jpg 650w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-12-676x452.jpg 676w&quot; sizes=&quot;(max-width: 789px) 100vw, 789px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42391&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13.jpg&quot; alt=&quot;&quot; width=&quot;1057&quot; height=&quot;722&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13.jpg 1057w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-200x137.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-300x205.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-768x525.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-637x435.jpg 637w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-13-676x462.jpg 676w&quot; sizes=&quot;(max-width: 1057px) 100vw, 1057px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42392&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14.jpg&quot; alt=&quot;&quot; width=&quot;1099&quot; height=&quot;714&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14.jpg 1099w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-200x130.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-300x195.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-768x499.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-670x435.jpg 670w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-14-676x439.jpg 676w&quot; sizes=&quot;(max-width: 1099px) 100vw, 1099px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42393&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15.jpg&quot; alt=&quot;&quot; width=&quot;1071&quot; height=&quot;693&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15.jpg 1071w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-200x129.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-300x194.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-768x497.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-670x435.jpg 670w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-15-676x437.jpg 676w&quot; sizes=&quot;(max-width: 1071px) 100vw, 1071px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42394&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16.jpg&quot; alt=&quot;&quot; width=&quot;1084&quot; height=&quot;714&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16.jpg 1084w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-200x132.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-300x198.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-768x506.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-660x435.jpg 660w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-16-676x445.jpg 676w&quot; sizes=&quot;(max-width: 1084px) 100vw, 1084px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-42396&quot; src=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1.jpg&quot; alt=&quot;&quot; width=&quot;1103&quot; height=&quot;722&quot; srcset=&quot;http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1.jpg 1103w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-200x131.jpg 200w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-300x196.jpg 300w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-768x503.jpg 768w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-665x435.jpg 665w, http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-1-676x442.jpg 676w&quot; sizes=&quot;(max-width: 1103px) 100vw, 1103px&quot;/&gt;&lt;/p&gt;
&lt;center/&gt;

&lt;/div&gt;




</description>
<pubDate>Thu, 05 Oct 2017 19:41:27 +0000</pubDate>
<dc:creator>DamonHD</dc:creator>
<og:title>Japanese Vending Machines at Night Juxtaposed with a Wintry Hokkaido Landscape</og:title>
<og:url>http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</og:url>
<og:type>article</og:type>
<og:description>“In Hokkaido where I live, winters are harsh and snows are deep,” says photographer Eiji Ohashi. “Every day can become rather inconvenient” due to the constant snowfall. But heavy snows also bring wintry wonderlands and the discovery of small pleasures. One snowy night. Ohashi was walking</og:description>
<og:image>http://www.spoon-tamago.com/wp-content/uploads/2017/10/Eiji-Ohashi-Hokkaido-Vending-Machines-at-Night-top.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.spoon-tamago.com/2017/10/04/japanese-vending-machines-at-night-juxtaposed-with-a-wintry-hokkaido-landscape/</dc:identifier>
</item>
<item>
<title>I/O Access Methods for Linux</title>
<link>http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</link>
<guid isPermaLink="true" >http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</guid>
<description>&lt;p&gt;When most server application developers think of I/O, they consider network I/O since most resources these days are accessed over the network: databases, object storage, and other microservices. The developer of a database, however, also has to consider file I/O. This article describes the available choices and their tradeoffs and why Scylla chose asynchronous direct I/O (AIO/DIO) as its access method.&lt;/p&gt;

&lt;h3&gt;Choices for accessing files&lt;/h3&gt;
&lt;p&gt;In general, there are four choices for accessing files on a Linux server: read/write, mmap, Direct I/O (DIO) read/write, and asynchronous direct I/O (AIO/DIO).&lt;/p&gt;
&lt;h3&gt;Traditional read/write&lt;/h3&gt;
&lt;p&gt;The traditional method, available since the beginning of time, is to use the &lt;em&gt;read(2)&lt;/em&gt; and &lt;em&gt;write(2)&lt;/em&gt; system calls. In a modern implementation, the read system call (or one of its many variants – &lt;em&gt;pread&lt;/em&gt;, &lt;em&gt;readv&lt;/em&gt;, &lt;em&gt;preadv&lt;/em&gt;, etc) asks the kernel to read a section of a file and copy the data into the calling process address space. If all of the requested data is in the page cache, the kernel will copy it and return immediately; otherwise, it will arrange for the disk to read the requested data into the page cache, block the calling thread, and when the data is available, it will resume the thread and copy the data. A write, on the other hand, will usually&lt;sup&gt;&lt;a href=&quot;http://www.scylladb.com/2017/10/05/io-access-methods-scylla/#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; just copy the data into the page cache; the kernel will write-back the page cache to disk some time afterward.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.scylladb.com/wp-content/uploads/Chart_1@1x.svg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-7444&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_1@1x.svg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;Mmap&lt;/h3&gt;
&lt;p&gt;An alternative and more modern method is to memory-map the file into the application address space using the &lt;em&gt;mmap(2)&lt;/em&gt; system call. This causes a section of the address space to refer directly to the page cache pages that contain the file’s data. After this preparatory step, the application can access file data using the processor’s memory read and memory write instructions. If the requested data happens to be in cache, the kernel is completely bypassed and the read (or write) is performed at memory speed. If a cache miss occurs, then a page-fault happens and the kernel puts the active thread to sleep while it goes off to read the data for that page. When the data is finally available, the memory-management unit is programmed so the newly read data is accessible to the thread which is then woken.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.scylladb.com/wp-content/uploads/Chart_2@1x.svg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-7443&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_2@1x.svg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Direct I/O (DIO)&lt;/h3&gt;
&lt;p&gt;Both traditional read/write and mmap involve the kernel page cache and defer scheduling of I/O to the kernel. When the application wishes to schedule I/O itself (for reasons that we will explain later), it can use direct I/O. This involves opening the file with the &lt;em&gt;O_DIRECT&lt;/em&gt; flag; further activity will use the normal read and write family of system calls, but their behavior is now altered: instead of accessing the cache, the disk is accessed directly which means that the calling thread will be put to sleep unconditionally. Furthermore, the disk controller will copy the data directly to userspace, bypassing the kernel.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-7302&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_3.png&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1206&quot; srcset=&quot;http://www.scylladb.com/wp-content/uploads/Chart_3.png 1600w, http://www.scylladb.com/wp-content/uploads/Chart_3-300x226.png 300w, http://www.scylladb.com/wp-content/uploads/Chart_3-768x579.png 768w, http://www.scylladb.com/wp-content/uploads/Chart_3-1024x772.png 1024w&quot; sizes=&quot;(max-width: 1600px) 100vw, 1600px&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Asynchronous direct I/O (AIO/DIO)&lt;/h3&gt;
&lt;p&gt;A refinement of direct I/O, asynchronous direct I/O behaves similarly but prevents the calling thread from blocking. Instead, the application thread schedules direct I/O operations using the &lt;em&gt;io_submit(2)&lt;/em&gt; system call, but the thread is not blocked; the I/O operation runs in parallel with normal thread execution. A separate system call, &lt;em&gt;io_getevents(2)&lt;/em&gt;, is used to wait for and collect the results of completed I/O operations. Like DIO, the kernel’s page cache is bypassed, and the disk controller is responsible for copying the data directly to userspace.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-7303&quot; src=&quot;http://www.scylladb.com/wp-content/uploads/Chart_4.png&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;806&quot; srcset=&quot;http://www.scylladb.com/wp-content/uploads/Chart_4.png 1600w, http://www.scylladb.com/wp-content/uploads/Chart_4-300x151.png 300w, http://www.scylladb.com/wp-content/uploads/Chart_4-768x387.png 768w, http://www.scylladb.com/wp-content/uploads/Chart_4-1024x516.png 1024w&quot; sizes=&quot;(max-width: 1600px) 100vw, 1600px&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Understanding the tradeoffs&lt;/h3&gt;
&lt;p&gt;The different access methods share some characteristics and differ in some others. Table 1 summarizes these characteristics, which are elaborated on below.&lt;/p&gt;
&lt;table width=&quot;606&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Characteristic&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;R/W&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;mmap&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DIO&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;AIO/DIO&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Cache control&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Copying&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;yes&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;no&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;no&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;no&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;MMU activity&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;high&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;none&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;none&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;I/O scheduling&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;mixed&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Thread scheduling&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;kernel&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;user&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;I/O alignment&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;automatic&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;automatic&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;manual&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;manual&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Application complexity&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;moderate&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;high&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Cache control&lt;/h3&gt;
&lt;p&gt;For both read/write and mmap, caching is the responsibility of the kernel. The majority of the system’s memory is given over to the page cache. The kernel decides which pages should be evicted when memory runs low; when pages need to be written back to disk; and controls read-ahead. The application can provide some guidance to the kernel using the &lt;em&gt;madvise(2)&lt;/em&gt; and &lt;em&gt;fadvise(2)&lt;/em&gt; system calls.&lt;/p&gt;
&lt;p&gt;The great advantage of letting the kernel control caching is that great effort has been invested by the kernel developers over many decades into tuning the algorithms used by the cache. Those algorithms are used by thousands of different applications and are generally effective. The disadvantage, however, is that these algorithms are general-purpose and not tuned to the application. The kernel must guess how the application will behave next, and even if the application knows differently, it usually has no way to help the kernel guess correctly. This results in the wrong pages being evicted, I/O scheduled in the wrong order, or read-ahead scheduled for data that will not be consumed in the near future.&lt;/p&gt;
&lt;h3&gt;Copying and MMU activity&lt;/h3&gt;
&lt;p&gt;One of the benefits of the mmap method is that if the data is in cache then the kernel is bypassed completely. The kernel does not need to copy data from the kernel to userspace and back, so fewer processor cycles are spent on that activity. This benefits loads that are mostly in cache (for example, if the ratio of storage size to RAM size is close to 1:1).&lt;/p&gt;
&lt;p&gt;The downside of mmap, however, occurs when data is not in the cache. This usually happens when the ratio of storage size to RAM size is significantly higher than 1:1. Every page that is brought into cache causes another page to be evicted. Those pages have to be inserted into and removed from the page tables; the kernel has to scan the page tables to isolate inactive pages, making them candidates for eviction, and so forth. In addition, mmap requires memory for the page tables. On x86 processors, this requires 0.2% of the size of the mapped files. This seems low, but if the application has a 100:1 ratio of storage to memory, the result is that 20% of memory (0.2% * 100) is devoted to page tables.&lt;/p&gt;
&lt;h3&gt;I/O scheduling&lt;/h3&gt;
&lt;p&gt;One of the problems with letting the kernel control caching (with the mmap and read/write access methods) is that the application loses control of I/O scheduling. The kernel picks whichever block of data it deems appropriate and schedules it for write or read. This can result in the following problems:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A write storm: when the kernel schedules large amounts of writes, the disk will be busy for a long while and impact read latency&lt;/li&gt;
&lt;li&gt;The kernel cannot distinguish between “important” and “unimportant” I/O. I/O belonging to background tasks can overwhelm foreground tasks which will impact their latency&lt;sup&gt;&lt;a href=&quot;http://www.scylladb.com/2017/10/05/io-access-methods-scylla/#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;By bypassing the kernel page cache, the application takes the burden of scheduling I/O on itself. This doesn’t mean that the problems are solved; but it does mean that the problems can be solved, with sufficient attention and effort.&lt;/p&gt;
&lt;p&gt;When using Direct I/O, each thread controls when to issue I/O However, the kernel controls when the thread runs so responsibility for issuing I/O is shared between the kernel and the application. With AIO/DIO, the application is in full control of when I/O is issued.&lt;/p&gt;
&lt;h3&gt;Thread scheduling&lt;/h3&gt;
&lt;p&gt;An I/O intensive application using mmap or read/write cannot guess what its cache hit rate will be. Therefore it has to run a large number of threads (significantly larger than the core count of the machine it is running on). Using too few threads, they may all be waiting for the disk leaving the processor underutilized. Since each thread usually has at most one disk I/O outstanding, the number of running threads must be around the concurrency of the storage subsystem multiplied by some small factor in order to keep the disk fully occupied. However, if the cache hit rate is sufficiently high, then these large number of threads will contend with each other for the limited number of cores.&lt;/p&gt;
&lt;p&gt;When using direct I/O, this problem is somewhat mitigated as the application knows exactly when a thread is blocked on I/O and when it can run, so the application can adjust the number of running threads according to runtime conditions.&lt;/p&gt;
&lt;p&gt;With AIO/DIO, the application has full control over both running threads and waiting I/O (the two are completely divorced); so it can easily adjust to in-memory or disk-bound conditions or anything in between.&lt;/p&gt;
&lt;h3&gt;I/O alignment&lt;/h3&gt;
&lt;p&gt;Storage devices have a block size; all I/O must be performed in multiples of this block size which is typically 512 or 4096 bytes. Using read/write or mmap, the kernel performs the alignment automatically; a small read or write is expanded to the correct block boundary by the kernel before it is issued.&lt;/p&gt;
&lt;p&gt;With DIO, it is up to the application for perform block alignment. This incurs some complexity but also provides an advantage: the kernel will usually over-align to a 4096 byte boundary even when a 512-byte boundary suffices but a user application using DIO can issue 512-byte aligned reads which results in saving bandwidth on small items.&lt;/p&gt;
&lt;h3&gt;Application complexity&lt;/h3&gt;
&lt;p&gt;While the previous discussions favored AIO/DIO for I/O intensive applications, that method comes with a significant cost: complexity. Placing the responsibility of cache management on the application means it can make better choices than the kernel and make those choices with less overhead. However, those algorithms need to be written and tested. Using asynchronous I/O requires that the application is written using callbacks, coroutines, or a similar method, and often reduces the reusability of many available libraries.&lt;/p&gt;
&lt;h3&gt;Scylla and AIO/DIO&lt;/h3&gt;
&lt;p&gt;With Scylla, we have chosen the highest performing option, AIO/DIO. To isolate some of the complexity involved, we wrote &lt;a href=&quot;http://www.seastar-project.org/&quot;&gt;Seastar&lt;/a&gt;, a high-performance framework for I/O intensive applications. Seastar abstracts away the details of performing AIO and provides common APIs for network, disk, and multi-core communications. It also provides both callback and coroutine styles of state management suitable for different use cases.&lt;/p&gt;
&lt;p&gt;Different areas of Scylla highlight different ways that I/O can be used:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Compaction uses application-level read-ahead and write-behind to ensure high throughout but bypass application level caches due to expected low hit rates (and to avoid flooding the cache with cold data)&lt;/li&gt;
&lt;li&gt;Queries (reads) use application-controlled read-ahead and application-level caching. Application-controlled read-ahead prevents read-ahead over-runs since we know the boundaries of the data on disk ahead of time. Also application-level caching allows us to cache not only the data read from disk but also the work that went into merging data from multiple files into a single cache item&lt;/li&gt;
&lt;li&gt;Small reads are aligned to a 512-byte boundary to reduce bus data transfers and latency&lt;/li&gt;
&lt;li&gt;The Seastar I/O scheduler allows us to dynamically control I/O rates for compaction and queries (as well as other operation classes) to satisfy user service-level agreements (SLAs)&lt;/li&gt;
&lt;li&gt;A separate I/O scheduling class ensures that commitlog writes get the required bandwidth and are not dominated by reads or dominate reads&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;AIO/DIO is a good starting point for directly driving NVMe drives from the application to further bypass the kernel. This may become a future Seastar feature.&lt;/p&gt;
&lt;h3&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;We’ve shown four different ways to perform disk I/O on Linux and the different tradeoffs involved in them. It is easy to start with the traditional read/write operations or get good in-memory performance with mmap, but to achieve top performance and control, we’ve chosen asynchronous I/O for Scylla.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;1.&lt;/sup&gt; The exceptions are a write that is not aligned on a page boundary that modifies an uncached page; and a write that needs to allocate a new cache page, when memory is not available.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2.&lt;/sup&gt; There is limited ability to communicate I/O priority to the kernel with the &lt;em&gt;ioprio_set(2)&lt;/em&gt; system call&lt;/p&gt;
&lt;footer class=&quot;author_bio_section&quot; readability=&quot;5.0625&quot;&gt;&lt;div class=&quot;author-entry&quot; readability=&quot;37.738636363636&quot;&gt;
&lt;h3 class=&quot;author_name&quot;&gt;&lt;img src=&quot;http://www.scylladb.com/wp-content/uploads/avi_kivity-1-64x64.jpg&quot; width=&quot;60&quot; height=&quot;60&quot; alt=&quot;Avi Kivity&quot; class=&quot;avatar avatar-60 wp-user-avatar wp-user-avatar-60 alignnone photo&quot;/&gt;About Avi Kivity&lt;/h3&gt;
&lt;p class=&quot;author_details&quot;&gt;Avi Kivity, CTO of ScyllaDB, is known mostly for starting the Kernel-based Virtual Machine (KVM) project, the hypervisor underlying many production clouds. He has worked for Qumranet and Red Hat as KVM maintainer until December 2012. Avi is now CTO of ScyllaDB, bringing high throughput to the NoSQL world.&lt;/p&gt;
&lt;p class=&quot;author_links&quot;&gt;&lt;a href=&quot;http://www.scylladb.com/author/akivity/&quot;&gt;View all posts by Avi Kivity&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/footer&gt;</description>
<pubDate>Thu, 05 Oct 2017 17:51:56 +0000</pubDate>
<dc:creator>thekozmo</dc:creator>
<og:type>article</og:type>
<og:title>Learn about different I/O Access Methods and what we chose for Scylla</og:title>
<og:description>Explore the four different ways to perform disk I/O on Linux and the tradeoffs and what we chose for Scylla to build a high-performing database.</og:description>
<og:url>http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</og:url>
<og:image>http://www.scylladb.com/wp-content/uploads/Chart_4.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.scylladb.com/2017/10/05/io-access-methods-scylla/</dc:identifier>
</item>
</channel>
</rss>