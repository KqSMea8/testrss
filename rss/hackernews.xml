<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>How to Write Articles and Essays Quickly and Expertly (2006)</title>
<link>http://www.downes.ca/post/38526</link>
<guid isPermaLink="true" >http://www.downes.ca/post/38526</guid>
<description>&lt;h2&gt;&lt;span&gt;How to Write Articles and Essays Quickly and Expertly&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;byline&quot;&gt;&lt;span&gt;By Stephen Downes&lt;br/&gt;Sept 13, 2006&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br/&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;Translations:&lt;/em&gt; &lt;a href=&quot;http://webhostinggeeks.com/science/how-to-write-articles-and-essays-be&quot;&gt;Belorussian&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Introduction: Four Types of Discursive Writing&lt;/span&gt;&lt;/p&gt;&lt;p&gt;From time to time people express amazement at how I can get so much done. I, of course, aware of the many hours I have idled away doing nothing, demur. It feels like nothing special; I don't work harder, really, than most people. Nonetheless, these people do have a point. I am, in fact, a fairly prolific writer.&lt;/p&gt;&lt;p&gt;Part of it is tenacity. For example, I am writing this item as I wait for the internet to start working again in the Joburg airport departures area. But part of it is a simple strategy for writing your essays and articles quickly and expertly, a strategy that allows you to plan your entire essay as you write it, and thus to allow you to make your first draft your final draft. This article describes that strategy.&lt;/p&gt;&lt;p&gt;Begin by writing - in your head, at least - your second paragraph (that would be the one you just read, above). Your second paragraph will tell people what your essay says. Some people write abstracts or executive summaries in order to accomplish this task. But you don't need to do this. You are stating your entire essay or article in one paragraph. If you were writing a news article, you would call this paragraph the 'lede'. A person could read just the one paragraph and know what you had to say.&lt;/p&gt;&lt;p&gt;But how do you write this paragraph? Reporters will tell you that writing the lede is the hardest part of writing an article. Because if you don't know what the story is, you cannot write it in a single paragraph. A reporter will sift through the different ways of writing the story - the different angles - and find a way to tell it. You, because you are writing an article or essay, have more options.&lt;/p&gt;&lt;p&gt;You have more options because there are four types of discursive writing. Each of these types has a distinct and easy structure, and once you know what sort of writing you are doing, the rest of the article almost writes itself. The four types of structure are: argument, explanation, definition, and description. So, as you think about writing your first paragraph, ask yourself, what sort of article are you writing. In this article, for example, I am writing a descriptive article.&lt;/p&gt;&lt;p&gt;These are your choices of types of article or essay:&lt;/p&gt;&lt;p&gt;&lt;span&gt;Argument&lt;/span&gt;: convinces someone of something&lt;br/&gt;&lt;span&gt;Explanation&lt;/span&gt;: tells why something happened instead of something else&lt;br/&gt;&lt;span&gt;Definition&lt;/span&gt;: states what a word or concept means&lt;br/&gt;&lt;span&gt;Description&lt;/span&gt;: identifies properties or qualities of things&lt;/p&gt;&lt;p&gt;An &lt;span&gt;argument&lt;/span&gt; is a collection of sentences (known formally as 'propositions') intended to convince the reader that something is he case. Perhaps you want to convince people to take some action, to buy some product, to vote a certain way, or to believe a certain thing. The thing that you want to convince them to believe is the conclusion. In order to convince people, you need to offer one or more reasons. Those are the premises. So one type of article consists of premises leading to a conclusion, and that is how you would structure your first paragraph.&lt;/p&gt;&lt;p&gt;An &lt;span&gt;explanation&lt;/span&gt; tells the reader why something is the case. It looks at some event or phenomenon, and shows the reader what sort of things led up to that event or phenomenon, what caused it to happen, why it came to be this way instead of some other way. An explanation, therefore, consists of three parts. First, you need to identify the thing being explained. Then, you need to identify the things that could have happened instead. And finally, you need to describe the conditions and principles that led to the one thing, and not the other, being the case. And so, if you are explaining something, this is how you would write your first paragraph.&lt;/p&gt;&lt;p&gt;A &lt;span&gt;definition&lt;/span&gt; identifies the meaning of some word, phrase or concept. There are different ways to define something. You can define something using words and concepts you already know. Or you can define something by giving a name to something you can point to or describe. Or you can define something indirectly, by giving examples of telling stories. A definition always involves two parts: the word or concept being defined, and the set of sentences (or 'propositions') that do the defining. Whatever way you decide, this will be the structure of your article if you intend to define something.&lt;/p&gt;&lt;p&gt;Finally, a &lt;span&gt;description&lt;/span&gt; provides information about some object, person, or state of affairs. It will consist of a series of related sentences. The sentences will each identify the object being defined, and then ascribe some property to that object. &quot;The ball is red,&quot; for example, were the ball is the object and 'red' is the property. Descriptions may be of 'unary properties' - like colour, shape, taste, and the like, or it may describe a relation between the object and one or more other objects.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Organizing Your Writing&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The set of sentences, meanwhile, will be organized on one of a few common ways. The sentences might be in &lt;span&gt;chronological&lt;/span&gt; order. &quot;This happened, and then this happened,&quot; and so on. Or they may enumerate a &lt;span&gt;set of properties&lt;/span&gt; ('appearance', 'sound', 'taste', 'small', 'feeling about', and the like). Or they may be &lt;span&gt;elements of a list&lt;/span&gt; (&quot;nine rules for good technology,&quot; say, or &quot;ten things you should learn&quot;). Or, like the reporters, you may cover &lt;span&gt;the five W's&lt;/span&gt;: who, what, where, when, why. Or the steps required to write an essay.&lt;/p&gt;&lt;p&gt;When you elect to write an essay or article, then, you are going to write one of these types of writing. If you cannot decide which type, then your purpose isn't clear. Think about it, and make the choice, before continuing. Then you will know the major parts of the article - the premises, say, or the parts of the definition. Again, if you don't know these, your purpose isn't clear. Know what you want to say (in two or three sentences) before you decide to write.&lt;/p&gt;&lt;p&gt;You may a this point be wondering what happened to the first paragraph. You are, after all, beginning with the second paragraph. The first paragraph is used to 'animate' your essay or article, to give it life and meaning and context. In my own writing, my animation is often a short story about myself showing how the topic is important to me. Animating paragraphs may express feelings - joy, happiness, sadness, or whatever. They may consist of short stories or examples of what you are trying to describe (this is very common in news articles). Animation may be placed into your essay at any point. But is generally most effective when introducing a topic, or when concluding a topic.&lt;/p&gt;&lt;p&gt;For example, I have now concluded the first paragraph of my essay, and then expanded on it, thus ending the first major part of my essay. So now I could offer an example here, to illustrate my point in practice, and to give the reader a chance to reflect, and a way to experience some empathy, before proceeding. This is also a good place to offer a picture, diagram, illustration or chart of what you are trying to say in words.&lt;/p&gt;&lt;p&gt;Like this: the second paragraph sill consist of a set of statements. Here is what each of the four types look like:&lt;/p&gt;&lt;p&gt;Argument:&lt;/p&gt;&lt;p&gt;Premise 1&lt;br/&gt;Premise 2 ... (and more, if needed)&lt;br/&gt;Conclusion&lt;/p&gt;&lt;p&gt;Explanation:&lt;/p&gt;&lt;p&gt;Thing being explained&lt;br/&gt;Alternative possibilities&lt;br/&gt;Actual explanation&lt;/p&gt;&lt;p&gt;Definition:&lt;/p&gt;&lt;p&gt;Thing being defined&lt;br/&gt;Actual definition&lt;/p&gt;&lt;p&gt;Description:&lt;/p&gt;&lt;p&gt;Thing being described&lt;br/&gt;Descriptive sentence&lt;br/&gt;Descriptive sentence (and more, connected to the rest, as needed)&lt;/p&gt;&lt;p&gt;So now the example should have made the concept clearer. You should easily see that your second paragraph will consist of two or more distinct sentences, depending on what you are trying to say. Now, all you need to do is to write the sentences. But also, you need to tell your reader which sentence is which. In an argument, for example, you need to clearly indicate to the reader which sentence is your conclusion and which sentences are your premises.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Indicator Words&lt;/span&gt;&lt;/p&gt;&lt;p&gt;All four types of writing have their own indicator words. Let's look at each of the four types in more detail, and show (with examples, to animate!) the indicator words.&lt;/p&gt;&lt;p&gt;As stated above, an argument will consist of a conclusion and some premises. The conclusion is the most important sentence, and so will typically be stated first. For example, &quot;Blue is better than red.&quot; Then a premise indicator will be used, to tell the reader that what follows is a series of premises. Words like 'because' and 'since' are common premise indicators (there are more; you may want to make a list). So your first paragraph might look like this: &quot;Blue is better than red, &lt;span&gt;because&lt;/span&gt; blue is darker than red, and all colours that are darker are better.&quot;&lt;/p&gt;&lt;p&gt;Sometimes, when the premises need to be stressed before the conclusion will be believed, the author will put the conclusion at the end of the paragraph. To do this, the author uses a conclusion indicator. Words like 'so' and 'therefore' and 'hence' are common conclusion indicators. Thus, for example, the paragraph might read: &quot;Blue is darker than red, and all colours that are darker are better, &lt;span&gt;so&lt;/span&gt; blue is better than red.&quot;&lt;/p&gt;&lt;p&gt;You should notice that indicator words like this help you understand someone else's writing more easily as well. Being able to spot the premises and the conclusion helps you spot the structure of their article or essay. Seeing the conclusion indicator, for example, tells you that you are looking at an argument, and helps you spot the conclusion. It is good practice to try spotting arguments in other writing, and to create arguments of your own, in our own writing.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Arguments&lt;/span&gt; can also be identified by their form. There are different types of argument, which follow standard patterns of reasoning. These patterns of reasoning are indicated by the words being used. Here is a quick guide to the types of arguments:&lt;/p&gt;&lt;p&gt;&lt;span&gt;Inductive argument&lt;/span&gt;: the premise consists of a 'sample', such as a series of experiences, or experimental results, or polls. Watch for words describing these sorts of observation. The conclusion will be inferred as a generalization from these premises. Watch for words that indicate a statistical generalization, such as 'most', 'generally, 'usually', 'seventy percent', 'nine out of ten'. Also, watch for words that indicate a universal generalization, such as 'always' and 'all'.&lt;/p&gt;&lt;p&gt;A special case of the inductive argument is the &lt;span&gt;causal generalization&lt;/span&gt;. If you want someone to believe that one thing causes another, then you need to show that there are many cases where the one thing was followed by the other, and also to show that when the one thing didn't happen, then the other didn't either. This establishes a 'correlation'. The argument becomes a causal argument when you appeal to some general principle or law of nature to explain the correlation. Notice how, in this case, an explanation forms one of the premises of the argument.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Deductive argument&lt;/span&gt;: the premises consist of propositions, and the conclusion consists of some logical manipulation of the premises. A &lt;span&gt;categorical&lt;/span&gt; argument, for example, consists of reasoning about sets of things, so watch for words like 'all', 'some' and 'none'. Many times, these words are implicit; they are not started, but they are implied. When I said &quot;Blue is better than red&quot; above, for example, I meant that &quot;blue is always better than red,&quot; and that's how you would have understood it.&lt;/p&gt;&lt;p&gt;Another type of deductive argument is a &lt;span&gt;propositional&lt;/span&gt; argument. Propositional arguments are manipulations of sentences using the words 'or', 'if', and 'and'. For example, if I said &quot;Either red is best or blue is best, and red is not best, so blue is best,&quot; then I have employed a propositional argument.&lt;/p&gt;&lt;p&gt;It is useful to learn the basic argument forms, so you can very clearly indicate which type of argument you are providing. This will make your writing clearer to the reader, and will help them evaluate your writing. And in addition, this will make easier for you to write your article.&lt;/p&gt;&lt;p&gt;See how the previous paragraph is constructed, for example. I have stated a conclusion, then a premise indicator, and then a series of premises. It was very easy to writing the paragraph; I didn't even need to think about it. I just wrote something I thought was true, then provided a list of the reasons I thought it was true. How hard is that?&lt;/p&gt;&lt;p&gt;In a similar manner, an &lt;span&gt;explanation&lt;/span&gt; will also use indicator words. In fact, the indicator words used by explanations are very similar to those that are used by arguments. For example, I might explain by saying &quot;The grass is green because it rained yesterday.&quot; I am explaining why the grass is green. I am using the word 'because' as an indicator. And my explanation is offered following the word 'because'.&lt;/p&gt;&lt;p&gt;People often confuse arguments and explanations, because they use similar indicator words. So when you are writing, you can make your point clearer by using words that will generally be unique to explanations.&lt;/p&gt;&lt;p&gt;In general, explanations are answers to 'why' questions. They consider why something happened 'instead of' something else. And usually, they will say that something was 'caused' by something else. So when offering an explanation, use these words as indicators. For example: &quot;It rained yesterday. That's why the grass is green, instead of brown.&quot;&lt;/p&gt;&lt;p&gt;Almost all explanations are &lt;span&gt;causal explanations,&lt;/span&gt; but in some cases (especially when describing complex states and events) you will also appeal to a &lt;span&gt;statistical explanation&lt;/span&gt;. In essence, in a statistical explanation, you are saying, &quot;it had to happen sometime, so that's why it happened now, but there's no reason, other than probability, why it happened this time instead o last time or next time.&quot; When people see somebody who was killed by lightening, and they say, &quot;His number was just up,&quot; they are offering a statistical explanation.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Definitions&lt;/span&gt; are trickier, because there are various types of definition. I will consider three types of definition: ostensive, lexical, and implicit.&lt;/p&gt;&lt;p&gt;An '&lt;span&gt;ostensive&lt;/span&gt;' definition is an act of naming by pointing. You point to a dog and you say, &quot;That's a dog.&quot; Do this enough times, and you have defined the concept of a dog. It's harder to point in text. But in text, a description amounts to the same thing as pointing. &quot;The legs are shorter than the tail. The colour is brown, and the body is very long. That's what I mean by a 'wiener dog'.&quot; As you may have noticed, the description is followed by the indicator words &quot;that's what I mean by&quot;. This makes it clear to the reader that you are defining by ostension.&lt;/p&gt;&lt;p&gt;A '&lt;span&gt;lexical&lt;/span&gt;' definition is a definition one word or concept in terms of some other word or concept. Usually this is describes as providing the 'necessary and sufficient conditions' for being something. Another way of saying the same thing is to say that when you are defining a thing, you are saying that 'all and only' these things are the thing being defined. Yet another way of saying the same thing is to say that the thing belongs to such and such a category (all dogs are animals, or, a dog is necessarily an animal) and are distinguished from other members in such and such a way (only dogs pant, or, saying a thing is panting is sufficient to show that it is a dog).&lt;/p&gt;&lt;p&gt;That may seem complicated, but the result is that a lexical definition has a very simply and easy to write form: A (thing being defined) is a type of (category) which is (distinguishing feature). For example, &quot;A dog is an animal that pants.&quot;&lt;/p&gt;&lt;p&gt;This sentence may look just like a description, so it is useful to indicate to the reader that you are defining the term 'dog', and not describing a dog. For example, &quot;A 'dog' is defined as 'an animal that pants'.&quot; Notice how this is clearly a definition, and could not be confused as a mere description.&lt;/p&gt;&lt;p&gt;The third type of definition is an &lt;span&gt;implicit&lt;/span&gt; definition. This occurs when you don't point to things, and don't place the thing being defined into categories, but rather, list instances of the thing being defined. For example, &quot;Civilization is when people are polite to each other. When people can trust the other person. When there is order in the streets.&quot; And so on. Or: &quot;You know what I mean. Japan is civilized. Singapore is civilized. Canada is civilized.&quot; Here we haven't listed necessary and sufficient conditions, but rather, offered enough of a description as to allow people to recognize instances of 'civilization' by their resemblance to the things being described.&lt;/p&gt;&lt;p&gt;Finally, the &lt;span&gt;description&lt;/span&gt; employs the 'subject predicate object' form that you learned in school. The 'subject' is the thing being described. The 'predicate' is something that is true of the subject - some action it is undertaking, or, if the predicate is 'is', some property that it possesses. And the 'object' may be some other entity that forms a part of the description.&lt;/p&gt;&lt;p&gt;As mentioned, the sentences that form a description are related to each other. This relation is made explicit with a set of indicator words. For example, if the relation is chronological, the words might be 'first'... 'and then'... 'and finally'...! Or, 'yesterday'... 'then today'... 'and tomorrow'...&lt;/p&gt;&lt;p&gt;In this essay, the method employed was to identify a list of things - argument, explanation, definition, and description - and then to use each of these terms in the sequence. For example, &quot;An argument will consist of a ...&quot; Notice that I actually went through this list twice, first describing the parts of each of the four items, and then describing the indicator words used for each of the four items. Also, when I went through the list the second time, I offered for each type of sentence a subdivision. For example, I identified inductive and deductive arguments.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Summary&lt;/span&gt;&lt;/p&gt;&lt;p&gt;So, now, here is the full set of types of things I have described (with indicator words in brackets):&lt;/p&gt;&lt;p&gt;Argument (premise: 'since', 'because'; conclusion: 'therefore', 'so')&lt;br/&gt;Deductive&lt;br/&gt;Categorical ('all', 'only', 'no', 'none', 'some')&lt;br/&gt;Propositional ('if', 'or', 'and')&lt;br/&gt;Inductive&lt;br/&gt;Generalization ('sample', 'poll', 'observation')&lt;br/&gt;Statistical ('most', 'generally, 'usually', 'seventy percent', 'nine out of ten')&lt;br/&gt;Universal ('always' and 'all')&lt;br/&gt;Causal ('causes')&lt;/p&gt;&lt;p&gt;Explanation ('why', 'instead of')&lt;br/&gt;Causal ('caused')&lt;br/&gt;Statistical ('percent', 'probability')&lt;/p&gt;&lt;p&gt;Definition ('is a', 'is defined as')&lt;br/&gt;Ostensive ( 'That's what I mean by...' )&lt;br/&gt;Lexical ('All', 'Only', 'is a type of', 'is necessarily')&lt;br/&gt;Implicit ('is a', 'for example')&lt;/p&gt;&lt;p&gt;Description&lt;br/&gt;Chronology ('yesterday', 'today')&lt;br/&gt;Sensations ('seems', 'feels', 'appears', etc.,)&lt;br/&gt;List ('first', 'second', etc.)&lt;br/&gt;5 W's ('who', 'what', 'where', 'when', 'why')&lt;/p&gt;&lt;p&gt;&lt;span&gt;Complex Forms&lt;/span&gt;&lt;/p&gt;&lt;p&gt;As you have seen in this article, each successive iteration (which has been followed by one of my tables) has been more and more detailed. You might ask how this is so, if there are only four types of article or essay.&lt;/p&gt;&lt;p&gt;The point is, each sentence in one type of thing might be a whole set of sentence of another type of thing. This is most clearly illustrated by looking at an argument.&lt;/p&gt;&lt;p&gt;An argument is a conclusion and some premises. Like this:&lt;/p&gt;&lt;p&gt;Statement 1, and&lt;br/&gt;Statement 2,&lt;br/&gt;Thus,&lt;br/&gt;Statement 3&lt;/p&gt;&lt;p&gt;But each premise might in turn be the conclusion of another argument. Like this:&lt;/p&gt;&lt;p&gt;Statement 4, and&lt;br/&gt;Statement 5,&lt;br/&gt;Thus,&lt;br/&gt;Statement 1&lt;/p&gt;&lt;p&gt;Which gives us a complex argument:&lt;/p&gt;&lt;p&gt;Statement 4, and&lt;br/&gt;Statement 5,&lt;br/&gt;Thus, Statement 1&lt;br/&gt;Statement 2&lt;br/&gt;Thus Statement 3&lt;/p&gt;&lt;p&gt;But this can be done with all four types of paragraph. For example, consider this:&lt;/p&gt;&lt;p&gt;Statement 1 (which is actually a definition, with several parts)&lt;br/&gt;Statement 2 (which is actually a description)&lt;br/&gt;Thus,&lt;br/&gt;Statement 3&lt;/p&gt;&lt;p&gt;So, when you write your essay, you pick the main thing you want to say. For example:&lt;/p&gt;&lt;p&gt;Second paragraph:&lt;/p&gt;&lt;p&gt;Statement 1, and&lt;br/&gt;Statement 2&lt;br/&gt;Thus&lt;br/&gt;Statement 3&lt;/p&gt;&lt;p&gt;Third paragraph:&lt;/p&gt;&lt;p&gt;Statement 4 (thing being defined)&lt;br/&gt;Statement 5 (properties)&lt;br/&gt;Statement 1 (actual definition)&lt;/p&gt;&lt;p&gt;Fourth Paragraph&lt;/p&gt;&lt;p&gt;Statement 5 (first statement of description)&lt;br/&gt;Statement 6 (second statement of description)&lt;br/&gt;Statement 2 (summary of description)&lt;/p&gt;&lt;p&gt;As you can see, each simple element of an essay - premise, for example - can become a complex part of an essay - the premise could be the conclusion of an argument, for example.&lt;/p&gt;&lt;p&gt;And so, when you write your essay, you just go deeper and deeper into the structure.&lt;/p&gt;&lt;p&gt;And you may ask: where does it stop?&lt;/p&gt;&lt;p&gt;For me, it stops with descriptions - something I've seen or experienced, or a reference to a study or a paper. To someone else, it all reduces to definitions and axioms. For someone else, it might never stop.&lt;/p&gt;&lt;p&gt;But you rarely get to the bottom. You simply go on until you've said enough. In essence, you give up, and hope the reader can continue the rest of the way on his or her own.&lt;/p&gt;&lt;p&gt;And just so with this paper. I would now look at each one of each type of argument and explanation, for example, and identify more types, or describe features that make some good and some bad, or add many more examples and animations.&lt;/p&gt;&lt;p&gt;But my time is up, I need to board my flight, so I'll stop here.&lt;/p&gt;&lt;p&gt;Nothing fancy at the end. Just a reminder, that this is how you can write great articles and essays, first draft, every time. Off the top of your head.&lt;/p&gt;

&lt;p&gt;Views Today: 0 Total: 22229.&lt;/p&gt;</description>
<pubDate>Mon, 25 Dec 2017 19:58:15 +0000</pubDate>
<dc:creator>ridruejo</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.downes.ca/post/38526</dc:identifier>
</item>
<item>
<title>Yew: Rust framework for making React-like client web apps</title>
<link>https://github.com/DenisKolodin/yew</link>
<guid isPermaLink="true" >https://github.com/DenisKolodin/yew</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Yew is a modern Rust framework inspired by Elm and ReactJS.&lt;/p&gt;
&lt;h2&gt;Cutting Edge technologies&lt;/h2&gt;
&lt;h3&gt;Rust to WASM compilation&lt;/h3&gt;
&lt;p&gt;This framework designed to be compiled into modern browsers' runtimes: WASM, Asm.js, emscripten.&lt;/p&gt;
&lt;h3&gt;Clean MVC approach inspired by Elm&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-rust&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Model&lt;/span&gt; { }

&lt;span class=&quot;pl-k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Msg&lt;/span&gt; {
  DoIt,
}

&lt;span class=&quot;pl-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;update&lt;/span&gt;(model: &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;mut&lt;/span&gt; Model, msg: Msg) {
  &lt;span class=&quot;pl-k&quot;&gt;match&lt;/span&gt; msg {
      Msg&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;DoIt &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
         &lt;span class=&quot;pl-c&quot;&gt;// Update your model on events&lt;/span&gt;
      }
  }
}

&lt;span class=&quot;pl-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;view&lt;/span&gt;(model: &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;Model) -&amp;gt; html::Html&amp;lt;Msg&amp;gt; {
    &lt;span class=&quot;pl-en&quot;&gt;html!&lt;/span&gt; {
        &lt;span class=&quot;pl-c&quot;&gt;// Render your model here&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;button onclick&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt;_&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; Msg&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;DoIt,&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;button&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;VirtualDOM&lt;/h3&gt;
&lt;p&gt;Yew framework uses own virtual-dom representation.&lt;/p&gt;
&lt;h3&gt;JSX-like templates with &lt;code&gt;html!&lt;/code&gt; macro&lt;/h3&gt;
&lt;p&gt;Put pure Rust code into HTML tags.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-rust&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;html!&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;section class&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;todoapp&quot;&lt;/span&gt;,&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;header class&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;header&quot;&lt;/span&gt;,&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;{ &lt;span class=&quot;pl-s&quot;&gt;&quot;todos&quot;&lt;/span&gt; }&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
            { &lt;span class=&quot;pl-en&quot;&gt;view_input&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;model) }
        &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;header&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;section class&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;main&quot;&lt;/span&gt;,&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;input class&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;toggle-all&quot;&lt;/span&gt;,
                   type&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;,
                   checked&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;model.&lt;span class=&quot;pl-en&quot;&gt;is_all_completed&lt;/span&gt;(),
                   onclick&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt;_&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; Msg&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;ToggleAll, &lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
            { &lt;span class=&quot;pl-en&quot;&gt;view_entries&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;model) }
        &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;section&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;section&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Rust/JS/C-style comments in templates&lt;/h3&gt;
&lt;p&gt;Use single-line or multi-line Rust comments inside html-templates.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-rust&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;html!&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;pl-c&quot;&gt;/* Write some ideas&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;    * in multiline comments&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;    */&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;{ &lt;span class=&quot;pl-s&quot;&gt;&quot;and tags could be placed between comments!&quot;&lt;/span&gt; }&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;// &amp;lt;li&amp;gt;{ &quot;or single-line comments&quot; }&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;section&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Pure Rust expressions inside&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-rust&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;crate&lt;/span&gt; chrono;
&lt;span class=&quot;pl-k&quot;&gt;use&lt;/span&gt; chrono&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;prelude&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;;

&lt;span class=&quot;pl-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;view&lt;/span&gt;(model: &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;Model) -&amp;gt; Html&amp;lt;Msg&amp;gt; {
    &lt;span class=&quot;pl-en&quot;&gt;html!&lt;/span&gt; {
        &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;{ Local&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;now&lt;/span&gt;() }&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Services&lt;/h3&gt;
&lt;p&gt;Pluggable services that allow you to call external APIs like: &lt;code&gt;Timeout&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;Fetch&lt;/code&gt;, &lt;code&gt;WebSocket&lt;/code&gt;. It's a handy alternative to subscriptions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Only &lt;code&gt;Timeout&lt;/code&gt; implemented. Others in development.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-rust&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;use&lt;/span&gt; yew&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;services&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;{Timeout, TimeoutHandle, Handle};

&lt;span class=&quot;pl-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;update&lt;/span&gt;(context: &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;mut&lt;/span&gt; Context&amp;lt;Msg&amp;gt;, model: &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;mut&lt;/span&gt; Model, msg: Msg) {
    &lt;span class=&quot;pl-k&quot;&gt;match&lt;/span&gt; msg {
        Msg&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;Fire &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
            context.&lt;span class=&quot;pl-en&quot;&gt;timeout&lt;/span&gt;(Duration&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;from_secs&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;), &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; Msg&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;Timeout);
        }
        Msg&lt;span class=&quot;pl-k&quot;&gt;::&lt;/span&gt;Timeout &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
            &lt;span class=&quot;pl-c1&quot;&gt;println!&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;Timeout!&quot;&lt;/span&gt;);
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Running the examples&lt;/h2&gt;
&lt;p&gt;There are three examples to check how it works: &lt;a href=&quot;https://github.com/DenisKolodin/yew/blob/master/examples/counter&quot;&gt;counter&lt;/a&gt;, &lt;a href=&quot;https://github.com/DenisKolodin/yew/blob/master/examples/todomvc&quot;&gt;todomvc&lt;/a&gt; and &lt;a href=&quot;https://github.com/DenisKolodin/yew/blob/master/examples/timer&quot;&gt;timer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To run them you need to have &lt;a href=&quot;https://github.com/koute/cargo-web&quot;&gt;cargo-web&lt;/a&gt; installed as well as a suitable target for the Rust compiler to generate web output. By default cargo-web uses &lt;code&gt;asmjs-unknown-emscripten&lt;/code&gt;. Install cargo-web and the asmjs emscripten target as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ cargo install cargo-web
$ rustup target add asmjs-unknown-emscripten
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To start an example enter its directory start it with &lt;a href=&quot;https://github.com/koute/cargo-web&quot;&gt;cargo-web&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ cargo web start
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To run an optimised build instead of a debug build use:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ cargo web start --release
&lt;/code&gt;
&lt;/pre&gt;&lt;/article&gt;</description>
<pubDate>Mon, 25 Dec 2017 14:32:07 +0000</pubDate>
<dc:creator>syrusakbary</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/418920?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>DenisKolodin/yew</og:title>
<og:url>https://github.com/DenisKolodin/yew</og:url>
<og:description>yew - Rust framework for making client web apps</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/DenisKolodin/yew</dc:identifier>
</item>
<item>
<title>Ruby 2.5.0 Released</title>
<link>https://www.ruby-lang.org/en/news/2017/12/25/ruby-2-5-0-released/</link>
<guid isPermaLink="true" >https://www.ruby-lang.org/en/news/2017/12/25/ruby-2-5-0-released/</guid>
<description>&lt;p class=&quot;post-info&quot;&gt;Posted by naruse on 25 Dec 2017&lt;/p&gt;
&lt;p&gt;We are pleased to announce the release of Ruby 2.5.0.&lt;/p&gt;
&lt;p&gt;Ruby 2.5.0 is the first stable release of the Ruby 2.5 series. It introduces many new features and performance improvements. The notable changes are as follows:&lt;/p&gt;
&lt;h2&gt;New Features&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;rescue&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;/&lt;code&gt;ensure&lt;/code&gt; are now allowed to be used directly with &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; blocks. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/12906&quot;&gt;[Feature #12906]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;yield_self&lt;/code&gt; to yield given block in its context. Unlike &lt;code&gt;tap&lt;/code&gt;, it returns the result of the block. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/6721&quot;&gt;[Feature #6721]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support branch coverage and method coverage measurement. The branch coverage indicates which branches are executed and which are not. The method coverage indicates which methods are invoked and which are not. By running a test suite with these new features, you will know which branches and methods are executed, and evaluate total coverage of the test suite more strictly. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/13901&quot;&gt;[Feature #13901]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hash#slice &lt;a href=&quot;https://bugs.ruby-lang.org/issues/8499&quot;&gt;[Feature #8499]&lt;/a&gt; and Hash#transform_keys &lt;a href=&quot;https://bugs.ruby-lang.org/issues/13583&quot;&gt;[Feature #13583]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Struct.new can create classes that accept keyword arguments. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/11925&quot;&gt;[Feature #11925]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enumerable#any?, all?, none?, and one? accept a pattern argument. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/11286&quot;&gt;[Feature #11286]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Top-level constant look-up is no longer available. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/11547&quot;&gt;[Feature #11547]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;One of our most loved libraries, pp.rb, is now automatically loaded. You no longer have to write &lt;code&gt;require &quot;pp&quot;&lt;/code&gt;. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/14123&quot;&gt;[Feature #14123]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Print backtrace and error message in reverse order (oldest call first, most recent call last). When a long backtrace appears on your terminal (TTY), you can easily find the cause line at the bottom of the backtrace. Note that the order is reversed only when the backtrace is printed out to the terminal directly. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/8661&quot;&gt;[Feature #8661]&lt;/a&gt; [experimental]&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Performance improvements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;About 5-10% performance improvement by removing all &lt;code&gt;trace&lt;/code&gt; instructions from overall bytecode (instruction sequences). The &lt;code&gt;trace&lt;/code&gt; instruction was added to support the &lt;code&gt;TracePoint&lt;/code&gt;. However, in most cases, &lt;code&gt;TracePoint&lt;/code&gt; is not used and &lt;code&gt;trace&lt;/code&gt; instructions are pure overhead. Instead, now we use a dynamic instrumentation technique. See &lt;a href=&quot;https://bugs.ruby-lang.org/issues/14104&quot;&gt;[Feature #14104]&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;Block passing by a block parameter (e.g. &lt;code&gt;def foo(&amp;amp;b); bar(&amp;amp;b); end&lt;/code&gt;) is about 3 times faster than Ruby 2.4 by “Lazy Proc allocation” technique. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/14045&quot;&gt;[Feature #14045]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mutex is rewritten to be smaller and faster. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/13517&quot;&gt;[Feature #13517]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ERB now generates code from a template twice as fast as Ruby 2.4.&lt;/li&gt;
&lt;li&gt;Improve performance of some built-in methods including &lt;code&gt;Array#concat&lt;/code&gt;, &lt;code&gt;Enumerable#sort_by&lt;/code&gt;, &lt;code&gt;String#concat&lt;/code&gt;, &lt;code&gt;String#index&lt;/code&gt;, &lt;code&gt;Time#+&lt;/code&gt;, and more.&lt;/li&gt;
&lt;li&gt;IO.copy_stream uses copy_file_range(2) to copy offload. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/13867&quot;&gt;[Feature #13867]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Other notable changes since 2.4&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;SecureRandom now prefers OS-provided sources over OpenSSL. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/9569&quot;&gt;[Bug #9569]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Promote cmath, csv, date, dbm, etc, fcntl, fiddle, fileutils, gdbm, ipaddr, scanf, sdbm, stringio, strscan, webrick, zlib from standard libraries to default gems.&lt;/li&gt;
&lt;li&gt;Update to &lt;a href=&quot;https://github.com/k-takata/Onigmo/&quot;&gt;Onigmo&lt;/a&gt; 6.1.3.
&lt;/li&gt;
&lt;li&gt;Update to Psych 3.0.2.&lt;/li&gt;
&lt;li&gt;Update to RubyGems 2.7.3.&lt;/li&gt;
&lt;li&gt;Update to RDoc 6.0.1.
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ruby/rdoc/pull/512&quot;&gt;Switch the lexer from IRB based one to Ripper&lt;/a&gt;. This dramatically improves the performance of document generation.&lt;/li&gt;
&lt;li&gt;Fix a significant amount of bugs that existed over ten years.&lt;/li&gt;
&lt;li&gt;Add support for new Ruby syntax from the latest versions.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Update supported Unicode version to 10.0.0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Thread.report_on_exception&lt;/code&gt; is now set to true by default. This change helps debugging of multi-threaded programs. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/14143&quot;&gt;[Feature #14143]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IO#write now receives multiple arguments. &lt;a href=&quot;https://bugs.ruby-lang.org/issues/9323&quot;&gt;[Feature #9323]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/ruby/blob/v2_5_0/NEWS&quot;&gt;NEWS&lt;/a&gt; or &lt;a href=&quot;https://github.com/ruby/ruby/compare/v2_4_0...v2_5_0&quot;&gt;commit logs&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;With those changes, &lt;a href=&quot;https://github.com/ruby/ruby/compare/v2_4_0...v2_5_0&quot;&gt;6158 files changed, 348484 insertions(+), 82747 deletions(-)&lt;/a&gt; since Ruby 2.4.0!&lt;/p&gt;
&lt;p&gt;Merry Christmas, Happy Holidays, and enjoy programming with Ruby 2.5!&lt;/p&gt;
&lt;h2&gt;Download&lt;/h2&gt;
&lt;ul readability=&quot;7.4609665427509&quot;&gt;&lt;li readability=&quot;2.4821428571429&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.gz&quot;&gt;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SIZE:   15834941 bytes
SHA1:   58f77301c891c1c4a08f301861c26b1ea46509f6
SHA256: 46e6f3630f1888eb653b15fa811d77b5b1df6fd7a3af436b343cfe4f4503f2ab
SHA512: 0712fe68611f5d0cd6dd54b814f825478e64b6a62bdf67bce431f4dca2dc00b1a33f77bebfbcd0a151118a1152554ab457decde435b424aa1f004bc0aa40580d
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;2.5045045045045&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.zip&quot;&gt;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.zip&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SIZE:   19495617 bytes
SHA1:   700b6f55d689a5c8051c8c292b9e77a1b50bf96e
SHA256: 94559ea6e3c619423da604e503ce1dc1c465d6e0747a07fbdc5f294acaf14c24
SHA512: e4324064cee8c65b80192e3eff287e915d2d40464d300744c36fb326ae4b1846911400a99d4332192d8a217009d3a5209b43eb5e8bc0b739035bef89cc493e84
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;2.4747774480712&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.bz2&quot;&gt;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.bz2&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SIZE:   13955820 bytes
SHA1:   827b9a3bcffa86d1fc9ed96d403cb9dc37731688
SHA256: d87eb3021f71d4f62e5a5329628ac9a6665902173296e551667edd94362325cc
SHA512: 8f6fdf6708e7470f55bc009db2567cd8d4e633ad0678d83a015441ecf5b5d88bd7da8fb8533a42157ff83b74d00b6dc617d39bbb17fc2c6c12287a1d8eaa0f2c
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;2.4821428571429&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.xz&quot;&gt;https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.xz&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SIZE:   11292472 bytes
SHA1:   9c7babcf9e299be3f197d9091024ae458f1a1273
SHA256: 1da0afed833a0dab94075221a615c14487b05d0c407f991c8080d576d985b49b
SHA512: 55714a33d7661fe8b432f73c34fd67b49699f8b79df1cbd680a74899124d31111ab0f444677672aac1ba725820182940d485efb2db0bf2bc96737c5d40c54578
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Mon, 25 Dec 2017 10:37:48 +0000</pubDate>
<dc:creator>phereford</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ruby-lang.org/en/news/2017/12/25/ruby-2-5-0-released/</dc:identifier>
</item>
<item>
<title>Not raising funds to stay small and happy</title>
<link>https://antoine.finkelstein.fr/not-raising-funds-to-stay-small-and-happy-938535c9c09d</link>
<guid isPermaLink="true" >https://antoine.finkelstein.fr/not-raising-funds-to-stay-small-and-happy-938535c9c09d</guid>
<description>&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;35&quot;&gt;

&lt;p name=&quot;dbe0&quot; id=&quot;dbe0&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--h3&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;“Any plans to raise funds?” is a question I get a lot. Here are a few of the reasons why we intend to stay bootstrapped.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;574d&quot; id=&quot;574d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Conventional wisdom says you start building an MVP, maybe acquire a few customers and raise funds. If you go to events, most stories start with a variant of this. But there’s a catch here.&lt;/p&gt;
&lt;p name=&quot;1428&quot; id=&quot;1428&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Building a SAAS generating $30k MRR is hard but doable. It’s enough to have a great lifestyle for a team of 3. You can work remotely, host company retreats in amazing places and keep full control.&lt;/p&gt;
&lt;p name=&quot;5889&quot; id=&quot;5889&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Raise funds, and you’re losing this freedom. Investors will rightly ask for a decent exit, and a team of 3 won’t allow this. So you’ll try to grow to a team of at least 20 to increase the value of your company. Of course, a profitable 3 person team will often break when you try to scale it.&lt;/p&gt;
&lt;p name=&quot;5ca7&quot; id=&quot;5ca7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It all boils down to what is enough to make you happy. A 30k MRR company can provide an amazing lifestyle. If it is enough to make you happy, you’re highly increasing your odds of success. But if a 100 person company is what you need, then hopefully you’ll enjoy the trip, as you most likely won’t get there.&lt;/p&gt;
&lt;p name=&quot;6097&quot; id=&quot;6097&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;A company needs to reach a certain bar to ensure the happiness of its founders. But this bar is often a lot lower than we think. Let’s avoid falling for the hedonic treadmill.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 25 Dec 2017 09:48:28 +0000</pubDate>
<dc:creator>antoinefink</dc:creator>
<og:title>Not raising funds to stay small and happy – Antoine’s blog</og:title>
<og:url>https://antoine.finkelstein.fr/not-raising-funds-to-stay-small-and-happy-938535c9c09d</og:url>
<og:description>“Any plans to raise funds?” is a question I get a lot. Here are a few of the reasons why we intend to stay bootstrapped.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://antoine.finkelstein.fr/not-raising-funds-to-stay-small-and-happy-938535c9c09d?gi=754d578af6dc</dc:identifier>
</item>
<item>
<title>One-on-one meetings are underrated, whereas group meetings waste time</title>
<link>http://www.smashcompany.com/business/one-on-one-meetings-are-underrated-whereas-group-meetings-waste-time</link>
<guid isPermaLink="true" >http://www.smashcompany.com/business/one-on-one-meetings-are-underrated-whereas-group-meetings-waste-time</guid>
<description>&lt;p&gt;&lt;em&gt;(written by lawrence krubner, however indented passages are often quotes). You can contact lawrence at: lawrence@krubner.com&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have had good results with a style of management where I mostly have one-on-one meetings. These meetings can be just 15 minutes, or maybe 30 if there is a serious issue that needs to be discussed. If I’m leading a small team (less than 20 people) I’ll have meetings with each person at least once a week, but with key players more often than that.&lt;/p&gt;
&lt;p&gt;During a one-on-one meeting, I can ask tough questions, and the person I’m talking to can offer a long answer, without fear of boring the rest of the team, since the rest of the team is not there to be bored. And the person can speak without being interrupted by some third person. They can offer negative opinions about their co-workers, without worrying that their co-worker will find out and retaliate. They can also offer positive opinions about their co-workers, without the too obvious incentive of their co-worker hearing their praise.&lt;/p&gt;
&lt;p&gt;If a person is running late on a project, the best way to find out the reason is to have a one-on-one meeting with them. They are free to incriminate themselves, in ways that I find useful. For instance, they might put all the blame on someone else. After the meeting I will investigate their accusations and discover the truth. Is the other person to blame? If I conclude that the other person is not to blame, then I know I have a person on my team who both runs late and dishonestly blames other people for their problems. Where possible, I will remove such people from my team. But what if it turns out they were right, that this other person is really the cause of all of the problems? In that case, I’ve learned something important, and I’ve learned it because of the freedom to speak that people have when they are alone with me. If I’d called a group meeting, and that other person was in the room, it’s unlikely that anyone would have told me the truth. Instead I would have heard some vague excuses.&lt;/p&gt;
&lt;p&gt;What if someone finishes a project much faster than I expected, or with much higher quality than I was expecting? I definitely want to talk to that person alone, one-on-one. I want to ask them some very specific questions, so I can get a sense of how much more work I can give them. I also want to hear their ideas about what we should do next. I also want to know if they got help from someone else, and do they enjoy working with that other person, and should I henceforth assign tasks to them together? If someone on my team reliably impresses me, then I’ll want to get an accurate idea of how much more work or responsibilities I can give them. And these kinds of detailed conversations can only happen in one-on-one situations. It would be awkward to try to have these conversations while other people are in the room.&lt;/p&gt;
&lt;p&gt;You might be thinking, “What is wrong with group meetings? I love group meetings. I get to talk to everyone at once, which is much more efficient than talking to each person one at a time.”&lt;/p&gt;
&lt;p&gt;If you feel that way, I should warn you, I’m about to attack your deeply held beliefs. Get ready.&lt;/p&gt;
&lt;p&gt;I once had a client who insisted that the marketing team should meet with the tech team once a week, to collaborate on the creation of marketing copy that would be informed by those who understood the technology. This is good in theory, but less people would have been more productive. As it was, during the typical meeting we had 15 people in the room, most of whom were bored. The conversation was typically dominated by the 3 most opinionated marketing people. Imagine this going on for 20 straight minutes:&lt;/p&gt;
&lt;blockquote readability=&quot;46&quot;&gt;
&lt;p&gt;AMY: Consumers are saturated with advertisements. The only way to break through is to connect with them at an emotional level. That’s why we need to consider long-form advertising. We need to tell stories that…&lt;/p&gt;
&lt;p&gt;HENRY: No, no, no! Nobody has time to read a story! If you write more than 10 words then you’ve failed. We need a slogan that is memorable, something we can use in every ad, something that…&lt;/p&gt;
&lt;p&gt;AMY: Studies show that people don’t remember facts, they remember emotions, we need to connect with those emotions, that is why we need to consider…&lt;/p&gt;
&lt;p&gt;HENRY: Great, so we come up with 10 words that pack an emotional wallop, but we don’t write a damn novel, nobody has time to read anymore, nobody…&lt;/p&gt;
&lt;p&gt;AMY: I read a novel a week, sometimes two — some people crave stories and look for stories and we should give them ads that they actually enjoy and want to share with their…&lt;/p&gt;
&lt;p&gt;SUSAN: People don’t want stories so much as they want authentic, we really need to forge a connection with them that feels authentic; if we indulge in some silly fiction that’s just going to…&lt;/p&gt;
&lt;p&gt;HENRY: If we find the right 10 words, it will resonate with them as authentic, that’s our job, to find the 10 words that feel authentic! What do you think we are doing…&lt;/p&gt;
&lt;p&gt;AMY: Authenticity is not a pack of Ramen noodles, we can’t create it in 10 minutes, it’s something that takes time and…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So who is right, and who is wrong? You’ll need to figure this out, but you don’t need to do so while 12 other people are in the room. If you are the manager who is overseeing this, it is up to you to get people back to work.&lt;/p&gt;
&lt;p&gt;Among marketers, the debate over facts versus emotions versus slogans versus stories will go on forever. 50 years from now they will still debating the right strategy. You can’t wait that long. You need to make a decision. You might hold a brief meeting with both Amy and Henry to be sure you understand their points of view, but don’t let yourself get sucked in. Pick a strategy, and go with it. Don’t hold meetings where unrelated people are forced to listen to people who like to pontificate.&lt;/p&gt;
&lt;p&gt;Have you ever been in a group meeting where half the room was not participating? Of course you have! That’s the norm for group meetings! I’ve had many clients where I was dragged into such meetings several times a week. I could look around the room and I saw many people who were obviously daydreaming. They were bored. None of the information being discussed was relevant to their work. More so, they had nothing to contribute, or, worst of all, they were not allowed to contribute!&lt;/p&gt;
&lt;p&gt;Why do such meetings happen? There are 2 main reasons:&lt;/p&gt;
&lt;p&gt;1. the manager is lazy and undisciplined and so invites everyone rather than thinking hard about who they actually need to speak to&lt;/p&gt;
&lt;p&gt;2. the manager is an egotist who likes to force people to listen to the manager’s words&lt;/p&gt;
&lt;p&gt;The lazy and undisciplined manager can improve their style of management by thinking hard about who they really need to talk to about a particular subject. They can then pursue one-on-one meetings with those people. The lazy and undisciplined manager finds it easier to simply order everyone to show up, and then they figure out who they actually need to hear from while the meeting is going on. This is efficient for the manager, but inefficient for everyone else, and therefore inefficient for the firm.&lt;/p&gt;
&lt;p&gt;Some managers are egotists. Just like me, they can look around the table and see who is daydreaming. I’ve known many managers who feel that if an employee daydreams, then the employee is to blame for inattentiveness. But I would flip that. If you need to be sure that a specific worker understands a specific task, then have a one-on-one meeting with them. If you are disbursing general information to the whole team, send an email. If you frequently monopolize the attention of employees who don’t truly need to hear what you are saying, then you have bad managerial habits — the good news is that you now know what you need to do to become a better manager.&lt;/p&gt;
&lt;p&gt;Ego is the enemy of productivity. A group meeting is fertile ground for ego. Often the top manager is to blame, but not always. Sometimes it is the people you’ve invited. You only need two egotists with strong opinions and suddenly your meeting is derailed with a 30 minute argument about a new fad theory regarding marketing/technology/consumers/sales. I’ve seen debates go on for as much as an hour, with most of the room clearly restless and disaffected. A bad manager allows these debates to continue. A good manager is smart enough to end these debates early. A great manager doesn’t allow such debates to exist, because they don’t hold the kinds of meetings where this behavior is possible.&lt;/p&gt;
&lt;p&gt;If I ever need to announce something to a large group, I can send an email to everyone. I don’t need to get them altogether in a room. Even if I thought gathering people together was the best strategy, how would I handle the fact that on any particular day I might have key workers who are sick, or taking care of a sick child, or working remotely? How do you handle that? Do you send them an email? Have a one-on-one meeting with them later? If so, why not make that your primary strategy? Email for announcements, and one-on-one meetings for serious information exchange, has the advantage that, as a strategy, it scales well. It’s the best strategy when you have a team of 5, and also when you have a team of 5,000. (Obviously you don’t have one-on-one meetings with each of the 5,000 people, but you have one-on-one meetings with the managers who oversee the teams formed from those 5,000 people.) More communication can and should be done by email or chat — we are lucky enough to enjoy an abundance of options nowadays, and we should take advantage of them.&lt;/p&gt;
&lt;p&gt;Once in awhile you have to coordinate activity between people. In these cases, you can allow yourself a meeting where three people attend (you and two other people). You can then act as referee while they figure out how to work with each other. But if you need to do this often, it might indicate that one of them is being obstructionist. Ideally, you can delegate much of the work of getting them to work together. If you can’t delegate that work, think about why that is. Which of those two people seems unwilling to accept the responsibility that you are trying to delegate?&lt;/p&gt;
&lt;p&gt;What happens when two groups of people need to work together? Shouldn’t you get the two groups together, so they can all talk to each other? No! This is never productive. If you try this, most of the people in the meeting will be bored. They will be daydreaming, while two or three people work through the real details. So if two groups need to work together, the right approach is to get one person from each group, and have a meeting of yourself and those two people. Once they’ve worked out the details, you can delegate to them the responsibility of explaining the new plan to the groups they came from. And, again, if they can not be trusted with this responsibility, then you need to have a long talk with whoever is being obstructionist. And if they continue to be obstructionist, even after you spoken to them several times. then you need to get rid of them.&lt;/p&gt;
&lt;p&gt;Is there a good use for group meetings? Yes! Group meetings are useful for brainstorming sessions. &lt;a href=&quot;https://www.amazon.com/Innovation-Entrepreneurship-Peter-Drucker/dp/0060851139/ref=sr_1_5?ie=UTF8&amp;amp;qid=1514164585&amp;amp;sr=8-5&amp;amp;keywords=drucker&quot;&gt;Peter Drucker touches upon this in 1985 book, Innovation and Entrepreneurship&lt;/a&gt;. Especially as a company becomes larger, there is a risk of ossifying into rigid habits. Drucker emphasizes that it must become a regular discipline to get together the best engineers, sales people, product people, managers, and have them brainstorm about how to take advantage of the possibilities that they see in front of them. A brain storming session is a rare situation where you want everyone in the room to talk, and you want as much diversity of opinion as possible. But I have rarely been invited to a group meeting where the goal was to brainstorm. In the overwhelming majority of cases when I’ve been invited to a group meeting, the focus has been on operations and execution, and this is where group meetings are terrible.&lt;/p&gt;
&lt;p&gt;A brainstorming session needs to be focused on generating ideas. Be wary if the conversation drifts to some seemingly urgent short-term subject. I recently worked for a client where the top leaders invited each other to every meeting, and every meeting had a bit of brainstorming, but also some conversation about operations, budgets, and execution. Most of the time, this mixing of subjects suggests a lack of discipline on the part of the leaders. In the short term, you won’t notice any penalty for this style of leadership. But 2 years later, you will be asking “Why haven’t we made any progress during the last 2 years?” and the problem will be the undisciplined way that every meeting covers all subjects and ideas.&lt;/p&gt;
&lt;p&gt;A final word about one-on-one meetings. Food is important. Getting away from the office is important. There is the old joke that French managers don’t have meetings, instead they have dinner. American managers would be wise to import this habit. I’ve seen the occasional sales team go out for drinks, and sometimes when the tech or marketing team works late, they later go out to celebrate. All of that is great. And socializing away from work is a rare case when having a whole group together can be a healthy thing, because it is a situation where efficiency is not the goal. But as a manager, one-on-one socializing has advantages. Think about the legitimate(*) reasons you might invite an employee to lunch — perhaps you are considering them for a big promotion and you need to get to know them better to be certain they are ready for the new responsibilities. Or you want someone’s opinion about someone else who you are considering for promotion, and you hope that a meal will create the ambiance that encourages them to speak freely. Whatever the reason, all the arguments in favor of one-on-one meetings still apply.&lt;/p&gt;
&lt;p&gt;(* As we were reminded all through 2017, there are plenty of illegitimate reasons why a manager might invite an employee to a one-on-one lunch or dinner. As soon as a manager does such a thing, they become the enemy of the long-term health of their firm, and I can only hope they are soon fired.)&lt;/p&gt;
&lt;p&gt;[ [ UPDATE ] ]&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=16002687&quot;&gt;Interesting conversation on Hacker News about this.&lt;/a&gt;&lt;/p&gt;
&lt;a class=&quot;more source&quot; href=&quot;https://www.amazon.com/Innovation-Entrepreneurship-Peter-Drucker/dp/0060851139/ref=sr_1_5?ie=UTF8&amp;amp;qid=1514164585&amp;amp;sr=8-5&amp;amp;keywords=drucker&quot; target=&quot;_blank&quot;&gt;Source&lt;/a&gt;</description>
<pubDate>Mon, 25 Dec 2017 04:42:40 +0000</pubDate>
<dc:creator>lkrubner</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.smashcompany.com/business/one-on-one-meetings-are-underrated-whereas-group-meetings-waste-time</dc:identifier>
</item>
<item>
<title>New York&amp;#039;s vanishing shops and storefronts: &amp;#039;It&amp;#039;s not Amazon, it&amp;#039;s rent&amp;#039;</title>
<link>https://www.theguardian.com/business/2017/dec/24/new-york-retail-shops-amazon-rent</link>
<guid isPermaLink="true" >https://www.theguardian.com/business/2017/dec/24/new-york-retail-shops-amazon-rent</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;W&lt;/span&gt;&lt;/span&gt;alk down almost any major &lt;a href=&quot;https://www.theguardian.com/us-news/new-york&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;New York&lt;/a&gt; street – say Fifth Avenue near Trump Tower, or Madison Avenue from midtown to the Upper East Side. Perhaps venture down Canal Street, or into the West Village around Bleecker, and some of the most expensive retail areas in the world are blitzed with vacant storefronts.&lt;/p&gt;
&lt;p&gt;The famed Lincoln Plaza Cinemas on the Upper West Side announced earlier this week that it is closing next month. A blow to the city’s cinephiles, certainly, but also a sign of the effects that rapid gentrification, coupled with technological innovation, are having on the city.&lt;/p&gt;
&lt;p&gt;Over the past several years, thousands of small retailers have closed, replaced by national chains. When they, too, fail, the stores lie vacant, and landlords, often institutional investors, are unwilling to drop rents.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;A recent survey by New York councilmember Helen Rosenthal found 12% of stores on one stretch of the Upper West Side is unoccupied and ‘for lease’. The picture is repeated nationally. In October, the US &lt;a href=&quot;http://money.cnn.com/2017/10/25/news/economy/store-closings-2017/index.html?iid=EL&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;surpassed&lt;/a&gt; the previous record for store closings, set after the 2008 financial crisis.&lt;/p&gt;
&lt;p&gt;The common refrain is that the devastation is the product of a profound shift in consumption to online, with &lt;a href=&quot;https://www.amazon.com/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Amazon&lt;/a&gt; frequently identified as the leading culprit. But this is maybe an over-simplification.&lt;/p&gt;
&lt;p&gt;“It’s not Amazon, it’s rent,” says Jeremiah Moss, author of the website and book &lt;a href=&quot;http://vanishingnewyork.blogspot.com/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Vanishing New York&lt;/a&gt;. “Over the decades, small businesses weathered the New York of the 70s with it near-bankruptcy and high crime. Businesses could survive the internet, but they need a reasonable rent to do that.”&lt;/p&gt;
&lt;p&gt;Part of the problem is the changing make-up of New York landlords. Many are no longer mom-and-pop operations, but institutional investors and hedge funds that are unwilling to drop rents to match retail conditions. “They are running small businesses out of the city and replacing them with chain stores and temporary luxury businesses,” says Moss.&lt;/p&gt;
&lt;p&gt;In addition, he says, banks will devalue a property if it’s occupied by a small business, and increase it for a chain store. “There’s benefit to waiting for chain stores. If you are a hedge fund manager running a portfolio you leave it empty and take a write-off.”&lt;/p&gt;
&lt;p&gt;New York is famously a city of what author EB White called “tiny neighborhood units” is his &lt;a href=&quot;https://www.amazon.com/Here-New-York-B-White/dp/1892145022&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;classic 1949 essay&lt;/a&gt; Here is New York. White observed “that many a New Yorker spends a lifetime within the confines of an area smaller than a country village”.&lt;/p&gt;
&lt;p&gt;In Vanishing New York, Moss writes of the toll the evisceration of distinct neighborhoods through real estate over-pricing has on the city. “It’s homogenizing and changing the character of the city,” he says. Even where landlords are offering competitive leases, they are often for two or five years, not the customary 10.&lt;/p&gt;
&lt;p&gt;“We’re seeing more stores front emptying, and we’re seeing a lot of turnover where you see spaces fill temporarily and then empty. And it’s continuing to get worse,” he says.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Shoppers in the financial district in New York.&quot; src=&quot;https://i.guim.co.uk/img/media/7d585496fddc335e9ea46243ab159b97524f1418/0_0_5054_3032/master/5054.jpg?w=300&amp;amp;q=55&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=157d1da02a83f42fb3fd65149be9080c&quot;/&gt;&lt;/div&gt;

Shoppers in the financial district in New York. Photograph: Kevin Clogstoun/Getty Images/Lonely Planet Images
&lt;p&gt;In business terms, the crisis in commercial real estate has led to a wave of consolidations. Earlier this month, France’s Unibail-Rodamco and Australia’s Westfield agreed to merge in a deal worth $24.7bn to form the world’s second-biggest owner of shopping malls, including Manhattan’s Brookfield Place.&lt;/p&gt;
&lt;p&gt;Vacant real estate is not the only effect of an over-priced market; the boom in WeWork, a work-space company valued at around $20bn, and store pop-ups could also be responsible.&lt;/p&gt;
&lt;p&gt;But some believe the market could have reached a turning point. “It’s like Hunger Games,” says New York retail property agent Robin Zendell. “If you’re smart and innovative you can survive this market. Landlords and retailers are having to listen to a new generation of shoppers.”&lt;/p&gt;
&lt;p&gt;Like Moss, Zendell believes it’s too simplistic to blame Amazon. The same signals of over-pricing are seen in every area of real estate, including housing. “When you see [that] every corner has a bank or a pharmacy, and there is a gym on the second floor, there’s a simple reason for that: people can’t afford the rent.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 2&quot;&gt;
&lt;/aside&gt;&lt;p&gt;“Why did restaurants go to Brooklyn? Because it’s cool? No, because it was cheap, and [because] restaurateurs were sick of giving investors’ money away so they could pay thir rent.”&lt;/p&gt;
&lt;p&gt;In some areas, notably Bleecker Street, once lined with fashion boutiques including Ralph Lauren and Marc Jacobs, too many vacancies create their own problems. “Rents have fallen but now there are so many empty stores there, nobody wants to be alone. So they’ve created more of a crisis.”&lt;/p&gt;
&lt;p&gt;But there are glimmers of turn-around. Zendell has observed five deals in SoHo in the past month, indicating that landlords are becoming too nervous to sit around. “They helped to create the bubble, but now it’s our market.”&lt;/p&gt;
&lt;p&gt;Renters insist landlords have an investment in the game, either through taking a performance-based interest in the tenant or some other mechanism. Retailers that signed 10-year leases at a high number per sq ft and then had to pay to get out of that lease are insisting on some participation.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;“Any new deal is going to have a pre-nup, the location has to be right, and the landlord has to have some skin in the game,” says Zendell.&lt;/p&gt;
&lt;p&gt;Zendell also believes some retailers are beginning to find their way. She cites &lt;a href=&quot;https://www.everlane.com/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Everlane&lt;/a&gt; as an example of upcoming brand that is managing to harness the power of the internet to bricks-and-mortar retail. Online, she points out, is good for things you need, but less so for things you want.&lt;/p&gt;
&lt;p&gt;“You still need people and interaction, but you need a different approach: the modern customer is very smart. Brick and mortar used to be only about sales, now it’s about marketing, driving people to the internet and for helping people to understand your product.”&lt;/p&gt;
</description>
<pubDate>Mon, 25 Dec 2017 01:31:48 +0000</pubDate>
<dc:creator>andrewlevine</dc:creator>
<og:url>http://www.theguardian.com/business/2017/dec/24/new-york-retail-shops-amazon-rent</og:url>
<og:description>Vacant storefronts are becoming more noticeable in the capital of consumption, as small retailers are being pushed out by wealthy investors</og:description>
<og:image>https://i.guim.co.uk/img/media/7bd7f4e40f75bf833ff20acf3dc00eb291620158/0_0_3326_1996/master/3326.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxNi8wNS8yNS9vdmVybGF5LWxvZ28tMTIwMC05MF9vcHQucG5n&amp;s=5fde59a2ae97acb988f536340064af18</og:image>
<og:type>article</og:type>
<og:title>New York's vanishing shops and storefronts: 'It's not Amazon, it's rent'</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/business/2017/dec/24/new-york-retail-shops-amazon-rent</dc:identifier>
</item>
<item>
<title>NVIDIA GeForce driver deployment in datacenters is forbidden now</title>
<link>http://www.nvidia.com/content/DriverDownload-March2009/licence.php?lang=us&amp;type=GeForce</link>
<guid isPermaLink="true" >http://www.nvidia.com/content/DriverDownload-March2009/licence.php?lang=us&amp;type=GeForce</guid>
<description>
&lt;div id=&quot;greenBand&quot;&gt;&lt;img xmlns=&quot;&quot; class=&quot;sectionTitle&quot; alt=&quot;Download Drivers&quot; border=&quot;0&quot; height=&quot;22&quot; width=&quot;209&quot; src=&quot;http://images.nvidia.com/templates/2009/section_titles/title_download_drivers_en.png&quot;/&gt;&lt;/div&gt;


&lt;div readability=&quot;12.448700410397&quot;&gt;
&lt;div id=&quot;mainContent&quot; readability=&quot;132.95212038304&quot;&gt;
&lt;p&gt;IMPORTANT NOTICE -- READ CAREFULLY: This License For Customer Use of NVIDIA GeForce Software (&quot;LICENSE&quot;) is the agreement which governs use of the GeForce software of NVIDIA Corporation and its subsidiaries (&quot;NVIDIA&quot;) downloadable herefrom, including computer software and associated materials (&quot;SOFTWARE&quot;). By downloading, installing, copying, or otherwise using the SOFTWARE, you agree to be bound by the terms of this LICENSE. If you do not agree to the terms of this LICENSE, do not download the SOFTWARE.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RECITALS&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;Use of NVIDIA's products requires three elements: the SOFTWARE, the hardware on a graphics controller board, and a personal computer. The SOFTWARE is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The SOFTWARE is not sold, and instead is only licensed for use, strictly in accordance with this LICENSE. The hardware is protected by various patents, and is sold, but this LICENSE does not cover that sale. This LICENSE sets forth the terms and conditions of the SOFTWARE use only.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1. DEFINITIONS&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;1.1&lt;/strong&gt; Customer. Customer means the entity or individual that downloads the SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2. GRANT OF LICENSE&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;&lt;strong&gt;2.1&lt;/strong&gt; Rights and Limitations of Grant. NVIDIA hereby grants Customer a non-exclusive, non-transferable license to install and use the SOFTWARE for use with NVIDIA GeForce or Titan branded hardware products owned by Customer, subject to the following:&lt;/p&gt;
&lt;blockquote readability=&quot;31&quot;&gt;
&lt;p&gt;&lt;strong&gt;2.1.1&lt;/strong&gt; Rights. Customer may install and use multiple copies of the SOFTWARE on a shared computer or concurrently on different computers, and make multiple back-up copies of the SOFTWARE, solely for Customer's use within Customer's Enterprise. &quot;Enterprise&quot; shall mean individual use by Customer or any legal entity (such as a corporation or university) and the subsidiaries it owns by more than fifty percent (50%).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1.2&lt;/strong&gt; Linux/FreeBSD Exception. Notwithstanding the foregoing terms of Section 2.1.1, SOFTWARE designed exclusively for use on the Linux or FreeBSD operating systems, or other operating systems derived from the source code to these operating systems, may be copied and redistributed, provided that the binary files thereof are not modified in any way (except for unzipping of compressed files).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1.3&lt;/strong&gt; Limitations.&lt;/p&gt;
&lt;blockquote readability=&quot;27&quot;&gt;
&lt;p&gt;No Modification or Reverse Engineering. Customer may not modify (except as provided in Section 2.1.2), reverse engineer, decompile, or disassemble the SOFTWARE, nor attempt in any other manner to obtain the source code.&lt;/p&gt;
&lt;p&gt;No Separation of Components. The SOFTWARE is licensed as a single product. Its component parts may not be separated for use on more than one computer, nor otherwise used separately from the other parts.&lt;/p&gt;
&lt;p&gt;No Sublicensing or Distribution. Customer may not sell, rent, sublicense, distribute or transfer the SOFTWARE; or use the SOFTWARE for public performance or broadcast; or provide commercial hosting services with the SOFTWARE.&lt;/p&gt;
&lt;p&gt;No Datacenter Deployment. The SOFTWARE is not licensed for datacenter deployment, except that blockchain processing in a datacenter is permitted.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;3. TERMINATION&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;This LICENSE will automatically terminate if Customer fails to comply with any of the terms and conditions hereof. In such event, Customer must destroy all copies of the SOFTWARE and all of its component parts.&lt;/p&gt;
&lt;p&gt;Defensive Suspension. If Customer commences or participates in any legal proceeding against NVIDIA, then NVIDIA may, in its sole discretion, suspend or terminate all license grants and any other rights provided under this LICENSE during the pendency of such legal proceedings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4. OWNERSHIP&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;All title and intellectual property rights in and to the SOFTWARE (including but not limited to all images, photographs, animations, video, audio, music, text, and other information incorporated into the SOFTWARE), the accompanying materials, and any copies of the SOFTWARE, are owned by NVIDIA or its suppliers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;5. APPLICABLE LAW AND BINDING ARBITRATION&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;56&quot;&gt;
&lt;p&gt;Governing Law. This LICENSE shall be deemed to have been made in, and shall be construed pursuant to, the laws of the State of Delaware, without regard to or application of its conflict of laws rules or principles. The United Nations Convention on Contracts for the International Sale of Goods is specifically disclaimed.&lt;/p&gt;
&lt;p&gt;Arbitration. For any claim against or dispute or controversy with NVIDIA relating to this LICENSE or that may arise from it or out of use of the SOFTWARE (collectively, &quot;Disputes&quot;), Customer agrees to first contact NVIDIA by U.S. Mail at NVIDIA Corporation, ATTN: Legal, 2788 San Tomas Expressway, Santa Clara, California, 95051 and attempt to resolve the Dispute with NVIDIA informally. In the unlikely event that NVIDIA has not been able to resolve such Dispute it has with Customer within 60 days of Customer's original informal claim (or sooner if, in NVIDIA's opinion, a Dispute is not likely to be resolved within 60 days), Customer and NVIDIA each agree to resolve any such Dispute (excluding any NVIDIA claims for injunctive or other equitable relief) by binding arbitration before an arbitrator from Judicial Mediation and Arbitration Services (&quot;JAMS&quot;) located in Santa Clara County, California under the Optional Expedited Arbitration Procedures then in effect for JAMS, except as provided herein. The arbitration will be conducted in Santa Clara County, California (or the nearest JAMS Office to Santa Clara County), unless Customer requests an in-person hearing in Customer's hometown or Customer and NVIDIA agree otherwise. Nothing in this section shall prevent either party from seeking injunctive or other equitable relief from the courts as necessary to prevent the actual or threatened infringement, misappropriation, or violation of that party's data security, intellectual property rights, or other proprietary rights. If for any reason this agreement to arbitrate is found not to apply to a Dispute and as a result a Dispute proceeds in court rather than in arbitration, the dispute shall be exclusively brought in state or federal court in Santa Clara County, California.&lt;/p&gt;
&lt;p&gt;Class Action &amp;amp; Jury Trial Waiver. ALL CLAIMS MUST BE BROUGHT IN THE PARTIES' INDIVIDUAL CAPACITY, AND NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY PURPORTED CLASS OR REPRESENTATIVE PROCEEDING. THIS WAIVER APPLIES TO CLASS ARBITRATION UNLESS SUCH ARBITRATION IS NECESSARY TO EFFECTUATE THE ENFORCEMENT OF THE COURT CLASS ACTION WAIVER OR IN THE EVENT THAT CLASS ARBITRATION IS EXPRESSLY AGREED TO BY NVIDIA. CUSTOMER AGREES THAT, BY ENTERING INTO THIS LICENSE, CUSTOMER AND NVIDIA ARE EACH WAIVING THE RIGHT TO A TRIAL BY JURY OR TO PARTICIPATE IN A CLASS ACTION.&lt;/p&gt;
&lt;p&gt;Right to Opt Out. CUSTOMER MAY OPT OUT OF THE FOREGOING ARBITRATION AND CLASS ACTION/JURY TRIAL WAIVER PROVISION OF THIS LICENSE BY NOTIFYING NVIDIA IN WRITING WITHIN 30 DAYS OF COMMENCEMENT OF USE OF THE SOFTWARE UNDER THIS LICENSE. SUCH WRITTEN NOTIFICATION MUST BE SENT TO ATTN: LEGAL, 2788 SAN TOMAS EXPRESSWAY, SANTA CLARA, CALIFORNIA, 95051 AND MUST INCLUDE (1) Customer's NAME, (2) Customer's ADDRESS, (3) THE REFERENCE TO GEFORCE SOFTWARE AS THE SOFTWARE THE NOTICE RELATES TO, AND (4) A CLEAR STATEMENT INDICATING THAT CUSTOMER DOES NOT WISH TO RESOLVE DISPUTES THROUGH ARBITRATION AND DEMONSTRATING COMPLIANCE WITH THE 30 DAY TIME LIMIT TO OPT OUT.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;6. DISCLAIMER OF WARRANTIES AND LIMITATION OF LIABILITY&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;37&quot;&gt;
&lt;p&gt;&lt;strong&gt;6.1&lt;/strong&gt; No Warranties. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THE SOFTWARE IS PROVIDED &quot;AS IS&quot; AND NVIDIA AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES OF ANY KIND OR NATURE, WHETHER EXPRESS, IMPLIED, OR STATUTORY, RELATING TO OR ARISING FROM THE SOFTWARE, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND NON-INFRINGEMENT. Without limiting the foregoing, Customer is solely responsible for determining and verifying that the SOFTWARE that Customer obtains and installs is the appropriate version for Customer's model of graphics controller board, operating system, and computer hardware.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.2&lt;/strong&gt; Limitations of Liability. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL NVIDIA OR ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER, OR FOR DAMAGES FOR LOSS OF BUSINESS PROFITS, LOSS OF DATA, BUSINESS INTERRUPTION, OR LOSS OF BUSINESS INFORMATION ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. IN NO EVENT WILL NVIDIA's TOTAL CUMULATIVE LIABILITY UNDER OR ARISING OUT OF THIS LICENSE EXCEED THE NET AMOUNT PAID TO NVIDIA FOR Customer's USE OF THE PARTICULAR SOFTWARE UPON WHICH LIABILITY IS BASED, OR US$10.00 IF NVIDIA RECEIVED NO FEES FOR Customer's USE OF THE SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;7. SYSTEM UPDATES&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;30.302390998594&quot;&gt;
&lt;p&gt;Customer hereby agrees and acknowledges that the SOFTWARE may access and collect information about, update, and configure Customer's system in order to properly optimize such system for use with the SOFTWARE. To the extent that Customer uses the SOFTWARE, Customer hereby consents to all of the foregoing, and represent and warrant that Customer has the right to grant such consent. In addition, Customer agrees that Customer is solely responsible for maintaining appropriate data backups and system restore points for Customer's system, and that NVIDIA will have no responsibility for any damage or loss to such system (including loss of data or access) arising from or relating to (a) any changes to the configuration, application settings, environment variables, registry, drivers, BIOS, or other attributes of the system (or any part of such system) initiated through the SOFTWARE; or (b) installation of any SOFTWARE or third party software patches through the NVIDIA update service. The SOFTWARE may contain links to websites and services. NVIDIA encourages Customer to review the privacy statements on those sites and services that Customer chooses to visit so that Customer can understand how they may collect, use and share Customer's personal information. NVIDIA is not responsible for the privacy statements or practices of sites and services controlled by other companies or organizations.&lt;/p&gt;
&lt;p&gt;Registration and Customer Information. Customer represents and warrants that the information that Customer has furnished in connection with its registration for the SOFTWARE is complete and accurate. To the extent that Customer provides to NVIDIA during registration or otherwise personal data, Customer also acknowledges that such information will be collected, used, and disclosed by NVIDIA in accordance with NVIDIA's privacy policy, available at URL &lt;a href=&quot;http://www.nvidia.com/object/privacy_policy.html&quot;&gt;http://www.nvidia.com/object/privacy_policy.html&lt;/a&gt;. If Customer does not wish the SOFTWARE to provide system updates as described in this Section 7, uncheck &quot;Automatically check for updates&quot; in the &quot;Preferences&quot; tab of the applicable NVIDIA update control panel for the SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;8. MISCELLANEOUS&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;If any provision of this LICENSE is inconsistent with, or cannot be fully enforced under, the law, such provision will be construed as limited to the extent necessary to be consistent with and fully enforceable under the law. This LICENSE is the final, complete and exclusive agreement between the parties relating to the subject matter hereof, and supersedes all prior or contemporaneous understandings and agreements relating to such subject matter, whether oral or written. This LICENSE may only be modified in writing signed by an authorized officer of NVIDIA. Customer agrees that it will not ship, transfer or export the SOFTWARE into any country, or use the SOFTWARE in any manner, prohibited by the United States Bureau of Industry and Security or any applicable export laws, restrictions or regulations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 25 Dec 2017 00:46:06 +0000</pubDate>
<dc:creator>f2n</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.nvidia.com/content/DriverDownload-March2009/licence.php?lang=us&amp;type=GeForce</dc:identifier>
</item>
<item>
<title>Show HN: Solo – App for sharing loneliness and aloneness</title>
<link>http://www.sharesolo.com</link>
<guid isPermaLink="true" >http://www.sharesolo.com</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;http://www.sharesolo.com&quot;&gt;http://www.sharesolo.com&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16001795&quot;&gt;https://news.ycombinator.com/item?id=16001795&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 201&lt;/p&gt;&lt;p&gt;# Comments: 81&lt;/p&gt;</description>
<pubDate>Sun, 24 Dec 2017 23:17:24 +0000</pubDate>
<dc:creator>wtsui</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://sharesolo.com/</dc:identifier>
</item>
<item>
<title>Computer latency: 1977-2017</title>
<link>https://danluu.com/input-lag/</link>
<guid isPermaLink="true" >https://danluu.com/input-lag/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;Computer latency: 1977-2017&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;/&gt;&lt;link rel=&quot;icon&quot; href=&quot;data:;base64,iVBORw0KGgo=&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;414.90449393987&quot;&gt;
&lt;p&gt;&lt;strong&gt;Computer latency: 1977-2017&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;I have this nagging feeling that the computers I use today feel slower than the computers I used as a kid. I don’t trust this kind of feeling because human perception has been shown to be unreliable in empirical studies, so I carried around a high-speed camera and measured the response latency of devices I’ve run into in the past few months. Here are the results:&lt;/p&gt;
&lt;table readability=&quot;2&quot;&gt;&lt;tr&gt;&lt;th&gt;computer&lt;/th&gt;
&lt;th&gt;latency&lt;br/&gt;(ms)&lt;/th&gt;
&lt;th&gt;year&lt;/th&gt;
&lt;th&gt;clock&lt;/th&gt;
&lt;th&gt;# T&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;apple 2e&lt;/td&gt;
&lt;td bgcolor=&quot;#FFFFCC&quot;&gt;30&lt;/td&gt;
&lt;td bgcolor=&quot;#54278F&quot;&gt;&lt;span&gt;1983&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08306B&quot;&gt;&lt;span&gt;1 MHz&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08306B&quot;&gt;&lt;span&gt;3.5k&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;ti 99/4a&lt;/td&gt;
&lt;td bgcolor=&quot;#FFFFCC&quot;&gt;40&lt;/td&gt;
&lt;td bgcolor=&quot;#3F007D&quot;&gt;&lt;span&gt;1981&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08519C&quot;&gt;&lt;span&gt;3 MHz&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08306B&quot;&gt;&lt;span&gt;8k&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;custom haswell-e &lt;em&gt;165Hz&lt;/em&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FFEDA0&quot;&gt;50&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;3.5 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;commodore pet 4016&lt;/td&gt;
&lt;td bgcolor=&quot;#FFEDA0&quot;&gt;60&lt;/td&gt;
&lt;td bgcolor=&quot;#3F007D&quot;&gt;&lt;span&gt;1977&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08306B&quot;&gt;&lt;span&gt;1 MHz&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08306B&quot;&gt;&lt;span&gt;3.5k&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;sgi indy&lt;/td&gt;
&lt;td bgcolor=&quot;#FFEDA0&quot;&gt;60&lt;/td&gt;
&lt;td bgcolor=&quot;#807DBA&quot;&gt;1993&lt;/td&gt;
&lt;td bgcolor=&quot;#6BAED6&quot;&gt;.1 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#4292C6&quot;&gt;1.2M&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;custom haswell-e &lt;em&gt;120Hz&lt;/em&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FFEDA0&quot;&gt;60&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;3.5 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;thinkpad 13 &lt;strong&gt;chromeos&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;70&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;2.3 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;1G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;imac g4 &lt;strong&gt;os 9&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;70&lt;/td&gt;
&lt;td bgcolor=&quot;#BCBDDC&quot;&gt;2002&lt;/td&gt;
&lt;td bgcolor=&quot;#C6DBEF&quot;&gt;.8 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#6BAED6&quot;&gt;11M&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;custom haswell-e &lt;em&gt;60Hz&lt;/em&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;80&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;3.5 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;mac color classic&lt;/td&gt;
&lt;td bgcolor=&quot;#FEB24C&quot;&gt;90&lt;/td&gt;
&lt;td bgcolor=&quot;#807DBA&quot;&gt;1993&lt;/td&gt;
&lt;td bgcolor=&quot;#2171B5&quot;&gt;&lt;span&gt;16 MHz&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#2171B5&quot;&gt;&lt;span&gt;273k&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;l&quot;&gt;powerspec g405 &lt;strong&gt;linux&lt;/strong&gt; &lt;em&gt;60Hz&lt;/em&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FEB24C&quot;&gt;90&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;4.2 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;macbook pro 2014&lt;/td&gt;
&lt;td bgcolor=&quot;#FEB24C&quot;&gt;100&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;2.6 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;700M&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;thinkpad 13 &lt;strong&gt;linux chroot&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FEB24C&quot;&gt;100&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;2.3 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;1G&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;l&quot;&gt;lenovo x1 carbon 4g &lt;strong&gt;linux&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;110&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;2.6 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;1G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;imac g4 &lt;strong&gt;os x&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;120&lt;/td&gt;
&lt;td bgcolor=&quot;#BCBDDC&quot;&gt;2002&lt;/td&gt;
&lt;td bgcolor=&quot;#C6DBEF&quot;&gt;.8 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#6BAED6&quot;&gt;11M&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;custom haswell-e &lt;em&gt;24Hz&lt;/em&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;140&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;3.5 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;lenovo x1 carbon 4g &lt;strong&gt;win&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#E31A1C&quot;&gt;150&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;2.6 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#DEEBF7&quot;&gt;1G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;next cube&lt;/td&gt;
&lt;td bgcolor=&quot;#E31A1C&quot;&gt;150&lt;/td&gt;
&lt;td bgcolor=&quot;#6A51A3&quot;&gt;&lt;span&gt;1988&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#4292C6&quot;&gt;25 MHz&lt;/td&gt;
&lt;td bgcolor=&quot;#4292C6&quot;&gt;1.2M&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;powerspec g405 &lt;strong&gt;linux&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#BD0026&quot;&gt;170&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;4.2 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot; bgcolor=&quot;silver&quot;&gt;packet around the world&lt;/td&gt;
&lt;td bgcolor=&quot;silver&quot;&gt;190&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;powerspec g405 &lt;strong&gt;win&lt;/strong&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;black&quot;&gt;&lt;span&gt;200&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;4.2 GHz&lt;/td&gt;
&lt;td bgcolor=&quot;#F7FBFF&quot;&gt;2G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;symbolics 3620&lt;/td&gt;
&lt;td bgcolor=&quot;black&quot;&gt;&lt;span&gt;300&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#54278F&quot;&gt;&lt;span&gt;1986&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#08519C&quot;&gt;&lt;span&gt;5 MHz&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#2171B5&quot;&gt;&lt;span&gt;390k&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;These are tests of the latency between a keypress and the display of a character in a terminal (see appendix for more details). The results are sorted from quickest to slowest. In the latency column, the background goes from green to yellow to red to black as devices get slower and the background gets darker as devices get slower. No devices are green. When multiple OSes were tested on the same machine, the os is &lt;strong&gt;in bold&lt;/strong&gt;. When multiple refresh rates were tested on the same machine, the refresh rate is &lt;em&gt;in italics&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In the year column, the background gets darker and purple-er as devices get older. If older devices were slower, we’d see the year column get darker as we read down the chart.&lt;/p&gt;
&lt;p&gt;The next two columns show the clock speed and number of transistors in the processor. Smaller numbers are darker and blue-er. As above, if slower clocked and smaller chips correlated with longer latency, the columns would get darker as we go down the table, but it, if anything, seems to be the other way around.&lt;/p&gt;
&lt;p&gt;For reference, the latency of a packet going around the world through fiber from NYC back to NYC via &lt;a href=&quot;https://www.extremetech.com/extreme/122989-1-5-billion-the-cost-of-cutting-london-toyko-latency-by-60ms&quot;&gt;Tokyo and London&lt;/a&gt; is inserted in the table.&lt;/p&gt;
&lt;p&gt;If we look at overall results, the fastest machines are ancient. Newer machines are all over the place. Fancy gaming rigs with unusually high refresh-rate displays are almost competitive with machines from the late 70s and early 80s, but “normal” modern computers can’t compete with thirty to forty year old machines.&lt;/p&gt;
&lt;p&gt;We can also look at mobile devices. In this case, we’ll look at scroll latency in the browser:&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;device&lt;/th&gt;
&lt;th&gt;latency&lt;br/&gt;(ms)&lt;/th&gt;
&lt;th&gt;year&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;ipad pro 10.5&quot; pencil&lt;/td&gt;
&lt;td bgcolor=&quot;#FFFFCC&quot;&gt;30&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;ipad pro 10.5&quot;&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;70&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone 4s&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;70&lt;/td&gt;
&lt;td bgcolor=&quot;#DADAEB&quot;&gt;2011&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone 6s&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;70&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone 3gs&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;70&lt;/td&gt;
&lt;td bgcolor=&quot;#DADAEB&quot;&gt;2009&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone x&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;80&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone 7&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;80&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone 6&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;80&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;gameboy color&lt;/td&gt;
&lt;td bgcolor=&quot;#FED976&quot;&gt;80&lt;/td&gt;
&lt;td bgcolor=&quot;#9E9AC8&quot;&gt;1998&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;iphone 5&lt;/td&gt;
&lt;td bgcolor=&quot;#FEB24C&quot;&gt;90&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2012&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;blackberry q10&lt;/td&gt;
&lt;td bgcolor=&quot;#FEB24C&quot;&gt;100&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2013&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;huawei honor 8&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;110&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;google pixel 2 xl&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;110&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;galaxy s7&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;120&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;galaxy note 3&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;120&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;nexus 5x&lt;/td&gt;
&lt;td bgcolor=&quot;#FD8D3C&quot;&gt;120&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;oneplus 3t&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;130&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;blackberry key one&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;130&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;moto e (2g)&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;140&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;moto g4 play&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;140&lt;/td&gt;
&lt;td bgcolor=&quot;#FCFBFD&quot;&gt;2017&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;moto g4 plus&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;140&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;google pixel&lt;/td&gt;
&lt;td bgcolor=&quot;#FC4E2A&quot;&gt;140&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;samsung galaxy avant&lt;/td&gt;
&lt;td bgcolor=&quot;#E31A1C&quot;&gt;150&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2014&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;asus zenfone3 max&lt;/td&gt;
&lt;td bgcolor=&quot;#E31A1C&quot;&gt;150&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;sony xperia z5 compact&lt;/td&gt;
&lt;td bgcolor=&quot;#E31A1C&quot;&gt;150&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;htc one m4&lt;/td&gt;
&lt;td bgcolor=&quot;#E31A1C&quot;&gt;160&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2013&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;galaxy s4 mini&lt;/td&gt;
&lt;td bgcolor=&quot;#BD0026&quot;&gt;170&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2013&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;lg k4&lt;/td&gt;
&lt;td bgcolor=&quot;#800026&quot;&gt;&lt;span&gt;180&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot; bgcolor=&quot;silver&quot;&gt;packet&lt;/td&gt;
&lt;td bgcolor=&quot;silver&quot;&gt;190&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;htc rezound&lt;/td&gt;
&lt;td bgcolor=&quot;black&quot;&gt;&lt;span&gt;240&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#DADAEB&quot;&gt;2011&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;palm pilot 1000&lt;/td&gt;
&lt;td bgcolor=&quot;black&quot;&gt;&lt;span&gt;490&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#807DBA&quot;&gt;1996&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;kindle paperwhite 3&lt;/td&gt;
&lt;td bgcolor=&quot;black&quot;&gt;&lt;span&gt;630&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#EFEDF5&quot;&gt;2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;l&quot;&gt;kindle 4&lt;/td&gt;
&lt;td bgcolor=&quot;black&quot;&gt;&lt;span&gt;860&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor=&quot;#DADAEB&quot;&gt;2011&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;As above, the results are sorted by latency and color-coded from green to yellow to red to black as devices get slower. Also as above, the year gets purple-er (and darker) as the device gets older.&lt;/p&gt;
&lt;p&gt;If we exclude the &lt;code&gt;game boy color&lt;/code&gt;, which is a different class of device than the rest, all of the quickest devices are Apple phones or tablets. The next quickest device is the &lt;code&gt;blackberry q10&lt;/code&gt;. Although we don’t have enough data to really tell why the &lt;code&gt;blackberry q10&lt;/code&gt; is unusually quick for a non-Apple device, one plausible guess is that it’s helped by having actual buttons, which are easier to implement with low latency than a touchscreen. The other two devices with actual buttons are the &lt;code&gt;gameboy color&lt;/code&gt; and the &lt;code&gt;kindle 4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After that &lt;code&gt;iphones&lt;/code&gt; and non-kindle button devices, we have a variety of Android devices of various ages. At the bottom, we have the ancient &lt;code&gt;palm pilot 1000&lt;/code&gt; followed by the kindles. The &lt;code&gt;palm&lt;/code&gt; is hamstrung by a touchscreen and display created in an era with much slower touchscreen technology and the &lt;code&gt;kindles&lt;/code&gt; use &lt;a href=&quot;https://en.wikipedia.org/wiki/E_Ink&quot;&gt;e-ink&lt;/a&gt; displays, which are much slower than the displays used on modern phones, so it’s not surprising to see those devices at the bottom.&lt;/p&gt;
&lt;h3 id=&quot;why-is-the-apple-2e-so-fast&quot;&gt;Why is the &lt;code&gt;apple 2e&lt;/code&gt; so fast?&lt;/h3&gt;
&lt;p&gt;Compared to a modern computer that’s not the latest &lt;code&gt;ipad pro&lt;/code&gt;, the &lt;code&gt;apple 2&lt;/code&gt; has significant advantages on both the input and the output, and it also has an advantage between the input and the output for all but the most carefully written code since the &lt;code&gt;apple 2&lt;/code&gt; doesn’t have to deal with context switches, buffers involved in handoffs between different processes, etc.&lt;/p&gt;
&lt;p&gt;On the input, if we look at modern keyboards, it’s common to see them scan their inputs at &lt;code&gt;100 Hz&lt;/code&gt; to &lt;code&gt;200 Hz&lt;/code&gt; (e.g., &lt;a href=&quot;https://github.com/benblazak/ergodox-firmware&quot;&gt;the ergodox claims to scan at &lt;code&gt;167 Hz&lt;/code&gt;&lt;/a&gt;). By comparison, the &lt;code&gt;apple 2e&lt;/code&gt; effectively scans at &lt;code&gt;556 Hz&lt;/code&gt;. See appendix for details.&lt;/p&gt;
&lt;p&gt;If we look at the other end of the pipeline, the display, we can also find latency bloat there. I have a display that advertises &lt;code&gt;1 ms&lt;/code&gt; switching on the box, but if we look at how long it takes for the display to actually show a character from when you can first see the trace of it on the screen until the character is solid, it can easily be &lt;code&gt;10 ms&lt;/code&gt;. You can even see this effect with some high-refresh-rate displays that are sold on their allegedly good latency.&lt;/p&gt;
&lt;p&gt;At &lt;code&gt;144 Hz&lt;/code&gt;, each frame takes &lt;code&gt;7 ms&lt;/code&gt;. A change to the screen will have &lt;code&gt;0 ms&lt;/code&gt; to &lt;code&gt;7 ms&lt;/code&gt; of extra latency as it waits for the next frame boundary before getting rendered (on average,we expect half of the maximum latency, or &lt;code&gt;3.5 ms&lt;/code&gt;). On top of that, even though my display at home advertises a &lt;code&gt;1 ms&lt;/code&gt; switching time, it actually appears to take &lt;code&gt;10 ms&lt;/code&gt; to fully change color once the display has started changing color. When we add up the latency from waiting for the next frame to the latency of an actual color change, we get an expected latency of &lt;code&gt;7/2 + 10 = 13.5ms&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With the old CRT in the &lt;code&gt;apple 2e&lt;/code&gt;, we’d expect half of a &lt;code&gt;60 Hz&lt;/code&gt; refresh (&lt;code&gt;16.7 ms / 2&lt;/code&gt;) plus a negligible delay, or &lt;code&gt;8.3 ms&lt;/code&gt;. That’s hard to beat today: a state of the art “gaming monitor” can get the total display latency down into the same range, but in terms of marketshare, very few people have such displays, and even displays that are advertised as being fast aren’t always actually fast.&lt;/p&gt;
&lt;h3 id=&quot;ios-rendering-pipeline&quot;&gt;iOS rendering pipeline&lt;/h3&gt;
&lt;p&gt;If we look at what’s happening between the input and the output, the differences between a modern system and an &lt;code&gt;apple 2e&lt;/code&gt; are too many to describe without writing an entire book. To get a sense of the situation in modern machines, here’s former iOS/UIKit engineer &lt;a href=&quot;https://andymatuschak.org/&quot;&gt;Andy Matuschak&lt;/a&gt;’s high-level sketch of what happens on iOS, which he says should be presented with the disclaimer that “this is my out of date memory of out of date information”:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;hardware has its own scanrate (e.g. &lt;code&gt;120 Hz&lt;/code&gt; for recent touch panels), so that can introduce up to &lt;code&gt;8 ms&lt;/code&gt; latency&lt;/li&gt;
&lt;li&gt;events are delivered to the kernel through firmware; this is relatively quick but system scheduling concerns may introduce a couple &lt;code&gt;ms&lt;/code&gt; here&lt;/li&gt;
&lt;li&gt;the kernel delivers those events to privileged subscribers (here, &lt;code&gt;backboardd&lt;/code&gt;) over a mach port; more scheduling loss possible&lt;/li&gt;
&lt;li&gt;&lt;code&gt;backboardd&lt;/code&gt; must determine which process should receive the event; this requires taking a lock against the window server, which shares that information (a trip back into the kernel, more scheduling delay)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;backboardd&lt;/code&gt; sends that event to the process in question; more scheduling delay possible before it is processed&lt;/li&gt;
&lt;li&gt;those events are only dequeued on the main thread; something else may be happening on the main thread (e.g. as result of a timer or network activity), so some more latency may result, depending on that work&lt;/li&gt;
&lt;li&gt;UIKit introduced &lt;code&gt;1-2 ms&lt;/code&gt; event processing overhead, CPU-bound&lt;/li&gt;
&lt;li&gt;application decides what to do with the event; apps are poorly written, so usually this takes many &lt;code&gt;ms&lt;/code&gt;. the consequences are batched up in a data-driven update which is sent to the render server over IPC
&lt;ul&gt;&lt;li&gt;If the app needs a new shared-memory video buffer as a consequence of the event, which will happen anytime something non-trivial is happening, that will require round-trip IPC to the render server; more scheduling delays&lt;/li&gt;
&lt;li&gt;(trivial changes are things which the render server can incorporate itself, like affine transformation changes or color changes to layers; non-trivial changes include anything that has to do with text, most raster and vector operations)&lt;/li&gt;
&lt;li&gt;These kinds of updates often end up being triple-buffered: the GPU might be using one buffer to render right now; the render server might have another buffer queued up for its next frame; and you want to draw into another. More (cross-process) locking here; more trips into kernel-land.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;the render server applies those updates to its render tree (a few &lt;code&gt;ms&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;every &lt;code&gt;N Hz&lt;/code&gt;, the render tree is flushed to the GPU, which is asked to fill a video buffer
&lt;ul&gt;&lt;li&gt;Actually, though, there’s often triple-buffering for the screen buffer, for the same reason I described above: the GPU’s drawing into one now; another might be being read from in preparation for another frame&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;every &lt;code&gt;N Hz&lt;/code&gt;, that video buffer is swapped with another video buffer, and the display is driven directly from that memory
&lt;ul&gt;&lt;li&gt;(this &lt;code&gt;N Hz&lt;/code&gt; isn’t necessarily ideally aligned with the preceding step’s &lt;code&gt;N Hz&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Andy says “the actual amount of &lt;em&gt;work&lt;/em&gt; happening here is typically quite small. A few &lt;code&gt;ms&lt;/code&gt; of CPU time. Key overhead comes from:”&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;periodic scanrates (input device, render server, display) imperfectly aligned&lt;/li&gt;
&lt;li&gt;many handoffs across process boundaries, each an opportunity for something else to get scheduled instead of the consequences of the input event&lt;/li&gt;
&lt;li&gt;lots of locking, especially across process boundaries, necessitating trips into kernel-land&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;By comparison, on the Apple 2e, there basically aren’t handoffs, locks, or process boundaries. Some very simple code runs and writes the result to the display memory, which causes the display to get updated on the next scan.&lt;/p&gt;
&lt;h3 id=&quot;refresh-rate-vs-latency&quot;&gt;Refresh rate vs. latency&lt;/h3&gt;
&lt;p&gt;One thing that’s curious about the computer results is the impact of refresh rate. We get a &lt;code&gt;90 ms&lt;/code&gt; improvement from going from &lt;code&gt;24 Hz&lt;/code&gt; to &lt;code&gt;165 Hz&lt;/code&gt;. At &lt;code&gt;24 Hz&lt;/code&gt; each frame takes &lt;code&gt;41.67 ms&lt;/code&gt; and at &lt;code&gt;165 Hz&lt;/code&gt; each frame takes &lt;code&gt;6.061 ms&lt;/code&gt;. As we saw above, if there weren’t any buffering, we’d expect the average latency added by frame refreshes to be &lt;code&gt;20.8ms&lt;/code&gt; in the former case and &lt;code&gt;3.03 ms&lt;/code&gt; in the latter case (because we’d expect to arrive at a uniform random point in the frame and have to wait between &lt;code&gt;0ms&lt;/code&gt; and the full frame time), which is a difference of about &lt;code&gt;18ms&lt;/code&gt;. But the difference is actually &lt;code&gt;90 ms&lt;/code&gt;, implying we have latency equivalent to &lt;code&gt;(90 - 18) / (41.67 - 6.061) = 2&lt;/code&gt; buffered frames.&lt;/p&gt;
&lt;p&gt;If we plot the results from the other refresh rates on the same machine (not shown), we can see that they’re roughly in line with a “best fit” curve that we get if we assume that, for that machine running powershell, we get 2.5 frames worth of latency regardless of refresh rate. This lets us estimate what the latency would be if we equipped this low latency gaming machine with an &lt;code&gt;infinity Hz&lt;/code&gt; display – we’d expect latency to be &lt;code&gt;140 - 2.5 * 41.67 = 36 ms&lt;/code&gt;, almost as fast as quick but standard machines from the 70s and 80s.&lt;/p&gt;
&lt;h3 id=&quot;complexity&quot;&gt;Complexity&lt;/h3&gt;
&lt;p&gt;Almost every computer and mobile device that people buy today is slower than common models of computers from the 70s and 80s. Low-latency gaming desktops and the &lt;code&gt;ipad pro&lt;/code&gt; can get into the same range as quick machines from thirty to forty years ago, but most off-the-shelf devices aren’t even close.&lt;/p&gt;
&lt;p&gt;If we had to pick one root cause of latency bloat, we might say that it’s because of “complexity”. Of course, we all know that complexity is bad. If you’ve been to a non-academic non-enterprise tech conference in the past decade, there’s a good chance that there was at least one talk on how complexity is the root of all evil and we should aspire to reduce complexity.&lt;/p&gt;
&lt;p&gt;Unfortunately, it’s a lot harder to remove complexity than to give a talk saying that we should remove complexity. A lot of the complexity buys us something, either directly or indirectly. When we looked at the input of a fancy modern keyboard vs. the &lt;code&gt;apple 2&lt;/code&gt; keyboard, we saw that using a relatively powerful and expensive general purpose processor to handle keyboard inputs can be slower than dedicated logic for the keyboard, which would both be simpler and cheaper. However, using the processor gives people the ability to easily customize the keyboard, and also pushes the problem of “programming” the keyboard from hardware into software, which reduces the cost of making the keyboard. The more expensive chip increases the manufacturing cost, but considering how much of the cost of these small-batch artisanal keyboards is the design cost, it seems like a net win to trade manufacturing cost for ease of programming.&lt;/p&gt;
&lt;p&gt;We see this kind of tradeoff in every part of the pipeline. One of the biggest examples of this is the OS you might run on a modern desktop vs. the loop that’s running on the &lt;code&gt;apple 2&lt;/code&gt;. Modern OSes let programmers write generic code that can deal with having other programs simultaneously running on the same machine, and do so with pretty reasonable general performance, but we pay a huge complexity cost for this and the handoffs involved in making this easy result in a significant latency penalty.&lt;/p&gt;
&lt;p&gt;A lot of the complexity might be called &lt;a href=&quot;http://wiki.c2.com/?AccidentalComplexity&quot;&gt;accidental complexity&lt;/a&gt;, but most of that accidental complexity is there because it’s so convenient. At every level from the hardware architecture to the syscall interface to the I/O framework we use, we take on complexity, much of which could be eliminated if we could sit down and re-write all of the systems and their interfaces today, but it’s too inconvenient to re-invent the universe to reduce complexity and we get benefits from economies of scale, so we live with what we have.&lt;/p&gt;
&lt;p&gt;For those reasons and more, in practice, the solution to poor performance caused by “excess” complexity is often to add more complexity. In particular, the gains we’ve seen that get us back to the quickness of the quickest machines from thirty to forty years ago have come not from listening to exhortations to reduce complexity, but from piling on more complexity.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ipad pro&lt;/code&gt; is a feat of modern engineering; the engineering that went into increasing the refresh rate on both the input and the output as well as making sure the software pipeline doesn’t have unnecessary buffering is complex! The design and manufacture of high-refresh-rate displays that can push system latency down is also non-trivially complex in ways that aren’t necessary for bog standard &lt;code&gt;60 Hz&lt;/code&gt; displays.&lt;/p&gt;
&lt;p&gt;This is actually a common theme when working on latency reduction. A common trick to reduce latency is to add a cache, but adding a cache to a system makes it more complex. For systems that generate new data and can’t tolerate a cache, the solutions are often even more complex. An example of this might be &lt;a href=&quot;https://en.wikipedia.org/wiki/RDMA_over_Converged_Ethernet&quot;&gt;large scale RoCE deployments&lt;/a&gt;. These can push remote data access latency from from the millisecond range down to the microsecond range, &lt;a href=&quot;https://danluu.com/infinite-disk/&quot;&gt;which enables new classes of applications&lt;/a&gt;. However, this has come at a large cost in complexity. Early large-scale RoCE deployments easily took tens of person years of effort to get right and also came with a tremendous operational burden.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;It’s a bit absurd that a modern gaming machine running at &lt;code&gt;4,000x&lt;/code&gt; the speed of an &lt;code&gt;apple 2&lt;/code&gt;, with a CPU that has &lt;code&gt;500,000x&lt;/code&gt; as many transistors (with a GPU that has &lt;code&gt;2,000,000x&lt;/code&gt; as many transistors) can maybe manage the same latency as an &lt;code&gt;apple 2&lt;/code&gt; in very carefully coded applications if we have a monitor with nearly &lt;code&gt;3x&lt;/code&gt; the refresh rate. It’s perhaps even more absurd that the default configuration of the &lt;code&gt;powerspec g405&lt;/code&gt;, which had the fastest single-threaded performance you could get until October 2017, had more latency from keyboard-to-screen (approximately &lt;code&gt;3 feet&lt;/code&gt;, maybe &lt;code&gt;10 feet&lt;/code&gt; of actual cabling) than sending a packet around the world (&lt;code&gt;16187 mi&lt;/code&gt; from NYC to Tokyo to London back to NYC, more due to the cost of running the shortest possible length of fiber).&lt;/p&gt;
&lt;p&gt;On the bright side, we’re arguably emerging from the latency dark ages and it’s now possible to assemble a computer or buy a tablet with latency that’s in the same range as you could get off-the-shelf in the 70s and 80s. This reminds me a bit of the screen resolution &amp;amp; density dark ages, where CRTs from the 90s offered better resolution and higher pixel density than affordable non-laptop LCDs until relatively recently. 4k displays have now become normal and affordable 8k displays are on the horizon, blowing past anything we saw on consumer CRTs. I don’t know that we’ll see the same kind improvement with respect to latency, but one can hope. There are individual developers improving the experience for people who use certain, very carefully coded, applications, but it’s not clear what force could cause a significant improvement in the default experience most users see.&lt;/p&gt;
&lt;h3 id=&quot;other-posts-on-latency-measurement&quot;&gt;Other posts on latency measurement&lt;/h3&gt;
&lt;h3 id=&quot;appendix-why-measure-latency&quot;&gt;Appendix: why measure latency?&lt;/h3&gt;
&lt;p&gt;Latency matters! For very simple tasks, &lt;a href=&quot;https://pdfs.semanticscholar.org/386a/15fd85c162b8e4ebb6023acdce9df2bd43ee.pdf&quot;&gt;people can perceive latencies down to &lt;code&gt;2 ms&lt;/code&gt; or less&lt;/a&gt;. Moreover, increasing latency is not only noticeable to users, &lt;a href=&quot;http://www.tactuallabs.com/papers/howMuchFasterIsFastEnoughCHI15.pdf&quot;&gt;it causes users to execute simple tasks less accurately&lt;/a&gt;. If you want a visual demonstration of what latency looks like and you don’t have a super-fast old computer lying around, &lt;a href=&quot;https://www.youtube.com/watch?v=vOvQCPLkPt4&quot;&gt;check out this MSR demo on touchscreen la&lt;br/&gt;tency&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/39187441/334816&quot;&gt;Throughput&lt;/a&gt; also matters, but this is widely understood and measured. If you go to pretty much any mainstream review or benchmarking site, you can find a wide variety of throughput measurements, so there’s less value in writing up additional throughput measurements.&lt;/p&gt;
&lt;h3 id=&quot;appendix-apple-2-keyboard&quot;&gt;Appendix: apple 2 keyboard&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;apple 2e&lt;/code&gt;, instead of using a programmed microcontroller to read the keyboard, uses a much simpler custom chip designed for reading keyboard input, the AY 3600. If we look at &lt;a href=&quot;https://danluu.com/AY3600.pdf&quot;&gt;the AY 3600 datasheet&lt;/a&gt;,we can see that the scan time is &lt;code&gt;(90 * 1/f)&lt;/code&gt; and the debounce time is listed as &lt;code&gt;strobe_delay&lt;/code&gt;. These quantities are determined by some capacitors and a resistor, which appear to be &lt;code&gt;47pf&lt;/code&gt;, &lt;code&gt;100k ohms&lt;/code&gt;, and &lt;code&gt;0.022uf&lt;/code&gt; for the Apple 2e. Plugging these numbers into &lt;a href=&quot;https://danluu.com/AY3600.pdf&quot;&gt;the AY3600 datasheet&lt;/a&gt;, we can see that &lt;code&gt;f = 50 kHz&lt;/code&gt;, giving us a &lt;code&gt;1.8 ms&lt;/code&gt; scan delay and a &lt;code&gt;6.8 ms&lt;/code&gt; debounce delay (assuming the values are accurate – &lt;a href=&quot;http://www.kemet.com/Lists/TechnicalArticles/Attachments/191/Why%2047%20uF%20capacitor%20drops%20to%2037%20uF-%2030%20uF-%20or%20lower.pdf&quot;&gt;capacitors can degrade over time&lt;/a&gt;, so we should expect the real delays to be shorter on our old Apple 2e), giving us less than &lt;code&gt;8.6 ms&lt;/code&gt; for the internal keyboard logic.&lt;/p&gt;
&lt;p&gt;Comparing to a keyboard with a &lt;code&gt;167 Hz&lt;/code&gt; scan rate that &lt;a href=&quot;https://www.arduino.cc/en/Tutorial/Debounce&quot;&gt;scans two extra times to debounce&lt;/a&gt;, the equivalent figure is &lt;code&gt;3 * 6 ms = 18 ms&lt;/code&gt;. With a &lt;code&gt;100Hz&lt;/code&gt; scan rate, that becomes &lt;code&gt;3 * 10 ms = 30 ms&lt;/code&gt;. &lt;code&gt;18 ms&lt;/code&gt; to &lt;code&gt;30 ms&lt;/code&gt; of keyboard scan plus debounce latency is in line with &lt;a href=&quot;https://danluu.com/keyboard-latency/&quot;&gt;what we saw when we did some preliminary keyboard latency measurements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For reference, the ergodox uses a &lt;code&gt;16 MHz&lt;/code&gt; microcontroller with ~80k transistors and the &lt;code&gt;apple 2e&lt;/code&gt; CPU is a &lt;code&gt;1 MHz&lt;/code&gt; chip with 3.5k transistors.&lt;/p&gt;
&lt;h3 id=&quot;appendix-experimental-setup&quot;&gt;Appendix: experimental setup&lt;/h3&gt;
&lt;p&gt;Most measurements were taken with a 240fps camera (&lt;code&gt;4.167 ms&lt;/code&gt; resolution). Devices with response times below &lt;code&gt;40 ms&lt;/code&gt; were re-measured with a 1000fps camera (&lt;code&gt;1 ms&lt;/code&gt; resolution). Results in the tables are the results of multiple runs and are rounded to the nearest &lt;code&gt;10 ms&lt;/code&gt; to avoid the impression of false precision. For desktop results, results are measured from when the key started moving until the screen finished updating. Note that this is different from most key-to-screen-update measurements you can find online, which typically use a setup that effectively removes much or all of the keyboard latency, which, as an end-to-end measurement, is only realistic if you have a psychic link to your computer (this isn’t to say the measurements aren’t useful – if, as a programmer, you want a reproducible benchmark, it’s nice to reduce measurement noise from sources that are beyond your control, but that’s not relevant to end users). People often advocate measuring from one of: {the key bottoming out, the switch firing}. Other than for measurement convenience, there appears to be no reason to do any of these, but people often claim that’s when the user expects the keyboard to “really” work. But these are independent of when the switch actually fires. Both the distance between the key bottoming out and activiation as well as the distance between feeling feedback and activation are arbitrary and can be tuned. When people claim that users believe that’s when the keyboard is “really” firing, this is a generally a claim that the user has an incorrect belief about how their keyboard works. While that’s possible, I see no reason to encode one particular incorrect belief about how keyboards work into the measurements when people vehemently advocate for different incorrect beliefs. See &lt;a href=&quot;https://danluu.com/keyboard-latency/&quot;&gt;this post on keyboard latency measurements for more info on keyboard fallacies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another significant difference is that measurements were done with settings as close to the default OS settings as possible since approximately 0% of users will futz around with display settings to reduce buffering, disable the compositor, etc. Waiting until the screen has finished updating is also different from most end-to-end measurements do – most consider the update “done” when any movement has been detected on the screen. Waiting until the screen is finished changing is analogous to webpagetest’s “visually complete” time.&lt;/p&gt;
&lt;p&gt;Computer results were taken using the “default” terminal for the system (e.g., powershell on windows, lxterminal on lubuntu), &lt;a href=&quot;https://danluu.com/term-latency/&quot;&gt;which could easily cause &lt;code&gt;20 ms&lt;/code&gt; to &lt;code&gt;30 ms&lt;/code&gt; difference between a fast terminal and a slow terminal&lt;/a&gt;. Between measuring time in a terminal and measuring the full end-to-end time, measurements in this article should be slower than measurements in other, similar, articles (which tend to measure time to first change in games).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;powerspec g405&lt;/code&gt; baseline result is using integrated graphics (the machine doesn’t come with a graphics card) and the &lt;code&gt;60 Hz&lt;/code&gt; result is with a cheap video card.&lt;/p&gt;
&lt;p&gt;Mobile results were done by using the default browser, browsing to &lt;a href=&quot;https://danluu.com&quot;&gt;https://danluu.com&lt;/a&gt;, and measuring the latency from finger movement until the screen first updates to indicate that scrolling has occurred. In the cases where this didn’t make sense, (kindles, gameboy color, etc.), some action that makes sense for the platform was taken (changing pages on the kindle, pressing the joypad on the gameboy color in a game, etc.). Unlike with the desktop/laptop measurements, this end-time for the measurement was on the first visual change to avoid including many frames of scrolling. To make the measurement easy, the measurement was taken with a finger on the touchscreen and the timer was started when the finger started moving (to avoid having to determine when the finger first contacted the screen).&lt;/p&gt;
&lt;p&gt;In the case of “ties”, results are ordered by the unrounded latency as a tiebreaker, but this shouldn’t be considered significant. Differences of &lt;code&gt;10 ms&lt;/code&gt; should probably also not be considered significant.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;custom haswell-e&lt;/code&gt; was tested with &lt;code&gt;gsync&lt;/code&gt; on and there was no observable difference. The year for that box is somewhat arbitrary, since the CPU is from &lt;code&gt;2014&lt;/code&gt;, but the display is newer (I believe you couldn’t get a &lt;code&gt;165 Hz&lt;/code&gt; display until &lt;code&gt;2015&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The number of transistors for some modern machines is a rough estimate because exact numbers aren’t public. Feel free to ping me if you have a better estimate!&lt;/p&gt;
&lt;p&gt;The color scales for latency and year are linear and the color scales for clock speed and number of transistors are log scale.&lt;/p&gt;
&lt;p&gt;All Linux results were done with a &lt;a href=&quot;https://lwn.net/SubscriberLink/741878/eb6c9d3913d7cb2b/&quot;&gt;pre-KPTI&lt;/a&gt; kernel. It’s possible that KPTI will impact user perceivable latency.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is a work in progress. I expect to get benchmarks from a lot more old computers the next time I visit Seattle. If you know of old computers I can test in the NYC area (that have their original displays or something like them), let me know! If you have a device you’d like to donate for testing, feel free to mail it to&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dan Luu&lt;br/&gt;Recurse Center&lt;br/&gt;455 Broadway, 2nd Floor&lt;br/&gt;New York, NY 10013&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to &lt;a href=&quot;https://www.recurse.com/scout/click?t=b504af89e87b77920c9b60b2a1f6d5e8&quot;&gt;RC&lt;/a&gt;, David Albert, Bert Muthalaly, Christian Ternus, Kate Murphy, Ikhwan Lee, Peter Bhat Harkins, Leah Hanson, Alicia Thilani Singham Goodwin, Amy Huang, Dan Bentley, Jacquin Mininger, Rob, Raph Levien, Max McCrea, Peter Town, Jon Cinque, Anonymous, and Jonathan Dahan for donating devices to test and thanks to Leah Hanson, Andy Matuschak, Milosz Danczak, @amos, @emitter_coupled, Josh Jordan, and David Albert for comments/corrections/discussion.&lt;/em&gt;&lt;/p&gt;

&lt;footer&gt;
&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Sun, 24 Dec 2017 21:35:53 +0000</pubDate>
<dc:creator>kens</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://danluu.com/input-lag/</dc:identifier>
</item>
<item>
<title>LisaOS to be open-sourced and donated to Computer History Museum</title>
<link>https://twitter.com/6502lane/status/944965691710496769</link>
<guid isPermaLink="true" >https://twitter.com/6502lane/status/944965691710496769</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/6502lane/status/944965691710496769&quot;&gt;https://twitter.com/6502lane/status/944965691710496769&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16001275&quot;&gt;https://news.ycombinator.com/item?id=16001275&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 250&lt;/p&gt;&lt;p&gt;# Comments: 84&lt;/p&gt;</description>
<pubDate>Sun, 24 Dec 2017 20:57:45 +0000</pubDate>
<dc:creator>mpweiher</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/6502lane/status/944965691710496769</dc:identifier>
</item>
</channel>
</rss>