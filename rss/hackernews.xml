<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Feynman’s Breakthrough: Disregard</title>
<link>https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/</link>
<guid isPermaLink="true" >https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png&quot;&gt;&lt;img data-attachment-id=&quot;17254&quot; data-permalink=&quot;https://stepsandleaps.wordpress.com/2013/05/16/feynman-day-at-the-bloomsbury/feynman-wangerooge-1987/&quot; data-orig-file=&quot;https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=450&amp;amp;h=240&quot; data-orig-size=&quot;1327,707&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;}&quot; data-image-title=&quot;Feynman Wangerooge 1987&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=450&amp;amp;h=240?w=300&quot; data-large-file=&quot;https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=450&amp;amp;h=240?w=450&quot; class=&quot;aligncenter size-full wp-image-17254&quot; src=&quot;https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=450&amp;amp;h=240&quot; alt=&quot;&quot; width=&quot;450&quot; height=&quot;240&quot; srcset=&quot;https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=450&amp;amp;h=240 450w, https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=900&amp;amp;h=480 900w, https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=150&amp;amp;h=80 150w, https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=300&amp;amp;h=160 300w, https://stepsandleaps.files.wordpress.com/2013/05/feynman-wangerooge-1987.png?w=768&amp;amp;h=409 768w&quot; sizes=&quot;(max-width: 450px) 100vw, 450px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feynman (just off centre) at Wangerooge in 1987&lt;/p&gt;
&lt;p&gt;I started my career as a theoretical physicist, and in the late-80s I co-organised a specialist &lt;a href=&quot;https://www.amazon.co.uk/Variational-Calculations-Quantum-Field-Theory/dp/9971505002/ref=sr_1_3?ie=UTF8&amp;amp;s=books&amp;amp;qid=1256651561&amp;amp;sr=8-3&quot;&gt;workshop&lt;/a&gt; on a small island, Wangerooge, off the coast of Germany (see above). I tried my luck and invited Richard Feynman (I had heard he was working in this specific area) and to my surprise and delight he accepted. You can read more about him and his outstanding achievements via &lt;a href=&quot;https://www.wikiwand.com/en/Richard_Feynman&quot;&gt;WikiWand&lt;/a&gt;. There are also a number of posts on this blog that centre on him.&lt;/p&gt;
&lt;p&gt;Even though he was an incredibly talented and imaginative physicist, with an outstanding popular touch, it’s interesting to note that even he had occasional bouts of self-doubt.&lt;/p&gt;
&lt;p&gt;David and Judith Goldstein write (from &lt;a href=&quot;http://calteches.library.caltech.edu/563/2/Goodstein.pdf&quot;&gt;here&lt;/a&gt;, extracted):&lt;/p&gt;
&lt;p&gt;“In the immediate aftermath of his Nobel Prize in 1965, Feynman suffered a brief period of dejection, during which he doubted his ability to continue to make useful, original contributions at the forefront of theoretical physics. It was during this time that I joined the Caltech faculty. […]&lt;/p&gt;
&lt;p&gt;At Chicago, Feynman and I shared a suite in the Quadrangle Club, the university’s faculty club. On the evening after his talk, we had dinner at the home of friends, Val and Lia Telegdi. The next morning, I wandered down to the faculty club dining room for breakfast a bit late. Feynman was already there, eating with someone I didn’t know. I joined them, introductions were mumbled but not heard, and I sleepily drank my morning coffee.&lt;/p&gt;
&lt;p&gt;As I listened to the conversation, it dawned on me that this person was James Watson, discoverer with Francis Crick of the double-helical structure of DNA. He had with him a typed manuscript entitled Honest Jim (the title would later be changed by the publisher to &lt;a href=&quot;https://www.wikiwand.com/en/The_Double_Helix&quot;&gt;The Double Helix&lt;/a&gt;), which he wanted Feynman to read, in the hope that Feynman might contribute something to the dust jacket. Feynman agreed to look at the manuscript.&lt;/p&gt;
&lt;p&gt;That evening there was a cocktail party and dinner in Feynman’s honor at the Quadrangle Club. At the cocktail party the worried host asked me why Feynman wasn’t there. I went up to the suite and found him immersed in Watson’s manuscript. I insisted that since he was the honoree, he had to come down to the party.&lt;/p&gt;
&lt;p&gt;Reluctantly, he did, but he fled after dinner at the earliest moment permitted by civility. When the party broke up, I went back up to the suite. Feynman was waiting for me in the living room. “You’ve gotta read this book,” he said. “Sure,” I said, “I’ll look forward to it.” “No,” he shot back, “I mean right now.”&lt;/p&gt;
&lt;p&gt;And so, sitting in the living room of our suite, from one to five in the morning, with Feynman waiting impatiently for me to finish, I read the manuscript that would become The Double Helix.&lt;/p&gt;
&lt;p&gt;At a certain point, I looked up and said, “Dick, this guy must be either very smart or very lucky. He constantly claims he knew less about what was going on than anyone else in the field, but he still made the crucial discovery.” Feynman virtually dove across the room to show me the notepad on which he’d been anxiously doodling while I read. There he had written one word, which he had proceeded to illuminate with drawings, as if he were working on some elaborate medieval manuscript.&lt;/p&gt;
&lt;p&gt;The word was “Disregard! ”&lt;/p&gt;
&lt;p&gt;“That’s what I’d forgotten!” he shouted (in the middle of the night). “You have to worry about your own work and ignore what everyone else is doing.” At first light, he called his wife, Gweneth, and said, “I think I’ve figured it out. Now I’ll be able to work again!” […]&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg&quot;&gt;&lt;img data-attachment-id=&quot;13506&quot; data-permalink=&quot;https://stepsandleaps.wordpress.com/2012/07/31/feynman-in-pictures/wangerooge_02_b/&quot; data-orig-file=&quot;https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=450&amp;amp;h=231&quot; data-orig-size=&quot;2682,1376&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;}&quot; data-image-title=&quot;wangerooge_02_b&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=450&amp;amp;h=231?w=300&quot; data-large-file=&quot;https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=450&amp;amp;h=231?w=450&quot; class=&quot;aligncenter size-full wp-image-13506&quot; src=&quot;https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=450&amp;amp;h=231&quot; alt=&quot;&quot; width=&quot;450&quot; height=&quot;231&quot; srcset=&quot;https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=450&amp;amp;h=231 450w, https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=900&amp;amp;h=462 900w, https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=150&amp;amp;h=77 150w, https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=300&amp;amp;h=154 300w, https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg?w=768&amp;amp;h=394 768w&quot; sizes=&quot;(max-width: 450px) 100vw, 450px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;wpcnt&quot;&gt;
&lt;div class=&quot;wpa wpmrec wpmrec2x&quot;&gt;&lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;



&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-4487205-21869-59e77a823db18&quot; data-src=&quot;//widgets.wp.com/likes/#blog_id=4487205&amp;amp;post_id=21869&amp;amp;origin=stepsandleaps.wordpress.com&amp;amp;obj_id=4487205-21869-59e77a823db18&quot; data-name=&quot;like-post-frame-4487205-21869-59e77a823db18&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3 class=&quot;jp-relatedposts-headline&quot;&gt;&lt;em&gt;Related&lt;/em&gt;&lt;/h3&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;postmetadata alt&quot;&gt;&lt;small&gt;This entry was posted on Tuesday, October 17th, 2017 at 12:20 pm and is filed under &lt;a href=&quot;https://stepsandleaps.wordpress.com/category/research-innovation/&quot; rel=&quot;category tag&quot;&gt;Research &amp;amp; Innovation&lt;/a&gt;. You can follow any responses to this entry through the &lt;a href=&quot;https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/feed/&quot;&gt;RSS 2.0&lt;/a&gt; feed. You can &lt;a href=&quot;https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/#respond&quot;&gt;leave a response&lt;/a&gt;, or &lt;a href=&quot;https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/trackback/&quot; rel=&quot;trackback&quot;&gt;trackback&lt;/a&gt; from your own site.&lt;/small&gt;&lt;/p&gt;
&lt;nav id=&quot;nav-below&quot;&gt;&lt;h3 class=&quot;assistive-text&quot;&gt;Post navigation&lt;/h3&gt;
&lt;span class=&quot;nav-previous&quot;&gt;&lt;a href=&quot;https://stepsandleaps.wordpress.com/2017/09/25/the-football-pitch/&quot; rel=&quot;prev&quot;&gt;« Previous Post&lt;/a&gt;&lt;/span&gt;&lt;/nav&gt;</description>
<pubDate>Wed, 18 Oct 2017 07:11:18 +0000</pubDate>
<dc:creator>knight17</dc:creator>
<og:type>article</og:type>
<og:title>Feynman’s Breakthrough, Disregard Others!</og:title>
<og:url>https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/</og:url>
<og:description>Feynman (just off centre) at Wangerooge in 1987 I started my career as a theoretical physicist, and in the late-80s I co-organised a specialist workshop on a small island, Wangerooge, off the coast…</og:description>
<og:image>https://stepsandleaps.files.wordpress.com/2012/07/wangerooge_02_b.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stepsandleaps.wordpress.com/2017/10/17/feynmans-breakthrough-disregard-others/</dc:identifier>
</item>
<item>
<title>Why we switched from Python to Go</title>
<link>https://getstream.io/blog/switched-python-go/</link>
<guid isPermaLink="true" >https://getstream.io/blog/switched-python-go/</guid>
<description>&lt;p&gt;Switching to a new language is always a big step, especially when only one of your team members has prior experience with that language. Early this year, we switched &lt;a href=&quot;https://getstream.io/&quot;&gt;Stream’s&lt;/a&gt; primary programming language from Python to Go. This post will explain some of the reasons why we decided to leave Python behind and make the switch to Go.&lt;/p&gt;
&lt;h2&gt;Reasons to Use Go&lt;/h2&gt;
&lt;h4&gt;Reason 1 – Performance&lt;/h4&gt;
&lt;img class=&quot;wp-image-2621 size-full&quot; src=&quot;https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image1.png&quot; alt=&quot;Go is fast!&quot; width=&quot;633&quot; height=&quot;349&quot; srcset=&quot;https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image1.png?w=633 633w, https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image1.png?w=300 300w, https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image1.png?w=620 620w&quot; sizes=&quot;(max-width: 639px) 98vw, (max-width: 1199px) 64vw, 633px&quot;/&gt;Go is fast!
&lt;p&gt;Go is extremely fast. The performance is similar to that of Java or C++. For our use case, Go is typically 30 times faster than Python. Here’s a small benchmark game comparing &lt;a href=&quot;https://benchmarksgame.alioth.debian.org/u64q/go.html&quot;&gt;Go vs Java&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Reason 2 – Language Performance Matters&lt;/h4&gt;
&lt;p&gt;For many applications, the programming language is simply the glue between the app and the database. The performance of the language itself usually doesn’t matter much.&lt;/p&gt;
&lt;p&gt;Stream, however, is an API provider powering the feed infrastructure for 500 companies and more than 200 million end users. We’ve been optimizing Cassandra, PostgreSQL, Redis, etc. for years, but eventually, you reach the limits of the language you’re using.&lt;/p&gt;
&lt;p&gt;Python is a great language but its performance is pretty sluggish for use cases such as serialization/deserialization, ranking and aggregation. We frequently ran into performance issues where Cassandra would take 1ms to retrieve the data and Python would spend the next 10ms turning it into objects.&lt;/p&gt;
&lt;h4&gt;Reason 3 – Developer Productivity &amp;amp; Not Getting Too Creative&lt;/h4&gt;
&lt;p&gt;Have a look at this little snippet of Go code from the &lt;a href=&quot;http://howistart.org/posts/go/1/&quot;&gt;How I Start Go tutorial&lt;/a&gt;. (This is a great tutorial and a good starting point to pick up a bit of Go.)&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

type openWeatherMap struct{}

func (w openWeatherMap) temperature(city string) (float64, error) {
        resp, err := http.Get(&quot;http://api.openweathermap.org/data/2.5/weather?APPID=YOUR_API_KEY&amp;amp;q=&quot; + city)
        if err != nil {
                return 0, err
        }

        defer resp.Body.Close()

        var d struct {
                Main struct {
                        Kelvin float64 `json:&quot;temp&quot;`
                } `json:&quot;main&quot;`
        }

        if err := json.NewDecoder(resp.Body).Decode(&amp;amp;d); err != nil {
                return 0, err
        }

        log.Printf(&quot;openWeatherMap: %s: %.2f&quot;, city, d.Main.Kelvin)
        return d.Main.Kelvin, nil
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you’re new to Go, there’s not much that will surprise you when reading that little code snippet. It showcases multiple assignments, data structures, pointers, formatting and a built-in HTTP library.&lt;/p&gt;
&lt;p&gt;When I first started programming I always loved using Python’s more advanced features. Python allows you to get pretty creative with the code you’re writing. For instance, you can:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use MetaClasses to self-register classes upon code initialization&lt;/li&gt;
&lt;li&gt;Swap out True and False&lt;/li&gt;
&lt;li&gt;Add functions to the list of built-in functions&lt;/li&gt;
&lt;li&gt;Overload operators via magic methods&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These features are fun to play around with but, as most programmers will agree, they often make the code harder to understand when reading someone else’s work.&lt;/p&gt;
&lt;p&gt;Go forces you to stick to the basics. This makes it very easy to read anyone’s code and immediately understand what’s going on.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: How “easy” it is really depends on your use case, of course. If you want to create a basic CRUD API I’d still recommend Django +&lt;/em&gt; &lt;a href=&quot;http://www.django-rest-framework.org/&quot;&gt;&lt;em&gt;DRF&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, or Rails.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;Reason 4 – Concurrency &amp;amp; Channels&lt;/h4&gt;
&lt;p&gt;As a language, Go tries to keep things simple. It doesn’t introduce many new concepts. The focus is on creating a simple language that is incredibly fast and easy to work with. The only area where it does get innovative is goroutines and channels. (To be 100% correct the concept of &lt;a href=&quot;https://en.wikipedia.org/wiki/Communicating_sequential_processes&quot;&gt;CSP&lt;/a&gt; started in 1977, so this innovation is more of a new approach to an old idea.) Goroutines are Go’s lightweight approach to threading, and channels are the preferred way to communicate between goroutines.&lt;/p&gt;
&lt;p&gt;Goroutines are very cheap to create and only take a few KBs of additional memory. Because Goroutines are so light, it is possible to have hundreds or even thousands of them running at the same time.&lt;/p&gt;
&lt;p&gt;You can communicate between goroutines using channels. The Go runtime handles all the complexity. The goroutines and channel-based approach to concurrency makes it very easy to use all available CPU cores and handle concurrent IO – all without complicating development. Compared to Python/Java, running a function on a goroutine requires minimal boilerplate code. You simply prepend the function call with the keyword “go”:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;time&quot;
)

func say(s string) {
        for i := 0; i &amp;lt; 5; i++ {
                time.Sleep(100 * time.Millisecond)
                fmt.Println(s)
        }

}

func main() {
        go say(&quot;world&quot;)
        say(&quot;hello&quot;)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://tour.golang.org/concurrency/1&quot;&gt;https://tour.golang.org/concurrency/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go’s approach to concurrency is very easy to work with. It’s an interesting approach compared to Node where the developer has to pay close attention to how asynchronous code is handled.&lt;/p&gt;
&lt;p&gt;Another great aspect of concurrency in Go is the &lt;a href=&quot;https://blog.golang.org/race-detector&quot;&gt;race detector&lt;/a&gt;. This makes it easy to figure out if there are any race conditions within your asynchronous code.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Knock knock&lt;br/&gt;Race condition&lt;br/&gt;Who’s there?&lt;/p&gt;
&lt;p&gt;— I Am Devloper (@iamdevloper) &lt;a href=&quot;https://twitter.com/iamdevloper/status/399991896862638081?ref_src=twsrc%5Etfw&quot;&gt;November 11, 2013&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are a few good resources to get started with Go and channels:&lt;/p&gt;
&lt;h4&gt;Reason 5 – Fast Compile Time&lt;/h4&gt;
&lt;p&gt;Our largest micro service written in Go currently takes 6 seconds to compile. Go’s fast compile times are a major productivity win compared to languages like Java and C++ which are famous for sluggish compilation speed. I like sword fighting, but it’s even nicer to get things done while I still remember what the code is supposed to do:&lt;/p&gt;
&lt;a href=&quot;https://xkcd.com/303/&quot;&gt;&lt;img class=&quot;size-full wp-image-2623&quot; src=&quot;https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image3.png&quot; alt=&quot;XKCD - Code compiling before Go&quot; width=&quot;413&quot; height=&quot;360&quot; srcset=&quot;https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image3.png?w=413 413w, https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image3.png?w=300 300w&quot; sizes=&quot;(max-width: 639px) 98vw, (max-width: 1199px) 64vw, 413px&quot;/&gt;&lt;/a&gt;XKCD – Code compiling before Go
&lt;h4&gt;Reason 6 – The Ability to Build a Team&lt;/h4&gt;
&lt;p&gt;First of all, let’s start with the obvious: there are not as many Go developers compared to older languages like C++ and Java. According to &lt;a href=&quot;https://insights.stackoverflow.com/survey/2017&quot;&gt;StackOverflow&lt;/a&gt;, &lt;strong&gt;38%&lt;/strong&gt; of developers know Java, &lt;strong&gt;19.3%&lt;/strong&gt; know C++ and only &lt;strong&gt;4.6%&lt;/strong&gt; know Go. &lt;a href=&quot;https://madnight.github.io/githut/&quot;&gt;GitHub data&lt;/a&gt; shows a &lt;a href=&quot;http://githut.info/&quot;&gt;similar trend&lt;/a&gt;: Go is more widely used than languages such as Erlang, Scala and Elixir, but less popular than Java and C++.&lt;/p&gt;
&lt;p&gt;Fortunately, Go is a very simple and easy to learn language. It provides the basic features you need and nothing else. The new concepts it introduces are the “&lt;a href=&quot;https://blog.golang.org/defer-panic-and-recover&quot;&gt;defer&lt;/a&gt;” statement and built-in management of concurrency with “go routines” and channels. (For the purists: Go isn’t the first language to implement these concepts, just the first to make them popular.) Any Python, Elixir, C++, Scala or Java dev that joins a team can be effective at Go within a month because of its simplicity.&lt;/p&gt;
&lt;p&gt;We’ve found it easier to build a team of Go developers compared to many other languages. If you’re hiring people in competitive ecosystems like &lt;a href=&quot;http://angel.co/stream/jobs&quot;&gt;Boulder and Amsterdam&lt;/a&gt; this is an important benefit.&lt;/p&gt;
&lt;h4&gt;Reason 7 – Strong Ecosystem&lt;/h4&gt;
&lt;p&gt;For a team of our size (~20 people) the ecosystem matters. You simply can’t create value for your customers if you have to reinvent every little piece of functionality. Go has great support for the tools we use. Solid libraries were already available for Redis, RabbitMQ, PostgreSQL, Template parsing, Task scheduling, Expression parsing and RocksDB.&lt;/p&gt;
&lt;p&gt;Go’s ecosystem is a major win compared to other newer languages like Rust or Elixir. It’s of course not as good as languages like Java, Python or Node, but it’s solid and for many basic needs you’ll find high-quality packages already available.&lt;/p&gt;
&lt;h4&gt;Reason 8 – Gofmt, Enforced Code Formatting&lt;/h4&gt;
&lt;p&gt;Let’s start with what is Gofmt? And no, it’s not a swear word. Gofmt is an awesome command line utility, built into the Go compiler for formatting your code. In terms of functionality it’s very similar to Python’s autopep8. While the show Silicon Valley portrays otherwise, most of us don’t really like to argue about tabs vs spaces. It’s important that formatting is consistent, but the actual formatting standard doesn’t really matter all that much. Gofmt avoids all of this discussion by having one official way to format your code.&lt;/p&gt;
&lt;h4&gt;Reason 9 – gRPC and Protocol Buffers&lt;/h4&gt;
&lt;p&gt;Go has first-class support for protocol buffers and gRPC. These two tools work very well together for building microservices which need to communicate via RPC. You only need to write a manifest where you define the RPC calls that can be made and what arguments they take. Both server and client code are then automatically generated from this manifest. This resulting code is both fast, has a very small network footprint and is easy to use.&lt;/p&gt;
&lt;p&gt;From the same manifest, you can generate client code for many different languages even, such as C++, Java, Python and Ruby. So, no more ambiguous REST endpoints for internal traffic, that you have to write almost the same client and server code for every time. .&lt;/p&gt;
&lt;h2&gt;Disadvantages of Using Golang&lt;/h2&gt;
&lt;h4&gt;Disadvantage 1 – Lack of Frameworks&lt;/h4&gt;
&lt;p&gt;Go doesn’t have a single dominant framework like Rails for Ruby, Django for Python or Laravel for PHP. This is a topic of heated debate within the Go community, as many people advocate that you shouldn’t use a framework to begin with. I totally agree that this is true for some use cases. However, if someone wants to build a simple CRUD API they will have a much easier time with Django/DJRF, Rails Laravel or &lt;a href=&quot;http://phoenixframework.org/&quot;&gt;Phoenix&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Disadvantage 2 – Error Handling&lt;/h4&gt;
&lt;p&gt;Go handles errors by simply returning an error from a function and expecting your calling code to handle the error (or to return it up the calling stack). While this approach works, it’s easy to lose scope of what went wrong to ensure you can provide a meaningful error to your users. The &lt;a href=&quot;https://github.com/pkg/errors&quot;&gt;errors package&lt;/a&gt; solves this problem by allowing you to add context and a stack trace to your errors.&lt;/p&gt;
&lt;p&gt;Another issue is that it’s easy to forget to handle an error by accident. Static analysis tools like errcheck and megacheck are handy to avoid making these mistakes.&lt;/p&gt;
&lt;p&gt;While these workarounds work well it doesn’t feel quite right. You’d expect proper error handling to be supported by the language.&lt;/p&gt;
&lt;h4&gt;Disadvantage 3 – Package Management&lt;/h4&gt;
&lt;p&gt;Go’s package management is by no means perfect. By default, it doesn’t have a way to specify a specific version of a dependency and there’s no way to create reproducible builds. Python, Node and Ruby all have better systems for package management. However, with the right tools, Go’s package management works quite well.&lt;/p&gt;
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/golang/dep&quot;&gt;Dep&lt;/a&gt; to manage your dependencies to allow specifying and pinning versions. Apart from that, we’ve contributed an open-source tool called &lt;a href=&quot;https://github.com/getstream/vg&quot;&gt;VirtualGo&lt;/a&gt; which makes it easier to work on multiple projects written in Go.&lt;/p&gt;
&lt;a href=&quot;https://github.com/getstream/vg&quot;&gt;&lt;img class=&quot;wp-image-2624 size-medium&quot; src=&quot;https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image4.png?w=300&amp;amp;h=300&quot; alt=&quot;Virtual Go&quot; width=&quot;300&quot; height=&quot;300&quot;/&gt;&lt;/a&gt;Virtual Go

&lt;h2&gt;Python vs Go&lt;/h2&gt;
&lt;p&gt;One interesting experiment we conducted was taking our &lt;a href=&quot;https://getstream.io/docs/#custom_ranking&quot;&gt;ranked feed&lt;/a&gt; functionality in Python and rewriting it in Go. Have a look at this example of a ranking method:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;
{
        &quot;functions&quot;: {
                &quot;simple_gauss&quot;: {
                        &quot;base&quot;: &quot;decay_gauss&quot;,
                        &quot;scale&quot;: &quot;5d&quot;,
                        &quot;offset&quot;: &quot;1d&quot;,
                        &quot;decay&quot;: &quot;0.3&quot;
                },
                &quot;popularity_gauss&quot;: {
                        &quot;base&quot;: &quot;decay_gauss&quot;,
                        &quot;scale&quot;: &quot;100&quot;,
                        &quot;offset&quot;: &quot;5&quot;,
                        &quot;decay&quot;: &quot;0.5&quot;
                }
        },
        &quot;defaults&quot;: {
                &quot;popularity&quot;: 1
        },
        &quot;score&quot;: &quot;simple_gauss(time)*popularity&quot;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Both the Python and Go code need to do the following to support this ranking method:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Parse the expression for the score. In this case, we want to turn this string “simple_gauss(time)*popularity” into a function that takes an activity as input and returns a score as output.&lt;/li&gt;
&lt;li&gt;Create partial functions based on the JSON config. For example, we want “simple_gauss” to call “decay_gauss” with a scale of 5 days, offset of 1 day and a decay factor of 0.3.&lt;/li&gt;
&lt;li&gt;Parse the “defaults” configuration so you have a fallback if a certain field is not defined on an activity.&lt;/li&gt;
&lt;li&gt;Use the function from step 1 to score all activities in the feed.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Developing the Python version of the ranking code took roughly 3 days. That includes writing the code, unit tests and documentation. Next, we’ve spent approximately 2 weeks optimizing the code. One of the optimizations was translating the score expression (simple_gauss(time)*popularity) into an &lt;a href=&quot;https://docs.python.org/3/library/ast.html&quot;&gt;abstract syntax tree&lt;/a&gt;. We also implemented caching logic which pre-computed the score for certain times in the future.&lt;/p&gt;
&lt;p&gt;In contrast, developing the Go version of this code took roughly 4 days. The performance didn’t require any further optimization. So while the initial bit of development was faster in Python, the Go based version ultimately required substantially less work from our team. As an added benefit, the Go code performed roughly 40 times faster than our highly-optimized Python code.&lt;/p&gt;
&lt;p&gt;Now, this is just a single example of the performance gains we’ve experienced by switching to Go. It is, of course, comparing apples to oranges:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The ranking code was my first project in Go&lt;/li&gt;
&lt;li&gt;The Go code was built after the Python code, so the use case was better understood&lt;/li&gt;
&lt;li&gt;The Go library for expression parsing was of exceptional quality&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Your mileage will vary. Some other components of our system took substantially more time to build in Go compared to Python. As a general trend, we see that &lt;em&gt;developing&lt;/em&gt; Go code takes slightly more effort. However, we spend much less time &lt;em&gt;optimizing&lt;/em&gt; the code for performance.&lt;/p&gt;
&lt;h2&gt;Elixir vs Go – The Runner Up&lt;/h2&gt;
&lt;p&gt;Another language we evaluated is &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt;. Elixir is built on top of the Erlang virtual machine. It’s a fascinating language and we considered it since one of our team members has a ton of experience with Erlang.&lt;/p&gt;
&lt;p&gt;For our use cases, we noticed that Go’s raw performance is much better. Both Go and Elixir will do a great job serving thousands of concurrent requests. However, if you look at individual request performance, Go is substantially faster for our use case. Another reason why we chose Go over Elixir was the ecosystem. For the components we required, Go had more mature libraries whereas, in many cases, the Elixir libraries weren’t ready for production usage. It’s also harder to train/find developers to work with Elixir.&lt;/p&gt;
&lt;p&gt;These reasons tipped the balance in favor of Go. The Phoenix framework for Elixir looks awesome though and is definitely worth a look.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Go is a very performant language with great support for concurrency. It is almost as fast as languages like C++ and Java. While it does take a bit more time to build things using Go compared to Python or Ruby, you’ll save a ton of time spent on optimizing the code.&lt;/p&gt;
&lt;p&gt;We have a small development team at &lt;a href=&quot;https://getstream.io/team/&quot;&gt;Stream&lt;/a&gt; powering the feeds for over 200 million end users. Go’s combination of a &lt;strong&gt;great ecosystem&lt;/strong&gt;, &lt;strong&gt;easy onboarding&lt;/strong&gt; for new developers, &lt;strong&gt;fast performance&lt;/strong&gt;, &lt;strong&gt;solid support&lt;/strong&gt; for concurrency and a &lt;strong&gt;productive programming environment&lt;/strong&gt; make it a great choice.&lt;/p&gt;
&lt;p&gt;Stream still leverages Python for our dashboard, site and machine learning for &lt;a href=&quot;https://getstream.io/personalization&quot;&gt;personalized feeds&lt;/a&gt;. We won’t be saying goodbye to Python anytime soon, but going forward all performance-intensive code will be written in Go.&lt;/p&gt;
&lt;p&gt;If you want to learn more about Go check out the blog posts listed below. To learn more about Stream, &lt;a href=&quot;https://getstream.io/get_started/&quot;&gt;this interactive tutorial&lt;/a&gt; is a great starting point.&lt;/p&gt;
&lt;h2&gt;More Reading about Switching to Golang&lt;/h2&gt;
&lt;h2&gt;Learning Go&lt;/h2&gt;
</description>
<pubDate>Tue, 17 Oct 2017 22:37:16 +0000</pubDate>
<dc:creator>tortilla</dc:creator>
<og:type>article</og:type>
<og:title>Why we switched from Python to Go - The Stream Blog</og:title>
<og:description>Switching to a new language is always a big step, especially when only one of your team members has prior experience with that language. Early this year, we switched Stream’s primary programming language from Python to Go. This post will explain some of the reasons why we decided to leave Python behind and make the …</og:description>
<og:url>https://getstream.io/blog/switched-python-go/</og:url>
<og:image>https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://getstream.io/blog/switched-python-go/</dc:identifier>
</item>
<item>
<title>MailChimp vs. Amazon SES – How I Reduced My Monthly Bill</title>
<link>https://coursetro.com/posts/other/95/MailChimp-vs.-Amazon-SES---How-I-Reduced-My-Monthly-Bill-by-92%</link>
<guid isPermaLink="true" >https://coursetro.com/posts/other/95/MailChimp-vs.-Amazon-SES---How-I-Reduced-My-Monthly-Bill-by-92%</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://coursetro.com/posts/other/95/MailChimp-vs.-Amazon-SES---How-I-Reduced-My-Monthly-Bill-by-92%&quot;&gt;https://coursetro.com/posts/other/95/MailChimp-vs.-Amazon-SES---How-I-Reduced-My-Monthly-Bill-by-92%&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=15493127&quot;&gt;https://news.ycombinator.com/item?id=15493127&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 266&lt;/p&gt;&lt;p&gt;# Comments: 157&lt;/p&gt;</description>
<pubDate>Tue, 17 Oct 2017 18:01:07 +0000</pubDate>
<dc:creator>dreamache</dc:creator>
<og:type>article</og:type>
<og:title>Why we switched from Python to Go - The Stream Blog</og:title>
<og:description>Switching to a new language is always a big step, especially when only one of your team members has prior experience with that language. Early this year, we switched Stream’s primary programming language from Python to Go. This post will explain some of the reasons why we decided to leave Python behind and make the …</og:description>
<og:url>https://getstream.io/blog/switched-python-go/</og:url>
<og:image>https://getstream-blog.imgix.net/blog/wp-content/uploads/2017/10/image2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://getstream.io/blog/switched-python-go/</dc:identifier>
</item>
<item>
<title>Choosing between names and identifiers in URLs</title>
<link>https://cloudplatform.googleblog.com/2017/10/API-design-choosing-between-names-and-identifiers-in-URLs.html</link>
<guid isPermaLink="true" >https://cloudplatform.googleblog.com/2017/10/API-design-choosing-between-names-and-identifiers-in-URLs.html</guid>
<description>&lt;noscript&gt;
&lt;p&gt;&lt;span class=&quot;byline-author&quot;&gt;By Martin Nally, software developer and API designer&lt;/span&gt;&lt;/p&gt;&lt;p&gt;If you're involved in the design of web APIs, you know there's disagreement over the style of URL to use in your APIs, and that the style you choose has profound implications for an API’s usability and longevity. The Apigee team here at Google Cloud has given a lot of thought to API design, working both internally and with customers, and I want to share with you the URL design patterns we're using in our most recent designs, and why.&lt;/p&gt;&lt;p&gt;When you look at prominent web APIs, you'll see a number of different URL patterns.&lt;/p&gt;&lt;p&gt;Here are two API URLs that exemplify two divergent schools of thought on URL style: &lt;strong&gt;https://ebank.com/accounts/a49a9762-3790-4b4f-adbf-4577a35b1df7&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;https://library.com/shelves/american-literature/books/moby-dick&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The first is an anonymized and simplified version of a real URL from a U.S. bank where I have a checking account. The second is adapted from a pedagogic example in the &lt;a href=&quot;https://cloud.google.com/apis/design/resource_names&quot; target=&quot;_blank&quot;&gt;Google Cloud Platform API Design Guide&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The first URL is rather opaque. You can probably guess that it’s the URL of a bank account, but not much more. Unless you're unusually skilled at memorizing hexadecimal strings, you can’t easily type this URL—most people will rely on copy and paste or clicking on links to use this URL. If your hexadecimal skills are as limited as mine, you can’t tell at a glance whether two URLs like these are the same or different, or easily locate multiple occurrences of the same URL in a log file.&lt;/p&gt;&lt;p&gt;The second URL is much more transparent. It’s easy to memorize, type and compare with other URLs. It tells a little story: there's a book that has a name that's located on a shelf that also has a name. This URL can be easily translated into a natural-language sentence.&lt;/p&gt;&lt;p&gt;Which should you use? At first glance, it may seem obvious that URL #2 is preferable, but the truth is more nuanced.&lt;/p&gt;
&lt;h3&gt;The case for identifiers &lt;/h3&gt;
&lt;br/&gt;There is a long tradition—one that predates computers—of allocating numeric or alphanumeric identifiers to entities. Banks and insurance companies allocate identifiers for accounts and policies. Manufacturers, wholesalers and retailers identify products with product codes. Editions of books are identified by their ISBN numbers. Governments issue social security numbers, driver's license numbers, criminal case numbers, land parcel numbers and so on, and our first example is simply an expression of this idea in the URL format of the world wide web.&lt;p&gt;If identifiers like these have the disadvantages described above—hard to read, compare, remember and type, and devoid of useful information about the entity they identify—why do we use them?&lt;/p&gt;&lt;p&gt;The primary reason is that they remain valid and unambiguous even when things change, and stability and certainty are critically important qualities (Tim Berners-Lee wrote &lt;a href=&quot;https://www.w3.org/Provider/Style/URI&quot; target=&quot;_blank&quot;&gt;an often-quoted article&lt;/a&gt; on this topic). If we don't allocate an identifier for a bank account, how can we reliably reference it in the future? Identifying the account using information that we know about it is unreliable because that information is subject to change and may not uniquely identify the account. Details about its owner are all subject to change (e.g., name, address, marital status), or subject to ambiguity (date and place of birth), or both. Even if we have a reliable identifier for the owner, ownership of the account can change, and identifying the account by where and when it was created doesn’t guarantee uniqueness.&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;Hierarchical names &lt;/h3&gt;
&lt;br/&gt;Hierarchical naming is a very powerful technique that humans have used for centuries to organize information and make sense of the world. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Linnaean_taxonomy&quot; target=&quot;_blank&quot;&gt;taxonomy of nature&lt;/a&gt;, developed in the 1700s by Carolus Linnaeus, is one very famous example.&lt;p&gt;URLs in the style of the second example—formed from hierarchies of simple names—are based on this idea. These URLs have the inverse qualities of simple numeric or alphanumeric identifiers: they're easier for humans to use, construct and get information from, but they're not stable in the face of change.&lt;/p&gt;&lt;p&gt;If you know anything about Linnaeus’ taxonomy, you know that its elements have been renamed and the hierarchy restructured extensively over time; in fact the rate of change has increased with the adoption of modern technologies like DNA analysis. The ability to change is very important for most naming schemes and you should be suspicious of designs that assume that names will not change. In our experience, renaming and reorganizing the name hierarchy turn out to be important or desirable in most user scenarios, even if it wasn’t anticipated by the original API designers.&lt;/p&gt;&lt;p&gt;The downside of the second example URL is that if a book or shelf changes its name, references to it based on hierarchical names like this one in the example URL will break. Changing name is probably not plausible for a book that is a copy of a mass-printed work of literature, but might apply to other documents you might find an a library, and renaming a shelf seems entirely plausible. Similarly, if a book moves between shelves, which also seems plausible, then references based on this URL will also break.&lt;/p&gt;&lt;p&gt;There is a general rule here. URLs based on opaque identifiers (sometimes called permalinks) are inherently stable and reliable, but they aren’t very human-friendly. The way to make URLs human-friendly is to build them from information that's meaningful to humans—like names and hierarchies—in which case one of two unfortunate things will happen: either you have to prohibit renaming entities and reorganizing hierarchies, or be prepared to deal with the consequences when links based on these URLs break.&lt;/p&gt;&lt;p&gt;Up until this point I have talked about the effects this identity dilemma in terms of its impact on URLs exposed by APIs, but the problem also affects identities stored in databases and exchanged between implementation components. URLs exposed by an API are generally based on the identities that the API implementation stores in databases, so design decisions that affect URLs usually also affect database and API implementation design, and vice versa. If you use hierarchical names to identify entities in the implementation as well as the API, the consequences of broken references is compounded, as is the difficulty of supporting renaming and reparenting. This means that the topic is a very important one for total system design, not just API design.&lt;/p&gt;&lt;h3&gt;The best of both worlds &lt;/h3&gt;
&lt;br/&gt;Faced with these tradeoffs, which style of URL should you choose? The best response is not to choose: you need both to support a full range of function. Providing both styles of URL gives your API a stable identifier as well as the ease of use of hierarchical names.&lt;p&gt;The &lt;a href=&quot;https://cloud.google.com/&quot; target=&quot;_blank&quot;&gt;Google Cloud Platform&lt;/a&gt; (GCP) API itself supports both types of URL for entities where renaming or reparenting makes sense. For example, GCP projects have both an immutable identity embedded in stable permalink URLs, and a separate mutable name that you can use in searches. The identity of one of my GCP projects is ‘bionic-bison-166600' (which shows that identifiers don't have to be as inscrutable as RFC-compliant UUIDs—they just need to be stable and unique) and its name is currently &quot;My First Project Renamed&quot;.&lt;/p&gt;&lt;h3&gt;Identifiers are for look-up. Names are for search.&lt;/h3&gt;
&lt;br/&gt;We know from the principles of the world-wide web that every URL identifies a specific entity. It's fairly apparent that &quot;&lt;strong&gt;https://ebank.com/accounts/a49a9762-3790-4b4f-adbf-4577a35b1df7&quot;&lt;/strong&gt; is the URL of a specific bank account. Whenever I use this URL, now or in the future, it will always refer to the same bank account. You might be tempted to think that 'https://library.com/shelves/american-literature/books/moby-dick' is the URL of a specific book. If you think renaming and relocating books could never make sense in a library API, even hypothetically, then you can perhaps defend that point of view, but otherwise you have to think of this URL differently. When I use this URL today, it refers to a specific, dog-eared copy of Moby Dick that is currently on the American Literature shelf. Tomorrow, if the book or shelf is moved or renamed, it may refer to a shiny new copy that replaced the old one, or to no book at all. This shows that the second URL isn’t the URL of a specific book—it must be the URL of something else. You should think of it as the URL of a search result. Specifically, the result of this search:&lt;br/&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;
&lt;p&gt;find the book that is [currently] named &quot;moby-dick&quot;, and is [currently] on the shelf that is [currently] named &quot;american-literature&quot;&lt;/p&gt;
&lt;/blockquote&gt;
Here’s another URL for the same search result, where the difference is entirely one of URL style, not meaning:&lt;p&gt;&lt;strong&gt;https://library.com/search?kind=book&amp;amp;name=moby-dick&amp;amp;shelf=(name=american-literature) &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Understanding that URLs based on hierarchical names are actually the URLs of search results rather than the URLs of the entities in those search results is a key idea that helps explain the difference between naming and identity.&lt;/p&gt;&lt;h3&gt;Using names and identifiers together &lt;/h3&gt;
&lt;br/&gt;To use permalink and search URLs together, you start by allocating a permalink for each entity. For example, to create a new bank account, I might expect to POST a representation of the new account details to &lt;strong&gt;https://ebank.com/accounts&lt;/strong&gt;. The successful response contains a status code of 201 along with an HTTP &quot;Location&quot; header whose value is the URL of the new account: &quot;&lt;strong&gt;https://ebank.com/accounts/a49a9762-3790-4b4f-adbf-4577a35b1df7&lt;/strong&gt;&quot;.&lt;p&gt; If I were designing an API for the library, I would follow the same pattern. I might start with the creation of a shelf by POSTing the following body to &lt;strong&gt;https://library.com/locations&lt;/strong&gt;:&lt;/p&gt;&lt;pre&gt;
&lt;code&gt;{&quot;kind&quot;: &quot;Shelf&quot;,
 &quot;name&quot;: &quot;American-Literature&quot;,
}&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;This results in the allocation of the following URL for the shelf:&lt;p&gt;&lt;strong&gt;https://library.com/shelf/20211fcf-0116-4217-9816-be11a4954344&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Then, to create the entry for the book, I might post the following body to &lt;strong&gt;https://library.com/inventory&lt;/strong&gt;:&lt;/p&gt;&lt;pre&gt;
&lt;code&gt;{&quot;kind&quot;: &quot;Book&quot;,
 &quot;name&quot;: &quot;Moby-Dick&quot;,
 &quot;location&quot;: &quot;/shelf/20211fcf-0116-4217-9816-be11a4954344&quot;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;resulting in the allocation of this URL for the book: &lt;p&gt;&lt;strong&gt;https://library.com/book/745ba01d-51a1-4615-9571-ee14d15bb4af&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This stable URL will always refer to this particular copy of Moby Dick, regardless of what I call it or where in the library I put it. Even if the book is lost or destroyed, this URL will continue to identify it.&lt;/p&gt;&lt;p&gt;Based on these entities, I also expect the following search URLs to be valid:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;https://library.com/shelf/american-literatature/book/moby-dick&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;https://library.com/search?kind=book&amp;amp;name=moby-dick&amp;amp;shelf=(name=american-literature)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;You can implement both of these search URL styles in the same API if you have the time and energy; otherwise, pick the style you prefer and stick with it.&lt;/p&gt;&lt;p&gt;Whenever a client performs a GET on one of these search URLs, the identity URL (i.e., its permalink, in this case &lt;strong&gt;https://library.com/book/745ba01d-51a1-4615-9571-ee14d15bb4af&lt;/strong&gt;) of the found entity should be included in the response, either in a header (the HTTP Content-Location header exists for this purpose), in the body, or, ideally, in both. This enables clients to move freely between the permalink URLs and the search URLs for the same entities.&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;The downside of two sets of URLs &lt;/h3&gt;
&lt;br/&gt;Every design has its drawbacks. Obviously, it takes a little more effort to implement both permalink entity URLs and search URLs in the same API.&lt;p&gt;A more serious challenge is that you have to educate your users on which URL to use in which circumstance. When they store URLs in a database, or even just create bookmarks, they’ll probably want to use the identity URLs (permalinks), even though they may use search URLs for other purposes.&lt;/p&gt;&lt;p&gt;You also need to be careful about how you store your identifiers—the identifiers that should be stored persistently by the API implementation are almost always the identifiers that were used to form the permalinks. Using names to represent references or identity in a database is rarely the right thing to do—if you see names in a database used this way, you should examine that usage carefully.&lt;/p&gt;&lt;p&gt;Users who write scripts to access the API can choose between search and permalink URLs. Writing scripts with search URLs is often easier and faster, because you can construct search URLs easily from names or numbers you already know, whereas it usually takes a little more effort in a script to parse permalink URLs out of API response headers and bodies.&lt;/p&gt;&lt;p&gt;The downside of using search URLs in scripts is that they break if an API entity gets renamed or moved in the hierarchy, in the same way that scripts tend to break when files are renamed or moved. Since you are accustomed to fixing scripts when file names change, you may decide to go ahead and use the search URLs and simply fix the scripts when they break. However, if reliability and stability of scripts is very important to you, write your scripts with permalinks.&lt;/p&gt;&lt;h3&gt;Permalinks and search URLs: better together &lt;/h3&gt;
&lt;br/&gt;Unless you're very restrictive about the changes you allow to your data, you really can’t achieve stability, reliability and ease-of-use in an API with a single set of URLs. The best APIs implement both permalink URLs based on identifiers for stable identification and search URLs based on names (and perhaps other values) for ease-of-use. For more on API design, read the eBook, “&lt;a href=&quot;https://apigee.com/api-management/#/ebook/768&quot; target=&quot;_blank&quot;&gt;Web API Design: The Missing Link&lt;/a&gt;” or check out more &lt;a href=&quot;https://apigee.com/about/blog/taglist/api-design&quot; target=&quot;_blank&quot;&gt;API design posts&lt;/a&gt; on the Apigee blog. &lt;/noscript&gt;</description>
<pubDate>Tue, 17 Oct 2017 17:25:48 +0000</pubDate>
<dc:creator>bussetta</dc:creator>
<og:title>API design: Choosing between names and identifiers in URLs</og:title>
<og:url>https://cloudplatform.googleblog.com/2017/10/API-design-choosing-between-names-and-identifiers-in-URLs.html</og:url>
<og:type>article</og:type>
<og:image>https://3.bp.blogspot.com/-m90zG1Qb7vc/Vel5wAn_isI/AAAAAAAARGE/iSOuuYWUXUA/s1600-r/CloudPlatform_128px_Retina.png</og:image>
<og:description>By Martin Nally, software developer and API designer If you're involved in the design of web APIs, you know there's disagreement over the ...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cloudplatform.googleblog.com/2017/10/API-design-choosing-between-names-and-identifiers-in-URLs.html</dc:identifier>
</item>
<item>
<title>My Google job was tedious and pointless</title>
<link>https://www.washingtonpost.com/news/posteverything/wp/2017/10/17/my-google-job-was-tedious-and-pointless/?tid=hybrid_collaborative_1_na&amp;utm_term=.fc2705c5456a</link>
<guid isPermaLink="true" >https://www.washingtonpost.com/news/posteverything/wp/2017/10/17/my-google-job-was-tedious-and-pointless/?tid=hybrid_collaborative_1_na&amp;utm_term=.fc2705c5456a</guid>
<description>&lt;div class=&quot;inline-content inline-photo inline-photo-normal&quot;&gt; &lt;img class=&quot;unprocessed placeholder&quot; data-hi-res-src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https://img.washingtonpost.com/rf/image_960w/2010-2019/WashingtonPost/2017/08/16/Production/Daily/A-Section/Images/Google-Diversity_06468-12cfe.jpg&amp;amp;w=1484&quot; data-low-res-src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https://img.washingtonpost.com/rf/image_960w/2010-2019/WashingtonPost/2017/08/16/Production/Daily/A-Section/Images/Google-Diversity_06468-12cfe.jpg&amp;amp;w=480&quot; data-raw-src=&quot;https://img.washingtonpost.com/rf/image_960w/2010-2019/WashingtonPost/2017/08/16/Production/Daily/A-Section/Images/Google-Diversity_06468-12cfe.jpg&quot; src=&quot;https://img.washingtonpost.com/wp-apps/imrs.php?src=https://img.washingtonpost.com/rf/image_960w/2010-2019/WashingtonPost/2017/08/16/Production/Daily/A-Section/Images/Google-Diversity_06468-12cfe.jpg&amp;amp;w=60&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;pb-caption&quot;&gt;(Marcio Jose Sanchez/Associated Press)&lt;/span&gt;&lt;/div&gt;&lt;p&gt;The banner atop the Google Careers portal caught my eye back when I was one of 3 million hungry applicants: “&lt;a data-xslt=&quot;_http&quot; href=&quot;https://www.google.com/intl/at/about/careers/lifeatgoogle/do-cool-things-that-matter.html&quot;&gt;Do Cool Things That Matter&lt;/a&gt;.” It speaks at once of the tech industry’s casual hipness and its passionate purpose. It spoke to me.&lt;/p&gt;
&lt;p&gt;But while it probably describes some jobs at Google, it hardly captures my experience these past two years in the company’s human resources department. And so I’m handing in my resignation this week.&lt;/p&gt;
&lt;p&gt;There is nothing cool about my job as a “talent channels specialist,” a type of recruiter charged with soliciting new applications from qualified people who haven’t thought to apply or who might need persuading. I scour LinkedIn, a factory farm of fluff, for engineers with a specific skill set and then send hundreds of canned messages to unsuspecting professionals each week.&lt;/p&gt;

&lt;p&gt;Google HR uses the TextExpander program, which populates email templates with salutations, job description links and questions. All we have to do is press two keys (mine are semicolon followed by the letter “C”). There’s also space for fill-in-the-blanks: one for the candidate’s name (“Hey Mark”) and another at the end for the day of the week (“Enjoy your Thursday!”), so the message is personal.&lt;/p&gt;
&lt;p&gt;We then hold 10-minute phone calls with interested candidates, conversations comparable in depth and variation to a drive-through order at Burger King. Our mouth muscles get so accustomed to the spiel that we can think full separate thoughts — about our next career move, say — while talking. We might feign curiosity in a candidate’s ideal role, pitch them on working at Google and finally ask a few technical questions from a spreadsheet that gives us the correct answers, thankfully, because computer science is Greek to us.&lt;/p&gt;
&lt;p&gt;HR “specialists” don’t participate in second-round interviews. We merely collect times of availability from candidates and then wait for the results. If a second interview goes well, we hand off the candidate to another recruiter. If it doesn’t go well? TextExpander: semicolon followed by “NO” populates a sympathetic four-paragraph rejection email. We then return to step one: LinkedIn.&lt;/p&gt;
&lt;p&gt;That’s it. The whole job. Seriously. Repeated 40 or so times in each workday.&lt;/p&gt;
&lt;p channel=&quot;wp.com&quot; class=&quot;interstitial-link&quot;&gt;&lt;em&gt;[&lt;a href=&quot;https://www.washingtonpost.com/posteverything/wp/2014/12/30/google-got-it-wrong-the-open-office-trend-is-destroying-the-workplace/?utm_term=.142c3438bd24&quot;&gt;Google got it wrong. The open-office trend is destroying the workplace.&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As for doing things that matter? Remember: It’s about 10 times more difficult to get into Google than Harvard University. So we recruiters can close our sticker-covered laptops at the end of each day and walk down the brightly painted hallways — royal red, lime green! — confident that almost no one we contacted will get hired. The lucky few applicants will be shuffled from one high-paying tech job to another.&lt;/p&gt;
&lt;p&gt;In some ways, my experience is not so different than that of other twenty-somethings in corporate America. Yet Google’s low-level HR employees are barraged by higher-ups about Passion! and how we are Changing People’s Lives!&lt;/p&gt;
&lt;p&gt;At first, I drank the Kool-Aid. Who doesn’t like being told they’re important?&lt;/p&gt;
&lt;p&gt;Later, I began to wonder if I was crazy, eating alone in the cafeteria and wearing ear plugs so I wouldn’t have to overhear one more random Googler claim, without irony or visible self-consciousness, to have held “a mini-pow-wow on 360 wellness,” or to be “a product expert across a myriad of domains hoping to sync and gain best practices.”&lt;/p&gt;
&lt;p&gt;I can’t tell who believes themselves and who is just acting, because everyone participates. Every email has an exclamation mark, or ten. Google HR is a special type of hell ruled by the tyranny of positivity. It’s a privileged hell, for sure, but it’s hell, and its primary trait is hollowness.&lt;/p&gt;
&lt;p channel=&quot;wp.com&quot; class=&quot;interstitial-link&quot;&gt;&lt;em&gt;[&lt;a href=&quot;https://www.washingtonpost.com/news/posteverything/wp/2017/08/31/i-criticized-google-it-got-me-fired-thats-how-corporate-power-works/?utm_term=.7ef49444c697&quot;&gt;I criticized Google. It got me fired. That’s how corporate power works.&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Having excised coolness and mattering from the careers page slogan, we’re left with: “Do Things.” I envision it right above an image of two guys in T-shirts pointing to a monitor, furrowing their brows, innovating.&lt;/p&gt;
&lt;p&gt;But that first word, “Do,” isn’t quite right. It implies action-orientation. What have I actually done for the last two years as a talent channels specialist? I raise my eyebrows and can conjure nothing.&lt;/p&gt;
&lt;p&gt;My resume will have that holy header, Google, above a few bullets — though after this essay I can probably forget about references — but what words will follow the bullets? Evangelized? Shaped the world? Facilitated cross-functional optimizations? How will I answer some future interviewer who inquires: What did you do as a talent channels specialist?&lt;/p&gt;
&lt;p&gt;“Things,” I’ll say.&lt;/p&gt;
&lt;p channel=&quot;wp.com&quot; class=&quot;interstitial-link&quot;&gt;&lt;em&gt;[&lt;a href=&quot;https://www.washingtonpost.com/opinions/i-wanted-to-shame-an-accused-con-man-i-didnt-realize-how-much-power-i-had-over-him/2015/10/30/e00a7084-72a3-11e5-8248-98e0f5a2e830_story.html?utm_term=.6477c71eebcf&quot;&gt;I wanted to shame an accused con man. I didn’t realize how much power I had over him.&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 17 Oct 2017 16:37:07 +0000</pubDate>
<dc:creator>pm24601</dc:creator>
<og:type>article</og:type>
<og:url>https://www.washingtonpost.com/news/posteverything/wp/2017/10/17/my-google-job-was-tedious-and-pointless/</og:url>
<og:image>https://img.washingtonpost.com/rf/image_1484w/2010-2019/WashingtonPost/2017/08/16/Production/Daily/A-Section/Images/Google-Diversity_06468-12cfe.jpg?t=20170517</og:image>
<og:title>Perspective | Working at Google seemed like a dream job. The reality has been a tedious, pointless nightmare.</og:title>
<og:description>A day in the life of a human resources &quot;talent channels specialist.&quot;</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.washingtonpost.com/news/posteverything/wp/2017/10/17/my-google-job-was-tedious-and-pointless/?tid=hybrid_collaborative_1_na</dc:identifier>
</item>
<item>
<title>Show HN: Metaballs</title>
<link>http://varun.ca/metaballs</link>
<guid isPermaLink="true" >http://varun.ca/metaballs</guid>
<description>&lt;p data-height=&quot;400&quot; data-theme-id=&quot;26435&quot; data-slug-hash=&quot;RLyNEE&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;amoeba&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/RLyNEE/&quot;&gt;amoeba&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Metaballs, not to be confused with meatballs, are organic looking squishy gooey blobs. From a mathematical perspective they are an iso-surface. They are rendered using equations such as &lt;code class=&quot;dib b&quot;&gt;f(x,y,z) = r / ((x - x&lt;sub&gt;0&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + (y - y&lt;sub&gt;0&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + (z - z&lt;sub&gt;0&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;)&lt;/code&gt;. Jamie Wong has a fantastic &lt;a href=&quot;http://jamie-wong.com/2014/08/19/metaballs-and-marching-squares&quot;&gt;tutorial&lt;/a&gt; on rendering metaballs with canvas.&lt;/p&gt;
&lt;p&gt;We can replicate the metaball effect using CSS &amp;amp; SVG by applying both &lt;a href=&quot;https://css-tricks.com/shape-blobbing-css/&quot;&gt;blur and contrast filters&lt;/a&gt; to an element. For example in Chris Gannon’s Bubble Slider below.&lt;/p&gt;
&lt;p data-height=&quot;300&quot; data-theme-id=&quot;26435&quot; data-slug-hash=&quot;GZNgLw&quot; data-default-tab=&quot;result&quot; data-user=&quot;chrisgannon&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;SVG Bubble Slider&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/chrisgannon/pen/GZNgLw/&quot;&gt;SVG Bubble Slider&lt;/a&gt; by Chris Gannon (&lt;a href=&quot;https://codepen.io/chrisgannon&quot;&gt;@chrisgannon&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I discovered another approach to creating this metaball effect from &lt;a href=&quot;http://paperjs.org/examples/meta-balls&quot;&gt;Paper.js examples&lt;/a&gt;. Back in the days of Scriptographer &lt;a href=&quot;http://shspage.com&quot;&gt;Hiroyuki Sato&lt;/a&gt; created a script for generating gooey blobs in Adobe Illustrator. Unlike the previous techniques this does not render pixels or rely on filters. Instead it connects two circles with a membrane. Which means that the we can generate the entire blob as a path. For the Amoeba CodePen I followed exactly this technique.&lt;/p&gt;
&lt;p data-height=&quot;320&quot; data-theme-id=&quot;26435&quot; data-slug-hash=&quot;NazWxg&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Meta balls Debug&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/NazWxg/&quot;&gt;Meta balls Debug&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this blog post I am going break down the steps required to generate the metaball. We are going to go through a function called &lt;code class=&quot;highlighter-rouge&quot;&gt;metaball&lt;/code&gt; which generates the black shaded path that you see below. This consists of the connector plus a part of the second circle.&lt;/p&gt;
&lt;p data-height=&quot;200&quot; data-theme-id=&quot;8427&quot; data-slug-hash=&quot;qPQZPN&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Metaballs debug — the path&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/qPQZPN/&quot;&gt;Metaballs debug — the path&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To figure out where the connector touches the two circles we start by locating two tangents that touch both circles. This is the widest the connector can be. BTW I’m focusing on the case when the circles are not overlapping first.&lt;/p&gt;
&lt;p&gt;We can calculate the maximum angle of spread using:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Why? This took me a while to figure out. I could attempt to explain here, but you are probably better of seeing the step-by-step illustration in this &lt;a href=&quot;http://www.mathopenref.com/consttangentsext.html&quot;&gt;external tangents to two given circles&lt;/a&gt; guide.&lt;/p&gt;
max-spread
&lt;p&gt;This is the maximum possible spread that the connector can have. We can control spread amount by multiplying it with a factor called &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;. The Paper.js code has &lt;code class=&quot;highlighter-rouge&quot;&gt;v = 0.5&lt;/code&gt;. That seems to work well.&lt;/p&gt;
&lt;p data-height=&quot;200&quot; data-theme-id=&quot;8427&quot; data-slug-hash=&quot;aLQBdb&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Metaballs debug — spread&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/aLQBdb/&quot;&gt;Metaballs debug — spread&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The spread for the smaller circle is &lt;code class=&quot;highlighter-rouge&quot;&gt;(Math.PI - maxSpread) * v&lt;/code&gt;. This is because the sum of the opposite angles of a polygon is 180°.&lt;/p&gt;
&lt;p&gt;Next we need to find the location of those four points. We know the centre of the circles (&lt;code class=&quot;highlighter-rouge&quot;&gt;center1&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;center2&lt;/code&gt;) and the radii (&lt;code class=&quot;highlighter-rouge&quot;&gt;radius1&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;radius2&lt;/code&gt;). Therefore, we will only be dealing in terms of angles and then use polar coordinates to convert it into &lt;code&gt;(x, y)&lt;/code&gt; values later.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Circle 1 (left)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Circle 2 (right)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The angles need to be measured clockwise. Therefore, for the second circle we take that into account by subtracting from &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.PI&lt;/code&gt;. We add &lt;code class=&quot;highlighter-rouge&quot;&gt;angleBetweenCenters&lt;/code&gt; to all because the circles can be moving diagonally too. Then convert polar coords to cartesian.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Points&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To convert the trapezium shaped connector into a curved one we need to add handles to all four points. The next part of the process is to figure out the location of the handles.&lt;/p&gt;
&lt;p data-height=&quot;200&quot; data-theme-id=&quot;8427&quot; data-slug-hash=&quot;rGQyVJ&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Metaballs debug — handles&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/rGQyVJ/&quot;&gt;Metaballs debug — handles&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The handle for a particular point should be aligned to the tangent to the circle at that point. Again we’ll use polar coords to locate the handle. This time however, it will be relative to the point itself.&lt;/p&gt;
A B C angle 1
&lt;p&gt;The lines AB and BC are perpendicular because AB is radial and BC is a tangent to the circle. Therefore, the angle for the handle 1 is &lt;code class=&quot;highlighter-rouge&quot;&gt;angle1 - Math.PI / 2&lt;/code&gt;. Similarly we can calculate the angles for the other three handles.&lt;/p&gt;
&lt;p&gt;The length of the handle is relative to the radius of the circle they originate from times the factor &lt;code class=&quot;highlighter-rouge&quot;&gt;d2&lt;/code&gt;. For example, the length of handle 1 is &lt;code class=&quot;highlighter-rouge&quot;&gt;radius1 * d2&lt;/code&gt;. We can now calculate the location of the handles like so:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Handle length scaling factor&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Handle lengths&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have all the points 🙌🏽 Time to construct the SVG path. The path is made of three sections: curve from &lt;code class=&quot;highlighter-rouge&quot;&gt;point 1&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;point 3&lt;/code&gt;, arc of &lt;code class=&quot;highlighter-rouge&quot;&gt;radius2&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;point 3&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;point 4&lt;/code&gt; and curve from &lt;code class=&quot;highlighter-rouge&quot;&gt;point 4&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;point 2&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metaballToPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escaped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'M'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escaped&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;circle-overlap&quot;&gt;Circle Overlap&lt;/h3&gt;
&lt;p&gt;We have a gooey metaball! But you’ll notice that path gets all weird and twisty when the circles start to overlapping. We are going to fix this by expanding the spread in proportion to how much the circles are overlapping.&lt;/p&gt;
&lt;p data-height=&quot;200&quot; data-theme-id=&quot;8427&quot; data-slug-hash=&quot;boQadp&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Metaballs debug — no overlap&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/boQadp/&quot;&gt;Metaballs debug — no overlap&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The spread expansion will be controlled using the angles &lt;code class=&quot;highlighter-rouge&quot;&gt;u1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;u2&lt;/code&gt;. We can calculate these using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_cosines&quot;&gt;law of cosines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;radius1 d radius2 u1 u2&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But what shall we do with these 🤔 To be honest I’m not entirely sure how this works. What I do know is that it expands the spread as the circles get closer and then collapses it once circle 2 is completely inside circle 1.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p data-height=&quot;200&quot; data-theme-id=&quot;8427&quot; data-slug-hash=&quot;PJxQom&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Metaballs debug — overlap&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/PJxQom/&quot;&gt;Metaballs debug — overlap&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And one final change to account for overlapping circles. The length of the handles will also be proportional to the distance between the circles.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Define handle length by the distance between both ends of the curve&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2Base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Take into account when circles are overlapping&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2Base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;And here is the final result and the entire code snippet for &lt;code class=&quot;highlighter-rouge&quot;&gt;metaball&lt;/code&gt;. Try forking it and playing around with different values of &lt;code class=&quot;highlighter-rouge&quot;&gt;handleSize&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;. See how they impact the shape of the connector. There are so many amazing little details in these 70 lines of code. Fascinating work by Hiroyuki Sato. I learnt so much from it!&lt;/p&gt;
&lt;p data-height=&quot;300&quot; data-theme-id=&quot;26435&quot; data-slug-hash=&quot;pWQajO&quot; data-default-tab=&quot;result&quot; data-user=&quot;winkerVSbecks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Metaballs debug — final&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/winkerVSbecks/pen/pWQajO/&quot;&gt;Metaballs debug — final&lt;/a&gt; by Varun Vachhar (&lt;a href=&quot;https://codepen.io/winkerVSbecks&quot;&gt;@winkerVSbecks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot; readability=&quot;75&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Based on Metaball script by Hiroyuki Sato
 * http://shspage.com/aijs/en/#metaball
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metaball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// No blob if a radius is 0&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// or if distance between the circles is larger than max-dist&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// or if circle2 is completely inside circle1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Calculate u1 and u2 if the circles are overlapping&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Else set u1 and u2 to zero&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Calculate the max spread&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Angles for the points&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angleBetweenCenters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxSpread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Point locations&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;center2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Define handle length by the distance between both ends of the curve&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2Base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Take into account when circles are overlapping&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2Base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Length of the handles&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Handle locations&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angle4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HALF_PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Generate the connector path&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metaballToPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;radius2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metaballToPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escaped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'M'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escaped&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 17 Oct 2017 16:24:44 +0000</pubDate>
<dc:creator>winkerVSbecks</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://varun.ca/metaballs/</dc:identifier>
</item>
<item>
<title>ACME Support in Apache HTTP Server Project</title>
<link>https://letsencrypt.org/2017/10/17/acme-support-in-apache-httpd.html</link>
<guid isPermaLink="true" >https://letsencrypt.org/2017/10/17/acme-support-in-apache-httpd.html</guid>
<description>&lt;p&gt;We’re excited that support for getting and managing TLS certificates via the &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-acme-acme-07&quot;&gt;ACME protocol&lt;/a&gt; is coming to the &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache HTTP Server Project (httpd)&lt;/a&gt;. ACME is the protocol used by Let’s Encrypt, and hopefully other Certificate Authorities in the future. We anticipate this feature will significantly aid the adoption of HTTPS for new and existing websites.&lt;/p&gt;&lt;p&gt;We created Let’s Encrypt in order to make getting and managing TLS certificates as simple as possible. For Let’s Encrypt subscribers, this usually means obtaining an ACME client and executing some simple commands. Ultimately though, we’d like for most Let’s Encrypt subscribers to have ACME clients built in to their server software so that obtaining an additional piece of software is not necessary. The less work people have to do to deploy HTTPS the better!&lt;/p&gt;
&lt;p&gt;ACME support being built in to one of the world’s most popular Web servers, Apache httpd, is great because it means that deploying HTTPS will be even easier for millions of websites. It’s a huge step towards delivering the ideal certificate issuance and management experience to as many people as possible.&lt;/p&gt;
&lt;p&gt;The Apache httpd ACME module is called mod_md. It’s currently in the &lt;a href=&quot;https://svn.apache.org/viewvc/httpd/httpd/trunk/modules/md/&quot;&gt;development version of httpd&lt;/a&gt; and a plan is being formulated to backport it to an httpd 2.4.x stable release. The mod_md code is also &lt;a href=&quot;https://github.com/icing/mod_md&quot;&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/gNJUpzNNWMw?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;It’s also worth mentioning that the development version of Apache httpd now includes support for an &lt;a href=&quot;https://httpd.apache.org/docs/trunk/mod/mod_ssl.html#sslpolicy&quot;&gt;SSLPolicy directive&lt;/a&gt;. Properly configuring TLS has traditionally involved making a large number of complex choices. With the SSLPolicy directive, admins simply select a modern, intermediate, or old TLS configuration, and sensible choices will be made for them.&lt;/p&gt;
&lt;p&gt;Development of mod_md and the SSLPolicy directive has been &lt;a href=&quot;https://blog.mozilla.org/blog/2017/10/03/mozilla-awards-half-million-open-source-projects/&quot;&gt;funded by Mozilla&lt;/a&gt; and carried out primarily by Stefan Eissing of &lt;a href=&quot;https://www.greenbytes.de/&quot;&gt;greenbytes&lt;/a&gt;. Thank you Mozilla and Stefan!&lt;/p&gt;
&lt;p&gt;Let’s Encrypt is currently providing certificates for more than 55 million websites. We look forward to being able to serve even more websites as efforts like this make deploying HTTPS with Let’s Encrypt even easier. If you’re as excited about the potential for a 100% HTTPS Web as we are, please consider &lt;a href=&quot;https://letsencrypt.org/getinvolved/&quot;&gt;getting involved&lt;/a&gt;, &lt;a href=&quot;https://letsencrypt.org/donate/&quot;&gt;making a donation&lt;/a&gt;, or &lt;a href=&quot;https://letsencrypt.org/become-a-sponsor/&quot;&gt;sponsoring&lt;/a&gt; Let’s Encrypt.&lt;/p&gt;
</description>
<pubDate>Tue, 17 Oct 2017 16:22:25 +0000</pubDate>
<dc:creator>jaas</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://letsencrypt.org/2017/10/17/acme-support-in-apache-httpd.html</dc:identifier>
</item>
<item>
<title>Ohm: Parsing Made Easy</title>
<link>https://nextjournal.com/dubroy/ohm-parsing-made-easy</link>
<guid isPermaLink="true" >https://nextjournal.com/dubroy/ohm-parsing-made-easy</guid>
<description>&lt;pre class=&quot;cm-s-default&quot; data-reactid=&quot;2891&quot;&gt;
&lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;2892&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;cm-def&quot; data-reactid=&quot;2894&quot;&gt;semantics&lt;/span&gt; &lt;span class=&quot;cm-operator&quot; data-reactid=&quot;2896&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ref-marker&quot; data-reactid=&quot;2898&quot;&gt;arithmetic&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;2900&quot;&gt;createSemantics&lt;/span&gt;();&lt;span class=&quot;cm-variable&quot; data-reactid=&quot;2905&quot;&gt;semantics&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;2907&quot;&gt;addOperation&lt;/span&gt;(&lt;span class=&quot;cm-string&quot; data-reactid=&quot;2909&quot;&gt;'eval'&lt;/span&gt;, {  &lt;span class=&quot;cm-property&quot; data-reactid=&quot;2915&quot;&gt;AddExp_plus&lt;/span&gt;: &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;2918&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;cm-def&quot; data-reactid=&quot;2920&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;2923&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;2926&quot;&gt;b&lt;/span&gt;) {           &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;2932&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;2934&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;2936&quot;&gt;eval&lt;/span&gt;() &lt;span class=&quot;cm-operator&quot; data-reactid=&quot;2940&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;2942&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;2944&quot;&gt;eval&lt;/span&gt;();      },  &lt;span class=&quot;cm-property&quot; data-reactid=&quot;2955&quot;&gt;AddExp_minus&lt;/span&gt;: &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;2958&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;cm-def&quot; data-reactid=&quot;2960&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;2963&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;2966&quot;&gt;b&lt;/span&gt;) {    &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;2972&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;2974&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;2976&quot;&gt;eval&lt;/span&gt;() &lt;span class=&quot;cm-operator&quot; data-reactid=&quot;2980&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;2982&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;2984&quot;&gt;eval&lt;/span&gt;();  },  &lt;span class=&quot;cm-property&quot; data-reactid=&quot;2994&quot;&gt;MulExp_times&lt;/span&gt;: &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;2997&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;cm-def&quot; data-reactid=&quot;2999&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;3002&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;3005&quot;&gt;b&lt;/span&gt;) {    &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;3011&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;3013&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;3015&quot;&gt;eval&lt;/span&gt;() &lt;span class=&quot;cm-operator&quot; data-reactid=&quot;3019&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;3021&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;3023&quot;&gt;eval&lt;/span&gt;();  },  &lt;span class=&quot;cm-property&quot; data-reactid=&quot;3033&quot;&gt;MulExp_div&lt;/span&gt;: &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;3036&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;cm-def&quot; data-reactid=&quot;3038&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;3041&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;cm-def&quot; data-reactid=&quot;3044&quot;&gt;b&lt;/span&gt;) {    &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;3050&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;3052&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;3054&quot;&gt;eval&lt;/span&gt;() &lt;span class=&quot;cm-operator&quot; data-reactid=&quot;3058&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;3060&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;3062&quot;&gt;eval&lt;/span&gt;();  },  &lt;span class=&quot;cm-property&quot; data-reactid=&quot;3072&quot;&gt;number&lt;/span&gt;: &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;3075&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;cm-def&quot; data-reactid=&quot;3077&quot;&gt;digits&lt;/span&gt;) {    &lt;span class=&quot;cm-keyword&quot; data-reactid=&quot;3083&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;cm-variable&quot; data-reactid=&quot;3085&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;cm-variable-2&quot; data-reactid=&quot;3087&quot;&gt;digits&lt;/span&gt;.&lt;span class=&quot;cm-property&quot; data-reactid=&quot;3089&quot;&gt;sourceString&lt;/span&gt;)  }});
&lt;/pre&gt;</description>
<pubDate>Tue, 17 Oct 2017 14:47:50 +0000</pubDate>
<dc:creator>pdubroy</dc:creator>
<og:image>https://cdn.nextjournal.com:443/data/12200EB5CFA8289D945464ED0ED0E015C3825639CE7E55F9569A57D8089221C13B09</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://nextjournal.com/dubroy/ohm-parsing-made-easy</dc:identifier>
</item>
<item>
<title>Introducing Surface Book 2</title>
<link>https://blogs.windows.com/devices/2017/10/17/introducing-surface-book-2-the-most-powerful-surface-book-ever/</link>
<guid isPermaLink="true" >https://blogs.windows.com/devices/2017/10/17/introducing-surface-book-2-the-most-powerful-surface-book-ever/</guid>
<description>&lt;p&gt;&lt;img class=&quot;alignnone wp-image-260920&quot; src=&quot;https://winblogs.azureedge.net/devices/2017/10/0b8806b4751316a6f8f8f0260fd3da92.jpg&quot; alt=&quot;Microsoft Surface Book 2 13 inch and 15 inch pictured side by side&quot; width=&quot;1146&quot; height=&quot;764&quot;/&gt;&lt;/p&gt;&lt;p&gt;When you think about Microsoft and you hear our mission – to empower every person and every organization on the planet to achieve more – it’s powerful. As product makers, we have to believe in the reasons we build our products. From Office to Windows to Surface, this is a notion that drives us.&lt;/p&gt;
&lt;p&gt;As a team we work together to create products with seamless interactions from the silicon to the software. You see this across the entire Surface family – Pen, Dial, touch, voice – they opened so many doors to allow people to work and create in new ways.&lt;/p&gt;
&lt;p&gt;When we launched Surface Book two years ago we set out to build the most powerful and versatile laptop, to breakdown the boundaries between what you can imagine and what you can create, and we’ve been so inspired by how people have used Surface Book through their entire creative process.&lt;/p&gt;
&lt;p&gt;But people still want more, and creators continue to push the limits of what technology can do. So, we built the laptop of the future for the creators making the future. A laptop powerful enough to fuel the next wave of computing across mixed reality, artificial intelligence, machine learning, and immersive gaming.  A laptop that empowers the designers, developers, artists, and scientists to imagine and build without limits and without compromises. To achieve more.&lt;/p&gt;
&lt;p&gt;We can’t wait to see what you will do with Surface Book 2.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;embed-youtube&quot;&gt;&lt;iframe class=&quot;youtube-player&quot; type=&quot;text/html&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;https://www.youtube.com/embed/4ck5RbTQj28?version=3&amp;amp;rel=1&amp;amp;fs=1&amp;amp;autohide=2&amp;amp;showsearch=0&amp;amp;showinfo=1&amp;amp;iv_load_policy=1&amp;amp;wmode=transparent&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Surface Book 2 removes the barrier between the desktop and the laptop by giving mobile professionals the power of a desktop, the versatility of a tablet, and the freedom of a light and thin laptop in one beautifully designed device. Whether you’re a developer, a digital artist, a designer, or an accountant, you can bring your ideas to life anywhere, because Surface Book 2 is a portable powerhouse.&lt;/p&gt;
&lt;p&gt;We made no compromises building the most powerful Surface laptop ever. When the team talks about Surface Book 2 they call it Beauty &lt;em&gt;and&lt;/em&gt; the Beast. Gorgeous design meets unstoppable power in this laptop. With the latest 8th Gen Intel Core processors and NVIDIA GeForce GTX 1050 and 1060 discrete graphics options, Surface Book 2 is up to five times more powerful than the original and is twice as powerful as the latest MacBook Pro. All this power and Surface Book 2 still provides all-day battery life – up to 17 hours of video playback. That’s 70% more than the latest MacBook Pro.&lt;/p&gt;
&lt;p&gt;The new level of performance provided by Surface Book 2, along with the all-day battery life is what will continue to make this product perfect for product designers, gamers, architects, and developers who need the power of a desktop but crave the mobility of a laptop that doesn’t weigh 8-10lbs. Surface Book 2 with the 13” weighs 3.38lbs and the 15” Surface Book 2 at 4.2lbs, there has never been this much computational power in a mobile form factor this light. This is a product that can stay with you from the moment your inspiration strikes to making it a reality.&lt;/p&gt;
&lt;p&gt;You can show off your meticulously designed PowerPoint deck or complex Pivot tables in Excel with Surface Book 2’s stunningly vibrant and crisp PixelSense Display with multi-touch, Surface Pen, and Surface Dial on-screen support. You won’t believe how much the colors and 3D images will pop in PowerPoint on these machines. The 15” Surface Book 2 delivers almost seven million dazzling pixels – 45% more than the MacBook Pro – giving artists and professionals alike amazing pixel density on an even larger creative canvas.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone wp-image-260923&quot; src=&quot;https://winblogs.azureedge.net/devices/2017/10/737869c037b742b9eb0e7c58562d3aac.jpg&quot; alt=&quot;Microsoft Surface Book 2 13 inch and 15 inch pictured side by side&quot; width=&quot;1267&quot; height=&quot;484&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In product making, we believe every detail matters. And you see that come to life in the detachable display and hinge of Surface Book 2, which has been redesigned to provide a smoother, faster detach into Tablet or Studio Mode. And when you detach to sketch an idea or watch a video, the Surface Book 2 turns into the world’s thinnest and lightest 8th Gen Intel Core i7 PC, giving customers a powerful portable studio for those who want a single, device that can follow you from concept to sketch to creation. Surface Book 2 brings you a full array of ports, including USB-A, USB-C, and full-size SD card reader which makes it easy to connect other devices, accessories and memory cards without the need for a bag full of dongles.&lt;/p&gt;

&lt;p&gt;Whether you’re a finance manager running Excel models with millions of rows of data, an animator using 3D and morph transitions to present in PowerPoint, or a writer using the Surface Pen and intelligent ink to edit in Word – we developed Surface Book 2 to remove the boundaries between your ideas and creation. Giving you the seamless integration you need to do even more extraordinary work.&lt;/p&gt;
&lt;p&gt;All that power and versatility also make this the ideal laptop for some of the most exciting features of the &lt;a href=&quot;https://blogs.windows.com/windowsexperience/?p=153727&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows 10 Fall Creators Update&lt;/a&gt;. The Photos app will give you new ways to personalize and share your visual stories. And a range of new experiences allows you to create and interact with 3D objects. Use them in PowerPoint, Word, Excel, or the Mixed Reality Viewer app to view 3D in the real world. The Fall Creators Update is also the best version of Windows for PC gamers, giving them the performance boost of Game Mode and access to faster streaming through &lt;a href=&quot;http://blogs.windows.com/windowsexperience/2017/05/25/introducing-mixer/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mixer&lt;/a&gt;, experiences that show beautifully on Surface Book 2.&lt;/p&gt;
&lt;p class=&quot;jetpack-slideshow-noscript robots-nocontent&quot;&gt;This slideshow requires JavaScript.&lt;/p&gt;



&lt;p&gt;Surface Book 2 is designed to play as hard as it works. So when you’re done with work for the day and you want to game, Surface Book 2 is powerful enough to handle the most popular PC games at 1080p and 60 FPS – in some cases matching the graphics performance of game consoles like Xbox One. With built-in Xbox One Wireless support on the 15” you can pair your Xbox One controllers and compatible headsets to play with no cords or additional dongles required. And with so much innovation in the mixed reality space, we’re proud to share that Surface Book 2 is ready for &lt;a href=&quot;https://www.microsoft.com/en-us/windows/windows-mixed-reality&quot;&gt;Windows Mixed Reality&lt;/a&gt; Ultra. Connect a compatible headset and controller for apps and experiences with crisper visuals and a higher refresh rate (90 frames per second), including the highest-performance VR games.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-260938&quot; src=&quot;https://winblogs.azureedge.net/devices/2017/10/e1a109b0149aee0e01f42555985e2cf9.png&quot; alt=&quot;Woman wearing Windows Mixed Reality headset running on the new Surface Book 2&quot; width=&quot;1080&quot; height=&quot;720&quot;/&gt;&lt;/p&gt;

&lt;p&gt;From the early days of Surface Pro to the launch of the original Surface Book, we’ve had incredible feedback from photographers and artists who loved the ability to shoot tethered or draw on a super portable device that could also run &lt;a href=&quot;http://www.adobe.com/creativecloud.html&quot;&gt;Adobe Creative Cloud&lt;/a&gt; desktop applications. The power of Surface Book 2 will help artists and professionals across the creative spectrum take their work to the next level. More power means faster renders and effects so you can make quick edits and decisions to get you to your finished work. And a deeper partnership with Adobe means even better integration between Surface Book 2 and the &lt;a href=&quot;http://www.adobe.com/creativecloud.html&quot;&gt;Adobe Creative Cloud&lt;/a&gt;, including new Surface Dial functionality coming to Photoshop to keep you in your flow and let you easily access and modify your most frequently used brush settings.&lt;/p&gt;
&lt;p&gt;As a team, we believe that products are a reflection of the people who make them, and the people who use them. We put our heart and soul into building a laptop of the future, for people who want to create the future – creators who see no limits, data scientists designing deep neural networks, engineers, architects, movie makers, and gamers. Surface Book 2 is a tool for everyone who wants to achieve more.&lt;/p&gt;
&lt;p&gt;And I’m so pumped to get these products into customers’ hands. To see what you will do with the most powerful Surface laptop. Be the first to experience and pre-order the Surface Book 2 at a Microsoft Store or retailer near you. Surface Book 2 13” will be available for pre-order beginning November 9&lt;sup&gt;th&lt;/sup&gt; in the United States and additional markets around the world, along with Surface Book 2 15” in the United States at your &lt;a href=&quot;https://www.microsoft.com/en-us/store/locations/find-a-store?icid=en_US_Store_UH_FAS&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;local Microsoft Store&lt;/a&gt; and &lt;a href=&quot;https://www.microsoft.com/en-us/store/b/home&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Microsoft.com&lt;/a&gt;. Delivery will begin on November 16&lt;sup&gt;th&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;post-modified&quot;&gt;Updated October 17, 2017 9:26 am&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 17 Oct 2017 14:08:53 +0000</pubDate>
<dc:creator>AlexeyBrin</dc:creator>
<og:type>article</og:type>
<og:title>Introducing Surface Book 2, the most powerful Surface Book ever - Microsoft Devices Blog</og:title>
<og:description>Introducing the new Surface Book 2 – the most powerful Surface laptop yet</og:description>
<og:url>https://blogs.windows.com/devices/2017/10/17/introducing-surface-book-2-the-most-powerful-surface-book-ever/</og:url>
<og:image>https://winblogs.azureedge.net/devices/2017/10/cbbd096fe394cb273d388d670a04339f.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blogs.windows.com/devices/2017/10/17/introducing-surface-book-2-the-most-powerful-surface-book-ever/</dc:identifier>
</item>
<item>
<title>How to set up continuous deployment using free hosted tools</title>
<link>https://simonwillison.net/2017/Oct/17/free-continuous-deployment/</link>
<guid isPermaLink="true" >https://simonwillison.net/2017/Oct/17/free-continuous-deployment/</guid>
<description>&lt;p&gt;I’m going to describe a way to put together a world-class continuous deployment infrastructure for your side-project without spending any money.&lt;/p&gt;
&lt;p&gt;With &lt;a href=&quot;https://puppet.com/blog/continuous-delivery-vs-continuous-deployment-what-s-diff&quot;&gt;continuous deployment&lt;/a&gt; every code commit is tested against an automated test suite. If the tests pass it gets deployed directly to the production environment! How’s that for an incentive to write comprehensive tests?&lt;/p&gt;
&lt;p&gt;Each of the tools I’m using offers a free tier which is easily enough to handle most side-projects. And once you outgrow those free plans, you can solve those limitations in exchange for money!&lt;/p&gt;
&lt;p&gt;Here’s the magic combination:&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;Step_one_Publish_some_code_to_GitHub_with_some_tests_16&quot; name=&quot;Step_one_Publish_some_code_to_GitHub_with_some_tests_16&quot;&gt;I’ll be using the&lt;/a&gt; &lt;a href=&quot;https://github.com/simonw/simonwillisonblog&quot;&gt;code for my blog&lt;/a&gt; as an example. It’s a classic Django application, with a small (OK, tiny) suite of unit tests. The tests are run using the standard Django &lt;code&gt;./manage.py test&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Writing a Django application with tests is outside the scope of this article. Thankfully the official Django tutorial &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/intro/tutorial05/&quot;&gt;covers testing in some detail&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; is an outstanding hosted platform for continuous integration. Given a small configuration file it can check out code from GitHub, set up an isolated test environment (including hefty dependencies like a PostgreSQL database server, Elasticsearch, Redis etc), run your test suite and report the resulting pass/fail grade back to GitHub.&lt;/p&gt;
&lt;p&gt;It’s free for publicly hosted GitHub projects. If you want to test code in a private repository you’ll have to pay them some money.&lt;/p&gt;
&lt;p&gt;Here’s &lt;a href=&quot;https://github.com/simonw/simonwillisonblog/blob/a5c2d2549f26dd2d75cbf863c8b36d617092c2a1/.travis.yml&quot;&gt;my .travis.yml configuration file&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;language: python

python:
  - 2.7

services: postgresql

addons:
  postgresql: &quot;9.6&quot;

install:
  - pip install -r requirements.txt

before_script:
  - psql -c &quot;CREATE DATABASE travisci;&quot; -U postgres
  - python manage.py migrate --noinput
  - python manage.py collectstatic

script:
  - python manage.py test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And here’s the resulting &lt;a href=&quot;https://travis-ci.org/simonw/simonwillisonblog&quot;&gt;Travis CI dashboard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The integration of Travis with GitHub runs &lt;em&gt;deep&lt;/em&gt;. Once you’ve set up Travis, it will automatically test every push to every branch - driven by GitHub webhooks, so test runs are set off almost instantly. Travis will then report the test results back to GitHub, where they’ll show up in a bunch of different places - including these pleasing green ticks on &lt;a href=&quot;https://github.com/simonw/simonwillisonblog/branches&quot;&gt;the branches page&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;GitHub branches page showing CI results&quot; src=&quot;https://static.simonwillison.net/static/2017/github-branches-with-ci-small.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Travis will also run tests against any &lt;a href=&quot;https://github.com/simonw/simonwillisonblog/pull/3&quot;&gt;open pull requests&lt;/a&gt;. This is a great incentive to build new features in a pull request even if you aren’t using them for code review:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;GitHub pull request showing CI results&quot; src=&quot;https://static.simonwillison.net/static/2017/github-pull-request-with-ci-small.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt; deserves a mention as an alternative to Travis. The two are close competitors and offer very similar feature sets, and Circle CI's free plan allows up to 1,500 build minutes of private repositories per month.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;Step_3_Deploy_to_Heroku_and_turn_on_continuous_deployment_61&quot; name=&quot;Step_3_Deploy_to_Heroku_and_turn_on_continuous_deployment_61&quot;&gt;I’m a big fan of&lt;/a&gt; &lt;a href=&quot;https://heroku.com/&quot;&gt;Heroku&lt;/a&gt; for side projects, because it means not having to worry about ongoing server-maintenance. I’ve lost several side-projects to &lt;a href=&quot;https://blog.heroku.com/archives/2011/6/28/the_new_heroku_4_erosion_resistance_explicit_contracts/&quot;&gt;entropy and software erosion&lt;/a&gt; - getting an initial VPS set up may be pretty simple, but a year later security patches need applying and the OS needs upgrading and the log files have filled up the disk and you’ve forgotten how you set everything up in the first place…&lt;/p&gt;
&lt;p&gt;It turns out Heroku has basic support for continuous deployment baked in, and it’s trivially easy to set up. You can tell Heroku to deploy on every commit to GitHub, and then if you’ve attached a CI service like Travis that reports build health back you can check the box for “Wait for CI to pass before deploy”:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Heroku deployment settings for continuous deployment&quot; src=&quot;https://static.simonwillison.net/static/2017/heroku-deploy-settings-small.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Since small dynos on Heroku are free, you can even set up a separate Heroku app as a staging environment. I started my continuous integration adventure just deploying automatically to my staging instance, then switched over to deploying to production once I gained some confidence in how it all fitted together.&lt;/p&gt;
&lt;p&gt;If you’re using continuous deployment with Heroku and Django, it’s a good idea to set up Heroku to automatically run your migrations for every deploy - otherwise you might merge a pull request with a model change and forget to run the migrations before the deploy goes out. You can do that using Heroku’s &lt;a href=&quot;https://devcenter.heroku.com/articles/release-phase&quot;&gt;release phase&lt;/a&gt; feature, by adding the line &lt;code&gt;release: python manage.py migrate --noinput&lt;/code&gt; to your Heroku &lt;code&gt;Procfile&lt;/code&gt; (&lt;a href=&quot;https://github.com/simonw/simonwillisonblog/blob/81f7e2ba19b84f572e8a546bcc28bbfb1e211eb6/Procfile&quot;&gt;here’s mine&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Once you go beyond Heroku’s free tier things get much more powerful: &lt;a href=&quot;https://www.heroku.com/flow&quot;&gt;Heroku Flow&lt;/a&gt; combines pipelines, review apps and their own CI solution to provide a comprehensive solution for much larger teams.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;Step_4_Monitor_errors_with_Sentry_75&quot; name=&quot;Step_4_Monitor_errors_with_Sentry_75&quot;&gt;If you’re going to move fast and break things, you need to know when things have broken.&lt;/a&gt; &lt;a href=&quot;https://sentry.io/&quot;&gt;Sentry&lt;/a&gt; is a fantastic tool for collecting exceptions, aggregating them and spotting when something new crops up. It’s open source so you can host it yourself, but they also offer a robust hosted version with a free plan that can track up to 10,000 errors a month.&lt;/p&gt;
&lt;p&gt;My favourite feature of Sentry is that it gives each exception it sees a “signature” based on a MD5 hash of its traceback. This means it can tell if errors are the same underlying issue or something different, and can hence de-dupe them and only alert you the first time it spots an error it has not seen before.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Notifications from Travis CI and GitHub in Slack&quot; src=&quot;https://static.simonwillison.net/static/2017/sentry-small.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Sentry has integrations for most modern languages, but it’s particularly easy to use with Django. Just install &lt;a href=&quot;https://pypi.python.org/pypi/raven&quot;&gt;raven&lt;/a&gt; and add few extra lines to your &lt;a href=&quot;http://settings.py&quot;&gt;settings.py&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SENTRY_DSN = os.environ.get('SENTRY_DSN')
if SENTRY_DSN:
    INSTALLED_APPS += (
        'raven.contrib.django.raven_compat',
    )
    RAVEN_CONFIG = {
        'dsn': SENTRY_DSN,
        'release': os.environ.get('HEROKU_SLUG_COMMIT', ''),
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here I’m using the Heroku pattern of &lt;a href=&quot;https://devcenter.heroku.com/articles/config-vars&quot;&gt;keeping configuration in environment variables&lt;/a&gt;. &lt;code&gt;SENTRY_DSN&lt;/code&gt; is provided by Sentry when you create your project there - you just have to add it as a Heroku config variable.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;HEROKU_SLUG_COMMIT&lt;/code&gt; line causes the currently deployed git commit hash to be fed to Sentry so that it knows what version of your code was running when it reports an error. To enable that variable, you’ll need to &lt;a href=&quot;https://devcenter.heroku.com/articles/dyno-metadata&quot;&gt;enable Dyno Metadata&lt;/a&gt; by running &lt;code&gt;heroku labs:enable runtime-dyno-metadata&lt;/code&gt; against your application.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;Step_5_Hook_it_all_together_with_Slack_97&quot; name=&quot;Step_5_Hook_it_all_together_with_Slack_97&quot;&gt;Would you like a push notification to your phone every time your site gets code committed / the tests pass or fail / a deploy goes out / a new error is detected? All of the above tools can report such things to&lt;/a&gt; &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;, and Slack’s free plan is easily enough to collect all of these notifications and push them to your phone via the free Slack &lt;a href=&quot;https://slack.com/downloads/ios&quot;&gt;iOS&lt;/a&gt; or &lt;a href=&quot;https://slack.com/downloads/android&quot;&gt;Android&lt;/a&gt; apps.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Notifications from Travis CI and GitHub in Slack&quot; src=&quot;https://static.simonwillison.net/static/2017/slack-github-ci-small.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Here are instructions for setting up Slack with &lt;a href=&quot;https://get.slack.help/hc/en-us/articles/232289568-Use-GitHub-with-Slack&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://docs.travis-ci.com/user/notifications/#Configuring-slack-notifications&quot;&gt;Travis CI&lt;/a&gt;, &lt;a href=&quot;https://slack.com/apps/A0F7VRF7E-heroku&quot;&gt;Heroku&lt;/a&gt; and &lt;a href=&quot;https://slack.com/apps/A0F814BEV-sentry&quot;&gt;Sentry&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;Need_more_Pay_for_it_105&quot; name=&quot;Need_more_Pay_for_it_105&quot;&gt;Having run much of this kind of infrastructure myself in the past I for one am delighted by the idea of outsourcing it, especially when the hosted options are of such high quality.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;Need_more_Pay_for_it_105&quot; name=&quot;Need_more_Pay_for_it_105&quot;&gt;Each of these tools offers a free tier which is generous enough to work great for small side projects. As you start scaling up, you can start paying for them - that’s why they gave you a free tier in the first place.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;Need_more_Pay_for_it_105&quot; name=&quot;Need_more_Pay_for_it_105&quot;&gt;Comments or suggestions? Join&lt;/a&gt; &lt;a href=&quot;https://news.ycombinator.com/item?id=15490935&quot;&gt;this thread on Hacker News&lt;/a&gt;.&lt;/p&gt;

</description>
<pubDate>Tue, 17 Oct 2017 14:01:22 +0000</pubDate>
<dc:creator>simonw</dc:creator>
<og:url>http://simonwillison.net/2017/Oct/17/free-continuous-deployment/</og:url>
<og:title>How to set up world-class continuous deployment using free hosted tools</og:title>
<og:image>https://avatars0.githubusercontent.com/u/9599?v=4&amp;s=200</og:image>
<og:type>article</og:type>
<og:description>I’m going to describe a way to put together a world-class continuous deployment infrastructure for your side-project without spending any money. With continuous deployment every code commit is tested against ...</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://simonwillison.net/2017/Oct/17/free-continuous-deployment/</dc:identifier>
</item>
</channel>
</rss>