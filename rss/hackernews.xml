<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Rust 1.26 released</title>
<link>https://blog.rust-lang.org/2018/05/10/Rust-1.26.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2018/05/10/Rust-1.26.html</guid>
<description>&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.26.0. Rust is a systems programming language focused on safety, speed, and concurrency.&lt;/p&gt;&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.26.0 is as easy as:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rustup update stable
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you don’t have it already, you can &lt;a href=&quot;https://www.rust-lang.org/install.html&quot;&gt;get &lt;code class=&quot;highlighter-rouge&quot;&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes for 1.26.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h2 id=&quot;whats-in-1260-stable&quot;&gt;What’s in 1.26.0 stable&lt;/h2&gt;
&lt;p&gt;The past few releases have had a steady stream of relatively minor additions. We’ve been working on a lot of stuff, however, and it’s all starting to land in stable. 1.26 is possibly the most feature-packed release since Rust 1.0. Let’s dig in!&lt;/p&gt;
&lt;h4 id=&quot;the-rust-programming-language-second-edition&quot;&gt;“The Rust Programming Language” Second Edition&lt;/h4&gt;
&lt;p&gt;For almost 18 months, Carol, Steve, and others have been working on a complete re-write of “The Rust Programming Language.” We’ve learned a lot about how people learn Rust since the first book was written, and this version is an improvement in every way.&lt;/p&gt;
&lt;p&gt;We’ve shipped the draft of the second edition on the website for a while now, but with a disclaimer that it was a work in progress. At this point, the book is undergoing some final, minor copy-edits, and being prepared for print. As such, with this release, we are recommending the second edition over the first. You can &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/&quot;&gt;read it on doc.rust-lang.org&lt;/a&gt; or locally via &lt;code class=&quot;highlighter-rouge&quot;&gt;rustup doc --book&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Speaking of print, you can pre-order a dead tree version of the book &lt;a href=&quot;https://www.nostarch.com/Rust&quot;&gt;from NoStarch Press&lt;/a&gt;. The contents are identical, but you get a nice physical book to put on a shelf, or a beautifully typeset PDF. Proceeds are going to charity.&lt;/p&gt;
&lt;h4 id=&quot;impl-trait&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;At long last, &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; is here! This feature has been highly desired for quite a while, and provides a feature known as “existential types.” It’s simpler than that sounds, however. The core of it is this idea:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This type signature says “&lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; is a function that takes no arguments but returns a type that implements the &lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;/code&gt; trait.” That is, we’re not going to tell you what the return type of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; actually is, only that it implements a particular trait. You may wonder how this differs from a trait object:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;While it’s true that you could have written this code today, it’s not ideal in all situations. Let’s say we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;/code&gt; trait that is implemented for both &lt;code class=&quot;highlighter-rouge&quot;&gt;i32&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;f32&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// implementation goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;f32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// implementation goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Consider this function:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We want to fill in the return type with something. Previously, only the trait object version was possible:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But this introduces a &lt;code class=&quot;highlighter-rouge&quot;&gt;Box&lt;/code&gt;, which means allocation. We’re not actually returning some kind of dynamic data here either, so the dynamic dispatch of the trait object hurts too. So instead, as of Rust 1.26, you can write this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This doesn’t create a trait object, it’s like we had written &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt; i32&lt;/code&gt;, but instead, we’re only mentioning the part about &lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;/code&gt;. We get static dispatch, but we can hide the real type like this.&lt;/p&gt;
&lt;p&gt;Why is this useful? One good use is closures. Remember that closures in Rust all have a unique, un-writable type, yet implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;/code&gt; trait. This means that if your function returns a closure, you can do this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// before&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// after&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;No boxing, no dynamic dispatch. A related scenario happens when returning iterators. Not only do iterators often include closures, but since they nest, you get quite deeply nested types. For example:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;when compiled, gives this error:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;35&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;error[E0308]: mismatched types
 --&amp;gt; src/main.rs:5:5
  |
5 | /     vec![1, 2, 3]
6 | |         .into_iter()
7 | |         .map(|x| x + 1)
8 | |         .filter(|x| x % 2 == 0)
  | |_______________________________^ expected (), found struct `std::iter::Filter`
  |
  = note: expected type `()`
             found type `std::iter::Filter&amp;lt;std::iter::Map&amp;lt;std::vec::IntoIter&amp;lt;{integer}&amp;gt;, [closure@src/main.rs:7:14: 7:23]&amp;gt;, [closure@src/main.rs:8:17: 8:31]&amp;gt;`
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That’s a huge ‘found type’. Each adapter in the chain adds a new type. Additionally, we have that closure in there. Previously, we’d have had to use a trait object here, but now we can simply do&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and be done with it. Working with &lt;a href=&quot;https://crates.io/crates/futures&quot;&gt;futures&lt;/a&gt; is very similar.&lt;/p&gt;
&lt;p&gt;It’s important to note that sometimes trait objects are still what you need. You can only use &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; if your function returns a single type; if you want to return multiple, you need dynamic dispatch. For example:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.into_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here, we may return a filtered iterator, or maybe not. There’s two different types that can be returned, and so we must use a trait object.&lt;/p&gt;
&lt;p&gt;Oh, and one last thing: to make the syntax a bit more symmetrical, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; in argument position too. That is:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// before&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// after&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Trait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which can look a bit nicer for short signatures.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;Side note for you type theorists out there: this isn’t an existential, still a universal. In other words, &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;/code&gt; is universal in an input position, but existential in an output position.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;nicer-match-bindings&quot;&gt;Nicer &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt; bindings&lt;/h4&gt;
&lt;p&gt;Have you ever had a reference to an &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt;, and tried to use &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;? For example, code like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I don't know who you are.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you tried to compile this in Rust 1.25, you’d get this error:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;error[E0658]: non-reference pattern used to match a reference (see issue #42640)
 --&amp;gt; src/main.rs:6:9
  |
6 |         Some(name) =&amp;gt; println!(&quot;Hello {}!&quot;, name),
  |         ^^^^^^^^^^ help: consider using a reference: `&amp;amp;Some(name)`

error[E0658]: non-reference pattern used to match a reference (see issue #42640)
 --&amp;gt; src/main.rs:7:9
  |
7 |         None =&amp;gt; println!(&quot;I don't know who you are.&quot;),
  |         ^^^^ help: consider using a reference: `&amp;amp;None`
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Okay, sure. Let’s modify the code:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I don't know who you are.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We added the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;s the compiler complained about. Let’s try to compile again:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;33.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;error[E0507]: cannot move out of borrowed content
 --&amp;gt; src/main.rs:6:9
  |
6 |         &amp;amp;Some(name) =&amp;gt; println!(&quot;Hello {}!&quot;, name),
  |         ^^^^^^----^
  |         |     |
  |         |     hint: to prevent move, use `ref name` or `ref mut name`
  |         cannot move out of borrowed content
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Okay, sure. Let’s make the compiler happy again by taking its advice:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I don't know who you are.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will finally compile. We had to add two &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;s, and a &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;. But more importantly, none of this was really &lt;em&gt;helpful&lt;/em&gt; to us as programmers. Sure, we forgot a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; at first, but does that matter? We had to add &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt; to get a reference to the inside of the option, but we couldn’t do anything &lt;em&gt;but&lt;/em&gt; get a reference, as we can’t move out of a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;T&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, as of Rust 1.26, the initial code, without the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;s and &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;, will just compile and do exactly what you’d expect. In short, the compiler will automatically reference or de-reference in &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt; statements. So when we say&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {}!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;the compiler automatically references the &lt;code class=&quot;highlighter-rouge&quot;&gt;Some&lt;/code&gt;, and since we’re borrowing, &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; is bound as &lt;code class=&quot;highlighter-rouge&quot;&gt;ref name&lt;/code&gt; automatically as well. If we were mutating:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.push_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;the compiler will automatically borrow by mutable reference, and &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; will be bound as &lt;code class=&quot;highlighter-rouge&quot;&gt;ref mut&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;We think this will remove a significant papercut for new and old Rustaceans alike. The compiler will just do the right thing more often without the need for boilerplate.&lt;/p&gt;
&lt;h4 id=&quot;main-can-return-a-result&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; can return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Speaking of papercuts, since Rust uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt; type for returning errors, and &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; to make handling them easy, a common pain-point of new Rustaceans is to try and use &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will give an error like “error[E0277]: the &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; operator can only be used in a function that returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;”. This leads to a pattern where many people write code that &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch12-03-improving-error-handling-and-modularity.html#extracting-logic-from-main&quot;&gt;looks like this&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// --snip--&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// --snip--&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Application error: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nn&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Our &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; function has all of the real logic, and &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; calls &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;, only checking to see if there was an error and exiting. We need to make this second function because &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; can’t return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;, but we’d like to use &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; in that logic.&lt;/p&gt;
&lt;p&gt;In Rust 1.26, you can now declare &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; that returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This now works just fine! If &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; returns an error, this will exit with an error code, and print out a debug representation of the error.&lt;/p&gt;
&lt;h4 id=&quot;inclusive-ranges-with-&quot;&gt;Inclusive ranges with &lt;code class=&quot;highlighter-rouge&quot;&gt;..=&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Since well before Rust 1.0, you’ve been able to create exclusive ranges with &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will print &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 1&lt;/code&gt; and then &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 2&lt;/code&gt;. In Rust 1.26, you can now create an inclusive range, like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will print &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 1&lt;/code&gt; and then &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 2&lt;/code&gt; like before, but also &lt;code class=&quot;highlighter-rouge&quot;&gt;i: 3&lt;/code&gt;; the three is included in the range. Inclusive ranges are especially useful if you want to iterate over every possible value in a range. For example, this is a surprising Rust program:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;What does this program do? The answer: nothing. The warning we get when compiling has a hint:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;warning: literal out of range for u8
 --&amp;gt; src/main.rs:6:17
  |
6 |     for i in 0..256 {
  |                 ^^^
  |
  = note: #[warn(overflowing_literals)] on by default
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That’s right, since &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; is a &lt;code class=&quot;highlighter-rouge&quot;&gt;u8&lt;/code&gt;, this overflows, and is the same as writing &lt;code class=&quot;highlighter-rouge&quot;&gt;for i in 0..0&lt;/code&gt;, so the loop executes zero times.&lt;/p&gt;
&lt;p&gt;We can do this with inclusive ranges, however:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;takes_u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will produce those 256 lines of output you might have been expecting.&lt;/p&gt;
&lt;h4 id=&quot;basic-slice-patterns&quot;&gt;Basic slice patterns&lt;/h4&gt;
&lt;p&gt;Another long-awaited feature is “slice patterns.” These let you match on slices similar to how you match on other data types. For example:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;starts with one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;starts with something else&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this case, we know &lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; has a length of three, and so we need three entries inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;s. We can also match when we don’t know the length:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here, we don’t know how long &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; is, so we can write the first two arms, each with different lengths. This also means we need a &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; term, since we aren’t covering every possible length, nor could we!&lt;/p&gt;
&lt;h4 id=&quot;speed-improvements&quot;&gt;Speed improvements&lt;/h4&gt;
&lt;p&gt;We continue to work on the speed of the compiler. We discovered that deeply nesting types was non-linear in some cases, and &lt;a href=&quot;https://github.com/rust-lang/rust/pull/48296&quot;&gt;a fix was implemented&lt;/a&gt;. We’re seeing up to a 12% reduction in compile times from this change, but many other smaller fixes landed as well. More to come in the future!&lt;/p&gt;
&lt;h4 id=&quot;128-bit-integers&quot;&gt;128 bit integers&lt;/h4&gt;
&lt;p&gt;Finally, a very simple feature: Rust now has 128 bit integers!&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i128&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u128&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;These are twice the size of &lt;code class=&quot;highlighter-rouge&quot;&gt;u64&lt;/code&gt;, and so can hold more values. More specifically,&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;u128&lt;/code&gt;: 0 - 340,282,366,920,938,463,463,374,607,431,768,211,455&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i128&lt;/code&gt;: −170,141,183,460,469,231,731,687,303,715,884,105,728 - 170,141,183,460,469,231,731,687,303,715,884,105,727&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Whew!&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3 id=&quot;library-stabilizations&quot;&gt;Library stabilizations&lt;/h3&gt;
&lt;p&gt;We stabilized &lt;a href=&quot;https://doc.rust-lang.org/std/fs/fn.read_to_string.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fs::read_to_string&lt;/code&gt;&lt;/a&gt;, a convenience over &lt;code class=&quot;highlighter-rouge&quot;&gt;File::open&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;io::Read::read_to_string&lt;/code&gt; for easily reading an entire file into memory at once:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketAddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SocketAddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read_to_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;address.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can now &lt;a href=&quot;https://github.com/rust-lang/rust/pull/48978&quot;&gt;format numbers as hexadecimal with &lt;code class=&quot;highlighter-rouge&quot;&gt;Debug&lt;/code&gt; formatting&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;format!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{:02x?}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Foo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[46, 6f, 6f, 00]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Trailing commas &lt;a href=&quot;https://github.com/rust-lang/rust/pull/48056&quot;&gt;are now supported by all macros in the standard library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3 id=&quot;cargo-features&quot;&gt;Cargo features&lt;/h3&gt;
&lt;p&gt;Cargo didn’t receive many big new features this release but rather saw a steady stream of stability and performance improvements. Cargo should now resolve lock files even faster, backtrack more intelligently, and require manual &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo update&lt;/code&gt; invocations less. Cargo’s binary &lt;a href=&quot;https://github.com/rust-lang/cargo/pull/5083&quot;&gt;now also shares the same version as &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2 id=&quot;contributors-to-1260&quot;&gt;Contributors to 1.26.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.26. We couldn’t have done it without all of you.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://thanks.rust-lang.org/rust/1.26.0&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 17:17:06 +0000</pubDate>
<dc:creator>dikiaap</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2018/05/10/Rust-1.26.html</dc:identifier>
</item>
<item>
<title>Carnegie Mellon Launches Undergraduate Degree in Artificial Intelligence</title>
<link>https://www.cs.cmu.edu/news/carnegie-mellon-launches-undergraduate-degree-artificial-intelligence</link>
<guid isPermaLink="true" >https://www.cs.cmu.edu/news/carnegie-mellon-launches-undergraduate-degree-artificial-intelligence</guid>
<description>&lt;p&gt;The School of Computer Science will launch a bachelor of science program in artificial intelligence this fall.&lt;/p&gt;&lt;div readability=&quot;131.12621359223&quot;&gt;
&lt;p class=&quot;Normal1&quot;&gt;Carnegie Mellon University's School of Computer Science will offer a new &lt;a href=&quot;https://www.cs.cmu.edu/bs-in-artificial-intelligence&quot;&gt;undergraduate degree in artificial intelligence&lt;/a&gt; beginning this fall, providing students with in-depth knowledge of how to transform large amounts of data into actionable decisions.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;SCS has created the new AI degree, the first offered by a U.S. university, in response to extraordinary technical breakthroughs in AI and the growing demand by students and employers for training that prepares people for careers in AI.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;&quot;Specialists in artificial intelligence have never been more important, in shorter supply or in greater demand by employers,&quot; said Andrew Moore, dean of the School of Computer Science. &quot;Carnegie Mellon has an &lt;a href=&quot;https://ai.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;unmatched depth of expertise in AI&lt;/a&gt;, making us uniquely qualified to address this need for graduates who understand how the power of AI can be leveraged to help people.&quot;&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;This spring, U.S. News and World Report ranked SCS as the No. 1 graduate school for artificial intelligence.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;The bachelor's degree program in computer science teaches students to think broadly about methods that can accomplish a wide variety of tasks across many disciplines, said &lt;a href=&quot;http://www.cs.cmu.edu/~reids/&quot; target=&quot;_blank&quot;&gt;Reid Simmons&lt;/a&gt;, research professor of robotics and computer science and director of the new AI degree program. The bachelor's degree in AI will focus more on how complex inputs — such as vision, language and huge databases — are used to make decisions or enhance human capabilities, he added. AI majors will receive the same solid grounding in computer science and math courses as other computer science students. In addition, they will have additional course work in AI-related subjects such as statistics and probability, computational modeling, machine learning, and symbolic computation.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Simmons said the program also would include a strong emphasis on ethics and social responsibility. This will include independent study opportunities in using AI for social good, such as improving transportation, health care or education.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Students accepted by SCS as first-year students can enter the AI degree program in their second year. All students, thus, will take first-year courses in core computer science competencies and introductory courses. This will enable them to make informed choices when it is time to declare a major, whether it's AI, computer science or computational biology — the latter an undergraduate degree program that began in fall 2017.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Initially, AI undergraduate enrollment will accommodate no more than 100 second-, third- and fourth-year students — or about 30–35 new students each year. (SCS enrolls about 735 undergraduates.) In fall 2018, a limited number of second- and third-year students who have already taken a substantial number of relevant courses can apply to join the new AI degree program.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;Just as artificial intelligence unites such disciplines as machine learning, natural language processing, computer vision, robotics and human-computer interaction, instruction in the AI program will draw on the faculty of SCS's &lt;a href=&quot;https://www.ml.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Machine Learning Department&lt;/a&gt;, &lt;a href=&quot;https://www.lti.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Language Technologies Institute&lt;/a&gt;, &lt;a href=&quot;https://www.ri.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Robotics Institute&lt;/a&gt;, &lt;a href=&quot;https://www.hcii.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Human-Computer Interaction Institute,&lt;/a&gt; &lt;a href=&quot;https://www.csd.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Computer Science Department&lt;/a&gt; and &lt;a href=&quot;http://www.isri.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Institute for Software Research&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;The degree will leverage CMU's traditional strength in cross-disciplinary instruction, particularly in exploring the ethical and societal implications of AI, by involving faculty members from the &lt;a href=&quot;https://www.cmu.edu/dietrich/&quot; target=&quot;_blank&quot;&gt;Dietrich College of Humanities and Social Sciences&lt;/a&gt;, the &lt;a href=&quot;https://www.heinz.cmu.edu/&quot; target=&quot;_blank&quot;&gt;Heinz College&lt;/a&gt; and the &lt;a href=&quot;https://engineering.cmu.edu/&quot; target=&quot;_blank&quot;&gt;College of Engineering&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;CMU has a long history in artificial intelligence, including the creation of the first AI computer program in 1956 and pioneering work in self-driving cars, facial recognition and natural language processing. Last year, SCS began its &lt;a href=&quot;https://ai.cs.cmu.edu/&quot; target=&quot;_blank&quot;&gt;CMU AI research and education initiative&lt;/a&gt;, which involves almost 200 faculty members working in AI-related areas that range from art to public policy.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;CMU also has been a leader in education, offering the first university-level course in computer programming in 1958, launching the first Ph.D. program in robotics and creating the world's first Machine Learning Department. SCS will once again advance computer science education through its AI degree program, said Simmons, who is completing a 2.5-year stint as program director in the National Science Foundation's Computer and Information Science and Engineering (CISE) Directorate and lead for the National Robotics Initiative.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;&quot;It's an opportunity for us to shape what it means to be a degree program in AI, as opposed to offering courses related to AI,&quot; Simmons said. The new program will employ the same academic rigor — no more, no less — that has made CMU's undergraduate program the gold standard for computer science.&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;&quot;We want to be the first to offer an AI undergraduate degree,&quot; he continued. &quot;I'm sure we won't be the last. AI is here to stay.&quot;&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt;For more information, visit the BSAI website at &lt;a href=&quot;https://www.cs.cmu.edu/bs-in-artificial-intelligence&quot;&gt;https://www.cs.cmu.edu/bs-in-artificial-intelligence.&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;Normal1&quot;&gt; &lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 10 May 2018 16:28:03 +0000</pubDate>
<dc:creator>e15ctr0n</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cs.cmu.edu/news/carnegie-mellon-launches-undergraduate-degree-artificial-intelligence</dc:identifier>
</item>
<item>
<title>ISPs Lying That They Don’t Make Enough Money</title>
<link>https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</guid>
<description>&lt;p&gt;In their effort to prevent states from protecting a free and open Internet, a small handful of massive and extraordinarily profitably Internet service providers (ISPs) are telling state legislatures that network neutrality would hinder their ability to raise revenues to pay for upgrades and thus force them to charge consumers higher bills for Internet access. This is because state-based network neutrality will prohibit data discrimination schemes known as “paid prioritization” where the ISP charges websites and applications new tolls and relegate those that do not pay to the slow lane.&lt;/p&gt;
&lt;p&gt;In essence, they are saying they have to charge new fees to websites and applications in order to pay for upgrades and maintenance to their networks. In other words, people are using so much of their broadband product that they can’t keep up on our monthly subscriptions.&lt;/p&gt;
&lt;p&gt;Nothing could be further from the truth.&lt;/p&gt;
&lt;p&gt;Today in America we have ISPs that are already deploying 21st-century high-speed broadband without resorting to violating network neutrality or monetizing our personal information with advertisers. The fact is nothing—and certainly not a lack of funds—prevents incumbents from upgrading their networks and bringing a vast majority of American cities they serve into the 21st century of Internet access. That means gigabit broadband services anywhere between $40 to $70 a month (the range people in the handful of competitive markets pay today). Yet, year after year, these ISPs have pocketed billions in profits and it is not until they face competition from a rival provider that they upgrade their networks.&lt;/p&gt;
&lt;p&gt;Ultimately, it’s not network neutrality that prevents the large ISPs from upgrading their networks while lowering prices. It is a lack of incentive.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;The Biggest Cost For An ISP is the Initial Deployment, Not Internet Usage&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;ISPs misrepresent to policymakers the true cost drivers of broadband deployment as a way to stave off pro-consumer protections. In fact, the biggest cost barrier for an ISP’s creation is the initial construction of the network (as opposed to its future upgrades) and the civil works that entails. That is what the &lt;a href=&quot;https://oversight.house.gov/wp-content/uploads/2012/01/TestimonyofMiloMedin_1.pdf&quot;&gt;Google Fiber deployment&lt;/a&gt; &lt;a href=&quot;http://www.fclj.org/wp-content/uploads/2014/01/66-1Trogdon.pdf&quot;&gt;has taught us&lt;/a&gt; and that is what &lt;a href=&quot;https://localhost/here%20https/::ec.europa.eu:digital-single-market:news:support-preparation-impact-assessment-accompany-eu-initiative-reducing-costs-high-speed&quot;&gt;studies&lt;/a&gt; in the European Union concluded when analyzing how to improve the market entry prospects of ISPs.&lt;/p&gt;
&lt;p&gt;Some estimates suggest the cost of deployment can be close to 80 percent of the entire cost portfolio of an ISP. Note that means operations and maintenance of the network (that includes all of the broadband usages of its customers) could be as little as 20% of the ISP’s costs. This is acutely true when it comes to a fiber to the home deployment where the infrastructure (fiber optic cable) is effectively future-proof and can be upgraded cheaply with advances in electronics.&lt;/p&gt;
&lt;p&gt;It is worth remembering that our current incumbent telephone and cable companies have made back their initial investment costs because they entered the market as monopolies in the old days and likely enjoyed favorable financing as safe bets (nothing is safer to invest in than a monopoly). Our current incumbents enjoyed a litany of advantages for being the first to deploy. For example, many buildings as they were constructed prospectively required the installation of a telephone and cable line, which in essence gave them virtually a free ride to customers that new entrants will not enjoy.&lt;/p&gt;
&lt;p&gt;This is also why it has been very hard to get new competition because they have to navigate the infrastructure deployment and rights-of-way from a very different position. Another example, when Google was deploying its fiber network in Austin, Texas, it needed to run its wires along the telephone pole system. Unfortunately for Google, AT&amp;amp;T owned many of those poles and simply &lt;a href=&quot;https://arstechnica.com/tech-policy/2013/12/why-att-says-it-can-deny-google-fiber-access-to-its-poles-in-austin&quot;&gt;denied them access to build in their entirety&lt;/a&gt;. This is a big reason why &lt;a href=&quot;https://www.eff.org/deeplinks/2017/06/isps-across-country-tell-chairman-pai-not-repeal-network-neutrality&quot;&gt;many small ISPs supported the FCC’s 2015 Open Internet Order&lt;/a&gt; because it guaranteed them rights to access infrastructure if it was owned by an incumbent and prohibited by law the conduct AT&amp;amp;T exhibited in Austin, Texas.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;The World’s Fastest ISP Adheres to Network Neutrality and Privacy and Still Makes a Profit&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;In addition to ISPs not needing new huge sums of money to upgrade and operate their networks, we have a case study that shows that adhering to network neutrality principles while also respecting user privacy by not monetizing their personal information doesn’t prevent ISPs from making the money they need to deploy high-speed affordable Internet.&lt;/p&gt;
&lt;p&gt;EPB Fiber Optics, a community broadband company run by Chattanooga, Tennessee, offers both gigabit broadband and 10-gigabit broadband as well. A decade of their financial information, including how much they invest, how much the network costs, and how much profit they are making, is &lt;a href=&quot;https://epb.com/about-epb/leadership-annual-reports&quot;&gt;available here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;378&quot; src=&quot;https://www.eff.org/files/2018/05/04/epb_financials.jpeg&quot; width=&quot;671&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Here is what the data demonstrates in regards to the scalability of fiber optic cable and why ISPs are misleading policymakers when they assert that Internet usage or high bandwidth applications drive their costs.&lt;/p&gt;
&lt;p&gt;At the launch of its gigabit broadband service in 2009, EPB started in the red with capital expenditures (money spent on purchasing equipment and improving infrastructure) and operating expenses (maintaining and running the network) far above the revenue. But once they had about 35,000 customers, the network became profitable (all while following network neutrality and not monetizing the personal information of their customers).&lt;/p&gt;
&lt;p&gt;In the years that followed, the revenue gained from adding new customers far outpaced their maintenance costs and money spent upgrading their network. It is almost impossible to detect the increased spending EPB underwent to upgrade to a 10-gigabit network in 2016. Often &lt;a href=&quot;https://www.engadget.com/2014/03/21/atandt-netflix-bandwidth-problems/&quot;&gt;ISPs blame companies like Netflix for driving their costs&lt;/a&gt;, yet there is no evidence that increased consumption by the customers of EPB resulted in an increase in their costs that wasn’t already more than compensated by their $50-$70 a month charge. If it was true that high bandwidth applications incurred uniquely high costs to ISPs, then the revenue line would not be outpacing the operating expenses line year after year of growth as online video consumption grew. Those lines would have to be moving closer together.&lt;/p&gt;
&lt;p&gt;EPB is able to deploy a 21st Century ISP with the world’s fastest service with just 90,000 customers today while following network neutrality and forgoing extra profits from monetizing personal information like web browsing history. Meanwhile, Comcast sits on about 25 million customers and made $8.6 billion in profits for 2016 (and this was before Congress cut the corporate tax rates). At the same time, both AT&amp;amp;T and Verizon each collected around $13 billion each in profits for 2016.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Charging Low Prices for Huge Amounts of Bandwidth Is Not Exclusively Reserved for Community Broadband&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Being able to provide affordable high-speed Internet for a profit while respecting network neutrality and user privacy is something the competitors to the incumbents have repeatedly demonstrated.  Take regional provider Sonic for an example and their Brentwood, California deployment where the city’s infrastructure policies eliminated a majority of the costs of building the ISP. Right now Sonic sells gigabit broadband in the city of Brentwood at $40 a month, one of the lowest priced offerings for gigabit service. Again, they are doing this for a profit all while following network neutrality and protecting their customers’ privacy (Sonic regularly &lt;a href=&quot;https://www.mercurynews.com/2017/04/27/sonic-ceo-talks-expansion-broadband-policy/&quot;&gt;supports laws codifying their commitments&lt;/a&gt; as well). &lt;/p&gt;
&lt;p&gt;The provisioning of the service is not the expensive part of an ISPs business, and the usage of Internet access is not an unsustainable cost driver. If one would to properly diagnose the most efficient way to reduce ISP costs, they would look towards city planning and learn from Brentwood. The Sonic gigabit network all came about because in 1999 the city adopted a building code conduit requirement for all new development. The code required developers to build a 4-inch conduit pipe and then deed it back to the city. The policy goal at the time was to lay infrastructure with the hope of franchising a second cable television provider. However, no new cable company arrived and the city-owned nearly 120 to 150 miles of unused conduit reaching 8,000 homes and commercial zones built since 1999.&lt;/p&gt;
&lt;p&gt;In response to the proposal by Sonic to utilize the infrastructure, the city issued a Request for Expression of Interest (RFEI) highlighting the available conduit to the companies Astound, AT&amp;amp;T, Comcast, Google, Level 3, Lit San Leandro, XO Communications, and Sonic. However, the only respondent to the RFEI was Sonic and &lt;a href=&quot;http://brentwood.granicus.com/MetaViewer.php?view_id=36&amp;amp;clip_id=1846&amp;amp;meta_id=151754&quot;&gt;so the city chose them to deploy the network&lt;/a&gt;, which was so lucrative an agreement that Sonic agreed to provide the local schools within the conduit network free gigabit service among other things while still making money.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;We Already Pay More Than Enough to Get High-Speed, Affordable Internet Where Our Privacy is Protected and Net Neutrality is Preserved&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;The fact is, more than half of Americans have one choice for high-speed broadband and the incumbents know they can rest on their legacy investments to maximize profits until they face competition from other broadband providers. They don’t have to make their service better or faster, because most of their customers have to choose between them or nothing. They worked so hard to repeal our privacy protections and repeal net neutrality because since so many of us lack choice in the market they can start increasing their profits and give nothing to the consumer in return.&lt;/p&gt;
&lt;p&gt;No regulations banning paid prioritization have prevented them from upgrading their network. We see this in both Chattanooga’s EPB and Brentwood’s Sonic, which operate perfectly well while following network neutrality and have forgoing extra profits from monetizing our personal information.&lt;/p&gt;
&lt;p&gt;Net neutrality ensures that ISPs are prevented from harming the competition they face from edge providers (particularly video providers that compete with television such Hulu, Netflix, and Amazon) as well as preserve the innovation benefits an open Internet yields. It also prohibits them from charging unjustified fees on Internet services that will do nothing to improve the Internet but will do real harm to the free and open nature of the network we have enjoyed for decades.&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 16:20:40 +0000</pubDate>
<dc:creator>davegauer</dc:creator>
<og:type>article</og:type>
<og:title>The Big Lie ISPs Are Spreading in State Legislatures Is That They Don’t Make Enough Money</og:title>
<og:url>https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</og:url>
<og:description>In their effort to prevent states from protecting a free and open Internet, a small handful of massive and extraordinarily profitably Internet service providers (ISPs) are telling state legislatures that network neutrality would hinder their ability to raise revenues to pay for upgrades and thus...</og:description>
<og:image>https://www.eff.org/files/2016/04/12/og-neutrality-banner.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2018/05/big-lie-isps-are-spreading-state-legislatures-they-dont-make-enough-money</dc:identifier>
</item>
<item>
<title>Microsoft Turned Consumers Against the Beloved Skype Brand</title>
<link>https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</guid>
<description>&lt;p&gt;It's relatively easy these days to find critics of Skype, the popular online calling service that Microsoft acquired in 2011 for $8.5 billion. Former devotees routinely gripe on social media that the software has become too difficult to use. On the Apple App store and Google Play store, negative reviews of the smartphone app are piling up, citing everything from poor call quality to gluttonous battery demand.&lt;/p&gt;


&lt;p&gt;In March tech investor and commentator Om Malik summarized the negativity by tweeting that Skype was “a turd of the highest quality” and directing his ire at its owner. “Way to ruin Skype and its experience. I was forced to use it today, but never again.”&lt;/p&gt;


&lt;p&gt;Microsoft Corp. says the criticism is overblown and reflects, in part, people's grumpiness with software updates. There are also other factors undermining users’ affection for an internet tool that 15 years ago introduced the idea of making calls online, radically resetting the telecommunications landscape in the process.&lt;/p&gt;




&lt;p&gt;Since acquiring Skype from private equity investors, Microsoft has refocused the online calling service on the corporate market, a change that has made Skype less intuitive and harder to use, prompting many Skypers to defect to similar services operated by Apple, Google, Facebook and Snap.&lt;/p&gt;


&lt;p&gt;&lt;span&gt;The company hasn’t updated the number of Skype users since 2016, when it put the total at 300 million. Some analysts suspect the numbers are flat at best, and two former employees describe a general sense of panic that they’re actually falling. The ex-Microsofters, who requested anonymity to discuss confidential statistics, say that as late as 2017 they never heard a figure higher than 300 million discussed internally.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Chief Executive Officer Satya Nadella has repeatedly said he wants the company’s products to be widely used and loved. By turning Skype into a key part of its lucrative Office suite for corporate customers, Microsoft is threatening what made it appealing to regular folks in the first place. “It is like Tim Tebow trying to be a baseball player,” Malik says. “The product is so confusing, kludgey and unusable.”&lt;/p&gt;
&lt;p&gt;Founded in 2003 by a pair of Nordic entrepreneurs, Skype freed tens of millions of people from the tyranny of the phone companies by offering cheap overseas calls. Most chatted free, and Skype made money charging for prepaid calls to regular phones. The company has cycled through various owners, including EBay. By 2011, the company was controlled by a Silver Lake-led consortium of investors and shopping itself to potential acquirers including Google and Microsoft even as it prepared for an initial public offering.&lt;/p&gt;
&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-327624388&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i3byu9.s1Be8/v3/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i3byu9.s1Be8/v3/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Steve Ballmer discusses Microsoft's acquisition of Skype Technologies SA, in 2011. &lt;/p&gt;
&lt;p&gt;Photographer: Noah Berger/Bloomberg&lt;/p&gt;
&lt;p&gt;Keen to reduce Microsoft’s reliance on the personal computer, former CEO Steve Ballmer saw in Skype an internet brand that was so popular it had become a verb. Having erred previously by acquiring No. 2 players to save money, Ballmer decided to buy the leading incumbent and pay a 40 percent premium over what Skype valued itself at the time.&lt;/p&gt;

&lt;p&gt;“It was the biggest asset in the space at the time with the most recognized brand,” says Lori Wright, who joined the Skype team as general manager last year from video-conference rival BlueJeans. “It was an opportunistic way for Microsoft to enter into something that was going to be significant.”&lt;/p&gt;
&lt;p&gt;After the acquisition, Microsoft executive and former Skype CFO Bill Koefoed was routinely reminded of Skype’s popularity as a way to make cheap, or free, international calls. He recalls identifying himself to immigration officers on business trips overseas and constantly hearing variations of: I use Skype to call my grandmother!  “Skype was such an iconic brand,” he says. &lt;/p&gt;
&lt;p&gt;Focusing on corporations was a reasonable strategy and one shared by Skype’s prior management. Originally Ballmer and company pledged to let Skype operate independently from Lync, Microsoft’s nascent internet phone service for corporations. But two years later the company began merging the two into Skype for Business and folded that into Office.&lt;/p&gt;

&lt;p&gt;Today, Microsoft is using Skype for Business to help sell subscriptions to its cloud-based Office 365 and steal customers from Cisco. Microsoft has essentially turned Skype into a replacement for a corporate telephone system—with a few modern features borrowed from instant messaging, artificial intelligence and social networking. Teams, the company’s year-old version of Slack, is being merged with Skype for Business. LinkedIn, another acquisition, will provide work bios of the people Skypers are about to call. Drawing on Microsoft’s pioneering work in AI, Skype can now translate calls into 12 languages.&lt;/p&gt;
&lt;p&gt;As proof that the strategy is working, Microsoft points to a roster of blue-chip customers. Among them is General Electric, which says it rolled out Skype for Business to 220,000 employees late last year and is logging 5.5 million meeting minutes a day. Accenture and some of the largest banks are also big users, according to Office 365 marketing vice president Ron Markezich. In a Forrester survey of 6,259 information workers, 28 percent said they used Skype for Business for conferencing, compared with 21 percent for Cisco’s products.&lt;/p&gt;&lt;p&gt;Atkins, a U.K. engineering-design company that’s part of SNC Lavalin Group, says its 18,500 workers use Skype for telephone service, conferences and sharing projects – to the tune of 10 million minutes a month. “We did a full competitor analysis but we trusted Microsoft's vision,” says Atkins collaboration manager Nick Ledger, who says he likes how Skype is integrated with Office. “Very rarely do we have any problems.”&lt;/p&gt;
&lt;p&gt;But Microsoft has paid a price for prioritizing corporations over consumers. The former seek robust security, search and the ability to host town halls; the latter ease-of-use and decent call quality. Inevitably, the complexity of the corporate software crowds out the simplicity consumers prefer. While the company maintains two separate apps, the underlying technology is the same and it's built with workers in mind. &lt;/p&gt;
&lt;p&gt;Skype has tried to be all things to all people, “and almost all those things are executed better elsewhere,” says Matthew Culnane, a user experience and content strategist at the U.K.’s Open University.&lt;/p&gt;
&lt;p&gt;It doesn’t help that Microsoft keeps overhauling the app. A redesign last summer sent ratings plunging. In a scorching Twitter commentary, security journalist Brian Krebs said finding basic buttons was a PITA (pain in the ass) and that the recent update was “probably the worst so far.” The tweet—and retweets—got the attention of Skype’s social network team.  “Brian, we’re sorry to hear this,” a representative replied. “Would love to hear more feedback and see if there’s anything we can help with.”&lt;/p&gt;
&lt;p&gt;“&lt;span&gt;There was a demographic that loved Skype for what it was; it was clean and simple,” says Carolina Milanesi, an analyst at Creative Strategies. “That's no longer the case.” Milanesi once paid for a Skype subscription for her mother in Italy. Then her mom got an iPad and now they talk on Apple Facetime. Millions do the same, despite the fact that Skype apps are a download away on iPhone and Android smart phones and tablets. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Microsoft’s focus on the corporate market may also have blinded it to the rise of WhatsApp, Facebook Messenger and Tencent’s WeChat. Microsoft killed off Windows Live Messenger five years ago, right when WhatsApp was amassing hundreds of millions of users around the globe. The instant messaging service now has 1.5 billion users and has started adding key Skype features. Meanwhile, upstarts like Discord, a free voice and text chat app for gamers, are gaining users.&lt;/p&gt;
&lt;p&gt;People who have remained loyal to Skype despite all the alternatives complain most about service quality—calls that don't connect, connections that drop every other word, address books that disappear after software updates. Business customers have similar issues too, according to Forrester analyst Nick Barber. “It's not uncommon for me to talk to companies that have Skype for Business, yet they are still looking at other options because it's not working for them,” he said. “It's usually around the call quality and consistency both with audio and video.”&lt;/p&gt;
&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;Microsoft says it takes quality seriously and tracks dropped calls to ascertain what went wrong. Wright says sometimes the customer’s network is at fault, not Skype. She argues that most companies are struggling to perfect the technology. “People get frustrated that it doesn’t work like dial-tone and say ‘I am just going to switch to the next app or service,’ only to find out that the next service has the same issue,” she says.  “We are making rapid progress.”&lt;/p&gt;
&lt;p&gt;Downloads of Skype’s Android app reached 1 billion in October, although Microsoft doesn’t say how often people log on. Ratings are starting to recover from the initial nosedive as customers become accustomed to the changes. “It’s a really radical redesign, so we thought there was going to be a pretty negative reaction; we were braced for that,” Wright says. “What we are seeing now is they don’t hate it anymore.”&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 14:31:37 +0000</pubDate>
<dc:creator>gorbachev</dc:creator>
<og:description>Since buying the internet phone service in 2011, Microsoft has signed up corporations like GE and alienated long-time Skypers.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/igQchLPaTzgE/v1/1200x800.jpg</og:image>
<og:title>Don't Skype Me: How Microsoft Turned Consumers Against a Beloved Brand</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-05-10/don-t-skype-me-how-microsoft-turned-consumers-against-a-beloved-brand</dc:identifier>
</item>
<item>
<title>Amazon Aurora Backtrack</title>
<link>https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</link>
<guid isPermaLink="true" >https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</guid>
<description>&lt;p&gt;We’ve all been there! You need to make a quick, seemingly simple fix to an important production database. You compose the query, give it a once-over, and let it run. Seconds later you realize that you forgot the WHERE clause, dropped the wrong table, or made another serious mistake, and interrupt the query, but the damage has been done. You take a deep breath, whistle through your teeth, wish that reality came with an Undo option. Now what?&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;New Amazon Aurora Backtrack&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;Today I would like to tell you about the new backtrack feature for &lt;a href=&quot;https://aws.amazon.com/rds/aurora/&quot; title=&quot;&quot;&gt;Amazon Aurora&lt;/a&gt;. This is as close as we can come, given present-day technology, to an Undo option for reality.&lt;/p&gt;
&lt;p&gt;This feature can be enabled at launch time for all newly-launched Aurora database clusters. To enable it, you simply specify how far back in time you might want to rewind, and use the database as usual (this is on the &lt;strong&gt;Configure advanced settings&lt;/strong&gt; page):&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_config_backtrack_3.png&quot; width=&quot;810&quot; height=&quot;445&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Aurora uses a distributed, log-structured storage system (read &lt;a href=&quot;http://allthingsdistributed.com/files/p1041-verbitski.pdf&quot;&gt;Design Considerations for High Throughput Cloud-Native Relational Databases&lt;/a&gt; to learn a lot more); each change to your database generates a new log record, identified by a Log Sequence Number (LSN). Enabling the backtrack feature provisions a FIFO buffer in the cluster for storage of LSNs. This allows for quick access and recovery times measured in seconds.&lt;/p&gt;
&lt;p&gt;After that regrettable moment when all seems lost, you simply pause your application, open up the Aurora Console, select the cluster, and click &lt;strong&gt;Backtrack DB cluster:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtrack_menu_2.png&quot; width=&quot;590&quot; height=&quot;432&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then you select &lt;strong&gt;Backtrack&lt;/strong&gt; and choose the point in time just before your epic fail, and click &lt;strong&gt;Backtrack DB cluster&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtrack_now_2.png&quot; width=&quot;810&quot; height=&quot;508&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then you wait for the rewind to take place, unpause your application and proceed as if nothing had happened. When you initiate a backtrack, Aurora will pause the database, close any open connections, drop uncommitted writes, and wait for the backtrack to complete. Then it will resume normal operation and be able to accept requests. The instance state will be &lt;strong&gt;backtracking&lt;/strong&gt; while the rewind is underway:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtracking_1.png&quot; width=&quot;860&quot; height=&quot;316&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The console will let you know when the backtrack is complete:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/pit_backtracked_1.png&quot; width=&quot;900&quot; height=&quot;162&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If it turns out that you went back a bit too far, you can backtrack to a later time. Other Aurora features such as &lt;a href=&quot;https://aws.amazon.com/blogs/aws/amazon-aurora-fast-database-cloning/&quot;&gt;cloning&lt;/a&gt;, backups, and restores continue to work on an instance that has been configured for backtrack.&lt;/p&gt;
&lt;p&gt;I’m sure you can think of some creative and non-obvious use cases for this cool new feature. For example, you could use it to restore a test database after running a test that makes changes to the database. You can initiate the restoration from the API or the CLI, making it easy to integrate into your existing test framework.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Things to Know&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;This option applies to newly created MySQL-compatible Aurora database clusters and to MySQL-compatible clusters that have been restored from a backup. You must opt-in when you create or restore a cluster; you cannot enable it for a running cluster.&lt;/p&gt;
&lt;p&gt;This feature is available now in all AWS Regions where Amazon Aurora runs, and you can start using it today.&lt;/p&gt;
&lt;p&gt;— &lt;a href=&quot;https://twitter.com/jeffbarr&quot;&gt;Jeff&lt;/a&gt;;&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 13:53:48 +0000</pubDate>
<dc:creator>jeffbarr</dc:creator>
<og:title>Amazon Aurora Backtrack – Turn Back Time | Amazon Web Services</og:title>
<og:type>article</og:type>
<og:url>https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</og:url>
<og:description>We’ve all been there! You need to make a quick, seemingly simple fix to an important production database. You compose the query, give it a once-over, and let it run. Seconds later you realize that you forgot the WHERE clause, dropped the wrong table, or made another serious mistake, and interrupt the query, but the […]</og:description>
<og:image>https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2018/05/10/pit_backtrack_now_2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/</dc:identifier>
</item>
<item>
<title>Young Chinese are sick of working long hours</title>
<link>http://www.bbc.com/capital/story/20180508-young-chinese-are-sick-of-working-overtime</link>
<guid isPermaLink="true" >http://www.bbc.com/capital/story/20180508-young-chinese-are-sick-of-working-overtime</guid>
<description>&lt;p&gt;Glitzy nightlife, museums, live concerts – Shanghai promises everything that attracts young professionals to an expensive city. But Li Zhepeng, a 25-year-old who arrived from China’s heartland, wasn’t able to enjoy any of it.&lt;/p&gt;&lt;p&gt;Instead, he spent his time at the office working. He would clock in at 9am, after a 90-minute commute to the outer suburbs where his e-commerce firm rented cheap office space, and usually left well after 8pm.&lt;/p&gt;&lt;p&gt;“Sometimes, there was no reason for the long hours – it was just the whole work culture,” Li says. The young professional was expected to stick to a grueling work schedule that has become so pervasive in Chinese companies that it’s now commonly referred to as 996: working from nine in the morning to nine in the evening, six days a week.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Refusing the 12-hour workday&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;As a low-level employee at an e-commerce site, Li was tasked with posting descriptions of toys and backpacks. He was even expected to work on Sundays, when he’d reply to questions from customers from Australia, Europe or the US from home.&lt;/p&gt;&lt;p&gt;For that, Li received a salary of 3,500 yuan a month, or about $560 (£406). That’s less than half of the monthly rental cost of a one-bedroom apartment outside the city centre, and so he’s sharing a small apartment with three flatmates.&lt;/p&gt;&lt;p&gt;Li said that initially he felt he couldn’t be too be picky: he had majored in English, not in one of the sought-after science or technology fields, and he had attended a low-ranked university. Many of his friends are unemployed.&lt;/p&gt;&lt;p&gt;But he nonetheless then became part of a phenomenon that experts have started to notice – young professionals pushing back against employers who expect them to work around the clock. &lt;/p&gt;&lt;blockquote readability=&quot;7&quot;&gt;&lt;p&gt; At the forefront are millennials who are often better educated, more aware of their rights and more interested in finding something fulfilling than the previous generation &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;At the forefront are millennials who are often better educated, more aware of their rights and more interested in finding something fulfilling than the previous generation. And as only children (China’s one-child policy wasn’t eased until 2015), they are also outspoken and pampered.&lt;/p&gt;&lt;p&gt;“In my experience young people, especially the post-90s generation, are reluctant to work overtime – they are more self-centered,” says labour rights expert Li Jupeng, one of many who have observed some millennials challenging the 996 concept.&lt;/p&gt;&lt;p&gt;The relative affluence of their parents and grandparents is part of the reason. China’s rapid economic transformation has given rise to a sizeable middle class, with almost 70% of the country’s urban population making between $9,000 and $34,000 annually in 2012. In 2000, that figure was just 4%.&lt;/p&gt;&lt;p&gt;As only children, millennials are receiving a lot of support from their families – including a financial safety net should their careers not go as planned.&lt;/p&gt;&lt;p&gt;Although their options for pushing back are limited, some are no longer willing to put in long hours for a meagre paycheck.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Legal dangers&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Li, for example, decided quickly that he hadn’t come to Shanghai to spend every waking hour in an office or commuting.&lt;/p&gt;&lt;p&gt;“You work around the clock, and you get very, very tired,” Li says. “But if you complain, they say you can just go and find another job.” After just 20 days on the job, he resigned.&lt;/p&gt;&lt;p&gt;In some cases, young workers have sued their employers. That’s according to a report by Zhang Xiaolin, a senior legal counsel at Wusong Network Technology (a Beijing-based law consulting company) and venture capital firm China Growth Capital.&lt;/p&gt;&lt;blockquote readability=&quot;6&quot;&gt;&lt;p&gt; It’s not just the hours, but also the pay &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;“Theoretically, a 996 work schedule is against the law,” she says. Companies may apply for special permission to adopt a 996 schedule if their business warrants it. Pilots or train conductors, for example, can work longer shifts than the eight hours stipulated under Chinese law. But e-commerce businesses like the one Li was working for do not qualify.&lt;/p&gt;&lt;p&gt;“So even if these companies try to apply for such working hours, most of them would not get approval from the labour administration,” Zhang says. In legal disputes, that can put the employee at an advantage.&lt;/p&gt;&lt;p&gt;It’s not just the hours, but also the pay – more than 40% of start-ups they interviewed did not have a clear compensation scheme for overtime, she added.&lt;/p&gt;&lt;p&gt;In his second job, also at an e-commerce firm, Li was more self-confident. He spoke to his boss, asked for a more manageable workload and to leave on time every once in a while. She agreed.&lt;/p&gt;&lt;p&gt;To most of his colleagues, speaking up was a brave move. “They said I was their idol,” he says.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;The birth of a punishing schedule&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;There are historical reasons behind the emergence of the 996 culture.&lt;/p&gt;&lt;p&gt;When China’s tech and start-up scene started to flourish in the early 2000s, most companies sought employees willing to work around the clock, something which helped some of them grow into the country’s biggest companies. Tech company Tencent, for example, is among the world’s five most valuable firms.&lt;/p&gt;&lt;p&gt;“For the last 10 or 15 years, the work culture has been extremely intense,” said William Bao Bean, a venture capitalist and the managing director of start-up accelerator Chinaccelerator.&lt;/p&gt;&lt;p&gt;And because China’s tech companies, who were among the first adopters of unpaid overtime, are now the largest employers, companies in other fields have also started to make their staffs work longer hours in a bid to match their success.&lt;/p&gt;&lt;p&gt;The normalisation of unpaid overtime led to the invention of the phrase 996 – but Bao Bean says the very existence of the phrase is also a sign that attitudes might be changing.&lt;/p&gt;&lt;blockquote readability=&quot;7&quot;&gt;&lt;p&gt; China has moved from a society that was told what to do, to one that is doing what it wants to – William Bao Bean &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;“The fact that there is now a word for it and that we are having a conversation about this shows that the market is maturing,” he says.&lt;/p&gt;&lt;p&gt;However, Bao Bean says that people who like their work environments are not grumbling about the hours. Companies who inspire their employees offer good compensation packages and that are prestigious can find people to work 996 without complaint, he says.&lt;/p&gt;&lt;p&gt;“China has moved from a society that was told what to do, to one that is doing what it wants to, and that’s also a millennial thing,” he says.&lt;/p&gt;&lt;p&gt;Software developer Johnson Wu works six days a week, about half of them on nine to nine schedule – not more than any other company would expect him to work. Often he gets home too late to put his child to bed and he hasn’t watched a TV series in years.&lt;/p&gt;&lt;p&gt;But his employer is Huawei, China’s biggest tech company by revenue, which has been growing faster than mobile phone competitor Apple. The pay is good and his company’s name is well respected. When he introduces himself as a staffer, people nod in recognition.&lt;/p&gt;&lt;p&gt;Li is trying to find something similar – a meaningful job, better pay perhaps or at least the chance for more professional development. He left his second job after about three months despite his negotiating success. The job, he said, didn’t make him happy and he didn’t get along with his boss.&lt;/p&gt;&lt;p&gt;He’s living off his meagre savings and says that his parents have offered to support him financially while he figures out what to do with his life. At the moment, he’s interviewing for a job with a travel company in Fiji. And in the meantime, he says: “I’m just going to relax.”&lt;/p&gt;&lt;p&gt;--&lt;/p&gt;&lt;p&gt;&lt;em&gt;To comment on this story or anything else you have seen on BBC Capital, please head over to our&lt;/em&gt;&lt;em&gt; &lt;a href=&quot;https://www.facebook.com/BBCCapital&quot;&gt;Facebook&lt;/a&gt; page or message us on &lt;a href=&quot;https://twitter.com/BBC_Capital&quot;&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;If you liked this story, sign up for the weekly bbc.com features &lt;/em&gt;&lt;em&gt;&lt;a href=&quot;http://pages.emails.bbc.com/subscribe/&quot;&gt;&lt;strong&gt;newsletter&lt;/strong&gt;&lt;/a&gt; called &quot;If You Only Read 6 Things This Week&quot;, a handpicked selection of stories from BBC Future, Culture, Capital and Travel, delivered to your inbox every Friday.&lt;/em&gt;&lt;/p&gt;
                        </description>
<pubDate>Thu, 10 May 2018 13:33:59 +0000</pubDate>
<dc:creator>bill38</dc:creator>
<og:title>Young Chinese are sick of working long hours</og:title>
<og:type>article</og:type>
<og:url>http://www.bbc.com/capital/story/20180508-young-chinese-are-sick-of-working-overtime</og:url>
<og:description>A familiar 12-hour, six-day-a-week working schedule in China powered by unpaid overtime is under threat – ambitious millennials have had enough.</og:description>
<og:image>http://ichef.bbci.co.uk/wwfeatures/live/624_351/images/live/p0/66/lm/p066lmgc.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.com/capital/story/20180508-young-chinese-are-sick-of-working-overtime</dc:identifier>
</item>
<item>
<title>Farewell from the Pineapple Fund</title>
<link>https://www.reddit.com/r/Bitcoin/comments/8ieffr/farewell_from_the_pineapple_fund/</link>
<guid isPermaLink="true" >https://www.reddit.com/r/Bitcoin/comments/8ieffr/farewell_from_the_pineapple_fund/</guid>
<description>&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;8671&quot;&gt;8671&lt;/span&gt;  · &lt;/p&gt;
&lt;p&gt;Farewell from the Pineapple Fund&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;419&quot;&gt;419&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/RcGxBedmGg_8nSQVPUB3Ek2qALBZvUi5VucJ70mYkhM.jpg&quot; width=&quot;70&quot; height=&quot;51&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Exactly 5 years ago Wired wrote &quot;The world’s most popular digital currency really is nothing more than an abstraction. So we’re destroying the private key used by our Bitcon wallet.&quot; The loss is currently worth $124,453.58&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;189&quot;&gt;189&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/VCn1ppoaTTeag-0mWydtxgMW4SuZZDF7cYatbgYC5-o.jpg&quot; width=&quot;70&quot; height=&quot;70&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Introducing rawtx, a mobile lightning wallet (supports testnet Android for now, iOS coming very soon)!&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;191&quot;&gt;191&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/qtky_DtnjM-OuLeqa3PcIoXkywVDRmHkLO2zJE-vOGs.jpg&quot; width=&quot;70&quot; height=&quot;39&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Novogratz on CNN: &quot;It's almost irresponsible not to invest in Bitcoin.&quot;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;142&quot;&gt;142&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/IgyWnkJnTD59PIzpvBomC8CeU1SrQ1DZQkOmHIWsd7U.jpg&quot; width=&quot;70&quot; height=&quot;41&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Marvel referencing cryptocurrency in one of its latest comics!&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;56&quot;&gt;56&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/kyFerHm8E0kslXC76ymgv35vgv5keREfHrchJXyHF9w.jpg&quot; width=&quot;70&quot; height=&quot;59&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Sweet sweet bitcoin !&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;136&quot;&gt;136&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/dQGcK49MFq_S1bQ2ag8ghNT2gM0DDuairBEJ7P7RlVM.jpg&quot; width=&quot;70&quot; height=&quot;39&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The Lightning network is starting to look beautiful! And I launched my Lnd node today :)&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;61&quot;&gt;61&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/QSkU-t93_qPH7XXVhXBbTeyoVnU_tNffd9FrJVCGXHI.jpg&quot; width=&quot;70&quot; height=&quot;46&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Nasdaq CEO says &quot;Cryptocurrency is the next step in currency&quot;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;40&quot;&gt;40&lt;/span&gt;  · &lt;/p&gt;
&lt;div class=&quot;read-next-thumbnail&quot;&gt;&lt;img src=&quot;https://b.thumbs.redditmedia.com/_hAWbKurz_kbaEJgL5yrIzaVBz-k_TtkmPovdK01zeM.jpg&quot; width=&quot;70&quot; height=&quot;39&quot; alt=&quot;&quot;/&gt;&lt;p&gt;0:19&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Trying to trade Bitcoin lately be like&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;score&quot; title=&quot;24&quot;&gt;24&lt;/span&gt;  · &lt;/p&gt;
&lt;p&gt;Huawei Is About to Give Chinese Users Easier Access to Bitcoin&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 13:18:19 +0000</pubDate>
<dc:creator>ca98am79</dc:creator>
<og:image>https://www.redditstatic.com/icon.png</og:image>
<og:description>Hi everyone, It's been five months, and having just made my last PF donation to the Internet Archive, I figure it might be a good time to say...</og:description>
<og:title>Farewell from the Pineapple Fund • r/Bitcoin</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reddit.com/r/Bitcoin/comments/8ieffr/farewell_from_the_pineapple_fund/</dc:identifier>
</item>
<item>
<title>Multiple OS Vendors Release Security Patches After Misinterpreting Intel Docs</title>
<link>https://www.bleepingcomputer.com/news/security/multiple-os-vendors-release-security-patches-after-misinterpreting-intel-docs/</link>
<guid isPermaLink="true" >https://www.bleepingcomputer.com/news/security/multiple-os-vendors-release-security-patches-after-misinterpreting-intel-docs/</guid>
<description>&lt;p&gt;&lt;img alt=&quot;Source code&quot; height=&quot;460&quot; src=&quot;https://www.bleepstatic.com/content/posts/2018/05/09/Source-bytecode.png&quot; width=&quot;1250&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Almost all major OS vendors released security patches yesterday after a researcher discovered that some OS makers have misinterpreted an Intel CPU debug feature and left their systems open to attacks.&lt;/p&gt;
&lt;p&gt;The vulnerability is in how the OS vendors implemented a hardware debug mechanism for Intel x86-64 architectures —and more specifically the MOV SS and POP SS instructions.&lt;/p&gt;
&lt;p&gt;&quot;In certain circumstances after the use of certain Intel x86-64 architecture instructions, a debug exception pointing to data in a lower ring (for most operating systems, the kernel Ring 0 level) is made available to operating system components running in Ring 3,&quot; the CERT/CC team explained in an &lt;a href=&quot;https://www.kb.cert.org/vuls/id/631579&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;advisory&lt;/a&gt; published yesterday.&lt;/p&gt;
&lt;p&gt;Explained in layman's terms, &quot;this may allow an attacker to utilize operating system APIs to gain access to sensitive memory information or control low-level operating system functions.&quot;&lt;/p&gt;
&lt;h2&gt;OS vendors coordinate and release patches at the same time&lt;/h2&gt;
&lt;p&gt;Operating systems that mishandle this debug exception and had their systems open to attacks include Apple, Microsoft, FreeBSD, Red Hat, Ubuntu, SUSE Linux, and other Linux distros based on the Linux Kernel —which is also affected.&lt;/p&gt;
&lt;p&gt;Further, the issue also made it into virtualization software like VMWare and Xen. CERT/CC has a &lt;a href=&quot;https://www.kb.cert.org/vuls/byvendor?searchview&amp;amp;Query=FIELD+Reference=631579&amp;amp;SearchOrder=4&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;page&lt;/a&gt; dedicated to the patch status of each affected vendor.&lt;/p&gt;
&lt;p&gt;Fixing the bug and having synchronized patches out by yesterday was an industry-wide effort, one that deserves praises, compared to the jumbled Meltdown and Spectre patching process.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot; data-lang=&quot;en&quot; readability=&quot;7.0872483221477&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;a href=&quot;https://t.co/E3ZoDQ5XC9&quot; rel=&quot;nofollow&quot;&gt;https://t.co/E3ZoDQ5XC9&lt;/a&gt; - here it is folks. This fix represents amazing collaboration between Microsoft and the OSS community. I was able to reach out to a number of BSD groups, collaborate with them and sync our releases to protect ALL our customers.&lt;/p&gt;
—  Nate Warfield  (@dk_effect) &lt;a href=&quot;https://twitter.com/dk_effect/status/993903701419999232?ref_src=twsrc%5Etfw&quot; rel=&quot;nofollow&quot;&gt;May 8, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot; data-lang=&quot;en&quot; readability=&quot;7.178247734139&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;As an industry we owe it to our customers to collaborate with others, and this needs to become the new normal if we expect to be successful. Connecting with others at conferences is more than exchanging business cards; it's about taking security to the next level! &lt;a href=&quot;https://t.co/M6k7VMWkIK&quot; rel=&quot;nofollow&quot;&gt;https://t.co/M6k7VMWkIK&lt;/a&gt;&lt;/p&gt;
— Nate Warfield (@dk_effect) &lt;a href=&quot;https://twitter.com/dk_effect/status/993915944270315520?ref_src=twsrc%5Etfw&quot; rel=&quot;nofollow&quot;&gt;May 8, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2&gt;Unclear and incomplete docs deemed cause of the problem&lt;/h2&gt;
&lt;p&gt;The issue —tracked as CVE-2018-8897— is not remotely exploitable, and an attacker needs to have already infected a PC with malware or must have access to a logged-in account to run the malicious code that exploits this vulnerability.&lt;/p&gt;
&lt;p&gt;In the best case scenario, an attacker could elevate the access privileges of his code to kernel level, and then use this access to perform other operations.&lt;/p&gt;
&lt;p&gt;The issue was discovered by Nick Peterson of Everdox Tech, LLC. Both Peterson and the CERT/CC team blamed the &quot;unclear and perhaps even incomplete documentation&quot; relating the use of the MOV SS and POP SS instructions, as the main reason why this bug made it into the kernels of so many different operating systems, practically in the same way.&lt;/p&gt;
&lt;p&gt;Peterson published a &lt;a href=&quot;http://everdox.net/popss.pdf&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;PDF report&lt;/a&gt; detailing the bug in more depth.&lt;/p&gt;

</description>
<pubDate>Thu, 10 May 2018 11:12:42 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:url>https://www.bleepingcomputer.com/news/security/multiple-os-vendors-release-security-patches-after-misinterpreting-intel-docs/</og:url>
<og:type>article</og:type>
<og:title>Multiple OS Vendors Release Security Patches After Misinterpreting Intel Docs</og:title>
<og:description>Almost all major OS vendors released security patches yesterday after a researcher discovered that some OS makers have misinterpreted an Intel CPU debug feature and left their systems open to attacks.</og:description>
<og:image>https://www.bleepstatic.com/content/posts/2018/05/09/Source-bytecode.png</og:image>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bleepingcomputer.com/news/security/multiple-os-vendors-release-security-patches-after-misinterpreting-intel-docs/</dc:identifier>
</item>
<item>
<title>Ubuntu 18.04: Unity is gone, Gnome is back, and Ubuntu has never been better</title>
<link>https://arstechnica.com/information-technology/2018/05/ubuntu-18-04-the-return-of-a-familiar-interface-marks-the-best-ubuntu-in-years/</link>
<guid isPermaLink="true" >https://arstechnica.com/information-technology/2018/05/ubuntu-18-04-the-return-of-a-familiar-interface-marks-the-best-ubuntu-in-years/</guid>
<description>&lt;aside id=&quot;social-left&quot;&gt;&lt;a title=&quot;130 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/information-technology/2018/05/ubuntu-18-04-the-return-of-a-familiar-interface-marks-the-best-ubuntu-in-years/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-before&quot;&gt;reader comments&lt;/span&gt; &lt;span class=&quot;comment-count-number&quot;&gt;211&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;&lt;span&gt;Share this story&lt;/span&gt;    &lt;/div&gt;
&lt;/aside&gt;&lt;div class=&quot;gallery shortcode-gallery gallery-wide&quot;&gt;
&lt;ul&gt;&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.55.02-PM-150x150.png&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.55.02-PM.png&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.55.02-PM-980x546.png 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.55.02-PM-1440x802.png 2560&quot; data-sub-html=&quot;#caption-1301149&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;It's time for an upgrade to Bionic Beaver.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.57.24-PM-150x150.png&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.57.24-PM.png&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.57.24-PM-980x552.png 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-2.57.24-PM-1440x811.png 2560&quot; data-sub-html=&quot;#caption-1301155&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;Ubuntu 18.04 follows the lead set by 17.10 and uses the GNOME interface, but it defaults to the Xorg rendering engine instead of Wayland (which was used in the previous release).&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb15-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb15.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb15.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb15.jpg 2560&quot; data-sub-html=&quot;#caption-1301001&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;The major interface changes to Ubuntu in 18.04 will be familiar territory to GNOME users—especially those who have used recent Debian distributions and Ubuntu 17.10 (Artful Aardvark). To those who are used to Ubuntu 16.04 (and liked it), it will take a little getting used to.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-3.49.56-PM-150x150.png&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-3.49.56-PM.png&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-3.49.56-PM-980x867.png 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/Screen-Shot-2018-04-30-at-3.49.56-PM-1440x1274.png 2560&quot; data-sub-html=&quot;#caption-1301201&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;Here's the application trays and settings screens of 16.04 and 18.04 side by side to highlight the differences.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver1-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver1.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver1.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver1.jpg 2560&quot; data-sub-html=&quot;#caption-1301027&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;Ubuntu 18.04 offers an alternate minimum install that includes just the basics and the Firefox Web browser—an install that makes it simpler to make corporate images.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver2-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver2.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver2.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver2.jpg 2560&quot; data-sub-html=&quot;#caption-1301029&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;As with previous releases, you can encrypt the entire boot disk for security...&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver3-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver3.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver3.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver3.jpg 2560&quot; data-sub-html=&quot;#caption-1301031&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;...and unlock it with a password at power-up.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver7-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver7.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver7.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver7.jpg 2560&quot; data-sub-html=&quot;#caption-1301039&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;The full install of Bionic Beaver includes some of the usual software package suspects, including the RhythmBox music application and Shotwell photo manager.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb10-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb10.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb10.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb10.jpg 2560&quot; data-sub-html=&quot;#caption-1300991&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;LibreOffice is also part of the default (non-minimal) install.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver6-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver6.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver6.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bionicbeaver6.jpg 2560&quot; data-sub-html=&quot;#caption-1301037&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;But full integration of the Snap universal Linux software package installer in Ubuntu's Apps store now means it's easier to add new, containerized applications—without concerns about dependency issues.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb20-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb20.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb20.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb20.jpg 2560&quot; data-sub-html=&quot;#caption-1301011&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;These applications are all available as &quot;snaps&quot; now, including Slack.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb21-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb21.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb21-980x557.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb21.jpg 2560&quot; data-sub-html=&quot;#caption-1301013&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;Can't live without Slack, now, can we?&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb16-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb16.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb16.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb16.jpg 2560&quot; data-sub-html=&quot;#caption-1301003&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;Livepatch, a feature that automatically applies security patches without a need for a reboot, is now included as part of the Ubuntu LTS default install. It requires creating an Ubuntu One account.&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb19-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb19.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb19.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/04/bb19.jpg 2560&quot; data-sub-html=&quot;#caption-1301009&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;You can opt out of sending metrics back, but Mark Shuttleworth says that the metadata will help guide decisions about future releases and give Canonical a picture of what kind of hardware people are installing Ubuntu on.&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;Canonical &lt;a href=&quot;https://arstechnica.com/information-technology/2018/04/bionic-beaver-a-first-look-at-ubuntus-latest-lts-desktop/&quot;&gt;recently released&lt;/a&gt; Ubuntu 18.04, the company's latest iteration of its popular Linux distribution, nicknamed Bionic Beaver. Ubuntu 18.04 is a Long Term Support (LTS) release and will receive updates and support from Canonical until April 2023. But more notably...&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arstechnica.com/information-technology/2017/04/ubuntu-unity-is-dead-desktop-will-switch-back-to-gnome-next-year/&quot;&gt;Unity is gone&lt;/a&gt;. GNOME is back. And Ubuntu has never been better.&lt;/p&gt;
&lt;p&gt;The demise of the company's Unity desktop, which Canonical abandoned to focus on its work for server and IoT systems, comes &lt;a href=&quot;https://arstechnica.com/information-technology/2011/05/riding-the-narwhal-ars-reviews-unity-in-ubuntu-1104/6/&quot;&gt;nearly seven years&lt;/a&gt; after it first replaced GNOME 2. While the Unity user interface was very much a love it or hate it experience, it was (for better or worse) the thing that defined Ubuntu for nearly the past decade. You might think the end of Unity would leave Ubuntu rudderless and drifting, but I'd argue it has done just the opposite.&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Bionic Beaver marks the first time LTS release users get a look at &lt;a href=&quot;https://arstechnica.com/gadgets/2017/11/ubuntu-17-10-return-of-the-gnome/&quot;&gt;Ubuntu's new GNOME-based desktop&lt;/a&gt;. And for the first time in quite a while, Ubuntu feels like a distro that is firing on all cylinders, turning out what might be its strongest release ever, in an LTS package no less. Not only is 18.04 well worth the upgrade—especially for those coming all the way from &lt;a href=&quot;https://arstechnica.com/information-technology/2016/05/ubuntu-16-04-proves-even-an-lts-release-can-live-at-linuxs-bleeding-edge/&quot;&gt;the last LTS release (16.04)&lt;/a&gt;—it's worth checking out even if you use a completely different distro.&lt;/p&gt;
&lt;p&gt;If you've been using last autumn's &lt;a href=&quot;https://arstechnica.com/gadgets/2017/11/ubuntu-17-10-return-of-the-gnome/&quot;&gt;17.10 release&lt;/a&gt;, you're already familiar with the new, slightly customized version of GNOME arriving to replace Ubuntu's Unity desktop. That said, 17.10 was very much a test release, one that had some serious hiccups thanks to an installer bug that wiped out some hardware. With 18.04, the testing is over and polish has been applied (and in some cases things have reverted back to even stabler options). In my several months of testing throughout the beta release cycle, 18.04 has performed rock solid.&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;
While much of the work for this release has gone into the transition from Unity to GNOME and making sure that's a smooth experience for desktop users, that's far from the only story here. In fact, that effort isn't even the most interesting part of what's new in 18.04. Much of what's great in this release isn't aimed at the desktop. Rather, server users deploying Ubuntu on any one of the major cloud platforms will really enjoy this latest iteration.
&lt;p&gt;That reality might be a little disconcerting to desktop users, many of whom are already convinced Ubuntu is going to abandon the desktop in favor of the more profitable worlds of server and IoT, but I don't think that's the case. If nothing else, Canonical knows developers need a solid desktop on which to do their work, so Ubuntu is unlikely to get rid of its desktop just because it's less profitable. While it's purely anecdotal, most developers I've met and worked with who used Ubuntu did so because they got used to it on a server first. That's why it makes sense of Canonical to focus on servers: not only is it where the money is, it's where a good portion of its desktop users is coming from.&lt;/p&gt;
&lt;p&gt;Even if the desktop became a purely communally driven project with very little input from Canonical—which, again, I don't see happening, but hypothetically—I think it's in a better position to survive, even thrive, with its new GNOME interface than with Unity. GNOME certainly isn't going anywhere, and while Canonical has already started contributing upstream, the bulk of the work being done is well outside Canonical's influence. By comparison, Unity was solely the work of Canonical developers.&lt;/p&gt;
&lt;p&gt;So the short story is Unity is gone, but there's no need to panic. Not only is the transition to GNOME pretty smooth thanks to Canonical's tweaks to GNOME Shell, there are plenty of other flavors of Ubuntu out there to choose from. There are, in fact, seven official flavors of Ubuntu, most of which offer an LTS release (though in the case of flavors, LTS usually means three years, not five). We'll look closer at several flavors of Ubuntu, but first it's time to reflect on the new default GNOME most users will see.&lt;/p&gt;
&lt;h2 id=&quot;ubuntu-gnome&quot;&gt;Ubuntu GNOME&lt;/h2&gt;
&lt;p&gt;For those upgrading from the last LTS release, you're in for something of a shock. This is without a doubt the single biggest change in an Ubuntu release since Canonical dumped GNOME 2 for Unity. Nearly every part of Ubuntu 18.04 has changed, been improved, or is completely new compared to 16.04. There's a new desktop, a new lock screen, some new default apps, and (of course) a new kernel under the hood.&lt;/p&gt;
&lt;aside class=&quot;pullbox sidebar story-sidebar right&quot;&gt;
&lt;/aside&gt;&lt;p&gt;I'll start with the most immediately obvious change, the new GNOME desktop. I won't sugar coat it; the most challenging part of the transition to GNOME will be potential changes in workflows that will happen because of differences between Unity and GNOME. That said, the change is surprisingly easy to make in most cases. Ubuntu's developers have done an impressive job of styling GNOME to match Unity in looks, if not entirely in function.&lt;/p&gt;
&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-desktop-640x360.jpeg&quot; width=&quot;640&quot; height=&quot;360&quot; alt=&quot;Ubuntu's custom theming of GNOME looks similar to Unity.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;Ubuntu's custom theming of GNOME looks similar to Unity.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Scott Gilbertson&lt;/div&gt;
&lt;p&gt;To help users transition from previous releases, Canonical has created a little &quot;first-run&quot; app called &quot;Welcome to Ubuntu.&quot; It points out some of the most-used new features and highlights where things are in the occasionally inscrutable GNOME interface. It's not quite as in-depth and useful as Ubuntu MATE's Welcome app, but it should get you up and running and point out some apps you might want to install (all of which are Snap applications; more on that below). This is also the place to opt out of Ubuntu's data gathering, which grabs some statistics about your system hardware.&lt;/p&gt;
&lt;div class=&quot;gallery shortcode-gallery gallery-wide&quot;&gt;
&lt;ul&gt;&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-welcom-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-welcom.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-welcom-980x551.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-welcom-1440x810.jpg 2560&quot; data-sub-html=&quot;#caption-1306239&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;Ubuntu's new Welcome app walks you through GNOME, offers to turn on Livepatching, and makes it easy to opt out of data gathering.&lt;/div&gt;
&lt;div class=&quot;credit&quot;&gt;Scott Gilbertson&lt;/div&gt;
&lt;/li&gt;
&lt;li data-thumb=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-data-150x150.jpg&quot; data-src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-data.jpg&quot; data-responsive=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-data-980x551.jpg 1080, https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-data-1440x810.jpg 2560&quot; data-sub-html=&quot;#caption-1306241&quot;&gt;

&lt;div class=&quot;caption&quot;&gt;By default Ubuntu 18.04 will gather information about your system, but you can opt-out in the Welcome app or via Settings &amp;gt;&amp;gt; Privacy.&lt;/div&gt;
&lt;div class=&quot;credit&quot;&gt;Scott Gilbertson&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;For the most part, how the transition to GNOME goes for you will boil down to a simple question—did you use the HUD, the keyboard-driven menu selection feature in Unity? If the answer is &quot;yes,&quot; you're going to hate GNOME Shell. If the answer is &quot;no,&quot; you'll probably be able to switch to GNOME without too much trouble. If you were a HUD user and you don't want to learn a new workflow, I have two options for you. One is to install the version of Unity 7 that's in the Ubuntu repos. It's community supported and seems to be active so far. Option two is to switch to Ubuntu MATE and change the desktop theme to &quot;Mutiny,&quot; which has a HUD-based feature. With a little fiddling in the config editor, that can be made to mimic Unity pretty closely.&lt;/p&gt;
&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu-mate-desktop-mutiny-640x360.jpeg&quot; width=&quot;640&quot; height=&quot;360&quot; alt=&quot;Ubuntu MATE's Mutiny theme with extra dock and Global Menu enabled.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;Ubuntu MATE's Mutiny theme with extra dock and Global Menu enabled.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Scott Gilbertson&lt;/div&gt;
&lt;p&gt;If you weren't a HUD user, your transition to GNOME will likely be much smoother. Ubuntu 18.04 looks roughly the same as 16.04, which helps smooth the transition to GNOME somewhat. After all, Unity was built on top of the same GTK libraries, GNOME components, and GNOME apps as, well, GNOME. That means most of the apps and interfaces you'll be using in GNOME will be very similar to what you used in Unity.&lt;/p&gt;
&lt;p&gt;There are some exceptions, though. Files, the default GNOME file manager app, is a good example of the sort of subtle but important differences between 16.04 and 18.04. In Unity, Ubuntu used an older version of Files and heavily patched it to add some functionality that had long since been deleted by the GNOME developers. In 18.04, all that work has been tossed out. Files is up to date, and there are no patches. That means there are some new features, like the ability to tag files and a new search interface.&lt;/p&gt;
&lt;p&gt;Perhaps the biggest change from stock GNOME in Ubuntu 18.04 is the ability to put folders and files on the desktop. GNOME developers consider the desktop concept outdated, and they use the &quot;desktop&quot; pretty much as a wallpaper display tool. Ubuntu has done a bit of tweaking so that you can actually put launchers, folders, and files on your desktop, which should be welcome news for many Ubuntu users. How long that will last is an open question, though, since GNOME just completely removed the code that made it possible for Canonical to enable this feature. For now at least, if you want files and folders on your desktop, you're all set.&lt;/p&gt;
&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-files-640x360.jpeg&quot; width=&quot;640&quot; height=&quot;360&quot; alt=&quot;Ubuntu 18.04 features the latest version of GNOME Files and manages to get icons on the Desktop.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;Ubuntu 18.04 features the latest version of GNOME Files and manages to get icons on the Desktop.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Scott Gilbertson&lt;/div&gt;
&lt;p&gt;Another potential source of pain for Unity refugees coming into the GNOME fold is the top bar, which behaves a little differently in GNOME. It has app indicators, status messages, network controls, and user sessions like Unity, but this iteration also adds a different app menu and a calendar applet in the center of the screen. There's also something like a global menu, minus the menu. When apps are maximized, the name of the app appears in the top menu, along with a one-item menu—quit is generally your only option. A couple of apps have a few extra items in their menus—Terminal and Files, for example—but it's a far cry from the menu-in-top-bar feature of Unity.&lt;/p&gt;
&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-topbar-640x360.jpeg&quot; width=&quot;640&quot; height=&quot;360&quot; alt=&quot;The various GNOME topbar menus (composite screenshot, only one of these shows at a time).&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;The various GNOME topbar menus (composite screenshot, only one of these shows at a time).&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Scott Gilbertson&lt;/div&gt;
&lt;p&gt;Another thing you'll notice in this release is that the window management buttons are back on the right side of the title bar. You can change this with the GNOME Tweak Tool if you'd like them back on the left.&lt;/p&gt;
&lt;p&gt;Once you get past the differences with Unity, however, there's much to like about this release. GNOME Shell is different from Unity, but it's not necessarily worse. It's certainly a pretty desktop, and Ubuntu's default theme has received quite a few updates that make it look really nice, especially in Files. There were rumors of a brand-new theme, perhaps one that doesn't involve any brown or orange even, but that did not materialize in time for this release. And of course, there are plenty of GNOME themes out there if you'd like to try something else. I reverted to stock for the screenshot here, but I generally prefer the dark variant of the Arc theme.&lt;/p&gt;
&lt;p&gt;Ubuntu 18.04 ships with GNOME 3.28, which has a number of new features worth mentioning. There's a new Night Light app, which warms your monitor's color temperature after sunset to lessen eye strain. There's also improved support for Thunderbolt 3, and there are media player controls in the message tray, which supports just about all the popular media players, including Rhythmbox and Spotify.&lt;/p&gt;
&lt;p&gt;This version of GNOME Shell also features a much improved system for dealing with those annoying &quot;captive portal&quot; dialogs you get from many public Wi-Fi hotspots these days. For me, browsers have always been hit or miss at dealing with these, but GNOME's tool has yet to miss, and that alone is almost enough to make me use it on a daily basis. (Full disclosure: I am an i3wm user, not because I especially love tiling window managers, but because it's easy on the RAM and because I just don't need my &quot;desktop&quot; to do much. If it displays apps on-screen and doesn't crash I'm happy).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Listing image by Scott Gilbertson&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 10 May 2018 09:12:03 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:url>https://arstechnica.com/information-technology/2018/05/ubuntu-18-04-the-return-of-a-familiar-interface-marks-the-best-ubuntu-in-years/</og:url>
<og:title>Ubuntu 18.04: Unity is gone, GNOME is back—and Ubuntu has never been better</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2018/05/ubuntu1804-files.jpeg</og:image>
<og:description>Server users will really like 18.04, but the newest Ubuntu works great for all Linux fans.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/information-technology/2018/05/ubuntu-18-04-the-return-of-a-familiar-interface-marks-the-best-ubuntu-in-years/</dc:identifier>
</item>
<item>
<title>Web Authentication API</title>
<link>https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API</link>
<guid isPermaLink="true" >https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API</guid>
<description>&lt;p class=&quot;summary&quot;&gt;The Web Authentication API is an extension of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API&quot;&gt;Credential Management API&lt;/a&gt; that enables strong authentication with public key cryptography, enabling password-less authentication and / or secure second-factor authentication without SMS texts.&lt;/p&gt;
&lt;h2 id=&quot;Web_authentication_concepts_and_usage&quot;&gt;Web authentication concepts and usage&lt;/h2&gt;
&lt;p&gt;The Web Authentication API (also referred to as WebAuthn) uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Public-key_cryptography&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;asymmetric (public-key) cryptography&lt;/a&gt; instead of passwords or SMS texts for registering, authenticating, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-factor_authentication&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;second-factor authentication&lt;/a&gt; with websites. This resolves significant security problems related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Phishing&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;phishing&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_breach&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;data breaches&lt;/a&gt;, and attacks against SMS texts or other second-factor authentication methods while at the same time significantly increasing ease of use (since users don't have to manage dozens of increasingly complicated passwords).&lt;/p&gt;
&lt;p&gt;Many websites already have pages that allow users to register new accounts or sign in to an existing account, and WebAuthn acts as a replacement or supplement to those on those existing webpages. Similar to the other forms of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API&quot;&gt;Credential Management API&lt;/a&gt;, the Web Authentication API has two basic methods that correspond to register and login:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create&quot;&gt;navigator.credentials.create()&lt;/a&gt; - when used with the publicKey option, creates new credentials, either for registering a new account or for associating a new asymmetric key pair credentials with an existing account.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get&quot;&gt;navigator.credentials.get()&lt;/a&gt; - when used with the publicKey option, uses an existing set of credentials to authenticate to a service, either logging a user in or as a form of second-factor authentication.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; both create() and get() require a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&quot;&gt;Secure Context&lt;/a&gt; (e.g. - the server is connected by https or is the localhost), and will not be available for use if the browser is not operating in a secure context.&lt;/p&gt;
&lt;p&gt;In their most basic forms, both create() and get() receive a very large random number called a challenge from the server and they return the challenge signed by the private key back to the server. This proves to the server that a user is in possession of the private key required for authentication without revealing any secrets over the network.&lt;/p&gt;
&lt;p&gt;In order to understand how the create() and get() methods fit into the bigger picture, it is important to understand that they sit between two components that are outside the browser:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt; - the WebAuthn API is intended to register new credentials on a server (also referred to as a service or a &lt;a href=&quot;https://en.wikipedia.org/wiki/Relying_party&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;relying party&lt;/a&gt;) and later use those same credentials on that same server to authenticate a user.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator&lt;/strong&gt; - the credentials are created and stored in a device called an authenticator. This is a new concept in authentication: when authenticating using passwords, the password is stored in a user's brain and no other device is needed; when authenticating using WebAuthn, the password is replaced with a key pair that is stored in an authenticator. The authenticator may be embedded into an operating system, such as Windows Hello, or may be a physical token, such as a USB or Bluetooth Security Key.&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;Registration&quot;&gt;Registration&lt;/h3&gt;
&lt;p&gt;A typical registration process has six steps, as illustrated in Figure 1 and described further below. This is a simplification of the data required for the registration process that is only intended to provide an overview. The full set of required fields, optional fields, and their meanings for creating a registration request can be found in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions&quot; title=&quot;None.&quot;&gt;&lt;code&gt;PublicKeyCredentialCreationOptions&lt;/code&gt;&lt;/a&gt; dictionary. Likewise, the full set of response fields can be found in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; interface (where &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot; title=&quot;The documentation about this has not yet been written; please consider contributing!&quot; class=&quot;new&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse&quot; title=&quot;When a WebAuthn authenticator creates a new PublicKeyCredential via a create() call, the PublicKeyCredential.response value will be an AuthenticatorAttestationResponse object. This object contains two properties: 1) a clientDataJSON property inherited from AuthenticatorResponse; and 2) an attestationObject that is an authenticator's way of providing a root of trust for the newly created keypair.&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt;&lt;/a&gt; interface). Note most JavaScript programmers that are creating an application will only really care about steps 1 and 5 where the create() function is called and subsequently returns; however, steps 2, 3, and 4 are essential to understanding the processing that takes place in the browser and authenticator and what the resulting data means.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mdn.mozillademos.org/files/15801/MDN%20Webauthn%20Registration%20(r3).png&quot; alt=&quot;WebAuthn registration component and dataflow diagram&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 1 - a diagram showing the sequence of actions for a WebAuthn registration and the essential data associated with each action.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The registration steps are:&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;&lt;li&gt;&lt;strong&gt;Application Requests Registration&lt;/strong&gt; - The application makes the initial registration request. The protocol and format of this request is outside of the scope of WebAuthn.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Sends Challenge, User Info, and Relying Party Info &lt;/strong&gt;- The server sends a challenge, user information, and relying party information to the JavaScript program. The protocol for communicating with the server is not specified and is outside of the scope of WebAuthn. Typically, server communications would be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/REST&quot;&gt;REST&lt;/a&gt; over https (probably using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/User:maybe/webidl_mdn/XMLHttpRequest_API&quot;&gt;XMLHttpRequest&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt;), but they could also be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SOAP&quot;&gt;SOAP&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2549&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;RFC 2549&lt;/a&gt; or nearly any other protocol provided that the protocol is secure. The parameters received from the server will be passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create&quot;&gt;create()&lt;/a&gt; call, typically with little or no modification and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt; that will resolve to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; containing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse&quot; title=&quot;When a WebAuthn authenticator creates a new PublicKeyCredential via a create() call, the PublicKeyCredential.response value will be an AuthenticatorAttestationResponse object. This object contains two properties: 1) a clientDataJSON property inherited from AuthenticatorResponse; and 2) an attestationObject that is an authenticator's way of providing a root of trust for the newly created keypair.&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt;&lt;/a&gt;. &lt;strong&gt;Note that it is absolutely critical that the challenge be a large buffer of random information (e.g. - more than 100 bytes) and it MUST be generated on the server in order to ensure the security of the registration process.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Browser Calls authenticatorMakeCredential() on Authenticator&lt;/strong&gt; - Internally, the browser will validate the parameters and fill in any defaults, which become the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorResponse/clientDataJSON&quot; title=&quot;The clientDataJSON object is an ArrayBuffer containing a JSON String of the various browser data that was used for the WebAuthn create() or get() call. It is included in both an AuthenticatorAttestationResponse and an AuthenticatorAssertionResponse within a PublicKeyCredential. The reason for storing the data as a ArrayBuffer rather than a String or an actual JavaScript object is that the object is effectively signed over by the authenticator, and if the order of the properties of the JavaScript object were not preserved then the signature verification would fail.&quot;&gt;&lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt;&lt;/a&gt;. One of the most important parameters is the origin, which recorded as part of the clientData so that the origin can be verified by the server later. The parameters to the create() call are passed to the authenticator, along with a SHA-256 hash of the clientDataJSON (only a hash is sent because the link to the authenticator may be a low-bandwidth NFC or Bluetooth link and the authenticator is just going to sign over the hash to ensure that it isn't tampered with).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator Creates New Key Pair and Attestation&lt;/strong&gt; - Before doing anything, the authenticator will typically ask for some form of user verification. This could be entering a PIN, using a fingerprint, doing an iris scan, etc. to prove that the user is present and consenting to the registration. After the user verification, the authenticator will create a new asymmetric key pair and safely store the private key for future reference. The public key will become part of the attestation, which the authenticator will sign over with a private key that was burned into the authenticator during its manufacturing process and that has a certificate chain that can be validated back to a root of trust.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator Returns Data to Browser&lt;/strong&gt; - The new public key, a globally unique credential id, and other attestation data are returned to the browser where they become the attestationObject.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Browser Creates Final Data, Application sends response to Server&lt;/strong&gt; - The create() Promise resolves to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt;, which has a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/rawId&quot; title=&quot;The documentation about this has not yet been written; please consider contributing!&quot; class=&quot;new&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;PublicKeyCredential.rawId&lt;/code&gt;&lt;/a&gt; that is the globally unique credential id along with a response that is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse&quot; title=&quot;When a WebAuthn authenticator creates a new PublicKeyCredential via a create() call, the PublicKeyCredential.response value will be an AuthenticatorAttestationResponse object. This object contains two properties: 1) a clientDataJSON property inherited from AuthenticatorResponse; and 2) an attestationObject that is an authenticator's way of providing a root of trust for the newly created keypair.&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt;&lt;/a&gt; containing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorResponse/clientDataJSON&quot; title=&quot;The clientDataJSON object is an ArrayBuffer containing a JSON String of the various browser data that was used for the WebAuthn create() or get() call. It is included in both an AuthenticatorAttestationResponse and an AuthenticatorAssertionResponse within a PublicKeyCredential. The reason for storing the data as a ArrayBuffer rather than a String or an actual JavaScript object is that the object is effectively signed over by the authenticator, and if the order of the properties of the JavaScript object were not preserved then the signature verification would fail.&quot;&gt;&lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/attestationObject&quot; title=&quot;As part of the WebAuthn create() call, an authenticator will create a new keypair as well as an attestationObject for that keypair. The attestationObject contains the new public key, as well as signature over the entire attestationObject with a private key that is stored in the authenticator when it is manufactured. The public key that corresponds to the private key that has created the attestation signature is well known; however, there are various well known attestation public key chains for different ecosystems (for example, Android or TPM attestations).&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse.attestationObject&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; is sent back to the server using any desired formatting and protocol (note that the ArrayBuffer properties need to be be base64 encoded or similar).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Validates and Finalizes Registration&lt;/strong&gt; - Finally, the server is required to perform a series of checks to ensure that the registration was complete and not tampered with. These include:
&lt;ol&gt;&lt;li&gt;Verifying that the challenge is the same as the challenge that was sent&lt;/li&gt;
&lt;li&gt;Ensuring that the origin was the origin expected&lt;/li&gt;
&lt;li&gt;Validating that the signature over the clientDataHash and the attestation using the certificate chain for that specific model of the authenticator&lt;/li&gt;
&lt;/ol&gt;
A complete list of validation steps &lt;a href=&quot;https://w3c.github.io/webauthn/#registering-a-new-credential&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;can be found in the WebAuthn specification&lt;/a&gt;. Assuming that the checks pan out, the server will store the new public key associated with the user's account for future use -- that is, whenever the user desires to use the public key for authentication.&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;Authentication&quot;&gt;Authentication&lt;/h3&gt;
&lt;p&gt;After a user has registered with WebAuthn, they can subsequently authenticate (a.k.a. - login or sign-in) with the service. The authentication flow looks similar to the registration flow, and the illustration of actions in Figure 2 may be recognizable as being similar to the illustration of registration actions in Figure 1. The primary differences between registration and authentication are that: 1) authentication doesn't require user or relying party information; and 2) authentication creates an assertion using the previously generated key pair for the service rather than creating an attestation with the key pair that was burned into the authenticator during manufacturing. Again, the description of authentication below is a broad overview rather than getting into all the options and features of WebAuthn. The specific options for authenticating can be found in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions&quot; title=&quot;The PublicKeyCredentialRequestOptions specifies publicKey options that can be used with the WebAuthn get() call.&quot;&gt;&lt;code&gt;PublicKeyCredentialRequestOptions&lt;/code&gt;&lt;/a&gt; dictionary, and the resulting data can be found in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; interface (where &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot; title=&quot;The documentation about this has not yet been written; please consider contributing!&quot; class=&quot;new&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse&quot; title=&quot;When a WebAuthn authenticator peforms an authentication via the get() call, the result is a new PublicKeyCredential, the PublicKeyCredential.response value will be an AuthenticatorAssertionResponse object. This object contains both the client data (i.e. - browser data) for the authentication as well as the data from the authenticator to cryptographically prove that the authentication is valid.&quot;&gt;&lt;code&gt;AuthenticatorAssertionResponse&lt;/code&gt;&lt;/a&gt; interface) .&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mdn.mozillademos.org/files/15802/MDN%20Webauthn%20Authentication%20(r1).png&quot; alt=&quot;WebAuthn authentication component and dataflow diagram&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 2 - similar to Figure 1, a diagram showing the sequence of actions for a WebAuthn authentication and the essential data associated with each action.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;&lt;li&gt;&lt;strong&gt;Application Requests Authentication&lt;/strong&gt; - The application makes the initial authentication request. The protocol and format of this request is outside of the scope of WebAuthn.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Sends Challenge&lt;/strong&gt; - The server sends a challenge JavaScript program. The protocol for communicating with the server is not specified and is outside of the scope of WebAuthn. Typically, server communications would be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/REST&quot;&gt;REST&lt;/a&gt; over https (probably using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/User:maybe/webidl_mdn/XMLHttpRequest_API&quot;&gt;XMLHttpRequest&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt;), but they could also be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SOAP&quot;&gt;SOAP&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2549&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;RFC 2549&lt;/a&gt; or nearly any other protocol provided that the protocol is secure. The parameters received from the server will be passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get&quot;&gt;get()&lt;/a&gt; call, typically with little or no modification. &lt;strong&gt;Note that it is absolutely critical that the challenge be a large buffer of random information (e.g. - more than 100 bytes) and it MUST be generated on the server in order to ensure the security of the authentication process.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Browser Call authenticatorGetCredential()  on Authenticator&lt;/strong&gt; - Internally, the browser will validate the parameters and fill in any defaults, which become the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorResponse/clientDataJSON&quot; title=&quot;The clientDataJSON object is an ArrayBuffer containing a JSON String of the various browser data that was used for the WebAuthn create() or get() call. It is included in both an AuthenticatorAttestationResponse and an AuthenticatorAssertionResponse within a PublicKeyCredential. The reason for storing the data as a ArrayBuffer rather than a String or an actual JavaScript object is that the object is effectively signed over by the authenticator, and if the order of the properties of the JavaScript object were not preserved then the signature verification would fail.&quot;&gt;&lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt;&lt;/a&gt;. One of the most important parameters is the origin, which recorded as part of the clientData so that the origin can be verified by the server later. The parameters to the create() call are passed to the authenticator, along with a SHA-256 hash of the clientDataJSON (only a hash is sent because the link to the authenticator may be a low-bandwidth NFC or Bluetooth link and the authenticator is just going to sign over the hash to ensure that it isn't tampered with).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator Creates an Assertion&lt;/strong&gt; - The authenticator finds a credential for this service that matches the Relying Party ID and prompts a user to consent to the authentication. Assuming both of those steps are successful, the authenticator will create a new assertion by signing over the clientDataHash and authenticatorData with the private key generated for this account during the registration call.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator Returns Data to Browser&lt;/strong&gt; -  The authenticator returns the authenticatorData and assertion signature back to the browser.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Browser Creates Final Data, Application sends response to Server&lt;/strong&gt; - The browser resolves the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot; title=&quot;The documentation about this has not yet been written; please consider contributing!&quot; class=&quot;new&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; that contains the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse&quot; title=&quot;When a WebAuthn authenticator peforms an authentication via the get() call, the result is a new PublicKeyCredential, the PublicKeyCredential.response value will be an AuthenticatorAssertionResponse object. This object contains both the client data (i.e. - browser data) for the authentication as well as the data from the authenticator to cryptographically prove that the authentication is valid.&quot;&gt;&lt;code&gt;AuthenticatorAssertionResponse&lt;/code&gt;&lt;/a&gt;. It is up to the JavaScript application to transmit this data back to the server using any protocol and format of its choice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Validates and Finalizes Authentication&lt;/strong&gt; - Upon receiving the result of the authentication request, the server performs validation of the response such as:
&lt;ol&gt;&lt;li&gt;Using the public key that was stored during the registration request to validate the signature by the authenticator.&lt;/li&gt;
&lt;li&gt;Ensuring that the challenge that was signed by the authenticator matches the challenge that was generated by the server.&lt;/li&gt;
&lt;li&gt;Checking that the Relying Party ID is the one expected for this service.&lt;/li&gt;
&lt;/ol&gt;
A full list of the &lt;a href=&quot;https://w3c.github.io/webauthn/#verifying-assertion&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;steps for validating an assertion can be found in the WebAuthn specification&lt;/a&gt;. Assuming the validation is successful, the server will note that the user is now authenticated. This is outside the scope of the WebAuthn specification, but one option would be to drop a new cookie for the user session.&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;Interfaces&quot;&gt;Interfaces&lt;/h2&gt;
&lt;dl&gt;&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer&quot; title=&quot;The CredentialsContainer interface of the the Credential Management API exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from Navigator.credentials.&quot;&gt;&lt;code&gt;CredentialsContainer&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;WebAuthn extends the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API&quot;&gt;Credential Management API&lt;/a&gt;'s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create&quot;&gt;create()&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get&quot;&gt;get()&lt;/a&gt; methods to take a new option: publicKey. When the publicKey option is passed to create() and / or get(), the Credential Management API will create a new public key pair or get an authentication for a key pair, respectively.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential&quot; title=&quot;The PublicKeyCredential interface provides information about a public key / private key pair. It inherits from Credential, and was created by the Web Authentication API exension to the Credential Management API. Other interfaces that inherit from Credential are PasswordCredential and FederatedCredential.&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorResponse&quot; title=&quot;This is the base interface of AuthenticatorAttestationResponse and AuthenticatorAssertionResponse, which are part of the PublicKeyCredential.response resulting from create() and get(), respectively. It contains the AuthenticatorResponse.clientDataJSON that is inherited by those interfaces.&quot;&gt;&lt;code&gt;AuthenticatorResponse&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Part of the PublicKeyCredential, the AuthenticatorResponse includes information from the browser (such as the challenge and origin); as well as information from the authenticator such as an AuthenticatorAttestationResponse (for new credentials) or an AuthenticatorAssertionResponse (when authenticating with existing credentials).&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse&quot; title=&quot;When a WebAuthn authenticator creates a new PublicKeyCredential via a create() call, the PublicKeyCredential.response value will be an AuthenticatorAttestationResponse object. This object contains two properties: 1) a clientDataJSON property inherited from AuthenticatorResponse; and 2) an attestationObject that is an authenticator's way of providing a root of trust for the newly created keypair.&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;When a PublicKeyCredential has been created with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create&quot;&gt;create()&lt;/a&gt; call, it will include an AuthenticatorAttestationResponse. This is the authenticator's way of providing a cryptographic root of trust for the new key pair that has been generated.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse&quot; title=&quot;When a WebAuthn authenticator peforms an authentication via the get() call, the result is a new PublicKeyCredential, the PublicKeyCredential.response value will be an AuthenticatorAssertionResponse object. This object contains both the client data (i.e. - browser data) for the authentication as well as the data from the authenticator to cryptographically prove that the authentication is valid.&quot;&gt;&lt;code&gt;AuthenticatorAssertionResponse&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;When a PublicKeyCredential is the result of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get&quot;&gt;get()&lt;/a&gt; call, it will include an AuthenticatorAssertionResponse. This is the authenticator's way of proving to a service that it has the key pair and that the authentication request is valid and approved.&lt;/dd&gt;
&lt;/dl&gt;&lt;h2 id=&quot;Options&quot;&gt;Options&lt;/h2&gt;
&lt;dl&gt;&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions&quot; title=&quot;None.&quot;&gt;&lt;code&gt;PublicKeyCredentialCreationOptions&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The options for creating a credential via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create&quot;&gt;navigator.credentials.create()&lt;/a&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions&quot; title=&quot;The PublicKeyCredentialRequestOptions specifies publicKey options that can be used with the WebAuthn get() call.&quot;&gt;&lt;code&gt;PublicKeyCredentialRequestOptions&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The options for using a credential via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get&quot;&gt;navigator.credentials.get()&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;h2 id=&quot;Examples&quot;&gt;Examples&lt;/h2&gt;
&lt;pre class=&quot;brush: js&quot;&gt;
// sample arguments for registration
var createCredentialDefaultArgs = {
    publicKey: {
        // Relying Party (a.k.a. - Service):
        rp: {
            name: &quot;Acme&quot;
        },

        // User:
        user: {
            id: new Uint8Array(16),
            name: &quot;john.p.smith@example.com&quot;,
            displayName: &quot;John P. Smith&quot;
        },

        pubKeyCredParams: [{
            type: &quot;public-key&quot;,
            alg: -7
        }],

        attestation: &quot;direct&quot;,

        timeout: 60000,

        challenge: new Uint8Array([ // must be a cryptographically random number sent from a server
            0x8C, 0x0A, 0x26, 0xFF, 0x22, 0x91, 0xC1, 0xE9, 0xB9, 0x4E, 0x2E, 0x17, 0x1A, 0x98, 0x6A, 0x73,
            0x71, 0x9D, 0x43, 0x48, 0xD5, 0xA7, 0x6A, 0x15, 0x7E, 0x38, 0x94, 0x52, 0x77, 0x97, 0x0F, 0xEF
        ]).buffer
    }
};

// sample arguments for login
var getCredentialDefaultArgs = {
    publicKey: {
        timeout: 60000,
        // allowCredentials: [newCredential] // see below
        challenge: new Uint8Array([ // must be a cryptographically random number sent from a server
            0x79, 0x50, 0x68, 0x71, 0xDA, 0xEE, 0xEE, 0xB9, 0x94, 0xC3, 0xC2, 0x15, 0x67, 0x65, 0x26, 0x22,
            0xE3, 0xF3, 0xAB, 0x3B, 0x78, 0x2E, 0xD5, 0x6F, 0x81, 0x26, 0xE2, 0xA6, 0x01, 0x7D, 0x74, 0x50
        ]).buffer
    },
};

// register / create a new credential
navigator.credentials.create(createCredentialDefaultArgs)
    .then((cred) =&amp;gt; {
        console.log(&quot;NEW CREDENTIAL&quot;, cred);

        // normally the credential IDs available for an account would come from a server
        // but we can just copy them from above...
        var idList = [{
            id: cred.rawId,
            transports: [&quot;usb&quot;, &quot;nfc&quot;, &quot;ble&quot;],
            type: &quot;public-key&quot;
        }];
        getCredentialDefaultArgs.publicKey.allowCredentials = idList;
        return navigator.credentials.get(getCredentialDefaultArgs);
    })
    .then((assertion) =&amp;gt; {
        console.log(&quot;ASSERTION&quot;, assertion);
    })
    .catch((err) =&amp;gt; {
        console.log(&quot;ERROR&quot;, err);
    });
&lt;/pre&gt;
&lt;h2 id=&quot;Specifications&quot;&gt;Specifications&lt;/h2&gt;
&lt;h2 id=&quot;Browser_compatibility&quot;&gt;Browser compatibility&lt;/h2&gt;

&lt;div id=&quot;compat-desktop&quot;&gt;
&lt;table class=&quot;compat-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Chrome&lt;/th&gt;
&lt;th&gt;Firefox (Gecko)&lt;/th&gt;
&lt;th&gt;Internet Explorer&lt;/th&gt;
&lt;th&gt;Opera&lt;/th&gt;
&lt;th&gt;Safari (WebKit)&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Basic support&lt;/td&gt;
&lt;td&gt;&lt;em&gt;&lt;a href=&quot;https://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;Nightly build&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/60&quot; title=&quot;Released on undefined.&quot;&gt;60&lt;/a&gt; (60)&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div id=&quot;compat-mobile&quot;&gt;
&lt;table class=&quot;compat-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Android Webview&lt;/th&gt;
&lt;th&gt;Chrome for Android&lt;/th&gt;
&lt;th&gt;Firefox Mobile (Gecko)&lt;/th&gt;
&lt;th&gt;IE Phone&lt;/th&gt;
&lt;th&gt;Opera Mobile&lt;/th&gt;
&lt;th&gt;Safari Mobile&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Basic support&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;No support&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;[1] Web authentication has been restricted to active documents (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1409202&quot; title=&quot;FIXED: Web Authentication - Restrict to active documents&quot; class=&quot;external&quot; rel=&quot;noopener&quot;&gt;bug 1409202&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;See_also&quot;&gt;See also&lt;/h2&gt;
</description>
<pubDate>Thu, 10 May 2018 08:26:55 +0000</pubDate>
<dc:creator>Jaruzel</dc:creator>
<og:type>website</og:type>
<og:image>https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png</og:image>
<og:title>Web Authentication API</og:title>
<og:url>https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API</og:url>
<og:description>The Web Authentication API is an extension of the Credential Management API that enables strong authentication with public key cryptography, enabling password-less authentication and / or secure second-factor authentication without SMS texts.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API</dc:identifier>
</item>
</channel>
</rss>