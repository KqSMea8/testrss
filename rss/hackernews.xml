<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Show HN: Open Paperless – Scan, index, and archive paper documents</title>
<link>https://github.com/zhoubear/open-paperless</link>
<guid isPermaLink="true" >https://github.com/zhoubear/open-paperless</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;div align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/zhoubear/open-paperless&quot;&gt;&lt;img width=&quot;600&quot; src=&quot;https://github.com/zhoubear/open-paperless/raw/master/contrib/logo.png&quot;/&gt;&lt;/a&gt;&lt;p&gt;Mayan EDMS is a wonderful product with a lot of features. However, its sheer number of features and capabilities can be a bit intimidating for the average user. This is where Open Paperless comes in. Open Paperless is a re-think of the user interface and user experience for Mayan EDMS. The goal is to reduce the complexity and make it more suitable for home users. Think of Open Paperless as a lightweight version of Mayan EDMS.&lt;/p&gt;
&lt;p&gt;If you find Open Paperless useful please support me via &lt;a href=&quot;https://www.patreon.com/zhoubear&quot; rel=&quot;nofollow&quot;&gt;Patreon&lt;/a&gt;. You can also support Mayan EDMS via &lt;a href=&quot;https://www.mayan-edms.com/&quot; rel=&quot;nofollow&quot;&gt;their website&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 align=&quot;center&quot;&gt;Screenshots&lt;/h2&gt;

&lt;h2 align=&quot;center&quot;&gt;Hardware requirements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;2 Gigabytes of RAM (1 Gigabyte if OCR is turned off).&lt;/li&gt;
&lt;li&gt;Multiple core CPU (64 bit, faster than 1 GHz recommended).&lt;/li&gt;
&lt;li&gt;Ubuntu 16.10 or greater.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 align=&quot;center&quot;&gt;Installation&lt;/h2&gt;
&lt;h2 align=&quot;center&quot;&gt;Special thanks&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;To the Mayan EDMS community for their support and cool helping me refocus Open Paperless.&lt;/li&gt;
&lt;li&gt;To the super styling Roberto Rosario for his awesome work on Mayan EDMS and for being a great example of a community leader. Many projects and people could learn a lot from him.&lt;/li&gt;
&lt;li&gt;DjangoGirls for the support during these initial times getting Open Paperless off the ground.&lt;/li&gt;
&lt;/ul&gt;&lt;/article&gt;</description>
<pubDate>Thu, 21 Dec 2017 22:35:46 +0000</pubDate>
<dc:creator>zhoubear</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/34585812?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>zhoubear/open-paperless</og:title>
<og:url>https://github.com/zhoubear/open-paperless</og:url>
<og:description>open-paperless - Scan, index, and archive all of your paper documents</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/zhoubear/open-paperless</dc:identifier>
</item>
<item>
<title>Sam Altman: ‘Too many’ Y Combinator companies raise money</title>
<link>https://venturebeat.com/2017/12/21/sam-altman-too-many-y-combinator-companies-raise-money/</link>
<guid isPermaLink="true" >https://venturebeat.com/2017/12/21/sam-altman-too-many-y-combinator-companies-raise-money/</guid>
<description>
&lt;p&gt;Silicon Valley’s &lt;a href=&quot;http://www.ycombinator.com/&quot;&gt;Y Combinator&lt;/a&gt; wields a powerful influence over the startup world. But president Sam Altman is apparently a bit worried there might be too much hype surrounding the accelerator program’s graduates.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://medium.com/station-f/station-featuring-sam-altman-president-of-y-combinator-video-141b8f979d47&quot;&gt;a recent interview&lt;/a&gt; with Rachel Vanier of Paris’ Station F Startup Campus, Altman cautioned that not all startups coming out of the famed program are necessarily worthy of or ready for funding. When asked by Vanier about Y Combinator’s famed Demo Day event and who gets funded, he replied:&lt;/p&gt;
&lt;p&gt;“Not all of them, but certainly a lot do. In fact, probably too many. I think there’s sort of this halo around being a Y Combinator company, where companies raise money that perhaps shouldn’t.”&lt;/p&gt;
&lt;p&gt;Each Demo Day has become a major event in the Silicon Valley calendar, drawing many of the biggest names in venture capital. Given Y Combinator’s track record and impact, there’s no doubt a willingness to back companies that pass through its doors, following the footsteps of unicorns like Dropbox, Airbnb, and Stripe.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;embed-youtube&quot;&gt;&lt;iframe class=&quot;youtube-player&quot; type=&quot;text/html&quot; width=&quot;560&quot; height=&quot;341&quot; src=&quot;https://www.youtube.com/embed/fAm2TR1GNFE?version=3&amp;amp;rel=1&amp;amp;fs=1&amp;amp;autohide=2&amp;amp;showsearch=0&amp;amp;showinfo=1&amp;amp;iv_load_policy=1&amp;amp;wmode=transparent&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Officially, &lt;a href=&quot;http://www.ycombinator.com/&quot;&gt;Y Combinator says&lt;/a&gt; it has funded 1,464 startups and that its alumni are worth a collective $80 billion. But investors and entrepreneurs alike shouldn’t be blinded by that success and assume graduation day is the right time for a company to raise money.&lt;/p&gt;
&lt;p&gt;“It’s a real commitment to raise money,” Altman said. “And you want to have some evidence that what you’re doing is going to work before you lock yourself into that path.”&lt;/p&gt;

</description>
<pubDate>Thu, 21 Dec 2017 22:24:23 +0000</pubDate>
<dc:creator>chasedehan</dc:creator>
<og:title>Sam Altman: ‘Too many’ Y Combinator companies raise money</og:title>
<og:description>Silicon Valley's Y Combinator wields a powerful influence over the startup world. But president Sam Altman is apparently a bit worried there might be too much hype surrounding the accelerator program's graduates.</og:description>
<og:type>article</og:type>
<og:url>https://venturebeat.com/2017/12/21/sam-altman-too-many-y-combinator-companies-raise-money/</og:url>
<og:image>https://venturebeat.com/wp-content/uploads/2015/07/Sam-Altman-TechCrunch-Flickr.jpg?fit=780%2C520&amp;strip=all</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://venturebeat.com/2017/12/21/sam-altman-too-many-y-combinator-companies-raise-money/</dc:identifier>
</item>
<item>
<title>Building a Distributed Log from Scratch, Part 1: Storage Mechanics</title>
<link>http://bravenewgeek.com/building-a-distributed-log-from-scratch-part-1-storage-mechanics/</link>
<guid isPermaLink="true" >http://bravenewgeek.com/building-a-distributed-log-from-scratch-part-1-storage-mechanics/</guid>
<description>&lt;p&gt;The log is a totally-ordered, append-only data structure. It’s a powerful yet simple abstraction—a sequence of immutable events. It’s something that programmers have been using for a very long time, perhaps without even realizing it because it’s so simple. Whether it’s application logs, system logs, or access logs, logging is something every developer uses on a daily basis. Essentially, it’s a timestamp and an event, a &lt;em&gt;when&lt;/em&gt; and a &lt;em&gt;what&lt;/em&gt;, and typically appended to the end of a file. But when we generalize that pattern, we end up with something much more useful for a broad range of problems. It becomes more interesting when we look at the log not just as a system of record but a central piece in managing data and distributing it across the enterprise efficiently.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log.png&quot;&gt;&lt;img class=&quot;wp-image-3075 aligncenter&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log.png&quot; alt=&quot;&quot; width=&quot;388&quot; height=&quot;281&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log.png 789w, http://bravenewgeek.com/wp-content/uploads/2017/12/log-300x217.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/log-768x556.png 768w&quot; sizes=&quot;(max-width: 388px) 100vw, 388px&quot;/&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are a number of implementations of this idea: &lt;a href=&quot;https://kafka.apache.org/&quot;&gt;Apache Kafka&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/kinesis/data-streams/&quot;&gt;Amazon Kinesis&lt;/a&gt;, &lt;a href=&quot;https://github.com/nats-io/nats-streaming-server&quot;&gt;NATS Streaming&lt;/a&gt;, &lt;a href=&quot;https://github.com/phaistos-networks/TANK&quot;&gt;Tank&lt;/a&gt;, and &lt;a href=&quot;https://pulsar.apache.org/&quot;&gt;Apache Pulsar&lt;/a&gt; to name a few. We can probably credit Kafka with popularizing the idea.&lt;/p&gt;
&lt;p&gt;I think there are at least three key priorities for the effectiveness of one of these types of systems: performance, high availability, and scalability. If it’s not fast enough, the data becomes decreasingly useful. If it’s not highly available, it means we can’t reliably get our data in or out. And if it’s not scalable, it won’t be able to meet the needs of many enterprises.&lt;/p&gt;
&lt;p&gt;When we apply the traditional pub/sub semantics to this idea of a log, it becomes a very useful abstraction that applies to a lot of different problems.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log-1.png&quot;&gt;&lt;img class=&quot;size-full wp-image-3106 aligncenter&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log-1.png&quot; alt=&quot;&quot; width=&quot;1591&quot; height=&quot;860&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log-1.png 1591w, http://bravenewgeek.com/wp-content/uploads/2017/12/log-1-300x162.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/log-1-768x415.png 768w, http://bravenewgeek.com/wp-content/uploads/2017/12/log-1-1024x554.png 1024w&quot; sizes=&quot;(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this series, we’re not going to spend much time discussing &lt;em&gt;why&lt;/em&gt; the log is useful. Jay Kreps has already done the legwork on that with &lt;a href=&quot;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&quot;&gt;&lt;em&gt;The Log: What every software engineer should know about real-time data’s unifying abstraction&lt;/em&gt;&lt;/a&gt;. There’s even a &lt;a href=&quot;https://www.amazon.com/Heart-Logs-Stream-Processing-Integration/dp/1491909382&quot;&gt;book&lt;/a&gt; on it. Instead, we will focus on what it takes to &lt;em&gt;build&lt;/em&gt; something like this using Kafka and NATS Streaming as case studies of sorts—Kafka because of its ubiquity, NATS Streaming because it’s something with which I have personal experience. We’ll look at a few core components like leader election, data replication, log persistence, and message delivery. Part one of this series starts with the storage mechanics. Along the way, we will also discuss some lessons learned while building NATS Streaming, which is a streaming data layer on top of the &lt;a href=&quot;https://nats.io/&quot;&gt;NATS&lt;/a&gt; messaging system. The intended outcome of this series is threefold: to learn a bit about the internals of a log abstraction, to learn how it can achieve the three goals described above, and to learn some applied distributed systems theory.&lt;/p&gt;
&lt;p&gt;With that in mind, you will probably never need to build something like this yourself (nor should you), but it helps to know how it works. I also find that software engineering is all about pattern matching. Many types of problems look radically different but are surprisingly similar. Some of these ideas may apply to other things you come across. If nothing else, it’s just &lt;em&gt;interesting&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Let’s start by looking at data storage since this is a critical part of the log and dictates some other aspects of it. Before we dive into that, though, let’s highlight some first principles we’ll use as a starting point for driving our design.&lt;/p&gt;
&lt;p&gt;As we know, the log is an ordered, immutable sequence of messages. Messages are &lt;em&gt;atomic&lt;/em&gt;, meaning they can’t be broken up. A message is either in the log or not, all or nothing. Although we only ever add messages to the log and never remove them (as with a message queue), the log has a notion of &lt;em&gt;message retention&lt;/em&gt; based on some policies, which allows us to control how the log is truncated. This is a practical requirement since otherwise the log will grow endlessly. These policies might be based on time, number of messages, number of bytes, etc.&lt;/p&gt;
&lt;p&gt;The log can be played back from any arbitrary position. With position, we normally refer to a logical message timestamp rather than a physical wall-clock time, such as an offset into the log. The log is stored on disk, and sequential disk access is actually relatively &lt;em&gt;fast&lt;/em&gt;. The graphic below taken from the ACM Queue article &lt;a href=&quot;http://queue.acm.org/detail.cfm?id=1563874&quot;&gt;&lt;em&gt;The Pathologies of Big Data&lt;/em&gt;&lt;/a&gt; helps bear this out (this is helpfully pointed out by Kafka’s &lt;a href=&quot;https://kafka.apache.org/documentation/#design_filesystem&quot;&gt;documentation&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/disk_access.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-3087&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/disk_access.png&quot; alt=&quot;&quot; width=&quot;582&quot; height=&quot;318&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/disk_access.png 582w, http://bravenewgeek.com/wp-content/uploads/2017/12/disk_access-300x164.png 300w&quot; sizes=&quot;(max-width: 582px) 100vw, 582px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That said, modern OS page caches mean that sequential access often avoids going to disk altogether. This is because the kernel keeps cached pages in otherwise unused portions of RAM. This means both reads and writes go to the in-memory page cache instead of disk. With Kafka, for example, we can verify this quite easily by running a simple test that writes some data and reads it back and looking at disk IO using &lt;em&gt;iostat&lt;/em&gt;. After running such a test, you will likely see something resembling the following, which shows the number of blocks read and written is exactly zero.&lt;/p&gt;
&lt;pre&gt;
avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          13.53    0.00   11.28    0.00    0.00   75.19

Device:    tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
xvda      0.00         0.00         0.00          0          0
&lt;/pre&gt;
&lt;p&gt;With the above in mind, our log starts to look an awful lot like an actual logging file, but instead of timestamps and log messages, we have offsets and opaque data messages. We simply add new messages to the end of the file with a monotonically increasing offset.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_file.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-3091&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_file.png&quot; alt=&quot;&quot; width=&quot;1444&quot; height=&quot;330&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_file.png 1444w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_file-300x69.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_file-768x176.png 768w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_file-1024x234.png 1024w&quot; sizes=&quot;(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, there are some problems with this approach. Namely, the file is going to get very, very large. Recall that we need to support a few different access patterns: looking up messages by offset and also truncating the log using a variety of different retention policies. Since the log is ordered, a lookup is simply a binary search for the offset, but this is expensive with a large log file. Similarly, aging out data by retention policy is harder.&lt;/p&gt;
&lt;p&gt;To account for this, we break up the log file into chunks. In Kafka, these are called segments. In NATS Streaming, they are called slices. Each segment is a new file. At a given time, there is a single active segment, which is the segment messages are written to. Once the segment is full (based on some configuration), a new one is created and becomes active.&lt;/p&gt;
&lt;p&gt;Segments are defined by their base offset, i.e. the offset of the first message stored in the segment. In Kafka, the files are also named with this offset. This allows us to quickly locate the segment in which a given message is contained by doing a binary search.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_segments.png&quot;&gt;&lt;img class=&quot;size-full wp-image-3093 aligncenter&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_segments.png&quot; alt=&quot;&quot; width=&quot;1420&quot; height=&quot;330&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_segments.png 1420w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_segments-300x70.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_segments-768x178.png 768w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_segments-1024x238.png 1024w&quot; sizes=&quot;(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alongside each segment file is an index file that maps message offsets to their respective positions in the log segment. In Kafka, the index uses 4 bytes for storing an offset relative to the base offset and 4 bytes for storing the log position. Using a relative offset is more efficient because it means we can avoid storing the actual offset as an int64. In NATS Streaming, the timestamp is also stored to do time-based lookups.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_index.png&quot;&gt;&lt;img class=&quot;size-full wp-image-3095 aligncenter&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_index.png&quot; alt=&quot;&quot; width=&quot;1420&quot; height=&quot;566&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/log_index.png 1420w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_index-300x120.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_index-768x306.png 768w, http://bravenewgeek.com/wp-content/uploads/2017/12/log_index-1024x408.png 1024w&quot; sizes=&quot;(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ideally, the data written to the log segment is written in protocol format. That is, what gets written to disk is exactly what gets sent over the wire. This allows for zero-copy reads. Let’s take a look at how this otherwise works.&lt;/p&gt;
&lt;p&gt;When you read messages from the log, the kernel will attempt to pull the data from the page cache. If it’s not there, it will be read from disk. The data is copied from disk to page cache, which all happens in kernel space. Next, the data is copied into the application (i.e. user space). This all happens with the &lt;em&gt;read&lt;/em&gt; system call. Now the application writes the data out to a socket using &lt;em&gt;send&lt;/em&gt;, which is going to copy it back into kernel space to a socket buffer before it’s copied &lt;em&gt;one last time&lt;/em&gt; to the NIC. All in all, we have &lt;em&gt;four&lt;/em&gt; copies (including one from page cache) and &lt;em&gt;two&lt;/em&gt; system calls.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/read.png&quot;&gt;&lt;img class=&quot;size-full wp-image-3099 aligncenter&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/read.png&quot; alt=&quot;&quot; width=&quot;1419&quot; height=&quot;569&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/read.png 1419w, http://bravenewgeek.com/wp-content/uploads/2017/12/read-300x120.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/read-768x308.png 768w, http://bravenewgeek.com/wp-content/uploads/2017/12/read-1024x411.png 1024w&quot; sizes=&quot;(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, if the data is already in wire format, we can bypass user space entirely using the &lt;em&gt;sendfile &lt;/em&gt;system call, which will copy the data directly from the page cache to the NIC buffer—&lt;em&gt;two&lt;/em&gt; copies (including one from page cache) and &lt;em&gt;one&lt;/em&gt; system call. This turns out to be an important optimization, especially in garbage-collected languages since we’re bringing less data into application memory. Zero-copy also reduces CPU cycles and memory bandwidth.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/sendfile.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-3101&quot; src=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/sendfile.png&quot; alt=&quot;&quot; width=&quot;1405&quot; height=&quot;453&quot; srcset=&quot;http://bravenewgeek.com/wp-content/uploads/2017/12/sendfile.png 1405w, http://bravenewgeek.com/wp-content/uploads/2017/12/sendfile-300x97.png 300w, http://bravenewgeek.com/wp-content/uploads/2017/12/sendfile-768x248.png 768w, http://bravenewgeek.com/wp-content/uploads/2017/12/sendfile-1024x330.png 1024w&quot; sizes=&quot;(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NATS Streaming does not currently make use of zero-copy for a number of reasons, some of which we will get into later in the series. In fact, the NATS Streaming storage layer is actually &lt;em&gt;pluggable&lt;/em&gt; in that it can be backed by any number of mediums which implement the storage interface. Out of the box it includes the file-backed storage described above, in-memory, and SQL-backed.&lt;/p&gt;
&lt;p&gt;There are a few other optimizations to make here such as message batching and compression, but we’ll leave those as an exercise for the reader.&lt;/p&gt;
&lt;p&gt;In part two of this series, we will discuss how to make this log fault tolerant by diving into data-replication techniques.&lt;/p&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 21 Dec 2017 21:58:54 +0000</pubDate>
<dc:creator>tylertreat</dc:creator>
<og:type>article</og:type>
<og:title>Building a Distributed Log from Scratch, Part 1: Storage Mechanics</og:title>
<og:url>http://bravenewgeek.com/building-a-distributed-log-from-scratch-part-1-storage-mechanics/</og:url>
<og:description>The log is a totally-ordered, append-only data structure. It’s a powerful yet simple abstraction—a sequence of immutable events. It’s something that programmers have been using for a ve…</og:description>
<og:image>http://bravenewgeek.com/wp-content/uploads/2017/12/read.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://bravenewgeek.com/building-a-distributed-log-from-scratch-part-1-storage-mechanics/</dc:identifier>
</item>
<item>
<title>Goldman Sachs Is Setting Up a Cryptocurrency Trading Desk</title>
<link>https://www.bloomberg.com/news/articles/2017-12-21/goldman-is-setting-up-a-cryptocurrency-trading-desk</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2017-12-21/goldman-is-setting-up-a-cryptocurrency-trading-desk</guid>
<description>&lt;p&gt;At least one of Wall Street’s biggest firms is growing more comfortable with cryptocurrencies.&lt;/p&gt;

&lt;p&gt;&lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/GS:US&quot; title=&quot;Company Overview&quot; rel=&quot;nofollow noopener&quot;&gt;Goldman Sachs Group Inc.&lt;/a&gt; is setting up a trading desk to make markets in digital currencies such as bitcoin, according to people with knowledge of the strategy. The bank aims to get the business running by the end of June, if not earlier, two of the people said. Another said it’s still trying to work out security issues as well as how it would hold, or custody, the assets.&lt;/p&gt;

&lt;p&gt;The move positions Goldman Sachs to become the first large Wall Street firm to make markets in cryptocurrencies, whose wild price swings and surging values have captured the public’s imagination but given pause to established institutions. Already, the bank is among just a few mainstream firms clearing a new breed of bitcoin futures offered by Cboe Global Markets Inc. and CME Group Inc. Citigroup Inc. and Bank of America Corp., for example, have been taking a wait-and-see approach.&lt;/p&gt;

&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;
&lt;p&gt;Goldman Sachs is now assembling a team in New York, one of the people said. While the bank hasn’t made a decision where to house the desk, one possibility is that it will operate within the fixed-income, currencies and commodities unit’s systematic trading function, which conducts transactions electronically, two people said. Darren Cohen, in the firm’s principal strategic investments group, is also looking at opportunities, another person said.&lt;/p&gt;

&lt;p&gt;“In response to client interest in digital currencies, we are exploring how best to serve them,” Michael DuVally, a spokesman, said in a statement.&lt;/p&gt;
&lt;p data-tout-type=&quot;story&quot;&gt;&lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-12-21/jpmorgan-dips-a-toe-into-analysis-of-bitcoin-futures-volatility&quot; title=&quot;Click for full story&quot; target=&quot;_blank&quot;&gt;Read more on a rival: JPMorgan dips toe into analysis of bitcoin futures volatility&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Publicly, Chief Executive Officer &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/billionaires/id/2378577&quot; title=&quot;Billionaire Profile&quot; target=&quot;_blank&quot;&gt;Lloyd Blankfein&lt;/a&gt; has been circumspect. He &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/terminal/OX9EG1AIBMDC&quot; title=&quot;Lloyd Blankfein: Still thinking about #Bitcoin. No conclusion - not endorsing/rejecting. Know that folks also were skeptical&quot; class=&quot;terminal-news-story&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;tweeted&lt;/a&gt; in October that his firm was looking at how to deal with bitcoin. In a Bloomberg Television interview last month, he &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-11-30/blankfein-says-too-soon-for-bitcoin-strategy-as-volatility-jumps&quot; title=&quot;Blankfein Says Too Soon for Bitcoin Plan as Volatility Jumps (1)&quot; target=&quot;_blank&quot;&gt;said&lt;/a&gt; his bank didn’t need a bitcoin strategy yet because the digital currency is still just developing and volatile.&lt;/p&gt;
&lt;p&gt;And when the bank began clearing futures earlier this month, it demanded that some clients set aside funds equal to the full value of their trade, people familiar with the policy &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-12-14/goldman-said-to-seek-100-margin-on-some-bitcoin-futures-trades&quot; title=&quot;Goldman Said to Demand 100% Margin on Some Bitcoin Futures (1)&quot; target=&quot;_blank&quot;&gt;said&lt;/a&gt; at the time. The conservatism deterred some customers and led them to take their business elsewhere.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more on cryptocurrencies, check out the &lt;em&gt;Decrypted&lt;/em&gt; podcast: &lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 21 Dec 2017 20:46:11 +0000</pubDate>
<dc:creator>chollida1</dc:creator>
<og:description>At least one of Wall Street’s biggest firms is growing more comfortable with cryptocurrencies.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iGy3946fe0QE/v0/1200x700.jpg</og:image>
<og:title>Goldman Is Setting Up a Cryptocurrency Trading Desk</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2017-12-21/goldman-is-said-to-be-building-a-cryptocurrency-trading-desk</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2017-12-21/goldman-is-said-to-be-building-a-cryptocurrency-trading-desk</dc:identifier>
</item>
<item>
<title>Gamers Want DMCA Exemption for ‘Abandoned’ Online Games</title>
<link>https://torrentfreak.com/gamers-want-dmca-exemption-for-abandoned-online-games-171221/</link>
<guid isPermaLink="true" >https://torrentfreak.com/gamers-want-dmca-exemption-for-abandoned-online-games-171221/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://torrentfreak.com/images/starwarsf.png&quot; alt=&quot;&quot; width=&quot;235&quot; height=&quot;225&quot; class=&quot;alignright size-full wp-image-148899&quot;/&gt;The U.S. Copyright Office is considering whether or not to update the DMCA’s anti-circumvention provisions, which prevent the public from tinkering with DRM-protected content and devices.&lt;/p&gt;
&lt;p&gt;These provisions are renewed every three years. To allow individuals and organizations to chime in, the Office traditionally launches a &lt;a href=&quot;https://www.regulations.gov/document?D=COLC-2017-0007-0070&quot;&gt;public consultation&lt;/a&gt;, before it makes any decisions.&lt;/p&gt;
&lt;p&gt;This week a series of new responses were received and many of these focused on abandoned games. As is true for most software, games have a limited lifespan, so after a few years they are no longer supported by manufacturers.&lt;/p&gt;
&lt;p&gt;To preserve these games for future generations and nostalgic gamers, the Copyright Office previously included game preservation exemptions. This means that libraries, archives and museums can use emulators and other circumvention tools to make old classics playable.&lt;/p&gt;
&lt;p&gt;However, these exemptions are limited and do not apply to games that require a connection to an online server, which includes most recent games. When the online servers are taken down, the game simply disappears forever.&lt;/p&gt;
&lt;p&gt;This should be prevented, according to The Museum of Art and Digital Entertainment (&lt;a href=&quot;https://www.themade.org/&quot;&gt;the MADE&lt;/a&gt;), a nonprofit organization operating in California.&lt;/p&gt;
&lt;p&gt;“Although the Current Exemption does not cover it, preservation of online video games is now critical,” MADE writes in its comment to the Copyright Office.&lt;/p&gt;
&lt;p&gt;“Online games have become ubiquitous and are only growing in popularity. For example, an estimated fifty-three percent of gamers play multiplayer games at least once a week, and spend, on average, six hours a week playing with others online.”&lt;/p&gt;
&lt;p&gt;During the previous review, &lt;a href=&quot;https://torrentfreak.com/eff-seeks-dmca-exemption-to-preserve-abandoned-games-150409/&quot;&gt;similar calls&lt;/a&gt; for an online exemption were made but, at the time, the Register of Copyrights noted that multiplayer games could still be played on local area networks.&lt;/p&gt;
&lt;p&gt;“Today, however, local multiplayer options are increasingly rare, and many games no longer support LAN connected multiplayer capability,” MADE counters, adding that nowadays even some single-player games require an online connection.&lt;/p&gt;
&lt;p&gt;“More troubling still to archivists, many video games rely on server connectivity to function in single-player mode and become unplayable when servers shut down.”&lt;/p&gt;
&lt;p&gt;MADE asks the Copyright Office to extend the current exemptions and include games with an online connection as well. This would allow libraries, archives, and museums to operate servers for these abandoned games and keep them alive.&lt;/p&gt;
&lt;p&gt;The nonprofit museum is not alone in its call, with digital rights group &lt;a href=&quot;https://www.publicknowledge.org/&quot;&gt;Public Knowledge&lt;/a&gt; submitting a similar comment. They also highlight the need to preserve online games. Not just for nostalgic gamers, but also for researchers and scholars.&lt;/p&gt;
&lt;p&gt;This issue is more relevant than ever before, as hundreds of online multiplayer games have been abandoned already.&lt;/p&gt;
&lt;p&gt;“It is difficult to quantify the number of multiplayer servers that have been shut down in recent years. However, Electronic Arts’ ‘Online Services Shutdown’ list is one illustrative example,” Public Knowledge writes.&lt;/p&gt;
&lt;p&gt;“The list — which is littered with popular franchises such as FIFA World Cup, Nascar, and The Sims — currently stands at 319 games and servers discontinued since 2013, or just over one game per week since 2012.”&lt;/p&gt;
&lt;p&gt;Finally, several ‘regular’ gaming fans have also made their feelings known. While their arguments are usually not as elaborate, the personal pleasure people still get out of older games can’t be overstated.&lt;/p&gt;
&lt;p&gt;“I have been playing video games since the Atari 2600, for 35 years. Nowadays, game ‘museums’ — getting the opportunity to replay games from my youth, and share them with my child — are a source of joy for me,” one individual commenter wrote.&lt;/p&gt;
&lt;p&gt;“I would love the opportunity to explore some of the early online / MMO games that I spent so much time on in the past!”&lt;/p&gt;
&lt;p&gt;Game on?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;—&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;sup&gt;Header image via &lt;a href=&quot;https://mmos.com/review/star-wars-galaxies&quot;&gt;MMOs.com&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 21 Dec 2017 20:17:53 +0000</pubDate>
<dc:creator>duramato</dc:creator>
<og:type>article</og:type>
<og:title>Gamers Want DMCA Exemption for 'Abandoned' Online Games - TorrentFreak</og:title>
<og:description>Several organizations and gaming fans are asking the Copyright Office to make a DMCA circumvention exemption for abandoned online games, to preserve them for future generations. The exemption would allow museums and libraries to offer copies of abandoned online servers, so these games won't turn to dust.</og:description>
<og:url>https://torrentfreak.com/gamers-want-dmca-exemption-for-abandoned-online-games-171221/</og:url>
<og:image>https://torrentfreak.com/images/swgammo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://torrentfreak.com/gamers-want-dmca-exemption-for-abandoned-online-games-171221/</dc:identifier>
</item>
<item>
<title>Open-sourcing MonkeyType – Let your Python code type-hint itself</title>
<link>https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881</link>
<guid isPermaLink="true" >https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881</guid>
<description>&lt;p name=&quot;9513&quot; id=&quot;9513&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Today we are excited to announce we’re open-sourcing &lt;a href=&quot;https://github.com/Instagram/MonkeyType&quot; data-href=&quot;https://github.com/Instagram/MonkeyType&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;MonkeyType&lt;/a&gt;, our tool for automatically adding type annotations to your Python 3 code via runtime tracing of types seen.&lt;/p&gt;
&lt;h3 name=&quot;9612&quot; id=&quot;9612&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Motivation&lt;/h3&gt;
&lt;p name=&quot;3433&quot; id=&quot;3433&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;At Instagram we have hundreds of engineers working on well over a million lines of Python 3. Every day we have new engineers joining the team from other projects and other languages who need to ramp up quickly and get productive in our codebase. And we’re constantly shipping new code into production, every few minutes, all day long, every day. So we’re keen to make our code easier for new developers to read and understand, as well as more amenable to static analysis that shrinks the domain of possible bugs. Type annotations and static type checking fit that bill.&lt;br/&gt; &lt;br/&gt;Writing new code with type annotations is easy enough; most of our engineers are eager to do that. But the returns on static type checking are low until we reach a critical mass of type-annotated code, especially our core frameworks and libraries. In other words: we have a &lt;em class=&quot;markup--em markup--p-em&quot;&gt;lot&lt;/em&gt; of existing code that needs type annotations added.&lt;br/&gt; &lt;br/&gt;Our first forays into manually adding type annotations were discouraging. It can take hours to annotate a single module, sometimes painstakingly tracing through multiple layers of function calls and objects to understand the possible types at some call site. (This is, of course, the same pain that anyone trying to maintain that function might experience; that’s why we want to add type annotations!)&lt;br/&gt; &lt;br/&gt;So we built MonkeyType. Instead of guessing or spelunking for the right types, let your test suite or (better!) your production system tell you what the real types are.&lt;/p&gt;
&lt;h3 name=&quot;8266&quot; id=&quot;8266&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Usage&lt;/h3&gt;
&lt;p name=&quot;e6d2&quot; id=&quot;e6d2&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Sounds great! I’ve run &lt;code class=&quot;markup--code markup--p-code&quot;&gt;pip install monkeytype&lt;/code&gt;. What's next?&lt;br/&gt; &lt;br/&gt;Before MonkeyType can tell us anything useful, we need to let it trace some function calls. The simplest way to do this is with &lt;code class=&quot;markup--code markup--p-code&quot;&gt;monkeytype run&lt;/code&gt;, which runs any Python script under MonkeyType tracing. For instance, you can easily run your test suite under MonkeyType:&lt;/p&gt;
&lt;pre name=&quot;a336&quot; id=&quot;a336&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
$ monkeytype run runtests.py
&lt;/pre&gt;
&lt;p name=&quot;590c&quot; id=&quot;590c&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;(or &lt;code class=&quot;markup--code markup--p-code&quot;&gt;monkeytype run `which pytest`&lt;/code&gt;, or whatever your preferred flavor.)&lt;br/&gt; &lt;br/&gt;While your tests are running, MonkeyType inspects the argument types and return/yield type of every function call, recording them in a database. (By default it keeps them in a local SQLite database, but like just about everything MonkeyType does, &lt;a href=&quot;http://monkeytype.readthedocs.io/en/latest/configuration.html#monkeytype.config.Config.trace_store&quot; data-href=&quot;http://monkeytype.readthedocs.io/en/latest/configuration.html#monkeytype.config.Config.trace_store&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;this is configurable&lt;/a&gt;.)&lt;/p&gt;
&lt;p name=&quot;8cb4&quot; id=&quot;8cb4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Of course, your test suite may not provide the best type information — sometimes tests use fakes instead of the real types, and we’ve found plenty of cases where type checking revealed that our tests were accidentally passing in different types from production. So if you don’t want to annotate based on your test suite, you can record call traces from production runtime. For this use case, MonkeyType provides &lt;a href=&quot;http://monkeytype.readthedocs.io/en/latest/tracing.html#trace-context-manager&quot; data-href=&quot;http://monkeytype.readthedocs.io/en/latest/tracing.html#trace-context-manager&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;a context manager API&lt;/a&gt;:&lt;/p&gt;
&lt;pre name=&quot;9c4b&quot; id=&quot;9c4b&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
from monkeytype import trace
&lt;/pre&gt;
&lt;pre name=&quot;157a&quot; id=&quot;157a&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
with trace():&lt;br/&gt;# ...
&lt;/pre&gt;
&lt;p name=&quot;bc6f&quot; id=&quot;bc6f&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;If you need even more flexibility, you can &lt;a href=&quot;http://monkeytype.readthedocs.io/en/latest/tracing.html#calltracer&quot; data-href=&quot;http://monkeytype.readthedocs.io/en/latest/tracing.html#calltracer&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;create your own&lt;/a&gt; &lt;code class=&quot;markup--code markup--p-code&quot;&gt;CallTracer&lt;/code&gt;, install it with &lt;code class=&quot;markup--code markup--p-code&quot;&gt;sys.setprofile()&lt;/code&gt;, and remove it when you're ready.&lt;br/&gt; &lt;br/&gt;Once you've got some call traces recorded, you can generate a stub file for any module:&lt;/p&gt;
&lt;pre name=&quot;9db3&quot; id=&quot;9db3&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
$ monkeytype stub some.module
&lt;/pre&gt;
&lt;p name=&quot;4133&quot; id=&quot;4133&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;If the stub looks reasonable and you want to apply the annotations directly to your code, MonkeyType will do that too:&lt;/p&gt;
&lt;pre name=&quot;4723&quot; id=&quot;4723&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
$ monkeytype apply some.module
&lt;/pre&gt;
&lt;p name=&quot;8134&quot; id=&quot;8134&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Review the now-annotated code in &lt;code class=&quot;markup--code markup--p-code&quot;&gt;some/module.py&lt;/code&gt;, correct the annotations if needed, and commit it!&lt;br/&gt; &lt;br/&gt;Because of the &lt;a href=&quot;http://monkeytype.readthedocs.io/en/latest/stores.html&quot; data-href=&quot;http://monkeytype.readthedocs.io/en/latest/stores.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;backing-store design&lt;/a&gt;, you don't have to record traces and annotate all at one go. You can collect traces into the database over a long period of time and gradually annotate more and more modules from the collected data as you're ready to do so.&lt;/p&gt;
&lt;p name=&quot;8be6&quot; id=&quot;8be6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With &lt;a href=&quot;http://monkeytype.readthedocs.io/en/latest/generation.html#type-rewriters&quot; data-href=&quot;http://monkeytype.readthedocs.io/en/latest/generation.html#type-rewriters&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;configurable type rewriters&lt;/a&gt;, you can easily tweak MonkeyType’s generated type annotations for your preferred type annotation style or specific edge cases in your codebase.&lt;br/&gt; &lt;br/&gt; For lots more details on customization options, refer to &lt;a href=&quot;https://monkeytype.readthedocs.io&quot; data-href=&quot;https://monkeytype.readthedocs.io&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;the documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3 name=&quot;1b38&quot; id=&quot;1b38&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Open Source&lt;/h3&gt;
&lt;p name=&quot;50d0&quot; id=&quot;50d0&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Check out &lt;a href=&quot;https://github.com/Instagram/MonkeyType&quot; data-href=&quot;https://github.com/Instagram/MonkeyType&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;the code&lt;/a&gt;, give it a spin, and let us know what you think! We’re looking forward to your bug reports and suggested improvements. If you’d like to contribute, we have a &lt;a href=&quot;https://github.com/Instagram/MonkeyType/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot; data-href=&quot;https://github.com/Instagram/MonkeyType/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;list of suggested starter tasks&lt;/a&gt; in the issue tracker.&lt;br/&gt; &lt;br/&gt;MonkeyType does require Python 3.6+, and generates only Python 3 style type annotations (no type comments). If you aren’t quite there yet, you may want to start with &lt;a href=&quot;https://www.youtube.com/watch?v=66XoCk79kjM&quot; data-href=&quot;https://www.youtube.com/watch?v=66XoCk79kjM&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;our PyCon 2017 keynote&lt;/a&gt; on how we migrated those million lines of code to Python 3 last year.&lt;/p&gt;
&lt;h3 name=&quot;1140&quot; id=&quot;1140&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;How we use MonkeyType at Instagram&lt;/h3&gt;
&lt;p name=&quot;007c&quot; id=&quot;007c&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;We choose a small random sample of production web requests and turn on MonkeyType tracing via a Django middleware. Traces are stored and retrieved from &lt;a href=&quot;https://www.facebook.com/notes/facebook-engineering/under-the-hood-data-diving-with-scuba/10150599692628920/&quot; data-href=&quot;https://www.facebook.com/notes/facebook-engineering/under-the-hood-data-diving-with-scuba/10150599692628920/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;SCUBA&lt;/a&gt;, Facebook’s data analysis platform, using &lt;a href=&quot;http://monkeytype.readthedocs.io/en/latest/stores.html&quot; data-href=&quot;http://monkeytype.readthedocs.io/en/latest/stores.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;a custom CallTraceStore&lt;/a&gt;. We run tracing constantly, so we are always adding new type traces from production. Since production code changes frequently, this keeps our traces up to date.&lt;br/&gt; &lt;br/&gt;Whenever an engineer wants to add type annotations to a module, they just run &lt;code class=&quot;markup--code markup--p-code&quot;&gt;monkeytype stub&lt;/code&gt; and then &lt;code class=&quot;markup--code markup--p-code&quot;&gt;monkeytype apply&lt;/code&gt;, fix any type errors revealed by the new annotations, and submit a diff!&lt;/p&gt;
&lt;h3 name=&quot;6fc1&quot; id=&quot;6fc1&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Results&lt;/h3&gt;
&lt;p name=&quot;69b3&quot; id=&quot;69b3&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;With MonkeyType’s help, we’ve already annotated over a third of the functions in our codebase, and we’re already seeing type-checking catch many bugs that would have otherwise likely shipped to production. Race you to 100%!&lt;/p&gt;
&lt;p name=&quot;fff7&quot; id=&quot;fff7&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Carl Meyer is an engineer on Instagram’s infrastructure team.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 21 Dec 2017 20:16:08 +0000</pubDate>
<dc:creator>ambivalence</dc:creator>
<og:title>Let your code type-hint itself: introducing open source MonkeyType</og:title>
<og:url>https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881</og:url>
<og:description>Today we are excited to announce we’re open-sourcing MonkeyType, our tool for automatically adding type annotations to your Python 3 code…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881?gi=8399983c7474</dc:identifier>
</item>
<item>
<title>Apple Says Apps Must Now Disclose Odds for Loot Boxes</title>
<link>https://kotaku.com/apple-says-itunes-apps-must-now-disclose-odds-for-loot-1821497923</link>
<guid isPermaLink="true" >https://kotaku.com/apple-says-itunes-apps-must-now-disclose-odds-for-loot-1821497923</guid>
<description>&lt;div class=&quot;img-wrapper lazy-image&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;img-permalink-sub-wrapper&quot;&gt;&lt;span class=&quot;js_lightbox-wrapper lightbox-wrapper&quot;&gt;&lt;img src=&quot;https://i.kinja-img.com/gawker-media/image/upload/s--fbrCY5ix--/c_scale,fl_progressive,q_80,w_800/nrx5hz31v79uumuvu7yi.png&quot; class=&quot;lazyload ls-lazy-image-tag&quot; data-sizes=&quot;auto&quot; data-width=&quot;951&quot; data-chomp-id=&quot;nrx5hz31v79uumuvu7yi&quot; data-format=&quot;png&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
The Simpsons Tapped Out is one of many iOS games to include loot boxes.&lt;/div&gt;
&lt;p&gt;Apple announced &lt;a href=&quot;https://developer.apple.com/news/?id=12202017a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; onclick=&quot;window.ga('send', 'event', 'Embedded Url', 'External link', 'https://developer.apple.com/news/?id=12202017a', {metric25:1})&quot;&gt;a sweeping revision to the guidelines for its App Store yesterday&lt;/a&gt;, which now includes a provision that loot boxes must be transparent about their odds.&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;“Apps offering ‘loot boxes’ or other mechanisms that provide randomized virtual items for purchase must disclose the odds of receiving each type of item to customers prior to purchase,” reads the new rule, which will affect the most popular games on iOS, including &lt;em&gt;Hearthstone&lt;/em&gt;, &lt;em&gt;The Simpsons Tapped Out&lt;/em&gt;, and &lt;em&gt;Clash Royale&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Loot boxes, which have always been common in the world of iOS gaming, are virtual grab bags that can give players a host of items ranging from common to rare. Most of the time, you can buy these loot boxes not just for in-game currency but for real money, which has led some players to classify them as gambling—a label that &lt;a href=&quot;https://kotaku.com/esrb-says-it-doesnt-see-loot-boxes-as-gambling-1819363091&quot; rel=&quot;nofollow&quot; onclick=&quot;window.ga('send', 'event', 'Embedded Url', 'Internal link', 'https://kotaku.com/esrb-says-it-doesnt-see-loot-boxes-as-gambling-1819363091', {metric25:1})&quot;&gt;the Entertainment Software Rating Board doesn’t acknowledge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This news comes after a year full of controversy over loot boxes, which many players see as manipulative, predatory methods to get them to spend more money on games. Although many mobile games have always had them, loot boxes received renewed attention this year thanks to their inclusion in console games like &lt;em&gt;Shadow of War&lt;/em&gt; and &lt;em&gt;Star Wars Battlefront II&lt;/em&gt;. Rage over the latter game dominated its launch to the point where its publisher, EA, announced the day before release that &lt;a href=&quot;https://kotaku.com/ea-temporarily-removes-microtransactions-from-star-wars-1820528445&quot; rel=&quot;nofollow&quot; onclick=&quot;window.ga('send', 'event', 'Embedded Url', 'Internal link', 'https://kotaku.com/ea-temporarily-removes-microtransactions-from-star-wars-1820528445', {metric25:1})&quot;&gt;it was temporarily removing all of &lt;em&gt;Battlefront II&lt;/em&gt;’s microtransactions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As rage over these practices gets louder and louder, Apple’s move is the first of what may be many steps that game publishers and distributors voluntarily take in an attempt to avoid regulation from outside bodies.&lt;/p&gt;
</description>
<pubDate>Thu, 21 Dec 2017 17:35:27 +0000</pubDate>
<dc:creator>kelukelugames</dc:creator>
<og:title>Apple Says Apps Must Now Disclose Odds For Loot Boxes</og:title>
<og:type>article</og:type>
<og:image>https://i.kinja-img.com/gawker-media/image/upload/s--i05n2NU---/c_fill,fl_progressive,g_center,h_450,q_80,w_800/nrx5hz31v79uumuvu7yi.png</og:image>
<og:url>https://kotaku.com/apple-says-itunes-apps-must-now-disclose-odds-for-loot-1821497923</og:url>
<og:description>Apple announced a sweeping revision to the guidelines for its App Store yesterday, which now includes a provision that loot boxes must be transparent about their odds.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://kotaku.com/apple-says-itunes-apps-must-now-disclose-odds-for-loot-1821497923</dc:identifier>
</item>
<item>
<title>Chrome is Not the Standard</title>
<link>http://www.chriskrycho.com/2017/chrome-is-not-the-standard.html</link>
<guid isPermaLink="true" >http://www.chriskrycho.com/2017/chrome-is-not-the-standard.html</guid>
<description>&lt;p&gt;Over the past few years, I’ve increasingly seen articles with headlines that run something like, “New Feature Coming To the Web”—followed by content which described how Chrome had implemented an experimental new feature. “You’ll be able to use this soon!” has been the promise.&lt;/p&gt;
&lt;p&gt;The reality is a bit more complicated. Sometimes, ideas the Chrome team pioneers make their way out to the rest of the browsers and become tools we can all use. Sometimes… they get shelved because none of the other browsers decide to implement them.&lt;/p&gt;
&lt;p&gt;Many times, when this latter tack happens, developers grouse about the other browser makers who are “holding the web back.” But there is a fundamental problem in this way of looking at things: &lt;em&gt;Chrome isn’t the standard.&lt;/em&gt; The fact that Chrome proposes something, and even the fact that a bunch of developers like it, does not a standard make. Nor does it impose an obligation to other browsers to prioritize it, or even to ship it.&lt;/p&gt;
&lt;p&gt;As web developers, it can be easy to become focused on interesting new features for the platform we work on. That’s no different than the excitement Android and iOS developers have when Google and Apple release new SDKs for developing on their platforms. It’s healthy to be excited about possible new features, things that might make our jobs easier or enable us to do things we couldn’t do before.&lt;/p&gt;
&lt;p&gt;But there &lt;em&gt;is&lt;/em&gt; an important difference between those platforms and the web. Those platforms are the domain of a single vendor. The web is a shared platform. This is its unique benefit, and its unique cost. It uniquely allows us to write software that can actually run, and run reasonably well, &lt;em&gt;everywhere&lt;/em&gt;. But it also means that a minimum of four companies—the major browser vendors—get a say in whether a feature is a &lt;em&gt;feature&lt;/em&gt; or whether it’s just an interesting idea one of the teams had.&lt;/p&gt;
&lt;p&gt;Let’s get concrete about an example that’s been extremely high-profile for the last couple years—and, to be clear, one I think is a &lt;em&gt;good&lt;/em&gt; idea from Google: &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot; title=&quot;Google’s PWA page&quot;&gt;progressive web apps&lt;/a&gt; (hereafter &lt;abbr title=&quot;Progressive Web App&quot;&gt;PWA&lt;/abbr&gt;). They have been pitched by Google and other supporters as an unambiguous win for the user experience of complex web applications. And, as a web developer myself, I’m actually inclined to agree with that assessment! However, I have fairly regularly seen people getting angry at especially Apple for not prioritizing support for &lt;abbr title=&quot;Progressive Web App&quot;&gt;PWA&lt;/abbr&gt;s in (especially iOS) Safari—Apple is, in this view, “holding back the future of the web.”&lt;/p&gt;
&lt;p&gt;Well… no. For any given idea Google pitches, Apple may or may not be sold on Google’s vision of the web, or they may even think it’s a good idea but not &lt;em&gt;more&lt;/em&gt; important than other things they’re working on.&lt;/p&gt;
&lt;p&gt;And this is what it &lt;em&gt;means&lt;/em&gt; to be part of the web platform. No single company gets to dominate the others in terms of setting the agenda for the web. Not Firefox, with its development and advocacy of &lt;a href=&quot;http://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt;, dear to my heart though that is. Not Microsoft and the IE/Edge team, with its proposal of the CSS grid spec in &lt;em&gt;2011&lt;/em&gt;, sad though I am that it languished for as long as it did. Not Apple, with its pitch for &lt;a href=&quot;https://webkit.org/blog/7846/concurrent-javascript-it-can-work/&quot; title=&quot;“Concurrent JavaScript: it can work!”&quot;&gt;concurrent JavaScript&lt;/a&gt;. And not—however good its developer relations team is—Chrome, with any of the many ideas it’s constantly trying out, including &lt;abbr title=&quot;Progressive Web App&quot;&gt;PWA&lt;/abbr&gt;s.&lt;/p&gt;
&lt;p&gt;It’s also worth recognizing how these decisions aren’t, in almost any case, unalloyed pushes for “the future of the web.” They reflect &lt;em&gt;business&lt;/em&gt; priorities, just like any other technical prioritization. Google cares about &lt;abbr title=&quot;Progressive Web App&quot;&gt;PWA&lt;/abbr&gt;s because Google makes its money from the web and wants people to spend more of their time on the web. Apple cares about things like the battery life implications and the sheer speed of its iOS JavaScript engine because it makes money from hardware and it wants people to be happy with their iPhones and iPads.&lt;/p&gt;
&lt;p&gt;Does any one of those browser’s commitments map cleanly to &lt;em&gt;all&lt;/em&gt; users’ (or even all &lt;em&gt;developers’&lt;/em&gt;) priorities? Of course not! This is and always has been the beauty of a competitive browser landscape. I’m a web developer who wants &lt;abbr title=&quot;Progressive Web App&quot;&gt;PWA&lt;/abbr&gt; support everywhere—so I want Apple supporting it. But I’m also a smartphone user who wants those applications to &lt;em&gt;scream&lt;/em&gt; on my device—not to crawl, like they do on Chrome on Android, which is still years behind iOS in performance. As an end user, not just a developer, it matters to me that running Safari on my laptop instead of Chrome can dramatically increase my battery life.&lt;/p&gt;
&lt;p&gt;These are tradeoffs, plain and simple. Chrome ships new features fast, but they’re not always stable and they often have performance costs. Safari ships new features on a much slower cadence, but they’re usually solid and always perform incredibly well. These are both engineering and business tradeoffs, and the companies behind the browsers are making because of their own business and engineering priorities. Don’t valorize any of the browser vendors, and don’t act as if &lt;em&gt;any&lt;/em&gt; of them is the standard, or a reliable predictor of the future. Instead, value what each brings to the table, but also value the interplay &lt;em&gt;at&lt;/em&gt; the table, and the ways each of these vendors pushes the others and challenges the others’ assumptions of what is most important. That’s what makes the web so great, even when it makes things move more slowly. Sometimes—often, even!—moving more slowly not in the &lt;em&gt;experimental&lt;/em&gt; phase but in the &lt;em&gt;finalizing&lt;/em&gt; phase makes for a much better outcome overall.&lt;/p&gt;
</description>
<pubDate>Thu, 21 Dec 2017 17:14:37 +0000</pubDate>
<dc:creator>chriskrycho</dc:creator>
<og:url>http://www.chriskrycho.com/2017/chrome-is-not-the-standard.html</og:url>
<og:title>Chrome is Not the Standard</og:title>
<og:description>No single browser vendor represents ”the future of the web.” Each ships in line with its own business priorities. And that's a good thing.</og:description>
<og:image>http://www.chriskrycho.com//assets/images/ck.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.chriskrycho.com/2017/chrome-is-not-the-standard.html</dc:identifier>
</item>
<item>
<title>Rust in 2017: what we achieved</title>
<link>https://blog.rust-lang.org/2017/12/21/rust-in-2017.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2017/12/21/rust-in-2017.html</guid>
<description>&lt;p&gt;Rust’s development in 2017 fit into a single overarching theme: &lt;strong&gt;increasing productivity, especially for newcomers to Rust&lt;/strong&gt;. From tooling to libraries to documentation to the core language, we wanted to make it easier to get things done with Rust. That desire led to &lt;a href=&quot;https://blog.rust-lang.org/2017/02/06/roadmap.html&quot;&gt;a roadmap&lt;/a&gt; for the year, setting out 8 high-level objectives that would guide the work of the team.&lt;/p&gt;&lt;p&gt;How’d we do? &lt;strong&gt;&lt;em&gt;Really, really well&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There’s not room in a single post to cover everything that happened, but we’ll cover some of the highlights below.&lt;/p&gt;

&lt;h2 id=&quot;rust-should-have-a-lower-learning-curve&quot;&gt;Rust should have a lower learning curve&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Books&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RustBridge curriculum&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://rustbridge.github.io/&quot;&gt;RustBridge workshops&lt;/a&gt; are focused on getting underrepresented people into Rust. Ashley Williams has vastly improved &lt;a href=&quot;https://rustbridge.github.io/a-very-brief-intro-to-rust/#1&quot;&gt;the workshop curriculum&lt;/a&gt; this year, and we’re planning on having a teacher training in early 2018. The curriculum is available for anyone to use, as long as events are only called RustBridge if they focus on underrepresented folks. See more about RustBridge in 2017 under the Mentorship goal!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Language improvements&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;rust-should-have-a-pleasant-edit-compile-debug-cycle&quot;&gt;Rust should have a pleasant edit-compile-debug cycle&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo check&lt;/code&gt; workflow&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;Cargo &lt;a href=&quot;https://blog.rust-lang.org/2017/03/16/Rust-1.16.html&quot;&gt;now offers&lt;/a&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;check&lt;/code&gt; subcommand which can be used to speed up the edit-compile cycle when you’re working on getting your code to pass the compiler’s checks. This mode, in particular, skips producing executable artifacts for crates in the dependency tree, instead doing just enough work to be able to type check the current crate.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Incremental recompilation&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;The cornerstone of our approach to improving compilation times is incremental recompilation, allowing rebuilds to reuse significant pieces of work from prior compilations. Over the course of the year we have put a lot of work into making this happen and now we are happy to announce that incremental compilation will &lt;a href=&quot;https://blog.rust-lang.org/2014/10/30/Stability.html&quot;&gt;start riding the trains&lt;/a&gt; with the next beta version of the compiler in January and become available on the stable channel with Rust 1.24 in February!&lt;/li&gt;
&lt;li&gt;You can see how incremental recompilation performs in practice on some of our key benchmarks below. Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;-opt&lt;/code&gt; refers to optimized builds, “best case” refers to a recompilation with no changes, and &lt;code class=&quot;highlighter-rouge&quot;&gt;println&lt;/code&gt; refers to a recompilation with a small change, like adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;println&lt;/code&gt; call to a function body. We expect the 50+% speedups we’re seeing now to continue to grow next year as we push incremental recompilation more deeply through the compiler.&lt;/li&gt;
&lt;li&gt;Together with the changes in the compiler we will also update Cargo to use incremental recompilation by default for select use cases, so you can take advantage of improved compile times without the need for additional configuration. Of course you will also be able to opt into and out of the feature on a case by case basis as you see fit.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://blog.rust-lang.org/images/2017-12-Retro/incr-bench.png&quot; alt=&quot;Incremental recompilation benchmarks&quot; class=&quot;center&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;rust-should-provide-a-solid-but-basic-ide-experience&quot;&gt;Rust should provide a solid, but basic IDE experience&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Rust now has solid IDE support in IntelliJ and via the Rust Language Server (RLS). Whether you prefer a fully-featured IDE or a more lightweight editor with IDE features, you can boost your productivity by taking advantage of great Rust integration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IntelliJ&lt;/strong&gt;. Rust has official support in &lt;a href=&quot;https://blog.jetbrains.com/blog/2017/08/04/official-support-for-open-source-rust-plugin-for-intellij-idea-clion-and-other-jetbrains-ides/&quot;&gt;JetBrains’ IDEs&lt;/a&gt; (IntelliJ IDEA, CLion, WebStorm, etc.), which includes:
&lt;ul&gt;&lt;li&gt;Finding types, functions and traits across the whole project, its dependencies and the standard library.&lt;/li&gt;
&lt;li&gt;Hierarchical overview of the symbols defined in the current file.&lt;/li&gt;
&lt;li&gt;Search for all implementations of a given trait.&lt;/li&gt;
&lt;li&gt;Go to definition of symbol at cursor.&lt;/li&gt;
&lt;li&gt;Navigation to the parent module.&lt;/li&gt;
&lt;li&gt;Refactoring and code generation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RLS&lt;/strong&gt;. The &lt;a href=&quot;https://github.com/rust-lang-nursery/rls&quot;&gt;RLS&lt;/a&gt; is an editor-independent source of intelligence about Rust programs. It is used to power Rust support in many editors including &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=rust-lang.rust&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DanielGriffen.Rust&quot;&gt;Visual Studio&lt;/a&gt;, and &lt;a href=&quot;https://atom.io/packages/ide-rust&quot;&gt;Atom&lt;/a&gt;, with more in the pipeline. It is on schedule for a 1.0 release in early 2018, but is currently &lt;a href=&quot;https://blog.rust-lang.org/2017/10/12/Rust-1.21.html&quot;&gt;available in preview form&lt;/a&gt; for all channels (nightly, beta, and stable). It supports:
&lt;ul&gt;&lt;li&gt;Code completion (using Racer)&lt;/li&gt;
&lt;li&gt;Go to definition (and peek definition if the editor supports it)&lt;/li&gt;
&lt;li&gt;Find all references&lt;/li&gt;
&lt;li&gt;Find impls for a type or trait&lt;/li&gt;
&lt;li&gt;Symbol search (current file and project)&lt;/li&gt;
&lt;li&gt;Reformatting using rustfmt, renaming&lt;/li&gt;
&lt;li&gt;Apply error suggestions (e.g., to add missing imports)&lt;/li&gt;
&lt;li&gt;Docs and types on hover&lt;/li&gt;
&lt;li&gt;Code generation using snippets&lt;/li&gt;
&lt;li&gt;Cargo tasks&lt;/li&gt;
&lt;li&gt;Installation and update of the RLS (via rustup)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;rust-should-integrate-easily-into-large-build-systems&quot;&gt;Rust should integrate easily into large build systems&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Alternative registries.&lt;/strong&gt; Cargo now has unstable support for &lt;a href=&quot;http://rust-lang.github.io/rfcs/2141-alternative-registries.html&quot;&gt;installing crates from registries other than crates.io&lt;/a&gt;. This will enable companies to manage and use internal crates as easily as open source crates. Work is underway developing crate servers that are more tailored for private use than the crates.io server is.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cargo as a component&lt;/strong&gt;. A lot of work this year went into gathering constraints from stakeholders who want to integrate Rust crates into a large existing build system (like &lt;a href=&quot;https://bazel.build/&quot;&gt;Bazel&lt;/a&gt;). The Cargo team has &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2136&quot;&gt;formulated a vision&lt;/a&gt; of Cargo as a suite of components that can be customized or swapped out, making it easy for an external build system to manage the work it is built to do, while still integrating with crates.io and with Cargo workflows. While we did not get as far as we hoped in terms of implementing this vision, there is ongoing work spiking out “build plan generation” to a sufficient degree that it can support the Firefox build system and &lt;a href=&quot;http://gittup.org/tup/&quot;&gt;Tup&lt;/a&gt;. This initial spike should provide a good strawman for further iteration in early 2018.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;rust-should-provide-easy-access-to-high-quality-crates&quot;&gt;Rust should provide easy access to high quality crates&lt;/h2&gt;
&lt;h2 id=&quot;rust-should-be-well-equipped-for-writing-robust-servers&quot;&gt;Rust should be well-equipped for writing robust servers&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Futures and Tokio&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;Much of the story for Rust on the server has revolved around its async I/O story. The futures crate &lt;a href=&quot;http://aturon.github.io/blog/2016/08/11/futures/&quot;&gt;was introduced&lt;/a&gt; in late 2016, and the Tokio project (which provides a networking-focused event loop for use with futures) &lt;a href=&quot;https://tokio.rs/blog/tokio-0-1/&quot;&gt;published its 0.1&lt;/a&gt; early in 2017. Since then, there’s been significant work building out the “Tokio ecosystem”, and a lot of feedback about the core primitives. Late in the year, the Tokio team proposed a &lt;a href=&quot;https://github.com/tokio-rs/tokio-rfcs/pull/3&quot;&gt;significant API revamp&lt;/a&gt; to streamline and clarify the crate’s API, and work is underway on a book dedicated to asynchronous programming in Rust. This latest round of work is expected to land very early in 2018.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Async ecosystem&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;There’s been huge growth in the ecosystem around Tokio, including support for &lt;a href=&quot;https://github.com/tokio-rs/tokio-curl&quot;&gt;curl&lt;/a&gt;, &lt;a href=&quot;https://github.com/alexcrichton/tokio-openssl&quot;&gt;openssl&lt;/a&gt;, &lt;a href=&quot;https://github.com/dermesser/tokio-inotify&quot;&gt;inotify&lt;/a&gt;, &lt;a href=&quot;https://github.com/alexcrichton/tokio-signal&quot;&gt;unix signals&lt;/a&gt;, &lt;a href=&quot;https://github.com/dwrensha/capnproto-rust&quot;&gt;cap’n proto&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/tk-sendfile&quot;&gt;sendfile&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/tokio-postgres&quot;&gt;postgres&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/couchbase&quot;&gt;couchbase&lt;/a&gt;, and more. In addition, Rust has async server libraries for both &lt;a href=&quot;http://hyper.rs/&quot;&gt;HTTP1&lt;/a&gt; and &lt;a href=&quot;https://github.com/carllerche/h2&quot;&gt;HTTP2.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Generators&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;Thanks to a heroic community effort, Rust also saw &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;experimental generator support&lt;/a&gt; land in 2017! That support provides the ingredients necessary for &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; notation, which is &lt;a href=&quot;https://internals.rust-lang.org/t/help-test-async-await-generators-coroutines/5835&quot;&gt;usable today&lt;/a&gt; on nightly. Further work in this area is expected to be a high priority in early 2018.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web frameworks&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;Finally, sophisticated web frameworks like &lt;a href=&quot;https://rocket.rs/&quot;&gt;Rocket&lt;/a&gt; (sync) and &lt;a href=&quot;http://gotham.rs/&quot;&gt;Gotham&lt;/a&gt; (async) have continued to evolve this year, and take advantage of Rust’s expressivity to provide a robust but productive style of programming.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;rust-should-have-10-level-crates-for-essential-tasks&quot;&gt;Rust should have 1.0-level crates for essential tasks&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Libz Blitz&lt;/strong&gt;. The library team launched the &lt;a href=&quot;https://blog.rust-lang.org/2017/05/05/libz-blitz.html&quot;&gt;Libz Blitz&lt;/a&gt; this year, a major effort to vet and improve a large number of foundational crates and push them toward 1.0 releases. It was a massive community effort: we performed a crowd-sourced “crate evaluation” every two weeks, fully vetting a crate against a clear set of guidelines, assessing the issue tracker, and sussing out any remaining design questions. While not all of the assessed crates have published a 1.0 yet, they are all very close to doing so. The full list includes: &lt;a href=&quot;https://github.com/rust-lang-nursery/log/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;log&lt;/a&gt;, &lt;a href=&quot;https://github.com/sebasmagri/env_logger/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;env_logger&lt;/a&gt;, &lt;a href=&quot;https://github.com/nikomatsakis/rayon/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;rayon&lt;/a&gt;, &lt;a href=&quot;https://github.com/carllerche/mio/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20is%3Aopen%20label%3A%22help%20wanted%22%20&quot;&gt;mio&lt;/a&gt;, &lt;a href=&quot;https://github.com/servo/rust-url/issues/319&quot;&gt;url&lt;/a&gt;, &lt;a href=&quot;https://github.com/seanmonstar/num_cpus/issues/55&quot;&gt;num_cpus&lt;/a&gt;, &lt;a href=&quot;https://github.com/steveklabnik/semver/issues/139&quot;&gt;semver&lt;/a&gt;, &lt;a href=&quot;https://github.com/hyperium/mime/labels/help%20wanted&quot;&gt;mime&lt;/a&gt;, &lt;a href=&quot;https://github.com/seanmonstar/reqwest/issues?q=is%3Aissue+is%3Aopen+label%3Aeasy&quot;&gt;reqwest&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-lang-nursery/tempdir/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;tempdir&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-threadpool/rust-threadpool/issues/86&quot;&gt;threadpool&lt;/a&gt;, &lt;a href=&quot;https://github.com/BurntSushi/byteorder/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20is%3Aopen%20label%3A%22help%20wanted%22%20&quot;&gt;byteorder&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-lang-nursery/bitflags/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20is%3Aopen%20label%3A%22help%20wanted%22%20&quot;&gt;bitflags&lt;/a&gt;, &lt;a href=&quot;https://github.com/alexcrichton/cc-rs&quot;&gt;cc-rs&lt;/a&gt;, &lt;a href=&quot;https://github.com/BurntSushi/walkdir/issues/47&quot;&gt;walkdir&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/same-file&quot;&gt;same-file&lt;/a&gt;, &lt;a href=&quot;https://crates.io/crates/memmap&quot;&gt;memmap&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-lang-nursery/lazy-static.rs/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aopen%20is%3Aissue%20label%3A%22help%20wanted%22%20&quot;&gt;lazy_static&lt;/a&gt;, &lt;a href=&quot;https://github.com/alexcrichton/flate2-rs/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;flate2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API Guidelines&lt;/strong&gt;. A great by-product of the Libz Blitz is the &lt;a href=&quot;https://rust-lang-nursery.github.io/api-guidelines/&quot;&gt;API Guidelines&lt;/a&gt; book, which consolidates the official library team API guidance as informed by the standard library and the Libz Blitz process.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;We ran 5 &lt;a href=&quot;https://rustbridge.github.io/&quot;&gt;RustBridge Workshops&lt;/a&gt; in 2017, in Kyiv, Ukraine; Mexico City, Mexico; Portland, OR, USA; Zurich, Switzerland; and Columbus, OH, USA! RustBridge workshops aim to get underrepresented folks started in Rust. Attendees get an introduction to syntax and concepts, work on some &lt;a href=&quot;http://exercism.io/&quot;&gt;exercism&lt;/a&gt; exercises, and build a web application that delivers emergency compliments and crab pictures. We hope to scale this program and help more folks run more workshops in 2018!&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://blog.rust-lang.org/2017/06/27/Increasing-Rusts-Reach.html&quot;&gt;Increasing Rust’s Reach program&lt;/a&gt; brought people with skills from other areas (such as teaching) and with different experiences into Rust so that we can improve in areas where the community is missing these skills and experiences. The participants have helped immensely, and many are planning to continue helping in the Rust community going forward. We’re glad they’re here! Here are some blog posts about the experience:
&lt;/li&gt;
&lt;li&gt;Last but not least, we also launched the first Rust &lt;a href=&quot;https://blog.rust-lang.org/2017/09/18/impl-future-for-rust.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;impl Period&lt;/code&gt;&lt;/a&gt;. This was an ambitious effort to simultaneously help get a lot of new people contributing to the Rust ecosystem while also getting a lot of things done. To that end, we created 40+ working groups, each with their own focus area, leaders, and chat channel. These groups identified good “entry points” for people who wanted to contribute, and helped mentor them through the changes needed. This event was a wild success and resulted in changes and contributions to all areas of Rust, ranging from the compiler internals to documentation to the ecosystem at large. To those of you who participated, a great big thank you — and please keep contributing! To those of you who didn’t get a chance, don’t worry: we hope to make this a regular tradition.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll be spinning up the 2018 roadmap process in the very near future; watch this space!&lt;/p&gt;

&lt;p&gt;We got a staggering amount of work done this year — and the “we” here includes an equally staggering number of people. Because the work has been spread out over so many facets of the project, it’s hard to provide a single list of people who contributed. For the impl period specifically, you can see detailed contribution lists in the newsletters:&lt;/p&gt;
&lt;p&gt;but of course, there have been contributions of all kinds during the year.&lt;/p&gt;
&lt;p&gt;In this post, I’d like to specifically call out the &lt;strong&gt;&lt;em&gt;leaders&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;mentors&lt;/em&gt;&lt;/strong&gt; who have helped orchestrate our 2017 work. Leadership of this kind — where you are working to enable others — is hard work and not recognized enough. So let’s hand it to these folks!&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Cargo&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/carols10cents&quot;&gt;carols10cents&lt;/a&gt;, for sustained leadership and mentoring work throughout the year on crates.io.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Community&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compiler&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/nikomatsakis/&quot;&gt;nikomatsakis&lt;/a&gt;, for an incredible amount of leadership, organization, and mentoring work, &lt;em&gt;and&lt;/em&gt; for a lot of high-value hacking on NLL in particular.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/arielb1/&quot;&gt;arielb1&lt;/a&gt;, likewise for mentoring &lt;em&gt;and&lt;/em&gt; hacking work, spanning both NLL and the rest of the compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/michaelwoerister/&quot;&gt;michaelwoerister&lt;/a&gt;, for pushing continuously on delivering incremental recompilation, and creating opportunities for others to join in throughout the year.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eddyb&quot;&gt;eddyb&lt;/a&gt;, for continuing to act as a general compiler guru, and for tackling some truly heavy lifts around const generics this year.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dev tools&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/nrc/&quot;&gt;nrc&lt;/a&gt;, for overseeing the dev tools group as a whole, and for steady work toward shipping the RLS and rustfmt, despite many thorny infrastructure problems to get there.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/matklad&quot;&gt;matklad&lt;/a&gt;, for the incredible work on &lt;a href=&quot;https://github.com/intellij-rust/intellij-rust/blob/master/CONTRIBUTORS.txt&quot;&gt;IntelliJ Rust&lt;/a&gt;&lt;a href=&quot;https://github.com/intellij-rust/intellij-rust/blob/master/CONTRIBUTORS.txt&quot;&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xanewok&quot;&gt;xanewok&lt;/a&gt;, for &lt;a href=&quot;https://github.com/rust-lang-nursery/rls/graphs/contributors&quot;&gt;enormous efforts&lt;/a&gt; making the RLS a reality.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/fitzgen&quot;&gt;fitzgen&lt;/a&gt;, for happily corralling a huge contributor base around &lt;a href=&quot;https://github.com/rust-lang-nursery/rust-bindgen&quot;&gt;bindgen&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docs&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/steveklabnik/&quot;&gt;steveklabnik&lt;/a&gt;, for launching and overseeing a hugely exciting revamp of rustdoc.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/QuietMisdreavus&quot;&gt;quietmisdreavus&lt;/a&gt;, for overseeing tons of activity in the docs world, but most especially for helping the community significantly improve rustdoc this year.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Mark-Simulacrum&quot;&gt;mark-simulacrum&lt;/a&gt;, for getting the &lt;a href=&quot;https://perf.rust-lang.org/&quot;&gt;perf&lt;/a&gt; website to a highly useful state, and for overhauling rustbuild to better support contribution.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aidanhs/&quot;&gt;aidanhs&lt;/a&gt;, for coordinating maintenance of crater.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Language&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/withoutboats/&quot;&gt;withoutboats&lt;/a&gt;, for keeping us focused on the programmer experience and for helping the community navigate discussion around very thorny language design issues.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cramertj/&quot;&gt;cramertj&lt;/a&gt;, for keeping us focused on &lt;em&gt;shipping&lt;/em&gt;, and in particular building consensus around some of the topics where that’s been hardest to find: impl Trait, and module system changes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nikomatsakis/&quot;&gt;nikomatsakis&lt;/a&gt;, for making the &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2094&quot;&gt;NLL RFC&lt;/a&gt; so accessible, and pioneering the idea of using a separate repo for it to allow for greater participation.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libraries&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/brson/&quot;&gt;brson&lt;/a&gt;, for envisioning and largely overseeing the Libz Blitz initiative.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kodraus&quot;&gt;kodraus&lt;/a&gt;, for gracefully taking over the Libz Blitz and seeing it to a successful conclusion.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dtolnay&quot;&gt;dtolnay&lt;/a&gt;, for taking on the API guidelines work and getting it to a coherent and polished state.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/budziq&quot;&gt;budziq&lt;/a&gt;, for a ton of work coordinating and editing contributions to the cookbook.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dhardy&quot;&gt;dhardy&lt;/a&gt;, for leading a heroic effort to revamp the rand crate.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Technical leaders are an essential ingredient for our success, and I hope in 2018 we can continue to grow our leadership pool, and get even more done — together.&lt;/p&gt;
</description>
<pubDate>Thu, 21 Dec 2017 16:47:09 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2017/12/21/rust-in-2017.html</dc:identifier>
</item>
<item>
<title>Five years with Rust</title>
<link>http://words.steveklabnik.com/five-years-with-rust</link>
<guid isPermaLink="true" >http://words.steveklabnik.com/five-years-with-rust</guid>
<description>&lt;time datetime=&quot;2017-12-21&quot; class=&quot;article_time&quot;&gt;December 21, 2017&lt;/time&gt;&lt;p&gt;Today is five years since I first heard of Rust. &lt;a href=&quot;http://words.steveklabnik.com/four-years-with-rust&quot; rel=&quot;nofollow&quot;&gt;I wrote a post last year&lt;/a&gt; about it. This year, I have something slightly different in mind.&lt;/p&gt;
&lt;p&gt;Five years is a long time in tech. It’s also a long time for me to be focused on one specific thing; other than the pizza job I held in high school and college, I’ve never stayed in a single job for five years. (This is true today as well; it’s not like I got a job with Rust the first day I learned of its existence.) I started with Ruby and Rails in 2008/2009, and my final commits to Rails were in August/September of 2013. So at this point, my career has basically been split in half, rather than dominated by Ruby.&lt;/p&gt;
&lt;p&gt;Five years ago tomorrow, I registered &lt;a href=&quot;http://www.rustforrubyists.com/&quot; rel=&quot;nofollow&quot;&gt;http://www.rustforrubyists.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yesterday, I had lunch with someone I’m very honored to call a friend. We talked about a lot of things, but also about Rust’s past, present, and future. One thing I’ve always felt a little awkward about is that there was a crucial point back in 2011/2012 where I wasn’t sure what to do with myself. I was very frustrated by the industry, and considered doing other things instead. But, as they and I talked about, sometimes, it’s not about your interests. If what you want to do is change the world, caring a lot isn’t enough; you have to analyze what you can actually &lt;em&gt;do&lt;/em&gt;. While I think our industry is pretty broken, I at least have the ability to try and improve it, thanks to my stature. (God, even just typing that makes me feel gross.)&lt;/p&gt;
&lt;p&gt;I decided to put my time into Rust because I believed, and still believe, that it’s an important thing. And I saw the work that needed to be done, and saw that it’s the kind of work that I could do. And so, it’s maybe not something bigger, but I resolved myself to doing the work.&lt;/p&gt;
&lt;p&gt;Five years in, I think my journey has been successful so far. I’m proud of how far Rust has come. That said, there’s a lot more work to do. I’m still committed as ever to getting that work done, and feel proud to be able to work alongside people as amazing as the Rust community.&lt;/p&gt;
&lt;p&gt;Here’s to five more years. 🍻&lt;/p&gt;


&lt;p&gt;740&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;


&lt;p&gt;740&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;
</description>
<pubDate>Thu, 21 Dec 2017 16:46:17 +0000</pubDate>
<dc:creator>doppp</dc:creator>
<og:title>Five years with Rust • Steve Klabnik</og:title>
<og:type>article</og:type>
<og:description>Today is five years since I first heard of Rust. I wrote a post last year about it. This year, I have something slightly different in mind. Five years is a long time in tech. It’s also a long time for me to be focused on one specific thing; other... | Steve Klabnik | &amp;ldquo;The most violent element in society is ignorance.&amp;rdquo; - Emma Goldman</og:description>
<og:image>https://d2l2xugcou6irs.cloudfront.net/svbtle_logo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://words.steveklabnik.com/five-years-with-rust</dc:identifier>
</item>
</channel>
</rss>