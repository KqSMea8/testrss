<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Show HN: I&amp;#039;m 12, learning JS, and wrote Wolfram&amp;#039;s cellular automaton in Node</title>
<link>https://bitbucket.org/liamilan/wolfram-cellular-automata</link>
<guid isPermaLink="true" >https://bitbucket.org/liamilan/wolfram-cellular-automata</guid>
<description>&lt;p&gt;Wolfram's Cellular Automata is a form of 1 dimensional cellular automata in witch all possible rules are encoded into one byte as described here: &lt;a href=&quot;http://mathworld.wolfram.com/CellularAutomaton.html&quot; rel=&quot;nofollow&quot;&gt;http://mathworld.wolfram.com/CellularAutomaton.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an implementation of this system in node.&lt;/p&gt;

&lt;p&gt;First clone the repo by using:&lt;/p&gt;
&lt;div class=&quot;codehilite language-bash&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ git clone https://liamilan@bitbucket.org/liamilan/wolfram-cellular-automata.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the project, enter the directory, and then use:&lt;/p&gt;
&lt;div class=&quot;codehilite language-bash&quot;&gt;
&lt;pre&gt;
$ node index.js &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;div class=&quot;codehilite language-bash&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ node index.js &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;rule number between &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; to &lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Interesting rules: &lt;a href=&quot;https://plato.stanford.edu/entries/cellular-automata/supplement.html&quot; rel=&quot;nofollow&quot;&gt;https://plato.stanford.edu/entries/cellular-automata/supplement.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Initialize inside the directory using:&lt;/p&gt;
&lt;div class=&quot;codehilite language-bash&quot;&gt;
&lt;pre&gt;
$ npm init
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run eslint use:&lt;/p&gt;
&lt;div class=&quot;codehilite language-bash&quot;&gt;
&lt;pre&gt;
$ npm run lint
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 29 Aug 2018 19:55:24 +0000</pubDate>
<dc:creator>liamilan</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://bitbucket.org/liamilan/wolfram-cellular-automata</dc:identifier>
</item>
<item>
<title>We Spent $3.3M Buying Out Investors: Why and How We Did It</title>
<link>https://open.buffer.com/buying-out-investors/</link>
<guid isPermaLink="true" >https://open.buffer.com/buying-out-investors/</guid>
<description>&lt;div class=&quot;text-drop-cap&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;Last month, Buffer spent $3.3 million – about half of all the cash we had in the bank – to buy out our main venture capital (VC) investors.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Starting the conversations, negotiations, and process of this buy out was one of the most important decisions I’ve made in the Buffer journey so far, and it was the culmination of more than a year of work. This is a key inflection point for Buffer that puts us truly on a path of sustainable, long-term growth.&lt;/p&gt;
&lt;p&gt;Here is the full journey of how we decided on this path for the company, including all the details and numbers involved in carrying out a stock buyback of seven of our sixteen Series A investors.&lt;/p&gt;
&lt;h2 id=&quot;buffer%E2%80%99sfundinghistory&quot;&gt;Buffer’s funding history&lt;/h2&gt;
&lt;img src=&quot;https://d2mxuefqeaa7sj.cloudfront.net/s_0E1B4D924A19695D309F12D53DB3C55BE60CBE38E9562B3E9E2E4C9174C07F96_1535552214740_Funding+timeline.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;Here is a summary of funding raised for Buffer since we started in 2010:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;October 2010:&lt;/strong&gt; Buffer was born and initially bootstrapped through revenues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;August 2011:&lt;/strong&gt; Buffer was accepted into AngelPad startup accelerator, with initial $120,000 investment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;December 2011:&lt;/strong&gt; Buffer raised a small seed round of $330,000, to bring total funding to $450,000&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;December 2014:&lt;/strong&gt; Buffer &lt;a href=&quot;https://open.buffer.com/raising-3-5m-funding-valuation-term-sheet/&quot;&gt;raised Series A&lt;/a&gt; of $3.5 million, to bring total funding to $3.95 million&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;July 2018:&lt;/strong&gt; Buffer bought out main Series A investors (investors representing $2.3 million of the $3.5 million raised)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In general, we’ve taken the approach of being profitable and having decent revenue at the time of raising funds. As a result, we’ve been able to raise funding on good terms and keep a fair amount of control. Following each round, we eventually dipped into negative cashflow as a result of accelerated hiring but always had a manageable plan to get us back to profitability.&lt;/p&gt;
&lt;h2 id=&quot;findingandworkingwithanon-traditionalvc&quot;&gt;Finding and working with a non-traditional VC&lt;/h2&gt;
&lt;p&gt;Back in 2014 when we raised our Series A, my co-founder and I had the objective to put together an atypical round. As mentioned in &lt;a href=&quot;https://open.buffer.com/raising-3-5m-funding-valuation-term-sheet/&quot;&gt;our funding announcement&lt;/a&gt;, there were several things that made our Series A different from a traditional startup Series A:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Raising a relatively small amount ($3.5 million in funding when doing $4.6 million in annual revenue)&lt;/li&gt;
&lt;li&gt;Not giving up the usual 20–30 percent of the company (we raised $3.5 million at a $60 million valuation, giving up 6.2 percent)&lt;/li&gt;
&lt;li&gt;Not giving up control (no investor board seat)&lt;/li&gt;
&lt;li&gt;Taking liquidity to de-risk and go long ($2.5m of $3.5m was for founders and early team)&lt;/li&gt;
&lt;li&gt;Not being boxed in to an IPO five to seven years from raising funding&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In our search for a unique investor happy with our conditions, we found Collaborative Fund, and they agreed to lead our Series A funding by putting in 60 percent of the funds. With them as our lead, we found other investors who also approached things differently and we were very proud of the outcome.&lt;/p&gt;
&lt;p&gt;At the time of the Series A, we felt on top of the world. We had around $4.6 million in ARR (annual recurring revenue) and were growing revenues around 150 percent per year. We were at a point where we felt like we could “have it all,” and in many ways we did: we got the VC funding at the ideal terms, we kept control, we took some liquidity, and we continued to operate with full transparency and as a fully remote team. Based on our growth rate, we didn’t foresee any problem in giving a great return to Series A investors and were very excited to make a few bigger bets to see where we could take Buffer.&lt;/p&gt;
&lt;p&gt;Although our goal was to see that growth trend continue, we shared openly that we may not want to raise further funding, sell the company, or IPO. We were transparent that we wanted to be able to keep questioning the way things are done. Specifically, we communicated that we wanted the option to be able to give a return via distributions, not an exit.&lt;/p&gt;
&lt;p&gt;Collaborative Fund &lt;a href=&quot;https://www.collaborativefund.com/blog/with-noses-pressed-against-the-glass/&quot;&gt;suggested that we account for these various paths&lt;/a&gt; within the structure of the Series A funding. We added downside protection for the Series A investors, in the form of a right to claim a return of 9 percent annual interest on their investment at any point starting five years after the initial investment. At the time, I didn’t appreciate how important this clause would become. Even our legal counsel commented that this was not something he saw too often.&lt;/p&gt;
&lt;h2 id=&quot;theevolutionofbufferandourfitwithvcfunding&quot;&gt;The evolution of Buffer and our fit with VC funding&lt;/h2&gt;
&lt;p&gt;Buffer has had an interesting and somewhat rocky few years since that Series A funding. In mid–2015, in an effort to keep our growth rates high and comparable to startups with much more funding, we grew the team rapidly and tried to increase our pace of product development. We found ourselves with financial struggles after growing expenses without results following quickly enough. The rate at which our bank balance was decreasing made us realize that we didn’t have a proper grasp of our financials. Our financial situation presented a key turning point for us: Would we solve this by raising more funding or by cutting expenditures? In one of my most excruciating decisions, we chose to solve the situation without outside funds and did &lt;a href=&quot;https://open.buffer.com/layoffs-and-moving-forward/&quot;&gt;a round of layoffs to become profitable&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After making these tough decisions and changing some fundamental internal operations, we became profitable within a few months. While profitability was exciting, our growth rate suffered. Within the leadership team we started to discuss what growth rate we wanted to achieve. Whereas in the past we’d “had it all” and achieved growth alongside creating a unique culture with a fully remote team and high levels of transparency, it now started to feel like we had to choose between those things. It was suggested that some of the fundamentals that I had come to value could be removed to create a productivity environment that would increase the growth rate. I refused to compromise on the transparency and remote work aspects of our culture, so we started to explore slower growth goals, and what that would mean for the future of Buffer. Ultimately, &lt;a href=&quot;https://open.buffer.com/change-at-buffer/&quot;&gt;my co-founder Leo and our CTO Sunil left the company&lt;/a&gt; in early 2017 based around this foundational vision decision.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d2mxuefqeaa7sj.cloudfront.net/s_0E1B4D924A19695D309F12D53DB3C55BE60CBE38E9562B3E9E2E4C9174C07F96_1535552285495_file.png&quot; alt=&quot;&quot; width=&quot;2256&quot; height=&quot;1168&quot;/&gt;Our efforts to become profitable to break out of financial struggles, compared with our growth rate decreasing over time.&lt;/p&gt;
&lt;p&gt;As a result of the tumultuous events of layoffs, leadership misalignment and eventual departures, I was noticing a breakdown in some of our core values and what made us special and different. To me, these were fundamental values that shape not only how Buffer feels, but also how we perform. I decided to dig in, make some changes and grow back the trust of the team.&lt;/p&gt;
&lt;p&gt;Those adjustments were not easy. Alongside growing our profitability and becoming sustainable for the long-term, I also had to figure out how my role would be different without my co-founder, and how to effectively manage the leadership team alone. It has been completely worth it, because we accomplished this all while staying true to our core values and unique ways of working. We opted for calm company growth that allows team members to bond and have time to become productive, rather than having a large portion of the team be completely new to Buffer. We became very profitable and started to work on longer-term projects to &lt;a href=&quot;https://open.buffer.com/buffer-product-vision/&quot;&gt;diversify our product offerings&lt;/a&gt; and revenue sources. This was in contrast to the more traditional venture-backed startup path of having a burn rate and relying on continual rounds of funding with the goal to maximize growth rate above all else. We could have hired outside senior leadership, grown the team considerably and pushed for hyper growth, but I believed that it was not the best path for Buffer.&lt;/p&gt;
&lt;p&gt;As the months passed and we made progress towards long-term sustainability, our net profit margin grew from months of losses to 7 percent to consistently exceeding 25 percent. We started to have months where we had profit of $300,000 to $500,000 and the bank balance started to grow rapidly. The challenge with this, though, was that our growth rate had decreased. This was a trade-off I was willing to make. Naturally, the decreased growth rate, combined with my co-founder leaving, began some challenging conversations with Collaborative Fund. Buffer was not on a traditional venture-funded path anymore, and I have full empathy for how this made us less interesting in the eyes of our lead investor.&lt;/p&gt;
&lt;p&gt;In the first half of 2017 I had a number of conversations with Collaborative Fund. They were around two years into their investment, and given Buffer’s refocused path of sustainable growth, the topic of the previously mentioned 9 percent return downside protection naturally arose. The downside protection offered a time-frame and guarantee of returns. While discussing this further, I was taken aback when I was asked whether I would step down as CEO in the event that Buffer could not afford the 9 percent annual return. Although it may be a reasonable question from a pure business perspective, and I was confident we’d be able to deliver, it shocked me to my core. The level of communication we once had started to break down after that and it triggered much reflection and some sleepless nights for me.&lt;/p&gt;
&lt;h2 id=&quot;whywechosetobuyoutourmainvcinvestors&quot;&gt;Why we chose to buy out our main VC investors&lt;/h2&gt;
&lt;p&gt;By late 2017, it was clear that Buffer had become less of a fit for VC funding. Month by month we increased our financial sustainability by growing our profit margin. We also worked hard to create and promote a culture where team members could enjoy their work for years without leading to burnout.&lt;/p&gt;
&lt;p&gt;With healthy profits leading to our bank balance growing from $2 million to over $5 million, we could see that we were on a path towards being able to afford the 9 percent downside protection return for our Series A investors. By this point, our seed investors had been supporting the company for almost six years, and several were starting to ask when they may get a return.&lt;/p&gt;
&lt;p&gt;The Series A class of shares included a protective provision which meant that Buffer was unable to offer liquidity for other shareholders (seed or common) without approval from a majority of the Series A. In order to get Buffer into a situation where we could more freely offer liquidity to early investors and team members, we knew that the first step would be to buy out the Series A investors and adjust this protective provision.&lt;/p&gt;
&lt;p&gt;By moving ahead with a stock buyback for our Series A investors, we would be able to unlock this ability to give other shareholders a return, and we would put the company squarely on a path of long-term sustainability. I believe that the market is still wide open for Buffer to continue to grow, and I’ve fallen in love with the way we work and the incredible team and customers I get to work with. I began to pursue buying out our VC investors in earnest.&lt;/p&gt;
&lt;h2 id=&quot;howwepreparedforandcarriedoutastockbuyback&quot;&gt;How we prepared for and carried out a stock buyback&lt;/h2&gt;
&lt;p&gt;The first key step in working towards buying out our main VC investors was to build up the cash reserves to make it possible. One way we did this was to ensure that our revenue growth rate exceeded our rate of hiring. Next, I reached back out to Collaborative Fund, and a couple of other key investors in our Series A, about the downside protection. I initiated the discussions and then handed this over to our Director of Finance, &lt;a href=&quot;https://twitter.com/westcoasthubb&quot;&gt;Caryn Hubbard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Caryn did a great job of having productive conversations with investors and gradually converging with them on a deal that everyone could agree to. Our finalized terms were very close to the pre-determined 9 percent return included in the Series A terms. We moved the date forward and proposed that we could offer this return three-and-a-half years into their investment rather than after five years.&lt;/p&gt;
&lt;p&gt;As part of the transaction, we also amended the protective provisions of the Series A shares to allow Buffer to have the ability in the future to offer liquidity to seed investors and common shareholders (mostly early team members). In order to achieve this, there were specific thresholds of approval we needed from each set of shareholders:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Approval from 60 percent of Series A shareholders&lt;/li&gt;
&lt;li&gt;Approval from 50 percent of Preferred shareholders (combination of Series A and Seed investors)&lt;/li&gt;
&lt;li&gt;Approval from 50 percent of All shareholders (including Common)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This took some delicate communication and investor relations work, which Caryn and I worked on together. Overall, it was straightforward to achieve these approvals once we explained our reasons for moving ahead with this stock buyback and the possibilities it would open up for the future. As I personally own over 45 percent of stock, meeting the final threshold of approval was simple once we had our investors on board.&lt;/p&gt;
&lt;p&gt;Caryn worked closely with our legal counsel to put together the documents for these approvals, and to ensure we had considered every angle. The stock buyback was set up as a tender offer and followed specific tender offer rules. A key concept is that every shareholder receives the same information in order to make their decision on whether to sell shares.&lt;/p&gt;
&lt;p&gt;With that, we started the stock buyback process. We gave every Series A shareholder the option to sell their shares at the agreed return. The resulting valuation was $80.8 million, representing a 40.5 percent return over three-and-a-half years.&lt;/p&gt;
&lt;p&gt;All investors had a twenty-day period to make their decision on whether to sell, as part of the tender offer. Once we had all the responses back from investors, we processed the transactions (our biggest ever wire transfers!) and our legal counsel completed the transaction by transferring the stock certificates.&lt;/p&gt;
&lt;h2 id=&quot;theimpactofbuyingoutseriesainvestors&quot;&gt;The impact of buying out Series A investors&lt;/h2&gt;
&lt;p&gt;Our two main VCs made up 60 percent of Series A shares. Beyond that, five more investors chose to sell their shares for a total of 67.29 percent of Series A shares bought back by the company.&lt;/p&gt;
&lt;p&gt;Now that the stock buyback is complete, the ownership of Buffer has changed somewhat. The Series A investors now hold 2.65 percent of outstanding shares, and those with Common or Seed shares saw an ownership increase of ~5 percent.&lt;/p&gt;
&lt;img src=&quot;https://d2mxuefqeaa7sj.cloudfront.net/s_0E1B4D924A19695D309F12D53DB3C55BE60CBE38E9562B3E9E2E4C9174C07F96_1535492915376_file.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;Note: these charts don’t include our employee stock option pool. All team members at Buffer have stock options and, as they are exercised, other outstanding shares are diluted. Currently, a further 10 percent of Buffer is allocated to stock options.&lt;/p&gt;
&lt;p&gt;The impact of the buyback on our bank balance was $3.3 million. Our balance after the transaction remained healthy at over $4 million. Our net profit has continued to be around $400,000 to $500,000 per month and we have already surpassed $5 million in the bank. If you’d like to follow along with our quarterly transparency reports with more of our financial information, &lt;a href=&quot;https://open.buffer.com/category/transparency/buffer-monthly-reports/investor-report/&quot;&gt;they are available here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;thanksforreading&quot;&gt;Thanks for reading&lt;/h2&gt;
&lt;p&gt;We have been very happy to give investors a return and also create better alignment within our shareholder base towards the path we are on. I’m grateful that many Series A investors, especially angel investors from the seed round, chose to stay on board for the journey ahead. We will be considering stock buyback opportunities in the future, as well as alternative sources of funds, in order to provide liquidity for other investors and team members.&lt;/p&gt;
&lt;p&gt;I’m confident that the small business market is still wide open for Buffer to continue to grow, and I’m committed to continuing to build great products our customers love and cultivate a workplace culture of trust, freedom and flexibility. These are the things that drive me and form my deeper personal purpose. This stock buyback is another step in the right direction that signifies to me that this will be a very long-term endeavor. Now, more clearly than ever, we have the privilege to continue thanks to the revenues from our paying customers.&lt;/p&gt;
&lt;p&gt;I truly believe that we should be talking more about these topics as an industry, and I hope our experience can be useful to those who may be considering a similar path. I invite you to leave a comment on this post and share your thoughts on the topic.&lt;/p&gt;

&lt;p class=&quot;single-content-author__details&quot;&gt;Originally written &lt;span&gt;Aug 29, 2018&lt;/span&gt;. &lt;span&gt;Last updated Aug 29, 2018&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 29 Aug 2018 18:33:06 +0000</pubDate>
<dc:creator>Sujan</dc:creator>
<og:type>article</og:type>
<og:title>We Spent $3.3M Buying Out Investors: Why and How We Did It</og:title>
<og:description>Last month, Buffer spent $3.3 million – about half of all the cash we had in the bank – to buy out our main venture capital (VC) investors. Here is the full journey of how we decided on this path for the company, including all the details and numbers involved in carrying out a stock buyback.</og:description>
<og:url>https://open.buffer.com/buying-out-investors/</og:url>
<og:image>https://open.buffer.com/wp-content/uploads/2018/08/buffer_apr2018_spacescandidsportraits-1063-1.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://open.buffer.com/buying-out-investors/</dc:identifier>
</item>
<item>
<title>Bye bye BetterSlack</title>
<link>https://g3rv4.com/2018/08/bye-bye-betterslack</link>
<guid isPermaLink="true" >https://g3rv4.com/2018/08/bye-bye-betterslack</guid>
<description>&lt;p&gt;A couple days ago, I &lt;a href=&quot;https://g3rv4.com/2018/08/betterslack&quot;&gt;announced BetterSlack&lt;/a&gt;. Tomorrow (August 30th) at 4pm ET I’m unshipping it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://g3rv4.com/public/images/unship.gif&quot; alt=&quot;silver lining 1: I get to use this image&quot; width=&quot;500&quot; height=&quot;226&quot;/&gt;&lt;/p&gt;

&lt;p&gt;On Aug 28th, I got an email from someone in Slack’s Legal team. Here’s what it says:&lt;/p&gt;
&lt;blockquote readability=&quot;66&quot;&gt;
&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;My name is XXX and I work at Slack on the Legal team. One of the things I do here is help developers and companies understand how to stay in compliance with our policies when building things for Slack.&lt;/p&gt;
&lt;p&gt;I’m writing today regarding your BetterSlack application (described here: https://g3rv4.com/2018/08/betterslack). Based on your description of the Chrome extension, your application is in violation of a number of provisions set forth in Slack’s Acceptable Use Policy (https://slack.com/acceptable-use-policy).&lt;/p&gt;
&lt;p&gt;In particular, we state that you may not…&lt;/p&gt;
&lt;p&gt;“…attempt to reverse engineer, decompile, hack, disable, interfere with, disassemble, modify, copy, translate, or disrupt the features, functionality, integrity, or performance of the Services (including any mechanism used to restrict or control the functionality of the Services), any third party use of the Services, or any third party data contained therein (except to the extent such restrictions are prohibited by applicable law);&lt;/p&gt;
&lt;p&gt;Injecting javascript into Slack via Chrome extension can have an impact on the privacy and security of our customers and our product. Furthermore, this can create reliability issues when we ship product updates.&lt;/p&gt;
&lt;p&gt;In order to remedy this, we ask that you please modify your product so that you are not forcing your own code into our services. We have opened a number of channels for the developer community to build tools that improve their experience with Slack. We encourage you to utilize those channels to their fullest extent.&lt;/p&gt;
&lt;p&gt;Furthermore, and secondary to the issue stated above, we must also ask that you choose a new name for your project. It is okay to be descriptive about what your product does, but we prefer that you do not include the word “Slack” in your product’s name.&lt;/p&gt;
&lt;p&gt;Please understand that we are not interested in squelching creativity or stopping people from encouraging the use of our platform. We simply need to make sure that everyone is building things in a manner that prioritizes the security of our customer’s data and is respectful of their experience with Slack.&lt;/p&gt;
&lt;p&gt;Please respond to this message to acknowledge that you have received it. If you can resolve the matters specified above in the next seven days, that would be excellent. If you anticipate that it will take longer, please let us know. I’ve cc’d our Legal alias so that in the event that I am unable to respond, one of our product counsels will be able to provide any necessary assistance.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I kind of imagined that the name could be an issue, and I totally understand that. I checked how other non-official products were using it and it didn’t seem to be significantly different. However, it’s totally understandable and I’d be happy to change it.&lt;/p&gt;
&lt;p&gt;The real problem here, is with this sentence: “we ask that you please modify your product so that you are not forcing your own code into our services”. That effectively kills the extension, since they don’t provide a way (&lt;a href=&quot;https://twitter.com/SlackHQ/status/1033369811965886464&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;and have no plans of providing a way&lt;/a&gt;) for a third party to curate the user’s experience in this way.&lt;/p&gt;

&lt;p&gt;I built it for me (+ family, friends and colleagues) because it really makes Slack better for me. I thought that sharing it through the chrome web store would make it easier for them to install it and, if I could share it with the world, then we all win! what if another dev or two contributed? that would be great, right?&lt;/p&gt;
&lt;p&gt;BetterSlack makes me like Slack more (or… full disclosure: dislike Slack less). What makes me sad is that it got lots of traction (more than any personal project I worked on before) because it solves real people’s problems and Slack missed an opportunity here.&lt;/p&gt;
&lt;p&gt;They missed the opportunity of engaging with the community &lt;em&gt;that actually wants to make their product better&lt;/em&gt;. I’m still excited about adding more features to BetterSlack (taking a couple ideas from other systems… like bonfire). The dream goal was that maybe… maybe… Slack could incorporate some of that into their product? in an ideal world, BetterSlack wouldn’t exist! but not because of their Legal Team, but because of their Product Team.&lt;/p&gt;
&lt;p&gt;To show what I mean about the missed opportunity, check how &lt;a href=&quot;https://stackapps.com/a/8016/48463&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Jon Ericson provided feedback on a user’s app that was putting Stack Overflow in the menu bar&lt;/a&gt;. Check how &lt;a href=&quot;https://github.com/sindresorhus/refined-github/issues/1469&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;GitHub engaged with the community of RefinedGithub&lt;/a&gt; (which is an extension that injects javascript on GitHub’s site… and they’re ok with). GitHub’s case is &lt;strong&gt;exactly the same as this one&lt;/strong&gt;… isn’t it telling that they’re not concerned about how they affect their user’s privacy and security?&lt;/p&gt;
&lt;p&gt;What is it going to happen? I’m going to continue working on it, but I won’t be able to distribute it… what worries me is that if anybody &lt;em&gt;actually wants to steal users’ credentials&lt;/em&gt; there’s now an easy way. Just edit my extension, do whatever you want and you’ll get people installing it.&lt;/p&gt;
&lt;p&gt;Also… what’s the deal with the thousand extensions that already inject js everywhere? where’s the limit? would they sue Tampermonkey? this extension was born as a bunch of userscripts.&lt;/p&gt;
&lt;p&gt;As I don’t want problems, I’ll take it down. Sad, and even more convinced that Slack is not a product I’d use if I had a choice. It’s funny how at my previous company I was Slack’s advocate (in my defense, we were using Skype before).&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;I got to use the unship gif that I got in love with when &lt;a href=&quot;https://meta.stackoverflow.com/q/330427/920295&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Stack Overflow Teams unshipped&lt;/a&gt; (not to be confused with &lt;a href=&quot;https://stackoverflow.com/teams&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Stack Overflow for Teams&lt;/a&gt;, which is alive and amazing)&lt;/li&gt;
&lt;li&gt;The encouragement that I received is amazing. People I admire a lot. People I don’t know. Thank you all, it really made a difference on a moment that I needed it.&lt;/li&gt;
&lt;li&gt;I got to be in the front page of HN two days in a row! (the second time for minutes, but hey… I made it there!)&lt;/li&gt;
&lt;li&gt;The project already has forks. There’s no stopping it.&lt;/li&gt;
&lt;li&gt;I’m going to continue improving the extension until I don’t need to use Slack anymore. I have more ideas… like threaded conversations, where you hover on the reply and it highlights the other messages in the same convo. I would have loved to ship it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Keep on hacking stuff, keep on modding whatever you see that doesn’t make sense. Originally I said we should be asking Slack to improve things, but honestly… I think we all have better things to do with our time.&lt;/p&gt;
&lt;p&gt;This post was just to get it out of my system, and to let me focus on what’s important. A way to channel my emotions.&lt;/p&gt;

&lt;p&gt;Really, it was an incredible experience to receive your support.&lt;/p&gt;
&lt;p&gt;Thanks for reading.&lt;/p&gt;
</description>
<pubDate>Wed, 29 Aug 2018 16:00:59 +0000</pubDate>
<dc:creator>g3rv4</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://g3rv4.com/2018/08/bye-bye-betterslack</dc:identifier>
</item>
<item>
<title>Miami Will Be Underwater Soon. Its Drinking Water Could Go First</title>
<link>https://www.bloomberg.com/news/features/2018-08-29/miami-s-other-water-problem</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/features/2018-08-29/miami-s-other-water-problem</guid>
<description>&lt;head&gt;&lt;title&gt;Terms of Service Violation&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;24&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;9.4285714285714&quot;&gt;&lt;img src=&quot;https://www.bloomberg.com/graphics/assets/img/BB-Logo-2line.svg&quot; width=&quot;310&quot;/&gt;
&lt;p&gt;Your usage has been flagged as a violation of our &lt;a href=&quot;http://www.bloomberg.com/tos&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;terms of service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For inquiries related to this message please &lt;a href=&quot;http://www.bloomberg.com/feedback&quot;&gt;contact support&lt;/a&gt;. For sales inquiries, please visit &lt;a href=&quot;http://www.bloomberg.com/professional/request-demo&quot;&gt;http://www.bloomberg.com/professional/request-demo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;If you believe this to be in error, please confirm below that you are not a robot by clicking &quot;I'm not a robot&quot; below.&lt;/h3&gt;
&lt;br/&gt;&lt;h3&gt;Please make sure your browser supports JavaScript and cookies and that you are not blocking them from loading. For more information you can review the Terms of Service and Cookie Policy.&lt;/h3&gt;
&lt;br/&gt;&lt;h3 id=&quot;block_uuid&quot;&gt;Block reference ID:&lt;/h3&gt;
&lt;/div&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 29 Aug 2018 15:15:59 +0000</pubDate>
<dc:creator>hourislate</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=d6b39ad0-abe7-11e8-9338-eb92ad82b045&amp;url=L25ld3MvZmVhdHVyZXMvMjAxOC0wOC0yOS9taWFtaS1zLW90aGVyLXdhdGVyLXByb2JsZW0=</dc:identifier>
</item>
<item>
<title>What Was the Microsoft Network?</title>
<link>http://www.codersnotes.com/notes/the-microsoft-network/</link>
<guid isPermaLink="true" >http://www.codersnotes.com/notes/the-microsoft-network/</guid>
<description>&lt;p&gt;No, &lt;a href=&quot;http://www.msn.com&quot;&gt;not that one&lt;/a&gt;. Or &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Live_Messenger&quot;&gt;that other one&lt;/a&gt;. The letters &quot;MSN&quot; have meant so many things to so many people, a term that's been overloaded with a thousand different meanings. In the same way they throw the words &quot;National Lampoon&quot; onto any random movie to indicate that it claims to be a comedy, they slap the &quot;MSN&quot; label onto &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_services_by_MSN&quot;&gt;just about anything&lt;/a&gt; so that your poor brain goes &quot;oh, a brand I've heard of&quot; and you get fooled into thinking it must have a certain minimum level of goodness to it.&lt;/p&gt;
&lt;p&gt;But I'm talking about the &lt;em&gt;original&lt;/em&gt; MSN. Not the simple three-letter acronym we know today, but it's full title: &lt;strong&gt;The Microsoft Network&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The Microsoft Network was a long forgotten experiment that started back during the Windows 95 Preview Program somewhere around 1994. It was an exciting time for me as a young lad. Having a copy of Windows 95 a year before it came out made me feel Special, Hip, and Cool, three properties which were much sought after by teenage computer nerds. For perhaps the only time in its life, Windows was &lt;em&gt;cool&lt;/em&gt;, and so was I.&lt;/p&gt;
&lt;p&gt;Microsoft had already released all this fancy new tech with NT 3.1 a few years earlier, but no one noticed so after getting good n' drunk they had another crack at it. Windows 95 replaced the tired old segmented memory model with a glorious flat one where the pointers actually worked how C claimed they did. It dumped the bug-prone co-operative task switcher in favor of a slightly less bug-prone version of pre-emptive multitasking, meaning your machine wouldn't lock up due to busy loops and would have to find exciting new 32-bit ways to lock up instead. It had a &lt;s&gt;plagiarized&lt;/s&gt; &lt;em&gt;visionary&lt;/em&gt; new shell that presented the file system as a truly window-based navigation model. It was a pretty exciting time for PC owners back then. After all, these new directions brought the PC almost up to the same spec that &lt;a href=&quot;http://toastytech.com/guis/amiga1.html&quot;&gt;other computers had been enjoying ten years ago&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But it wasn't just the technological advancements. The Chicago betas made you feel like you were part of a secret club. A group of people who could all hang out together in the &lt;em&gt;super-secret clubhouse&lt;/em&gt;. But what was this clubhouse, you ask? Well sit down little Timmy, and I'll explain to you what The Microsoft Network actually was.&lt;/p&gt;
&lt;div class=&quot;caption right&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/the-microsoft-network/tablsrt2.gif#right%23thumb&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.codersnotes.com/notes/the-microsoft-network/tablsrt2.gif#right%23thumb&quot; title=&quot;The delights of WinCIM accessing CompuServe.&quot;/&gt;&lt;/a&gt;
&lt;p&gt;The delights of WinCIM accessing CompuServe.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You see, back in 1994 Facebook hadn't yet invented the Internet, so if you wanted to go online and let your computer transfer viruses to and from other computers, you had to use one of the many private networks. There were lots of them. CompuServe was the biggie. AOL was another, and in the UK they had Cix. Each of them had their own users, their own content and forums, and formed a delightful set of walled gardens that couldn't communicate with each other.&lt;/p&gt;
&lt;p&gt;You dialled their phone number on your modem and talked directly to them. Each had their own shitty little piece of software you ran which presented their service, usually in some god-awful MDI-based thing which was barely more than a GDI rewrite of their old BBS interface. CompuServe felt like a dinosaur at the time. They didn't even give you the decency of a &lt;em&gt;username&lt;/em&gt; on CompuServe, they gave you a number like you were &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Prisoner&quot;&gt;Patrick McGoohan&lt;/a&gt;. It'd be like &lt;code&gt;71477,134&lt;/code&gt; or some rubbish. They always started with a 7, had a bunch of octal digits, and had a comma in the middle. Why? Because that's &lt;a href=&quot;https://retrocomputing.stackexchange.com/questions/5086/what-was-the-technical-reason-behind-the-octal-digits-used-for-compuserve-user-i&quot;&gt;how the login on PDP-10s worked&lt;/a&gt;, which is what CompuServe was powered on. Unbelievably, it seems some poor suckers may still have been paying for CompuServe &lt;a href=&quot;https://web.archive.org/web/20171117155520/http://forums.compuserve.com/discussions/Help_Community/_/_/ws-help/187244.1&quot;&gt;as recently as last year&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Microsoft looked upon this gluttony of power and figured they wanted a piece of that sweet action. They had big plans for their own Microsoft Network. It was going to be the CompuServe killer. It would have all its own content, and features like being able to make online purchases safely, just like today's App Store allows you to throw money at your phone until Apple's pockets rip open under the weight of that sweet 30% cut.&lt;/p&gt;
&lt;p&gt;Of course it was doomed from the start. The raw, unfiltered mess of the Internet was quickly becoming the New Cool Thing, and no-one wanted to sign up for yet another Stupid Proprietary Thing, of which there were an endless supply of. But Microsoft did one thing which got people using it (including myself), at least for a while. They gave it away &lt;em&gt;free&lt;/em&gt; to people in the Super Secret Club. That's right, if you had the Windows 95 beta disc because you'd &lt;s&gt;pirated it from somewhere&lt;/s&gt; paid the measly $20 bucks to sign up, you could get free access to The Microsoft Network.&lt;/p&gt;
&lt;p&gt;I've got kinda sidetracked here waffling on about the history of dial-up BBS systems. What I really want to be concerned with is what made The Microsoft Network unique and interesting: the interface.&lt;/p&gt;
&lt;p&gt;The big thing in Windows 95 was their new shell. They wanted &lt;em&gt;everything&lt;/em&gt; to go through this. They had this vision of every object in the computer being represented as a shell object, so there would be a seamless intermix between files, documents, system components, you name it. They had this project called Cairo that was supposed to throw out that scruffy old file-based filesystem and bring in a shiny new Object Based File System instead. It never happened, so we'll never know exactly how it might have turned out. But the brave lads at MS didn't give up that easily and so the idea stayed on, admittedly without the tech to back it up, and the principles wormed their way into such glorious developments as The Microsoft Network.&lt;/p&gt;
&lt;div class=&quot;caption right&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/the-microsoft-network/msn1_02.jpg#right%23thumb&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.codersnotes.com/notes/the-microsoft-network/msn1_02.thumb.jpg#right%23thumb&quot; title=&quot;Browsing The Microsoft Network.&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Browsing The Microsoft Network.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And so The Microsoft Network wasn't a program you loaded like CompuServe. It was part of the OS, with folder icons that looked just like real folders. It was a kind of version of the Web where you could browse online data the same way you browsed your file system. This is what made it cool.&lt;/p&gt;
&lt;p&gt;Everything was an object, and everything appeared in its own Explorer window. You could click on the icon for -- oh I don't know, what do humans talk about? Let's say &lt;em&gt;Goat Tickling&lt;/em&gt;. You could click on the Goat Tickling BBS, and it'd open up a new window where people talked about Goat Tickling and each message was listed exactly like the &quot;Details&quot; view of a file system directory. From the user's perspective, there was &lt;em&gt;no difference&lt;/em&gt; between this and a regular file window. The magic of the extensible shell blended the online world and your own desktop seamlessly, with no need for web browsers or forum software. It all just fell together under the same shared interface.&lt;/p&gt;
&lt;p&gt;It's impossible to access this service today though, in case you wanted to take a nostalgic little look, as the servers than ran it have long since been euthanized. But if you're interested, you can watch this &lt;em&gt;delightful&lt;/em&gt; and certainly not-at-all dated Microsoft promotional video, where &lt;a href=&quot;https://youtu.be/5DqJwmzG6Fk?t=1133&quot;&gt;Chandler and Rachel from Friends learn how to look at cat pictures on The Microsoft Network&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;caption left&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/the-microsoft-network/133191-msn.png#left%23thumb&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.codersnotes.com/notes/the-microsoft-network/133191-msn.thumb.png#left%23thumb&quot; title=&quot;Get yer data right here in Explorer folks!&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Get yer data right here in Explorer folks!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I loved The Microsoft Network back then, even though I knew it was terrible. It felt like there was the germ of a new idea here, something that hadn't been tried before on our poor little consumer computers. It was as if the data was suddenly free of the shackles of being displayed in a program. Data wasn't just a web page, or a program showing its own internal databases. The Microsoft Network made it look like the data was &lt;em&gt;right there&lt;/em&gt;, and you could click it and drag it around! For a brief time, back in 1995, it felt like we were on the verge of the true object-oriented web, a world filled with open data and free from the tyranny of the walled gardens.&lt;/p&gt;
&lt;p&gt;Of course, like all such things, it turned out to just be a big fat lie.&lt;/p&gt;
&lt;p&gt;Microsoft's shell extensions are such a walled garden that even the rest of the OS can't bluff its way in. Open up your Control Panel right now, and right-click on one of the things (e.g. Keyboard). You can select &quot;Create Shortcut&quot;, and it'll magically plop a shortcut to that item onto your Desktop.&lt;/p&gt;
&lt;aside&gt;(At least, it will if you've got the classic Control Panel enabled. If you've got it on the defaults it'll probably just give you a list of Helpful Tools, like &lt;em&gt;&quot;Find and fix problems&quot;&lt;/em&gt;, &lt;em&gt;&quot;Save backup copies of your files with File History&quot;&lt;/em&gt;, or &lt;em&gt;&quot;Search for solutions to your problem online because you sure as hell ain't gonna find them in here&quot;&lt;/em&gt;. The new Microsoft UI strategy was conceived when the product manager happened to call the IRS one day, and was faced with a phone menu of vague, unnavigable choices which circle around the thing you really want but never lead to it, causing him to listen for hours while occasionally pressing '5' to hear his choices again. He was impressed by the amount of time he'd managed to waste, and wishing to inflict the same suffering on his own users he immediately wrote a memo ordering everything in Windows to follow the same pattern. Any direct access to information was thrown out and hidden from the user at all costs, in case they might actually manage to change something. I hear in the next Windows build they're actually going to replace Control Panel with a copy of Eliza that's been hooked up to a magic 8-ball. No really, it's true. But I digress.)&lt;/aside&gt;&lt;p&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/the-microsoft-network/fake.png#right%23thumb&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.codersnotes.com/notes/the-microsoft-network/fake.thumb.png#right%23thumb&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;caption right&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/the-microsoft-network/real.png#right%23thumb&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.codersnotes.com/notes/the-microsoft-network/real.thumb.png#right%23thumb&quot; title=&quot;One of these two is a _real_ shortcut.&quot;/&gt;&lt;/a&gt;
&lt;p&gt;One of these two is a &lt;em&gt;real&lt;/em&gt; shortcut.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So we've got a shortcut now our our desktop. It looks just like a &lt;em&gt;real&lt;/em&gt; shortcut, right? Just like any other file. Now right-click on that shortcut you've made, and see where it points to. What's that, I hear you cry? It points to &lt;code&gt;Control Panel\All Control Panel Items\Keyboard&lt;/code&gt;! Where the hell &lt;em&gt;is&lt;/em&gt; that? Pop open a command prompt and try and run &quot;dir&quot; on that location. You sure as hell won't get a directory listing of it. And why, you say, is the text displayed as a fixed label? Why can't I &lt;em&gt;change&lt;/em&gt; the shortcut's target to a different file, like I can with a regular shortcut?&lt;/p&gt;
&lt;p&gt;Unfortunately, like most things involving the Windows shell, these objects aren't &lt;em&gt;real&lt;/em&gt; objects. Well no, I mean presumably &lt;em&gt;some&lt;/em&gt; part of the system thinks they are. But they're not to &lt;em&gt;us&lt;/em&gt;. They're not things you can just link to like a regular file. They're not like web pages where you can share the link with someone else. They live in their own weird little inaccessible namespace. Explorer knows how to peer over the fence into these little gardens, but no one else does. It's a facade, one designed to make you think you actually know how your computer works.&lt;/p&gt;
&lt;p&gt;It was the kind of thing other OSs like Plan 9 were trying to do, except the Plan 9 guys didn't bollocks it up. See what happened was a senior director at Microsoft came in one night around 3am, loaded on blow and Jack Daniels, and shouted to the room &quot;I've got it lads,&quot; in a big booming voice that woke up the people struggling to ship Cairo for the third time, &quot;we'll implement it all in COM!&quot; A great sigh rippled around but they knew in their hearts that was how things would be from now on, there was no point fighting it, and thus the great triumph known as the Windows Shell Namespace was born.&lt;/p&gt;
&lt;p&gt;Microsoft's shell system made all the same mistakes CompuServe did, just in different ways. They thought numbers were a good way to name things, so you ended up with every shell object being given a 32-digit GUID. And they made it so their content was &lt;em&gt;only&lt;/em&gt; linkable (if at all) via these same GUIDs, thus only those knights brave enough to fight the GUID monster may be allowed to enter. So while there might be a way for someone to copy a link to something they saw on The Microsoft Network, good luck actually being able to paste that link into another program, access it via the command line, or send it to a friend.&lt;/p&gt;
&lt;div class=&quot;caption right&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/the-microsoft-network/openfile.png#right%23thumb&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.codersnotes.com/notes/the-microsoft-network/openfile.thumb.png#right%23thumb&quot; title=&quot;How Microsoft tell you to select a file.&quot;/&gt;&lt;/a&gt;
&lt;p&gt;How Microsoft tell you to select a file.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is what makes the whole COM system really &lt;em&gt;really&lt;/em&gt; stupid. It's like they don't &lt;em&gt;want&lt;/em&gt; you to be able to work with it. They &lt;em&gt;want&lt;/em&gt; to make it hard for you to access and share data, because code that were to do something wreckless like call &lt;code&gt;fopen&lt;/code&gt; is code that could run on &lt;em&gt;anyone's&lt;/em&gt; operating system, not just theirs. They &lt;em&gt;want&lt;/em&gt; to keep you on the phone selecting numbered options, because if you stop doing that you might actually &lt;em&gt;achieve&lt;/em&gt; something. And if you go around wrecklessly &lt;em&gt;inventing&lt;/em&gt; new things on your own, you might not need Microsoft any more.&lt;/p&gt;
&lt;p&gt;It used to be if you wanted the user to select a file, you'd call &lt;code&gt;GetOpenFileName&lt;/code&gt;. That was it, one swift function call and you were done. Now they've deprecated that and are telling you you gotta call &lt;code&gt;CoCreateInstance&lt;/code&gt;, have a &lt;code&gt;CLSID_FileOpenDialog&lt;/code&gt;, you'll need an &lt;code&gt;CLSCTX_INPROC_SERVER&lt;/code&gt; too and probably some &lt;code&gt;IID_PPV_ARGS&lt;/code&gt;. Then you'll need a &lt;code&gt;CDialogEventHandler_CreateInstance&lt;/code&gt;, and maybe end up with a &lt;code&gt;IShellItem&lt;/code&gt;. You'll need about a dozen or so calls to &lt;code&gt;SUCCEEDED(hr)&lt;/code&gt; too, in case one of the many internal details you never asked to know about happens to go wrong. Think I'm exaggerating? Check &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/Bb776913(v=VS.85).aspx&quot;&gt;Microsoft's own documentation on it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It seems insane, but it's the same trap Microsoft just keep falling into. Hell, just go look at any &lt;a href=&quot;https://github.com/Microsoft/DirectX-Graphics-Samples/blob/master/Samples/Desktop/D3D12Fullscreen/src/D3D12Fullscreen.cpp&quot;&gt;DirectX 12&lt;/a&gt; code to see how they've not learned their lesson.&lt;/p&gt;
&lt;p&gt;Phew, I'm exhausted after that long, unnecessary and possibly incoherent COM ramble. Got a little carried away there. Where were we? Ah yes, MSN. The Microsoft Network failed because it was just one more walled garden. One that was walled-off in two ways. One was from a business standpoint, of trying to keep users locked into it and locked off from the rest of the world. But the other was the &lt;em&gt;technical&lt;/em&gt; standpoint. It wanted to make it look like the Network was something you had control over, something you could interact with just like you could with your own data. And it was a lovely idea, but that's all it ever was. The thing itself was never more than a facade. Meanwhile those Internet nerds were off pasting hyperlinks around, doing wreckless things like setting up their &lt;em&gt;own&lt;/em&gt; email addresses and adding new things to the network &lt;em&gt;without having to ask anyone first&lt;/em&gt;. And despite The Microsoft Network making every object look so real on the outside that you could just squeeze it and watch the AddRefs ooze out, the Web's simple idea of giving every thing a unique readable location won by a mile. It wasn't the Object Oriented dream we might have hoped for, but &lt;a href=&quot;https://www.youtube.com/watch?v=oO8-cKJSLvg&quot;&gt;&lt;em&gt;Open Always Wins&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The trouble with a walled garden is that if the thing &lt;em&gt;outside&lt;/em&gt; the garden is bigger and better than the thing &lt;em&gt;inside&lt;/em&gt; the garden, then the wall only serves to keep new customers &lt;em&gt;out&lt;/em&gt; rather than lock them in.&lt;/p&gt;
&lt;p&gt;So what happened to The Microsoft Network? It barely lasted a year after Win95 shipped before being thrown out and replaced with MSN 2.0, which was a much more web-based experience and opened the doors for the cuddly familiar MSN.com we know and love(?) today, and all still have bookmarked in that IE installation we only switch to when we need to test something.&lt;/p&gt;
&lt;p&gt;AOL and Compuserve didn't like it much either. After all, it was eating away at their already rocky marketshare. So they put on their big hat marked &quot;antitrust&quot; and manage to force Microsoft to wedge a big AOL icon on your desktop too. That way the consumer had a &lt;em&gt;choice&lt;/em&gt; of which shitty-little service they wished to lock themselves into.&lt;/p&gt;
&lt;p&gt;But at least the lessons of The Microsoft Network have been learnt. We don't have that kind of locked-off data any more, it's all fully integrated under unified a banner now. At least now I can happily use &lt;code&gt;fopen&lt;/code&gt; to read data from a website, right? And backup my email just by dragging folders from Gmail to a local disk. Right guys?&lt;/p&gt;
&lt;p&gt;...right?&lt;/p&gt;

</description>
<pubDate>Wed, 29 Aug 2018 14:56:16 +0000</pubDate>
<dc:creator>kayamon</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.codersnotes.com/notes/the-microsoft-network/</dc:identifier>
</item>
<item>
<title>Air pollution causes ‘huge’ reduction in intelligence: study</title>
<link>https://www.theguardian.com/environment/2018/aug/27/air-pollution-causes-huge-reduction-in-intelligence-study-reveals</link>
<guid isPermaLink="true" >https://www.theguardian.com/environment/2018/aug/27/air-pollution-causes-huge-reduction-in-intelligence-study-reveals</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/environment/air-pollution&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Air pollution&lt;/a&gt; causes a “huge” reduction in intelligence, according to new research, indicating that the damage to society of toxic air is far deeper than the well-known impacts on physical health.&lt;/p&gt;
&lt;p&gt;The research was conducted in China but is relevant across the world, with &lt;a href=&quot;https://www.theguardian.com/environment/2018/apr/17/more-than-95-of-worlds-population-breathe-dangerous-air-major-study-finds&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;95% of the&lt;/a&gt; &lt;a href=&quot;https://www.theguardian.com/environment/2018/apr/17/more-than-95-of-worlds-population-breathe-dangerous-air-major-study-finds&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;global population breathing&lt;/a&gt; &lt;a href=&quot;https://www.theguardian.com/environment/2018/apr/17/more-than-95-of-worlds-population-breathe-dangerous-air-major-study-finds&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;unsafe air&lt;/a&gt;. It found that high pollution levels led to significant drops in test scores in language and arithmetic, with the average impact equivalent to having lost a year of the person’s education.&lt;/p&gt;
&lt;p&gt;“Polluted air can cause everyone to reduce their level of education by one year, which is huge,” said Xi Chen at Yale School of Public &lt;a href=&quot;https://www.theguardian.com/society/health&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Health&lt;/a&gt; in the US, a member of the research team. “But we know the effect is worse for the elderly, especially those over 64, and for men, and for those with low education. If we calculate [the loss] for those, it may be a few years of education.”&lt;/p&gt;
&lt;p&gt;Previous research has found that air pollution harms cognitive performance in students, but this is the first to examine people of all ages and the difference between men and women.&lt;/p&gt;
&lt;p&gt;The damage in intelligence was worst for those over 64 years old, with serious consequences, said Chen: “We usually make the most critical financial decisions in old age.” Rebecca Daniels, from the UK public health charity Medact, said: “This report’s findings are extremely worrying.”&lt;/p&gt;
&lt;p&gt;Air pollution causes seven million premature deaths a year but the harm to people’s mental abilities is less well known. A recent study found toxic air was linked to &lt;a href=&quot;https://www.theguardian.com/environment/2018/jan/26/air-pollution-linked-to-extremely-high-mortality-in-people-with-mental-disorders&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;“extremely high mortality” in people with mental disorders&lt;/a&gt; and earlier work linked it to &lt;a href=&quot;https://www.theguardian.com/environment/2016/jun/13/air-pollution-linked-to-increased-mental-illness-in-children&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;increased mental illness in children&lt;/a&gt;, while another analysis found those &lt;a href=&quot;https://www.theguardian.com/society/2017/jan/04/living-near-heavy-traffic-increases-dementia-risk-say-scientists&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;living near busy roads had an increased risk of dementia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new work, published in the journal &lt;a href=&quot;http://www.pnas.org/cgi/doi/10.1073/pnas.1809474115&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Proceedings of the National Academy of Sciences&lt;/a&gt;, analysed language and arithmetic tests conducted as part of the China Family Panel Studies on 20,000 people across the nation between 2010 and 2014. The scientists compared the test results with records of nitrogen dioxide and sulphur dioxide pollution.&lt;/p&gt;
&lt;p&gt;They found the longer people were exposed to dirty air, the bigger the damage to intelligence, with language ability more harmed than mathematical ability and men more harmed than women. The researchers said this may result from differences in how &lt;a href=&quot;https://www.theguardian.com/science/neurophilosophy/2013/oct/06/male-brain-versus-female-brain&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;male and female brains work&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Derrick Ho, at the Hong Kong Polytechnic University, said the impact of air pollution on cognition was important and his group had similar preliminary findings in their work. “It is because high air pollution can potentially be associated with oxidative stress, neuroinflammation, and neurodegeneration of humans,” he said.&lt;/p&gt;
&lt;p&gt;Chen said air pollution was most likely to be the cause of the loss of intelligence, rather than simply being a correlation. The study followed the same individuals as air pollution varied from one year to the next, meaning that many other possible causal factors such as genetic differences are automatically accounted for.&lt;/p&gt;
&lt;p&gt;The scientists also accounted for the gradual decline in cognition seen as people age and ruled out people being more impatient or uncooperative during tests when pollution was high.&lt;/p&gt;
&lt;p&gt;Air pollution was seen to have a short-term impact on intelligence as well and Chen said this could have important consequences, for example for students who have to take crucial entrance exams on polluted days.&lt;/p&gt;
&lt;p&gt;“But there is no shortcut to solve this issue,” he said. “Governments really need to take concrete measures to reduce air pollution. That may benefit human capital, which is one of the most important driving forces of economic growth.” In &lt;a href=&quot;https://www.theguardian.com/world/china&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;China&lt;/a&gt;, air pollution is declining but remains three times above World Health Organisation (WHO) limits.&lt;/p&gt;
&lt;p&gt;According to the WHO, 20 of the world’s most polluted cities are in developing countries. China, home to several of those cities, has been engaged in a “&lt;a href=&quot;https://www.theguardian.com/world/2014/mar/05/china-pollution-economic-reform-growth-target&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;war against pollution&lt;/a&gt;” for the past five years.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;A migrant worker listens to the radio on his tricycle cart.&quot; src=&quot;https://i.guim.co.uk/img/media/f766b050b68e70cba35118f565464aeefc297af2/0_0_5000_3333/master/5000.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=c6cbf21baaf89a0413da56e53e840c31&quot;/&gt;&lt;/div&gt;

A migrant worker listens to the radio on his tricycle cart. Photograph: Andy Wong/AP
&lt;p&gt;The results would apply around the world, Chen added. The damage to intelligence was likely to be incremental, he said, with a 1mg rise in pollution over three years equivalent to losing more than a month of education. Small pollution particles are known to be especially damaging. “That is the same wherever you live. As human beings we have more in common than is different.”&lt;/p&gt;
&lt;p&gt;Aarash Saleh, a registrar in respiratory medicine in the UK and part of the &lt;a href=&quot;https://www.medact.org/project/doctors-against-diesel/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Doctors Against Diesel&lt;/a&gt; campaign, said: “This study adds to the concerning bank of evidence showing that exposure to air pollution can worsen our cognitive function. Road traffic is the biggest contributor to air pollution in residential areas and the government needs to act urgently to remove heavily-polluting vehicles from our roads.”&lt;/p&gt;
&lt;p&gt;Daniels said: “The UK’s air is illegally polluted and is harming people’s health every day. Current policies are not up to the scale of the challenge: government must commit to bringing air pollution below legal limits as soon as possible.”&lt;/p&gt;


</description>
<pubDate>Wed, 29 Aug 2018 10:14:41 +0000</pubDate>
<dc:creator>neverminder</dc:creator>
<og:url>http://www.theguardian.com/environment/2018/aug/27/air-pollution-causes-huge-reduction-in-intelligence-study-reveals</og:url>
<og:description>Impact of high levels of toxic air ‘is equivalent to having lost a year of education’</og:description>
<og:image>https://i.guim.co.uk/img/media/bca575ca5c92ca1b4345b3ba03c18391c0ae8fca/0_71_3474_2085/master/3474.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly9hc3NldHMuZ3VpbS5jby51ay9pbWFnZXMvb3ZlcmxheXMvZDM1ODZhNWVmNTc4MTc1NmQyMWEzYjYzNWU1MTcxNDEvdGctZGVmYXVsdC5wbmc&amp;s=c74548881baa53de4ed5693945246fa6</og:image>
<og:type>article</og:type>
<og:title>Air pollution causes ‘huge’ reduction in intelligence, study reveals</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/environment/2018/aug/27/air-pollution-causes-huge-reduction-in-intelligence-study-reveals</dc:identifier>
</item>
<item>
<title>Teens who refuse to use social media</title>
<link>https://www.theguardian.com/society/2018/aug/29/teens-desert-social-media</link>
<guid isPermaLink="true" >https://www.theguardian.com/society/2018/aug/29/teens-desert-social-media</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;F&lt;/span&gt;&lt;/span&gt;or 17-year-old Mary Amanuel, from London, it happened in Tesco. “We were in year 7,” she remembers, “and my friend had made an &lt;a href=&quot;https://www.theguardian.com/technology/instagram&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Instagram&lt;/a&gt; account. As we were buying stuff, she was counting the amounts of likes she’d got on a post. ‘Oooh, 40 likes. 42 likes.’ I just thought: ‘This is ridiculous.’”&lt;/p&gt;
&lt;p&gt;Isabelle, an 18-year-old student from Bedfordshire who doesn’t want to disclose her surname, turned against social media when her classmates became zombified. “Everyone switched off from conversation. It became: ‘Can I have your number to text you?’ Something got lost in terms of speaking face to face. And I thought: ‘I don’t really want to be swept up in that.’” For 15-year-old Emily Sharp, from Staines in Surrey, watching bullying online was the final straw. “It wasn’t nice. That deterred me from using it.”&lt;/p&gt;
&lt;p&gt;It is widely believed that young people are hopelessly devoted to social media. Teenagers, according to this stereotype, tweet, gram, Snap and scroll. But for every young person hunched over a screen, there are others for whom social media no longer holds such an allure. These teens are turning their backs on the technology – and there are more of them than you might think.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-1 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;While many of us have been engrossed in the Instagram lives of our co-workers and peers, a backlash among young people has been quietly boiling. One 2017 survey of British schoolchildren found that 63% would be happy if social media had never been invented. Another survey of 9,000 internet users from the research firm &lt;a href=&quot;https://www.ampereanalysis.com/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Ampere Analysis&lt;/a&gt; found that people aged 18-24 had significantly changed their attitudes towards social media in the past two years. Whereas 66% of this demographic agreed with the statement “social media is important to me” in 2016, only 57% make this claim in 2018. As young people increasingly reject social media, older generations increasingly embrace it: among the 45-plus age bracket, the proportion who value social media has increased from 23% to 28% in the past year, according to Ampere’s data.&lt;/p&gt;
&lt;p&gt;This is part of a wider trend. According to a study by US marketing firm Hill Holliday of Generation Z – people born after 1995 – half of those surveyed stated they had quit or were considering quitting at least one social media platform. When it comes to Gen Z’s relationship to social media, “significant cracks are beginning to show”, says the firm’s Lesley Bielby.&lt;/p&gt;
&lt;p&gt;She believes we will definitely see an increase in younger people quitting or substantially reducing their use. “And as younger Gen Zers notice this behaviour among their older siblings and friends, they too will start to dial down their use of social media.”&lt;/p&gt;
&lt;p&gt;As the first generation to grow up online, Gen Z never had to learn social media, or at least not exactly. They glided through every iteration: Facebook (2004), Twitter (2006), Instagram (2010) &lt;a href=&quot;https://www.theguardian.com/technology/snapchat&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Snapchat&lt;/a&gt; (2011) in real time, effortlessly adopting each one. But a life lived in pixels from your earliest age is no easy thing.&lt;/p&gt;
&lt;p&gt;“You start doing things that are dishonest,” says Amanuel, who quit social media aged 16. “Like Instagram: I was presenting this dishonest version of myself, on a platform where most people were presenting dishonest versions of themselves.”&lt;/p&gt;
&lt;p&gt;Like Amanuel, Jeremiah Johnson, 18, from Luton, grew weary of the pressures of sustaining an online persona. “It’s a competition for who can appear the happiest,” he says. “And if you’re not happy and want to vent about it on social media, you’re attention-seeking.”&lt;/p&gt;
&lt;p&gt;After being “bugged” by his friends to get Instagram (he had stopped using &lt;a href=&quot;https://www.theguardian.com/technology/facebook&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Facebook&lt;/a&gt; aged 16), Johnson joined. He lasted six months. “If you’re having a bad day and scrolling through it, you’re constantly bombarded with pictures of people going to parties. Even if that’s not an accurate portrayal of their lives, that’s what you see. So I stopped using it. It became depressing. It was this competition of who’s the happiest.” He pauses. “Participating in that is not something I’m interested in.”&lt;/p&gt;
&lt;p&gt;Hyper-connected teens have been faced with a surfeit of clicks, retweets and likes – and the dopamine rush of online validation – since the neural pathways in their brains were formed.&lt;/p&gt;
&lt;p&gt;“They’re becoming overwhelmed with the responsibility of maintaining their social sites and with upholding the somewhat inflated persona many have created on these sites, where they are constantly seeking approval via the amount of likes they get for any given post,” Bielby says.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Young people are breaking stereotypes by leaving social networks.&quot; src=&quot;https://i.guim.co.uk/img/media/3e18ffa9cde3e078a2117ed2f64f61964faac833/0_340_4395_2637/master/4395.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=9dac986840182829bb3262fccf72c10b&quot;/&gt;&lt;/div&gt;

Young people are breaking stereotypes by leaving social networks. Photograph: oneinchpunch/Getty
&lt;p&gt;“The people who are the most honest about themselves do not play the game of Instagram,” Amanuel says. “The game of Instagram is who can maximise their likes by being the most risque, outrageous or conformist as possible. I didn’t want to play that game.”&lt;/p&gt;
&lt;p&gt;At school, social media can be a brutal barometer of popularity. “If you meet someone new and they ask for your Instagram and you only have 80 followers,” says Sharp, “they’re going to think: ‘You’re not that popular’, but if you have 2,000 followers they’re going to be like: ‘You’re the most popular person in school.’” Sharp quit social media at 13. “I’d rather not know what other people think of me.”&lt;/p&gt;
&lt;p&gt;A desire to build authentic, offline friendships motivated some to quit. “I’m so much better at real-life socialising now,” says Amanuel. “Not just those people you accept on a friend request who are friends of a friend.”&lt;/p&gt;
&lt;p&gt;For Tyreke Morgan, 18, from Bristol, being a hard man to get hold of – he has no social media presence at all – has its advantages. “Everyone goes through other people to find me,” Morgan laughs, “and when I hear that they’re been trying to get hold of me I say: ‘Great!’ Why would I need 500 flakey friends?”&lt;/p&gt;
&lt;p&gt;But when you are from a digitally native generation, quitting social media can feel like joining a monastery. Amanuel was recently asked by co-workers if she had Snapchat. “I said no,” Amanuel remembers, “and I instantly heard, like, gasps. It was like I’d revealed something disgusting.” She explained that she did have a Snapchat handle, but never used it. “Relief came out of their eyes! It was really weird.”&lt;/p&gt;
&lt;p&gt;Teenagers not ready to quit entirely are stepping back for a while. Dr Amanda Lenhart, who researches young people’s online lives, conducted a survey of US teenagers, asking them about taking time off social media. “We found that 58% of teenagers said they had taken at least one break from at least one social media platform. The most common reason? It was getting in the way of schoolwork or jobs, with more than a third of respondents citing this as their primary reason for leaving social media. Other reasons included feeling tired of the conflict or drama they could see unfolding among their peer group online, and feeling oppressed too by the constant firehose of information.”&lt;/p&gt;
&lt;p&gt;Bielby agrees that young people are becoming more aware of the amount of time they waste online. Of the young people Hill Holliday surveyed who had quit or considered quitting social media, 44% did so, she says, in order to “use time in more valuable ways”.&lt;/p&gt;
&lt;p&gt;“I don’t know how people doing their A-levels or GCSEs have the time for it,” says Isabelle. “They’re constantly studying, but their only distraction is social media.” Rather than get sucked into a “mindless vortex of never-ending scrolling,” as she puts it, when Isabelle isn’t studying she prefers to be outdoors.&lt;/p&gt;
&lt;p&gt;The fact that Gen Z have had their every move documented online since before they could walk, talk, or even control their bowels helps explain their antipathy to social media: it makes sense for them to strive for privacy, as soon as they reach the age when they have a choice over their online image.&lt;/p&gt;
&lt;p&gt;“I’ve seen parents post pictures of their child’s first potty online,” says Amy Binns of the University of Central Lancashire. “You think: ‘Why are you doing this to your child? They wouldn’t want this to be public.”&lt;/p&gt;
&lt;p&gt;Gen Z has an interest in privacy that subtly sets them apart. “Young people want to get away from the curtain-twitching village, where everyone knows everything about you,” Binns says. So while today’s teens spend a lot of time online, they don’t actually share that much personal information. And when they do share, it’s strategic. “You’re painting a picture of who you are and your image,” says Binns. “It’s your own shop window or brand.”&lt;/p&gt;
&lt;p&gt;“Framing a picture and posting it on there is not a five-minute thing,” says Amanuel, explaining that any post will be well-thought-out in order to project a certain image and maximise likes. “It takes hours of deliberation.”&lt;/p&gt;
&lt;p&gt;“When social media started, we didn’t really know what it was going to mean,” says Binns. “Young people are more aware of the value of privacy than we were 10 years ago.”&lt;/p&gt;
&lt;p&gt;Amanuel says that the Cambridge Analytica story, with its exposure of widespread data harvesting, helped prompt her to get off social media, and many more young people seem to be turning against Facebook; on Tuesday, it was reported that the number of Facebook users aged 18 to 24 in Britain is expected to fall 1.8% this year.&lt;/p&gt;
&lt;p&gt;Some of the teens I spoke to were concerned about how technologies such as Snap Map – a Snapchat feature that tracks your friends geographically, in real time – were spreading through their schools, and mistrustful of the privacy consequences of being surveilled by your followers wherever you go. “Snap Map is this big thing with a lot of my friends, but there is a sense of privacy that is being breached as well,” Isabelle says.&lt;/p&gt;
&lt;p&gt;Teenagers are also educated about the ramifications of an offensive tweet, or explicit picture, as well as the health consequences of too much screen time. “Young people are being taught in schools about sharing nudes and how tweets can travel around. They’ve seen the horror stories,” says Binns.&lt;/p&gt;
&lt;p&gt;Isabelle agrees. “Constant screen time damages your ability to see, and it also causes internal damage, such as anxiety.” Studies have shown that social media use can negatively affect mental wellbeing, and adolescents are particularly susceptible: one nationally representative survey of US 13- to 18-year-olds linked heavier social media use to depression and suicide, particularly in girls. And 41% of the Gen Z teens surveyed by Hill Holliday reported that social media made them feel anxious, sad or depressed.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Jeremiah Johnson.&quot; src=&quot;https://i.guim.co.uk/img/media/539335a615707eec505cbfbd30d1b444be553e41/0_215_6459_3875/master/6459.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;usm=12&amp;amp;fit=max&amp;amp;s=2d629e79d37deaaa8daabc09f294627a&quot;/&gt;&lt;/div&gt;

Jeremiah Johnson. Photograph: Anna Gordon for the Guardian
&lt;p&gt;But quitting social media can create new anxieties. “Our research shows that the biggest fear of quitting or pausing social media is missing out,” Bielby says. Some are more sanguine than others. “Do I miss out on stuff?” Morgan asks. “Yeah, of course. People find it hard to keep in contact with me. They say: ‘It would be easier if you had this or that.’ But I don’t think it’s that hard to type in my number and send a text. You’re just not willing to do it.”&lt;/p&gt;
&lt;p&gt;Others struggle with the fear of missing out. “It’s like everyone in your friend group has gone to a party without telling you,” Johnson says. At times, he questions himself. “I second-guess myself a lot. There are some days I’m really convinced I want to reinstall it, not for myself, but because I want to appear normal.”&lt;/p&gt;
&lt;p&gt;Still, refuseniks such as Johnson may not be outliers for ever. In a world in which everyone is online, renouncing social media is a renegade, countercultural move: as quietly punk as shaving your head or fastening your clothes with safety-pins. Morgan has become a svengali for classmates wanting to escape. “My friends come to me and say: ‘Tyreke, I don’t have social media any more,’ and I go: ‘Why? I thought that’s what you guys do.’ And they say: ‘Thanks to you, because of the things you said and the stuff you’re doing.’ It’s quite cool.”&lt;/p&gt;
&lt;p&gt;Quitting social media is a determined move: apps including Facebook and Instagram are designed to be addictive. “Social media is so ingrained in teenage culture that it’s hard to take it out. But when you do, it’s such a relief,” Amanuel says. She has received a lot of “admiration” from her peers for quitting. “They wish they were able to log off. People feel like social media is a part of them and their identities as teenagers and something you need to do,” she says. “But I’m no less of a teenager because I don’t use it.”&lt;/p&gt;


</description>
<pubDate>Wed, 29 Aug 2018 06:04:51 +0000</pubDate>
<dc:creator>pmoriarty</dc:creator>
<og:url>http://www.theguardian.com/society/2018/aug/29/teens-desert-social-media</og:url>
<og:description>Generation Z has grown up online – so why are a surprising number suddenly turning their backs on Instagram, Facebook and Snapchat?</og:description>
<og:image>https://i.guim.co.uk/img/media/4b198d28080f34f8560a243391ac6e4d0b30d580/0_530_7957_4775/master/7957.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly9hc3NldHMuZ3VpbS5jby51ay9pbWFnZXMvb3ZlcmxheXMvZDM1ODZhNWVmNTc4MTc1NmQyMWEzYjYzNWU1MTcxNDEvdGctZGVmYXVsdC5wbmc&amp;s=fd92650da269518aca06259e8d72b3f9</og:image>
<og:type>article</og:type>
<og:title>Logged off: meet the teens who refuse to use social media</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/society/2018/aug/29/teens-desert-social-media</dc:identifier>
</item>
<item>
<title>LiteTree: SQLite with Branches</title>
<link>https://github.com/aergoio/litetree</link>
<guid isPermaLink="true" >https://github.com/aergoio/litetree</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/aergoio/litetree&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/ce8a23730cb0db31b0416aae94e7548856079a24/68747470733a2f2f7472617669732d63692e6f72672f616572676f696f2f6c697465747265652e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/aergoio/litetree.svg?branch=master&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/fc11aa97adad1ed0c4d476e8b7601bc47990b791/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d6c697465747265652e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/fc11aa97adad1ed0c4d476e8b7601bc47990b791/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d6c697465747265652e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;http://litesync.io/litetree/graph-litetree.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine being able to have many connections to the same database, each one reading a separate branch or commit at the same time. Or even writing to separate branches.&lt;/p&gt;
&lt;p&gt;This is possible with &lt;strong&gt;LiteTree&lt;/strong&gt;. It is a modification of the SQLite engine to support branching, like git!&lt;/p&gt;
&lt;p&gt;Database branching is a very useful tool for blockchain implementations and LiteTree will be at the core of &lt;a href=&quot;https://github.com/aergoio/aergo&quot;&gt;Aergo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is how it works:&lt;/p&gt;
&lt;p&gt;Each database transaction is saved as a commit, and each commit has an incremental number. Let's consider an empty db in which we run this first SQL command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;CREATE TABLE t1 (name)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now it will have the first commit (number 1) in the automatically created &lt;code&gt;master&lt;/code&gt; branch:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/f4ed22ed350c28a28d6f6fffada0d02784290124/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d312d636f6d6d69742e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/f4ed22ed350c28a28d6f6fffada0d02784290124/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d312d636f6d6d69742e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;http://litesync.io/litetree/graph-1-commit.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When we execute new transactions it will add new commits to the current branch:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;INSERT INTO t1 VALUES ('first')
INSERT INTO t1 VALUES ('second')
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now we have 3 commits:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/e9130f53d1076fb42f01974d013662531a227b75/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d332d636f6d6d6974732e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e9130f53d1076fb42f01974d013662531a227b75/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d332d636f6d6d6974732e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;http://litesync.io/litetree/graph-3-commits.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To include many SQL commands in a single commit we must enclose them in &lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;COMMIT&lt;/code&gt; commands.&lt;/p&gt;
&lt;p&gt;We create new branches informing the source branch and commit number:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;PRAGMA new_branch=test at master.2
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After this command is executed the new branch is created but without any new data added to it. The database connection also moves to this new branch, having it as the current branch.&lt;/p&gt;
&lt;p&gt;We can check the current branch with the command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;PRAGMA branch
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this case it will return: &lt;code&gt;test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If we execute a SQL command on this db connection the commit will be saved in the connection's current branch:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;INSERT INTO t1 VALUES ('from test branch')
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now the graph state will be:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/c2081a2e1c8e2d0e8d666afcc84067c3e03e2264/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d322d6272616e636865732e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c2081a2e1c8e2d0e8d666afcc84067c3e03e2264/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d322d6272616e636865732e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;http://litesync.io/litetree/graph-2-branches.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We can also read the database at this new branch:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT * FROM t1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It will return these values:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;first&lt;/p&gt;
&lt;p&gt;from test branch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can move to the master branch:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;PRAGMA branch=master
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And executing the same SELECT command (but now in the master branch) it will return:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;first&lt;/p&gt;
&lt;p&gt;second&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Different content for the same table on separate branches.&lt;/p&gt;
&lt;p&gt;Commits in separate branches have the same numbering based on the distance from the first commit:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/bd20ac39407c56b3eb6b62b9ffa58a0f6a94b78e/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d636f6d6d69742d6e756d626572732e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/bd20ac39407c56b3eb6b62b9ffa58a0f6a94b78e/687474703a2f2f6c69746573796e632e696f2f6c697465747265652f67726170682d636f6d6d69742d6e756d626572732e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;http://litesync.io/litetree/graph-commit-numbers.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We can read the database in a previous point-in-time by moving to that commit, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;PRAGMA branch=master.2
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At this point the table &lt;code&gt;t1&lt;/code&gt; has a single row and if we do a SELECT it will return just &lt;code&gt;first&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We cannot write to the database when we are in a defined commit, writing is only possible at the head of each branch. If you want to make modifications to some previous commit you must create a new branch that starts at that commit.&lt;/p&gt;
&lt;p&gt;It is also possible to truncate a branch at a specific commit, rename a branch, delete it and retrieve branch info.&lt;/p&gt;
&lt;h2&gt;Supported commands&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Selecting the active branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch=&amp;lt;name&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Selecting a specific commit in a branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch=&amp;lt;name&amp;gt;.&amp;lt;commit&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Retrieving the current/active branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Listing the existing branches:
&lt;pre&gt;
&lt;code&gt; PRAGMA branches
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Creating a new branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA new_branch=&amp;lt;name&amp;gt; at &amp;lt;source&amp;gt;.&amp;lt;commit&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Deleting a branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA del_branch(&amp;lt;name&amp;gt;)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Renaming a branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA rename_branch &amp;lt;old_name&amp;gt; &amp;lt;new_name&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Retrieving the branch info:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch_info(&amp;lt;name&amp;gt;)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Truncating a branch at a specific commit:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch_truncate(&amp;lt;name&amp;gt;.&amp;lt;commit&amp;gt;)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Not yet available:&lt;/h4&gt;
&lt;p&gt;These commands can be implemented if required:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Showing the commit and SQL log/history for a branch:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch_log(&amp;lt;name&amp;gt;)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Showing the diff between 2 branches or commits:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch_diff &amp;lt;from_branch&amp;gt;[.&amp;lt;commit&amp;gt;] &amp;lt;to_branch&amp;gt;[.&amp;lt;commit&amp;gt;]
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Displaying the tree structure in some format:
&lt;pre&gt;
&lt;code&gt; PRAGMA branch_tree
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And maybe these extended features could be supported:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Save metadata to each branch&lt;/li&gt;
&lt;li&gt;Save metadata to each commit&lt;/li&gt;
&lt;li&gt;Merging 2 branches&lt;/li&gt;
&lt;li&gt;Access control by branch&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Technologies&lt;/h2&gt;
&lt;p&gt;We can use LiteTree with big databases (many gigabytes). There is no data copying when a new branch is created. When a new transaction is commited only the modified database pages are copied.&lt;/p&gt;
&lt;p&gt;LiteTree is implemented storing the SQLite db pages on LMDB.&lt;/p&gt;
&lt;p&gt;The data is not compressed, and each db page is stored on just one disk sector (4096 bytes by default). This is achieved by reserving some bytes at each SQLite db page so it can fit into one LMDB overflow page, that can hold 4080 (4096 - 16) bytes.&lt;/p&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;p&gt;LiteTree is more than &lt;strong&gt;TWICE AS FAST&lt;/strong&gt; than normal SQLite on Linux and MacOSX!!!&lt;/p&gt;
&lt;p&gt;Here are the some results:&lt;/p&gt;
&lt;h5&gt;Linux&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;writing:
--------
normal   = 3.06862306595 seconds
litetree = 1.49606800079 seconds

reading:
--------
normal   = 0.00796008110046 seconds
litetree = 0.00337290763855 seconds
&lt;/code&gt;
&lt;/pre&gt;
&lt;h5&gt;MacOSX&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;writing:
--------
normal   = 0.562711000443 seconds
litetree = 0.192953109741 seconds

reading:
--------
normal   = 0.00511813163757 seconds
litetree = 0.00336885452271 seconds
&lt;/code&gt;
&lt;/pre&gt;
&lt;h5&gt;Windows&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;writing:
--------
normal   = 68.0931215734 seconds
litetree = 39.239919979 seconds

reading:
--------
normal   = 0.012673914421 seconds
litetree = 0.00631055510799 seconds
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can make your own benchmark (after installing LiteTree) with this command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make benchmark
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Current Limits&lt;/h2&gt;
&lt;p&gt;Number of branches: 1024 branches (can be increased)&lt;/p&gt;
&lt;p&gt;Number of commits per branch: 2^32 = 4,294,967,295 commits&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This value can be increased to 64 bits&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Concurrent db connections to the same db: XXX readers&lt;/p&gt;
&lt;h2&gt;Some Limitations&lt;/h2&gt;
&lt;p&gt;A database file created in one architecture cannot be used in another. This is a limitation of LMDB. We need to dump the database using &lt;code&gt;mdb_dump&lt;/code&gt; and load it using &lt;code&gt;mdb_load&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The db file cannot be opened by unmodified SQLite libraries.&lt;/p&gt;
&lt;p&gt;Savepoints are not yet supported.&lt;/p&gt;
&lt;h2&gt;How to use&lt;/h2&gt;
&lt;p&gt;LiteTree can be used in many programming languages via existing SQLite wrappers.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Update your app to open the database file using an URI containing the &lt;code&gt;branches&lt;/code&gt; parameter, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;“file:data.db?branches=on”
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make your app use this new library instead of the pre-installed SQLite library:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;On Linux&lt;/h3&gt;
&lt;p&gt;This can be achieved in 4 ways:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Using the &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; environment variable:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; LD_LIBRARY_PATH=/usr/local/lib/litetree ./myapp
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This can be used with all programming languages and wrappers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Patching your wrapper or app to search for the library in the new path:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; patchelf --set-rpath /usr/local/lib/litetree lib_or_app
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setting the &lt;code&gt;rpath&lt;/code&gt; at the link time:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; LIBPATH = /usr/local/lib/litetree
 gcc myapp.c -Wl,-rpath,$(LIBPATH) -L$(LIBPATH) -lsqlite3
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can use this if your app is linking directly to the LiteTree library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replacing the pre-installed SQLite library on your system&lt;/p&gt;
&lt;p&gt;This can also be used with many programming languages. But use it with care because the native library may have been compiled with different directives.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;On Mac OSX&lt;/h3&gt;
&lt;p&gt;This can be achieved in these ways:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Patching your wrapper or app to search for the library in the new path:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; install_name_tool -change /old/path/to/libsqlite3.dylib /usr/local/lib/litetree/libsqlite3.dylib lib_or_app
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can check the old path with this command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; otool -L lib_or_app
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This method can be used with all programming languages and wrappers as long as they are not protected by the OS.&lt;/p&gt;
&lt;p&gt;It it is protected then you will need to install a new copy of the wrapper, modify it and use it instead of the protected one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the &lt;code&gt;DYLD_LIBRARY_PATH&lt;/code&gt; environment variable:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; DYLD_LIBRARY_PATH=/usr/local/lib/litetree ./myapp
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This can be used if the wrapper was linked to just the library name and does not contain any path.&lt;/p&gt;
&lt;p&gt;If it does not work we can patch the wrapper to not contain any path:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; install_name_tool -change /old/path/to/libsqlite3.dylib libsqlite3.dylib lib_or_app
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But if you are able to modify the wrapper with &lt;code&gt;install_name_tool&lt;/code&gt; then the first method above may be better.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linking to the LiteTree library:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; gcc myapp.c -L/usr/local/lib/litetree -lsqlite3
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;On Windows&lt;/h3&gt;
&lt;p&gt;Copy the modified SQLite library to the system folder.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;On 64 bit Windows:&lt;/p&gt;
&lt;p&gt;C:\Windows\System32 (if 64 bit DLL)&lt;/p&gt;
&lt;p&gt;C:\Windows\SysWOW64 (if 32 bit DLL)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On 32 bit Windows:&lt;/p&gt;
&lt;p&gt;C:\Windows\System32&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Compiling and installing&lt;/h2&gt;
&lt;h3&gt;On Linux and Mac OSX&lt;/h3&gt;
&lt;p&gt;Install &lt;a href=&quot;https://github.com/lmdb/lmdb&quot;&gt;LMDB&lt;/a&gt; if not already installed:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone https://github.com/lmdb/lmdb
cd lmdb/libraries/liblmdb
make
sudo make install
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then install LiteTree:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone https://github.com/aergoio/litetree
cd litetree
make
sudo make install
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;On Windows&lt;/h3&gt;
&lt;p&gt;You can use these pre-compiled binaries: (can be outdated)&lt;/p&gt;
&lt;p&gt;Or follow these steps:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Compile LMDB using &lt;a href=&quot;https://github.com/Alexpux/MINGW-packages/tree/master/mingw-w64-lmdb&quot;&gt;MinGW&lt;/a&gt; or Visual Studio (&lt;a href=&quot;https://github.com/Ri0n/lmdb&quot;&gt;1&lt;/a&gt; or &lt;a href=&quot;https://github.com/htaox/lightningdb-win&quot;&gt;2&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compile LiteTree using MinGW or Visual Studio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the libraries to the Windows System folder&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Running the Tests&lt;/h2&gt;
&lt;p&gt;The tests are written in Python using the &lt;a href=&quot;https://github.com/ghaering/pysqlite&quot;&gt;pysqlite&lt;/a&gt; wrapper.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;MacOSX&lt;/strong&gt; we cannot use a modified SQLite library with the pre-installed system python due to the System Integrity Protection so we need to install another copy of pysqlite and link it to the LiteTree library:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone https://github.com/ghaering/pysqlite
cd pysqlite
echo &quot;include_dirs=/usr/local/include&quot; &amp;gt;&amp;gt; setup.cfg
echo &quot;library_dirs=/usr/local/lib/litetree&quot; &amp;gt;&amp;gt; setup.cfg
python setup.py build
sudo python setup.py install
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To run the tests:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make test
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;h2&gt;Creator&lt;/h2&gt;
&lt;p&gt;Developed by Bernardo Ramos at &lt;a href=&quot;https://aergo.io&quot; rel=&quot;nofollow&quot;&gt;Aergo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Contact&lt;/h2&gt;
&lt;p&gt;bernardo {at} blocko {dot} io&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 29 Aug 2018 04:41:03 +0000</pubDate>
<dc:creator>kroggen</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/39721360?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>aergoio/litetree</og:title>
<og:url>https://github.com/aergoio/litetree</og:url>
<og:description>SQLite with Branches. Contribute to aergoio/litetree development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/aergoio/litetree</dc:identifier>
</item>
<item>
<title>A Missing Link in Postgres 11: Fast Column Creation with Defaults</title>
<link>https://brandur.org/postgres-default</link>
<guid isPermaLink="true" >https://brandur.org/postgres-default</guid>
<description>&lt;p&gt;If you read through the release notes for &lt;a href=&quot;https://www.postgresql.org/docs/11/static/release-11.html&quot;&gt;upcoming Postgres 11&lt;/a&gt;, you might see a somewhat inconspicuous addition tucked away at the bottom of the enhancements list:&lt;/p&gt;&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Many other useful performance improvements, including making &lt;code&gt;ALTER TABLE .. ADD COLUMN&lt;/code&gt; with a non-null column default faster&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s not a flagship feature of the new release, but it’s still one of the more important operational improvements that Postgres has made in years, even though it might not be immediately obvious why. The short version is that it’s eliminated a limitation that used to make correctness in schema design difficult, but let’s take a look at the details.&lt;/p&gt;

&lt;p&gt;Consider for a moment one of the simplest database statements possible, one that adds a new column to a table:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;ALTER TABLE users
    ADD COLUMN credits bigint;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Although it’s altering the table’s schema, any modern database is sophisticated enough to make this operation practically instantaneous. Instead of rewriting the existing representation of the table (thereby forcing all existing data to be copied over at great expense), information on the new column is added to the system catalog, which is cheap. That allows new rows to be written with values for the new column, and the system is smart enough to return &lt;code&gt;NULL&lt;/code&gt; for current rows where no value previously existed.&lt;/p&gt;
&lt;p&gt;But things get complicated when we add a &lt;code&gt;DEFAULT&lt;/code&gt; clause to the same statement:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sql&quot;&gt;ALTER TABLE users
    ADD COLUMN credits bigint NOT NULL DEFAULT 0;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The SQL looks so similar as to be almost identical, but where the previous operation was trivial, this one is infinitely more expensive in that it now requires a full rewrite of the table and all its indexes. Because there’s now a non-null value involved, the database ensures data integrity by going back and injecting it into every existing row.&lt;/p&gt;
&lt;p&gt;Despite that expense, Postgres is still capable of doing the rewrite efficiently, and on smaller databases it’ll appear to happen instantly.&lt;/p&gt;
&lt;p&gt;It’s bigger installations where it becomes a problem. Rewriting a table with a large body of existing data will take about as long as you’d expect, and in the meantime, the rewrite will take an &lt;a href=&quot;https://www.postgresql.org/docs/current/static/explicit-locking.html&quot;&gt;&lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; lock&lt;/a&gt; on the table. &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; is the coarsest granularity of table lock possible, and it’ll block &lt;em&gt;every&lt;/em&gt; other operation until it’s released; even simple &lt;code&gt;SELECT&lt;/code&gt; statements have to wait. In any system with a lot of ongoing access to the table, that’s a huge problem.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brandur.org/assets/postgres-default/blocking.svg&quot;&gt;&lt;img data-rjs=&quot;2&quot; src=&quot;https://brandur.org/assets/postgres-default/blocking.svg&quot; class=&quot;overflowing&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
Transactions blocking during a table rewrite.
&lt;p&gt;Historically, accidentally locking access to a table when adding a column has been a common pitfall for new Postgres operators because there’s nothing in the SQL to tip them off to the additional expense of adding that &lt;code&gt;DEFAULT&lt;/code&gt; clause. It takes a close reading of &lt;a href=&quot;https://www.postgresql.org/docs/10/static/sql-altertable.html&quot;&gt;the manual&lt;/a&gt; to find out, or the pyrrhic wisdom acquired by causing a minor operational incident.&lt;/p&gt;

&lt;p&gt;Because it’s not possible to cheaply add a &lt;code&gt;DEFAULT&lt;/code&gt; column, it’s also not possible to add a column set to &lt;code&gt;NOT NULL&lt;/code&gt;. By definition non-null columns need to have values for every row, and you can’t add one to a non-empty table without specifying what values the existing data should have, and that takes &lt;code&gt;DEFAULT&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can still get a non-null column by first adding it as nullable, running a migration to add values to every existing row, then altering the table with &lt;code&gt;SET NOT NULL&lt;/code&gt;, but even that’s not perfectly safe because &lt;code&gt;SET NOT NULL&lt;/code&gt; requires a full stable scan as it verifies the new constraint across all existing data. The scan is faster than a rewrite, but still needs an &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; lock.&lt;/p&gt;
&lt;p&gt;The amount of effort involved in getting a new non-null column into any large relation means that in practice you often don’t bother. It’s either too time consuming or too dangerous.&lt;/p&gt;

&lt;p&gt;One of the biggest reasons to prefer relational databases over document stores and other less sophisticated storage technology is data integrity. Columns are strongly typed with the likes of &lt;code&gt;INT&lt;/code&gt;, &lt;code&gt;DECIMAL&lt;/code&gt;, or &lt;code&gt;TIMESTAMPTZ&lt;/code&gt;. Values are constrained with &lt;code&gt;NOT NULL&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt; (length), or &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-constraints.html#DDL-CONSTRAINTS-CHECK-CONSTRAINTS&quot;&gt;&lt;code&gt;CHECK&lt;/code&gt; constraints&lt;/a&gt;. Foreign key constraints guarantee &lt;a href=&quot;https://en.wikipedia.org/wiki/Referential_integrity&quot;&gt;referential integrity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With a good schema design you can rest assured that your data is in a high quality state because the very database is ensuring it. This makes querying or changing it easier, and prevents an entire class of application-level bugs caused by data existing in an unexpected state. Enthusiasts like me have always argued in favor of strong data constraints, but knew also that new non nullable fields often weren’t possible in Postgres when it was running at scale.&lt;/p&gt;
&lt;p&gt;Postgres 11 brings in a change that makes &lt;code&gt;ADD COLUMN&lt;/code&gt; with &lt;code&gt;DEFAULT&lt;/code&gt; values fast by marshaling them for existing rows only as necessary. The expensive table rewrite and long hold on &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; are eliminated, and a gaping hole in Postgres’ operational story is filled. It will now be possible to have both strong data integrity and strong operational guarantees.&lt;/p&gt;

&lt;p&gt;The change adds two new fields to &lt;a href=&quot;https://www.postgresql.org/docs/current/static/catalog-pg-attribute.html&quot;&gt;&lt;code&gt;pg_attribute&lt;/code&gt;&lt;/a&gt;, a system table that tracks information on every column in the database:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;atthasmissing&lt;/code&gt;: Set to &lt;code&gt;true&lt;/code&gt; when there are missing default values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attmissingval&lt;/code&gt;: Contains the missing value.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As scans are returning rows, they check these new fields and return missing values where appropriate. New rows inserted into the table pick up the default values as they’re created so that there’s no need to check &lt;code&gt;atthasmissing&lt;/code&gt; when returning their contents.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brandur.org/assets/postgres-default/implementation.svg&quot;&gt;&lt;img data-rjs=&quot;2&quot; src=&quot;https://brandur.org/assets/postgres-default/implementation.svg&quot; class=&quot;overflowing&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
Fast column creation with existing rows loading defaults from pg_attribute.
&lt;p&gt;The new fields are only used as long as they have to be. If at any point the table is rewritten, Postgres takes the opportunity to insert the default value for every row and unset &lt;code&gt;atthasmissing&lt;/code&gt; and &lt;code&gt;attmissingval&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Due to the relative simplicity of &lt;code&gt;attmissingval&lt;/code&gt;, this optimization only works for default values that are &lt;em&gt;non-volatile&lt;/em&gt; (i.e., single, constant values). A default value that calls &lt;code&gt;NOW()&lt;/code&gt; can’t take advantage of the optimization.&lt;/p&gt;
&lt;p&gt;There’s nothing all that difficult conceptually about this change, but its implementation wasn’t easy because the system is complex enough that there’s a lot of places where the new missing values have to be considered. See &lt;a href=&quot;https://github.com/postgres/postgres/commit/16828d5c0273b4fe5f10f42588005f16b415b2d8&quot;&gt;the patch&lt;/a&gt; that brought it in for full details.&lt;/p&gt;

&lt;div class=&quot;info&quot; readability=&quot;8.5849056603774&quot;&gt;
&lt;div class=&quot;publishing-info-bottom&quot; readability=&quot;10.413333333333&quot;&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;A Missing Link in Postgres 11: Fast Column Creation with Defaults&lt;/strong&gt; was published on &lt;strong&gt;August 28, 2018&lt;/strong&gt; from &lt;strong&gt;San Francisco&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Find me on Twitter at &lt;strong&gt;&lt;a href=&quot;https://twitter.com/brandur&quot;&gt;@brandur&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Did I make a mistake? Please consider &lt;a href=&quot;https://github.com/brandur/sorg/edit/master/content/articles/postgres-default.md&quot;&gt;sending a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 29 Aug 2018 02:11:28 +0000</pubDate>
<dc:creator>grzm</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://brandur.org/postgres-default</dc:identifier>
</item>
<item>
<title>Twitter’s deletion of its FB app caused old cross-posts to temporarily disappear</title>
<link>https://techcrunch.com/2018/08/28/facebook-has-removed-all-cross-posted-tweets/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/08/28/facebook-has-removed-all-cross-posted-tweets/</guid>
<description>&lt;p&gt;&lt;strong&gt;(Update: &lt;/strong&gt;&lt;a href=&quot;https://www.axios.com/how-cross-posted-tweets-disappeared-from-facebook-e65fd350-1898-4bc5-af0f-81e9614f5ec1.html&quot;&gt;Axios has a post&lt;/a&gt; explaining why the cross-posted tweets disappeared. Essentially, Twitter deleted its app from Facebook after &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/facebook&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;facebook&quot;&gt;Facebook&lt;/a&gt; stopped allowing cross-posts earlier this month, since without that feature it was basically useless. This unexpectedly caused old posts to disappear. TechCrunch also heard from a source with understanding of the situation that the deletion of the app took Facebook by surprise, as well as the fact that Twitter didn’t immediately tell them to restore the content.)&lt;/p&gt;
&lt;p&gt;Facebook users are complaining the company has removed the cross-posted tweets they had published to their profiles as Facebook updates. The posts’ removal took place following the recent API change that &lt;a href=&quot;https://techcrunch.com/2018/08/01/psa-cross-posting-tweets-to-facebook-no-longer-works-as-of-today/&quot;&gt;prevented&lt;/a&gt; Twitter users from continuing to automatically publish their tweets to Facebook. According to the affected parties, both the Facebook posts themselves, as well as the conversation around those posts that had taken place directly on Facebook, are now gone. Reached for comment, Facebook says it’s aware of the issue and is looking into it.&lt;/p&gt;
&lt;p&gt;TechCrunch was alerted to the problem by a reader, &lt;a href=&quot;https://twitter.com/LawrenceMiller&quot;&gt;Lawrence Miller&lt;/a&gt;, who couldn’t find any information about the issue in Facebook’s Help Center. We’ve since confirmed the issue ourselves with several affected parties and confirmed it with Facebook.&lt;/p&gt;
&lt;p&gt;Given the real-time nature of social media — and how difficult it is to pull up old posts — it’s possible that many of the impacted Facebook users have yet to realize their old posts have been removed.&lt;/p&gt;
&lt;p&gt;In fact, we only found a handful of public complaints about the deletions, so far.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&quot;embed breakout&quot; readability=&quot;8.2473867595819&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot; readability=&quot;10.080139372822&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/facebook?ref_src=twsrc%5Etfw&quot;&gt;@facebook&lt;/a&gt; I used the Twitter for Facebook app for years, and I realize it's not working and isn't going to. But I just discovered all the Facebook updates it put have been deleted and dissappeared from my timeline! Is there a way to retrieve this?&lt;/p&gt;
&lt;p&gt;— Omer Lev (@omerlev) &lt;a href=&quot;https://twitter.com/omerlev/status/1033704078621257733?ref_src=twsrc%5Etfw&quot;&gt;August 26, 2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;

&lt;div class=&quot;embed breakout&quot; readability=&quot;6.1309523809524&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot; readability=&quot;6.5396825396825&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;My post on Facebook via Twitter was deleted.&lt;br/&gt;Why?&lt;br/&gt;Can someone explain it? &lt;a href=&quot;https://twitter.com/hashtag/twitter?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Tarin (@lestarindah499) &lt;a href=&quot;https://twitter.com/lestarindah499/status/1033750252598132736?ref_src=twsrc%5Etfw&quot;&gt;August 26, 2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Above: selected complaints from Twitter about the data loss&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;wp-image-1700396 aligncenter&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/08/Screen-Shot-2018-08-28-at-3.48.50-PM.png?w=680&quot; alt=&quot;&quot; width=&quot;485&quot; height=&quot;276&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Above: a comment on TechCrunch following our post on the API changes &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some of those who were impacted were very light Facebook users and had heavily relied on the cross-posting to keep their Facebook accounts active. As a result of the mass removals, their Facebook profiles are now fairly empty.&lt;/p&gt;
&lt;p&gt;TechCrunch editor Matthew Panzarino is one of those here who was impacted. He points out that the ability to share tweets to Facebook was a useful way to reach people who weren’t on Twitter in order to continue a discussion with a different audience.&lt;/p&gt;
&lt;p&gt;“I’ve had tweet cross-posting turned on for years, from the early days of it even existing. This just removed thousands of posts from my Facebook silently, with no warning,” Matthew told me. “Even though the posts didn’t originate on Facebook, I often had ongoing conversations about the posts once my Facebook friends (and audience) saw them. Many of them would never see them on Twitter either because they don’t follow me or they don’t use it,” he said.&lt;/p&gt;
&lt;p&gt;“It’s wild to have all of that context just vanish,” he added.&lt;/p&gt;
&lt;p&gt;As you may recall, Facebook earlier this month &lt;a href=&quot;https://techcrunch.com/2018/08/01/psa-cross-posting-tweets-to-facebook-no-longer-works-as-of-today/&quot;&gt;made a change to its API platform&lt;/a&gt; to prevent third-party apps from publishing posts to Facebook as the logged-in user. The change was a part of Facebook’s larger overhaul and lockdown of its API platform in the wake of the &lt;a href=&quot;https://techcrunch.com/tag/cambridge-analytica/&quot;&gt;Cambridge Analytica scandal,&lt;/a&gt; where as many &lt;a href=&quot;https://www.nytimes.com/2018/04/04/technology/mark-zuckerberg-testify-congress.html&quot;&gt;as 87 million Facebook users&lt;/a&gt; had their data improperly harvested and shared.&lt;/p&gt;
&lt;p&gt;Since then, Facebook has been trying to plug up the holes in its platform to prevent further data misuse. One of the changes it made was to stop third-parties from being able to post to Facebook as the logged-in user.&lt;/p&gt;
&lt;p&gt;For existing apps, like Twitter, that permission was revoked on August 1, 2018.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large wp-image-1700461&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/08/twitter-apps-screen.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;366&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Above: Twitter’s cross-posting feature, on the day it was disabled by the Facebook API change&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before the API changes, Twitter users were able to visit the “Apps” section from Twitter on the web, then authenticate with Facebook to have their tweets cross-posted to Facebook’s social network. Once enabled, the tweets would appear on the user’s page as a Facebook post they had published, and their friends could then like and comment on the post as any other.&lt;/p&gt;
&lt;p&gt;In theory, the API changes should only have prevented Twitter users from continuing to cross-post their tweets to Facebook automatically. It &lt;em&gt;shouldn’t&lt;/em&gt; have also deleted the existing posts from Facebook users’ profiles and business users’ Facebook Pages.&lt;/p&gt;
&lt;p&gt;This is a breach of trust from a company that’s in the process of trying to repair a broken trust with its users across a number of fronts, including data misuse. Regardless of whatever new policy is in effect around apps and how they can post to Facebook, no one would have ever expected that Facebook would actually remove their old posts without warning.&lt;/p&gt;
&lt;p&gt;We’re hoping that the problem is a bug that Facebook can resolve, and not something that will result in permanent data loss.&lt;/p&gt;
&lt;p&gt;Facebook tells us while it doesn’t have further information about the problem at this time, it should have more to share tonight or tomorrow about what’s being done.&lt;/p&gt;
</description>
<pubDate>Wed, 29 Aug 2018 01:25:39 +0000</pubDate>
<dc:creator>prostoalex</dc:creator>
<og:title>Twitter’s deletion of its Facebook app caused old cross-posts to temporarily disappear</og:title>
<og:description>(Update: Axios has a post explaining why the cross-posted tweets disappeared. Essentially, Twitter deleted its app from Facebook after Facebook stopped allowing cross-posts earlier this month, since without that feature it was basically useless. This unexpectedly caused old posts to disappear. Tech…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/08/twitter-facebook-icons.png?w=711</og:image>
<og:url>http://social.techcrunch.com/2018/08/28/facebook-has-removed-all-cross-posted-tweets/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/08/28/facebook-has-removed-all-cross-posted-tweets/</dc:identifier>
</item>
</channel>
</rss>