<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Crystal in Production: Diploid</title>
<link>https://crystal-lang.org/2017/10/27/diploid-and-crystal.html</link>
<guid isPermaLink="true" >https://crystal-lang.org/2017/10/27/diploid-and-crystal.html</guid>
<description>&lt;blockquote readability=&quot;10.969957081545&quot;&gt;
&lt;p&gt;&lt;em&gt;This guest post is an interview that Ivo Balbaert had with Peter Schols from &lt;a href=&quot;http://www.diploid.com/&quot;&gt;&lt;strong&gt;Diploid&lt;/strong&gt;&lt;/a&gt; about their Crystal in Production story. This interview will also be part of the &lt;a href=&quot;https://pragprog.com/book/crystal/crystal&quot;&gt;&lt;strong&gt;Programming Crystal&lt;/strong&gt; book&lt;/a&gt; that Ivo is writting - and we can’t wait to read!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We’d like to thank both of them for taking the time to share their experience, and to invite any other companies or individuals using Crystal in a production environment to share theirs too - &lt;a href=&quot;https://crystal-lang.org/community/&quot;&gt;&lt;strong&gt;reach out&lt;/strong&gt;&lt;/a&gt; if you’d like to!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At &lt;a href=&quot;http://www.diploid.com/&quot;&gt;Diploid&lt;/a&gt;, we have been using Crystal for quite some time now. We would like to share our experience in this interview, answering questions relevant to companies wanting to use Crystal for production.&lt;/p&gt;

&lt;p&gt;Diploid is a company based in Leuven, Belgium. We provides services and software to hospitals and labs for diagnosing rare diseases using clinical genome analysis.&lt;/p&gt;

&lt;p&gt;We are using Crystal for parts of Moon, the first software package to autonomously diagnose rare disease using artificial intelligence. Moon is being used by hospitals worldwide to diagnose patients with severe genetic conditions. The software requires the patient’s symptoms, as well as his/her genome data. It will then come up with the most likely mutation to explain the patient’s condition.&lt;/p&gt;
&lt;p&gt;Before Moon, geneticists had to manually filter and rank mutations using special software in order to reach a diagnosis. This process can take several hours up to several days. Moon does the filtering and ranking automatically and proposes a diagnosis within 3 minutes.&lt;/p&gt;
&lt;p&gt;Moon has been written mostly in Ruby. We’ve chosen Ruby for several reasons: rapid development, expressive syntax, lots of available libraries and a great ecosystem. All of this results in developer happiness and faster development cycles. But while Ruby is fast enough for most parts of Moon, it can be slow for the most performance critical areas of our codebase. That’s why we evaluated Crystal, among others, and eventually decided to develop in Crystal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://crystal-lang.org/assets/blog/diploid-moon.png&quot; class=&quot;center&quot;/&gt;&lt;/p&gt;

&lt;p&gt;When looking for a language that we could use to replace performance critical code in our Ruby codebase, we evaluated many options: Swift, Elixir, Go and Crystal. We specifically evaluated performance, syntax and ease-of-use. Performance was assessed using a small benchmark script that includes the performance critical operations that are typical for genome analysis (mostly string operations). Go topped the performance list, followed by Crystal. Surprisingly, Ruby outperformed Swift. Go clearly won the performance criterium. Performance is not everything, however: infrastructure is very cheap compared to developer time. While Go is an interesting language with a great concurrency model, it lacks in several other areas. Features that we take for granted in Ruby or other languages, are not available in Go. Examples include operator overloading or keyword extensibility, as well as true OOP. Moving from Ruby to Go sometimes feels like ignoring 20 years of progress made in language design.&lt;/p&gt;
&lt;p&gt;Crystal, as the second best performer, combines this still excellent performance with a very Ruby-like syntax. Given that the rest of our code base has been written in Ruby, it’s a great match. Moreover, Crystal has a Go-like concurrency model, so it basically takes the best from the Ruby world (expressive syntax, full OOP) and combines it with the best of Go (concurrency model, performance).&lt;/p&gt;

&lt;p&gt;Any problem that is currently being solved by Ruby, Python, Go or Rust could potentially be solved in Crystal. Given its similarity to Ruby, web frameworks will be an important part of the Crystal ecosystem. However, Crystal has a lot of potential in other fields too. Python is popular in data science, but it’s far from the fastest language. With Crystal, data scientists could have the ease-of-use of Python/Ruby combined with the performance of C. These advantages could make Crystal very suitable for domains like bioinformatics, where performance is really important.&lt;/p&gt;
&lt;p&gt;As many people in the bioinformatics field don’t have a formal CS/engineering background, having a language that is easy to learn is important as well. Crystal does very well on both fronts. In addition, due to its expressive nature and low barrier to entry - traits it inherited from Ruby - Crystal is a great tool for general scripting and systems software.&lt;/p&gt;

&lt;p&gt;When coming from Ruby, working in Crystal feels like coming home. Syntactically, Crystal is highly similar: the only major difference is the static typing. While this takes a bit to get used to, the transition was really smooth and easy. Many lines of code can literally be copied from a Ruby project and pasted into a Crystal project and they will just work. Some lines do need additional type annotations, however.&lt;/p&gt;
&lt;p&gt;Apart from that, the only major difference is that the rubygems (Ruby libraries) ecosystem is very expansive. Crystal has its own version of gems, called shards. While the number of shards has grown exponentially in the past few months, it’s still way behind the rubygems ecosystem, or the Go ecosystem for that matter.&lt;/p&gt;

&lt;p&gt;The Crystal code we use in production was not ported from Ruby, it was written from scratch in Crystal. However, in order to test the difference in performance - and also out of pure curiosity - we ported the code from Crystal to Ruby. For this particular project, we noticed that the Crystal version was 4.4x - 6.1x faster. This made a big difference in user experience. It means that for smaller data sets, Moon can present results in near real time (about 540 ms), which feels instant to the user. The corresponding Ruby program takes 2.5 seconds for the same task. When analysing larger data sets, the difference was even bigger: on average 27 seconds for Crystal compared to 2 minutes and 50 seconds for almost exactly the same Ruby code, a more than 6x speedup! When analysing hundreds of samples, these time differences become even more important.&lt;/p&gt;

&lt;p&gt;As mentioned, the speed increase is really significant. In addition, the ability to create a binary is convenient, as it allows for easy deployment. Compiling a binary also allows us to easily share software with our internal users and testers. With Ruby, we need to setup rvm or rbenv, install the latest Ruby version, install rubygems and install all required gems. With Crystal, it’s as easy as copying one file.&lt;/p&gt;

&lt;p&gt;Performance, the ability to create real binaries and the Ruby-like syntax are the most important Crystal selling points for me. Another advantage is that Crystal makes it very easy to create bindings to a C library - no need to write C code. Last but not least, Crystal has an amazing community of friendly and skilled developers. It started with Ary, Juan and Brian at Manas, creating the language and helping the Crystal newbies. In the meantime, it seems like the entire community has copied their attitude of providing help and pointers to everyone who’s interested in this very promising language.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.diploid.com/&quot;&gt;Diploid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.diploid.com/moon&quot;&gt;Moon software&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 28 Oct 2017 11:06:03 +0000</pubDate>
<dc:creator>sdogruyol</dc:creator>
<og:title>Diploid and Crystal</og:title>
<og:description>At Diploid, we have been using Crystal for quite some time now. We would like to share our experience in this interview, answering questions relevant to companies wanting to use Crystal for production.</og:description>
<og:url>http://crystal-lang.org/2017/10/27/diploid-and-crystal.html</og:url>
<og:image>http://crystal-lang.org/images/icon.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://crystal-lang.org/2017/10/27/diploid-and-crystal.html</dc:identifier>
</item>
<item>
<title>Progressive Growing of GANs for Improved Quality, Stability, Variation [video]</title>
<link>https://www.youtube.com/watch?time_continue=1&amp;v=XOxxPcy5Gr4</link>
<guid isPermaLink="true" >https://www.youtube.com/watch?time_continue=1&amp;v=XOxxPcy5Gr4</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://www.youtube.com/watch?time_continue=1&amp;v=XOxxPcy5Gr4&quot;&gt;https://www.youtube.com/watch?time_continue=1&amp;v=XOxxPcy5Gr4&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=15574079&quot;&gt;https://news.ycombinator.com/item?id=15574079&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 206&lt;/p&gt;&lt;p&gt;# Comments: 61&lt;/p&gt;</description>
<pubDate>Sat, 28 Oct 2017 05:19:38 +0000</pubDate>
<dc:creator>visarga</dc:creator>
<og:url>https://www.youtube.com/watch?v=XOxxPcy5Gr4</og:url>
<og:title>Progressive Growing of GANs for Improved Quality, Stability, and Variation</og:title>
<og:image>https://i.ytimg.com/vi/XOxxPcy5Gr4/maxresdefault.jpg</og:image>
<og:description>Submitted to ICLR 2018 We strongly recommend watching the video full-screen at 1080p @ 60.</og:description>
<og:type>video</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.youtube.com/watch?time_continue=1&amp;v=XOxxPcy5Gr4</dc:identifier>
</item>
<item>
<title>Can You Afford It? Real-World Web Performance Budgets</title>
<link>https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/</link>
<guid isPermaLink="true" >https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/</guid>
<description>&lt;p&gt;&lt;em&gt;TL;DR: performance budgets are an essential but under-appreciated part of product success and team health. Most partners we work with are not aware of the real-world operating environment and make inappropriate technology choices as a result. We set a budget in &lt;strong&gt;time&lt;/strong&gt; of &amp;lt;= 5 seconds first-load &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/time-to-interactive&quot;&gt;Time-to-Interactive&lt;/a&gt; and &amp;lt;= 2s for subsequent loads. We constrain ourselves to a real-world baseline device + network configuration to measure progress. The default global baseline is a ~$200 Android device on a 400Kbps link with a 400ms round-trip-time (“RTT”). This translates into a budget of ~130-170KB of critical-path resources, depending on composition — the more JS you include, the smaller the bundle must be.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;We’ve had the pleasure of working with dozens of teams over the past few years. This work has been illuminating, sometimes in very unexpected ways. One of the most surprising results has been the frequent occurrence of &lt;em&gt;“ambush by JavaScript”&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;500&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot; xml:lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;We need a new term for the business-opportunity wastage that modern front-end development has created.&lt;/p&gt;
&lt;p&gt;Maybe &quot;ambush by JS&quot;?&lt;/p&gt;
&lt;p&gt;— Alex Russell (@slightlylate) &lt;a href=&quot;https://twitter.com/slightlylate/status/915617755675504640?ref_src=twsrc%5Etfw&quot;&gt;October 4, 2017&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Business leaders who green-light the development of Progressive Web Apps frequently cite the ability to reach new users with near-zero friction as a &lt;a href=&quot;https://www.forbes.com/sites/forbespr/2017/03/07/forbes-launches-all-new-mobile-web-experience-for-forbes-com/#62db39375168&quot;&gt;primary motivator&lt;/a&gt;. At the same time, teams are reaching for tools which make achieving this goal impossible. Nobody is trying to do a poor job, and yet the results of a “completed” PWA project often require weeks or months of painstaking rework to deliver minimally acceptable performance.&lt;/p&gt;
&lt;p&gt;This rework delays launches which, in turn, delays gathering data about the viability of a PWA strategy. Teams we aren’t able to work with directly sometimes do not catch these problems until it’s too late, launching experiences which are simply unusable for a majority of potential users.&lt;/p&gt;
&lt;h2&gt;Setting A Baseline&lt;/h2&gt;
&lt;p&gt;Teams that avoid unpleasant surprises tend to share a few traits:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Executive sponsors are enthusiastic. They use “do what it takes” language to describe the efforts to get and stay fast&lt;/li&gt;
&lt;li&gt;Performance budgets are set early in the life of the project&lt;/li&gt;
&lt;li&gt;Budgets are scaled to a benchmark network &amp;amp; device&lt;/li&gt;
&lt;li&gt;Tools and CI systems help them monitor progress &amp;amp; prevent regressions&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;These properties build on each other: it’s difficult to get the space you need to plan to do things well without decision makers who value user experience and long-term business value. Teams with this support are free to set performance budgets, do “bakeoffs” between competing approaches, and invest in performance infrastructure. They’re also more able to go against the “industry standard” grain when popular tools prove to be inappropriate.&lt;/p&gt;
&lt;p&gt;Performance budgets keep everyone on the same page and create a culture of shared enthusiasm for improving the lived user experience. Teams with budgets also find it easier to track and graph progress. This helps support executive sponsors who then have meaningful metrics to point to in justifying the investments being made.&lt;/p&gt;
&lt;p&gt;Budgets set an &lt;em&gt;objective frame&lt;/em&gt; for determining which changes to the codebase represent progress and which are regressions from the user perspective. Without them it’s impossible to avoid slipping into the trap of pretending you can afford more than you can. Very rarely have we seen a team succeed that doesn’t set budgets, gather RUM metrics, and carry representative customer devices.&lt;/p&gt;
&lt;p&gt;Partner meetings are illuminating. We get a strong sense for how bad site performance is going to be based on the percentage of engineering leads, PMs, and decision makers carrying high-end phones which they primarily use in &lt;a href=&quot;http://www.telecompetitor.com/report-u-s-rural-mobile-broadband-speeds-are-20-9-slower-than-urban/&quot;&gt;urban areas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Doing better by users involves 2 phases:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Challenging assumptions &amp;amp; growing understanding of real-world conditions&lt;/li&gt;
&lt;li&gt;Automating testing against an objective baseline&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Never before have front-end teams enjoyed access to such good performance tools and diagnostic techniques, yet poor results are the norm. What’s going on here?&lt;/p&gt;
&lt;h2&gt;JS Is Your Most Expensive Asset&lt;/h2&gt;
&lt;p&gt;One distinct trend is a belief that a JavaScript framework and Single-Page Architecture (SPA) is a must for PWA development. This isn’t true (more on that in a follow-up post), and sites which are built this way implicitly require more script in each document (e.g., for router components). We regularly see sites loading more than 500KB of script (compressed). This matters because all script loading delays the metric we value most: &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/time-to-interactive&quot;&gt;Time to Interactive&lt;/a&gt;. Sites with this much script are simply &lt;em&gt;inaccessible&lt;/em&gt; to a broad swath of the world’s users; statistically, users do not (and will not) wait for these experiences to load. Those that do experience horrendous jank.&lt;/p&gt;
&lt;p&gt;We’re often asked “what’s the big deal about 200KB of JS, some of our images are that size?” A good question! Answering it requires an understanding of how browsers process resources (which differs by type) and the concept of &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/optimizing-critical-rendering-path&quot;&gt;the critical path&lt;/a&gt;. &lt;a href=&quot;https://www.youtube.com/watch?v=0A-2BhEZiM4&amp;amp;feature=youtu.be&quot;&gt;For a timely introduction, I recommended Kevin Schaaf’s recent talk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Lx1cYJAVnzA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; class=&quot;yt-embed&quot;&gt;[embedded content]&lt;/iframe&gt;Late-loading JavaScript can cause “server-side rendered” pages to fail in infuriating ways. This uncanny-valley effect is the reason we focus on when pages become reliably interactive.&lt;/p&gt;
&lt;p&gt;Consider a page like:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;br /&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/styles.css&quot;&amp;gt;&lt;br /&gt;&amp;lt;script src=&quot;/app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;my-app&amp;gt;&lt;br /&gt;&amp;lt;picture slot=&quot;hero-image&quot;&amp;gt;&lt;br /&gt;&amp;lt;source srcset=&quot;img@desktop.png, img@desktop-2x.png 2x&quot;&lt;br /&gt;media=&quot;(min-width: 990px)&quot;&amp;gt;&lt;br /&gt;&amp;lt;source srcset=&quot;img@tablet.png, img@tablet-2x.png 2x&quot;&lt;br /&gt;media=&quot;(min-width: 750px)&quot;&amp;gt;&lt;br /&gt;&amp;lt;img srcset=&quot;img@mobile.png, img@mobile-2x.png 2x&quot;&lt;br /&gt;alt=&quot;I don't know why. It's a perfectly cromunlent word!&quot;&amp;gt;&lt;br /&gt;&amp;lt;/picture&amp;gt;&lt;br /&gt;&amp;lt;/my-app&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The browser encounters this document in response for a GET request to &lt;code&gt;https://example.com/&lt;/code&gt;. The server sends it as a stream of bytes and when the browser encounters each of the sub-resources referenced in the document, it requests them.&lt;/p&gt;
&lt;p&gt;For this page to be done loading it needs to be responsive to user input — the “interactive” in &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/time-to-interactive&quot;&gt;“Time to Interactive”&lt;/a&gt;. Browsers process user input by generating DOM events that application code listens to. This input processing happens on document’s &lt;em&gt;main thread&lt;/em&gt;, where JavaScript runs.&lt;/p&gt;
&lt;p&gt;Here are some operations that can happen on other threads, allowing the browser to stay responsive:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parsing HTML&lt;/li&gt;
&lt;li&gt;Parsing CSS&lt;/li&gt;
&lt;li&gt;Parsing and compiling JavaScript (sometimes)&lt;/li&gt;
&lt;li&gt;Some JS garbage collection tasks&lt;/li&gt;
&lt;li&gt;Parsing and rasterizing images&lt;/li&gt;
&lt;li&gt;GPU-accelerated CSS transformations and animations&lt;/li&gt;
&lt;li&gt;Main-document scrolling (assuming no active touch listeners)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These operations, however, &lt;em&gt;must&lt;/em&gt; happen on the main thread:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Execution of JavaScript&lt;/li&gt;
&lt;li&gt;Construction of DOM&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Processing input (including scrolling w/ active touch listeners)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If our example document wasn’t reliant on JavaScript to construct the &lt;code&gt;&amp;lt;my-app&amp;gt;&lt;/code&gt; custom element, the contents of the document would likely be interactive as soon as enough CSS and content was available to render meaningfully.&lt;/p&gt;
&lt;p&gt;Script execution delays interactivity in a few ways:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the script executes for more than 50ms, time-to-interactive is delayed by the &lt;em&gt;entire&lt;/em&gt; amount of time it takes to download, compile, and execute the JS&lt;/li&gt;
&lt;li&gt;Any DOM or UI created in JS is not available for use until the script runs&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Images, on the other hand, do not block the main thread, do not block interaction when parsed or rasterized, and do not prevent other parts of the UI from getting or staying interactive. Therefore, while a 150KB image won’t appreciably increase TTI, 150KB of JS will delay interactivity by the time required to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Request the code, including DNS, TCP, HTTP, and decompression overhead&lt;/li&gt;
&lt;li&gt;Parse and compile the top-level functions of the JS&lt;/li&gt;
&lt;li&gt;Execute the script&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These steps are largely serialized.&lt;/p&gt;
&lt;p&gt;If script execution could stay under 50ms for a bundle this large, TTI would not be delayed, but that’s not feasible. 150KB of gzipped JavaScript expands to roughly 1MB of code, and as &lt;a href=&quot;https://medium.com/reloading/javascript-start-up-performance-69200f43b201&quot;&gt;Addy&lt;/a&gt; &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1wHcNNQea28LhwQ_amFamT33d5woVrJfJy53Z1k6V090/edit#gid=1882596388&quot;&gt;documented&lt;/a&gt;, that’s going to take more than a second on most of the world’s phones &lt;em&gt;not including the time to fetch it&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;JavaScript is the &lt;em&gt;single most&lt;/em&gt; expensive part of any page in ways that are a function of both network capacity and device speed. For developers and decision makers with fast phones on fast networks this is a double-whammy of hidden costs.&lt;/p&gt;
&lt;h2&gt;Global Ground-Truth&lt;/h2&gt;
&lt;p&gt;Deciding what benchmark to use for a performance budget is crucial. Some teams and businesses know their audience intimately and can make informed estimates about the devices and networks current and prospective users are on. Most, however, do not have such a baseline easily to-hand. Where to start?&lt;/p&gt;
&lt;p&gt;Two numbers set the stage:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The median user is on a slow network&lt;/em&gt;. Just how slow is a matter of some debate.&lt;/p&gt;
&lt;p&gt;Our metrics at Google show a conflicted picture (which I’m working to get to clarity on). Some systems show median RTTs near ~100ms for 3G users. Others show the median user unable to transmit and receive an individual packet in less than 400ms in some major markets.&lt;/p&gt;
&lt;p&gt;I suggest we should be conservative. &lt;a href=&quot;http://frankrayal.com/2011/06/27/lte-peak-capacity/&quot;&gt;Contended, over-subscribed cells&lt;/a&gt; can make “fast” networks brutally slow, &lt;a href=&quot;https://cs.nyu.edu/~jchen/publications/sigcomm15-zaki.pdf&quot;&gt;transport variance can make TCP much less efficient&lt;/a&gt;, and the &lt;a href=&quot;http://www-personal.umich.edu/~hjx/file/sigcomm13.pdf&quot;&gt;bursty nature of web traffic works against us&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Googlers enjoy access to a simulated “degraded 3G” network to help validate the behaviour of their apps under these conditions. It simulates a link with a 400ms RTT and 400-600Kbps of throughput (plus latency variability and simulated packet loss). Given the conflicted data we see across our other systems, this seems about right as a baseline.&lt;/p&gt;
&lt;p&gt;Simulated packet loss and variable latency, however, can make benchmarking extremely difficult and slow. The effect of a lost packet during DNS lookup can be a difference of &lt;em&gt;seconds&lt;/em&gt;, making it frustrating to compare before/after for changes at development time. Our baseline, then, should probably trade lower throughput/higher-latency for packet loss. What we lose in real-world fidelity, we gain in repeatability and the ability to compare across changes and across products. There’s much, much more to say about the effects of DNS, TLS, network topology, and other factors. For those who want to go deeper on this, I highly recommend &lt;a href=&quot;https://hpbn.co/&quot;&gt;Ilya Grigorik’s “High Performance Browser Networking”&lt;/a&gt;. The &lt;a href=&quot;https://hpbn.co/mobile-networks/#radio-resource-controller-rrc&quot;&gt;coverage of RRC&lt;/a&gt; alone makes it worth your time.&lt;/p&gt;
&lt;p&gt;Back to our baseline, we now have a sense for what our simulated network conditions should be: &lt;em&gt;400ms RTT, 400Kbps bandwidth&lt;/em&gt;. What about the device itself?&lt;/p&gt;
&lt;p&gt;At last year’s Chrome Dev Summit &lt;a href=&quot;https://www.youtube.com/watch?v=4bZvq3nodf4&quot;&gt;I discussed some of the thermal and power-limiting factors that create a huge disparity between desktop and mobile device performance&lt;/a&gt;. Add onto that the yawning chasm between low-end and high-end device performance thanks to chip design factors like cache sizes, and it can be difficult to know where to set a device baseline. Thankfully, this is somewhat easier than network speeds: &lt;a href=&quot;http://www.prnewswire.com/news-releases/comscore-reports-february-2017-us-smartphone-subscriber-market-share-300437639.html&quot;&gt;more than half of &lt;em&gt;American&lt;/em&gt;&lt;/a&gt; mobile users are on Android devices. As you look abroad, worldwide smartphone shipments &lt;a href=&quot;https://www.idc.com/promo/smartphone-market-share/os&quot;&gt;are (and for the past 5 years have been) overwhelmingly Android-based&lt;/a&gt;. &lt;a href=&quot;https://www.statista.com/statistics/283334/global-average-selling-price-smartphones/&quot;&gt;The average selling price for those devices is &lt;em&gt;falling&lt;/em&gt; in most geographies&lt;/a&gt;, driven by the ubiquity of Androids and &lt;a href=&quot;http://fortune.com/2016/02/15/apple-android-asps/&quot;&gt;relentless price drops within that ecosystem&lt;/a&gt;. This, in turn, drives the single most important trend in setting the global web performance budget hardware baseline: the next billion users will largely come online &lt;em&gt;when they can afford to&lt;/em&gt;. This will drive declines in smartphone average-selling-price (“ASP”) in emerging markets for the foreseeable future. This, in turn, means that all improvements to transistor-count-per-dollar will translate into &lt;em&gt;lower selling prices&lt;/em&gt;, not faster devices (on average).&lt;/p&gt;
&lt;p&gt;The true median device from 2016 sold at about ~$200 unlocked. &lt;a href=&quot;https://www.idc.com/getdoc.jsp?containerId=prUS42334717&quot;&gt;This year’s median device is even cheaper&lt;/a&gt;, but their performance is &lt;em&gt;roughly equivalent&lt;/em&gt;. Expect performance continued stasis at the median for the next few years. This is part of the reason I &lt;a href=&quot;https://building.calibreapp.com/beyond-the-bubble-real-world-performance-9c991dcd5342&quot;&gt;suggested&lt;/a&gt; the &lt;a href=&quot;https://www.gsmarena.com/motorola_moto_g4-8103.php&quot;&gt;Moto G4&lt;/a&gt; last year and recommend it or the &lt;a href=&quot;https://www.gsmarena.com/motorola_moto_g5_plus-8453.php&quot;&gt;Moto G5 Plus&lt;/a&gt; this year.&lt;/p&gt;
&lt;p&gt;Putting it all together, our global baseline for performance benchmarking is a:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;~$200 (new, unlocked) Android phone&lt;/li&gt;
&lt;li&gt;On a slow 3G network, emulated at:
&lt;ul&gt;&lt;li&gt;400ms RTT&lt;/li&gt;
&lt;li&gt;400Kbps transfer&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For most technologists, building applications for this environment might as well be farming on Mars. Luckily, &lt;a href=&quot;https://github.com/WPO-Foundation/webpagetest/blob/6a79fedb6bb5792f11d2891d9ae80f8ffb8b1a7d/www/settings/connectivity.ini.sample#L61&quot;&gt;this configuration&lt;/a&gt; is available on &lt;a href=&quot;https://www.webpagetest.org/easy&quot;&gt;webpagetest.org/easy&lt;/a&gt;, meaning we can re-create these conditions here on earth, any time we like.&lt;/p&gt;
&lt;h2&gt;The Affordability Calculation&lt;/h2&gt;
&lt;p&gt;The last thing we need for our perf budget is &lt;em&gt;time&lt;/em&gt;. How long is too long?&lt;/p&gt;
&lt;p&gt;I like Monica’s definition:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;500&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot; xml:lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;The Monica Perf Test™: if you wouldn't make eye contact with a stranger for the time it takes your web app to first paint, it's too slow.✌️💫&lt;/p&gt;
&lt;p&gt;— Monica Dinculescu (@notwaldorf) &lt;a href=&quot;https://twitter.com/notwaldorf/status/778248810371747840?ref_src=twsrc%5Etfw&quot;&gt;September 20, 2016&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;…but that’s more qualitative than quantitative. Numerically, we’d prefer &lt;em&gt;every&lt;/em&gt; page load occur in under a second (&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rail&quot;&gt;see RAIL&lt;/a&gt;). That’s not possible on real-world networks, so we’ve set the following &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/time-to-interactive&quot;&gt;Time-to-Interactive (TTI) metric&lt;/a&gt; goal with partners:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;TTI under &lt;a href=&quot;https://www.doubleclickbygoogle.com/articles/mobile-speed-matters/&quot;&gt;&lt;em&gt;5 seconds&lt;/em&gt;&lt;/a&gt; for first load&lt;/li&gt;
&lt;li&gt;TTI under &lt;em&gt;2 seconds&lt;/em&gt; for subsequent loads&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We now have everything we need to create a ballpark perf budget for a product in 2017.&lt;/p&gt;
&lt;h3&gt;First Load&lt;/h3&gt;
&lt;p&gt;Working backwards from time, network conditions, and the primary stages of the critical path, we get a few interesting results. We can start with our first-load budget of 5 seconds and begin to calculate how much transfer we can afford.&lt;/p&gt;
&lt;p&gt;First we subtract 1.6 seconds from our budgets for DNS lookup and TLS handshaking, leaving us 3.4s to work with.&lt;/p&gt;
&lt;p&gt;Then, we calculate how much data we can send over this link in 3.4 seconds: 400 Kbps = 50KB/s. 50KB/s * 3.4 = &lt;em&gt;170KB&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: This discussion is sure to infuriate competent network engineers. Previous versions of this article discussed &lt;a href=&quot;https://hpbn.co/building-blocks-of-tcp/#bandwidth-delay-product&quot;&gt;slow-start, bdp, tcp window scaling, and the like&lt;/a&gt;. They were commensurately difficult to follow. Simplifying has relatively little impact on the overall story, so those details are elided.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Modern web applications are largely composed of JS, meaning we also need to subtract the amount of time the JS needs to parse and evaluate. The gzip compression factor for JS code is between 5x and 7x. 170KB of JS then becomes ~850KB-1MB of JS which, based on earlier estimates, may take a second to run (presuming it doesn’t do any expensive DOM work, which of course it will). Playing with these numbers a little bit, we can get back below 3.4s of download and eval by limiting ourselves to 130KB of JS transferred on the wire.&lt;/p&gt;
&lt;p&gt;One last wrench in the works: if any of our critical-path resources come from a different origin (e.g., a CDN), we need to subtract connection setup time for that origin (~1.6s) from the budget, further limiting how much of our 5s we actually get to can spend on network transfer and client-side work.&lt;/p&gt;
&lt;p&gt;Putting it all together, under ideal conditions, our rough budget for critical-path resources (CSS, JS, HTML, and data) at:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;170KB&lt;/em&gt; for sites without much JS&lt;/li&gt;
&lt;li&gt;&lt;em&gt;130KB&lt;/em&gt; for sites built with JS frameworks&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This gives us the ability to consider the single most pressing question in front-end development today: &lt;em&gt;“can you afford it?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For example, if your JS framework takes ~40KB of transfer on a JS-heavy site (which gets a budget of 130KB thanks to JS eval time), you’re left with only 90KB of “headroom”. Your entire app must fit into that space. A 100KB framework loaded from a CDN &lt;em&gt;is already 20KB over budget&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Think back: your framework of choice might be 40K, but what about that data system? The router you added? Suddenly 130KB doesn’t seem like a lot when you also need to include data, templates, and styles.&lt;/p&gt;
&lt;p&gt;Living on a budget means constantly asking yourself “can I really afford this?”&lt;/p&gt;

&lt;h3&gt;Second Load&lt;/h3&gt;
&lt;p&gt;In an ideal world, all page loads happen in under a second, but for many reasons that’s often not feasible. Therefore we’re going to give ourselves a bit of a breather and budget 2 seconds for second (third, fourth, etc.) load.&lt;/p&gt;
&lt;p&gt;Why not 5? Because we shouldn’t need to ever go to the network to get our app’s UI booted once we’ve visited it the first time. &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers&lt;/a&gt; and &lt;a href=&quot;http://offlinefirst.org/&quot;&gt;“offline first”&lt;/a&gt; architectures enables us to put interactive pixels on screen without ever touching the network. This is the key to achieving &lt;a href=&quot;https://infrequently.org/2016/05/service-workers-and-pwas-its-about-reliable-performance-not-offline/&quot;&gt;reliable performance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Two seconds is &lt;em&gt;forever&lt;/em&gt; in modern CPU terms, but we still need to spend it wisely. Factors we need to account for include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Process creation time (Android is relatively slow vs. other OSes)&lt;/li&gt;
&lt;li&gt;Time required to read bytes from disk (it’s not zero, even on flash-based storage!)&lt;/li&gt;
&lt;li&gt;Time to execute and run our code&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Every app I’ve seen that hits a 5s initial load and implements offline-first correctly stays under this 2s budget, and sub 1s is possible! But getting to offline-first is a huge challenge for many teams. Architecting to save last-seen user data locally, cache app resources in a reliable and coherent way, and juggle application code upgrades using the &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle&quot;&gt;Service Worker lifecycle&lt;/a&gt; can be a major undertaking.&lt;/p&gt;
&lt;p&gt;I’m looking forward to tools continuing to evolve in this area. The most comprehensive bootstrap I know of today is the &lt;a href=&quot;https://www.polymer-project.org/2.0/toolbox/&quot;&gt;Polymer App Toolbox&lt;/a&gt;, so if you’re not sure where to start, start there.&lt;/p&gt;
&lt;h2&gt;130-170KB…Surely You’re Kidding!?!&lt;/h2&gt;
&lt;p&gt;Many teams we talk to wonder if it’s even possible to deliver something useful in as little as 130KB. It is! the &lt;a href=&quot;https://www.polymer-project.org/2.0/toolbox/prpl&quot;&gt;PRPL pattern&lt;/a&gt; shows the way through aggressive code-splitting based on route awareness, Service Worker caching of granular (subsequent-page) resources, and clever use of modern protocol enhancements like &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP/2_Server_Push&quot;&gt;HTTP/2 Push&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Taken together, these tools &lt;a href=&quot;https://www.webpagetest.org/video/compare.php?tests=171009_XR_4af2434b042e8ded9256ce3de39e5345-r%3A1-c%3A0&amp;amp;thumbSize=200&amp;amp;ival=100&amp;amp;end=full&quot;&gt;enable us to deliver functional, modern experiences in under 100KB for the critical path&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sadly, it’s still sort of difficult to tell from a specific trace which parts of the page load are critical-path resources for TTI and which aren’t, but I’m optimistic that tools will evolve quickly to help us understand this key metric.&lt;/p&gt;
&lt;p&gt;Regardless, we know it’s possible, even without giving up on frameworks entirely. Both &lt;a href=&quot;https://www.wego.com&quot;&gt;Wego&lt;/a&gt; and &lt;a href=&quot;https://h5.ele.me/msite/&quot;&gt;Ele.me&lt;/a&gt; are built with modern tools (&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt; and &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt;, respectively) and help users complete real transactions &lt;em&gt;today&lt;/em&gt;. Most apps are &lt;em&gt;less&lt;/em&gt; complex than they are. Life on a budget isn’t starvation.&lt;/p&gt;
&lt;h2&gt;Tools for Teams on a Budget&lt;/h2&gt;
&lt;p&gt;Getting under-budget &lt;em&gt;is&lt;/em&gt; hard, but the benefits to the business and to users are immense. Less often discussed are the benefits to engineering teams and their leaders. No tech-lead or PM wants to be on the wrong side of an executive who walks into their area with a phone asking “so why is this so slow when I’m on vacation?”&lt;/p&gt;
&lt;p&gt;This isn’t theoretical.&lt;/p&gt;
&lt;p&gt;I’ve seen teams that have just finished re-building on a modern tech stack cringe for an hour as we walk them through the experience of using their “better”, “faster” experiences under real-world conditions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Everyone&lt;/em&gt; loses face when the product fails to meet expectations. Months of unplanned performance fire-fighting delay the addition of new features and have a draining effect on team morale. When performance becomes a crisis, mid-level managers get caught between being the “shit umbrella” their teams count on and crushing self doubt. Worse, they may begin to doubt their team. The other side of a performance crisis is a long road; how can the organisation trust the team to deliver a quality product? Can they trust the TLs to recommend new technology or large re-investments? Recriminations follow. This is a &lt;em&gt;terrible&lt;/em&gt; experience, specifically for developers who are too often on the receiving end of incredible pressure to “fix it”, ASAP — and “it” may be a core technology the product is built on.&lt;/p&gt;
&lt;p&gt;In the worst cases, the product may be unfixable on a short enough timeframe to help the business. A lot of progress is Darwinian and for startups and small teams, betting on the wrong stack without the benefit of a long runway can be fatal. Worse, this can go un-diagnosed for a long, long time. If the whole team carries the latest iOS devices on fast, urban networks and the product’s economics are premised on growing a broad-based audience, the failure of that audience to arrive barely makes a sound.&lt;/p&gt;
&lt;p&gt;Performance isn’t the (entire) product, of course. Lots of slow or market-limited products do incredibly well. Having a unique service that people want (and will go out of their way for) can override all of these other concerns. Some folks even succeed in App Stores where friction-to-acquire an experience is &lt;em&gt;intense&lt;/em&gt;. But products in competitive marketplaces need every advantage.&lt;/p&gt;
&lt;p&gt;Some specific tools and techniques can help teams that adopt a performance budget:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.webpagetest.org/easy&quot;&gt;webpagetest.org/easy&lt;/a&gt;: this is our go-to tool for one-off analysis.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/scripting&quot;&gt;WPT scripting&lt;/a&gt;: for teams that don’t want to set up a custom WPT instance and have public URLs for their WIP apps, integrating with WPT scripting can be a great way to get regular “checks”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sites.google.com/a/webpagetest.org/docs/private-instances&quot;&gt;WPT private instances&lt;/a&gt;: teams that want to integrate WPT directly into their CI or commit-queue systems should investigate setting up a private WPT server and hardware&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/#programmatic&quot;&gt;Scripted Lighthouse&lt;/a&gt;: not ready for a full WPT instance? Scripting Lighthouse can help your CI automate analysis of your site and catch regressions&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tkadlec/grunt-perfbudget&quot;&gt;&lt;code&gt;grunt-perfbudget&lt;/code&gt;&lt;/a&gt; is an even-easier, automated WPT testing for your CI. Use it!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speedcurve.com/&quot;&gt;Speedcurve&lt;/a&gt; and &lt;a href=&quot;https://calibreapp.com/&quot;&gt;Calibre&lt;/a&gt;: these hosted services automate tracking performance over time, delivering an outstanding real-world gut-check&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.js.org/configuration/performance/&quot;&gt;Webpack Performance Budgets&lt;/a&gt;: for teams using webpack in their build steps, enabling this configuration can provide great development-time warning for resources that exceed budgets.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/siddharthkp/bundlesize&quot;&gt;bundlesize&lt;/a&gt; and &lt;a href=&quot;https://github.com/GoogleChromeLabs/pr-bot&quot;&gt;pr-bot&lt;/a&gt; let you set per-script budgets which can be automatically enforced as part of your pull-request process. Recommended!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Success in combating bloat often means &lt;em&gt;turning warnings into hard errors&lt;/em&gt;. Teams with CI or commit-queue systems should strongly consider disallowing commits that break the (performance) bank.&lt;/p&gt;
&lt;p&gt;For teams starting fresh, my &lt;em&gt;strong&lt;/em&gt; recommendation is to start with a stack that embeds strong opinions about app structure, code splitting, and build targets. The best of those today are:&lt;/p&gt;
&lt;p&gt;Whatever tools your team chooses, a budget is essential. Without one, even the most advanced, “lightweight” frameworks can easily create bloated, unusable apps. Starting from the global baseline and only increasing the budget based on hard numbers is the best way I know of to ensure your project lands well for everyone.&lt;/p&gt;
&lt;h2&gt;Endnotes&lt;/h2&gt;
&lt;p&gt;In the interest of time and space, discussion of future-friendly architectures will have to wait for another post. The curious can dig into &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/web/updates/2017/02/navigation-preload&quot;&gt;Navigation Preload&lt;/a&gt;, and &lt;a href=&quot;https://developers.google.com/web/updates/2016/06/sw-readablestreams&quot;&gt;Streams&lt;/a&gt;. Their powers combined are going to fundamentally transform the optimal page-load for 2018 and beyond.&lt;/p&gt;
&lt;p&gt;Lastly, thanks to everyone who reviewed early drafts of this post, including (but not limited to): &lt;a href=&quot;https://twitter.com/vinamratas&quot;&gt;Vinamrata Singal&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/Paul_Kinlan&quot;&gt;Paul Kinlan&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/poshaughnessy&quot;&gt;Peter O’Shaughnessy&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/addyosmani&quot;&gt;Addy Osmani&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/graynorton&quot;&gt;Gray Norton&lt;/a&gt;. Hopefully their valiant attempts to direct this article away from error were not overcome by my talent in adding it.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Oct 2017 23:26:21 +0000</pubDate>
<dc:creator>josephscott</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/</dc:identifier>
</item>
<item>
<title>Reason 3</title>
<link>https://reasonml.github.io/community/blog/#reason-3</link>
<guid isPermaLink="true" >https://reasonml.github.io/community/blog/#reason-3</guid>
<description>&lt;h3 id=&quot;reason-3&quot;&gt;Reason 3&lt;/h3&gt;
&lt;p&gt;I'm writing this post while coincidentally sitting next to the Reason team manager's manager who's trying out the new Reason syntax; his first impression is &quot;this is exactly how I think it works!&quot;. I think this alone made all our effort worthwhile.&lt;/p&gt;
&lt;p&gt;Reason 3 is primarily the work of &lt;a href=&quot;https://github.com/let-def&quot;&gt;Fred&lt;/a&gt;, the maintainer of Merlin (yeah, &lt;em&gt;that&lt;/em&gt; &lt;a href=&quot;https://github.com/ocaml/merlin&quot;&gt;Merlin&lt;/a&gt;), &lt;a href=&quot;https://github.com/iwankaramazow&quot;&gt;Iwan&lt;/a&gt; and &lt;a href=&quot;https://github.com/jaredly&quot;&gt;Jared&lt;/a&gt;, over the last six months. The release packs a &lt;em&gt;lot&lt;/em&gt; of infra changes under the hood, most of which, we hope, stay invisible to you and occasionally make you feel &quot;yeah, that &lt;em&gt;is&lt;/em&gt; how I think it should work&quot;.&lt;/p&gt;
&lt;p&gt;The infra changes wouldn't have happened without a tight cooperation from these OCaml and JavaScript folks. We're really, &lt;em&gt;really&lt;/em&gt; grateful for all the support we've gotten. Thank you so much.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/reasonml-community/reason-react-example/commit/3640ce6bb6729c3b3d8a0c200a624996f8da8beb&quot;&gt;Here's how it looks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;100+ parsing &amp;amp; printing issues fixed! The total open issues count went from almost 500 to &amp;lt;300.&lt;/li&gt;
&lt;li&gt;New error messages infra, by Fred. This solves lots of existing pain points with refmt error report: reserved keywords, missing semicolon, etc. More coming soon! &lt;strong&gt;Please do give Fred a shout out on his &lt;a href=&quot;https://twitter.com/let_def&quot;&gt;Twitter&lt;/a&gt;&lt;/strong&gt;. Show that the JavaScript folks appreciate his help.&lt;/li&gt;
&lt;li&gt;Unification of &lt;code&gt;[@foo]&lt;/code&gt;, &lt;code&gt;[@@foo]&lt;/code&gt; and &lt;code&gt;[@@@foo]&lt;/code&gt; into &lt;code&gt;[@foo]&lt;/code&gt;. Labeled argument + type punning, JS object type sugar &lt;code&gt;{. &quot;foo&quot;: string}&lt;/code&gt;, string concat is now &lt;code&gt;++&lt;/code&gt;, infix operators formatting tweaks, etc.&lt;/li&gt;
&lt;li&gt;We've now exposed &lt;a href=&quot;https://github.com/facebook/reason/tree/9c578b4e5ace89e8966fc9ec747d393985b05933#installation-for-programmatic-usage&quot;&gt;dedicated APIs&lt;/a&gt; for programmatic usage of the Reason parser and printer, &lt;code&gt;refmt&lt;/code&gt;, for both native and web usage. In particular, the web version of &lt;code&gt;refmt&lt;/code&gt; powers &lt;a href=&quot;http://blog.klipse.tech/reason/2017/10/06/blog-reason.html&quot;&gt;Klipse&lt;/a&gt;, &lt;a href=&quot;https://github.com/reasonml/reason-tools&quot;&gt;reason-tools&lt;/a&gt;, the Reason docs site, etc. If you're coming from JavaScript: &lt;code&gt;npm install --save reason&lt;/code&gt; to get the single &lt;code&gt;refmt.js&lt;/code&gt; script. It gzips to &amp;lt;350kb, so go wild and impress us with your &lt;code&gt;refmt&lt;/code&gt; usages!*&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aaaand yes, JS application/abstraction syntax (aka, parentheses around functions/parametrized types)&lt;/strong&gt;. Yes, you still get automatic currying; it's a pure syntactical change. Honestly, this point alone deserves its own post, but it opens the floodgates of &lt;a href=&quot;http://whatis.techtarget.com/definition/Parkinsons-law-of-triviality-bikeshedding&quot;&gt;bikeshedding&lt;/a&gt;, so we're gonna refrain from writing one and will just watch you folks argue over this on Twitter (and pick the most creative rants and hang them on our wall!). More seriously, &lt;strong&gt;if you deeply care about syntax&lt;/strong&gt;, then instead of shouting about the change publicly, voice your feedbacks/complains privately to &lt;a href=&quot;https://twitter.com/_chenglou&quot;&gt;@_chenglou&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/jordwalke&quot;&gt;@jordwalke&lt;/a&gt;. If you don't care about syntax, then great!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;How do I get it?&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;2.8390957446809&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;There's a &lt;strong&gt;migration script&lt;/strong&gt; at &lt;a href=&quot;https://github.com/reasonml/upgradeSyntaxFrom2To3&quot;&gt;https://github.com/reasonml/upgradeSyntaxFrom2To3&lt;/a&gt;. Use it. No manual syntax upgrade needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Uninstall &amp;amp; upgrade your &lt;a href=&quot;https://reasonml.github.io/guide/editor-tools/global-installation&quot;&gt;reason-cli&lt;/a&gt; to &lt;code&gt;3.0.0&lt;/code&gt; (instead of the old &lt;code&gt;1.13.7&lt;/code&gt;), for editor tooling.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.73333333333333&quot;&gt;
&lt;p&gt;Upgrade your project's &lt;a href=&quot;https://github.com/BuckleScript/bucklescript&quot;&gt;BuckleScript&lt;/a&gt; to &lt;code&gt;2.0.0&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Set &lt;code&gt;&quot;refmt&quot;: 3&lt;/code&gt; in your &lt;code&gt;bsconfig.json&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart your editor.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;If you're working on native, it's &lt;code&gt;reason.3.0.0&lt;/code&gt; on OPAM.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;How does this affect existing projects&lt;/strong&gt;?&lt;/p&gt;
&lt;ul readability=&quot;3.3806818181818&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;If you don't specify &lt;code&gt;&quot;refmt&quot;: 3&lt;/code&gt; in your &lt;code&gt;bsconfig.json&lt;/code&gt;, nothing changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Your third-party dependencies can still stay at version 2, vice-versa. Things will work as intended.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.83333333333333&quot;&gt;
&lt;p&gt;Learning the new syntax? &lt;a href=&quot;https://github.com/reasonml/reason-tools&quot;&gt;Reason-tools&lt;/a&gt; now converts between syntaxes too!&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;For native, the dependencies will have to upgrade the syntax first. We'll solve this better in the future.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Voilà!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To see the full list of the changes&lt;/strong&gt;, please go to &lt;a href=&quot;https://github.com/facebook/reason/blob/master/HISTORY.md#300&quot;&gt;HISTORY.md&lt;/a&gt;. Again, check the migration script so that you don't go and manually convert each file.&lt;/p&gt;
&lt;p&gt;Thank you again, Fred, Iwan, Jared and all the others (hcarty, Sean, Jordan, Cristiano, Hongbo, Ricky, Andrey, etc.) for the whole effort.&lt;/p&gt;
&lt;p&gt;* If you format your own blog site's Reason code using it, the post's syntax can potentially stay always up-to-date without you needing to go and manually update the snippets. And yes, we have some crazy ideas around this soon.&lt;/p&gt;
&lt;h3 id=&quot;messengercom-now-50-converted-to-reason&quot;&gt;Messenger.com Now 50% Converted to Reason&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;September 8, 2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Boom!&lt;/p&gt;
&lt;p&gt;Messenger.com is the web version of Facebook Messenger; we also share code with facebook.com's inbox view and chat tabs. For over a year, the Reason team has been working directly on Messenger in order to integrate Reason + BuckleScript into the codebases. As of a while ago, we've reached 50% Reason code coverage!&lt;/p&gt;
&lt;h4 id=&quot;some-statistics&quot;&gt;Some Statistics&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Full rebuild of the Reason part of the codebase is ~2s (a few hundreds of files), incremental build (the norm) is &lt;strong&gt;&amp;lt;100ms&lt;/strong&gt; on average. The BuckleScript author estimates that the build system should scale to a few hundred thousands files in the current condition.&lt;/li&gt;
&lt;li&gt;Messenger used to receive bugs reports on a daily basis; since the introduction of Reason, there have been a total of &lt;strong&gt;10 bugs&lt;/strong&gt; (that's during the whole year, not per week)!&lt;/li&gt;
&lt;li&gt;Most of the messenger core team's new features are now developed in Reason.&lt;/li&gt;
&lt;li&gt;Dozens of massive refactors while iterating on ReasonReact. Refactoring speed went from days to hours to dozens of minutes. I don't think we've caused more than a few bugs during the process (counted toward the total number of bugs).&lt;/li&gt;
&lt;li&gt;Everyone writing Reason got promoted for quality engineering. Just kidding. But definitely high, long-term impact.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;which-teams-next&quot;&gt;Which Team's Next?&lt;/h4&gt;
&lt;p&gt;We believe in iterating on/alongside product teams in order to create the best infra. The product teams' and open source folks' feedback has changed our strategy a few times, for the better. As of today, Reason and BuckleScript are also deployed on a WhatsApp internal tool, Instagram Web (small scale), plus some critical Ads internal tools. We'll be working closely with these teams over the next year.&lt;/p&gt;
&lt;p&gt;We've successfully onboarded regular JavaScript folks to Reason; in the most extreme case, an intern with no JS knowledge was able to ship ReasonReact code in production (and made 0 bug while doing so). Give your own team a try! =)&lt;/p&gt;
&lt;p&gt;A big thanks to all these teams' members, to Hongbo (BuckleScript author) and to the OCaml community (really, 50% Reason means 50% OCaml. We're nothing without you); and of course, to all of you folks in the community for being with us all this time. The best is yet to come.&lt;/p&gt;
&lt;p&gt;See you soon!&lt;/p&gt;
&lt;h3 id=&quot;way-way-waaaay-nicer-error-messages&quot;&gt;Way, Way, Waaaay Nicer Error Messages!&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;August 25, 2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A picture's worth a thousand words.&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;div&gt;&lt;img alt=&quot;before&quot; src=&quot;https://user-images.githubusercontent.com/1909539/29709302-ab0c6aee-8940-11e7-953f-60a867d242cb.png&quot;/&gt;&lt;/div&gt;
After:
&lt;div&gt;&lt;img alt=&quot;before&quot; src=&quot;https://user-images.githubusercontent.com/1909539/29709301-ab04eac6-8940-11e7-8d2b-c65f808b6be8.png&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Sometimes when I'm busy working, some random colleague/Discord member would ping me and tell me &quot;Yo Cheng Lou why are Reason's errors so bad? Why can't you be more like &lt;a href=&quot;http://elm-lang.org&quot;&gt;Elm&lt;/a&gt; Cheng Lou? Why? Look at how great Elm's errors are Cheng Lou, look.&quot;&lt;/p&gt;
&lt;p&gt;In reality I'm pretty darn ashamed of our error messages; here we are, a type system with two decades of solid research and implementation, but sometimes presented to the end users as if it's something that'd get in their way.&lt;/p&gt;
&lt;p&gt;No more! We've heard you loud and clear, and delivered you much improved error messages! A few things we did:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Display the error-ing line(s), right inside the terminal.&lt;/li&gt;
&lt;li&gt;Better colors, for quicker visual search.&lt;/li&gt;
&lt;li&gt;Improved messages in many cases.&lt;/li&gt;
&lt;li&gt;Errors in Reason syntax for Reason files.&lt;/li&gt;
&lt;li&gt;A bit of breathing room between lines.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The last point is a tradeoff; errors end up taking more space. Seeing that you'd usually focus on a single error rather than trying to get an overview of all errors, we've deemed this tradeoff worthwhile, especially in the context of a big amount of build output. Considering the new warning format:&lt;/p&gt;
&lt;div&gt;&lt;img alt=&quot;warning-after&quot; src=&quot;https://user-images.githubusercontent.com/1909539/29711739-431be094-894b-11e7-87a6-bc1d6aeea043.png&quot;/&gt;&lt;/div&gt;
Here's the same warning, old version, buried among other outputs:
&lt;div&gt;&lt;img alt=&quot;warning-before&quot; src=&quot;https://user-images.githubusercontent.com/1909539/29711789-810739f8-894b-11e7-8451-a919b3f119c6.png&quot;/&gt;&lt;/div&gt;
&lt;p&gt;At Messenger, we've seen people ship warnings to production not because they didn't want to fix them, but because they've &lt;strong&gt;missed them&lt;/strong&gt;! It's not rocket science. Leave some negative space here and there. Color things appropriately. Voilà!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The new errors can be turned on by adding &lt;code&gt;&quot;bsc-flags&quot;: [&quot;-bs-super-errors&quot;]&lt;/code&gt; to your bsconfig.json&lt;/strong&gt;, &lt;a href=&quot;https://github.com/reasonml-community/reason-react-example/blob/6dc15bf5fbeeb184c99acb063f7644a0d14b12f4/bsconfig.json#L3&quot;&gt;like so&lt;/a&gt;. They're also available for &lt;a href=&quot;https://github.com/bsansouci/bsb-native&quot;&gt;bsb-native&lt;/a&gt;. True to our stack's spirit, they're fast, simple to configure, and solid.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One more thing&lt;/strong&gt;: we're vertically integrated common pitfalls of &lt;a href=&quot;https://reasonml.github.io/reason-react/&quot;&gt;ReasonReact&lt;/a&gt; into these messages too, when applicable.&lt;/p&gt;
&lt;div&gt;&lt;img alt=&quot;reason-react&quot; src=&quot;https://user-images.githubusercontent.com/1909539/29712284-f1013bb2-894d-11e7-9596-1cca54d5c331.png&quot;/&gt;&lt;/div&gt;
&lt;p&gt;This is just the first of many iterations to come! Got a message you'd like to see explained better? File an issue &lt;a href=&quot;https://github.com/reasonml-community/error-message-improvement/issues&quot;&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Enjoy =)&lt;/p&gt;
&lt;h3 id=&quot;much-better-playground&quot;&gt;Much Better Playground&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;August 18, 2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Based on popular feedback, we've now improved our online &lt;a href=&quot;https://reasonml.github.io/try&quot;&gt;Try&lt;/a&gt; section. Highlights:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Bidirectional conversion. Write Reason, get OCaml translation, vice-versa.&lt;/li&gt;
&lt;li&gt;Live evaluation, with console feedback in the lower-right section.&lt;/li&gt;
&lt;li&gt;Most of the &lt;a href=&quot;https://reasonml.github.io/api/index.html&quot;&gt;standard library&lt;/a&gt; is now loaded. Since we're evaluating on the web, This includes BuckleScript's &lt;a href=&quot;https://bucklescript.github.io/bucklescript/api/&quot;&gt;extra stdlib APIs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Sharable code snippet! Just copy the URL.&lt;/li&gt;
&lt;li&gt;Some performance improvements.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Have fun!&lt;/p&gt;
&lt;h3 id=&quot;new-website&quot;&gt;New website!&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;July 14, 2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Notice anything different? =)&lt;/p&gt;
&lt;p&gt;The new documentation website is built by our community member &lt;a href=&quot;https://jaredforsyth.com&quot;&gt;Jared&lt;/a&gt; (make sure to check his Reason blog posts too!). The new site keeps most of the same content from the old one, while providing a better structure to navigate through them. You'll notice &quot;Suggest an edit&quot; links all over the place. Take a look around!&lt;/p&gt;
&lt;p&gt;(Built with &lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;Gatsby&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;new-reasonreact-version-released&quot;&gt;New ReasonReact version released&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;June 12, 2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Very exciting release! Short version: ReasonReact now has its own documentation site &lt;a href=&quot;https://reasonml.github.io/reason-react/&quot;&gt;here&lt;/a&gt;. Accompanying this is the new &lt;a href=&quot;https://www.npmjs.com/package/bs-platform&quot;&gt;BuckleScript&lt;/a&gt; release. Both are non-breaking.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h3 id=&quot;spring-cleaning-first-blog-post&quot;&gt;Spring Cleaning (First Blog Post!)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;May 18, 2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now that the community is taking off, keeping folks up-to-date through &lt;a href=&quot;https://discord.gg/reasonml&quot;&gt;Discord&lt;/a&gt; and other existing channels became less ideal. We're starting a blog post section for this reason. In the spirit of the community, these posts will stay short and concise.&lt;/p&gt;
&lt;p&gt;We've moved unused first-party projects from &lt;a href=&quot;https://github.com/reasonml/&quot;&gt;GitHub/reasonml&lt;/a&gt; to &lt;a href=&quot;https://github.com/reasonml-old&quot;&gt;GitHub/reasonml-old&lt;/a&gt;. Old URLs are redirected, so no breakage here.&lt;/p&gt;
&lt;p&gt;We've cleaned up the Reason codebase. Editor integrations moved out to their dedicated repos. Updated instructions are still &lt;a href=&quot;https://reasonml.github.io/guide/editor-tools/editors-plugins&quot;&gt;here&lt;/a&gt;. Other Reason repo cleanups are still ongoing.&lt;/p&gt;
&lt;p&gt;Some discord rooms got merged together. Fewer rooms, more focused discussions.&lt;/p&gt;
&lt;p&gt;As you can see: this documentation site got a few rearrangements too. In general, if you'd like to contribute to docs, please ping us on Discord!&lt;/p&gt;
</description>
<pubDate>Fri, 27 Oct 2017 22:45:05 +0000</pubDate>
<dc:creator>bpierre</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://reasonml.github.io/community/blog/</dc:identifier>
</item>
<item>
<title>Public Key Pinning Being Removed from Chrome</title>
<link>https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/he9tr7p3rZ8/eNMwKPmUBAAJ?hn</link>
<guid isPermaLink="true" >https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/he9tr7p3rZ8/eNMwKPmUBAAJ?hn</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/he9tr7p3rZ8/eNMwKPmUBAAJ?hn&quot;&gt;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/he9tr7p3rZ8/eNMwKPmUBAAJ?hn&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=15572143&quot;&gt;https://news.ycombinator.com/item?id=15572143&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 253&lt;/p&gt;&lt;p&gt;# Comments: 100&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;hnrss is a labor of love, but if the project has made your job
or hobby project easier and you want to show some gratitude, &lt;a
href=&quot;https://donate.hnrss.org/&quot;&gt;donations are very much
appreciated&lt;/a&gt;. PayPal and Bitcoin both accepted. Thanks!&lt;/p&gt;
        </description>
<pubDate>Fri, 27 Oct 2017 20:54:23 +0000</pubDate>
<dc:creator>ejcx</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://reasonml.github.io/community/blog/</dc:identifier>
</item>
<item>
<title>Sorting Algorithms Revisualized</title>
<link>https://imgur.com/gallery/GD5gi</link>
<guid isPermaLink="true" >https://imgur.com/gallery/GD5gi</guid>
<description>&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;Radix sort is a neat sorting algorithm, but it requires you to know a bit more about your data. At each step, you bin the data based on the current digit you're looking at. For example, if we want to sort: 21, 10, 02, 12, 22, 11 We could do this from the most-significant digit (MSD) by first creating bins for 0_, 1_, 2_ as: [02] [10, 12, 11] [21, 22] And then creating sub-bins within these, for _0, _1, _2: [[],[],[02]], [[10],[11],[12]], [,[],[21],[22]]. Concatenated together, this creates the sorted list 02,10,11,12,21,22 You can also do this starting from the least significant digit (LSD), first for the digits _0, _1, _2: [10], [11,21], [02, 12, 22] And then merging those into bins based on the leading digit 0_, 1_, 2_: [02], [10, 11, 12], [21, 22] Concatenated together, this creates the same sorted list: 02, 10, 11, 12, 21, 22.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Oct 2017 18:25:22 +0000</pubDate>
<dc:creator>mdturnerphys</dc:creator>
<og:url>https://imgur.com/gallery/GD5gi</og:url>
<og:title>Sorting Algorithms Revisualized</og:title>
<og:type>article</og:type>
<og:image>https://i.imgur.com/MAusQ25.jpg?fb</og:image>
<og:description>Imgur: The most awesome images on the Internet.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://imgur.com/gallery/GD5gi</dc:identifier>
</item>
<item>
<title>Waymo Will Test Self-Driving Cars in Snowy Detroit</title>
<link>https://www.bloomberg.com/news/articles/2017-10-26/alphabet-s-waymo-will-test-self-driving-cars-in-wintry-detroit</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2017-10-26/alphabet-s-waymo-will-test-self-driving-cars-in-wintry-detroit</guid>
<description>&lt;p&gt;The self-driving cars Google designed are going to the snow -- and the seat of the car industry.&lt;/p&gt;

&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;&lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/GOOGL:US&quot; title=&quot;Financial Analysis&quot; target=&quot;_blank&quot;&gt;Alphabet Inc.&lt;/a&gt;’s Waymo, the vehicle arm of Google’s parent, announced on Thursday that it will start testing its autonomous Chrysler minivans on roads in the greater Detroit area. Michigan will be the sixth state where Waymo has run its vehicles on public roads. But the region is the first with a winter dominated by snow and ice, the kind of inclement conditions that pose hurdles for vehicle sensors.&lt;/p&gt;

&lt;p&gt;“Having lived through fourteen Michigan winters, I’m confident that there are few better places that will prepare our self-driving cars for winter conditions,” John Krafcik, Waymo’s chief executive officer and a former Ford Motor Co. executive, said in a statement. Waymo opened a testing facility in suburban Detroit last year.&lt;/p&gt;


&lt;p&gt;The hometown automakers are already there. Ford has tested self-driving cars in the state (including some for &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-08-29/ford-domino-s-to-test-consumer-appetite-for-driverless-delivery&quot; title=&quot;Ford, Domino’s Test Appetite for Driverless Pizza Delivery (2)&quot; target=&quot;_blank&quot;&gt;pizza delivery&lt;/a&gt;). General Motors Co.’s Cruise Automation is experimenting there as well. &lt;/p&gt;

&lt;p&gt;Waymo has compiled 3.5 million miles of public road testing since 2009. It’s widely seen as the front-runner in driverless car technology, which could upend the auto market if and when it arrives. Yet Waymo has sworn off manufacturing its own vehicles, and hasn’t disclosed how it plans to spread its package of self-driving sensors and software to a commercial fleet. &lt;/p&gt;
&lt;p&gt;Starting in April, Waymo began testing a free service with select passengers in Phoenix, using some of its 600 minivans from Fiat Chrysler Automobiles NV. A Waymo spokesman declined to specify how many vehicles would be used in Detroit.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Oct 2017 18:01:22 +0000</pubDate>
<dc:creator>kbyatnal</dc:creator>
<og:description>The self-driving cars Google designed are going to the snow -- and the seat of the car industry.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i77uiBBIyc3o/v4/1200x610.jpg</og:image>
<og:title>Alphabet’s Waymo Will Test Self-Driving Cars in Snowy Detroit</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2017-10-26/alphabet-s-waymo-will-test-self-driving-cars-in-wintry-detroit</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2017-10-26/alphabet-s-waymo-will-test-self-driving-cars-in-wintry-detroit</dc:identifier>
</item>
<item>
<title>Comcast Tries to Derail Fort Collins Community Broadband</title>
<link>http://www.dslreports.com/shownews/Comcast-Tries-to-Derail-Fort-Collins-Community-Broadband-140604</link>
<guid isPermaLink="true" >http://www.dslreports.com/shownews/Comcast-Tries-to-Derail-Fort-Collins-Community-Broadband-140604</guid>
<description>&lt;p&gt;Colorado is &lt;a href=&quot;https://muninetworks.org/communitymap&quot;&gt;one of more than twenty states&lt;/a&gt; where incumbent broadband ISPs have quite literally written and purchased state protectionist laws prohibiting towns and cities from getting into the broadband business, even in instances where the private sector has failed to deliver. But Colorado is unique in that town and cities in the state have been able to vote locally on whether to overturn this ISP-lobbying-for- law, SB 152. And guess what? They keep voting to exempt themselves from the law, usually overwhelmingly.&lt;/p&gt;
&lt;div class=&quot;news_tiny_left&quot;&gt;
&lt;table align=&quot;left&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.dslreports.com/r0/download/2336446~2a3866ad0fce6cfcf497595de01f1e3e/Comcast.jpg&quot;&gt;&lt;img class=&quot;apic&quot; id=&quot;p15660&quot; border=&quot;0&quot; src=&quot;http://www.dslreports.com/r0/download/2336446.thumb200~2a3866ad0fce6cfcf497595de01f1e3e/Comcast.jpg/thumb200.jpg&quot; alt=&quot;Click for full size&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;a href=&quot;https://www.dslreports.com/shownews/Colorado-Towns-Keep-Voting-Down-State-Ban-on-Municipal-Broadband-136668&quot;&gt;Dozens of cities and towns&lt;/a&gt; continue to opt out of the restrictive state measure during local elections. More than 100 have done it so far, which should tell you plenty about how locals feel about their local broadband options.
&lt;p&gt;Fort Collins, Colorado will be the latest to try and table a petition on November 7 simply &lt;strong&gt;exploring&lt;/strong&gt; the idea of opting out of this state provision and considering a city-run broadband network. But &lt;a href=&quot;https://motherboard.vice.com/en_us/article/a37v4z/big-telecom-spent-dollar200000-to-try-to-prevent-a-colorado-town-from-even-talking-about-a-city-run-internet&quot;&gt;Motherboard highlights how incumbent ISPs like Comcast&lt;/a&gt; have already spent more than $200,000 to prevent this conversation from even happening. To be clear Fort Collins isn't certain to proceed with such a network, but incumbent ISPs are terrified they've even begun to have the conversation, and have been running &lt;a href=&quot;https://youtu.be/wjulAWmLmx0&quot;&gt;ads like this one&lt;/a&gt; to try and derail it.&lt;/p&gt;
&lt;p&gt;&quot;It's been wild,&quot; said Glen Akins, a Fort Collins advocate for municipal broadband tells Motherboard. &quot;We're overwhelmed by the amount of money the opposition is spending.&quot;&lt;/p&gt;
&lt;p&gt;Of course if companies like Comcast really wanted to prevent towns and cities from getting into the broadband business, they could provide cheaper, better services. These towns and cities aren't getting into broadband &lt;em&gt;because it's fun&lt;/em&gt;, they're doing so because they're so disgusted by duopoly pricing, service quality and abysmal customer service that they're looking for more creative alternatives.&lt;/p&gt;
&lt;p&gt;But it remains easier and cheaper for companies like Comcast and AT&amp;amp;T, with the help of groups like ALEC, to instead convince &lt;a href=&quot;https://www.techdirt.com/articles/20171023/11391838461/michigan-lawmaker-flees-twitter-after-reports-highlight-she-helped-att-push-anti-competition-broadband-law.shtml&quot;&gt;clueless lawmakers&lt;/a&gt; to pass laws restricting your right to determine for yourself how your money gets spent, and what it gets spent on.&lt;/p&gt;
&quot;The (Comcast backed) CCTA forked over $125,000 to Priorities First Fort Collins, the anti-municipal broadband campaign, according to filings published Wednesday,&quot; notes Motherboard. &quot;But there's also been a $85,000 contribution from Citizens for a Sustainable Economy, a local nonprofit run by the city's Chamber of Commerce, which include local provider CenturyLink as a member.&quot;</description>
<pubDate>Fri, 27 Oct 2017 17:40:56 +0000</pubDate>
<dc:creator>ohjeez</dc:creator>
<og:type>article</og:type>
<og:url>http://www.dslreports.com/shownews/Comcast-Tries-to-Derail-Fort-Collins-Community-Broadband-140604</og:url>
<og:image>http://i.dslr.net/syms/c35f368f0b9a37bbdbb7fb8d190e7de4.jpg</og:image>
<og:title>Comcast Tries to Derail Fort Collins Community Broadband</og:title>
<og:description>News: Colorado is one of more than twenty states where incumbent broadband ISPs have quite literally written and purchased state protectionist laws prohibiting towns and cities from getting into the broad</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.dslreports.com/shownews/Comcast-Tries-to-Derail-Fort-Collins-Community-Broadband-140604</dc:identifier>
</item>
<item>
<title>IBM scientists say radical new ‘in-memory’ architecture will speed up computers</title>
<link>http://www.kurzweilai.net/ibm-scientists-say-radical-new-in-memory-computing-architecture-will-speed-up-computers-by-200-times</link>
<guid isPermaLink="true" >http://www.kurzweilai.net/ibm-scientists-say-radical-new-in-memory-computing-architecture-will-speed-up-computers-by-200-times</guid>
<description>&lt;div id=&quot;attachment_305722&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;37&quot;&gt;&lt;img class=&quot; wp-image-305722&quot; title=&quot;von Neumann vs computational memory&quot; src=&quot;http://www.kurzweilai.net/images/von-Neumann-vs-computational-memory.png&quot; alt=&quot;&quot; width=&quot;623&quot; height=&quot;196&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;(Left) Schematic of conventional von Neumann computer architecture, where the memory and computing units are physically separated. To perform a computational operation and to store the result in the same memory location, data is shuttled back and forth between the memory and the processing unit. (Right) An alternative architecture where the computational operation is performed in the same memory location. (credit: IBM Research)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;IBM Research announced Tuesday (Oct. 24, 2017) that its scientists have developed the first “&lt;a href=&quot;http://www.ibmbigdatahub.com/blog/what-makes-memory-computing-so-next-generation&quot;&gt;in-memory computing&lt;/a&gt;” or “computational memory” computer system architecture, which is expected to yield 200x improvements in computer speed and energy efficiency — enabling ultra-dense, low-power, massively parallel computing systems.&lt;/p&gt;
&lt;p&gt;Their concept is to use one device (such as &lt;a href=&quot;https://www-03.ibm.com/press/us/en/pressrelease/50297.wss&quot;&gt;phase change memory&lt;/a&gt; or PCM*) for both storing and processing information. That design would replace the conventional &lt;a href=&quot;https://en.wikipedia.org/wiki/John_von_Neumann&quot;&gt;“von Neumann&lt;/a&gt;” computer architecture, used in standard desktop computers, laptops, and cellphones, which splits computation and memory into two different devices. That requires moving data back and forth between memory and the computing unit, making them slower and less energy-efficient.&lt;/p&gt;
&lt;div id=&quot;attachment_305732&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;38&quot;&gt;&lt;img class=&quot; wp-image-305732&quot; title=&quot;PCM device&quot; src=&quot;http://www.kurzweilai.net/images/PCM-device.png&quot; alt=&quot;&quot; width=&quot;364&quot; height=&quot;327&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;The researchers used PCM devices made from a germanium antimony telluride alloy, which is stacked and sandwiched between two electrodes. When the scientists apply a tiny electric current to the material, they heat it, which alters its state from amorphous (with a disordered atomic arrangement) to crystalline (with an ordered atomic configuration). The IBM researchers have used the crystallization dynamics to perform computation in memory. (credit: IBM Research)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Especially useful in AI applications&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The researchers believe this new prototype technology will enable ultra-dense, low-power, and massively parallel computing systems that are especially useful for AI applications. The researchers tested the new architecture using an unsupervised machine-learning algorithm running on one million &lt;a href=&quot;https://www-03.ibm.com/press/us/en/pressrelease/50297.wss&quot;&gt;phase change memory&lt;/a&gt; (PCM) devices, successfully finding temporal correlations in unknown data streams.&lt;/p&gt;
&lt;p&gt;“This is an important step forward in our research of the &lt;a href=&quot;https://www.ibm.com/blogs/research/2017/09/mit-ibm-ai-lab/&quot;&gt;physics of AI&lt;/a&gt;, which explores new hardware materials, devices and architectures,” says &lt;a href=&quot;http://researcher.watson.ibm.com/researcher/view.php?person=zurich-ele&quot; target=&quot;_blank&quot;&gt;Evangelos Eleftheriou&lt;/a&gt;, PhD, an IBM Fellow and co-author of an open-access &lt;a href=&quot;http://dx.doi.org/10.1038/s41467-017-01481-9&quot;&gt;paper&lt;/a&gt; in the peer-reviewed journal &lt;em&gt;Nature Communications&lt;/em&gt;. “As the &lt;a href=&quot;https://en.wikipedia.org/wiki/CMOS&quot; target=&quot;_blank&quot;&gt;CMOS&lt;/a&gt; scaling laws break down because of technological limits, a radical departure from the processor-memory dichotomy is needed to circumvent the limitations of today’s computers.”&lt;/p&gt;
&lt;p&gt;“Memory has so far been viewed as a place where we merely store information, said &lt;a href=&quot;http://researcher.watson.ibm.com/researcher/view.php?person=zurich-ASE&quot;&gt;Abu Sebastian&lt;/a&gt;, PhD. exploratory memory and cognitive technologies scientist, IBM Research and lead author of the paper. But in this work, we conclusively show how we can exploit the physics of these memory devices to also perform a rather high-level computational primitive. The result of the computation is also stored in the memory devices, and in this sense the concept is loosely inspired by how the &lt;a href=&quot;https://www.nature.com/nnano/journal/v11/n8/full/nnano.2016.70.html&quot;&gt;brain computes&lt;/a&gt;.” Sebastian also leads a &lt;a href=&quot;https://www.ibm.com/blogs/research/2016/03/ibm-scientist-abu-sebastian-develops-future-memory-computer-paradigms-prestigious-european-grant/&quot;&gt;European Research Council&lt;/a&gt; funded project on this topic.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;* To demonstrate the technology, the authors chose two time-based examples and compared their results with traditional machine-learning methods such as k-means clustering:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;strong&gt;S&lt;/strong&gt;&lt;strong&gt;imulated Data&lt;/strong&gt;: one million binary (0 or 1) random processes organized on a 2D grid based on a 1000 x 1000 pixel, black and white, profile drawing of famed British mathematician Alan Turing. The IBM scientists then made the pixels blink on and off with the same rate, but the black pixels turned on and off in a weakly correlated manner. This means that when a black pixel blinks, there is a slightly higher probability that another black pixel will also blink. The random processes were assigned to a million PCM devices, and a simple learning algorithm was implemented. With each blink, the PCM array learned, and the PCM devices corresponding to the correlated processes went to a high conductance state. In this way, the conductance map of the PCM devices recreates the drawing of Alan Turing.&lt;br /&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Real-World Data&lt;/strong&gt;: actual rainfall data, collected over a period of six months from 270 weather stations across the USA in one hour intervals. If rained within the hour, it was labelled “1” and if it didn’t “0”. Classical k-means clustering and the in-memory computing approach agreed on the classification of 245 out of the 270 weather stations. In-memory computing classified 12 stations as uncorrelated that had been marked correlated by the k-means clustering approach. Similarly, the in-memory computing approach classified 13 stations as correlated that had been marked uncorrelated by k-means clustering. &lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/E_zj0c3UBXo&quot; width=&quot;560&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;Abstract of&lt;/strong&gt; &lt;em&gt;&lt;strong&gt;Temporal correlation detection using computational phase-change memory&lt;/strong&gt;&lt;br /&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Conventional computers based on the von Neumann architecture perform computation by repeatedly transferring data between their physically separated processing and memory units. As computation becomes increasingly data centric and the scalability limits in terms of performance and power are being reached, alternative computing paradigms with collocated computation and storage are actively being sought. A fascinating such approach is that of computational memory where the physics of nanoscale memory devices are used to perform certain computational tasks within the memory unit in a non-von Neumann manner. We present an experimental demonstration using one million phase change memory devices organized to perform a high-level computational primitive by exploiting the crystallization dynamics. Its result is imprinted in the conductance states of the memory devices. The results of using such a computational memory for processing real-world data sets show that this co-existence of computation and storage at the nanometer scale could enable ultra-dense, low-power, and massively-parallel computing systems.&lt;/p&gt;
&lt;div class=&quot;references&quot;&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 27 Oct 2017 17:06:36 +0000</pubDate>
<dc:creator>breck</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.kurzweilai.net/ibm-scientists-say-radical-new-in-memory-computing-architecture-will-speed-up-computers-by-200-times</dc:identifier>
</item>
<item>
<title>Catalan parliament declares independence from Spain</title>
<link>http://www.bbc.co.uk/news/world-europe-41780116</link>
<guid isPermaLink="true" >http://www.bbc.co.uk/news/world-europe-41780116</guid>
<description>&lt;figure class=&quot;media-with-caption&quot; readability=&quot;-24&quot;&gt;&lt;div class=&quot;player-with-placeholder&quot; readability=&quot;7&quot;&gt;
            &lt;img class=&quot;media-placeholder player-with-placeholder__image lead-video-placeholder&quot; src=&quot;https://ichef.bbci.co.uk/images/ic/720x405/p05l7p6y.jpg&quot;/&gt;&lt;p&gt;Media playback is unsupported on your device&lt;/p&gt;
      
    &lt;/div&gt;    &lt;figcaption class=&quot;media-with-caption__caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Media caption&lt;/span&gt;The moment Catalan parliament declared independence&lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;The Catalan regional parliament has voted to declare independence from Spain, while the Spanish parliament has approved direct rule over the region.&lt;/p&gt;&lt;p&gt;Catalan MPs easily approved the move amid an opposition boycott.&lt;/p&gt;&lt;p&gt;Spanish Prime Minister Mariano Rajoy had told senators direct rule was needed to return &quot;law, democracy and stability&quot; to Catalonia.&lt;/p&gt;&lt;p&gt;The crisis began earlier this month when Catalonia held a controversial referendum on independence.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-europe-41551466&quot; class=&quot;story-body__link&quot;&gt;Catalonia crisis: What next for Spain?&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-europe-41754124&quot; class=&quot;story-body__link&quot;&gt;What powers does Catalonia have?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The Catalan government said that of the 43% of potential voters who took part, 90% were in favour of independence. But Spain's Constitutional Court had ruled the vote illegal. &lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What happened in the Catalan parliament?&lt;/h2&gt;&lt;p&gt;A motion declaring independence was approved on Friday with 70 in favour, 10 against, and two abstentions in the 135-seat chamber.&lt;/p&gt;&lt;p&gt;The measure calls for the transfer of legal powers from Spain to an independent Catalonia.&lt;/p&gt;&lt;p&gt;But the Spanish Constitutional Court is likely to declare it illegal, while the US, UK, Germany and France all expressed support for Spanish unity.&lt;/p&gt;&lt;p&gt;European Commission chief Jean-Claude Juncker said the EU &quot;doesn't need any more cracks, more splits&quot;.&lt;/p&gt;&lt;p&gt;Catalan President Carles Puigdemont has called for supporters to &quot;maintain the momentum&quot; in a peaceful manner.&lt;/p&gt;&lt;p&gt;Crowds have been celebrating the declaration of independence and Spanish flags have been removed from some regional government buildings in Catalonia.&lt;/p&gt;&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;The mood in the crowd&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;By James Reynolds in Barcelona&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The pro-independence crowd outside the parliament followed the session vote by vote. Some had their mobile phones on speaker, to allow listeners at the other end a taste of the atmosphere. &lt;/p&gt;&lt;p&gt;The crowd met every Yes vote with a cheer - and every No with a boo. At the end, there was a huge cheer.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;AFP&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The scene outside the Catalan parliament
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&quot;We're finally free,&quot; a woman next to me said, as she began to cry. &quot;We are oppressed here. We're fighting for our freedom.&quot;&lt;/p&gt;&lt;p&gt;But around the corner, away from the demonstration, views were different. &lt;/p&gt;&lt;p&gt;&quot;It's disastrous,&quot; said one man. &quot;It's the result of an extended manipulation which does not reflect the will of the Catalan people.&quot;&lt;/p&gt;&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What will the Spanish government do next?&lt;/h2&gt;&lt;p&gt;Soon after the vote at the regional parliament, the Senate - Spain's upper house - made the unprecedented step of approving measures allowing the Spanish government to impose direct rule over Catalonia.&lt;/p&gt;&lt;p&gt;There were 214 votes in favour and 47 against.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-europe-41671032&quot; class=&quot;story-body__link&quot;&gt;The case for and against independence&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-europe-41677911&quot; class=&quot;story-body__link&quot;&gt;Reality Check: Police violence in Catalonia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Urging calm, Mr Rajoy said: &quot;Spain is a serious country, it is a great nation and we are not prepared in any way to allow some people to liquidate our constitution.&quot;&lt;/p&gt;&lt;p&gt;He is holding a cabinet meeting to decide what measures to take.&lt;/p&gt;&lt;p&gt;It could include the firing of Catalan leaders, and the Spanish government taking control of the region's finances, police and publicly owned media. &lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How did we get here?&lt;/h2&gt;&lt;p&gt;After the 1 October referendum, Mr Puigdemont signed a declaration of independence but delayed implementation to allow talks with the Spanish government.&lt;/p&gt;&lt;p&gt;A deadline set by Madrid for him to clarify his intentions came and went, prompting Mr Rajoy to announce plans to impose direct rule.&lt;/p&gt;&lt;p&gt;Catalonia is one of Spain's richest, most distinctive regions and enjoys a high degree of autonomy.&lt;/p&gt;&lt;p&gt;But many Catalans feel they pay more to Madrid than they get back, and there are historical grievances too, in particular Catalonia's treatment under the dictatorship of General Franco.&lt;/p&gt;&lt;p&gt;Catalans are divided on the question of independence - an opinion poll earlier this year said 41% were in favour and 49% were opposed to independence.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-europe-29478415&quot; class=&quot;story-body__link&quot;&gt;Does Catalonia want to leave Spain?&lt;/a&gt;&lt;/p&gt;
&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;//static.bbc.co.uk/indepthtoolkit/13.1.0.255/css/datapic/ns_data_pic_stat_domestic.css&quot;/&gt;&lt;div id=&quot;ns_datapic_catalonia-stats&quot; class=&quot;idt__news ns_datapic_stat ns_datapic_stat--catalonia-stats newsspec_infographic_template&quot;&gt;
    &lt;div class=&quot;ns_outer_wrapper ns_outer_wrapper__align-bottom&quot;&gt;
        &lt;div class=&quot;ns_inner_wrapper&quot;&gt;
           
                          

            
                        
              
            
                        
            &lt;ul class=&quot;ns_impact-figures  ns_separator &quot; readability=&quot;-0.5&quot;&gt;&lt;li class=&quot;ns_impact&quot; readability=&quot;0&quot;&gt;
                                          &lt;p&gt;&lt;span class=&quot;ns_impact__fig&quot;&gt;16%&lt;/span&gt; of Spain's population live in Catalonia, and it produces: &lt;/p&gt;
                                    &lt;/li&gt;
                                &lt;li class=&quot;ns_impact&quot;&gt;
                                          &lt;p&gt;&lt;span class=&quot;ns_impact__fig&quot;&gt;25.6%&lt;/span&gt; of Spain's exports &lt;/p&gt;
                                    &lt;/li&gt;
                                &lt;li class=&quot;ns_impact&quot;&gt;
                                          &lt;p&gt;&lt;span class=&quot;ns_impact__fig&quot;&gt;19%&lt;/span&gt; of Spain's GDP &lt;/p&gt;
                                    &lt;/li&gt;
                                &lt;li class=&quot;ns_impact&quot; readability=&quot;-1&quot;&gt;
                                          &lt;p&gt;&lt;span class=&quot;ns_impact__fig&quot;&gt;20.7%&lt;/span&gt; of foreign investment &lt;/p&gt;
                                    &lt;/li&gt;
                            &lt;/ul&gt;
        
        &lt;/div&gt;
                    &lt;p&gt;Getty&lt;/p&gt;
            &lt;/div&gt;
&lt;/div&gt;


&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;p&gt;&lt;strong&gt;Are you in Catalonia? What is your reaction to these developments? Email &lt;/strong&gt;&lt;a href=&quot;mailto:@bbc.co.uk?subject=Catalonia&quot; class=&quot;story-body__link-email&quot;&gt;&lt;span class=&quot;icon email&quot;/&gt;&lt;span class=&quot;story-body__link-email-text&quot;&gt;haveyoursay@bbc.co.uk&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;You can also contact us in the following ways:&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;Tweet: &lt;a href=&quot;http://twitter.com/BBC_HaveYourSay&quot; class=&quot;story-body__link-external&quot;&gt;@BBC_HaveYourSay&lt;/a&gt;
&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;WhatsApp: &lt;strong&gt;+447555 173285&lt;/strong&gt;
&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Text an SMS or MMS to &lt;strong&gt;61124 &lt;/strong&gt;(UK) or &lt;strong&gt;+44 7624 800 100 &lt;/strong&gt;(international)&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Please read our &lt;a href=&quot;http://www.bbc.co.uk/usingthebbc/terms/what-can-the-bbc-do-with-the-content-that-i-post/&quot; class=&quot;story-body__link&quot;&gt;terms &amp;amp; conditions&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Fri, 27 Oct 2017 13:34:45 +0000</pubDate>
<dc:creator>ryanlol</dc:creator>
<og:title>Catalan independence crisis escalates</og:title>
<og:type>article</og:type>
<og:description>Catalonia's parliament declares independence but Madrid imposes direct rule over the region.</og:description>
<og:url>http://www.bbc.co.uk/news/world-europe-41780116</og:url>
<og:image>https://ichef.bbci.co.uk/images/ic/1024x576/p05l7p6y.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.co.uk/news/world-europe-41780116</dc:identifier>
</item>
</channel>
</rss>