<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Machine Learning Guides</title>
<link>https://developers.google.com/machine-learning/guides/</link>
<guid isPermaLink="true" >https://developers.google.com/machine-learning/guides/</guid>
<description>&lt;h3 id=&quot;rules-of-ml&quot;&gt;&lt;a href=&quot;https://developers.google.com/machine-learning/guides/rules-of-ml&quot;&gt;Rules of ML&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Become a better machine learning engineer by following these machine learning best practices used at Google. This compendium of 43 rules provides guidance on when to use machine learning to solve a problem, how to deploy a machine learning pipeline, how to launch and maintain a machine learning system, and what to do when your system reaches a plateau.&lt;/p&gt;
</description>
<pubDate>Mon, 23 Jul 2018 20:18:57 +0000</pubDate>
<dc:creator>fchollet</dc:creator>
<og:type>website</og:type>
<og:url>https://developers.google.com/machine-learning/guides/</og:url>
<og:title>ML Universal Guides  |  Google Developers</og:title>
<og:description>Simple step-by-step walkthroughs to solve common machine learning problems using best practices.</og:description>
<og:image>https://developers.google.com/_static/6476e1724a/images/share/devsite-white.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://developers.google.com/machine-learning/guides/</dc:identifier>
</item>
<item>
<title>Be Nice and Write Stable Code</title>
<link>http://technosophos.com/2018/07/04/be-nice-and-write-stable-code.html</link>
<guid isPermaLink="true" >http://technosophos.com/2018/07/04/be-nice-and-write-stable-code.html</guid>
<description>&lt;p&gt;&lt;span class=&quot;label label-info&quot;&gt;Jul 4 2018&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Stop rearchitecting your code! The professional developer values stability over &quot;code purity.&quot; Instead of pursuing a Shangra-La vision of code perfection with each and every release, just be nice and write &lt;em&gt;stable APIs&lt;/em&gt;. In this post, I talk about taking practical steps toward writing code that remains stable over time.&lt;/p&gt;
&lt;h2&gt;The Non-Goal&lt;/h2&gt;
&lt;p&gt;It is completely unhelpful to begin with a suggestion like this:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;When you write code, make it future-proof.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If history teaches us anything, it's that we are lousy predictors of what the future holds. &lt;em&gt;Of course&lt;/em&gt; it is a good practice to strive toward clean APIs, flexible design, and thoughtful defaults. But inevitably, your users and emerging requirements will surprise you.&lt;/p&gt;
&lt;p&gt;What I want to talk about is how to best deal with those surprises, and how to avoid introducing surprises (and frustration) to those who use your code.&lt;/p&gt;
&lt;h2&gt;Versions and SemVer&lt;/h2&gt;
&lt;p&gt;In software, we use version numbers to signal that something has changed. Version numbering schemes go from dead simple (integers that increment with every release, or date stamps) to surprisingly complex (&lt;code&gt;1.0~pre3+dfsg-0.1+b2&lt;/code&gt;, &lt;code&gt;2.1.1+git20160721~8efc468-2&lt;/code&gt;, and &lt;code&gt;1.2.0+LibO5.2.7-1+deb9u4&lt;/code&gt; are a few versions spotted in the wild).&lt;/p&gt;
&lt;p&gt;But when it comes to software version numbers, the current leader in version numbering schemes is SemVer (or Semantic Versioning). Don't be fooled, though! Many people claim to know how SemVer works, but have never read &lt;a href=&quot;https://semver.org/&quot;&gt;the specification&lt;/a&gt;. Since this is a critical piece of what we are about to talk about, here is a summary of the spec:&lt;/p&gt;
&lt;p&gt;Version numbers take the form &lt;code&gt;X.Y.Z&lt;/code&gt;, sometimes augmented with additional pre-release and build information: &lt;code&gt;X.Y.Z-AAA#BBB&lt;/code&gt;. And each of those fields means something &lt;em&gt;well defined and specific&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;X&lt;/code&gt; is the &lt;em&gt;major&lt;/em&gt; number. Changes in this indicate &lt;em&gt;breaking changes&lt;/em&gt; to the API (and/or behavior).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Y&lt;/code&gt; is the &lt;em&gt;minor&lt;/em&gt; number. Changes to this number indicate that new features were added, but that no APIs are broken as a result.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Z&lt;/code&gt; is the &lt;em&gt;patch&lt;/em&gt; version. Changes to this indicate that internal changes were made, but that no changes (even compatible changes) were made to the API.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These three are the important ones for us. Again, I suggest taking 15 minutes to read the entire spec.&lt;/p&gt;
&lt;p&gt;Countless projects use a format that looks like SemVer, but many of them ignore the semantics behind the version number. Often, it seems that version numbers are incremented by &quot;gut feel&quot; instead of any consistent semantic: &quot;This feels like a minor version update.&quot;&lt;/p&gt;
&lt;p&gt;The intention of this post is to explain how to write software in a way that actually adheres to semantic versioning. Get rid of &quot;gut feel&quot; version numbers and give your users some peace of mind.&lt;/p&gt;
&lt;h3&gt;But Why?&lt;/h3&gt;
&lt;p&gt;Why bother using a semantic versioning scheme? What's wrong with just updating numbers arbitrarily? The reason is simple: Version numbers help your users understand something about the nature of the changes they can expect. If you don't follow a pattern, they are left guessing. And this frustrates people.&lt;/p&gt;
&lt;p&gt;Following SemVer introduces rigor on two fronts:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It sends clear signals to users about the depth of changes they can expect in a release.&lt;/li&gt;
&lt;li&gt;It sends a clear signal to your developers about what is, and what is not, allowed when it comes to changing the code.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I cannot understate the importance of (2). SemVer helps us impose self-discipline, which in turn minimizes both internal and external disruption.&lt;/p&gt;
&lt;h2&gt;Patterns of Change&lt;/h2&gt;
&lt;p&gt;With the SemVer discussion out of the way, we can now talk about the actual patterns of change.&lt;/p&gt;
&lt;p&gt;Remember, the usability of code is a focal point of the professional software developer. Predictable patterns of change are a boon to usability.&lt;/p&gt;
&lt;h3&gt;Reorganizing, Refactoring, and Renaming&lt;/h3&gt;
&lt;p&gt;There is no clearer way to state the point than this: If you reorganize the package structure of your public API, or if you do a major renaming, or if you choose to change the methods/structs/classes/etc of your public API, &lt;em&gt;you must increment the major version number&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That's it. There is no grey area here. Such changes mean that anyone who's using your code will experience breakage.&lt;/p&gt;
&lt;p&gt;When it comes to working on minor updates, dealing with this means exercising discipline. Yes, the package structure might be poor. Yes, the code might be ugly. But you must wait until the right moment to fix that.&lt;/p&gt;
&lt;p&gt;Of course, it's okay to make internal changes that don't touch any public API items. So minor internal-only refactoring can be done in minor, and even patch, releases (though we don't recommend doing it in patch releases).&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Stop trying to justify your refactoring with the &quot;public but internal&quot; argument. &lt;strong&gt;If the language spec says it's public, it's public.&lt;/strong&gt; Your intentions have nothing to do with it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So in effect, the following are not be be changed except during major updates:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Package structure&lt;/li&gt;
&lt;li&gt;Public class, struct, enum, trait, interface, etc. names, nor the names of any of the items on these&lt;/li&gt;
&lt;li&gt;Constants or public variable names or values&lt;/li&gt;
&lt;li&gt;Function/method names&lt;/li&gt;
&lt;li&gt;Function/method signatures for existing functions &lt;em&gt;except&lt;/em&gt; where the change is additive and the added argument is optional. Return value types and exceptions must also not change.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The bottom line: Refactoring, renaming, and reorganizing is a sweet temptation. But this is a temptation that must be resisted when doing a minor/patch releases. Part of being a professional software developer is creatively coping with imperfect code.&lt;/p&gt;
&lt;p&gt;But, you might be saying, how do you add new features without changing any of these? That is the subject of the next few sections.&lt;/p&gt;
&lt;h3&gt;Introducing New Features&lt;/h3&gt;
&lt;p&gt;Minor versions may introduce new features, but features must be introduced without breaking existing APIs.&lt;/p&gt;
&lt;p&gt;Features are additive in nature: They bring new things, but do not modify or delete existing things. To that end, these are safe as part of a feature release:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adding a field or method to a struct/class/enum/etc.&lt;/li&gt;
&lt;li&gt;Adding a new struct/class/enum/etc. or adding new variables, constants, functions, packages, etc.&lt;/li&gt;
&lt;li&gt;Adding new configuration options (but see the next section)&lt;/li&gt;
&lt;li&gt;Making something that was non-public into something that is public (e.g. exposing a private API as a public API)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;However, there are a few changes that are sometimes done under the guise of a feature, but which are breaking changes that must be avoided:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Changing values of constants, variables, etc.&lt;/li&gt;
&lt;li&gt;Changing a function or method &lt;em&gt;signature&lt;/em&gt; (e.g. adding more params or changing the return type)
&lt;ul&gt;&lt;li&gt;There is an exception here if a language supports adding &lt;em&gt;optional&lt;/em&gt; parameters in a way that will still make old calls to the function to work exactly the same.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Changing an item from public-scoped to non-public (hiding an API)&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Modifying by Adding Alternatives&lt;/h3&gt;
&lt;p&gt;Consider the case where you begin with code like this:&lt;/p&gt;
&lt;pre class=&quot;highlight go&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// Code to fetch and list the items&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The code above might, for example, do a database query and fetch all of the results.&lt;/p&gt;
&lt;p&gt;Now a feature request rolls in: &quot;We need to add paging to the list functions.&quot; The temptation is to do this:&lt;/p&gt;
&lt;pre class=&quot;highlight go&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But that is an API breaking change. The correct way to handle this is to introduce a new function:&lt;/p&gt;
&lt;pre class=&quot;highlight go&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItemsWithLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItemsWithLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that we have adjusted the internals on the old to replicate the exact behavior of the old function, but by calling into the new function.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It is fine to mark functions as deprecated when you do this.&lt;/em&gt; In fact, this is why languages like Java cleverly added built-in support for deprecation. Professional-grade development involves a strategy of deprecation with &lt;em&gt;eventual&lt;/em&gt; removal, even if that removal is years down the road.&lt;/p&gt;
&lt;p&gt;Importantly, if the newly introduced function cannot replicate the old feature set, you are obligated (unless security concerns dictate otherwise) to provide the old API's functionality to the greatest extent possible.&lt;/p&gt;
&lt;h4&gt;Beware The Dubious Work-Around&lt;/h4&gt;
&lt;p&gt;There is an accepted pattern that works well for many things, but which some developers employ to &quot;get around&quot; the SemVer constraints on modifying function signatures:&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;
&lt;code&gt;func ListItems(query Query, options Map) Items {
   // ...
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this pattern, the &lt;code&gt;options&lt;/code&gt; map is an arbitrary set of key/value options. This pattern itself is fine &lt;em&gt;unless&lt;/em&gt; the default behavior changes when a new option is introduced. When adding a new option, the professional developer ensures that when that option is not present, the code behaves the same as it did in the last release.&lt;/p&gt;
&lt;h3&gt;Deprecating&lt;/h3&gt;
&lt;p&gt;We touched on deprecation above. But I want to summarize the deprecation strategy:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Mark a thing as deprecated &lt;em&gt;as soon as it is considered deprecated&lt;/em&gt;, even if that is a patch or minor release. Deprecation, after all, is a &lt;em&gt;warning&lt;/em&gt; condition, not an &lt;em&gt;error&lt;/em&gt; condition.&lt;/li&gt;
&lt;li&gt;Do not change the behavior of the deprecated thing during minor or patch releases&lt;/li&gt;
&lt;li&gt;Remove deprecated things only at major version changes. Until that time, you're still on the hook for supporting them.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Deprecation is a &lt;em&gt;signal&lt;/em&gt; that in the future a thing will be removed. But it is not an excuse to change, delete, or ignore the functionality of that bit of code outside of the SemVer constraints.&lt;/p&gt;
&lt;h3&gt;Errors and Exceptions&lt;/h3&gt;
&lt;p&gt;One of the most frustrating outages I ever experienced occurred because of a seemingly innocuous change to an upstream library: During a minor release update, the library changed the exception type that it threw on a particular error.&lt;/p&gt;
&lt;p&gt;One of the functions in the library threw an &lt;code&gt;IOException&lt;/code&gt; whenever a network error occurred, and other exceptions for other problems.&lt;/p&gt;
&lt;p&gt;We used the throwing of an &lt;code&gt;IOException&lt;/code&gt; to kick off our retry logic. Given that network failures were a frequent occurrence for our particular conditions, this was an important feature.&lt;/p&gt;
&lt;p&gt;But during a minor version change, the developers decided to simplify the API by catching all of the different exceptions (including the &lt;code&gt;IOException&lt;/code&gt;) and wrap them in a single generic exception. (Incidentally, the API itself did not change because it was something like &lt;code&gt;func Read(in Reader) error&lt;/code&gt;, where &lt;code&gt;error&lt;/code&gt; was a parent of all exceptions).&lt;/p&gt;
&lt;p&gt;When we upgraded, all our tests passed (because our test fixtures emulated the old behavior and our network was not unstable enough to trigger bad conditions), and production rolled out just fine. But our customers began complaining that the product was much less reliable. Why? Because the retry logic was never triggered. So our app suddenly was as unstable as the network it was on.&lt;/p&gt;
&lt;p&gt;The bottom line: Even error handling is part of your public API.&lt;/p&gt;
&lt;h3&gt;Resisting Subtle Changes&lt;/h3&gt;
&lt;p&gt;Sometimes subtle but ill-planned changes can cause major breakages for your users.&lt;/p&gt;
&lt;p&gt;Here's a short story of how a trivial change in one of our dependencies led to a series of production catastrophes for our users:&lt;/p&gt;
&lt;p&gt;We depended on a library that provided a client/server RPC-like protocol. This library had long been marked stable, and indeed stability is one of the touted features of this library. But the developers introduced a very subtle change that &lt;em&gt;appeared&lt;/em&gt; to follow the stability requirements, but which actually introduced a serious compatibility flaw. The change went something like this:&lt;/p&gt;
&lt;p&gt;The library allowed us to set a maximum message size. The default was 256k, but we wanted it to be significantly larger. So we set this option:&lt;/p&gt;
&lt;pre class=&quot;highlight go&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxMesageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This made it possible for client and server to send each other messages up to 1M. But at some point, a minor release of the package made a very subtle, but killer, change: They split upstream and downstream message sizes into two variables. And here's the killer: They did this by merely creating a second variable (&lt;code&gt;config.MaxInboundMessageSize&lt;/code&gt;) and changing the behavior of the first to impact only outbound message size.&lt;/p&gt;
&lt;p&gt;When we upgraded the package, all seemed to work well. Code compiled. Tests passed. Early users saw no problems. Then we shipped our new version with this updated dependency. And suddenly angry users started filing issues. Stuff that worked yesterday was broken today.&lt;/p&gt;
&lt;p&gt;Why? Because behind the scenes, the inbound message size had dropped from 1M to it's default 256k. And while nothing in our early testing sent messages larger than 256k, there were plenty of production instances that did.&lt;/p&gt;
&lt;p&gt;The upstream library maintainers had introduced a serious bug into our code by silently changing the behavior of their code, even though they didn't (in a pedantic sense) &quot;break&quot; SemVer.&lt;/p&gt;
&lt;p&gt;What should they have done?&lt;/p&gt;
&lt;p&gt;I would argue that breaking the size limits into an inbound and an outbound is a totally legitimate thing to do during a minor release. It was just done wrong.&lt;/p&gt;
&lt;p&gt;The right way to address a configuration change like this is to introduce &lt;em&gt;two new variables&lt;/em&gt; and then add default support for the old one.&lt;/p&gt;
&lt;p&gt;Thus, in practice, it would look like this:&lt;/p&gt;
&lt;pre class=&quot;highlight go&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// Old one&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// New settings&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxInboundMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxOutboundMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And then the internal code in the library would handle the legacy case while still offering the new functionality:&lt;/p&gt;
&lt;pre class=&quot;highlight go&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// Support clients who set the old config&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxInboundMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxOutboundMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxMessageSize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With something like this in the base library, any tools that use it would get the old behavior if they used the old configuration param, but could opt into using the newer options instead.&lt;/p&gt;
&lt;h3&gt;Bugs and Security Fixes: How To Handle Real Life&lt;/h3&gt;
&lt;p&gt;Guidance that you should never change certain things is all well and good until reality comes a-callin'. But what if that public constant or variable introduces a security issue, or causes the server to crash?&lt;/p&gt;
&lt;p&gt;When the real world comes crashing in, we make exceptions. But professional software developers make them wisely and carefully.&lt;/p&gt;
&lt;p&gt;The important concept here is the &lt;em&gt;minimally invasive change&lt;/em&gt;. That is, when patching bugs or security releases, we may need to change the API, but we should do it by changing the absolute minimum number of things we can get away with. And we do that &lt;em&gt;even if it means sacrificing our &quot;architectural purity&quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I will plead guilty for introducing a global variable as a stop-gap to fix the internals of a function without changing the function signature. It was ugly. I was ashamed. But it ensured backward compatibility, and that was the important thing. If I had changed the function call, thousands of users would have had to change their code. But with the ugly global, only the few who needed to tune that particular parameter were impacted (and only by having the option to set something they could not previously control).&lt;/p&gt;
&lt;p&gt;But a security issue or major bug is a legitimate reason to change things like default values or even larger macro behaviors. If the change is big enough, you're still obligated to change the major version of your code. SemVer doesn't give a free pass on that, and failing to do so still undermines user confidence.&lt;/p&gt;
&lt;p&gt;But for less intrusive changes, I personally feel like you can make some minor SemVer transgressions provided:&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;You make this &lt;em&gt;very&lt;/em&gt; clear in your release notes.&lt;/p&gt;
&lt;p&gt;&quot;The value of MaxBufferSize was adjusted downward to 2048 because we discovered a buffer overflow in a lower level library for any larger buffer size. See issue #4144&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The code is clearly commented:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;highlight plaintext&quot;&gt;
&lt;code&gt;// MaxBufferSize sets the maximum size of the network buffer.
// Prior to version 2.5.1, this was 4096. Due to a security flaw
// reported in #4144 that resulted in a buffer overflow, we
// lowered this to 2048.
MaxBufferSize = 2048
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The professional software developer has long-term usability and stability as a goal. Yes, well-architected code is important. But there is a time and place for making that your focus. And maintenance releases (minor and patch versions) are not an occasion to refactor, re-organize, or make sweeping modifications.&lt;/p&gt;
&lt;p&gt;Be conscientious about how much effort the users of your code put into &lt;em&gt;using&lt;/em&gt; your code. I can tell you from experience what we do when the maintenance burden you impose on us gets wearying: We stop using your tools (or we fork them).&lt;/p&gt;
&lt;p&gt;SemVer is a communications tool. But to use it well, we must use it accurately. And that means writing code focused on stability.&lt;/p&gt;
&lt;hr/&gt;&lt;hr/&gt;
</description>
<pubDate>Mon, 23 Jul 2018 20:10:11 +0000</pubDate>
<dc:creator>jaytaylor</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://technosophos.com/2018/07/04/be-nice-and-write-stable-code.html</dc:identifier>
</item>
<item>
<title>Why some PhDs are quitting academia for unconventional jobs</title>
<link>https://www.cbc.ca/radio/thesundayedition/the-sunday-edition-april-8-2018-1.4604763/from-professor-in-waiting-to-florist-why-some-phds-are-quitting-academia-for-unconventional-jobs-1.4604766</link>
<guid isPermaLink="true" >https://www.cbc.ca/radio/thesundayedition/the-sunday-edition-april-8-2018-1.4604763/from-professor-in-waiting-to-florist-why-some-phds-are-quitting-academia-for-unconventional-jobs-1.4604766</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;em&gt;Originally published on April 8, 2018&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;When Jennifer Fowlow started her PhD program in women's studies, her dream was to become a professor.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But by her third year, she says, she was fed up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;When I look back … to me it was just one big, stressful guilt trip,&quot; says Fowlow.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;There was always another article I should have read, another book I should have gotten, more notes I should have written.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In 2015, she dropped out.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Today, she works as a floral designer and owns her own flower business.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I thought when I started that there was absolutely no way that I would not finish,&quot; she says. &quot;But now, I'm a very proud PhD dropout — proud and happy.&quot;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Canadian statistics from 2013 suggest that&lt;/span&gt; &lt;a href=&quot;https://www.universityaffairs.ca/opinion/margin-notes/phd-completion-rates-and-times-to-completion-in-canada/&quot; target=&quot;_blank&quot;&gt;completion rates among PhD students&lt;/a&gt; range from only 50 per cent in the humanities to about 80 per cent in the health sciences. Students leave for many different reasons — the gruelling work, the isolation, the terrible job market.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;According to 2011 figures from Statistics Canada, the most recent data available, fewer than &lt;/span&gt;&lt;a href=&quot;http://www.cbc.ca/news/business/conference-board-phd-cost-1.3332361&quot; target=&quot;_blank&quot;&gt;one in five people with an earned doctorate&lt;/a&gt; have full-time teaching jobs.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;http://www.conferenceboard.ca/topics/education/commentaries/hot-topics-in-education/2015/01/06/where_are_canada_s_phds_employed.aspx#ftn4-ref&quot; target=&quot;_blank&quot;&gt;Another 20 per cent&lt;/a&gt;&lt;/span&gt; teach part-time at universities, instruct full- or part-time at colleges, or hold contract-based jobs, according to the Conference Board of Canada.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Looking for a tenure-track job often involves years of waiting and hoping.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ben Cowie describes the situation as a sort of &quot;purgatory.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Cowie finished a PhD in isotope geochemistry at the top of his game and went on to complete a post-doctoral program at Harvard.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the last five years of his studies, he says there wasn't one permanent teaching job in his field posted anywhere in Canada.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So he decided to cut his losses.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Today, he's the proud owner of the&lt;/span&gt; &lt;a href=&quot;https://www.londonbicyclecafe.com/&quot; target=&quot;_blank&quot;&gt;London Bicycle Café&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I saw so many of my colleagues … go through years of post-docs,&quot; he says, &quot;making very little money, with very few benefits, moving around.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I didn't really see that as a viable future for me.&quot;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;If the goal of a PhD candidate is to teach, it's easy to understand why these numbers would scare students off.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There's a &quot;lively debate&quot; taking place in the halls of academia about whether Canada is producing too many PhDs, says &lt;/span&gt;&lt;a href=&quot;http://www.conferenceboard.ca/spse/team.aspx&quot; target=&quot;_blank&quot;&gt;Matthew McKean&lt;/a&gt;, associate director of education for the Conference Board of Canada.&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4607278.1523045453!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/matthew-mckean.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Matthew McKean is associate director of education at the Conference Board of Canada. (Submitted by Conference Board of Canada)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&quot;If 80 per cent or more are going onto a non-academic career then in that sense, having more PhDs with the skills they bring … to business and industry and to improving Canada's economy, then the more the merrier.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;McKean recognizes that the transition isn't easy for everyone. He believes that universities should do a better job of providing PhD candidates with so-called &quot;transferable skills.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For Fowlow, the harsh realities of the job market were like a &quot;slap in the face.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In her department, 10 professors were set to retire&lt;/span&gt; — and be replaced by one contract instructor.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Why did they accept so many of us into this program when there are no jobs?&quot;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Turning the page&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Fowlow spent a year and a half thinking about what job would be &quot;good enough&quot; to leave a PhD program for.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All her life she'd been obsessed with flowers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On a whim, she signed up for a three-week floral design course. She loved it. On the second day, she told herself, &quot;I'm not going to be finishing that PhD.&quot;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Dropping out wasn't a decision Fowlow or others made lightly. They knew it might be hard to understand.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Cory Jansson spent six years in a PhD program in Political Science — completing coursework, writing comprehensive exams, doing field research and even defending his thesis proposal. Last year, he left grad school for a career in carpentry.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;The first person I told in my family,&quot; Jansson says, &quot;their words were, 'Oh, what a waste.'&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I'm quite positive that when people hear that I have transitioned out of academia, it's a certain confirmation that I didn't measure up in various ways and that's why I had to choose carpentry,&quot; he says, &quot;and it's just not true.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Hands-on and intellectual&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Anne Hartman calls herself a &quot;recovering academic.&quot; She spent six years in a PhD program in anthropology and now works as an instrument-maker and repair person.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;She says the new work flexes her mind just as much as her muscles.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I feel like [making instruments] uses the same part of my brain that is always curious about things and how they work,&quot; she says.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;In a lot of ways, it takes all my curiosity about ideas and adds a tangible result … and it's pretty satisfying compared to writing a paper that maybe three people will read.&quot;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Jansson says people often ask him, &quot;'So, you like to work with your hands?'&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I think academics also work with their hands. They just hold a pen ... There's this separation between mind and body work, which the trades are, but the trades also are a product of the mind.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;If you ever tried to fix something in your house, you come to realize that it's not easy to fix and you must think about it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Carpentry has been great, because it's cerebral in its own way.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;The joy of reading&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Fowlow says she's far happier in her new life than when she was in school.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I can't imagine how horrible that would feel if I had kept slogging away knowing that it wasn't right for me,&quot; she says.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Her shop,&lt;/span&gt; &lt;a href=&quot;https://www.wildnorthflowers.com/&quot;&gt;Wild North Flowers&lt;/a&gt;, has been recognized as one of the best florists in Toronto, and it's clear she loves her work.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;You couldn't drag me back kicking and screaming,&quot; she says laughing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For Jansson, there have been other payoffs.  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;A year later, I realized that the joy of reading has come back, because it was slowly being eroded through the pressure to produce,&quot; he says.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Life is a whole lot more than a PhD. That's for sure.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Have your own PhD story to share? &lt;a href=&quot;http://www.cbc.ca/radio/thesundayedition/contact-the-sunday-edition-1.4348496&quot; target=&quot;_blank&quot;&gt;Send us an email&lt;/a&gt; or find us on &lt;a href=&quot;http://twitter.com/@cbcsunday&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;.&lt;br/&gt;You can go &lt;a href=&quot;http://cbc.ca/1.4612767&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; to read some of the stories we've received so far.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;&lt;span&gt;Click 'Listen' above to hear the full story of these four ex-PhDs from&lt;/span&gt;&lt;/em&gt; &lt;em&gt;&lt;span&gt;the &lt;/span&gt;&lt;a href=&quot;http://cbc.ca/thesundayedition&quot;&gt;The Sunday Edition&lt;/a&gt;&lt;/em&gt; &lt;em&gt;documentary So You Like To Work With Your Hands? by Donya Ziaee.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Donya nearly completed a PhD in women's studies, only to make a career U-turn into the world of radio production.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 23 Jul 2018 16:19:09 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:url>https://www.cbc.ca/radio/thesundayedition/the-sunday-edition-april-8-2018-1.4604763/from-professor-in-waiting-to-florist-why-some-phds-are-quitting-academia-for-unconventional-jobs-1.4604766</og:url>
<og:title>From professor-in-waiting to florist: Why some PhDs are quitting academia for unconventional jobs | CBC Radio</og:title>
<og:image>https://i.cbc.ca/1.4607224.1523047947!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_620/jen-4-small-jpg.jpg</og:image>
<og:description>They’ve come a long way from the sciences and humanities. A florist, an instrument maker, a carpenter and a bike shop owner on why they, like so many others, said goodbye to academia, and how they built their &quot;post-ac&quot; lives.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cbc.ca/radio/thesundayedition/the-sunday-edition-april-8-2018-1.4604763/from-professor-in-waiting-to-florist-why-some-phds-are-quitting-academia-for-unconventional-jobs-1.4604766</dc:identifier>
</item>
<item>
<title>Xv6, a simple Unix-like teaching operating system</title>
<link>https://pdos.csail.mit.edu/6.828/2017/xv6.html</link>
<guid isPermaLink="true" >https://pdos.csail.mit.edu/6.828/2017/xv6.html</guid>
<description>&lt;h2&gt;Introduction&lt;/h2&gt;
Xv6 is a teaching operating system developed in the summer of 2006 for MIT's operating systems course, &lt;a href=&quot;http://pdos.csail.mit.edu/6.828&quot;&gt;6.828: Operating System Engineering&lt;/a&gt;. We hope that xv6 will be useful in other courses too. This page collects resources to aid the use of xv6 in other courses, including a commentary on the source code itself.
&lt;h2&gt;History and Background&lt;/h2&gt;
&lt;p&gt;For many years, MIT had no operating systems course. In the fall of 2002, one was created to teach operating systems engineering. In the course lectures, the class worked through &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/xv6.html#v6&quot;&gt;Sixth Edition Unix (aka V6)&lt;/a&gt; using John Lions's famous commentary. In the lab assignments, students wrote most of an exokernel operating system, eventually named Jos, for the Intel x86. Exposing students to multiple systems–V6 and Jos–helped develop a sense of the spectrum of operating system designs.&lt;/p&gt;
&lt;p&gt;V6 presented pedagogic challenges from the start. Students doubted the relevance of an obsolete 30-year-old operating system written in an obsolete programming language (pre-K&amp;amp;R C) running on obsolete hardware (the PDP-11). Students also struggled to learn the low-level details of two different architectures (the PDP-11 and the Intel x86) at the same time. By the summer of 2006, we had decided to replace V6 with a new operating system, xv6, modeled on V6 but written in ANSI C and running on multiprocessor Intel x86 machines. Xv6's use of the x86 makes it more relevant to students' experience than V6 was and unifies the course around a single architecture. Adding multiprocessor support requires handling concurrency head on with locks and threads (instead of using special-case solutions for uniprocessors such as enabling/disabling interrupts) and helps relevance. Finally, writing a new system allowed us to write cleaner versions of the rougher parts of V6, like the scheduler and file system. 6.828 substituted xv6 for V6 in the fall of 2006.&lt;/p&gt;
&lt;h2&gt;Xv6 sources and text&lt;/h2&gt;
The latest xv6 source is available via
&lt;pre&gt;
git clone git://github.com/mit-pdos/xv6-public.git
&lt;/pre&gt;
We also distribute the sources as a printed booklet with line numbers that keep everyone together during lectures. The booklet is available as &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/xv6/xv6-rev10.pdf&quot;&gt;xv6-rev10.pdf&lt;/a&gt;.
&lt;p&gt;The xv6 source code is licensed under the traditional &lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/a&gt;; see the LICENSE file in the source distribution. To help students read through xv6 and learn about the main ideas in operating systems we also distribute a &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/xv6/book-rev10.pdf&quot;&gt;textbook/commentary&lt;/a&gt; for the latest xv6. The line numbers in this book refer to the above source booklet.&lt;/p&gt;
&lt;p&gt;xv6 compiles using the GNU C compiler, targeted at the x86 using ELF binaries. On BSD and Linux systems, you can use the native compilers; On OS X, which doesn't use ELF binaries, you must use a cross-compiler. Xv6 does boot on real hardware, but typically we run it using the QEMU emulator. Both the GCC cross compiler and QEMU can be found on the &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/tools.html&quot;&gt;6.828 tools page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Xv6 lecture material&lt;/h2&gt;
In 6.828, the lectures in the first half of the course cover the xv6 sources and text. The lectures in the second half consider advanced topics using research papers; for some, xv6 serves as a useful base for making discussions concrete. The lecture notes are available from the 6.828 &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/schedule.html&quot;&gt;schedule&lt;/a&gt; page.
&lt;h2&gt;Xv6 homeworks&lt;/h2&gt;
The Xv6 homeworks consist of small programming exercises that extend xv6 in interesting ways. By getting their hands dirty with xv6, students have an opportunity to absorb xv6 and explore ideas that are not covered in the text. The homeworks are available from the 6.828 &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/schedule.html&quot;&gt;schedule&lt;/a&gt; page. 
&lt;h2&gt;Unix Version 6&lt;/h2&gt;
&lt;p&gt;6.828's xv6 is inspired by Unix V6 and by:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Lions' &lt;em&gt;Commentary on UNIX' 6th Edition&lt;/em&gt;, John Lions, Peer to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14, 2000).
&lt;/li&gt;
&lt;/ul&gt;
The following are useful to read the original code:
&lt;ul&gt;&lt;li&gt;&lt;em&gt;The PDP11/40 Processor Handbook&lt;/em&gt;, Digital Equipment Corporation, 1972.
&lt;ul&gt;&lt;li&gt;A &lt;a href=&quot;http://pdos.csail.mit.edu/6.828/2005/readings/pdp11-40.pdf&quot;&gt;PDF&lt;/a&gt; (made from scanned images, and not text-searchable)&lt;/li&gt;
&lt;li&gt;A &lt;a href=&quot;http://pdos.csail.mit.edu/6.828/2005/pdp11/&quot;&gt;web-based version&lt;/a&gt; that is indexed by instruction name.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Feedback&lt;/h2&gt;
If you are interested in using xv6 or have used xv6 in a course, we would love to hear from you. If there's anything that we can do to make xv6 easier to adopt, we'd like to hear about it. We'd also be interested to hear what worked well and what didn't.
&lt;p&gt;Russ Cox (rsc@swtch.com)&lt;br /&gt;Frans Kaashoek (kaashoek@mit.edu)&lt;br /&gt;Robert Morris (rtm@mit.edu)&lt;/p&gt;
&lt;p&gt;You can reach all of us at 6.828-staff@pdos.csail.mit.edu. &lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;&lt;span&gt;Questions or comments regarding 6.828? Send e-mail to the TAs at &lt;a href=&quot;mailto:6828-staff@lists.csail.mit.edu&quot;&gt;&lt;em&gt;6828-staff@lists.csail.mit.edu&lt;/em&gt;&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by/3.0/us/&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;http://i.creativecommons.org/l/by/3.0/us/88x31.png&quot; /&gt;&lt;/a&gt; &lt;strong&gt;&lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/xv6.html#top&quot;&gt;Top&lt;/a&gt;&lt;/strong&gt; // &lt;strong&gt;&lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2017/index.html&quot;&gt;6.828 home&lt;/a&gt;&lt;/strong&gt; // &lt;em&gt;Last updated Thursday, 08-Mar-2018 13:18:09 EST&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 23 Jul 2018 13:29:42 +0000</pubDate>
<dc:creator>rspivak</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://pdos.csail.mit.edu/6.828/2017/xv6.html</dc:identifier>
</item>
<item>
<title>Google: Security Keys Neutralized Employee Phishing</title>
<link>https://krebsonsecurity.com/2018/07/google-security-keys-neutered-employee-phishing/</link>
<guid isPermaLink="true" >https://krebsonsecurity.com/2018/07/google-security-keys-neutered-employee-phishing/</guid>
<description>&lt;p&gt;&lt;strong&gt;Google&lt;/strong&gt; has not had any of its 85,000+ employees successfully phished on their work-related accounts since early 2017, when it began requiring all employees to use physical Security Keys in place of passwords and one-time codes, the company told KrebsOnSecurity.&lt;/p&gt;
&lt;div id=&quot;attachment_44470&quot; class=&quot;wp-caption alignright&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot; wp-image-44470&quot; src=&quot;https://krebsonsecurity.com/wp-content/uploads/2018/07/yubikey.png&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;230&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;A YubiKey Security Key made by Yubico. The basic model featured here retails for $20.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Security Keys are inexpensive USB-based devices that offer an alternative approach to two-factor authentication (2FA), which requires the user to log in to a Web site using something they know (the password) and something they have (e.g., a mobile device).&lt;/p&gt;
&lt;p&gt;A Google spokesperson said Security Keys now form the basis of all account access at Google.&lt;/p&gt;
&lt;p&gt;“We have had no reported or confirmed account takeovers since implementing security keys at Google,” the spokesperson said. “Users might be asked to authenticate using their security key for many different apps/reasons. It all depends on the sensitivity of the app and the risk of the user at that point in time.”&lt;/p&gt;
&lt;p&gt;The basic idea behind two-factor authentication is that even if thieves manage to phish or steal your password, they still cannot log in to your account unless they also hack or possess that second factor.&lt;/p&gt;
&lt;p&gt;The most common forms of 2FA require the user to supplement a password with a one-time code sent to their mobile device via text message or an app. Indeed, prior to 2017 Google employees also relied on one-time codes generated by a mobile app — &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;amp;hl=en_US&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Authenticator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In contrast, a Security Key implements a form of multi-factor authentication known as &lt;strong&gt;Universal 2nd Factor (U2F)&lt;/strong&gt;, which allows the user to complete the login process simply by inserting the USB device and pressing a button on the device. The key works without the need for any special software drivers.&lt;/p&gt;
&lt;p&gt;Once a device is enrolled for a specific Web site that supports Security Keys, the user no longer needs to enter their password at that site (unless they try to access the same account from a different device, in which case it will ask the user to insert their key).&lt;/p&gt;
&lt;p&gt;U2F is an emerging open source authentication standard, and as such only a handful of high-profile sites currently support it, including &lt;a href=&quot;https://blogs.dropbox.com/tech/2018/05/introducing-webauthn-support-for-secure-dropbox-sign-in/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dropbox&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/notes/facebook-security/security-key-for-safer-logins-with-a-touch/10154125089265766/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://help.github.com/articles/configuring-two-factor-authentication/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt; (and of course Google’s various services). Most major password managers also now support U2F, including &lt;a href=&quot;https://www.dashlane.com/features/fido-u2f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dashlane&lt;/a&gt;, &lt;a href=&quot;https://www.yubico.com/why-yubico/for-individuals/password-managers/keepass/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Keepass&lt;/a&gt; and &lt;a href=&quot;https://www.lastpass.com/yubico&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LastPass.&lt;/a&gt; &lt;a href=&quot;https://help.duo.com/s/article/2253?language=en_US&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Duo Security&lt;/a&gt; [full disclosure: an advertiser on this site] also can be set up to work with U2F.&lt;/p&gt;
&lt;p&gt;With any luck, more sites soon will begin incorporating the &lt;a href=&quot;https://www.w3.org/TR/webauthn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Web Authentication API&lt;/a&gt; — also known as “&lt;a href=&quot;https://en.wikipedia.org/wiki/WebAuthn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebAuthn&lt;/a&gt;” — a standard put forth by the &lt;a href=&quot;https://en.wikipedia.org/wiki/World_Wide_Web_Consortium&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;World Wide Web Consortium&lt;/a&gt; in collaboration with the &lt;a href=&quot;https://www.fidoalliance.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FIDO Alliance&lt;/a&gt;. &lt;span class=&quot;pullquote pqleft&quot;&gt;The beauty of WebAuthn is that it eliminates the need for users to constantly type in their passwords, which negates the threat from common password-stealing methods like phishing and &lt;a href=&quot;https://www.rapid7.com/fundamentals/man-in-the-middle-attacks/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;man-in-the-middle attacks&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Currently, U2F is supported by &lt;a href=&quot;https://www.chromestatus.com/feature/5669923372138496&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;https://www.yubico.com/2017/11/how-to-navigate-fido-u2f-in-firefox-quantum/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mozilla Firefox&lt;/a&gt;, and &lt;strong&gt;Opera&lt;/strong&gt;. In both Firefox and &lt;strong&gt;Quantum&lt;/strong&gt; (the newer, faster version of Firefox), U2F is not enabled by default. To turn it on, type “about:config” in the browser bar, type or paste “security.webauth.u2f” and double-click the resulting entry to change the preference’s value from “false” to “true.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Microsoft&lt;/strong&gt; says it expects to roll out updates to its flagship &lt;strong&gt;Edge&lt;/strong&gt; browser to support U2F later this year. According to &lt;a href=&quot;https://9to5mac.com/2018/04/10/touch-id-face-id-website-login/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;a recent article at 9to5Mac.com&lt;/a&gt;, &lt;strong&gt;Apple&lt;/strong&gt; has not yet said when or if it will support the standard in its &lt;strong&gt;Safari&lt;/strong&gt; browser.&lt;span id=&quot;more-44128&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Probably the most popular maker of Security Keys is &lt;a href=&quot;https://www.yubico.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Yubico&lt;/a&gt;, which sells a basic U2F key for $20 (it offers regular USB versions as well as those made for devices that require USB-C connections, such as Apple’s newer &lt;strong&gt;Mac OS&lt;/strong&gt; systems). Yubikey also sells more expensive U2F keys designed to work with mobile devices.&lt;/p&gt;
&lt;p&gt;If a site you frequent does not yet support WebAuthn, please consider hardening your login with another form of 2FA. Hundreds of sites now support multi-factor authentication. &lt;a href=&quot;https://twofactorauth.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Twofactorauth.org&lt;/a&gt; maintains probably the most comprehensive list of which sites support 2FA, indexing each by type of site (email, gaming, finance, etc) and the type of 2FA offered (SMS, phone call, software token, etc.).&lt;/p&gt;
&lt;p&gt;In general, using SMS and automated phone calls to receive a one-time token is less secure than relying on a software token app like Google Authenticator or &lt;a href=&quot;https://authy.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Authy&lt;/a&gt;. That’s because thieves can intercept that one-time code by tricking your mobile provider into either &lt;a href=&quot;https://krebsonsecurity.com/2018/05/t-mobile-employee-made-unauthorized-sim-swap-to-steal-instagram-account/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swapping your mobile device’s SIM card&lt;/a&gt; or &lt;a href=&quot;https://krebsonsecurity.com/2018/02/how-to-fight-mobile-number-port-out-scams/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;“porting” your mobile number&lt;/a&gt; to a different device. However, &lt;em&gt;if the only 2FA options offered by a site you frequent are SMS and/or phone calls, it is still better than simply relying on a password.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While we’re on the subject of multi-factor authentication, I should note that Google now offers an extra set of security measures for all of its properties called &lt;a href=&quot;https://landing.google.com/advancedprotection/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Advanced Protection&lt;/a&gt;. Exactly how Google’s Advanced Protection works (and the trade-offs involved in turning it on) will likely be the subject of another story here, but &lt;strong&gt;Wired.com&lt;/strong&gt; &lt;a href=&quot;https://www.wired.com/story/google-advanced-protection/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;recently published a decent rundown about it&lt;/a&gt;. Incidentally, &lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/use-u2f-security-keys-your-smartphone-access-your-google-account-with-advanced-protection-0182760/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;this article&lt;/a&gt; includes a step-by-step guide on how to incorporate Security Keys into Advanced Protection.&lt;/p&gt;
&lt;p&gt;I have been using Advanced Protection for several months now without any major issues, although it did take me a few tries to get it set up correctly. One frustrating aspect of having it turned on is that it does not allow one to use third-party email applications like Mozilla’s Thunderbird or Outlook. I found this frustrating because as far as I can tell there is no integrated solution in Gmail for PGP/OpenGPG email message encryption, and some readers prefer to share news tips this way. Previously, I had used Thunderbird along with a plugin called &lt;a href=&quot;https://addons.thunderbird.net/en-US/thunderbird/addon/enigmail/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Enigmail&lt;/a&gt; to do that.&lt;/p&gt;


&lt;p class=&quot;small&quot;&gt;Tags: &lt;a href=&quot;https://krebsonsecurity.com/tag/2fa/&quot; rel=&quot;tag&quot;&gt;2FA&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/chrome/&quot; rel=&quot;tag&quot;&gt;chrome&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/dashlane/&quot; rel=&quot;tag&quot;&gt;Dashlane&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/dropbox/&quot; rel=&quot;tag&quot;&gt;Dropbox&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/duo-security/&quot; rel=&quot;tag&quot;&gt;Duo Security&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/edge/&quot; rel=&quot;tag&quot;&gt;Edge&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/facebook/&quot; rel=&quot;tag&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/fido-alliance/&quot; rel=&quot;tag&quot;&gt;FIDO Alliance&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/firefox/&quot; rel=&quot;tag&quot;&gt;firefox&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/firefox-quantum/&quot; rel=&quot;tag&quot;&gt;Firefox Quantum&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/github/&quot; rel=&quot;tag&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/google-advanced-protection/&quot; rel=&quot;tag&quot;&gt;Google Advanced Protection&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/keepass/&quot; rel=&quot;tag&quot;&gt;Keepass&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/lastpass/&quot; rel=&quot;tag&quot;&gt;lastpass&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/microsoft/&quot; rel=&quot;tag&quot;&gt;microsoft&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/opera/&quot; rel=&quot;tag&quot;&gt;opera&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/safari/&quot; rel=&quot;tag&quot;&gt;safari&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/security-keys/&quot; rel=&quot;tag&quot;&gt;Security Keys&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/u2f/&quot; rel=&quot;tag&quot;&gt;U2F&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/web-authentication-api/&quot; rel=&quot;tag&quot;&gt;Web Authentication API&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/webauthn/&quot; rel=&quot;tag&quot;&gt;WebAuthn&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/world-wide-web-consortium/&quot; rel=&quot;tag&quot;&gt;World Wide Web Consortium&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/yubikey/&quot; rel=&quot;tag&quot;&gt;Yubikey&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;postmetadata alt&quot;&gt;&lt;small&gt;This entry was posted on Monday, July 23rd, 2018 at 7:34 am and is filed under &lt;a href=&quot;https://krebsonsecurity.com/category/security-tools/&quot; rel=&quot;category tag&quot;&gt;Security Tools&lt;/a&gt;. You can follow any comments to this entry through the &lt;a href=&quot;https://krebsonsecurity.com/2018/07/google-security-keys-neutered-employee-phishing/feed/&quot;&gt;RSS 2.0&lt;/a&gt; feed. You can skip to the end and leave a comment. Pinging is currently not allowed.&lt;/small&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 23 Jul 2018 13:03:25 +0000</pubDate>
<dc:creator>sohkamyung</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://krebsonsecurity.com/2018/07/google-security-keys-neutered-employee-phishing/</dc:identifier>
</item>
<item>
<title>Our experience launching a paid, proprietary product on Linux</title>
<link>https://blog.hiri.com/a-year-on-our-experience-launching-a-paid-proprietary-product-on-linux-db4f9116be08</link>
<guid isPermaLink="true" >https://blog.hiri.com/a-year-on-our-experience-launching-a-paid-proprietary-product-on-linux-db4f9116be08</guid>
<description>&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*CcNpBANv8-wdfiZGkEHEyA.png&quot; data-width=&quot;600&quot; data-height=&quot;422&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*CcNpBANv8-wdfiZGkEHEyA.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;cff6&quot; id=&quot;cff6&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;The journey so far&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;cc97&quot; id=&quot;cc97&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Just over a year ago, my company, Hiri (&lt;a href=&quot;http://www.hiri.com&quot; data-href=&quot;http://www.hiri.com&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;www.hiri.com&lt;/a&gt;) was approached by Canonical to create a Snap of our email client. Turns out there aren’t a lot of email clients for Linux users that work with Exchange / Office 365. Although we were delighted that Canonical had reached out, we were reluctant.&lt;/p&gt;
&lt;p name=&quot;5c37&quot; id=&quot;5c37&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Six months prior, we had produced a tarball (mainly as our own development team wanted a Linux version) and we thought we’d try marketing to Linux users. First stop, Reddit. We wanted to engage with the r/linux community and get a sense of whether or not they would pay for a proprietary product.&lt;/p&gt;
&lt;p name=&quot;3b75&quot; id=&quot;3b75&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Although we received a lot of support, based on the majority of the comments, it didn’t sound promising. Just two examples; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;“This is going to be a very hard sell being a proprietary closed source system to Linux users, many use Linux because they have bought into the idea of open source. Good luck with it anyway”&lt;/em&gt; wrote one user. Another said &lt;em class=&quot;markup--em markup--p-em&quot;&gt;“If it were FOSS, I would have downloaded it and compiled it 20 minutes ago.”&lt;/em&gt; We promptly shelved our Linux ambitions.&lt;/p&gt;
&lt;p name=&quot;370f&quot; id=&quot;370f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But the guys from Canonical were persuasive. They had a vision. They wanted to bring Ubuntu to the widest possible audience. To do this, they needed to attract more software to the OS. More than that, this software should be easy to find, update and install. They created Snappy, a software deployment and package management system. The resultant Snaps would be available on the Ubuntu Software Center (amongst other places) — essentially an app store for Linux.&lt;/p&gt;
&lt;p name=&quot;76ad&quot; id=&quot;76ad&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We bit the bullet and spent some time creating the Snap. The opportunity to reach a new market at scale was too good to miss. Building the Snap itself was not that easy — Snaps were pretty new at the time. For example, strict confinement meant that we had to limit some of our product features. But a little help from Canonical and we were up and running.&lt;/p&gt;
&lt;p name=&quot;6e96&quot; id=&quot;6e96&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;That was over a year ago. Was it worth it?&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;7f4e&quot; id=&quot;7f4e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The short answer is yes. Although with some caveats.&lt;/p&gt;
&lt;p name=&quot;f1a6&quot; id=&quot;f1a6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;By far, most of our Linux downloads now come through Snaps, although tracking exactly where those Snap installs are coming from isn’t possible at the moment, as Snaps are available online and on other distros. Success on any app store is contingent on the amount of exposure you get on the front page/editorial sections. And getting exposure is reliant upon the good will of editors of the Software Center — not something you can, or should be able to, rely on. This is also a problem on the Mac and Windows stores — developers will never feel like they are getting enough exposure.&lt;/p&gt;
&lt;p name=&quot;5d99&quot; id=&quot;5d99&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;However, the store certainly increased awareness in the early days. And the effect has been lasting. That early user base has been spreading the word. Most of our paid Linux users are a result of word of mouth. This is not the case for Windows/Mac guys.&lt;/p&gt;
&lt;p name=&quot;eac9&quot; id=&quot;eac9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Financially speaking, I do believe you can make a living out of selling software to Linux users alone. But we couldn’t rely on just Linux users right now. I will say that it pays for itself though, and the numbers are gradually increasing. The market is definitely large enough to support a business like ours. Worth noting that Hiri is Exchange/Office 365 only at the moment. We are working on Gmail/IMAP support, and we think this will attract a lot more Linux users.&lt;/p&gt;
&lt;p name=&quot;b059&quot; id=&quot;b059&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Pricing wise, we haven’t noticed anything that distinguishes Linux users from everyone else. They are no more cost conscious than Mac / Windows users. They are definitely willing to pay for software.&lt;/p&gt;
&lt;p name=&quot;83fa&quot; id=&quot;83fa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The main challenge remains getting the word out. Unfortunately, the fundamentalist FOSS mentality we encountered on Reddit is still alive and well. Some Linux blogs and Podcasts simply won’t give us the time of day. This is not a problem with the mainstream tech blogs and is a problem unique to Linux. Thankfully, many publishers are OK with closed-source, paid-for software. It’s my firm belief that there is plenty of room for both models. There is a lot to be said for products that have been shaped by free market forces. If Linux as a platform is going to succeed, Linux users should think about the richness of the entire ecosystem rather than seek to limit it.&lt;/p&gt;
&lt;p name=&quot;85d0&quot; id=&quot;85d0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The takeaway here? Well, maybe we should open source. But that’s not so easy in our case. We have professional VC’s and they would like to see us hold onto our intellectual property. And before you cry “support model!” — it isn’t going to work for us — our product simply doesn’t require that much support.&lt;/p&gt;
&lt;p name=&quot;94fa&quot; id=&quot;94fa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The more obvious fragmentation problem is still a barrier to success. Snaps don’t cover some well known distros — Redhat, CentOS and Gentoo to name a few. Of course, we can create a Flatpak, but that’s one more platform to support, and making builds for different distros is not trivial.&lt;/p&gt;
&lt;p name=&quot;4df3&quot; id=&quot;4df3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Unsurprisingly, security is a major concern for Linux users. Thankfully, we learned this lesson early after watching several of our competitors getting roasted online for laissez-faire data collection. In many ways, we are lucky that our product is secure by design (we don’t store or process data online — strictly between you and your mail server). None the less, we are very open with users regarding the data we collect, and users can turn off what little data collection we do. Of course, the boundaries are much clearer now thanks to GDPR. Startups are less likely to make privacy related blunders. But if you are creating a product, think twice about using 3rd party services.&lt;/p&gt;
&lt;p name=&quot;2c57&quot; id=&quot;2c57&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Privacy is something you need to be mindful of when it comes to marketing too. We used to send automatically triggered emails welcoming you to the product and teaching you how to get the most from the product. A fairly typical startup tactic used to overcome adoption issues. This isn’t a problem for Mac/Windows users, but this is a step too far for Linux people. We simply stopped doing this. Of course, there are ways around this. Nobody minds getting in-app notifications for example.&lt;/p&gt;
&lt;p name=&quot;8f15&quot; id=&quot;8f15&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The most surprising and delightful aspect of this journey has been the feedback from Linux users. To put it mildly, they care about software. Many of them are software developers themselves. We call it professional sympathy! Their generosity, quality insights and willingness to help us squash bugs have accelerated the pace of our development and learning dramatically. So much so, that if I ever end up building another product, I’ll be going Linux first.&lt;/p&gt;
&lt;p name=&quot;4090&quot; id=&quot;4090&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Do I have any tips for those of you considering selling on Linux? You bet.&lt;/strong&gt;&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;0a91&quot; id=&quot;0a91&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Engage with Canonical. They are approachable, super helpful and want your Snap to succeed. They have a strong marketing department.&lt;/li&gt;
&lt;li name=&quot;d6d9&quot; id=&quot;d6d9&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Forge strong relationships with your Linux users. Make it easy for them to get in touch. Listen to them. Linux is a community — word will spread!&lt;/li&gt;
&lt;li name=&quot;e805&quot; id=&quot;e805&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Use the Snap beta channel. It’s a great way to set realistic expectations and get feedback on new features. It’s another great way to build relationships with your users. Wish we had done this sooner.&lt;/li&gt;
&lt;li name=&quot;2c39&quot; id=&quot;2c39&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Allow your users to contribute, but reward them for their contribution. We’re offering a free license to anyone that will help us translate Hiri.&lt;/li&gt;
&lt;li name=&quot;7b96&quot; id=&quot;7b96&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;There’s no escaping the grind. Link build, reach out to journalists. Talk to Podcasters.&lt;/li&gt;
&lt;li name=&quot;6afb&quot; id=&quot;6afb&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Release often. We didn’t update for quite some time because we were working on something big. A lot of users wrote to us wondering if we were dead! Nobody wants to buy a product that is no longer supported.&lt;/li&gt;
&lt;li name=&quot;4b6f&quot; id=&quot;4b6f&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Give users somewhere they can add, vote and comment on ideas. Linux users want to help you shape the product. This is a great way to improve product/market fit.&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;13c4&quot; id=&quot;13c4&quot; class=&quot;graf graf--p graf-after--li graf--trailing&quot;&gt;Questions? Comments? Ask below and I’ll do my best to answer!&lt;/p&gt;
</description>
<pubDate>Mon, 23 Jul 2018 12:17:35 +0000</pubDate>
<dc:creator>kevkav</dc:creator>
<og:title>A year on — our experience launching a paid, proprietary product on Linux.</og:title>
<og:url>https://blog.hiri.com/a-year-on-our-experience-launching-a-paid-proprietary-product-on-linux-db4f9116be08</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*CcNpBANv8-wdfiZGkEHEyA.png</og:image>
<og:description>The journey so far</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.hiri.com/a-year-on-our-experience-launching-a-paid-proprietary-product-on-linux-db4f9116be08?gi=25c5222665c</dc:identifier>
</item>
<item>
<title>Show HN: Checklist of over 100 directories to submit your startup</title>
<link>https://www.eggradients.com/startup-directory</link>
<guid isPermaLink="true" >https://www.eggradients.com/startup-directory</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://www.eggradients.com/startup-directory&quot;&gt;https://www.eggradients.com/startup-directory&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17591677&quot;&gt;https://news.ycombinator.com/item?id=17591677&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 299&lt;/p&gt;&lt;p&gt;# Comments: 64&lt;/p&gt;</description>
<pubDate>Mon, 23 Jul 2018 10:05:09 +0000</pubDate>
<dc:creator>serhadiletir</dc:creator>
<og:title>+100 Startup Directories to Submit Your Startup - Submit Checklist</og:title>
<og:description>Are you looking for startup directories to submit your fabulous product?  Having an excellent product, not enough these days. You should let people know how cool the product you made. We build the ultimate list of startup directory. Enjoy.</og:description>
<og:image>https://uploads-ssl.webflow.com/5a9423a3f702750001758d4f/5b4b8873847c0084eba5b22d_submit-checklist-cover.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eggradients.com/startup-directory</dc:identifier>
</item>
<item>
<title>Devhints: A collection of developer cheatsheets</title>
<link>https://devhints.io</link>
<guid isPermaLink="true" >https://devhints.io</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://devhints.io&quot;&gt;https://devhints.io&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17591405&quot;&gt;https://news.ycombinator.com/item?id=17591405&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 241&lt;/p&gt;&lt;p&gt;# Comments: 26&lt;/p&gt;</description>
<pubDate>Mon, 23 Jul 2018 08:46:29 +0000</pubDate>
<dc:creator>jhabdas</dc:creator>
<og:title>Devhints — TL;DR for developer documentation</og:title>
<og:type>website</og:type>
<og:image>https://assets.devhints.io/previews/index.jpg?t=20180721030347</og:image>
<og:description>A ridiculous collection of web development cheatsheets · One-page guide to </og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://devhints.io/</dc:identifier>
</item>
<item>
<title>What was it like to be a software engineer at NeXT?</title>
<link>https://www.quora.com/What-was-it-like-to-be-a-software-engineer-at-NeXT-Did-workers-interact-with-Steve-Jobs/answer/Paul-King-2</link>
<guid isPermaLink="true" >https://www.quora.com/What-was-it-like-to-be-a-software-engineer-at-NeXT-Did-workers-interact-with-Steve-Jobs/answer/Paul-King-2</guid>
<description>&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;Working at NeXT was the most exciting software engineering job I ever accepted.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;NeXT was like graduate school, bringing together a high concentration of some of the brightest and most innovative technical minds. Many people had computer science (or other) research backgrounds. One thing that was unusual is that all the technical people there understood all aspects of the machine. Software people could talk about ASICs and CPU instructions, and the hardware people understood the software stack. Every aspect of what it takes to make a computer work was represented in one building: analog hardware, chip design, motherboard design, compiler design (objective C), loader, operating system, windowing system, application layer, and applications. Where other companies had engineering teams, NeXT would have a single individual. Many people had been managers or technical leads elsewhere and came to NeXT to be an individual contributor to help create the most innovative computer ever invented (enter reality distortion field).&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;When I joined, Steve Jobs was in a different building with the marketing folks, separated from the engineers. Supposedly the new campus had been planned that way so that Steve wouldn't tour around among the engineers, ask them what they were working on, and redirect them onto new projects when they were supposed to be working on deadlines. Because if Steve got excited and said something would be cool, engineers would stop whatever they were doing and start working on that.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;At one point, Lotus Notes was getting traction and Steve thought it was interesting. He liked the idea of a network based application with information objects floating around. So he called a meeting with 10 software engineers around the giant board room table to brainstorm. It was exciting to be invited. The initiative got called Object Soup, and while nothing concrete emerged, it influenced the direction of parts of the software infrastructure.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;Steve could also be ruthless with his feedback. In my first meeting with him to present what I had been working on (which was held on a Saturday morning), he looked at the demo for 5 minutes and told me I had &quot;ruined NeXTSTEP&quot; (the software platform). This was a 3 month build-up for a big demo on Monday (in 2 days) in front of the entire engineering division at Oracle (400+ people), by invitation of his close friend, CEO Larry Ellison. Steve said the work was so bad, he thought he should cancel his presentation at Oracle. &quot;Unless...&quot;, he paused with a twinkle in his eye, &quot;something can be done.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;So we did something. We worked through the night to pull out all of the SQL-specific features he didn't like (not elegant enough), and met him at the office Sunday morning. He reviewed the demo for 2 minutes and said enthusiastically, &quot;This is 10 times, no 100 times, no 1000 times better!!!&quot; The Monday demo was on, and Steve received a standing ovation from the Oracle employees.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;ui_qtext_para&quot;&gt;&lt;span class=&quot;ui_qtext_rendered_qtext&quot;&gt;&lt;strong&gt;&lt;em&gt;Related&lt;/em&gt;&lt;/strong&gt;&lt;br/&gt;&lt;span class=&quot;qlink_container&quot;&gt;&lt;a href=&quot;https://www.quora.com/What-was-it-like-to-work-at-NeXT&quot;&gt;What was it like to work at NeXT?&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 23 Jul 2018 05:07:18 +0000</pubDate>
<dc:creator>Nuance</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.quora.com/What-was-it-like-to-be-a-software-engineer-at-NeXT-Did-workers-interact-with-Steve-Jobs/answer/Paul-King-2</dc:identifier>
</item>
<item>
<title>Ask HN: Got a CS degree, but I’m unable to be programmer. What can I do?</title>
<link>https://news.ycombinator.com/item?id=17589482</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=17589482</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.0200803212851&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;5.2650602409639&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;17589482&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17589482&quot; class=&quot;storylink&quot;&gt;Ask HN: Got a CS degree, but I’m unable to be programmer. What can I do?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.76923076923077&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_17589482&quot;&gt;284 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=Tmp1234&quot; class=&quot;hnuser&quot;&gt;Tmp1234&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17589482&quot;&gt;1 day ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_17589482&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=17589482&amp;amp;goto=item%3Fid%3D17589482&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Got%20a%20CS%20degree%2C%20but%20I%E2%80%99m%20unable%20to%20be%20programmer.%20What%20can%20I%20do%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20Got%20a%20CS%20degree%2C%20but%20I%E2%80%99m%20unable%20to%20be%20programmer.%20What%20can%20I%20do%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=17589482&amp;amp;auth=a2c688fa422f09b1060ab29465089506cc946c59&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=17589482&quot;&gt;304 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;I recently graduated and have been grinding for interview prep (leetcode and CTCI mostly), but I’m getting no where. Easy problems take me 2-5 hours. I experience PTSD like symptoms from the constant barrage of negative thoughts the difficulty and stress of doing these problems are causing me. I don’t have time to do anything else and no objectively measurable progress is being made. Even if I get a problem right, I gain little to no satisfaction at this point. I completely hate what I’ve gotten myself into. I put all my eggs in the “being a programmer” basket and it’s clearly not for me. I do have a computer science undergraduate degree which I’m hoping I can use for something. Are there any career paths I can pivot to that are less cognitively demanding than software engineering where this degree would be an asset?&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Sun, 22 Jul 2018 23:37:53 +0000</pubDate>
<dc:creator>Tmp1234</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=17589482</dc:identifier>
</item>
</channel>
</rss>