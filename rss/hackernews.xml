<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Make your own sourdough</title>
<link>https://github.com/hendricius/the-bread-code/blob/master/basics/sourdough.md</link>
<guid isPermaLink="true" >https://github.com/hendricius/the-bread-code/blob/master/basics/sourdough.md</guid>
<description>
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/aa65e64eaac81dbdc32a3feb9be93d965ce537a5/68747470733a2f2f692e696d6775722e636f6d2f306d5072757a422e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/aa65e64eaac81dbdc32a3feb9be93d965ce537a5/68747470733a2f2f692e696d6775722e636f6d2f306d5072757a422e6a7067&quot; alt=&quot;Some yummy rye breads. But you can also bake every other bread with sourdough&quot; data-canonical-src=&quot;https://i.imgur.com/0mPruzB.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sourdough is an excellent way to add air into your dough. At the same time the taste becomes a little sour adding excellent flavour to the bread. A welcome side effect is that you can eat your bread for a longer period of time as it does not catch mold as fast as yeast-only bread. &lt;a href=&quot;http://news.bbc.co.uk/2/hi/science/nature/881477.stm&quot; rel=&quot;nofollow&quot;&gt;This is because of the anti-biotic ingredients.&lt;/a&gt; Good news, it is really easy to make your own sourdough.&lt;/p&gt;
&lt;p&gt;Personally I find sourdough amazing as it is an all natural product. It has been there for thousands of years. Mankind uses fermentation for many great products, wine, beer, sauerkraut and sourdough. It requires a little time initially to create your own sourdough, but then after you can re-use the sourdough for every future bake.&lt;/p&gt;
&lt;p&gt;Before there has been artificial yeast there was already bread. In order to be able to turn the flour into something enjoyable mankind developed the sourdough. Without the sourdough your bread would have looked and tasted like a big brick.&lt;/p&gt;
&lt;p&gt;Did you ever wonder why at some point your food suddenly starts having mold all around? That is because there is natural yeast and other bacteria in the air. Everything the sourdough does is trapping this natural yeast and bacteria. The bacteria releases lactic acid when eating the flour. The yeast is in charge of creating the carbo-dioxide which makes the bread fluffy. The dough gives the bacteria and yeast a really amazing place to live. Both of them live in harmony in a nice balance. As a baker it is your job to ensure that they feel happy and enjoy their home.&lt;/p&gt;
&lt;p&gt;The quantities of yeast and bacteria in the air is minimal and thus it takes some time to gather large quantities in your dough. That's why on your first sourdough it takes up to a week until significant yeast/bacteria entered your dough and reproduced.&lt;/p&gt;
&lt;p&gt;The whole process will take you 7 days with around 2 minutes of time per day. Which means you will spend only 14 minutes in total to have your own sourdough ready. I like to call this dough the mother dough, as it is the mother of all my doughs.&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;450 grams of full grain wheat flour&lt;/li&gt;
&lt;li&gt;You can also take rye, spalt or whatever full grain flour you have available. Don't worry too much, you can later on feed your mother dough with rye to make it more ryish. It's just about getting a nice and yummy place for the bacteria and yeast.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Instructions&lt;/h2&gt;
&lt;h3&gt;Day 1&lt;/h3&gt;
&lt;p&gt;Take a big bowl and add exactly 200 grams of water and 100 grams of flour. Make sure you stir everything nicely. You want a homogenous mixture of dough and water. The water you use daily should always be between 20° and 30° degrees celsius. That is the ideal temperature for the yeast and bacteria. If you want to take it slower while baking, you can use colder water in the future. That slows down the whole process.&lt;/p&gt;
&lt;p&gt;Place the bowl somewhere in your kitchen, don't cover it. We want a maximum amount of air to get into contact with your dough. That way we invite all the good bacteria and yeast to feast. The temperature of the room where you store the dough does not matter too much. It should not be freezing, and not super warm. If it is colder it might take a little longer to get the mother dough ready. If it is warmer, it could be done sooner. Regardless just stick to the 7 day strategy and you will be fine.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/0d80d27f43f72c52cfd719c580cae27297a8414e/68747470733a2f2f692e696d6775722e636f6d2f646f777957634c2e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/0d80d27f43f72c52cfd719c580cae27297a8414e/68747470733a2f2f692e696d6775722e636f6d2f646f777957634c2e6a7067&quot; alt=&quot;Use full grain flour&quot; data-canonical-src=&quot;https://i.imgur.com/dowyWcL.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Day 2&lt;/h3&gt;
&lt;p&gt;Add another 50 grams of flour and 50 grams of warm water. Stir everything.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/4a0abb97c96c0f062bb958a5ac0a4a51b9963da9/68747470733a2f2f692e696d6775722e636f6d2f6a75726e504c612e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4a0abb97c96c0f062bb958a5ac0a4a51b9963da9/68747470733a2f2f692e696d6775722e636f6d2f6a75726e504c612e6a7067&quot; alt=&quot;Add together the water and flour&quot; data-canonical-src=&quot;https://i.imgur.com/jurnPLa.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Day 3&lt;/h3&gt;
&lt;p&gt;Add another 50 grams of flour and 50 grams of water. Stir everything.&lt;/p&gt;
&lt;h3&gt;Day 4&lt;/h3&gt;
&lt;p&gt;Add another 50 grams of flour and 50 grams of water. Stir everything.&lt;/p&gt;
&lt;h3&gt;Day 5&lt;/h3&gt;
&lt;p&gt;Add another 50 grams of flour and 50 grams of water. Stir everything. From now on we will start covering the dough with a kitchen towel or foil. Don't seal the bowl completely. Place it lightly on top. That way the dough does not dry out as much.&lt;/p&gt;
&lt;h3&gt;Day 6&lt;/h3&gt;
&lt;p&gt;Add another 50 grams of flour and 50 grams of water. Stir everything. Cover the bowl again.&lt;/p&gt;
&lt;h3&gt;Day 7&lt;/h3&gt;
&lt;p&gt;Add another 50 grams of flour and 50 grams of water. Stir everything. Cover the bowl again.&lt;/p&gt;
&lt;h3&gt;Day 8&lt;/h3&gt;
&lt;p&gt;You are done 🎉. You are ready to bake your first bread with your own sourdough. When not needing the mother dough, cover it with some foil and place it in your fridge. That slows down the bacteria and yeasts' activity. Unless you want to start baking now, place the sour dough in the fridge.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/465158117afd57eee2b8478f80d024e41455886f/68747470733a2f2f692e696d6775722e636f6d2f495442526a616f2e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/465158117afd57eee2b8478f80d024e41455886f/68747470733a2f2f692e696d6775722e636f6d2f495442526a616f2e6a7067&quot; alt=&quot;This is how it should look like after 8 days. This was rye sour dough&quot; data-canonical-src=&quot;https://i.imgur.com/ITBRjao.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Baking&lt;/h2&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/95b9bf9de701c9786b6e88c496a4b8ff1fa1ff6c/68747470733a2f2f692e696d6775722e636f6d2f65373665564b772e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/95b9bf9de701c9786b6e88c496a4b8ff1fa1ff6c/68747470733a2f2f692e696d6775722e636f6d2f65373665564b772e6a7067&quot; alt=&quot;Full grain rye vs 100% rye bread at the bottom&quot; data-canonical-src=&quot;https://i.imgur.com/e76eVKw.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A healthy formula is 40% sourdough for a rye bread/full grain bread for instance. Assuming you would bake 500 grams of flour you will need 200 grams of sour dough. The breads on the above picture have been baked with that ratio.&lt;/p&gt;
&lt;p&gt;Remove the mother dough from your fridge. Take 200 grams of your mother dough and place it in a large bowl in front of you. Since we stole 200 grams of mother dough, we need to return that later on. Else the mother dough is very unhappy. Just taking without returning would result in you having to start your sour dough again from scratch. We need to return 200 grams of dough to the mother and we need another 200 grams of sour dough for our baking. We already have 200 grams in the bowl in front of us. Which means we need to produce another 200 grams of sourdough.&lt;/p&gt;
&lt;p&gt;Simply add another 105 grams of flour (rye, spalt, fullgrain) to the bowl in front of you. And add another 105 grams of water. You might now be thinking why 105 grams and not 100 grams? That's the reason why large scale bakeries use baking powder instead of yeast/sourdough. The mother dough eats around 5% of the dough and converts it into gas. So just to be safe, always add a little more back to the dough than you take. It's really easy, always add flour/water in 1:1 ratio.&lt;/p&gt;
&lt;p&gt;If your mother dough came from the fridge it will take some time to warm it up. The bacteria yeast is still somewhat frozen and needs time. I usually feed the dough 8 hours before I start the bake. Usually I do this in the evening, go to bed and then start the real bake in the morning.&lt;/p&gt;
&lt;p&gt;After 8 hours your new mother dough is ready to be used. Return 210 grams to your old mother dough in the fridge. Stir the old mother dough with the newly added 210 grams of mother dough. Cover mother dough again and place it in your fridge for the next week. You can maintain your mother dough for a very long time. &lt;a href=&quot;http://trib.com/news/state-and-regional/newcastle-woman-maintains--year-old-sourdough-starter/article_000fcb17-5a5a-5590-84c2-3b55bb1d80fa.html&quot; rel=&quot;nofollow&quot;&gt;There has recently been a report on a woman having a 122 year old sour dough starter.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After returning your mother dough to the fridge the actual baking starts. Mix the rest of the mother dough in front of you with the flours you want to use for baking your bread. Detailed recipes and suggested mixtures will follow. All of them follow this simple principle:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Take some of your mother dough from the fridge.&lt;/li&gt;
&lt;li&gt;Feed the taken dough with 1:1 flour/water.&lt;/li&gt;
&lt;li&gt;Wait for 8 hours&lt;/li&gt;
&lt;li&gt;Return what you extracted +5% back to the fridge.&lt;/li&gt;
&lt;li&gt;Start the bake.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Below is what many first ever baked sourdough bread looked like. If yours looks somewhat like this, you did a good job. It was a mixture of 50% rye and 50% fullgrain.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/780c6f410d9fa6c03d0a4706e04c96fad4da4e81/68747470733a2f2f692e696d6775722e636f6d2f4653764452314b2e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/780c6f410d9fa6c03d0a4706e04c96fad4da4e81/68747470733a2f2f692e696d6775722e636f6d2f4653764452314b2e6a7067&quot; alt=&quot;My first ever baked sourdough bread&quot; data-canonical-src=&quot;https://i.imgur.com/FSvDR1K.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is what it looked like from the inside:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/224f58665c1fb27b298842edd3b3deb083d8a50b/68747470733a2f2f692e696d6775722e636f6d2f314e676c6e6f752e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/224f58665c1fb27b298842edd3b3deb083d8a50b/68747470733a2f2f692e696d6775722e636f6d2f314e676c6e6f752e6a7067&quot; alt=&quot;Crumb shot of my first sour dough bread&quot; data-canonical-src=&quot;https://i.imgur.com/1Nglnou.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you don't feed your mother dough it will starve eventually as it has no more food. Don't worry, my mother dough survived for 4 weeks in the fridge. You are not forced to bake every weekend. Some water will gather on top of your mother dough, that's usually lactic acid and a good amount of alcohol. Just remove that, feed your dough again and you should be good.&lt;/p&gt;
</description>
<pubDate>Sat, 28 Apr 2018 05:19:33 +0000</pubDate>
<dc:creator>hendricius</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/816859?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>hendricius/the-bread-code</og:title>
<og:url>https://github.com/hendricius/the-bread-code</og:url>
<og:description>the-bread-code - Learn how to master the art of baking the programmer way.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/hendricius/the-bread-code/blob/master/basics/sourdough.md</dc:identifier>
</item>
<item>
<title>&quot;@&quot; on Twitter</title>
<link>https://twitter.com/intent/user?user_id=71996998</link>
<guid isPermaLink="true" >https://twitter.com/intent/user?user_id=71996998</guid>
<description>&lt;div class=&quot;tweet-row&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;I can't sign in to the account on Twitter for Android. I get an error message when try to look at replies to my own tweets on Chrome for iOS. I CAN see replies on Chrome for Android. I can't RT or RT with comment on any set up, but I can see from my notifications that some can.&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Fri, 27 Apr 2018 18:02:55 +0000</pubDate>
<dc:creator>isp</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://twitter.com/intent/user?user_id=71996998</dc:identifier>
</item>
<item>
<title>Tesla&amp;#039;s Simultaneous Brilliance and Incompetence Revealed in Teardown of Model 3</title>
<link>https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3</link>
<guid isPermaLink="true" >https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3&quot;&gt;https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/#20391fcd67c3&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16942149&quot;&gt;https://news.ycombinator.com/item?id=16942149&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 208&lt;/p&gt;&lt;p&gt;# Comments: 164&lt;/p&gt;</description>
<pubDate>Fri, 27 Apr 2018 16:39:39 +0000</pubDate>
<dc:creator>Maro</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.forbes.com/forbes/welcome/?toURL=https://www.forbes.com/sites/joannmuller/2018/04/25/teslas-brilliance-and-inexperience-revealed-in-benchmarking-study-of-model-3/&amp;refURL=http://www.google.co.uk/url?sa=t&amp;source=web&amp;cd=1&amp;referrer=http://www.google.co.uk/url?sa=t&amp;source=web&amp;cd=1</dc:identifier>
</item>
<item>
<title>Credit card fraud warning signs</title>
<link>http://www.candyjapan.com/fraudulent-transaction-warning-signs</link>
<guid isPermaLink="true" >http://www.candyjapan.com/fraudulent-transaction-warning-signs</guid>
<description>&lt;p&gt;I run a site called &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;Candy Japan&lt;/a&gt;, which ships boxes of Japanese surprise candies to subscribers around the world, twice a month.&lt;/p&gt;
&lt;p&gt;At one point I was thrilled when I was suddenly seeing a lot of new orders coming in. But then, weeks later, I noticed a problem. A lot of these new orders turned out to be fake. Dealing with the chargebacks, I started wondering how I might have noticed such orders before accepting them.&lt;/p&gt;
&lt;p&gt;I've written before about &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/candy-japan-hit-with-credit-card-fraud&quot;&gt;getting hit by credit card fraud&lt;/a&gt; and &lt;a href=&quot;https://www.candyjapan.com/behind-the-scenes/how-i-got-credit-card-fraud-somewhat-under-control&quot;&gt;how to make your store less attractive for fraudsters&lt;/a&gt;. In this post I'll share some of the warning signs I've learned to pay attention to. These merely signal you to pay particularly close attention to an order – there can also be real orders that match some of these.&lt;/p&gt;
&lt;h2&gt;Address is in the US... or is it?&lt;/h2&gt;
&lt;p&gt;Some countries will have more fraudulent orders originating from them than others. Fraudsters also know that their country can raise suspicion, so sometimes they will enter their address otherwise correctly, but just change the country to &quot;United States&quot;.&lt;/p&gt;
&lt;p&gt;If you just casually browse your new orders, you might not notice this and accidentally ship the order. Later on when the post attempts to deliver it, they will at some point realize that the country is wrong and reroute it to the correct country -&amp;gt; fraudster gets their package.&lt;/p&gt;
&lt;h2&gt;Address is nonsensical&lt;/h2&gt;
&lt;p&gt;Sometimes addresses just make no sense. For example the street address isn't within the ZIP code provided, or the address has huge parts of it missing. For example something along the lines of &quot;Maple Street, 10001 New York&quot;.&lt;/p&gt;
&lt;p&gt;In these cases the purpose of the order might not be to actually get the package, but rather just to check whether a stolen credit card number works or not.&lt;/p&gt;
&lt;h2&gt;Using reshipping centers&lt;/h2&gt;
&lt;p&gt;One time I received an order with other warning signs, but that had a valid US shipping address. I decided to look it up on street view.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Shipping trucks parked outside a reshipping center&quot; src=&quot;https://www.candyjapan.com/static/trucks.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There were shipping trucks parked outside. Googling the address revealed this to be a reshipping center – a company that accepts packages inside the US and then ships them forward to other countries. There are perfectly valid reasons to use these companies, I've used them myself. For example you might have moved abroad, but still want to have an address in your home country.&lt;/p&gt;
&lt;p&gt;Another reason would be that you might want to place an order with a store that doesn't do international shipping. However I do have international shipping, so there should be no reason to use a reshipping center. Unless of course you are trying to hide your actual location, which is a big warning sign. Nowadays I look up any suspicious order on street view, just to see if it might be a reshipping center.&lt;/p&gt;
&lt;h2&gt;Using throwaway email addresses&lt;/h2&gt;
&lt;p&gt;There are sites that offer disposable email addresses. You get limitless instant inboxes for any names you want, and can check them without having to register separately for each. Again there are good reasons to use these, for example for avoiding spam when you have to provide an email address for a site that demands it, but that you don't want to have your real email address.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mailinator.com&quot;&gt;&lt;img alt=&quot;Mailinator landing page&quot; src=&quot;https://www.candyjapan.com/static/mailinator.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Still I have found that if an order originates from one of these, it usually has other warning signs as well.&lt;/p&gt;
&lt;h2&gt;Using an inconsistent and unlikely email address&lt;/h2&gt;
&lt;p&gt;By &quot;inconsistent&quot; I mean that the first and last name implied by the email address does not match the name in the shipping address. By &quot;unlikely&quot; I mean one that no reasonable person would want to have, usually containing a big batch of numbers in it. An example that would be both inconsistent and unlikely would be john.smith.938924@gmail.com even while the name in the shipping address contains a totally different name.&lt;/p&gt;
&lt;p&gt;Again not a sure sign, but this tends to be a feature of fraudulent orders. Often you just can't be quite sure and have to make a judgement call. One time when I tried googling for an address, I found that the person was also active on a forum for trading stolen credit card details. That was a bad sign. More often I will find a legit-looking personal blog which mentions their email address, that's great sign that it's a trustworthy subscriber.&lt;/p&gt;
&lt;h2&gt;Thanks for reading&lt;/h2&gt;
&lt;p&gt;Two bonus signs for the end. You can use a Geo IP database to check if the shipping address country differs from the IP address country. That's a weak sign (people do place orders while traveling, or to friends in other countries), but can break the tie if there is another suspicion. Another one is seeing if the order happened during a batch of other fraudulent orders. If you suddenly get 6 orders and 5 of them are fraud, and 1 you're not sure about, it's more likely to be fraudulent as well.&lt;/p&gt;
&lt;p&gt;Thanks for reading. If you would like to try some candy yourself, you can &lt;a href=&quot;https://www.candyjapan.com/&quot;&gt;sign up here&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Apr 2018 16:38:24 +0000</pubDate>
<dc:creator>hamstercat</dc:creator>
<og:title>Credit card fraud warning signs</og:title>
<og:description>Avoid accepting fraudulent credit card orders by paying attention to these warning signs.</og:description>
<og:url>https://www.candyjapan.com/behind-the-scenes/fraudulent-transaction-warning-signs</og:url>
<og:type>article</og:type>
<og:image>https://www.candyjapan.com/static/credit-card-fraud_s.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.candyjapan.com/behind-the-scenes/fraudulent-transaction-warning-signs</dc:identifier>
</item>
<item>
<title>NPR Retracts Story &amp;#039;The Man Who Spent $100K To Remove A Lie From Google&amp;#039;</title>
<link>https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</link>
<guid isPermaLink="true" >https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</guid>
<description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Editor's note on April 11, 2018:&lt;/strong&gt;&lt;/em&gt; NPR has retracted the story that was previously on this page because it did not meet our standards. &quot;Fairness&quot; is one of our guiding principles, and to that end &lt;a href=&quot;http://ethics.npr.org/category/b-fairness/&quot;&gt;we have pledged&lt;/a&gt; to &quot;make every effort to gather responses from those who are the subjects of criticism.&quot; In this instance, that did not happen. The story referred to one individual as the &quot;author&quot; of a website that another person said had posted defamatory information about him. It also described the author's motivation as vindictive. But NPR did not contact the alleged author. Upon review, NPR cannot say for certain who the author or authors were or what their motivation was. In fact, in court proceedings, the people listed as &quot;staff editors&quot; of the site were identified only by initials, and we have not been able to establish their identities. In addition, our account made it sound as if the website targeted a single individual. In fact, the website included information and commentary about at least 12 other people. The reporting mistakes substantially undercut the story. We will continue to report about the issue of privacy in the digital age. As we do, we will work hard to make sure the reports live up to our promise to produce content that meets &quot;the highest standards of public service in journalism.&quot;&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;</description>
<pubDate>Fri, 27 Apr 2018 16:17:36 +0000</pubDate>
<dc:creator>jessaustin</dc:creator>
<og:title>NPR: Story 'The Man Who Spent $100K To Remove A Lie From Google' Has Been Retracted</og:title>
<og:url>https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</og:url>
<og:type>article</og:type>
<og:description>NPR has retracted the story because it did not meet our standards.</og:description>
<og:image>https://media.npr.org/include/images/facebook-default-wide.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2018/04/03/598239092/the-man-who-spent-100k-to-remove-a-lie-from-google</dc:identifier>
</item>
<item>
<title>Scaling a High-Traffic Rate Limiting Stack with Redis Cluster</title>
<link>https://brandur.org/redis-cluster</link>
<guid isPermaLink="true" >https://brandur.org/redis-cluster</guid>
<description>&lt;p&gt;Redis is the often unspoken workhorse of production. It’s not often used as a primary data store, but it has a sweet spot in storing and accessing ephemeral data whose loss can be tolerated – metrics, session state, caching – and it does so &lt;em&gt;fast&lt;/em&gt;, providing not only optimal performance, but efficient algorithms on a useful set of built-in data structures. It’s one of the most common staples in the modern technology stack.&lt;/p&gt;&lt;p&gt;Stripe’s rate limiters are built on top of Redis, and until recently, they ran on a single &lt;em&gt;very hot&lt;/em&gt; instance of Redis. The server had followers in place for failover, but at any given time, one node was handling every operation.&lt;/p&gt;
&lt;p&gt;You have to admire a system where this is even possible. Various sources claim that Redis can handle a million operations a second on one node – we weren’t doing that many, but we were doing a lot. Every rate limiting check requires multiple Redis commands to run, and every API request passes through many rate limiters. One node was handling on the scale of tens to hundreds of thousands of operations per second .&lt;/p&gt;
&lt;p&gt;The node’s total saturation was leading to us seeing an ambient level of failures happening around the clock. Our services were written to tolerate Redis unavailability so most of the time this was okay, but the severity of the problem would escalate under certain conditions. We eventually solved it by migrating to a 10-node &lt;a href=&quot;https://redis.io/topics/cluster-tutorial&quot;&gt;Redis Cluster&lt;/a&gt;. Impact on performance was negligible, and we now have an easy knob to turn for horizontal scalability.&lt;/p&gt;
&lt;p&gt;The before and after error cliff :&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brandur.org/assets/redis-cluster/errors@2x.png&quot;&gt;&lt;img data-rjs=&quot;2&quot; src=&quot;https://brandur.org/assets/redis-cluster/errors.png&quot; class=&quot;overflowing&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
Errors subsiding after a transition to Redis Cluster.

&lt;p&gt;Before replacing a system, it’s worth understanding the cause and effect that led the original to fail.&lt;/p&gt;
&lt;p&gt;A property of Redis that’s worth understanding is that it’s a single-threaded program. This isn’t &lt;em&gt;strictly&lt;/em&gt; true anymore because background threads handle some operations like object deletion, but it’s practically true in that all executing operations block on access to a single flow control point. It’s relatively easy to understand how this came about – Redis’ guarantee around the atomicity of any given operation (be it a single command, &lt;code&gt;MULTI&lt;/code&gt;, or &lt;code&gt;EXEC&lt;/code&gt;) stems from the fact that it’s only executing one of the them at a time. Even so, there are some obvious parallelism opportunities, and &lt;a href=&quot;https://redis.io/topics/faq#redis-is-single-threaded-how-can-i-exploit-multiple-cpu--cores&quot;&gt;notes in the FAQ&lt;/a&gt; suggest that the intention is to start investigating a more threaded design beyond 5.0.&lt;/p&gt;
&lt;p&gt;That single-threaded model was indeed our bottleneck. You could log onto the original node and see a single core pegged at 100% usage.&lt;/p&gt;
&lt;h3 id=&quot;intersecting-failures&quot;&gt;&lt;a href=&quot;https://brandur.org/redis-cluster#intersecting-failures&quot;&gt;Intersecting failures&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Even operating right at maximum capacity, we found Redis to degrade quite gracefully. The main manifestation was an increased rate of baseline connectivity errors as observed from the nodes talking to Redis – in order to be tolerant of a malfunctioning Redis they were constrained with aggressive connect and read timeouts (~0.1 seconds), and couldn’t establish a connection of execute an operation within that time when dealing with an overstrained host.&lt;/p&gt;
&lt;p&gt;Although not optimal, the situation was okay most of the time. It only became a real problem came in when we were targeted with huge surges of illegitimate traffic (i.e., orders of magnitude over allowed limits) from &lt;em&gt;legitimate&lt;/em&gt; users who could authenticate successfully and run expensive operations on the underlying database. That’s expensive in the relative sense – even returning a set of objects from a list endpoint is far more expensive than denying the request with a &lt;code&gt;401&lt;/code&gt; because its authentication wasn’t valid, or with a &lt;code&gt;429&lt;/code&gt; because it’s over limit. These surges are often the result of users building and running high-concurrency scraping programs.&lt;/p&gt;
&lt;p&gt;These traffics spikes would lead to a proportional increase in error rate, and much of that traffic would be allowed through as rate limiters defaulted to allowing requests under error conditions. That would put increased pressure on the backend database, which doesn’t fail as gracefully as Redis when overloaded. It’s prone to seeing partitions becoming almost wholly inoperable and timing out a sizable number of the requests made to them.&lt;/p&gt;

&lt;p&gt;A core design value of Redis is speed, and Redis Cluster is structured so as not to compromise that. Unlike many other distributed models, operations in Redis Cluster aren’t confirming on multiple nodes before reporting a success, and instead look a lot more like a set of independent Redis’ sharing a workload by divvying up the total space of possible work. This sacrifices high availability in favor of keeping operations fast – the additional overhead of running an operation against a Redis Cluster is negligible compared to a standard Redis standalone instance.&lt;/p&gt;
&lt;p&gt;The total set of possible keys are divided into 16,384 &lt;strong&gt;&lt;em&gt;slots&lt;/em&gt;&lt;/strong&gt;. A key’s slot is calculated with a stable hashing function that all clients know how to do:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HASH_SLOT = CRC16(key) mod 16384
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For example, if we wanted to execute &lt;code&gt;GET foo&lt;/code&gt;, we’d get the slot number for &lt;code&gt;foo&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HASH_SLOT = CRC16(&quot;foo&quot;) mod 16384 = 12182
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Each node in a cluster will handle some fraction of those total 16,384 slots, with the exact number depending on the number of nodes. Nodes communicate with each other to coordinate slot distribution, availability, and rebalancing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brandur.org/assets/redis-cluster/hash-slots.svg&quot;&gt;&lt;img data-rjs=&quot;2&quot; src=&quot;https://brandur.org/assets/redis-cluster/hash-slots.svg&quot; class=&quot;overflowing&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
The set of hash slots spread across nodes in a cluster.
&lt;p&gt;Clients use the &lt;code&gt;CLUSTER&lt;/code&gt; family of commands to query a cluster’s state. A common operation is &lt;code&gt;CLUSTER NODES&lt;/code&gt; to get a mapping of slots to nodes, the result of which is generally cached locally as long as it stays fresh.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;127.0.0.1:30002 master - 0 1426238316232 2 connected 5461-10922
127.0.0.1:30003 master - 0 1426238318243 3 connected 10923-16383
127.0.0.1:30001 myself,master - 0 0 1 connected 0-5460
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I’ve simplified the output above, but the important parts are the host addresses in the first column and the numbers in the last. &lt;code&gt;5461-10922&lt;/code&gt; means that this node handles the range of slots starting at &lt;code&gt;5461&lt;/code&gt; and ending at &lt;code&gt;10922&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;moved&quot;&gt;&lt;a href=&quot;https://brandur.org/redis-cluster#moved&quot;&gt;`MOVED` redirection&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If a node in a Redis Cluster receives a command for a key in a slot that it doesn’t handle, it makes no attempt to forward that command elsewhere. Instead, the client is told to try again somewhere else. This comes in the form of a &lt;code&gt;MOVED&lt;/code&gt; response with the address of the new target:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;GET foo
-MOVED 3999 127.0.0.1:6381
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;During a cluster rebalancing, slots migrate from one node to another, and &lt;code&gt;MOVED&lt;/code&gt; is an important signal that servers use to tell a client its local mappings of slots to nodes are stale.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brandur.org/assets/redis-cluster/moved-redirection.svg&quot;&gt;&lt;img data-rjs=&quot;2&quot; src=&quot;https://brandur.org/assets/redis-cluster/moved-redirection.svg&quot; class=&quot;overflowing&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
A slot migrating from one node to another.
&lt;p&gt;Every node knows the current slot mapping, and in theory a node that receives an operation that it can’t handle could ask the right node for the result and forward it back to the client, but sending &lt;code&gt;MOVED&lt;/code&gt; instead is a deliberate design choice. It trades of some additional client implementation complexity for fast and deterministic performance. As long as a client’s mappings are fresh, operations are always executed in just one hop. Because rebalancing is relatively rare, the coordination overhead amortized over the cluster’s lifetime is negligible.&lt;/p&gt;
&lt;p&gt;Besides &lt;code&gt;MOVED&lt;/code&gt;, there are a few other cluster-specific mechanics at work, but I’m going to skip them for brevity. The &lt;a href=&quot;https://redis.io/topics/cluster-spec&quot;&gt;full specification&lt;/a&gt; is a great resource for a more thorough look at how Redis Cluster works.&lt;/p&gt;
&lt;h3 id=&quot;client&quot;&gt;&lt;a href=&quot;https://brandur.org/redis-cluster#client&quot;&gt;How clients execute requests&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Redis clients need a few extra features to support Redis Cluster, with the most important ones being support for the key hashing algorithm and a scheme to maintain slot to node mappings so that they know where to dispatch commands.&lt;/p&gt;
&lt;p&gt;Generally, a client will operate like this:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;On startup, connect to a node and get a mapping table with &lt;code&gt;CLUSTER NODES&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execute commands normally, targeting servers according to key slot and slot mapping.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;MOVED&lt;/code&gt; is received, return to 1.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;A multi-threaded client can be optimized by having it merely mark the mappings table dirty when receiving &lt;code&gt;MOVED&lt;/code&gt;, and have threads executing commands follow &lt;code&gt;MOVED&lt;/code&gt; responses with new targets while a background thread refreshes the mappings asynchronously. In practice, even while rebalancing the likelihood is that most slots won’t be moving, so this model allows &lt;em&gt;most&lt;/em&gt; commands to continue executing with no overhead.&lt;/p&gt;
&lt;h3 id=&quot;hash-tags&quot;&gt;&lt;a href=&quot;https://brandur.org/redis-cluster#hash-tags&quot;&gt;Localizing multi-key operations with hash tags&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It’s common in Redis to run operations that operate on multiple keys through the use of the &lt;code&gt;EVAL&lt;/code&gt; command with a custom Lua script. This is an especially important feature for implementing rate limiting, because all the work dispatched via a single &lt;code&gt;EVAL&lt;/code&gt; is guaranteed to be atomic. This allows us to correctly calculate remaining quotas even when there are concurrent operations that might conflict.&lt;/p&gt;
&lt;p&gt;A distributed model would make this type of multi-key operation difficult. Because the slot of each key is calculated via hash, there’d be no guarantee that related keys would map to the same slot. My keys &lt;code&gt;user123.first_name&lt;/code&gt; and &lt;code&gt;user123.last_name&lt;/code&gt;, obviously meant to belong together, could end up on two completely different nodes in the cluster. An &lt;code&gt;EVAL&lt;/code&gt; that read from both of them wouldn’t be able to run on a single node without an expensive remote fetch from another.&lt;/p&gt;
&lt;p&gt;Say for example we have an &lt;code&gt;EVAL&lt;/code&gt; operation that concatenates a first and last name to produce a person’s full name:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Gets the full name of a user
EVAL &quot;return redis.call('GET', KEYS[1]) .. ' ' .. redis.call('GET', KEYS[2])&quot;
    2 &quot;user123.first_name&quot; &quot;user123.last_name&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A sample invocation:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; SET &quot;user123.first_name&quot; William
&amp;gt; SET &quot;user123.last_name&quot; Adama

&amp;gt; EVAL &quot;...&quot; 2 &quot;user123.first_name&quot; &quot;user123.last_name&quot;
&quot;William Adama&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This script wouldn’t run correctly if Redis Cluster didn’t provide a way for it to do so. Luckily it does through the use of &lt;strong&gt;&lt;em&gt;hash tags&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The Redis Cluster answer to &lt;code&gt;EVAL&lt;/code&gt;s that would require cross-node operations is to disallow them (a choice that once again optimizes for speed). Instead, it’s the user’s jobs to ensure that the keys that are part of any particular &lt;code&gt;EVAL&lt;/code&gt; map to the same slot by hinting how a key’s hash should be calculated with a hash tag. Hash tags look like curly braces in a key’s name, and they dictate that only the surrounded part of the key is used for hashing.&lt;/p&gt;
&lt;p&gt;We’d fix our script above by redefining our keys to only hash their shared &lt;code&gt;user123&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; EVAL &quot;...&quot; 2 &quot;{user123}.first_name&quot; &quot;{user123}.last_name&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And when calculating a slot for one of them:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HASH_SLOT = CRC16(&quot;{user123}.first_name&quot;) mod 16384
          = CRC16(&quot;user123&quot;) mod 16384
          = 13438
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;{user123}.first_name&lt;/code&gt; and &lt;code&gt;{user123}.last_name&lt;/code&gt; are now guaranteed to map to the same slot, and &lt;code&gt;EVAL&lt;/code&gt; operations that contain both of them will be trouble-free. This is only a basic example, but the same concept maps all the way up to a complex rate limiter implementation.&lt;/p&gt;

&lt;p&gt;Transitioning over to Redis Cluster went remarkably smoothly, with the most difficult part being shoring up one of the Redis Cluster clients for production use. Even to this day, good client support is somewhat spotty, which may be an indication that Redis is fast enough that most people using it can get away with a simple standalone instance. Our error rates took a nosedive, and we’re confident that we have ample runway for continued growth.&lt;/p&gt;
&lt;p&gt;Philosophically, there’s a lot to like about Redis Cluster’ design – simple, yet powerful. Especially when it comes to distributed systems, many implementations are exceedingly complicated, and that level of complexity can be catastrophic when encountering a tricky edge in production. Redis Cluster is scalable, and yet with few enough moving parts that even a layperson like myself can wrap their head around what it’s doing. Its &lt;a href=&quot;https://redis.io/topics/cluster-spec&quot;&gt;design doc&lt;/a&gt; is comprehensive, but also approachable.&lt;/p&gt;
&lt;p&gt;In the months since setting it up, I haven’t touched it again even once, despite the considerable load its under every second of the day. This is a rare quality in production systems, and not found even amongst some of my other favorites like Postgres. We need more building blocks like Redis that do what they’re supposed to, then get out of the way.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brandur.org/assets/redis-cluster/sharding@2x.jpg&quot;&gt;&lt;img data-rjs=&quot;2&quot; src=&quot;https://brandur.org/assets/redis-cluster/sharding.jpg&quot; class=&quot;overflowing&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
Your daily dose of tangentially related photography: Stone at the top of Massive Mountain in Alberta sharding into thin flakes.


&lt;div class=&quot;info&quot; readability=&quot;8.5507246376812&quot;&gt;
&lt;div class=&quot;publishing-info-bottom&quot; readability=&quot;10.393103448276&quot;&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Scaling a High-traffic Rate Limiting Stack With Redis Cluster&lt;/strong&gt; was published on &lt;strong&gt;April 26, 2018&lt;/strong&gt; from &lt;strong&gt;San Francisco&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Find me on Twitter at &lt;strong&gt;&lt;a href=&quot;https://twitter.com/brandur&quot;&gt;@brandur&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Did I make a mistake? Please consider &lt;a href=&quot;https://github.com/brandur/sorg/edit/master/content/articles/redis-cluster.md&quot;&gt;sending a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 27 Apr 2018 15:34:56 +0000</pubDate>
<dc:creator>momonga</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://brandur.org/redis-cluster</dc:identifier>
</item>
<item>
<title>EU agrees on total ban of bee-harming pesticides</title>
<link>https://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</link>
<guid isPermaLink="true" >https://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</guid>
<description>&lt;p&gt;The European Union will ban the world’s most widely used insecticides from all fields due to the serious danger they pose to bees.&lt;/p&gt;
&lt;p&gt;The ban on neonicotinoids, approved by member nations on Friday, is expected to come into force by the end of 2018 and will mean they can only be used in closed greenhouses.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/environment/bees&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Bees&lt;/a&gt; and other insects are vital for global food production as they pollinate three-quarters of all crops. The plummeting numbers of pollinators in recent years has been blamed, in part, on the widespread use of pesticides. The EU banned the use of neonicotinoids on flowering crops that attract bees, such as oil seed rape, in 2013.&lt;/p&gt;
&lt;p&gt;But in February, a &lt;a href=&quot;https://www.theguardian.com/environment/2018/feb/28/total-ban-on-bee-harming-pesticides-likely-after-major-new-eu-analysis&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;major report from the European Union’s scientific risk assessors&lt;/a&gt; (Efsa) concluded that the high risk to both honeybees and wild bees resulted from any outdoor use, because the pesticides contaminate soil and water. This leads to the pesticides appearing in wildflowers or succeeding crops. A recent study of &lt;a href=&quot;https://www.theguardian.com/environment/2017/oct/05/honey-tests-reveal-global-contamination-by-bee-harming-pesticides&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;honey samples revealed global contamination by neonicotinoids&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vytenis Andriukaitis, European commissioner for Health and Food Safety, welcomed Friday’s vote: “The commission had proposed these measures months ago, on the basis of the scientific advice from Efsa. Bee health remains of paramount importance for me since it concerns biodiversity, food production and the environment.”&lt;/p&gt;
&lt;p&gt;The ban on the three main neonicotinoids has widespread public support, with almost 5 million people signing a &lt;a href=&quot;https://secure.avaaz.org/campaign/en/save_the_bees_neonics_loc_ns&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;petition from campaign group Avaaz&lt;/a&gt;. “Banning these toxic pesticides is a beacon of hope for bees,” said Antonia Staats at Avaaz. “Finally, our governments are listening to their citizens, the scientific evidence and farmers who know that bees can’t live with these chemicals and we can’t live without bees.”&lt;/p&gt;
&lt;p&gt;Martin Dermine, at Pesticide Action Network &lt;a href=&quot;https://www.theguardian.com/world/europe-news&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Europe&lt;/a&gt;, said: “Authorising neonicotinoids a quarter of a century ago was a mistake and led to an environmental disaster. Today’s vote is historic.”&lt;/p&gt;
&lt;p&gt;However, the pesticide manufacturers and some farming groups have accused the EU of being overly cautious and suggested crop yields could fall, a &lt;a href=&quot;https://www.theguardian.com/environment/2017/apr/06/farms-could-slash-pesticide-use-without-losses-research-reveals&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;claim rejected by others&lt;/a&gt;. “European agriculture will suffer as a result of this decision,” said Graeme Taylor, at the European Crop Protection Association. “Perhaps not today, perhaps not tomorrow, but in time decision makers will see the clear impact of removing a vital tool for farmers.”&lt;/p&gt;
&lt;p&gt;The UK’s National Farmers’ Union (NFU) said the ban was regrettable and not justified by the evidence. Guy Smith, NFU deputy president, said: “The pest problems that neonicotinoids helped farmers tackle have not gone away. There is a real risk that these restrictions will do nothing measurable to improve bee health, while compromising the effectiveness of crop protection.”&lt;/p&gt;
&lt;p&gt;A spokesman for the UK Department of Environment, Food and Rural Affairs welcomed the ban, but added: “We recognise the impact a ban will have on farmers and will continue to work with them to explore alternative approaches.” In November, UK environment secretary &lt;a draggable=&quot;true&quot; href=&quot;https://www.theguardian.com/environment/2017/nov/09/uk-will-back-total-ban-on-bee-harming-pesticides-michael-gove-reveals&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Michael Gove overturned the UK’s previous opposition&lt;/a&gt; to a full outdoor ban.&lt;/p&gt;
&lt;p&gt;Neonicotinoids, which are nerve agents, have been shown &lt;a href=&quot;https://www.theguardian.com/environment/2012/mar/29/crop-pesticides-honeybee-decline&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;to cause a wide range of harm to individual bees&lt;/a&gt;, such as damaging memory and reducing queen numbers.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-1 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;But this evidence has strengthened recently to show &lt;a href=&quot;https://www.theguardian.com/environment/2017/jun/29/pesticides-damage-survival-of-bee-colonies-landmark-study-shows&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;damage to colonies of bees&lt;/a&gt;. Other research has also revealed that &lt;a href=&quot;https://www.theguardian.com/environment/2017/oct/18/warning-of-ecological-armageddon-after-dramatic-plunge-in-insect-numbers&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;75% of all flying insects have disappeared&lt;/a&gt; in Germany and probably much further afield, prompting warnings of “ecological armageddon”.&lt;/p&gt;
&lt;p&gt;Prof Dave Goulson, at the University of Sussex, said the EU ban was logical given the weight of evidence but that disease and lack of flowery habitats were also harming bees. “Also, if these neonicotinoids are simply replaced by other similar compounds, then we will simply be going round in circles. What is needed is a move towards truly sustainable farming,” he said.&lt;/p&gt;
&lt;p&gt;Some experts are worried that the exemption for greenhouses means neonicotinoids will be washed out into water courses, where &lt;a href=&quot;https://www.theguardian.com/environment/2013/may/01/study-links-insecticide-invertebrate-die-off&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;they can severely harm aquatic life&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Prof Jeroen van der Sluijs, at the University of Bergen, Norway, said neonicotinoids will also continue to be used in flea treatments for pets and in stables and animal transport vehicles, which account for about a third of all uses: “Environmental pollution will continue.”&lt;/p&gt;
&lt;p&gt;The EU decision could have global ramifications, according to Prof Nigel Raine, at the University of Guelph in Canada: “Policy makers in other jurisdictions will be paying close attention to these decisions. We rely on both farmers and pollinators for the food we eat. Pesticide regulation is a balancing act between unintended consequences of their use for non-target organisms, including pollinators, and giving farmers the tools they need to control crop pests.”&lt;/p&gt;


</description>
<pubDate>Fri, 27 Apr 2018 10:07:32 +0000</pubDate>
<dc:creator>YeGoblynQueenne</dc:creator>
<og:url>http://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</og:url>
<og:description>The world’s most widely used insecticides will be banned from all fields within six months, to protect both wild and honeybees that are vital to crop pollination</og:description>
<og:image>https://i.guim.co.uk/img/media/0b34271cbf2342fe18e93372f64e6ed1b019dec8/0_37_6720_4032/master/6720.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxOC8wMS8zMS9mYWNlYm9va19kZWZhdWx0LnBuZw&amp;s=58cb5cc794b5248b9fcba957db972f9d</og:image>
<og:type>article</og:type>
<og:title>EU agrees total ban on bee-harming pesticides</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/environment/2018/apr/27/eu-agrees-total-ban-on-bee-harming-pesticides</dc:identifier>
</item>
<item>
<title>Two Koreas Agree to End War This Year, Pursue Denuclearization</title>
<link>https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</guid>
<description>&lt;p&gt;North Korean leader Kim Jong Un and South Korean President Moon Jae-in agreed Friday to finally end a seven-decade war this year, and pursue the “complete denuclearization” of the Korean Peninsula.&lt;/p&gt;


&lt;p&gt;U.S. President Donald Trump hailed the move, declaring “KOREAN WAR TO END!” on Twitter. He’s agreed to meet with Kim at a time and place yet to be determined.&lt;/p&gt;


&lt;div class=&quot;thirdparty-embed&quot;&gt;
&lt;div class=&quot;thirdparty-embed__container&quot; readability=&quot;6.9134078212291&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot; data-conversation=&quot;none&quot; readability=&quot;7.3743016759777&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;KOREAN WAR TO END! The United States, and all of its GREAT people, should be very proud of what is now taking place in Korea!&lt;/p&gt;
— Donald J. Trump (@realDonaldTrump) &lt;a href=&quot;https://twitter.com/realDonaldTrump/status/989820401596366849?ref_src=twsrc%5Etfw&quot;&gt;April 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Kim and Moon embraced after signing the deal during a &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/politics/articles/2018-04-26/kim-jong-un-set-to-make-history-with-short-walk-into-south-korea&quot; title=&quot;Kim Urges Frequent Talks After Declaring Korean ‘Era of Peace’&quot; target=&quot;_blank&quot;&gt;historic meeting&lt;/a&gt; on their militarized border, the first time a North Korean leader set foot on the southern side. They announced plans to replace the 1953 armistice that ended hostilities with a peace treaty by year’s end.&lt;/p&gt;


&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-327137920&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iIkcM6wCXudk/v0/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iIkcM6wCXudk/v0/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;photo&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;news-figure-caption-text caption&quot; readability=&quot;35&quot;&gt;
&lt;p&gt;Kim Jong Un, left, and Moon Jae-in, hold hands as they cross the Military Demarcation Line in Paju.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Source: Inter-Korean Summit Press Corps/Pool via Bloomberg&lt;/p&gt;

&lt;p&gt;Their statement on a “common goal of realizing, through complete denuclearization, a nuclear-free Korean Peninsula,” stopped short of the “complete, verifiable and irreversible denuclearnization” long sought by the U.S. and its allies. The statement didn’t elaborate on what the term meant and Kim didn’t personally utter the word during remarks Friday.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://www.bloomberg.com/news/photo-essays/2018-04-27/kim-jong-un-meets-moon-jae-in-in-pictures&quot; itemprop=&quot;StoryLink&quot; itemscope=&quot;itemscope&quot; target=&quot;_blank&quot;&gt;When Kim Met Moon: In Pictures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“We have agreed to share a firm determination to open a new era in which all Korean people enjoy prosperity and happiness on a peaceful land without war,” Kim told reporters, without taking questions.&lt;/p&gt;
&lt;p&gt;The agreement follows a rapid thaw in tensions on the peninsula after a flurry of North Korean missile tests and a hydrogen bomb detonation last year. The deal was expected to set up meeting soon between Kim and Trump soon, which would be the first summit between a North Korean leader and a sitting American president.&lt;/p&gt;
&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;Still, it was Kim’s symbolism-laden encounter with Moon -- the third summit between leaders of the nations since the Korean War and the first since 2007 -- that captivated much of the world Friday. The event marked Kim’s first live, unfiltered appearance on world television: South Koreans gathered around screens to watch Moon lead him past a military honor guard while a band played “Arirang,” an unofficial Korean anthem.&lt;/p&gt;

&lt;p&gt;Moon said their agreement to seek a peace treaty represented a “fundamental change” for the peninsula. The leaders agreed to hold military talks next month and seek a “phased disarmament,” without providing more details.&lt;/p&gt;
&lt;h3&gt;Uneasy Truce&lt;/h3&gt;
&lt;p&gt;South Korea refused to participate in talks to end the Korean War, leaving an uneasy truce between North Korea and China on one side and United Nations forces -- led by the U.S. -- on the other. Although China long ago withdrew its troops, more than 28,000 American personnel remained based in South Korea, which the Kim regime views as an enduring threat.&lt;/p&gt;

&lt;p&gt;“It all sounds good,” William Rhodes, former senior vice chairman of Citigroup Inc., told Bloomberg Television. “The question is how are you going to verify any denuclearization.”&lt;/p&gt;
&lt;p&gt;Investors saw Friday’s deal easing risks. The cost of insuring South Korea’s sovereign bonds against non-payment fell 1.75 basis points to 44.75 basis points as of 6:10 p.m. in Seoul, Barclays Plc prices showed. The credit-default swap contracts, are on track for their lowest close since March 14, according to data provider CMA.&lt;/p&gt;
&lt;p&gt;The question is whether the agreement can last longer than earlier ones by Moon’s predecessors that collapsed amid disputes over inspections, weapons tests and economic aid. North Korea, which committed to not pursuing nuclear weapons in 1992, now has an estimated 60 nuclear bombs and missiles believed capable of reaching any U.S. cities. -- a step Trump has threatened war to stop.&lt;/p&gt;
&lt;h3&gt;Kim Optimistic&lt;/h3&gt;
&lt;p&gt;The announcement was followed by a tersely worded commentary from Kim’s Korean Central News Agency decrying sanctions and calling on the U.S. to drop its “anachronistic hostile policy toward” North Korea.&lt;/p&gt;
&lt;p&gt;Any progress on dismantling the Kim’s weapons program would likely be slow and fraught, and involve visits by international inspectors. Prior efforts involving Kim’s late father when he was leader collapsed in acrimony, with North Korea blaming the U.S. for failure to adhere to the agreements.&lt;/p&gt;
&lt;p&gt;Yet at least on Friday, optimism prevailed.&lt;/p&gt;
&lt;p&gt;“There’ll be no victory without pain, no glory without frustration,” Kim said. “One day, we will remember this day with joy for overcoming challenges and hardship.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;— With assistance by Heesu Lee, Sam Kim, and Kyungji Cho&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 27 Apr 2018 09:34:06 +0000</pubDate>
<dc:creator>almost_usual</dc:creator>
<og:description>North Korean leader Kim Jong Un and South Korean President Moon Jae-in agreed Friday to finally end a seven-decade war this year, and pursue the “complete denuclearization” of the Korean Peninsula.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iTu0Qj1Gt1ow/v1/1200x734.jpg</og:image>
<og:title>Two Koreas Agree to End War This Year, Pursue Denuclearization</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-04-27/two-koreas-agree-to-end-war-this-year-pursue-denuclearization</dc:identifier>
</item>
<item>
<title>Researchers have identified a new DNA structure called the i-motif inside cells</title>
<link>https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</link>
<guid isPermaLink="true" >https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</guid>
<description>&lt;div readability=&quot;35&quot;&gt;
&lt;div class=&quot;story-summary-text&quot; readability=&quot;40&quot;&gt;
&lt;p&gt;It’s DNA, but not as we know it. In a world first, Australian researchers have identified a new DNA structure – called the i-motif – inside cells. A twisted ‘knot’ of DNA, the i-motif has never before been directly seen inside living cells. The new findings, from the Garvan Institute of Medical Research, are published today in the leading journal Nature Chemistry.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div readability=&quot;37&quot;&gt;
&lt;p&gt;&lt;strong&gt;Journal/conference:&lt;/strong&gt; Nature Chemistry&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Organisation/s:&lt;/strong&gt; Garvan Institute of Medical Research, The University of New South Wales, The University of Sydney&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;169&quot;&gt;
&lt;h2&gt;Media Release&lt;/h2&gt;
&lt;strong&gt;From:&lt;/strong&gt; Garvan Institute of Medical Research
&lt;p&gt;It’s DNA, but not as we know it.&lt;/p&gt;
&lt;p&gt;In a world first, Australian researchers have identified a new DNA structure – called the i-motif – inside cells. A twisted ‘knot’ of DNA, the i-motif has never before been directly seen inside living cells.&lt;/p&gt;
&lt;p&gt;The new findings, from the Garvan Institute of Medical Research, are published today in the leading journal &lt;em&gt;Nature Chemistry.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Deep inside the cells in our body lies our DNA. The information in the DNA code – all 6 billion A, C, G and T letters – provides precise instructions for how our bodies are built, and how they work.&lt;/p&gt;
&lt;p&gt;The iconic ‘double helix’ shape of DNA has ca­ptured the public imagination since 1953, when James Watson and Francis Crick famously uncovered the structure of DNA. However, it’s now known that short stretches of DNA can exist in other shapes, in the laboratory at least – and scientists suspect that these different shapes might play an important role in how and when the DNA code is ‘read’.&lt;/p&gt;
&lt;p&gt;The new shape looks entirely different to the double-stranded DNA double helix.&lt;/p&gt;
&lt;p&gt;“When most of us think of DNA, we think of the double helix,” says Associate Professor Daniel Christ (Head, Antibody Therapeutics Lab, Garvan) who co-led the research. “This new research reminds us that totally different DNA structures exist – and could well be important for our cells.”&lt;/p&gt;
&lt;p&gt;“The i-motif is a four-stranded ‘knot’ of DNA,” says Associate Professor Marcel Dinger (Head, Kinghorn Centre for Clinical Genomics, Garvan),.who co-led the research with A/Prof Christ.&lt;/p&gt;
&lt;p&gt;“In the knot structure, C letters on the same strand of DNA bind to each other – so this is very different from a double helix, where ‘letters’ on opposite strands recognise each other, and where Cs bind to Gs [guanines].”&lt;/p&gt;
&lt;p&gt;Although researchers have seen the i-motif before and have studied it in detail, it has only been witnessed &lt;em&gt;in vitro&lt;/em&gt; – that is, under artificial conditions in the laboratory, and not inside cells.&lt;/p&gt;
&lt;p&gt;In fact, scientists in the field have debated whether i-motif ‘knots’ would exist at all inside living things – a question that is resolved by the new findings.&lt;/p&gt;
&lt;p&gt;To detect the i-motifs inside cells, the researchers developed a precise new tool – a fragment of an antibody molecule – that could specifically recognise and attach to i-motifs with a very high affinity. Until now, the lack of an antibody that is specific for i-motifs has severely hampered the understanding of their role.&lt;/p&gt;
&lt;p&gt;Crucially, the antibody fragment didn’t detect DNA in helical form, nor did it recognise ‘G-quadruplex structures’ (a structurally similar four-stranded DNA arrangement).&lt;/p&gt;
&lt;p&gt;With the new tool, researchers uncovered the location of ‘i-motifs’ in a range of human cell lines. Using fluorescence techniques to pinpoint where the i-motifs were located, they identified numerous spots of green within the nucleus, which indicate the position of i-motifs.&lt;/p&gt;
&lt;p&gt;“What excited us most is that we could see the green spots – the i-motifs – appearing and disappearing over time, so we know that they are forming, dissolving and forming again,” says Dr Mahdi Zeraati, whose research underpins the study’s findings.&lt;/p&gt;
&lt;p&gt;The researchers showed that i-motifs mostly form at a particular point in the cell’s ‘life cycle’ – the late G1 phase, when DNA is being actively ‘read’. They also showed that i-motifs appear in some promoter regions (areas of DNA that control whether genes are switched on or off) and in telomeres, ‘end sections’ of chromosomes that are important in the aging process.&lt;/p&gt;
&lt;p&gt;Dr Zeraati says, “We think the coming and going of the i-motifs is a clue to what they do. It seems likely that they are there to help switch genes on or off, and to affect whether a gene is actively read or not.”&lt;/p&gt;
&lt;p&gt;“We also think the transient nature of the i-motifs explains why they have been so very difficult to track down in cells until now,” adds A/Prof Christ.&lt;/p&gt;
&lt;p&gt;A/Prof Marcel Dinger says, “It’s exciting to uncover a whole new form of DNA in cells – and these findings will set the stage for a whole new push to understand what this new DNA shape is really for, and whether it will impact on health and disease.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;–––ENDS–––&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Featured paper: &lt;/strong&gt;Mahdi Zeraati, David B. Langley, Peter Schofield, Aaron L. Moye, Romain Rouet, William E. Hughes, Tracey M. Bryan, Marcel E. Dinger and Daniel Christ&lt;strong&gt;. I-motif DNA structures are formed in the nuclei of human cells.&lt;/strong&gt; &lt;em&gt;Nature Chemistry&lt;/em&gt; 2018 DOI: 10.1038/s41557-018-0046-3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Support: &lt;/strong&gt;This work was supported by the National Health and Medical Research Council (Australia) and the Australian Research Council.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About the Garvan Institute: &lt;/strong&gt;The Garvan Institute of Medical Research is one of Australia's largest medical research institutions and is at the forefront of next-generation genomic DNA sequencing in Australia. Garvan’s main research areas are: cancer, diabetes and metabolism, genomics and epigenetics, immunology and inflammation, osteoporosis and bone biology, and neuroscience. Garvan’s mission is to make significant contributions to medical science that will change the directions of science and medicine and have major impacts on human health. www.garvan.org.au&lt;/p&gt;

&lt;/div&gt;</description>
<pubDate>Fri, 27 Apr 2018 09:12:38 +0000</pubDate>
<dc:creator>braythwayt</dc:creator>
<og:title>Found: a new form of DNA in our cells</og:title>
<og:type>article</og:type>
<og:image>https://www.scimex.org/__data/assets/image/0005/317489/Screenshot-2018-04-19-22.50.05.png</og:image>
<og:url>https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</og:url>
<og:description>Found: a new form of DNA in our cells It’s DNA, but not as we know it. In a world first, Australian researchers have identified a new DNA structure – called the i-motif – inside cells. A twisted ‘knot’ of DNA, the i-motif has never before been directly seen insi</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scimex.org/newsfeed/found-a-new-form-of-dna-in-our-cells</dc:identifier>
</item>
<item>
<title>Ask HN: What are some examples of beautiful x86 assembly code?</title>
<link>https://news.ycombinator.com/item?id=16938934</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=16938934</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;16939558&quot; readability=&quot;3.1272084805654&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941362&quot; readability=&quot;2.9291338582677&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942539&quot; readability=&quot;4.2753036437247&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944616&quot; readability=&quot;4.9259259259259&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.462962962963&quot;&gt;&lt;tr readability=&quot;4.9259259259259&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6944444444444&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.9245901639344&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Yes, I made the videos a few years ago. This video series is mostly for beginners as it goes pretty slowly.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The exercises are open source and can be found here: &lt;a href=&quot;https://github.com/xorpd/asm_prog_ex&quot; rel=&quot;nofollow&quot;&gt;https://github.com/xorpd/asm_prog_ex&lt;/a&gt; I think that more experienced developers can take the instruction set and bash through the exercises. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942708&quot; readability=&quot;3.5396825396825&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7698412698413&quot;&gt;&lt;tr readability=&quot;3.5396825396825&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I think it’s created by the man himself - having been through it it’s a very thorough coverage of the basic instruction set without delving too much into the windows specifics (it uses FASM syntax from what I recall)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940073&quot; readability=&quot;2.680412371134&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940010&quot; readability=&quot;5.5018050541516&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7509025270758&quot;&gt;&lt;tr readability=&quot;5.5018050541516&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.043321299639&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.8054474708171&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Can someone more versed in x86 explain to me how this works?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It's been a long time since I've done any assembly, and that was MIPS, but I don't see how there's any sort of exit condition or anything. I'm guessing there's more to xadd than `x + y = z`? &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940032&quot; readability=&quot;3.1111111111111&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940311&quot; readability=&quot;2.25&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940430&quot; readability=&quot;1.1803278688525&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944682&quot; readability=&quot;4.4859813084112&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2429906542056&quot;&gt;&lt;tr readability=&quot;4.4859813084112&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;This is correct, from the snippet given - what the other commentators are failing to say is that they're assuming the registers are initialised &quot;offstage&quot; by some other part of the program.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940770&quot; readability=&quot;6.2692307692308&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.1346153846154&quot;&gt;&lt;tr readability=&quot;6.2692307692308&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;If &lt;em&gt;all&lt;/em&gt; functions took (rax, rbx, rcx, ...) and you had loop statement that defrements rcx and jumps unless zero, then how would &lt;em&gt;you&lt;/em&gt; write fib-function’s body?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940925&quot; readability=&quot;2.5639534883721&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.281976744186&quot;&gt;&lt;tr readability=&quot;2.5639534883721&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;240&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;You raise a good question. At one time you would have only one loop running through the system as per my understanding. I am a little lost here.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16947741&quot; readability=&quot;15.671457905544&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.8357289527721&quot;&gt;&lt;tr readability=&quot;15.671457905544&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;280&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.8151950718686&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.91118077325&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Answer is you don’t have to initialize rcx, since it is already a prerequisite for a looping subroutine. There is no for (i=0; i&amp;lt;n; i++). Argument &lt;em&gt;n&lt;/em&gt; is a counter and it is rcx itself. It is ‘discharged’ by a loop. If caller wants to save it, then it does that by his own means. This contradicts all regular languages’ rules, but this is low-level, far below all the safety.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;On your second question about different loops. First, you can loop through any register via (dec &amp;lt;reg&amp;gt;; jnz &amp;lt;label&amp;gt;), thus having nested loops. Second, all valuable registers are pushed onto the stack and popped before/after a call or an interrupt, so their contents don’t change. Some registers have to be saved by the caller and some by the callee, depending on a calling convention and an actual usage. The stack is always available (rsp points to its top), so you can offload temporary values and concentrate on current evaluation, loading values on demand later. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943916&quot; readability=&quot;13.471698113208&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7358490566038&quot;&gt;&lt;tr readability=&quot;13.471698113208&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;280&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In a single-core cpu, the operating system's scheduler manages the register state for each process: basically, when switching from one context to another, it dumps the old process' registers to memory, and loads the register state to the new one. From the user's point of view, the register state will appear unaffected by different processes: your loop register will not changed by other processes and threads. There is no parallelism, so only one program and register state is active at once, but there is concurrency (if the OS supports it). On a multi-core processor, each core has its own set of registers, so the scheduler could theoretically run a multiple processes uninterupted on one core per process.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943830&quot; readability=&quot;7.7254437869822&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8627218934911&quot;&gt;&lt;tr readability=&quot;7.7254437869822&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;280&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.691124260355&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.896214896215&quot;&gt;&lt;span class=&quot;c5a&quot;&gt;I think this is the biggest problem with learning x86 assembly (or ARM or anything else) on modern systems (or more specifically modern operating systems).&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c5a&quot;&gt;It’s sometimes difficult to think about the assembly code in situ when you start to think about the operating system doing a ton of context switching and paging etc. in the background, which can distract your thought process from what’s right in front of you (as well as the operating system’s software interrupts / system calls on top of the basic ISA, which is another abstraction!)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c5a&quot;&gt;Older systems had the currently running program as the entire context of the system at that point in time - in a similar way to embedded programming, which is imho a much easier realm to learn assembly in once you’ve got a bit of basic electronics under your belt! &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16947619&quot; readability=&quot;8.5221238938053&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2610619469027&quot;&gt;&lt;tr readability=&quot;8.5221238938053&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;320&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6283185840708&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.849187935035&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The whole point of how interrupt handling works is that it returns back to the same state of the program already in progress when finished. The abstraction is such that the interrupted program doesn't need to care.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Even in those &quot;old&quot; systems of single address spaces and no protection, you're constantly getting timer interrupts, interrupts for I/O, etc., which your application might not have installed its own handler for. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942962&quot; readability=&quot;3.5735294117647&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7867647058824&quot;&gt;&lt;tr readability=&quot;3.5735294117647&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The code above I believe is the point to jump to when the register has been assigned some value for x. Think along the same lines as a function call once the pre-amble is out of the way (or a ‘goto’ by someone who knows when to use it!)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943861&quot; readability=&quot;4.95&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.475&quot;&gt;&lt;tr readability=&quot;4.95&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;It's a hardware register, so it has always has a value (in 64-bit mode, at least), whether or not the program explicitly sets it.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940869&quot; readability=&quot;1.1636363636364&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943801&quot; readability=&quot;2.1111111111111&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941860&quot; readability=&quot;1.4814814814815&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943922&quot; readability=&quot;1.2285714285714&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939386&quot; readability=&quot;11.74025974026&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8701298701299&quot;&gt;&lt;tr readability=&quot;11.74025974026&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.3376623376623&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.922822491731&quot;&gt;&lt;span class=&quot;c00&quot;&gt;My interest, save for occasional tweak in ARM boot code, is mostly historical. Grew up on Z-80 assembly but really enjoy PDP-11 code for didactic purposes. You can easily see that the rise of optimising C compilers was helped by divergence from PDP instruction set. Not ever since C idioms map down so nicely.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;strlen():&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  LEN:   MOV #-1, R0
  1⊙     INC R0
         TSTB (R1)+
         BNE 1⊙
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;or take strcpy():&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  COPY:  MOVB (R1)+, (R0)+
         BNE COPY
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;versus the C version:&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  void strcpy(char *s, char *t) 
  {
    while (*s++ = *t++)
      ;
  }
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;It translates to the optimal machine code verbatim. It does not require any smarts of the compiler, at the expense of understanding on the side of the programmer. This is made possible by orthogonality of the instruction set, which in less well thought out designs was hacked around with special instructions (like LDIR on Z80). The price for that is you have to make compiler optimize these situations.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939659&quot; readability=&quot;20.689361702128&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.344680851064&quot;&gt;&lt;tr readability=&quot;20.689361702128&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.046808510638&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;29.485632183908&quot;&gt;&lt;span class=&quot;c00&quot;&gt;That's remarkably close to 68k str-functions.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Page 133 &lt;a href=&quot;http://www.atarimania.com/documents/Asm_Lang_Prog_68K_Family.pdf&quot; rel=&quot;nofollow&quot;&gt;http://www.atarimania.com/documents/Asm_Lang_Prog_68K_Family...&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  * STRLEN - RETURNS LENGTH OP NULL TERMINATED STRING IN D0
  * A0 -&amp;gt; STRING
  STRLEN: MOVE.L A0,-(SP) SAVE REG
          CLR.L  D0       INITIALIZE
  STRLENI:TST.B  (A0)+    NULL?
          BEQ    STRLENR  YES, RETURN
          ADDQ.L #1, D0   BUMB COUNT
          BRA    STRLENI  LOOP
  STRLENR:MOVE.L (SP)+,A0 RESTORE REG
          RTS

  We might also want to copy a string:
  
  * STRCPY - COPY A NULL TERMINATED STRING
  * A0 -&amp;gt; SOURCE STRING
  * A1 -&amp;gt; DESTINATION STRING
  STRCPY: MOVEM.L A0-A1,-(SP) SAVE REGS
  STRCPY1:MOVE.B  (A0)+,(A1)+ MOVE A BYTE
          BNE     STRCPY1     GET ANOTHER IF NOT NULL
          MOVEM.L (SP)+/A0-A1 RESTORE REGS
          RTS
  
  Next, we will want to compare two strings:
  
  * STRCMP - COMPARE TWO NULL TERMINATED STRINGS
  * A0 -&amp;gt; STRING 1
  * A1 -&amp;gt; STRING 2
  STRCMP: MOVEM.L A0-A1,-(SP)  SAVE REGS
  STRCMP1:CMPM.B  (A0)+,(A1)+  COMPARE BYTES
          BNE     STRRET       RETURN IF DIFFERENT
          TST.B   -1(A0)       HAVE WE HIT A NULL?
          BNE     STRCMP1      NOW MORE BYTES LEFT
  STRRET: MOVEM.L (SP)+,A0-A1  RESTORE REGS
          RTS
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Although I guess I'd implement strlen more like this (not sure if it works, been a &lt;em&gt;long&lt;/em&gt; time since I last wrote anything for 68k):&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  strlen:   movem.l a0-a1,-(sp)
            move.l  a0, a1   ; copy a0 to a1
  slenloop: tst.b   (a0)+
            bne     slenloop
            addq.l  #1, a1
            sub.l   a0, a1
            move.l  a1, d0
            movem.l (sp)+,a0-a1
            rts
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Just two instructions in the inner loop. But not sure whether address registers supported addq etc.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939737&quot; readability=&quot;5.1724137931034&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.5862068965517&quot;&gt;&lt;tr readability=&quot;5.1724137931034&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.3103448275862&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.6484375&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Wow it's close indeed, even stack manipulation looks the same. Would be&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  MOV  R0, -(SP)
  ....
  MOV  (SP)+, R0
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;for the PDP code.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940555&quot; readability=&quot;18.531139835488&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;9.2655699177438&quot;&gt;&lt;tr readability=&quot;18.531139835488&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.679200940071&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;24.84993997599&quot;&gt;&lt;span class=&quot;c00&quot;&gt;My faster (?, see [0]) strlen seems to compile (using MIT 68k syntax):&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  &amp;gt; cat &amp;gt; test.asm
  strlen:   movem.l %a0-%a1,-(%sp)
            movl    %a0, %a1     ;# copy a0 to a1
  slenloop: tst.b   (%a0)+
            bne.b   slenloop
            addq.l  #1, %a1
            sub.l   %a0, %a1
            move.l  %a1, %d0
            movem.l (%sp)+,%a0-%a1
            rts
  ^D

  &amp;gt; m68k-linux-gnu-as test.asm &amp;amp;&amp;amp; m68k-linux-gnu-objdump -d a.out
  a.out:     file format elf32-m68k
  
  Disassembly of section .text:
  
  00000000 &amp;lt;strlen&amp;gt;:
     0: 48e7 00c0       moveml %a0-%a1,%sp@-
     4: 2248            moveal %a0,%a1
  
  00000006 &amp;lt;slenloop&amp;gt;:
     6: 4a18            tstb %a0@+
     8: 66fc            bnes 6 &amp;lt;slenloop&amp;gt;
     a: 5289            addql #1,%a1
     c: 93c8            subal %a0,%a1
     e: 2009            movel %a1,%d0
    10: 4cdf 0300       moveml %sp@+,%a0-%a1
    14: 4e75            rts
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;I wonder whether it actually works... I think same idea should be translatable to PDP-11 as well.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;[0]: It runs slower for short strings, though. Not sure where the break even point is. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940799&quot; readability=&quot;17.426294820717&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.7131474103586&quot;&gt;&lt;tr readability=&quot;17.426294820717&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.521912350598&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;28.437348423605&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Previous one didn't work, because I mixed up a0 and a1 pointers when subtracting.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But that gave me a new idea: copy pointer to d0 and complement the difference instead of addq, saving a1 register (+stack operations) and a move-instruction:&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  strlen:   move.l  %a0,-(%sp)
            movl    %a0, %d0   ;# d0 = a0;
  slenloop: tst.b   (%a0)+     ;# test *a0, post incr
            bneb    slenloop   ;# loop if non-zero
            sub.l   %a0, %d0   ;# d0 = d0 - a0;
            not.l   %d0        ;# d0 = ~d0;
            move.l  (%sp)+,%a0
            rts                ;# d0 is the return value
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Equivalent C-code (&lt;a href=&quot;http://cpp.sh/2oecd&quot; rel=&quot;nofollow&quot;&gt;http://cpp.sh/2oecd&lt;/a&gt;):&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  #include &amp;lt;stdio.h&amp;gt;
  #include &amp;lt;stdint.h&amp;gt;
  
  size_t strlen68k(char* a0) {
      int zero_flag;
      uintptr_t d0 = (uintptr_t) a0;
      do {
          // tstb (%a0)+
          if (*a0 == 0) 
              zero_flag = 1;
          else
              zero_flag = 0;
          a0++; // (%a0)+ (post increment)
      } while(!zero_flag); // bneb slenloop
      d0 = d0 - (uintptr_t) a0; // sub.l %a0, %d0
      d0 = ~d0;  // not.l %d0
      return d0;
  }
  
  void strlen_test(char* str) {
      printf(&quot;str \&quot;%s\&quot; length is %lu\n&quot;, str, strlen68k(str));
  }
  
  int main(void) {
      strlen_test(&quot;&quot;);
      strlen_test(&quot;a&quot;);
      strlen_test(&quot;abcd&quot;);
      return 0;
  }
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Again, untested, but I think it probably works. I guess this is also faster for all string lengths &amp;gt;0 as well.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This idea &lt;em&gt;might&lt;/em&gt; not work on PDP-11 anymore, depending on how binary arithmetic is implemented. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940887&quot; readability=&quot;3.2523364485981&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6261682242991&quot;&gt;&lt;tr readability=&quot;3.2523364485981&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;68xx is another case that got the conditions which set flags _just_ right. IMHO, obv&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941510&quot; readability=&quot;3.1914893617021&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944525&quot; readability=&quot;1.6137931034483&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939310&quot; readability=&quot;2.961038961039&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939625&quot; readability=&quot;2.8631578947368&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16945681&quot; readability=&quot;2.1089108910891&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944794&quot; readability=&quot;9.572192513369&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7860962566845&quot;&gt;&lt;tr readability=&quot;9.572192513369&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.0935828877005&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;17.833333333333&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In my work book club we've been reading the book &quot;zero bugs&quot; by Kate Thompson.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The first half is some fun writing with stock good advice for software development, and the second half is a bunch of code examples the author finds interesting, many of which are in various flavors of assembly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;(I have no affiliation with the author, publisher, nor any other ulterior motive. Office consensus is that this is the best book we've done a book club around - highly recommended as just plain fun to read, if you're already writing software.) &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939200&quot; readability=&quot;3.9285714285714&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943238&quot; readability=&quot;3.7058823529412&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939128&quot; readability=&quot;1.8813559322034&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942291&quot; readability=&quot;1.8646616541353&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942578&quot; readability=&quot;2.4923076923077&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2461538461538&quot;&gt;&lt;tr readability=&quot;2.4923076923077&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I was going to ask why? But then I read the single faq at the end: because I thought it would be funny...&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944139&quot; readability=&quot;6.3636363636364&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.1818181818182&quot;&gt;&lt;tr readability=&quot;6.3636363636364&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6363636363636&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8916408668731&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In addition to being funny, it's appealing to me to have the option of generating assembly to perform a task in such a way that a human looking at the assembly would have enormous difficulty in determining what is performed. As suggested by its name, it serves as a nice obfuscator.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It also fully avoids all branches. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16945222&quot; readability=&quot;1.6285714285714&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941117&quot; readability=&quot;35.533105802048&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;17.766552901024&quot;&gt;&lt;tr readability=&quot;35.533105802048&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;22.701706484642&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;44.844720496894&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Duff's device, as emitted by GCC[0], is a bit on the verbose side but still quite neat. In particular the single-instruction computed goto that uses a look-up table made up of 8 quad-words, filled in by the linker.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Note the '.section .rodata' directive which actually places the quads pointers, seemingly interleaved with code, in a read-only data section.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Note also the dec/test/jle instructions implementing the while loop occur &lt;em&gt;before&lt;/em&gt; the last of the eight copy operations, and interleaved with the next-to-last copy operation.&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  duff:
  .LFB0:
          .cfi_startproc
          lea     eax, [rdi+7]
          mov     r8d, 8
          mov     rcx, rdx
          cdq
          idiv    r8d
          mov     r9d, eax
          mov     eax, edi
          cdq
          idiv    r8d
          cmp     edx, 7
          ja      .L2
          mov     edx, edx
          jmp     [QWORD PTR .L4[0+rdx*8]]
          .section        .rodata
          .align 8
          .align 4
  .L4:
          .quad   .L3
          .quad   .L5
          .quad   .L6
          .quad   .L7
          .quad   .L8
          .quad   .L9
          .quad   .L10
          .quad   .L11
          .text
  .L11:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L10:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L9:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L8:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L7:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L6:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
  .L5:
          mov     al, BYTE PTR [rsi]
          dec     r9d
          inc     rsi
          test    r9d, r9d
          mov     BYTE PTR [rcx], al
          jle     .L2
  .L3:
          mov     al, BYTE PTR [rsi]
          inc     rsi
          mov     BYTE PTR [rcx], al
          jmp     .L11
  .L2:
          ret
          .cfi_endproc&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;___&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;edit: formatting, &lt;em&gt;sigh&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;[0] v 7.3.0 64bit; gcc -S -Os -masm=intel &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942162&quot; readability=&quot;6.4&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2&quot;&gt;&lt;tr readability=&quot;6.4&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.8&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.1761658031088&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Note the '.section .rodata' directive which places ..., seemingly interleaved with code, in a read-only data section.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It only specifies which section that part of &quot;code&quot; goes into, the linker pools it all up in a binary image and fills in the address for the tags when linking as directed by the linker script[0].&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;[0]: &lt;a href=&quot;https://sourceware.org/binutils/docs/ld/Simple-Example.html&quot; rel=&quot;nofollow&quot;&gt;https://sourceware.org/binutils/docs/ld/Simple-Example.html&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941440&quot; readability=&quot;1.4237288135593&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944800&quot; readability=&quot;0.71929824561404&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939836&quot; readability=&quot;5.4548494983278&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942270&quot; readability=&quot;1.4791666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939366&quot; readability=&quot;5.4088669950739&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7044334975369&quot;&gt;&lt;tr readability=&quot;5.4088669950739&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.3103448275862&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.011824324324&quot;&gt;&lt;span class=&quot;c00&quot;&gt;IBM PC x86 BIOS code:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://github.com/kaneton/appendix-bios&quot; rel=&quot;nofollow&quot;&gt;https://github.com/kaneton/appendix-bios&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;OT: This brings back memories of tinkering with the MS-DOS boot process. Back then, the BIOS would read the MBR and copy its contents to 0x7C00 and start execution from there. So you could assemble your own code (using no less than MS-DOS debug) and plonk it into the MBR. I remember doing things like fooling the boot loader into thinking there's less ram than there actually was (639kB instead of 640kB) and using the unaccounted 1kB for placing your own code that could be triggered by a captured interrupt... Fun times! &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939788&quot; readability=&quot;1.5333333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942281&quot; readability=&quot;10.291316526611&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.1456582633053&quot;&gt;&lt;tr readability=&quot;10.291316526611&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;So yes, this was a TSR, except that it resided in unaccounted for memory. Also, since you put it into the MBR, it would get loaded into ram automatically with every boot, and no fiddling with autoexec.bat or anything where it could be easily discovered. All this of course, in trying to understand the fascinating world of viruses.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940361&quot; readability=&quot;3.2753623188406&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6376811594203&quot;&gt;&lt;tr readability=&quot;3.2753623188406&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Maybe stealthiness? TSRs could be viewed with the right tools, IIRC. This seems like a technique to hide code?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941450&quot; readability=&quot;1.6583850931677&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940937&quot; readability=&quot;3.3388157894737&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941079&quot; readability=&quot;2&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943436&quot; readability=&quot;1.265306122449&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941481&quot; readability=&quot;3.2931726907631&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939143&quot; readability=&quot;0.090909090909091&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941560&quot; readability=&quot;3.5402684563758&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939506&quot; readability=&quot;5.3714285714286&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6857142857143&quot;&gt;&lt;tr readability=&quot;5.3714285714286&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;[xchg rax,rax] has a collection of interesting snippets. You can either try to reason what they're doing yourself, or there are a variety of writeups out there for each of the snippets.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943311&quot; readability=&quot;0.90243902439024&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940656&quot; readability=&quot;1.7658227848101&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943529&quot; readability=&quot;1.5775862068966&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942898&quot; readability=&quot;4.4444444444444&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2222222222222&quot;&gt;&lt;tr readability=&quot;4.4444444444444&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;My favourite was a function to swap either a byte, word or dword with a single ret. The function would have three entry points, calling itself recursively like hanoi-towers.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943307&quot; readability=&quot;2.5490196078431&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2745098039216&quot;&gt;&lt;tr readability=&quot;2.5490196078431&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.3986928104575&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.7368421052632&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I remember I wrote a 6 bytes code to destroy information on the whole hard drive.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Kind of opposite of what you're asking for :) &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939650&quot; readability=&quot;1.4571428571429&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939684&quot; readability=&quot;7.7780458383595&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8890229191797&quot;&gt;&lt;tr readability=&quot;7.7780458383595&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.208685162847&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;19.876390605686&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Pretty incredible that such world changing code fits on one page.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It’s ineresting that when tools are new, like ASM in 1978, they give high leverage to the first to use them. Microsoft was able to leverage a small amount of code into a world changing platform. Now it would be nearly impossible to do the same with a team the same size.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But in 2018, the nascent state of ML tools looks similar to the nascent state of programming tools in 1978. And indeed we are seeing entire companies built around relatively basic AI in the scheme of things. As first movers these companies have the same kind of leverage with respect to AI that Microsoft did to Software in the 1980s.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Perhaps in 2058 someone will share a link to a Tensorflow script and we will all marvel at its terseness and apparent simplicity. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939893&quot; readability=&quot;3.7269076305221&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.863453815261&quot;&gt;&lt;tr readability=&quot;3.7269076305221&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.1927710843374&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8297872340426&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Pretty incredible that such world changing code fits on one page.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;What code are you looking at? I see &quot;Microsoft BASIC for 6502 Original Source Code&quot; which runs for 6955 lines. By my reasoning that is more than a hundred pages. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939963&quot; readability=&quot;6.4486301369863&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2243150684932&quot;&gt;&lt;tr readability=&quot;6.4486301369863&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Ok, “one page” may not be a technically fair description (though it does fit on a web page). Still, I think most programmers would agree that nowadays, few world changing technologies can be expressed in 6955 lines of code. That’s what I mean by high leverage.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944789&quot; readability=&quot;7.9772727272727&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.9886363636364&quot;&gt;&lt;tr readability=&quot;7.9772727272727&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.3181818181818&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.722222222222&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The following snippet swaps two values (rax, rcx) only if they are out of order (i.e. rax &amp;gt; rcx). It does so without using any branches.&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;  mov rdx, rax
  cmp rax, rcx
  cmovg rax, rcx
  cmovg rcx, rdx&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943557&quot; readability=&quot;1.6350364963504&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940961&quot; readability=&quot;2.0294117647059&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941080&quot; readability=&quot;12.759782608696&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3798913043478&quot;&gt;&lt;tr readability=&quot;12.759782608696&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Well what we were doing for pe encryptors (will try to dig out some code from tapes when I get back into civilization :D) was generating a code that was driving execution flow using SEH (structured exception handling), sometimes the code executed as intended, sometimes the exception was trigered (with faulty code, again generated) to continue at completely different part of code. This was the complete pain in the &quot;neck&quot; to debug (timing the code execution is a great way to tell if someone is debugging it, and you just continue into some other generated code that is missleading the reverser), and completely impossible to solve on paper (well, with huge amount of knowlidge and a lot of time, you could do it :D). That's why I am laughing with todays overuse of try/catch/throws, we were using it to obfuscate execution flow and today it is used in normal coding with same devastating effect :D&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943403&quot; readability=&quot;5.804347826087&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.9021739130435&quot;&gt;&lt;tr readability=&quot;5.804347826087&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.5605590062112&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.7171052631579&quot;&gt;&lt;span class=&quot;c00&quot;&gt;not quite the assembly, but you may look at small intros at &lt;a href=&quot;https://www.pouet.net/prodlist.php&quot; rel=&quot;nofollow&quot;&gt;https://www.pouet.net/prodlist.php&lt;/a&gt; of sizes 32 bytes and so on.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;many intros are provided with source codes, and others could easily be viewed in disassemblers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;especially look at intros by such brilliant people like Digimind and Řrřola. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939533&quot; readability=&quot;3.047619047619&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943578&quot; readability=&quot;2.4435483870968&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2217741935484&quot;&gt;&lt;tr readability=&quot;2.4435483870968&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I was quite impressed with the Wolf3D rendering engine when somebody released the code years back.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943162&quot; readability=&quot;1.4065934065934&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16940963&quot; readability=&quot;1.5&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16939135&quot; readability=&quot;0.73170731707317&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941488&quot; readability=&quot;2.4574468085106&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2287234042553&quot;&gt;&lt;tr readability=&quot;2.4574468085106&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The coolest one liner is xor eax,eax :) 1 cycle for setting register to 0.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16943302&quot; readability=&quot;4.3446601941748&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1723300970874&quot;&gt;&lt;tr readability=&quot;4.3446601941748&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Yeah, but with the side effect of clearing the flag registers. So can't be used between operations that rely on flags. Alternatively it is great to break false flag dependency.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16942213&quot; readability=&quot;3.3609467455621&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6804733727811&quot;&gt;&lt;tr readability=&quot;3.3609467455621&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Truly beautiful, I was so ecstatic when this clicked with me when I was first learning assembly. So much depth in one &quot;simple&quot; instruction.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16941424&quot; readability=&quot;3.0217391304348&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16944301&quot; readability=&quot;0.78048780487805&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Fri, 27 Apr 2018 07:02:53 +0000</pubDate>
<dc:creator>xelxebar</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=16938934</dc:identifier>
</item>
</channel>
</rss>