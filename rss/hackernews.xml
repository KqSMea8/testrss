<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>&amp;#039;Mind Over Matter&amp;#039;: Stephen Hawking – Obituary by Roger Penrose</title>
<link>https://www.theguardian.com/science/2018/mar/14/stephen-hawking-obituary</link>
<guid isPermaLink="true" >https://www.theguardian.com/science/2018/mar/14/stephen-hawking-obituary</guid>
<description>&lt;p&gt;The image of &lt;a href=&quot;https://www.theguardian.com/science/hawking&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Stephen Hawking&lt;/a&gt; – who has died aged 76 – in his motorised wheelchair, with head contorted slightly to one side and hands crossed over to work the controls, caught the public imagination, as a true symbol of the triumph of mind over matter. As with the Delphic oracle of ancient Greece, physical impairment seemed compensated by almost supernatural gifts, which allowed his mind to roam the universe freely, upon occasion enigmatically revealing some of its secrets hidden from ordinary mortal view.&lt;/p&gt;
&lt;p&gt;Of course, such a romanticised image can represent but a partial truth. Those who knew Hawking would clearly appreciate the dominating presence of a real human being, with an enormous zest for life, great humour, and tremendous determination, yet with normal human weaknesses, as well as his more obvious strengths. It seems clear that he took great delight in his commonly perceived role as “the No 1 celebrity scientist”; huge audiences would attend his public lectures, perhaps not always just for scientific edification.&lt;/p&gt;
&lt;p&gt;The scientific community might well form a more sober assessment. He was extremely highly regarded, in view of his many greatly impressive, sometimes revolutionary, contributions to the understanding of the physics and the geometry of the universe.&lt;/p&gt;
&lt;p&gt;Hawking had been diagnosed shortly after his 21st birthday as suffering from an unspecified incurable disease, which was then identified as the fatal degenerative motor neurone disease amyotrophic lateral sclerosis, or ALS. Soon afterwards, rather than succumbing to depression, as others might have done, he began to set his sights on some of the most fundamental questions concerning the physical nature of the universe. In due course, he would achieve extraordinary successes against the severest physical disabilities. Defying established medical opinion, he managed to live another 55 years.&lt;/p&gt;
&lt;p&gt;His background was academic, though not directly in mathematics or physics. His father, Frank, was an expert in tropical diseases and his mother, Isobel (nee Walker), was a free-thinking radical who had a great influence on him. He was born in Oxford and moved to St Albans, Hertfordshire, at eight. Educated at St Albans school, he won a scholarship to study physics at University College, Oxford. He was recognised as unusually capable by his tutors, but did not take his work altogether seriously. Although he obtained a first-class degree in 1962, it was not a particularly outstanding one.&lt;/p&gt;
&lt;p&gt;He decided to continue his career in physics at Trinity Hall, Cambridge, proposing to study under the distinguished cosmologist &lt;a href=&quot;https://www.theguardian.com/news/2001/aug/23/guardianobituaries.spaceexploration&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Fred Hoyle&lt;/a&gt;. He was disappointed to find that Hoyle was unable to take him, the person available in that area being Dennis Sciama, unknown to Hawking at the time. In fact, this proved fortuitous, for Sciama was becoming an outstandingly stimulating figure in British cosmology, and would supervise several students who were to make impressive names for themselves in later years (including the future astronomer royal &lt;a href=&quot;https://www.theguardian.com/science/2005/dec/02/highereducationprofile.research&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Lord Rees of Ludlow&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Sciama seemed to know everything that was going on in physics at the time, especially in cosmology, and he conveyed an infectious excitement to all who encountered him. He was also very effective in bringing together people who might have things of significance to communicate with one another.&lt;/p&gt;
&lt;p&gt;When Hawking was in his second year of research at Cambridge, I (at Birkbeck College in London) had established a certain mathematical theorem of relevance. This showed, on the basis of a few plausible assumptions (by the use of global/topological techniques largely unfamiliar to physicists at the time) that a collapsing over-massive star would result in a singularity in space-time – a place where it would be expected that densities and space-time curvatures would become infinite – giving us the picture of what we now refer to as a “black hole”. Such a space-time singularity would lie deep within a “horizon”, through which no signal or material body can escape. (This picture had been put forward by &lt;a href=&quot;https://www.theguardian.com/books/2012/nov/16/inside-centre-robert-oppenheimer-ray-monk-review&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;J Robert Oppenheimer&lt;/a&gt; and Hartland Snyder in 1939, but only in the special circumstance where exact spherical symmetry was assumed. The purpose of this new theorem was to obviate such unrealistic symmetry assumptions.) At this central singularity, Einstein’s classical theory of general relativity would have reached its limits.&lt;/p&gt;
&lt;p&gt;Meanwhile, Hawking had also been thinking about this kind of problem with &lt;a href=&quot;https://www.theguardian.com/education/2004/may/13/research.highereducation&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;George Ellis&lt;/a&gt;, who was working on a PhD at St John’s College, Cambridge. The two men had been working on a more limited type of “singularity theorem” that required an unreasonably restrictive assumption. Sciama made a point of bringing Hawking and me together, and it did not take Hawking long to find a way to use my theorem in an unexpected way, so that it could be applied (in a time-reversed form) in a cosmological setting, to show that the space-time singularity referred to as the “big bang” was also a feature not just of the standard highly symmetrical cosmological models, but also of any qualitatively similar but asymmetrical model.&lt;/p&gt;
&lt;p&gt;Some of the assumptions in my original theorem seem less natural in the cosmological setting than they do for collapse to a black hole. In order to generalise the mathematical result so as to remove such assumptions, Hawking embarked on a study of new mathematical techniques that appeared relevant to the problem.&lt;/p&gt;
&lt;p&gt;A powerful body of mathematical work known as Morse theory had been part of the machinery of mathematicians active in the global (topological) study of Riemannian spaces. However, the spaces that are used in Einstein’s theory are really pseudo-Riemannian and the relevant Morse theory differs in subtle but important ways. Hawking developed the necessary theory for himself (aided, in certain respects, by &lt;a href=&quot;https://www.theguardian.com/science/2007/nov/26/usnews.sciencenews&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Charles Misner&lt;/a&gt;, Robert Geroch and Brandon Carter) and was able to use it to produce new theorems of a more powerful nature, in which the assumptions of my theorem could be considerably weakened, showing that a big-bang-type singularity was a necessary implication of Einstein’s general relativity in broad circumstances.&lt;/p&gt;
&lt;p&gt;A few years later (in a paper published by the Royal Society in 1970, by which time Hawking had become a fellow “for distinction in science” of Gonville and Caius College, Cambridge), he and I joined forces to publish an even more powerful theorem which subsumed almost all the work in this area that had gone before.&lt;/p&gt;
&lt;p&gt;In 1967, Werner Israel published a remarkable paper that had the implication that non-rotating black holes, when they had finally settled down to become stationary, would necessarily become completely spherically symmetrical. Subsequent results by Carter, David Robinson and others generalised this to include rotating black holes, the implication being that the final space-time geometry must necessarily accord with an explicit family of solutions of Einstein’s equations found by Roy Kerr in 1963. A key ingredient to the full argument was that if there is any rotation present, then there must be complete axial symmetry. This ingredient was basically supplied by Hawking in 1972.&lt;/p&gt;
&lt;p&gt;The very remarkable conclusion of all this is that the black holes that we expect to find in nature have to conform to this Kerr geometry. As the great theoretical astrophysicist &lt;a href=&quot;http://www.nytimes.com/1995/08/22/obituaries/subrahmanyan-chandrasekhar-84-is-dead-noble-laureate-uncovered-white-dwarfs.html?pagewanted=all&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Subramanyan Chandrasekhar&lt;/a&gt; subsequently commented, black holes are the most perfect macroscopic objects in the universe, being constructed just out of space and time; moreover, they are the simplest as well, since they can be exactly described by an explicitly known geometry (that of Kerr).&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Following his work in this area, Hawking established a number of important results about black holes, such as an argument for its event horizon (its bounding surface) having to have the topology of a sphere. In collaboration with Carter and James Bardeen, in work published in 1973, he established some remarkable analogies between the behaviour of black holes and the basic laws of thermodynamics, where the horizon’s surface area and its surface gravity were shown to be analogous, respectively, to the thermodynamic quantities of entropy and temperature. It would be fair to say that in his highly active period leading up to this work, Hawking’s research in classical general relativity was the best anywhere in the world at that time.&lt;/p&gt;
&lt;p&gt;Hawking, Bardeen and Carter took their “thermodynamic” behaviour of black holes to be little more than just an analogy, with no literal physical content. A year or so earlier, &lt;a href=&quot;http://www.nytimes.com/2015/08/22/science/space/jacob-bekenstein-physicist-who-revolutionized-theory-of-black-holes-dies-at-68.html?_r=0&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Jacob Bekenstein&lt;/a&gt; had shown that the demands of physical consistency imply – in the context of quantum mechanics – that a black hole must indeed have an actual physical entropy (“entropy” being a physicist’s measure of “disorder”) that is proportional to its horizon’s surface area, but he was unable to establish the proportionality factor precisely. Yet it had seemed, on the other hand, that the physical temperature of a black hole must be exactly zero, inconsistently with this analogy, since no form of energy could escape from it, which is why Hawking and his colleagues were not prepared to take their analogy completely seriously.&lt;/p&gt;
&lt;p&gt;Hawking had then turned his attention to quantum effects in relation to black holes, and he embarked on a calculation to determine whether tiny rotating black holes that might perhaps be created in the big bang would radiate away their rotational energy. He was startled to find that irrespective of any rotation they would radiate away their energy – which, by Einstein’s E=mc&lt;sup&gt;2&lt;/sup&gt;, means their mass. Accordingly, any black hole actually has a non-zero temperature, agreeing precisely with the Bardeen-Carter-Hawking analogy. Moreover, Hawking was able to supply the precise value “one quarter” for the entropy proportionality constant that Bekenstein had been unable to determine.&lt;/p&gt;
&lt;p&gt;This radiation coming from black holes that Hawking predicted is now, very appropriately, referred to as Hawking radiation. For any black hole that is expected to arise in normal astrophysical processes, however, the Hawking radiation would be exceedingly tiny, and certainly unobservable directly by any techniques known today. But he argued that very tiny black holes could have been produced in the big bang itself, and the Hawking radiation from such holes would build up into a final explosion that might be observed. There appears to be no evidence for such explosions, showing that the big bang was not so accommodating as Hawking wished, and this was a great disappointment to him.&lt;/p&gt;
&lt;p&gt;These achievements were certainly important on the theoretical side. They established the theory of black-hole thermodynamics: by combining the procedures of quantum (field) theory with those of general relativity, Hawking established that it is necessary also to bring in a third subject, thermodynamics. They are generally regarded as Hawking’s greatest contributions. That they have deep implications for future theories of fundamental physics is undeniable, but the detailed nature of these implications is still a matter of much heated debate.&lt;/p&gt;
&lt;p&gt;Hawking himself was able to conclude from all this (though not with universal acceptance by particle physicists) that those fundamental constituents of ordinary matter – the protons – must ultimately disintegrate, although with a decay rate that is beyond present-day techniques for observing it. He also provided reasons for suspecting that the very rules of quantum mechanics might need modification, a viewpoint that he seemed originally to favour. But later (unfortunately, in my own opinion) he came to a different view, and at the Dublin international conference on gravity in July 2004, &lt;a href=&quot;https://www.theguardian.com/science/2004/jul/30/peopleinscience.universe&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;he publicly announced a change of mind&lt;/a&gt; (thereby conceding a bet with the Caltech physicist John Preskill) concerning his originally predicted “information loss” inside black holes.&lt;/p&gt;
&lt;p&gt;Following his black-hole work, Hawking turned his attentions to the problem of quantum gravity, developing ingenious ideas for resolving some of the basic issues. Quantum gravity, which involves correctly imposing the quantum procedures of particle physics on to the very structure of space-time, is generally regarded as the most fundamental unsolved foundational issue in physics. One of its stated aims is to find a physical theory that is powerful enough to deal with the space-time singularities of classical general relativity in black holes and the big bang.&lt;/p&gt;
&lt;p&gt;Hawking’s work, up to this point, although it had involved the procedures of quantum mechanics in the curved space-time setting of Einstein’s general theory of relativity, did not provide a quantum gravity theory. That would require the “quantisation” procedures to be applied to Einstein’s curved space-time itself, not just to physical fields within curved space-time.&lt;/p&gt;
&lt;p&gt;With James Hartle, Hawking developed a quantum procedure for handling the big-bang singularity. This is referred to as the “no-boundary” idea, whereby the singularity is replaced by a smooth “cap”, this being likened to what happens at the north pole of the Earth, where the concept of longitude loses meaning (becomes singular) while the north pole itself has a perfectly good geometry.&lt;/p&gt;
&lt;p&gt;To make sense of this idea, Hawking needed to invoke his notion of “imaginary time” (or “Euclideanisation”), which has the effect of converting the “pseudo-Riemannian” geometry of Einstein’s space-time into a more standard Riemannian one. Despite the ingenuity of many of these ideas, grave difficulties remain (one of these being how similar procedures could be applied to the singularities inside black holes, which is fundamentally problematic).&lt;/p&gt;
&lt;p&gt;There are many other approaches to quantum gravity being pursued worldwide, and Hawking’s procedures, though greatly respected and still investigated, are not the most popularly followed, although all others have their share of fundamental difficulties also.&lt;/p&gt;
&lt;p&gt;To the end of his life, Hawking continued with his research into the quantum-gravity problem, and the related issues of cosmology. But concurrently with his strictly research interests, he became increasingly involved with the popularisation of science, and of his own ideas in particular. This began with the writing of his astoundingly successful book A Brief History of Time (1988), which was translated into some 40 languages and sold over 25m copies worldwide.&lt;/p&gt;
&lt;p&gt;Undoubtedly, the brilliant title was a contributing factor to the book’s phenomenal success. Also, the subject matter is something that grips the public imagination. And there is a directness and clarity of style, which Hawking must have developed as a matter of necessity when trying to cope with the limitations imposed by his physical disabilities. Before needing to rely on his computerised speech, he could talk only with great difficulty and expenditure of effort, so he had to do what he could with short sentences that were directly to the point. In addition, it is hard to deny that his physical condition must itself have caught the public’s imagination.&lt;/p&gt;
&lt;p&gt;Although the dissemination of science among a broader public was certainly one of Hawking’s aims in writing his book, he also had the serious purpose of making money. His financial needs were considerable, as his entourage of family, nurses, healthcare helpers and increasingly expensive equipment demanded. Some, but not all, of this was covered by grants.&lt;/p&gt;
&lt;p&gt;To invite Hawking to a conference always involved the organisers in serious calculations. The travel and accommodation expenses would be enormous, not least because of the sheer number of people who would need to accompany him. But a popular lecture by him would always be a sell-out, and special arrangements would be needed to find a lecture hall that was big enough. An additional factor would be the ensuring that all entrances, stairways, lifts, and so on would be adequate for disabled people in general, and for his wheelchair in particular.&lt;/p&gt;
&lt;p&gt;He clearly enjoyed his fame, taking many opportunities to travel and to have unusual experiences (such as going down a mine shaft, visiting the south pole and undergoing the zero-gravity of free fall), and to meet other distinguished people.&lt;/p&gt;
&lt;p&gt;The presentational polish of his public lectures increased with the years. Originally, the visual material would be line drawings on transparencies, presented by a student. But in later years impressive computer-generated visuals were used. He controlled the verbal material, sentence by sentence, as it would be delivered by his computer-generated American-accented voice. High-quality pictures and computer-generated graphics also featured in his later popular books The Illustrated Brief History of Time (1996) and The Universe in a Nutshell (2001). With his daughter Lucy he wrote the expository children’s science book George’s Secret Key to the Universe (2007), and he served as an editor, co-author and commentator for many other works of popular science.&lt;/p&gt;
&lt;p&gt;He received many high accolades and honours. In particular, he was elected a fellow of the Royal Society at the remarkably early age of 32 and received its highest honour, the Copley medal, in 2006. In 1979, he became the 17th holder of the Lucasian chair of natural philosophy in Cambridge, some 310 years after Sir Isaac Newton became its second holder. He became a Companion of Honour in 1989. He made a guest appearance on the television programme Star Trek: The Next Generation, appeared in cartoon form on The Simpsons and was portrayed in the movie The Theory of Everything (2014).&lt;/p&gt;
&lt;p&gt;It is clear that he owed a great deal to his first wife, Jane Wilde, whom he married in 1965, and with whom he had three children, Robert, Lucy and Timothy. Jane was exceptionally supportive of him in many ways. One of the most important of these may well have been in allowing him to do things for himself to an unusual extent.&lt;/p&gt;
&lt;p&gt;He was an extraordinarily determined person. He would insist that he should do things for himself. This, in turn, perhaps kept his muscles active in a way that delayed their atrophy, thereby slowing the progress of the disease. Nevertheless, his condition continued to deteriorate, until he had almost no movement left, and his speech could barely be made out at all except by a very few who knew him well.&lt;/p&gt;
&lt;p&gt;He contracted pneumonia while in Switzerland in 1985, and a tracheotomy was necessary to save his life. Strangely, after this brush with death, the progress of his degenerative disease seemed to slow to a virtual halt. His tracheotomy prevented any form of speech, however, so that acquiring a computerised speech synthesiser came as a necessity at that time.&lt;/p&gt;
&lt;p&gt;In the aftermath of his encounter with pneumonia, the Hawkings’ home was almost taken over by nurses and medical attendants, and he and Jane drifted apart. They were divorced in 1995. In the same year, Hawking married Elaine Mason, who had been one of his nurses. Her support took a different form from Jane’s. In his far weaker physical state, the love, care and attention that she provided sustained him in all his activities. Yet this relationship also came to an end, and he and Elaine were divorced in 2007.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 2&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Despite his terrible physical circumstance, he almost always remained positive about life. He enjoyed his work, the company of other scientists, the arts, the fruits of his fame, his travels. He took great pleasure in children, sometimes entertaining them by swivelling around in his motorised wheelchair. Social issues concerned him. He promoted scientific understanding. He could be generous and was very often witty. On occasion he could display something of the arrogance that is not uncommon among physicists working at the cutting edge, and he had an autocratic streak. Yet he could also show a true humility that is the mark of greatness.&lt;/p&gt;
&lt;p&gt;Hawking had many students, some of whom later made significant names for themselves. Yet being a student of his was not easy. He had been known to run his wheelchair over the foot of a student who caused him irritation. His pronouncements carried great authority, but his physical difficulties often caused them to be enigmatic in their brevity. An able colleague might be able to disentangle the intent behind them, but it would be a different matter for an inexperienced student.&lt;/p&gt;
&lt;p&gt;To such a student, a meeting with Hawking could be a daunting experience. Hawking might ask the student to pursue some obscure route, the reason for which could seem deeply mysterious. Clarification was not available, and the student would be presented with what seemed indeed to be like the revelation of an oracle – something whose truth was not to be questioned, but which if correctly interpreted and developed would surely lead onwards to a profound truth. Perhaps we are all left with this impression now.&lt;/p&gt;
&lt;p&gt;Hawking is survived by his children.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;bullet&quot;&gt;•&lt;/span&gt; Stephen William Hawking, physicist, born 8 January 1942; died 14 March 2018, aged 76.&lt;/p&gt;


</description>
<pubDate>Wed, 14 Mar 2018 11:10:16 +0000</pubDate>
<dc:creator>DanielleMolloy</dc:creator>
<og:url>http://www.theguardian.com/science/2018/mar/14/stephen-hawking-obituary</og:url>
<og:description>Theoretical physicist who made revolutionary contributions to our understanding of the nature of the universe</og:description>
<og:image>https://i.guim.co.uk/img/media/b36ce1d3e4122c3d9ea61aae97435427a2be6db7/0_314_3356_2014/master/3356.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxOC8wMS8zMS9mYWNlYm9va19kZWZhdWx0LnBuZw&amp;s=05d65cbe23dc01a9e14a9d9968e73368</og:image>
<og:type>article</og:type>
<og:title>'Mind over matter': Stephen Hawking – obituary by Roger Penrose</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/science/2018/mar/14/stephen-hawking-obituary</dc:identifier>
</item>
<item>
<title>How knowing Lisp destroyed my programming career (2006)</title>
<link>http://coding.derkeiler.com/Archive/Lisp/comp.lang.lisp/2006-04/msg01644.html</link>
<guid isPermaLink="true" >http://coding.derkeiler.com/Archive/Lisp/comp.lang.lisp/2006-04/msg01644.html</guid>
<description>&lt;hr /&gt;&lt;hr /&gt;
In article ,&lt;br /&gt;&quot;Jonathon McKitrick&quot;  wrote:&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Ron Garret wrote:&lt;br /&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;3. I do not hate Lisp. It is and has always been my favorite&lt;br /&gt;programming languages. My love for Lisp pretty much destroyed my career&lt;br /&gt;as a programmer. My motivation for criticising Lisp is not to convince&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br /&gt;How did it do this?&lt;br /&gt;&lt;/blockquote&gt;
&lt;br /&gt;That's a long story. Part of it is told here:&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.flownet.com/gat/jpl-lisp.html&quot;&gt;http://www.flownet.com/gat/jpl-lisp.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;and here:&lt;/p&gt;&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://groups.google.com/group/comp.lang.lisp/msg/6f75cfb5a289d3f6&quot;&gt;http://groups.google.com/group/comp.lang.lisp/msg/6f75cfb5a289d3f6&lt;/a&gt;&lt;/p&gt;&lt;p&gt;But in the context of the current discussion I think it's worthwhile&lt;br /&gt;giving an abridged version:&lt;/p&gt;&lt;p&gt;I first learned Lisp in the early 80's when I was still in high school.&lt;br /&gt;I was interested in AI, and in those days Lisp was the lingua franca. I&lt;br /&gt;took a little detour as an undergrad by getting a EE degree, but in grad&lt;br /&gt;school in the mid-80's I went back to Lisp (mostly Scheme and Franz Lisp&lt;br /&gt;back then, and later MacScheme and Coral Lisp, which would later morph&lt;br /&gt;into MCL).&lt;/p&gt;&lt;p&gt;My colleagues were using C (K&amp;amp;R in those days) or Pascal. C++, Perl,&lt;br /&gt;Java, Python, etc. didn't exist. When all those modern languages are&lt;br /&gt;out of the picture, Lisp rocks. I mean it just blows everything else&lt;br /&gt;clean out of the water. With a secret weapon like Lisp in my arsenal in&lt;br /&gt;1986 I could blow my competition out of the water with one hand tied&lt;br /&gt;behind my back and holding a martini in the other.&lt;/p&gt;&lt;p&gt;(I remember my compilers class in particular. What took my colleagues&lt;br /&gt;reams and reams and reams of Pascal code took me a page of Lisp. This&lt;br /&gt;was before networks became ubiquitous. We turned in assignments on&lt;br /&gt;paper in those days. I still have my folder with all my homework&lt;br /&gt;assignments from that class. It's about a quarter of an inch thick.)&lt;/p&gt;&lt;p&gt;That kind of competitive advantage continued throughout my graduate&lt;br /&gt;career. The competition switched from Pascal to C, but it was still no&lt;br /&gt;contest. Then they switched to C++ in the early 90's -- or at least&lt;br /&gt;they tried. The state of C++ was so horrific back then that they were&lt;br /&gt;forced to go back to Lisp because they just couldn't get things to run&lt;br /&gt;in C++ even though they tried very very hard.&lt;/p&gt;&lt;p&gt;But a funny thing happened in the late 90's. C++ got its act together.&lt;br /&gt;Java and Perl came along (and later, Python). Meanwhile, Lisp hadn't&lt;br /&gt;advanced much in about a decade (since the ANSI spec was finalized). It&lt;br /&gt;was still a win, but the competition had narrowed the field. Once upon&lt;br /&gt;a time Lisp had a long list of features that no other language had (GC,&lt;br /&gt;full numeric tower, CLOS, incremental development, macros) that list&lt;br /&gt;kept getting shorter and shorter, and the case for Lisp, which had never&lt;br /&gt;been easy even in the best of times, was getting harder and harder to&lt;br /&gt;make.&lt;/p&gt;&lt;p&gt;So I went to Google in 2000 with this really impressive resume that I&lt;br /&gt;had built using Lisp, and when I got there they said, &quot;Glad you're here,&lt;br /&gt;we want you to write Java code.&quot; Thing is, I had never really had to&lt;br /&gt;learn Java, so I wasn't very good at it. On top of that, knowing Lisp&lt;br /&gt;made me all too keenly aware of Java's shortcomings, and I had a very&lt;br /&gt;hard time not being angry at how stupid it was that I was being forced&lt;br /&gt;to use it. (If you want more details about that part of my life story,&lt;br /&gt;read xooglers.)&lt;/p&gt;&lt;p&gt;But then a very strange thing happened: I noticed that all around me&lt;br /&gt;people were writing code using C++ and Java and Python and even (gasp!)&lt;br /&gt;Perl, and they were actually getting it to work without tearing their&lt;br /&gt;hair out. In fact, in a number of cases I saw people whip things up in&lt;br /&gt;Perl in a couple of hours that would have taken me days or weeks to do&lt;br /&gt;in Lisp.&lt;/p&gt;&lt;p&gt;The conclusion was inescapable: the problem wasn't Perl or C++ or Java,&lt;br /&gt;it was me. I just wasn't a very good programmer any more. Lisp's power&lt;br /&gt;had made me complacent, and the world had passed me by. Looking back, I&lt;br /&gt;actually don't think I was ever a very good programmer. I just happened&lt;br /&gt;to have the good fortune to recognize a good thing when I saw it, and&lt;br /&gt;used the resulting leverage to build a successful career. But I credit&lt;br /&gt;much of my success to the people who designed Common Lisp.&lt;/p&gt;&lt;p&gt;It was nice while it lasted.&lt;/p&gt;&lt;p&gt;rg&lt;br /&gt;.&lt;/p&gt;&lt;hr /&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Follow-Ups&lt;/strong&gt;:
&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;:
&lt;/li&gt;
&lt;/ul&gt;
</description>
<pubDate>Wed, 14 Mar 2018 10:12:22 +0000</pubDate>
<dc:creator>tinderliker</dc:creator>
<og:image>http://cdn.derkeiler.com/logo/dk_logo_square.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://coding.derkeiler.com/Archive/Lisp/comp.lang.lisp/2006-04/msg01644.html</dc:identifier>
</item>
<item>
<title>Google bans cryptocurrency ads</title>
<link>https://support.google.com/adwordspolicy/answer/7648803</link>
<guid isPermaLink="true" >https://support.google.com/adwordspolicy/answer/7648803</guid>
<description>&lt;div class=&quot;cc&quot; readability=&quot;29.522858982614&quot;&gt;
&lt;p&gt;In June 2018, Google will update the &lt;a href=&quot;https://support.google.com/adwordspolicy/answer/2464998&quot;&gt;Financial services policy&lt;/a&gt; to restrict the advertisement of Contracts for Difference, rolling spot forex, and financial spread betting. In addition, ads for the following will no longer be allowed to serve:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Binary options and synonymous products&lt;/li&gt;
&lt;li&gt;Cryptocurrencies and related content (including but not limited to initial coin offerings, cryptocurrency exchanges, cryptocurrency wallets, and cryptocurrency trading advice)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Ads for aggregators and affiliates for the following will no longer be allowed to serve:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Contracts for Difference&lt;/li&gt;
&lt;li&gt;Rolling spot forex&lt;/li&gt;
&lt;li&gt;Financial spread betting&lt;/li&gt;
&lt;li&gt;Binary options and synonymous products&lt;/li&gt;
&lt;li&gt;Cryptocurrencies and related content.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Advertisers offering Contracts for Difference, rolling spot forex, and financial spread betting will be required to be certified by Google before they can advertise through AdWords. Certification is only available in certain countries.&lt;/p&gt;
&lt;p&gt;To be certified by Google, advertisers will need to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Be licensed by the relevant financial services authority in the country or countries they are targeting&lt;/li&gt;
&lt;li&gt;Ensure their ads and landing pages comply with all AdWords policies&lt;/li&gt;
&lt;li&gt;Comply with relevant legal requirements, including those related to complex speculative financial products&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Advertisers can request certification with Google starting March 2018 when the application form is published.&lt;/p&gt;
&lt;p&gt;This policy will apply globally to all accounts that advertise these financial products. For more details, see &lt;a href=&quot;https://support.google.com/adwordspolicy/answer/7645254&quot;&gt;About restricted financial products certification&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(Posted March 2018)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 14 Mar 2018 09:11:26 +0000</pubDate>
<dc:creator>em3rgent0rdr</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://support.google.com/adwordspolicy/answer/7648803</dc:identifier>
</item>
<item>
<title>New Raspberry Pi Model B+</title>
<link>https://www.raspberrypi.org/blog/raspberry-pi-3-model-bplus-sale-now-35/</link>
<guid isPermaLink="true" >https://www.raspberrypi.org/blog/raspberry-pi-3-model-bplus-sale-now-35/</guid>
<description>&lt;p&gt;Here’s a long post. We think you’ll find it interesting. If you don’t have time to read it all, we recommend you watch this video, which will fill you in with everything you need, and then head straight to the &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/&quot;&gt;product page&lt;/a&gt; to fill yer boots. (We recommend the video anyway, even if you do have time for a long read. ‘Cos it’s fab.)&lt;/p&gt;
&lt;blockquote class=&quot;embedly-card&quot; data-card-controls=&quot;0&quot; data-card-theme=&quot;light&quot; data-card-key=&quot;25dbee0f6d6647cd915208cf783cf42d&quot; readability=&quot;10.527491408935&quot;&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=i62xdD4QKtA&quot;&gt;A BRAND-NEW PI FOR π DAY&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Raspberry Pi 3 Model B+ is now on sale now for $35, featuring: – A 1.4GHz 64-bit quad-core ARM Cortex-A53 CPU – Dual-band 802.11ac wireless LAN and Bluetooth 4.2 – Faster Ethernet (Gigabit Ethernet over USB 2.0) – Power-over-Ethernet support (with separate PoE HAT) – Improved PXE network and USB mass-storage booting – Improved thermal management Alongside a 200MHz increase in peak CPU clock frequency, we have roughly three times the wired and wireless network throughput, and the ability to sustain high performance for much longer periods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’ve been a Raspberry Pi watcher for a while now, you’ll have a bit of a feel for how we update our products. Just over two years ago, we &lt;a href=&quot;https://www.raspberrypi.org/blog/raspberry-pi-3-on-sale/&quot;&gt;released&lt;/a&gt; &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-3-model-b/&quot;&gt;Raspberry Pi 3 Model B&lt;/a&gt;. This was our first 64-bit product, and our first product to feature integrated wireless connectivity. Since then, we’ve sold over nine million Raspberry Pi 3 units (we’ve sold 19 million Raspberry Pis in total), which have been put to work in schools, homes, offices and factories all over the globe.&lt;/p&gt;
&lt;p&gt;Those Raspberry Pi watchers will know that we have a history of releasing improved versions of our products a couple of years into their lives. The first example was &lt;a href=&quot;https://www.raspberrypi.org/blog/introducing-raspberry-pi-model-b-plus/&quot;&gt;Raspberry Pi 1 Model B+&lt;/a&gt;, which added two additional USB ports, introduced our current form factor, and rolled up a variety of other feedback from the community. Raspberry Pi 2 didn’t get this treatment, of course, as it was superseded after only one year; but it feels like it’s high time that Raspberry Pi 3 received the “plus” treatment.&lt;/p&gt;
&lt;p&gt;So, without further ado, Raspberry Pi 3 Model B+ is &lt;strong&gt;&lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/&quot;&gt;now on sale for $35&lt;/a&gt;&lt;/strong&gt; (the same price as the existing Raspberry Pi 3 Model B), featuring:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A &lt;strong&gt;1.4GHz&lt;/strong&gt; 64-bit quad-core ARM Cortex-A53 CPU&lt;/li&gt;
&lt;li&gt;Dual-band &lt;strong&gt;802.11ac&lt;/strong&gt; wireless LAN and Bluetooth 4.2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Faster Ethernet&lt;/strong&gt; (Gigabit Ethernet over USB 2.0)&lt;/li&gt;
&lt;li&gt;Power-over-Ethernet support (with separate PoE HAT)&lt;/li&gt;
&lt;li&gt;Improved PXE network and USB mass-storage booting&lt;/li&gt;
&lt;li&gt;Improved thermal management&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Alongside a 200MHz increase in peak CPU clock frequency, we have roughly &lt;strong&gt;three times the wired and wireless network throughput&lt;/strong&gt;, and the ability to sustain high performance for much longer periods.&lt;/p&gt;
&lt;div id=&quot;attachment_42091&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A5614-2.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-42091&quot; src=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A5614-2-500x334.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;334&quot; srcset=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A5614-2-500x334.jpg 500w, https://www.raspberrypi.org/app/uploads/2018/03/770A5614-2-300x200.jpg 300w, https://www.raspberrypi.org/app/uploads/2018/03/770A5614-2-768x513.jpg 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Behold the shiny&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Raspberry Pi 3B+ is available to buy &lt;strong&gt;today&lt;/strong&gt; from our network of Approved Resellers.&lt;/p&gt;
&lt;h2&gt;New features, new chips&lt;/h2&gt;
&lt;p&gt;Roger Thornton did the design work on this revision of the Raspberry Pi. Here, he and I have a chat about what’s new.&lt;/p&gt;
&lt;blockquote class=&quot;embedly-card&quot; data-card-controls=&quot;0&quot; data-card-theme=&quot;light&quot; data-card-key=&quot;25dbee0f6d6647cd915208cf783cf42d&quot; readability=&quot;10.280201342282&quot;&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=zQZxdiz2UAs&quot;&gt;Introducing the Raspberry Pi 3 Model B+&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Raspberry Pi 3 Model B+ is now on sale now for $35, featuring: – A 1.4GHz 64-bit quad-core ARM Cortex-A53 CPU – Dual-band 802.11ac wireless LAN and Bluetooth 4.2 – Faster Ethernet (Gigabit Ethernet over USB 2.0) – Power-over-Ethernet support (with separate PoE HAT) – Improved PXE network and USB mass-storage booting – Improved thermal management Alongside a 200MHz increase in peak CPU clock frequency, we have roughly three times the wired and wireless network throughput, and the ability to sustain high performance for much longer periods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The new product is built around BCM2837B0, an updated version of the 64-bit Broadcom application processor used in Raspberry Pi 3B, which incorporates power integrity optimisations, and a heat spreader (that’s the shiny metal bit you can see in the photos). Together these allow us to reach higher clock frequencies (or to run at lower voltages to reduce power consumption), and to more accurately monitor and control the temperature of the chip.&lt;/p&gt;
&lt;p&gt;Dual-band wireless LAN and Bluetooth are provided by the Cypress CYW43455 “combo” chip, connected to a Proant PCB antenna similar to the one used on Raspberry Pi Zero W. Compared to its predecessor, Raspberry Pi 3B+ delivers somewhat better performance in the 2.4GHz band, and far better performance in the 5GHz band, as demonstrated by these iperf results from &lt;a href=&quot;https://libreelec.tv/&quot;&gt;LibreELEC&lt;/a&gt; developer Milhouse.&lt;/p&gt;
&lt;table&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td/&gt;
&lt;td&gt;Tx bandwidth (Mb/s)&lt;/td&gt;
&lt;td&gt;Rx bandwidth (Mb/s)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Raspberry Pi 3B&lt;/td&gt;
&lt;td&gt;35.7&lt;/td&gt;
&lt;td&gt;35.6&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Raspberry Pi 3B+ (2.4GHz)&lt;/td&gt;
&lt;td&gt;46.7&lt;/td&gt;
&lt;td&gt;46.3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Raspberry Pi 3B+ (5GHz)&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The wireless circuitry is encapsulated under a metal shield, rather fetchingly embossed with our logo. This has allowed us to certify the entire board as a radio module under FCC rules, which in turn will significantly reduce the cost of conformance testing Raspberry Pi-based products.&lt;/p&gt;
&lt;div id=&quot;attachment_42094&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a href=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A4973-1.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-42094&quot; src=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A4973-1-500x333.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;333&quot; srcset=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A4973-1-500x333.jpg 500w, https://www.raspberrypi.org/app/uploads/2018/03/770A4973-1-300x200.jpg 300w, https://www.raspberrypi.org/app/uploads/2018/03/770A4973-1-768x512.jpg 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;We’ll be teaching metalwork next.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Previous Raspberry Pi devices have used the LAN951x family of chips, which combine a USB hub and 10/100 Ethernet controller. For Raspberry Pi 3B+, Microchip have supported us with an upgraded version, LAN7515, which supports Gigabit Ethernet. While the USB 2.0 connection to the application processor limits the available bandwidth, we still see roughly a threefold increase in throughput compared to Raspberry Pi 3B. Again, here are some typical iperf results.&lt;/p&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td/&gt;
&lt;td&gt;Tx bandwidth (Mb/s)&lt;/td&gt;
&lt;td&gt;Rx bandwidth (Mb/s)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Raspberry Pi 3B&lt;/td&gt;
&lt;td&gt;94.1&lt;/td&gt;
&lt;td&gt;95.5&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Raspberry Pi 3B+&lt;/td&gt;
&lt;td&gt;315&lt;/td&gt;
&lt;td&gt;315&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;We use a magjack that supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Power_over_Ethernet&quot;&gt;Power over Ethernet (PoE)&lt;/a&gt;, and bring the relevant signals to a new 4-pin header. We will shortly launch a PoE HAT which can generate the 5V necessary to power the Raspberry Pi from the 48V PoE supply.&lt;/p&gt;
&lt;div id=&quot;attachment_42096&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a href=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A4945.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-42096&quot; src=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A4945-500x333.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;333&quot; srcset=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A4945-500x333.jpg 500w, https://www.raspberrypi.org/app/uploads/2018/03/770A4945-300x200.jpg 300w, https://www.raspberrypi.org/app/uploads/2018/03/770A4945-768x512.jpg 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;There… are… four… pins!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;attachment_42260&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a href=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A6342.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-42260&quot; src=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A6342-500x336.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;336&quot; srcset=&quot;https://www.raspberrypi.org/app/uploads/2018/03/770A6342-500x336.jpg 500w, https://www.raspberrypi.org/app/uploads/2018/03/770A6342-300x201.jpg 300w, https://www.raspberrypi.org/app/uploads/2018/03/770A6342-768x515.jpg 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Coming soon to a Raspberry Pi 3B+ near you&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Raspberry Pi 3B was our first product to support PXE Ethernet boot. Testing it in the wild shook out a number of compatibility issues with particular switches and traffic environments. Gordon has rolled up fixes for all known issues into the BCM2837B0 boot ROM, and PXE boot is now enabled by default.&lt;/p&gt;
&lt;h2&gt;Clocking, voltages and thermals&lt;/h2&gt;
&lt;p&gt;The improved power integrity of the BCM2837B0 package, and the improved regulation accuracy of our new MaxLinear MxL7704 power management IC, have allowed us to tune our clocking and voltage rules for both better peak performance and longer-duration sustained performance.&lt;/p&gt;
&lt;p&gt;Below 70°C, we use the improvements to &lt;em&gt;increase&lt;/em&gt; the core frequency to 1.4GHz. Above 70°C, we drop to 1.2GHz, and use the improvements to &lt;em&gt;decrease&lt;/em&gt; the core voltage, increasing the period of time before we reach our 80°C thermal throttle; the reduction in power consumption is such that many use cases will never reach the throttle. Like a modern smartphone, we treat the thermal mass of the device as a resource, to be spent carefully with the goal of optimising user experience.&lt;/p&gt;
&lt;p&gt;This graph, courtesy of &lt;a href=&quot;https://freelance.halfacree.co.uk/&quot;&gt;Gareth Halfacree&lt;/a&gt;, demonstrates that Raspberry Pi 3B+ runs faster and at a lower temperature for the duration of an eight‑minute quad‑core Sysbench CPU test.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/app/uploads/2018/03/sysbench-2.png&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-42236&quot; src=&quot;https://www.raspberrypi.org/app/uploads/2018/03/sysbench-2-500x378.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;378&quot; srcset=&quot;https://www.raspberrypi.org/app/uploads/2018/03/sysbench-2-500x378.png 500w, https://www.raspberrypi.org/app/uploads/2018/03/sysbench-2-300x227.png 300w, https://www.raspberrypi.org/app/uploads/2018/03/sysbench-2-768x581.png 768w, https://www.raspberrypi.org/app/uploads/2018/03/sysbench-2-1428x1080.png 1428w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that Raspberry Pi 3B+ does consume substantially more power than its predecessor. &lt;strong&gt;We strongly encourage you to use a high-quality 2.5A power supply&lt;/strong&gt;, such as the official &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-universal-power-supply/&quot;&gt;Raspberry Pi Universal Power Supply&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;FAQs&lt;/h2&gt;
&lt;p&gt;We’ll keep updating this list over the next couple of days, but here are a few to get you started.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Are you discontinuing earlier Raspberry Pi models?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No. We have a lot of industrial customers who will want to stick with the existing products for the time being. We’ll keep building these models for as long as there’s demand. Raspberry Pi 1B+, Raspberry Pi 2B, and Raspberry Pi 3B will continue to sell for $25, $35, and $35 respectively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What about Model A+?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi 1A+ continues to be the $20 entry-level “big” Raspberry Pi for the time being. We are considering the possibility of producing a Raspberry Pi 3A+ in due course.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What about the Compute Module?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CM1, CM3 and CM3L will continue to be available. We may offer versions of CM3 and CM3L with BCM2837B0 in due course, depending on customer demand.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Are you still using VideoCore?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yes. VideoCore IV 3D is the only publicly-documented 3D graphics core for ARM‑based SoCs, and we want to make Raspberry Pi more open over time, not less.&lt;/p&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;A project like this requires a vast amount of focused work from a large team over an extended period. Particular credit is due to Roger Thornton, who designed the board and ran the exhaustive (and exhausting) RF compliance campaign, and to the team at the Sony UK Technology Centre in Pencoed, South Wales. A partial list of others who made major direct contributions to the BCM2837B0 chip program, CYW43455 integration, LAN7515 and MxL7704 developments, and Raspberry Pi 3B+ itself follows:&lt;/p&gt;
&lt;p&gt;James Adams, David Armour, Jonathan Bell, Maria Blazquez, Jamie Brogan-Shaw, Mike Buffham, Rob Campling, Cindy Cao, Victor Carmon, KK Chan, Nick Chase, Nigel Cheetham, Scott Clark, Nigel Clift, Dominic Cobley, Peter Coyle, John Cronk, Di Dai, Kurt Dennis, David Doyle, Andrew Edwards, Phil Elwell, John Ferdinand, Doug Freegard, Ian Furlong, Shawn Guo, Philip Harrison, Jason Hicks, Stefan Ho, Andrew Hoare, Gordon Hollingworth, Tuomas Hollman, EikPei Hu, James Hughes, Andy Hulbert, Anand Jain, David John, Prasanna Kerekoppa, Shaik Labeeb, Trevor Latham, Steve Le, David Lee, David Lewsey, Sherman Li, Xizhe Li, Simon Long, Fu Luo Larson, Juan Martinez, Sandhya Menon, Ben Mercer, James Mills, Max Passell, Mark Perry, Eric Phiri, Ashwin Rao, Justin Rees, James Reilly, Matt Rowley, Akshaye Sama, Ian Saturley, Serge Schneider, Manuel Sedlmair, Shawn Shadburn, Veeresh Shivashimper, Graham Smith, Ben Stephens, Mike Stimson, Yuree Tchong, Stuart Thomson, John Wadsworth, Ian Watch, Sarah Williams, Jason Zhu.&lt;/p&gt;
&lt;p&gt;If you’re not on this list and think you should be, please let me know, and accept my apologies.&lt;/p&gt;
</description>
<pubDate>Wed, 14 Mar 2018 07:03:05 +0000</pubDate>
<dc:creator>nnnnnick</dc:creator>
<og:type>article</og:type>
<og:title>Raspberry Pi 3 Model B+ on sale now at $35 - Raspberry Pi</og:title>
<og:description>Raspberry Pi 3 Model B+ is now on sale for $35 (the same price as the existing Raspberry Pi 3), featuring a 1.4GHz 64-bit quad-core processor, 3x faster Ethernet, faster wireless LAN, and more.</og:description>
<og:url>https://www.raspberrypi.org/blog/raspberry-pi-3-model-bplus-sale-now-35/</og:url>
<og:image>https://www.raspberrypi.org/app/uploads/2018/03/770A5614-3-500x334.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.raspberrypi.org/blog/raspberry-pi-3-model-bplus-sale-now-35/</dc:identifier>
</item>
<item>
<title>Questioning the motive behind the security allegations against AMD</title>
<link>https://www.gamersnexus.net/industry/3260-assassination-attempt-on-amd-by-viceroy-research-cts-labs</link>
<guid isPermaLink="true" >https://www.gamersnexus.net/industry/3260-assassination-attempt-on-amd-by-viceroy-research-cts-labs</guid>
<description>&lt;p&gt;(The story continues after the video, though the video below provides an option for those preferring the visual medium)&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/ZZ7H1WTqaeo&quot; width=&quot;640&quot; height=&quot;390&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;h3&gt;What is the Alleged Exploit?&lt;/h3&gt;
&lt;p&gt;There are &lt;a href=&quot;https://www.amdflaws.com/&quot;&gt;four categories of exploit listed&lt;/a&gt;, named “Masterkey,” “Ryzenfall,” “Fallout,” and “Chimera.” Each has a section in the whitepaper explaining the concept of the vulnerability, a list of affected processors, potential consequences, and “mitigations,” although this last section is usually left empty. Three of the exploits require that “an attacker be able to run a program with local-machine elevated administrator privileges. Accessing the Secure Processor is done through a vendor supplied driver that is digitally signed,” while Masterkey “requires an attacker to be able to re-flash the BIOS with a specially crafted BIOS update.” This would theoretically be done remotely on a system that supports BIOS flashing from within the OS. One of the experts we contacted pointed out that, with local admin access or the ability to flash BIOS, an attacker would probably be able to install malware on any system, AMD or not. Intel is proportionally affected in this position.&lt;/p&gt;

&lt;p&gt;The worst consequence listed is “persistent, virtually undetectable espionage” “surviving computer reboots and reinstallations of the operating system.” That’s part of Masterkey. The Ryzenfall and Fallout exploits allegedly could enable an attacker to break into System Management Mode using flaws in the AMD Secure OS and EPYC boot loader respectively. This could in turn be used to enable BIOS flashing for the Masterkey exploit, which seems to be the main focus of the paper. This is theoretical, as the paper opens with “to ensure public safety, all technical details that could be used to reproduce the vulnerabilities have been redacted from this document.” That means no proofs of concept or example code, other than a picture of an EPYC system whose BIOS screen has been modified to say “1337” in one corner.&lt;/p&gt;



&lt;p&gt;Chimera is the final exploit, and has to do with AMD’s use of ASMedia chips. CTS claims that the ASMedia ICs in the AMD “Promontory” chipset “have sub-standard security and no mitigations against exploitation. They are plagued with security vulnerabilities in both firmware and hardware, allowing attackers to run arbitrary code inside the chip, or to re-flash the chip with persistent malware.” They claim to have successfully taken advantage of these vulnerabilities, but again, it requires local admin access and a signed driver.&lt;/p&gt;

&lt;h3&gt;How Was the Exploit Presented?&lt;/h3&gt;
&lt;p&gt;We’ll get to the company’s credentials in a moment, as those are suspect, but let’s start with the presentation of this vulnerability by CTS Labs.&lt;/p&gt;
&lt;p&gt;Contrasting the &lt;a href=&quot;https://meltdownattack.com/&quot;&gt;Meltdown and Spectre whitepapers&lt;/a&gt;, the CTS Labs whitepaper on claimed AMD vulnerabilities is bereft of any example code, and is written with a tone that attacks companies, rather than addressing the technology that is allegedly flawed. This is the most concerning, as the writing is charged and appears emotionally motivated, rather than taking an approach of objectively outlining the exploits and detailing the technology.&lt;/p&gt;
&lt;p&gt;A primary concern is the window of time provided to AMD: For Spectre and Meltdown, AMD, ARM, and Intel were provided minimally six months to build security patches prior to the public unveiling of exploits. This is in the best interest of the public. CTS Labs, meanwhile, purportedly unveiled its findings to press and analysts &lt;em&gt;prior&lt;/em&gt; to reporting the alleged exploit to AMD. AMD was given 24 hours notice before the news embargo lift on the story, which is clearly not enough time to respond to such allegations.&lt;/p&gt;
&lt;h3&gt;Aggressive Presentation&lt;/h3&gt;
&lt;p&gt;For one example of aggressive writing, the report focuses on leveraging ad hominem attacks, including, from the first 3 pages of the report, the following quotes: ““The Ryzen chipset, a core system component that AMD outsourced to a Taiwanese chip manufacturer, ASMedia, is currently being shipped with exploitable manufacturer backdoors inside.”&lt;/p&gt;
&lt;p&gt;Another quote: “We note with concern that AMD’s outsource partner, ASMedia, is a subsidiary of ASUSTeK Computer, a company that has recently been penalized by the Federal Trade Commission for neglecting security vulnerabilities and put under mandatory external security audits for the next 20 years.”&lt;/p&gt;
&lt;p&gt;And another: “In our opinion, the basic nature of some of these vulnerabilities amounts to complete disregard of fundamental security principles. This raises concerning questions regarding security practices, auditing, &lt;em&gt;and quality controls at AMD&lt;/em&gt;.”&lt;/p&gt;
&lt;p&gt;Let’s do one more for good measure: “AMD’s latest generation Vega GPUs, which also have Secure Processor inside of them, are being integrated as deep-learning accelerators on self-driving cars.”&lt;/p&gt;
&lt;p&gt;This is fear-mongering, plain and simple. It’s the old “self-driving cars will kill you” shtick, except applied to AMD’s Vega GPUs, which haven’t even been directly proven as being affected by this alleged exploit.&lt;/p&gt;
&lt;p&gt;This is the language used to drive emotion, particularly in investors, and does not coincide with standard language used in a technical whitepaper. There is almost zero focus on technical exploits; again, the fact that the only functioning presentation of the code pertains to replacing a BIOS boot code with “1337” sort of says it all.&lt;/p&gt;
&lt;h3&gt;“You Are Advised That We May Have [...] An Economic Interest”&lt;/h3&gt;

&lt;p&gt;As for the CTS Labs website, the posted &lt;a href=&quot;https://www.amdflaws.com/disclaimer.html&quot;&gt;legal disclaimer has some boilerplate&lt;/a&gt; CYA language, but also has some questionable language: In one part, the disclaimer states, quote, “the report and all statements contained herein are opinions of CTS and are not statements of fact.” Another legal statement notes: “Although we have a good faith belief in our analysis and believe it to be objective and unbiased, you are advised that we may have, either directly or indirectly, an economic interest in the performance of the securities of the companies whose products are the subject of our reports.”&lt;/p&gt;
&lt;h3&gt;Who Is CTS Labs?&lt;/h3&gt;
&lt;p&gt;We’ve contacted security experts we’ve worked with on Meltdown and Spectre stories, and have requested scrutiny over the CTS Labs reports. Although some have stated off-record that there may be some legitimacy to the exploit, none yet have heard of CTS Labs. &lt;a href=&quot;http://ir.amd.com/news-releases/news-release-details/view-our-corner-street-0&quot;&gt;AMD’s own statement&lt;/a&gt; insinuates similar unfamiliarity with CTS Labs, where the company says:&lt;/p&gt;
&lt;p&gt;“We have just received a report from a company called CTS Labs claiming there are potential security vulnerabilities related to certain of our processors. We are actively investigating and analyzing its findings. This company was previously unknown to AMD and we find it unusual for a security firm to publish its research to the press without providing a reasonable amount of time for the company to investigate and address its findings.” - &lt;a href=&quot;http://ir.amd.com/news-releases/news-release-details/view-our-corner-street-0&quot;&gt;AMD&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Unreachable PR Company&lt;/h3&gt;
&lt;p&gt;When we first saw the &lt;a href=&quot;https://www.businesswire.com/news/home/20180313005893/en/AMD-Processors-Severe-Security-Advisory-Announced-CTS&quot;&gt;press release&lt;/a&gt;, we reached-out to the listed Bevel PR phone number and publicly listed contact, Jessica Schaefer, to learn more about the CTS Labs research company. We won’t show it on screen, but looking through personal social media pages, we were able to find that Bevel PR appears to have been founded in 2017, and that it is staffed primarily or entirely by one individual. The Bevel PR phone number went straight to a full inbox and we were unable to get into contact. We have also reached-out to Schaefer through other contact media. We’ve never heard of Bevel PR before, but their webpage indicates that they have some experience working with ICOs and hedge funds. This pointed us in the next direction.&lt;/p&gt;
&lt;h3&gt;Startup Security Company&lt;/h3&gt;

&lt;p&gt;CTS Labs is a new company: The &lt;a href=&quot;https://cts-labs.com&quot;&gt;CTS-labs.com&lt;/a&gt; domain name was &lt;a href=&quot;https://whois.icann.org/en/lookup?name=cts-labs.com&quot;&gt;registered on June 25, 2017&lt;/a&gt;, around when the Meltdown exploits were privately revealed to Intel. AMDFlaws.com, the domain that lists the exploit whitepaper, was &lt;a href=&quot;https://whois.icann.org/en/lookup?name=amdflaws.com&quot;&gt;registered on February 22, 2018&lt;/a&gt;. Both are GoDaddy domains. There is an IntelFlaws website, but we contacted the owner and there is no affiliation. The owner is an individual and was bewildered by our cold call, and we’d readily take their word on lack of affiliation.&lt;/p&gt;
&lt;h3&gt;Potential Involvement with Financial Groups&lt;/h3&gt;

&lt;p&gt;CTS Labs lists one &lt;a href=&quot;http://cts-labs.com/management-team&quot;&gt;Yaron Luk-Zilberman&lt;/a&gt; as the Chief Financial Officer. We found &lt;a href=&quot;https://www.sec.gov/Archives/edgar/data/1517621/000151762118000001/xslFormDX01/primary_doc.xml&quot;&gt;SEC documents containing information&lt;/a&gt; on Yaron Luk-Zilberman and noted that he supposedly has affiliation with NineWells Capital Management, LLC, a hedge-fund and investment management firm. Luk-Zilberman is listed as in a management position at the company. We attempted to call the phone numbers listed for Luk-Zilberman on official government documents, but found that the numbers were disconnected or invalid.&lt;/p&gt;
&lt;h3&gt;Misleading, Green Screen Offices&lt;/h3&gt;


&lt;p&gt;The &lt;a href=&quot;https://www.youtube.com/channel/UCJ_lbUAqBgM54eEdIsv3llg&quot;&gt;CTS Labs YouTube account&lt;/a&gt; was registered three days ago, at time of writing, and presently has disabled comments on videos. The default is enabled, so they were likely manually toggled off. Video backgrounds are stock footage -- &lt;a href=&quot;https://www.shutterstock.com/image-photo/fashion-modern-office-interiors-483411280&quot;&gt;something&lt;/a&gt; we can &lt;a href=&quot;https://www.shutterstock.com/image-illustration/computer-notebook-on-working-place-office-332087582&quot;&gt;demonstrate&lt;/a&gt; -- and are &lt;a href=&quot;https://www.shutterstock.com/video/clip-12717176-stock-footage-data-center-server-room-seamless-loop.html?src=/c1UCORCokdc7kyoIyOUQXA:2:16&quot;&gt;available&lt;/a&gt; from Shutterstock for download. These videos were not shot in real offices; well, not offices that are owned by CTS Labs.&lt;/p&gt;
&lt;p&gt;As for the logo, it appears that CTS Labs is using a &lt;a href=&quot;https://www.shutterstock.com/image-vector/shield-initial-letter-d-logo-design-685357945&quot;&gt;modified version of a Shutterstock&lt;/a&gt; Electronic Shield logo design that we found.&lt;/p&gt;
&lt;p&gt;The company looks suspect. It’s possible that this is a new security firm that just grabbed some stock assets because they didn’t have anything better, but this is all information to consider when determining the motive of the publication.&lt;/p&gt;
&lt;h3&gt;The Ravings of a Lunatic&lt;/h3&gt;

&lt;p&gt;On that note, we must also look to Viceroy Research: Viceroy was the first group to report in great detail on the alleged AMD vulnerability, and managed to &lt;a href=&quot;https://viceroyresearch.files.wordpress.com/2018/03/amd-the-obituary-13-mar-2018.pdf&quot;&gt;publish a 25-page PDF&lt;/a&gt; almost immediately upon the disclosure of the supposed exploits. We believe this was pre-written. The PDF is entitled “AMD - The Obituary,” and seems motivated to inflict fear and cause damage. Some quotes state, for instance, “Just one Ryzen chip could danger an entire enterprise network,” or “AMD’s flawed chips are components in defense products.” One last quote that you’ll like: “We believe AMD is worth $0.00, and will have no choice but to file for Chapter 11 Bankruptcy in order to effectively deal with the repercussions of recent discoveries.”&lt;/p&gt;
&lt;p&gt;At best, this is fear-mongering, but at worst, as Viceroy themselves have directly implied, there could be financial motivation.&lt;/p&gt;
&lt;h3&gt;“Assume We Have a Position on the Stock”&lt;/h3&gt;
&lt;p&gt;Viceroy joined &lt;a href=&quot;https://www.businesslive.co.za/bd/companies/financial-services/2017-12-15-how-did-short-seller-viceroy-dig-out-the-info-to-make-a-killing-on-steinhoff/&quot;&gt;BusinessDay&lt;/a&gt; for an interview in 2017. When asked by the magazine what Viceroy is, the group responded: “We’re an independent research group based in the US. Our focus is to research entities that we find have signs of accounting irregularities and potential fraud.” When asked why, the group stated: “We take a financial position in our research, and our readers should assume we have a position on the stock.”&lt;/p&gt;
&lt;p&gt;The group also remains anonymous.&lt;/p&gt;
&lt;p&gt;If we assume that Viceroy has a position on AMD’s stock, as they’ve instructed us to do, we would assume it’s a short position -- and AMD’s recent uptrend would impact that negatively. We aren’t making any leaps, here: Viceroy themselves state to assume a financial position on stocks. Literally.&lt;/p&gt;
&lt;p&gt;The ravings of the Viceroy paper really look like that of a deranged lunatic -- like something you’d find smeared on the walls in a back alley. The language is histrionic and hyperbolic. It’s a joke.&lt;/p&gt;
&lt;h3&gt;Recap&lt;/h3&gt;
&lt;p&gt;In speaking with multiple security experts off-record, we have it on good authority that the proposed vulnerabilities are &lt;em&gt;potentially&lt;/em&gt; legitimate; however, our present understanding is that these alleged vulnerabilities: (1) Are not unique to AMD, (2) may require root access to the host system, and (3) are blown way out of proportion, if legitimate at all.&lt;/p&gt;
&lt;p&gt;Viceroy’s peculiar involvement in all of this is the most vexing, particularly when going on-record in an interview to demand an assumption of financial involvement. Had this been presented as a demonstration of technology and its limitations or flaws, that’d be one thing, but this was presented as a hit piece on AMD by both CTS Labs and Viceroy. Any researchers with their names publicly attached to this fracas should be ashamed.&lt;/p&gt;
&lt;p&gt;Finally, because we’ve seen the conspiracy theories, we have asked Intel if the company has any comment on this whole thing. Intel responded to GamersNexus with a statement:&lt;/p&gt;
&lt;p&gt;&quot;Intel had no involvement in the CTS Labs security advisory.&quot; - Intel statement to GamersNexus&lt;/p&gt;
&lt;p&gt;It would seem far more likely, we think, that individual investment groups had something to gain. Be sure to &lt;a href=&quot;https://www.twitter.com/gamersnexus&quot;&gt;follow us&lt;/a&gt; for additional news. Our video coverage is forthcoming.&lt;/p&gt;
&lt;p&gt;Host, Editorial: Steve Burke&lt;br/&gt;Editorial: Patrick Lathan&lt;br/&gt;Video: Andrew Coleman&lt;/p&gt;
</description>
<pubDate>Wed, 14 Mar 2018 05:40:54 +0000</pubDate>
<dc:creator>lathiat</dc:creator>
<og:url>https://www.gamersnexus.net/industry/3260-assassination-attempt-on-amd-by-viceroy-research-cts-labs</og:url>
<og:title>Assassination Attempt on AMD by Viceroy Research &amp; CTS Labs, AMD &quot;Should Be $0&quot;</og:title>
<og:type>article</og:type>
<og:image>https://www.gamersnexus.net/media/k2/items/cache/6298409edce707e5033953f324dc58ef_M.jpg</og:image>
<og:description>There are roots in legitimacy here, but as we dug deep into the origins of the companies involved in this new hit piece on AMD, we found peculiar financial connections that make us question the motive behind the reportage.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.gamersnexus.net/industry/3260-assassination-attempt-on-amd-by-viceroy-research-cts-labs</dc:identifier>
</item>
<item>
<title>Google will ban all cryptocurrency-related advertising</title>
<link>https://www.cnbc.com/2018/03/13/google-bans-crypto-ads.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2018/03/13/google-bans-crypto-ads.html</guid>
<description>&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;19004&quot; data-inline-quote-symbol=&quot;GOOGL&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=GOOGL&quot;&gt;Google&lt;/a&gt; is cracking down on cryptocurrency-related advertising.&lt;/p&gt;
&lt;p&gt;The company is updating its financial services-related ad policies to ban any advertising about cryptocurrency-related content, including initial coin offerings (ICOs), wallets, and trading advice, Google's director of sustainable ads, Scott Spencer, told CNBC.&lt;/p&gt;
&lt;p&gt;That means that even companies with legitimate cryptocurrency offerings won't be allowed to serve ads through any of Google's ad products, which place advertising on its own sites as well as third-party websites.&lt;/p&gt;

&lt;p&gt;This update will go into effect in June 2018, &lt;a class=&quot;inline_asset&quot; href=&quot;https://support.google.com/adwordspolicy/topic/3230816?hl=en&amp;amp;ref_topic=1308156,&quot; title=&quot;https://support.google.com/adwordspolicy/topic/3230816?hl=en&amp;amp;ref_topic=1308156,&quot;&gt;according to a company post.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&quot;We don't have a crystal ball to know where the future is going to go with cryptocurrencies, but we've seen enough consumer harm or potential for consumer harm that it's an area that we want to approach with extreme caution,&quot; Scott said.&lt;/p&gt;
&lt;p&gt;Google's hard-line approach follows a similar ban &lt;a href=&quot;https://www.cnbc.com/2018/01/30/facebook-cryptocurrency-ads-banned--including-bitcoin-and-icos.html&quot;&gt;that Facebook announced earlier this year.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While the crypto-currency boom has produced a lot of &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.nytimes.com/2018/01/13/style/bitcoin-millionaires.html&quot; title=&quot;https://www.nytimes.com/2018/01/13/style/bitcoin-millionaires.html&quot;&gt;excitement and wealth&lt;/a&gt;, it's still a largely &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.nytimes.com/2018/02/05/technology/virtual-currency-regulation.html&quot; title=&quot;https://www.nytimes.com/2018/02/05/technology/virtual-currency-regulation.html&quot;&gt;unregulated space&lt;/a&gt; and has spawned &lt;a href=&quot;https://www.cnbc.com/2018/03/09/cryptocurrency-scammers-of-giza-make-off-with-2-million-after-ico.html&quot;&gt;countless high-profile scams&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This news comes as Google releases its annual &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.blog.google/topics/ads/advertising-ecosystem-works-everyone/&quot; title=&quot;https://www.blog.google/topics/ads/advertising-ecosystem-works-everyone/&quot;&gt;&quot;trust and safety&quot; ads report.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google said it took down more than 3.2 billion ads in 2017 that violated its policies, which is nearly double the 1.7 billion it removed the year before.&lt;/p&gt;
&lt;p&gt;Google parent company Alphabet makes &lt;a href=&quot;https://www.cnbc.com/2018/02/02/alphabet-business-units-revenue-contribution-and-ceos.html&quot;&gt;roughly 84 percent of its total revenue&lt;/a&gt; from advertising, so convincing advertisers that its ecosystem is safe and effective is critically important.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;/&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;/&gt;</description>
<pubDate>Wed, 14 Mar 2018 04:11:50 +0000</pubDate>
<dc:creator>lnguyen</dc:creator>
<og:type>article</og:type>
<og:url>https://www.cnbc.com/2018/03/13/google-bans-crypto-ads.html</og:url>
<og:image>https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2017/07/21/104602233-GettyImages-684226980-Sundar-Pichai-.1910x1000.jpg</og:image>
<og:title>Google will ban all cryptocurrency-related advertising</og:title>
<og:description>Google will stop serving any ads related to cryptocurrencies.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2018/03/13/google-bans-crypto-ads.html</dc:identifier>
</item>
<item>
<title>Stephen Hawking has died</title>
<link>http://www.bbc.com/news/uk-43396008</link>
<guid isPermaLink="true" >http://www.bbc.com/news/uk-43396008</guid>
<description>&lt;figure class=&quot;media-with-caption&quot; readability=&quot;-24&quot;&gt;&lt;div class=&quot;player-with-placeholder&quot; readability=&quot;7&quot;&gt;
            &lt;img class=&quot;media-placeholder player-with-placeholder__image lead-video-placeholder&quot; src=&quot;https://ichef.bbci.co.uk/images/ic/720x405/p0612y7y.jpg&quot;/&gt;&lt;p&gt;Media playback is unsupported on your device&lt;/p&gt;
      
    &lt;/div&gt;    &lt;figcaption class=&quot;media-with-caption__caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Media caption&lt;/span&gt;Looking back on the life of Stephen Hawking&lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;World renowned physicist Stephen Hawking has died at the age of 76.&lt;/p&gt;&lt;p&gt;He died peacefully at his home in Cambridge in the early hours of Wednesday, his family said. &lt;/p&gt;&lt;p&gt;The British scientist was famed for his work with black holes and relativity, and wrote several popular science books including A Brief History of Time.&lt;/p&gt;&lt;p&gt;At the age of 22 &lt;a href=&quot;http://www.bbc.co.uk/news/topics/cvenzmgyll1t/stephen-hawking&quot; class=&quot;story-body__link&quot;&gt;Prof Hawking&lt;/a&gt; was given only a few years to live after being diagnosed with a rare form of motor neurone disease.&lt;/p&gt;&lt;p&gt;The illness left him in a wheelchair and largely unable to speak except through a voice synthesiser.&lt;/p&gt;&lt;p&gt;In a statement his children, Lucy, Robert and Tim, said: &quot;We are deeply saddened that our beloved father passed away today.&lt;/p&gt;&lt;p&gt;&quot;He was a great scientist and an extraordinary man whose work and legacy will live on for many years.&quot;&lt;/p&gt;&lt;p&gt;They praised his &quot;courage and persistence&quot; and said his &quot;brilliance and humour&quot; inspired people across the world.&lt;/p&gt;&lt;p&gt;&quot;He once said, 'It would not be much of a universe if it wasn't home to the people you love.' We will miss him forever.&quot; &lt;/p&gt;&lt;p&gt;A book of condolence has been opened at Gonville and Caius College in Cambridge, where Prof Hawking was a fellow. &lt;/p&gt;&lt;figure class=&quot;media-with-caption&quot; readability=&quot;-24&quot;&gt;&lt;div class=&quot;player-with-placeholder&quot; readability=&quot;7&quot;&gt;
            &lt;img class=&quot;media-placeholder player-with-placeholder__image narrative-audio-placeholder&quot; src=&quot;https://ichef.bbci.co.uk/images/ic/720x405/p0612hvk.jpg&quot;/&gt;&lt;p&gt;Media playback is unsupported on your device&lt;/p&gt;
      
    &lt;/div&gt;    &lt;figcaption class=&quot;media-with-caption__caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Media caption&lt;/span&gt;Professor Brian Cox on the legacy and wonder of Hawking's work&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Prof Hawking was the first to set out a theory of cosmology as a union of relativity and quantum mechanics. &lt;/p&gt;&lt;p&gt;He also discovered that black holes leak energy and fade to nothing - a phenomenon that would later become known as Hawking radiation. &lt;/p&gt;&lt;p&gt;Through his work with mathematician Sir Roger Penrose he demonstrated that &lt;a href=&quot;http://www.bbc.co.uk/news/av/science-environment-34921000/what-is-albert-einstein-s-theory-of-general-relativity&quot; class=&quot;story-body__link&quot;&gt;Einstein's general theory of relativity&lt;/a&gt; implies space and time would have a beginning in the Big Bang and an end in black holes.&lt;/p&gt;&lt;p&gt;The scientist gained popularity outside the academic world and appeared in several TV shows including The Simpsons, Red Dwarf and The Big Bang Theory.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;He was portrayed in both TV and film - recently by Oscar winner Eddie Redmayne in The Theory of Everything, which charted his rise to fame and relationship with his first wife, Jane. &lt;/p&gt;&lt;p&gt;The actor paid tribute to him, saying:  &quot;We have lost a truly beautiful mind, an astonishing scientist and the funniest man I have ever had the pleasure to meet.&quot;&lt;/p&gt;&lt;p&gt;Benedict Cumberbatch, who played Prof Hawking in a BBC drama, said he was &quot;a true inspiration for me and for millions around the world&quot;.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;BBC/PA&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Stephen Hawking was portrayed on TV and film by Benedict Cumberbatch and Eddie Redmayne
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;His most famous book - A Brief History of Time - has now shot to the top of the Amazon Best Sellers list.&lt;/p&gt;&lt;p&gt;The Motor Neurone Disease Association, of which Prof Hawking had been a patron since 2008, reported that &lt;a href=&quot;https://twitter.com/mndassoc/status/973843848177831937&quot; class=&quot;story-body__link-external&quot;&gt;its website had crashed&lt;/a&gt; because of an influx of donations to the charity. &lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Factfile: Stephen Hawking&lt;/h2&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;Born 8 January 1942 in Oxford, England&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Earned place at Oxford University to read natural science in 1959, before studying for his PhD at Cambridge&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;By 1963, was diagnosed with motor neurone disease and given two years to live&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Outlined his theory that black holes emit &quot;Hawking radiation&quot; in 1974&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;In 1979, he became the Lucasian Professor of Mathematics at Cambridge - a post once held by Sir Isaac Newton&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Published his book A Brief History of Time in 1988, which has sold more than 10 million copies&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;In the late 1990s, he was reportedly offered a knighthood, but 10 years later revealed he had turned it down over issues with the government's funding for science&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Tributes have poured in for Prof Hawking since the announcement of his death. &lt;/p&gt;&lt;p&gt;Prof Lord Martin Rees, the Astronomer Royal, who was at university with Prof Hawking when he was diagnosed, said his friend had &quot;amazing willpower and determination&quot;. &lt;/p&gt;&lt;p&gt;Prime Minister Theresa May called him a &quot;brilliant and extraordinary mind&quot; and &quot;one of the great scientists of his generation&quot;.&lt;/p&gt;&lt;p&gt;Labour leader Jeremy Corbyn praised the scientist for his &quot;determination to explain the mysteries of the cosmos&quot; and his &quot;burning passion to protect our National Health Service.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Sir Tim Berners-Lee, inventor of the web, said: &quot;We have lost a colossal mind and a wonderful spirit. Rest in peace, Stephen Hawking,&quot; he said.&lt;/p&gt;&lt;p&gt;The vice chancellor of the University of Cambridge - where Prof Hawking had studied and worked - Professor Stephen Toope, said he was a &quot;unique individual&quot; who would be remembered with &quot;warmth and affection&quot;. &lt;/p&gt;&lt;p&gt;Prof James Hartle, who worked with him to create the Hartle-Hawking wavefunction to explain the Big Bang, said Prof Hawking had a &quot;unique&quot; ability to &quot;see through all the clutter in physics&quot; and get to the point.  &lt;/p&gt;&lt;p&gt;He told BBC Radio Four's Today programme: &quot;My memory of him would be… first our work together as scientists and, second, as a human being whose whole story is a triumph over adversity [and] who inspired a lot of people, including me.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;The comedian and presenter of the BBC's Stargazing Live Dara O'Briain said the scientist had an &quot;immeasurable life&quot; and &quot;one of the few people I would call a hero of mine&quot;.&lt;/p&gt;&lt;p&gt;Theoretical physicist, professor Jim Al-Khalili, from Surrey University said Prof Hawking had a tremendous sense of humour. &lt;/p&gt;&lt;p&gt;He told BBC Radio Surrey: &quot;He was a fun loving guy. Inside that shell, inside that body that was paralysed, was someone who was full of vigour, full of passion for life.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Hawking's discoveries&lt;/h2&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;With the Oxford mathematician Roger Penrose, he showed that if there was a Big Bang, it must have started from an infinitely small point - a singularity&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Black holes radiate energy known as Hawking radiation, while gradually losing mass. This is due to quantum effects near the edge of the black hole, a region called the event horizon&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;He predicted the existence of mini-black holes at the time of the Big Bang. These black holes would have shed mass until they vanished, potentially ending their lives in an explosion that would release vast amounts of energy&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;In the 1970s, Hawking considered whether the particles and light that enter a black hole were ultimately destroyed if the black hole evaporated. Hawking initially thought that this &quot;information&quot; was lost from the Universe. But the US physicist Leonard Susskind disagreed. These ideas became known as the information paradox. In 2004, Hawking conceded that the information must be conserved&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;British astronaut Tim Peake said Prof Hawking &quot;inspired generations to look beyond our own blue planet and expand our understanding of the universe&quot;.&lt;/p&gt;&lt;p&gt;Gian Giudice, head of theoretical physics at the European nuclear research laboratory CERN, said Prof Hawking had a &quot;great impact&quot; on the centre's research, adding: &quot;A giant of our field has left us, but his immortal contributions will remain forever.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Apple's co-founder Steve Wozniak said: &quot;Stephen Hawking's integrity and scientific dedication placed him above pure brilliance,&quot;&lt;/p&gt;&lt;figure class=&quot;media-portrait has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;AFP/Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Stephen Hawking arrives on the red carpet with former wife Jane Hawking (L) and daughter Lucy Hawking (R).
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In his 2013 memoir he described how he felt when first diagnosed with motor neurone disease. &lt;/p&gt;&lt;p&gt;&quot;I felt it was very unfair - why should this happen to me,&quot; he wrote.&lt;/p&gt;&lt;p&gt;&quot;At the time, I thought my life was over and that I would never realise the potential I felt I had. But now, 50 years later, I can be quietly satisfied with my life.&quot;&lt;/p&gt;&lt;p&gt;Speaking to the BBC in 2002, his mother, Isobelle, described him as a &quot;very normal young man&quot;. &lt;/p&gt;&lt;p&gt;She said: &quot;He liked parties. He liked pretty girls - only pretty ones. He liked adventure and he did, to some extent, like work.&quot;&lt;/p&gt;&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;p&gt;&lt;strong&gt;Did you ever meet Stephen Hawking? Share your memories of him by emailing &lt;/strong&gt;&lt;a href=&quot;mailto:haveyoursay@bbc.co.uk?subject=Hawking43396008&quot; class=&quot;story-body__link-email&quot;&gt;&lt;span class=&quot;icon email&quot;/&gt;&lt;span class=&quot;story-body__link-email-text&quot;&gt;haveyoursay@bbc.co.uk&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Please include a contact number if you are willing to speak to a BBC journalist. You can also contact us in the following ways:&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;WhatsApp: &lt;strong&gt;+44 7555 173285  &lt;/strong&gt;
&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Send pictures/video to &lt;a href=&quot;mailto:yourpics@bbc.co.uk&quot; class=&quot;story-body__link-email&quot;&gt;&lt;span class=&quot;icon email&quot;/&gt;&lt;span class=&quot;story-body__link-email-text&quot;&gt;yourpics@bbc.co.uk&lt;/span&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://bbcnewsupload.streamuk.com/&quot; class=&quot;story-body__link-external&quot;&gt;Upload your pictures / video here&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Tweet: &lt;a href=&quot;http://twitter.com/BBC_HaveYourSay&quot; class=&quot;story-body__link-external&quot;&gt;@BBC_HaveYourSay&lt;/a&gt;
&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;Text an SMS or MMS to &lt;strong&gt;61124 &lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Wed, 14 Mar 2018 03:50:30 +0000</pubDate>
<dc:creator>Cogito</dc:creator>
<og:title>Visionary physicist Stephen Hawking dies</og:title>
<og:type>article</og:type>
<og:description>The British scientist who explained the Universe to millions died peacefully at home aged 76.</og:description>
<og:url>http://www.bbc.com/news/uk-43396008</og:url>
<og:image>https://ichef.bbci.co.uk/images/ic/1024x576/p0612y7y.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.com/news/uk-43396008</dc:identifier>
</item>
<item>
<title>AWS documentation is now open source and on GitHub</title>
<link>https://aws.amazon.com/blogs/aws/aws-documentation-is-now-open-source-and-on-github/</link>
<guid isPermaLink="true" >https://aws.amazon.com/blogs/aws/aws-documentation-is-now-open-source-and-on-github/</guid>
<description>&lt;p&gt;Earlier this year we made the &lt;a href=&quot;https://aws.amazon.com/tools/&quot;&gt;AWS SDK&lt;/a&gt; developer guides available as GitHub repos (all found within the &lt;a href=&quot;https://github.com/awsdocs&quot;&gt;awsdocs&lt;/a&gt; organization) and invited interested parties to contribute changes and improvements in the form of pull requests.&lt;/p&gt;&lt;p&gt;Today we are adding over 138 additional developer and user guides to the organization, and we are looking forward to receiving your requests. You can fix bugs, improve code samples (or submit new ones), add detail, and rewrite sentences and paragraphs in the interest of accuracy or clarity. You can also look at the commit history in order to learn more about new feature and service launches and to track improvements to the documents.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Making a Contribution&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;Before you get started, read the &lt;a href=&quot;https://aws.github.io/code-of-conduct&quot;&gt;Amazon Open Source Code of Conduct&lt;/a&gt; and take a look at the &lt;a href=&quot;https://github.com/awsdocs/aws-step-functions-developer-guide/blob/master/CONTRIBUTING.md&quot;&gt;Contributing Guidelines&lt;/a&gt; document (generally named &lt;code&gt;CONTRIBUTING.md&lt;/code&gt;) for the AWS service of interest. Then create a GitHub account if you don’t already have one.&lt;/p&gt;
&lt;p&gt;Once you find something to change or improve, visit the HTML version of the document and click on &lt;strong&gt;Edit on GitHub&lt;/strong&gt; button at the top of the page:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_doc_edit_1.png&quot; width=&quot;660&quot; height=&quot;354&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This will allow you to edit the document in source form (typically &lt;a href=&quot;https://en.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/ReStructuredText&quot;&gt;reStructuredText&lt;/a&gt;). The source code is used to produce the HTML, PDF, and Kindle versions of the documentation.&lt;/p&gt;
&lt;p&gt;Once you are in GitHub, click on the pencil icon:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_forkandedit_1.png&quot; width=&quot;760&quot; height=&quot;504&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This creates a “fork” — a separate copy of the file that you can edit in isolation.&lt;/p&gt;
&lt;p&gt;Next, make an edit. In general, as a new contributor to an open source project, you should gain experience and build your reputation by making small, high-quality edits. I’ll change “dozens of services” to “over one hundred services” in this document:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium aligncenter&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_edit_1.png&quot; width=&quot;760&quot; height=&quot;421&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then I summarize my change and click &lt;strong&gt;Propose file change&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_propose_edit_1.png&quot; width=&quot;760&quot; height=&quot;343&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I examine the differences to verify my changes and then click &lt;strong&gt;Create pull request&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_diff_1.png&quot; width=&quot;760&quot; height=&quot;664&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then I review the details and click &lt;strong&gt;Create pull request&lt;/strong&gt; again:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_create_pr_1.png&quot; width=&quot;760&quot; height=&quot;596&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The pull request (also known as a PR) makes its way to the Elastic Beanstalk documentation team and they get to decide if they want to accept it, reject it, or to engage in a conversation with me to learn more. The teams endeavor to respond to PRs within 48 hours, and I’ll be notified via GitHub whenever the status of the PR changes.&lt;/p&gt;
&lt;p&gt;As is the case with most open source projects, a steady stream of focused, modest-sized pull requests is preferable to the occasional king-sized request with dozens of edits inside.&lt;/p&gt;
&lt;p&gt;If I am interested in tracking changes to a repo over time, I can Watch and/or Star it:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2018/beanstalk_star_2.png&quot; width=&quot;482&quot; height=&quot;341&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If I Watch a repo, I’ll receive an email whenever there’s a new release, issue, or pull request for that service guide.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Go Fork It&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;This launch gives you another way to help us to improve AWS. Let me know what you think!&lt;/p&gt;
&lt;p&gt;— &lt;a href=&quot;https://twitter.com/jeffbarr&quot;&gt;Jeff&lt;/a&gt;;&lt;/p&gt;
</description>
<pubDate>Tue, 13 Mar 2018 20:56:12 +0000</pubDate>
<dc:creator>sassyboy</dc:creator>
<og:title>AWS Documentation is Now Open Source and on GitHub | Amazon Web Services</og:title>
<og:type>article</og:type>
<og:url>https://aws.amazon.com/blogs/aws/aws-documentation-is-now-open-source-and-on-github/</og:url>
<og:description>Earlier this year we made the AWS SDK developer guides available as GitHub repos (all found within the awsdocs organization) and invited interested parties to contribute changes and improvements in the form of pull requests. Today we are adding over 138 additional developer and user guides to the organization, and we are looking forward to […]</og:description>
<og:image>https://d2908q01vomqb2.cloudfront.net/356a192b7913b04c54574d18c28d46e6395428ab/2017/06/23/6288c174-a286-4b65-9b3b-6199bfdaa1e0.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/blogs/aws/aws-documentation-is-now-open-source-and-on-github/</dc:identifier>
</item>
<item>
<title>Repl.it 1.0: IDE that Grows from Playgrounds to Fullstack Apps</title>
<link>https://repl.it/site/blog/platform</link>
<guid isPermaLink="true" >https://repl.it/site/blog/platform</guid>
<description>&lt;p&gt;At Repl.it we come to work every day to explore a single idea—what if programming just worked? What if instead of fiddling around with packages, configurations, and mismatching versions, you just open your IDE and start coding. What if developers can go from an idea to coding and shipping software with no time in between. What if teachers who want to teach programming don't have to also work as IT administrators. What if students can just code their homework without having to set up the development environment on every computer they wanted to code on.&lt;/p&gt;
&lt;p&gt;There exists an inverse relationship between developer tool sophistication and the getting started step. In other words, the more sophisticated our tools are, the harder it is to set up. Some would go as far as to say that programming is getting &lt;a href=&quot;http://allendowney.blogspot.com/2018/02/learning-to-program-is-getting-harder.html&quot;&gt;harder to learn&lt;/a&gt;. Given that progress in programming and developer tools will continue we have to actively fight back against the ever-increasing complexity of setting up the dev environment.&lt;/p&gt;
&lt;p&gt;Online coding playgrounds solve part of the problem by getting people to code as soon as possible. They're pre-setup environments that make a lot of decisions for you. They make it easy to get started, to learn to code, and maybe even prototype simple apps. However, up until now, they lacked universality which is key to computing. In other words, you can only use one language, maybe a few frameworks but you're often limited by what you can do.&lt;/p&gt;
&lt;p&gt;Today, we're changing this. We want the best of both worlds, an IDE that starts out looking like a playground but can grow with you as soon as you require the extra power. Here is how the IDE can grow from a simple Read-Eval-Print-Loop to a full-stack application development environment:&lt;/p&gt;
&lt;ol readability=&quot;13&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;Repl.it will always start out as a simple REPL, with a single file editor and a console. You hit run, a new environment is created, your editor script is evaluated, and then you can interact with the result in the console.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;If you want to use files, write to files, split your code into modules, etc., you just do that and behinds the scenes the environment will switch to one where you're interacting with the filesystem. Your code will start to compile and run as you'd expect it when you run a project.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Say you need to use a third-party library, merely find it (through our widget, or your favorite package registry search), require/import it, and we'll take care of installing it for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;Say, for example, you were coding in NodeJS, and that package you just required was ExpressJS. You use it to listen on a port, any port you'd like; we'll detect that, host your server/repl on your Repl.it subdomain (forever!) and that's it you're developing/deploying an application.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Here is a gif of what the entire workflow could look like from interacting with the repl to deploy a server:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/public/images/blog/server.gif&quot;&gt;&lt;img src=&quot;https://repl.it/public/images/blog/server.gif&quot; alt=&quot;server&quot; title=&quot;server&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We might've buried the lede here but it's worth repeating: &lt;strong&gt;opening a port in the repl is deploying!&lt;/strong&gt; You can deploy microservices, full-stack applications, or even a background compute job.&lt;/p&gt;
&lt;p&gt;We also know that not all applications will grow incrementally so in typical Repl.it one-click-start fashion we've pre-setup a Django, Rails, Express, and Sinatra apps. You can get started on the &lt;a href=&quot;https://repl.it/languages&quot;&gt;languages&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/languages&quot;&gt;&lt;img src=&quot;https://repl.it/public/images/blog/rails.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will also work for other kinds of applications. You can start out by experimenting in the repl and end up building and training a machine learning model. As an example, &lt;a href=&quot;https://repl.it/@Jae_DukDuk/Simple-GAN&quot;&gt;here&lt;/a&gt; is a simple Generative Adversarial Network by &lt;a href=&quot;https://repl.it/@Jae_DukDuk&quot;&gt;@Jae_DukDuk&lt;/a&gt; that uses the MNIST database and scikit-learn python package:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/@Jae_DukDuk/Simple-GAN&quot;&gt;&lt;img src=&quot;https://repl.it/public/images/blog/mnist.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;a-new-computing-primitive-&quot;&gt;A new computing primitive?&lt;/h2&gt;
&lt;p&gt;One of the most exciting things about building a platform is watching all the creative and unexpected ways people use it. Repl.it serverless apps are unique in that they're stateful and that the same repl, same protocol, same everything, that you use in development is deployed and running in production.&lt;/p&gt;
&lt;p&gt;What we're seeing with some of our users is that they split out their applications into multiple repls. They might develop their website on one repl and have another repl be their logs and administrator interface. One of the more interesting applications we've seen recently is a repl as a client-interface to a chat application. The 13-year-old &lt;a href=&quot;https://repl.it/@pyelias&quot;&gt;@pylieas&lt;/a&gt; built a repl that's a client chat interface to the backend that he made separately (which is becoming the unofficial chat applications for some of the young Repl.it programmers):&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/@pyelias/Chatroom&quot;&gt;&lt;img src=&quot;https://repl.it/public/images/blog/chat.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After getting &lt;a href=&quot;https://repl.it/ibuiltthis/p/working-chatroom&quot;&gt;user-interest&lt;/a&gt; @pyelias is starting to explore building a full stack application using Django.&lt;/p&gt;
&lt;p&gt;We're excited to see where where our users will take this. If you have any feedback for us, we'd love to &lt;a href=&quot;https://repl.it/feedback&quot;&gt;hear&lt;/a&gt; it.&lt;/p&gt;
</description>
<pubDate>Tue, 13 Mar 2018 18:38:25 +0000</pubDate>
<dc:creator>dsr12</dc:creator>
<og:title>Repl.it 1.0: the IDE That Grows—from Playgrounds to Fullstack Apps</og:title>
<og:description>At Repl.it we come to work every day to explore a single idea—what if programming just worked? What if instead of fiddling around with…</og:description>
<og:type>article</og:type>
<og:image>https://repl.it/public/images/blog/chat.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://repl.it/site/blog/platform</dc:identifier>
</item>
<item>
<title>Implementing FizzBuzz on an FPGA</title>
<link>http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html</link>
<guid isPermaLink="true" >http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html</guid>
<description>&lt;p&gt;I recently started FPGA programming and figured it would be fun to use an FPGA to implement the FizzBuzz algorithm. An FPGA (&lt;a href=&quot;https://en.wikipedia.org/wiki/Field-programmable_gate_array&quot;&gt;Field-Programmable Gate Array&lt;/a&gt;) is an interesting chip that you can program to implement arbitrary digital logic. This lets you build a complex digital circuit without wiring up individual gates and flip flops. It's like having a custom chip that can be anything from a logic analyzer to a microprocessor to a video generator.&lt;/p&gt;
&lt;p&gt;The &quot;&lt;a href=&quot;http://wiki.c2.com/?FizzBuzzTest&quot;&gt;FizzBuzz test&lt;/a&gt;&quot; is to write a program that prints the numbers from 1 to 100, except multiples of 3 are replaced with the word &quot;Fizz&quot;, multiples of 5 with &quot;Buzz&quot; and multiples of both with &quot;FizzBuzz&quot;. Since FizzBuzz can be implemented in a few lines of code, it is used as a programming &lt;a href=&quot;https://blog.codinghorror.com/why-cant-programmers-program/&quot;&gt;interview question&lt;/a&gt; to weed out people who can't program at all.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-Uu2hBnSZ-Zw/WqdlcPHhZcI/AAAAAAABP9o/GsfPXMqChYQEhXyJP4pItnUV_46VCNvRwCHMYBhgL/w9999/mojo.jpg&quot;&gt;&lt;img alt=&quot;The Mojo FPGA board, connected to a serial-to-USB interface. The big chip on the Mojo is the Spartan 6 FPGA.&quot; class=&quot;hilite&quot; height=&quot;308&quot; src=&quot;https://lh3.googleusercontent.com/-Uu2hBnSZ-Zw/WqdlcPHhZcI/AAAAAAABP9o/GsfPXMqChYQEhXyJP4pItnUV_46VCNvRwCHMYBhgL/w450/mojo.jpg&quot; title=&quot;The Mojo FPGA board, connected to a serial-to-USB interface. The big chip on the Mojo is the Spartan 6 FPGA.&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The Mojo FPGA board, connected to a serial-to-USB interface. The big chip on the Mojo is the Spartan 6 FPGA.&lt;/div&gt;
&lt;p&gt;Implementing FizzBuzz in digital logic (as opposed to code) is rather pointless, but I figured it would be a good way to learn FPGAs.&lt;span id=&quot;fnref:microblaze&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:microblaze&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/span&gt; For this project, I used the &lt;a href=&quot;https://embeddedmicro.com/products/mojo-v3&quot;&gt;Mojo V3&lt;/a&gt; FPGA development board (shown above), which was designed to be an easy-to-use starter board. It uses an FPGA chip from Xilinx's Spartan 6 family. Although the Mojo's FPGA is one of the smallest Spartan 6 chips, it still contains over 9000 logic cells and 11,000 flip flops, so it can do a lot.&lt;/p&gt;
&lt;h2&gt;Implementing serial output on the FPGA&lt;/h2&gt;
&lt;p&gt;What does it mean to implement FizzBuzz on an FPGA? The general-purpose I/O pins of an FPGA could be connected to anything, so the FizzBuzz output could be displayed in many different ways such as LEDs, seven-segment displays, an LCD panel, or a VGA monitor. I decided that outputting the text over a serial line to a terminal was the closest in spirit to a &quot;standard&quot; FizzBuzz program. So the first step was to implement serial output on the FPGA.&lt;/p&gt;
&lt;p&gt;The basic idea of serial communication is to send bits over a wire, one at a time. The &lt;a href=&quot;https://learn.sparkfun.com/tutorials/serial-communication/all&quot;&gt;RS-232 serial protocol&lt;/a&gt; is a simple protocol for serial data, invented in 1960 for connecting things like teletypes and modems. The diagram below shows how the character &quot;F&quot; (binary 01000110) would be sent serially over the wire. First, a start bit (low) is sent to indicate the start of a character.&lt;span id=&quot;fnref:startbit&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:startbit&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/span&gt; Next, the 8 bits of the character are sent in reverse order. Finally, a stop bit (high) is sent to indicate the end of the character. The line sits idle (high) between characters until another character is ready to send. For a baud rate of 9600, each bit is sent for 1/9600 of a second. With 8 data bits, no parity bit, and 1 stop bit, the protocol is known as 8N1. Many different serial protocols are in use, but 9600 8N1 is a very common one.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-fBwduLslVz8/WqdlcL__5CI/AAAAAAABP9o/thpABFK8QnYlFz04GFbeKnyEfrY_J4IdACHMYBhgL/w9999/serial-explained.png&quot;&gt;&lt;img alt=&quot;Serial line output of the character &amp;quot;F&amp;quot; sent at 9600 baud / 8N1.&quot; class=&quot;hilite&quot; height=&quot;96&quot; src=&quot;https://lh3.googleusercontent.com/-fBwduLslVz8/WqdlcL__5CI/AAAAAAABP9o/thpABFK8QnYlFz04GFbeKnyEfrY_J4IdACHMYBhgL/w400/serial-explained.png&quot; title=&quot;Serial line output of the character &amp;quot;F&amp;quot; sent at 9600 baud / 8N1.&quot; width=&quot;400&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Serial line output of the character &quot;F&quot; sent at 9600 baud / 8N1.&lt;/div&gt;
&lt;p&gt;The first step in implementing this serial output was to produce the 1/9600 second intervals for each bit. This interval can be measured by counting 5208 clock pulses on the Mojo.&lt;span id=&quot;fnref:baudrate&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:baudrate&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/span&gt; I implemented this by using a 13-bit counter to repeatedly count from 0 to 5207. To keep track of which bit is being output in each interval, I used a simple state machine that advanced through the start bit, the 8 data bits, and the stop bit. The state is held in a 4-bit register. (With FPGAs, you end up dealing a lot with clock pulses, counters, and state machines.)&lt;/p&gt;
&lt;p&gt;To create the interval and state registers in the FPGA chip, I wrote code in the Verilog hardware description language. I won't explain Verilog thoroughly, but hopefully you can get a feel for how it works. In the code below, the first lines define a 13-bit register called &lt;code&gt;counter&lt;/code&gt; and a 4-bit register called &lt;code&gt;state&lt;/code&gt;. The counter is incremented until it reaches 5207, at which time the counter is reset to 0 and &lt;code&gt;state&lt;/code&gt; is incremented to process the next output bit. (Note that &lt;code&gt;&amp;lt;=&lt;/code&gt; is an assignment operator, not a comparison.&lt;span id=&quot;fnref:nonblocking&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:nonblocking&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/span&gt;) The line &lt;code&gt;always @(posedge clk)&lt;/code&gt; indicates that the code is executed on the positive edge of each clock.&lt;/p&gt;
&lt;pre&gt;
reg [12:0] counter;
reg [3:0] state;

always @(posedge clk) begin
  if (counter &amp;lt; 5207) begin
     counter &amp;lt;= counter + 1;
  end else begin
    counter &amp;lt;= 0;
    state &amp;lt;= state + 1;
  end
end
&lt;/pre&gt;
&lt;p&gt;While this may look like code in a normal programming language, it operates entirely differently. In a normal language, operations usually take place sequentially as the program is executed line by line. For instance, the processor would check the value of &lt;code&gt;counter&lt;/code&gt;. It would then add 1 to &lt;code&gt;counter&lt;/code&gt;. But in Verilog, there's no processor and no program being executed. Instead, the code generates hardware to perform the operations. For example, an adder circuit is created to increment &lt;code&gt;counter&lt;/code&gt;, and a separate adder to increment &lt;code&gt;state&lt;/code&gt;, and additional logic for the comparison with 5207. Unlike the sequential processor, the FPGA does everything in parallel. For instance, the FPGA does the 5207 comparison, the increment or reset of &lt;code&gt;counter&lt;/code&gt; and the increment of &lt;code&gt;state&lt;/code&gt; all in parallel on each clock pulse. Because of this parallelism, FPGAs can be much faster than processors for highly parallel tasks.&lt;/p&gt;
&lt;p&gt;The next part of the serial code (below) outputs the appropriate bit for each state. As before, while this looks like a normal programming language, it is generating hardware circuits, not operations that are executed sequentially. In this case, the code creates gate logic (essentially a multiplexer) to select the right value for &lt;code&gt;out&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
case (state)
  IDLE: out = MARK; // high
  START: out = SPACE; // low
  BIT0: out = char1[0];
  BIT1: out = char1[1];
  ...
  BIT6: out = char1[6];
  STOP: out = MARK;
  default: out = MARK;
endcase
&lt;/pre&gt;
&lt;p&gt;There's a bit more code for the serial module to define constants, initialize the counters, and start and stop each character, but the above code should give you an idea of how Verilog works. The full serial code is &lt;a href=&quot;https://github.com/shirriff/fpga-fizzbuzz/blob/master/src/serial.v&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The FizzBuzz Algorithm&lt;/h2&gt;
&lt;p&gt;The next step is figuring out what to send over the serial line. How do we convert the numbers from 1 to 100 into ASCII characters? This is trivial when programming a microprocessor, but hard with digital logic. The problem is that converting a binary number to decimal digits requires division by 10 and 100, and division is very inconvenient to implement with gates. My solution was to use a binary-coded decimal (BCD) counter, storing each of the three digits separately. This made the counter slightly more complicated, since each digit needs to wrap at 9, but it made printing the digits easy.&lt;/p&gt;
&lt;p&gt;I wrote a BCD counter module (&lt;a href=&quot;https://github.com/shirriff/fpga-fizzbuzz/blob/master/src/bcd_counter.v&quot;&gt;source&lt;/a&gt;) to implement the 3-digit counter. It has three 4-bit counters &lt;code&gt;digit2&lt;/code&gt;, &lt;code&gt;digit1&lt;/code&gt;, and &lt;code&gt;digit0&lt;/code&gt;. The flag &lt;code&gt;increment&lt;/code&gt; indicates that the counter should be incremented. Usually just &lt;code&gt;digit0&lt;/code&gt; is incremented. But if &lt;code&gt;digit0&lt;/code&gt; is 9, then it wraps to 0 and &lt;code&gt;digit1&lt;/code&gt; is incremented. Except if &lt;code&gt;digit1&lt;/code&gt; is also 9, then it wraps to 0 and &lt;code&gt;digit2&lt;/code&gt; is incremented. Thus, the digits will count from 000 to 999.&lt;/p&gt;
&lt;pre&gt;
if (increment) begin
  if (digit0 != 9) begin
    // Regular increment digit 0
    digit0 &amp;lt;= digit0 + 1;
  end else begin
    // Carry from digit 0
    digit0 &amp;lt;= 0;
    if (digit1 != 9) begin
      // Regular increment digit 1
      digit1 &amp;lt;= digit1 + 1;
    end else begin
      // Carry from digit 1
      digit1 &amp;lt;= 0;
      digit2 &amp;lt;= digit2 + 1;
    end
  end
end
&lt;/pre&gt;
&lt;p&gt;As before, keep in mind that while this looks like normal program code, it turns into a bunch of logic gates, generating the new values for &lt;code&gt;digit2&lt;/code&gt;, &lt;code&gt;digit1&lt;/code&gt; and &lt;code&gt;digit0&lt;/code&gt; on each clock cycle. The system isn't executing instructions in sequence, so performance isn't limited by the number of instructions but just by the delay for signals to propagate through the gates.&lt;/p&gt;
&lt;p&gt;The next challenge was testing if the number was divisible by 3 or 5. Like division, the modulo operation is easy on a microprocessor, but hard with digital logic. There's no built-in divide operation, so modulo needs to be computed with a big pile of gates. Although the IDE can synthesize the gates for a modulo operation, it seemed inelegant. Instead, I simply kept counters for the value modulo 3 and the value modulo 5. The value modulo 3, for instance, would simply count 0, 1, 2, 0, 1, 2, ...&lt;span id=&quot;fnref:modulo&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:modulo&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The final piece of FizzBuzz was the code to output each line, character by character. In a program, we could simply call the serial output routine for each character. But in an FPGA, we need to keep track of which character is being sent, with yet another state machine. Note that to convert each digit to an ASCII character, binary &lt;code&gt;11&lt;/code&gt; is concatenated, using the slightly strange syntax &lt;code&gt;2'b11&lt;/code&gt;. The code excerpt below is slightly simplified; the &lt;a href=&quot;https://github.com/shirriff/fpga-fizzbuzz/blob/master/src/fizzbuzz.v&quot;&gt;full code&lt;/a&gt; includes leading zero checks so &quot;001&quot; will print as &quot;1&quot;.&lt;/p&gt;
&lt;pre&gt;
state &amp;lt;= state + 1; // Different state from serial
if (mod3 == 0 &amp;amp;&amp;amp; mod5 != 0) begin
  // Fizz
  case (state)
   1: char &amp;lt;= &quot;F&quot;;
   2: char &amp;lt;= &quot;i&quot;;
   3: char &amp;lt;= &quot;z&quot;;
   4: char &amp;lt;= &quot;z&quot;;
   5: char &amp;lt;= &quot;\r&quot;;
   6: begin
     char &amp;lt;= &quot;\n&quot;;
     state &amp;lt;= NEXT; // Done with output line
     end
  endcase
end else if (mod3 != 0 &amp;amp;&amp;amp; mod5 == 0) begin
  ... Buzz case omitted ...
end else if (mod3 == 0 &amp;amp;&amp;amp; mod5 == 0) begin      
 ... Fizzbuzz case omitted ...
end else begin 
  // No divisors; output the digits of the number.
  case (state)
    1: char &amp;lt;= {2'b11, digit2[3:0]};
    2: char &amp;lt;= {2'b11, digit1[3:0]};
    3: char &amp;lt;= {2'b11, digit0[3:0]};
    4: char &amp;lt;= &quot;\r&quot;;
    5: begin
     char &amp;lt;= &quot;\n&quot;;
     state &amp;lt;= NEXT;
    end
  endcase
end
&lt;/pre&gt;
&lt;p&gt;Putting it all together, there are multiple state machines and counters controlling the final FizzBuzz circuit. The main state machine controls the code above, moving through the characters of the line. For each character, this state machine triggers the serial output module, and waits until the character has been output. Inside the serial module, a state machine moves through each bit of the character. This state machine waits until the baud rate counter has measured out the width of the bit. When the serial output of the character is done, the serial module signals the main state machine. The main state machine then moves to the next character in the line. When the line is done, the main state machine increments the BCD counter (counting from 1 to 100) and then starts outputting the next line.&lt;/p&gt;
&lt;p&gt;Programming languages make it easy to do operations in sequence, perform loops, make subroutine calls and so forth. But with an FPGA, you need to explicitly control when things happen, using state machines and counters to keep track of what's happening. In exchange for this, FPGAs give you a huge degree of parallelism and control.&lt;/p&gt;
&lt;h2&gt;Running FizzBuzz on the FPGA board&lt;/h2&gt;
&lt;p&gt;To compile the Verilog code, I used Xilinx's ISE tool (below), which is a development environment that lets you write code, simulate it, and synthesize it into gate-level circuitry that can be loaded onto the FPGA. Using the ISE tool is fairly straightforward, and explained in the &lt;a href=&quot;https://embeddedmicro.com/pages/verilog&quot;&gt;Mojo tutorials&lt;/a&gt;. The synthesis process was slow compared to a compile, taking about 45 seconds for my FizzBuzz program.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-85M8bMwXRqM/WqdlcM_Yo6I/AAAAAAABP9o/fNhDZbhMBRUU_4X89DJwYu_Spb_H68AFgCHMYBhgL/w9999/ISE.png&quot;&gt;&lt;img alt=&quot;By writing Verilog code in Xilinx's ISE tool, you can program functionality into an FPGA.&quot; class=&quot;hilite&quot; height=&quot;291&quot; src=&quot;https://lh3.googleusercontent.com/-85M8bMwXRqM/WqdlcM_Yo6I/AAAAAAABP9o/fNhDZbhMBRUU_4X89DJwYu_Spb_H68AFgCHMYBhgL/w600/ISE.png&quot; title=&quot;By writing Verilog code in Xilinx's ISE tool, you can program functionality into an FPGA.&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;By writing Verilog code in Xilinx's ISE tool, you can program functionality into an FPGA.&lt;/div&gt;
&lt;p&gt;Once I had the code working in the simulator,&lt;span id=&quot;fnref:debugging&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:debugging&quot; rel=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/span&gt;, I downloaded it to the FPGA board over a USB cable. I connected the FPGA output pin to a USB-to-serial adapter&lt;span id=&quot;fnref:ftdifriend&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:ftdifriend&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/span&gt; and used a terminal emulator (&lt;code&gt;screen&lt;/code&gt;) to display the serial output on my computer. I hit the reset button on the Mojo board and (after just a bit more debugging) the FizzBuzz output appeared (below).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-6VODfxq7Sh8/WqdlcGcqGbI/AAAAAAABP9o/vP_6QCDh2Ow4XzGeWTSzFsoW8_rCKgNtwCHMYBhgL/w9999/fizzbuzz.png&quot;&gt;&lt;img alt=&quot;First page of output from the FizzBuzz FPGA, as displayed by the screen terminal emulator.&quot; class=&quot;hilite&quot; height=&quot;463&quot; src=&quot;https://lh3.googleusercontent.com/-6VODfxq7Sh8/WqdlcGcqGbI/AAAAAAABP9o/vP_6QCDh2Ow4XzGeWTSzFsoW8_rCKgNtwCHMYBhgL/w450/fizzbuzz.png&quot; title=&quot;First page of output from the FizzBuzz FPGA, as displayed by the screen terminal emulator.&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;First page of output from the FizzBuzz FPGA, as displayed by the &lt;em&gt;screen&lt;/em&gt; terminal emulator.&lt;/div&gt;
&lt;p&gt;The image below shows the raw serial data from the FPGA (yellow). This is the end result of the FizzBuzz circuitry running on the FPGA board—a sequence of pulses. The oscilloscope also shows the decoded ASCII characters (green). This data is near the beginning of the FizzBuzz output, showing the lines for 2, 3 and 4. (&lt;em&gt;CR&lt;/em&gt; and &lt;em&gt;LF&lt;/em&gt; are &lt;em&gt;carriage return&lt;/em&gt; and &lt;em&gt;line feed&lt;/em&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-YtFoMbKDweY/WqdlcK56KnI/AAAAAAABP9o/NUAWYDGulbc8PO8ZCdRQu2vZPpUO_pZ7ACHMYBhgL/w9999/serial-out.png&quot;&gt;&lt;img alt=&quot;The serial data signal (yellow) near the beginning of the FizzBuzz output. The ASCII decoding is in green.&quot; class=&quot;hilite&quot; height=&quot;109&quot; src=&quot;https://lh3.googleusercontent.com/-YtFoMbKDweY/WqdlcK56KnI/AAAAAAABP9o/NUAWYDGulbc8PO8ZCdRQu2vZPpUO_pZ7ACHMYBhgL/w500/serial-out.png&quot; title=&quot;The serial data signal (yellow) near the beginning of the FizzBuzz output. The ASCII decoding is in green.&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The serial data signal (yellow) near the beginning of the FizzBuzz output. The ASCII decoding is in green.&lt;/div&gt;
&lt;h2&gt;What happens inside the FPGA?&lt;/h2&gt;
&lt;p&gt;You might wonder how a Verilog description of a circuit gets turned into digital logic, and how the FPGA implements this logic. The ISE synthesis tool turns the Verilog design into circuitry suitable for implementation inside the FPGA. It first synthesizes the Verilog code into a &quot;netlist&quot;, specifying the logic and connections. Next it translates the netlists into FPGA primitives, which are mapped onto the capabilities of the particular chip (the Spartan 6 in my case). Finally, the place and route process optimizes the layout of the chip, minimizing the distance signals need to travel.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-oPAMfcwL__8/WqdlcEXbQCI/AAAAAAABP9o/cR6kFinn9Gcjo4OXThB7TY0EPVd_LJ4SACHMYBhgL/w9999/schematic.png&quot;&gt;&lt;img alt=&quot;Schematic of the FizzBuzz circuit.&quot; class=&quot;hilite&quot; height=&quot;267&quot; src=&quot;https://lh3.googleusercontent.com/-oPAMfcwL__8/WqdlcEXbQCI/AAAAAAABP9o/cR6kFinn9Gcjo4OXThB7TY0EPVd_LJ4SACHMYBhgL/w600/schematic.png&quot; title=&quot;Schematic of the FizzBuzz circuit.&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Schematic of the FizzBuzz circuit.&lt;/div&gt;
&lt;p&gt;The image above shows the schematic of the FizzBuzz circuit, as generated by the synthesis tools. As you can see, the Verilog code turns into a large tangle of circuitry. Each block is a flip flop, logic element, multiplexer or other unit. These blocks make up the counters, state registers and logic for the FizzBuzz circuit. While this looks like a lot of logic, it used less than 2% of the chip's capability. A closeup (below) of the schematic shows a flip flop (labeled &quot;fdre&quot;)&lt;span id=&quot;fnref:fdre&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:fdre&quot; rel=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/span&gt; and a lookup table (labeled &quot;lut5&quot;) from the BCD counter. The nice thing about Verilog is that you can design the circuit at a high level, and it gets turned into the low-level circuitry. This is called RTL (&lt;a href=&quot;https://en.wikipedia.org/wiki/Register-transfer_level&quot;&gt;Register-transfer level&lt;/a&gt;) and lets you design using registers and high-level operations on them, without worrying about the low-level hardware implementation. For instance, you can simply say &lt;code&gt;count + 1&lt;/code&gt; and this will generate the necessary binary adder circuitry.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-KpmMv2vneDw/WqdlcIg5cJI/AAAAAAABP9o/fp-HI8I8B-oNxpmQYzeW0hCS9JSyVy_cwCHMYBhgL/w9999/schematic-closeup.png&quot;&gt;&lt;img alt=&quot;Detail of the schematic showing a flip flop and lookup table.&quot; class=&quot;hilite&quot; height=&quot;182&quot; src=&quot;https://lh3.googleusercontent.com/-KpmMv2vneDw/WqdlcIg5cJI/AAAAAAABP9o/fp-HI8I8B-oNxpmQYzeW0hCS9JSyVy_cwCHMYBhgL/w500/schematic-closeup.png&quot; title=&quot;Detail of the schematic showing a flip flop and lookup table.&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Detail of the schematic showing a flip flop and lookup table.&lt;/div&gt;
&lt;p&gt;The FPGA chip uses an interesting technique to implement logic equations. Instead of wiring together individual gates, the logic is implemented with a lookup table (LUT), which is a flexible way of implementing arbitrary logic. Each lookup table has 6 input lines, so it can implement any combinatorial logic with 6 inputs. With 6 inputs, there are 64 different input combinations, yielding a 64-line truth table. By storing this table as a 64-bit bitmap, the LUT can implement any desired logic function.&lt;/p&gt;
&lt;p&gt;For example, part of the logic for the output pin is equivalent to the logic circuit below. This is implemented by storing the 64-bit value &lt;code&gt;FFFFA8FFFFA8A8A8&lt;/code&gt; into the lookup table. In the Spartan 6 chip, the LUT is implemented with 64 bits of static RAM, loaded when the FPGA is initialized. Since the chip has 5720 separate lookup tables, it can be programmed to implement a lot of arbitrary logic.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-G8qiJbhe41U/WqdlcPzegKI/AAAAAAABP9o/_mcVHa-1gDc9ef-IlLVlHo-R769xc427ACHMYBhgL/w9999/lut-schematic.png&quot;&gt;&lt;img alt=&quot;The gate logic implemented by one lookup table in the FPGA.&quot; class=&quot;hilite&quot; height=&quot;183&quot; src=&quot;https://lh3.googleusercontent.com/-G8qiJbhe41U/WqdlcPzegKI/AAAAAAABP9o/_mcVHa-1gDc9ef-IlLVlHo-R769xc427ACHMYBhgL/w500/lut-schematic.png&quot; title=&quot;The gate logic implemented by one lookup table in the FPGA.&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The gate logic implemented by one lookup table in the FPGA.&lt;/div&gt;
&lt;p&gt;The final piece of the FPGA puzzle is the switch matrix that connects the circuitry together in arbitrary ways. In the Spartan 6 a handful of LUTs, flip flops and multiplexers are grouped into a &lt;em&gt;configurable logic blocks&lt;/em&gt; (CLB).&lt;span id=&quot;fnref:blocks&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:blocks&quot; rel=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/span&gt; The CLBs are connected together by a &lt;em&gt;switch matrix&lt;/em&gt;, as shown below. Each switch matrix block is programmed to connect different wires together, allowing the FPGA to be wired as desired. An important part of the FPGA synthesis process is positioning blocks to minimize the wiring distance, both to minimize signal propagation delay and to avoid running out of interconnect paths.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-xUJhwor9zyc/WqdlcNEksTI/AAAAAAABP9o/Fl180UBDc50OGtYSzOxhDX_u8cXCOF8aACHMYBhgL/w9999/switchmatrix.png&quot;&gt;&lt;img alt=&quot;The switching matrix in the Spartan 6 FPGA allows arbitrary interconnections between CLBs. From the User Guide.&quot; class=&quot;hilite&quot; height=&quot;370&quot; src=&quot;https://lh3.googleusercontent.com/-xUJhwor9zyc/WqdlcNEksTI/AAAAAAABP9o/Fl180UBDc50OGtYSzOxhDX_u8cXCOF8aACHMYBhgL/w500/switchmatrix.png&quot; title=&quot;The switching matrix in the Spartan 6 FPGA allows arbitrary interconnections between CLBs. From the User Guide.&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The switching matrix in the Spartan 6 FPGA allows arbitrary interconnections between CLBs. From the &lt;a href=&quot;https://www.xilinx.com/support/documentation/user_guides/ug384.pdf&quot;&gt;User Guide&lt;/a&gt;.&lt;/div&gt;
&lt;h2&gt;Should you try an FPGA?&lt;/h2&gt;
&lt;p&gt;Personally, I was very reluctant to try out an FPGA because they seemed scary and weird. While there is a learning curve, FPGAs aren't as difficult as I expected. If you're interested in new programming paradigms, FPGAs will definitely give you a different perspective. Things that you take for granted, such as performing operations in sequence, will move to the foreground with an FPGA. You can experiment with high degrees of parallelism. And FPGAs will give you a better idea of how digital circuits work.&lt;/p&gt;
&lt;p&gt;However, I wouldn't recommend trying FPGAs unless you have some familiarity with wiring up LEDs and switches and understand basic digital logic: gates, flip flops, and state machines. If you're comfortable with an Arduino, though, an FPGA is a reasonable next step.&lt;/p&gt;
&lt;p&gt;For most applications, a microcontroller can probably do the job as well as an FPGA and is easier to program. Unless you have high data rates or require parallelism, an FPGA is probably overkill. In my case, I found a microcontroller was barely powerful enough for my &lt;a href=&quot;http://www.righto.com/2018/01/xerox-altos-3-mbs-ethernet-building.html&quot;&gt;3Mb/s Ethernet gateway project&lt;/a&gt;, so I'm looking into FPGAs for my next project.&lt;/p&gt;
&lt;h2&gt;Is the Mojo a good board to start with?&lt;/h2&gt;
&lt;p&gt;The Mojo FPGA development board is sold by &lt;a href=&quot;https://www.adafruit.com/product/1553&quot;&gt;Adafruit&lt;/a&gt; and &lt;a href=&quot;https://www.sparkfun.com/products/11953&quot;&gt;Sparkfun&lt;/a&gt;, so I figured it would be a good hacker choice. The Mojo was designed for people getting started with FPGAs, and I found it worked well in this role. The makers of the Mojo wrote a solid &lt;a href=&quot;https://embeddedmicro.com/pages/verilog&quot;&gt;collection of tutorials using Verilog&lt;/a&gt;.&lt;span id=&quot;fnref:lucid&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:lucid&quot; rel=&quot;footnote&quot;&gt;10&lt;/a&gt;&lt;/span&gt; It was very helpful to use tutorials written for the specific board, since it minimized that amount of time I spent fighting with the board and tools. The Mojo is programmed over a standard USB cable, which is more convenient than boards that need special JTAG adapters.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-O_M8GX0hsL8/WqdlcLvA_fI/AAAAAAABP9o/NnI_mwxGFlsrgP116W_tamZLW408-BSawCHMYBhgL/w9999/mojo-board.jpg&quot;&gt;&lt;img alt=&quot;The Mojo FPGA board. The Spartan-6 FPGA chip dominates the board.&quot; class=&quot;hilite&quot; height=&quot;274&quot; src=&quot;https://lh3.googleusercontent.com/-O_M8GX0hsL8/WqdlcLvA_fI/AAAAAAABP9o/NnI_mwxGFlsrgP116W_tamZLW408-BSawCHMYBhgL/w400/mojo-board.jpg&quot; title=&quot;The Mojo FPGA board. The Spartan-6 FPGA chip dominates the board.&quot; width=&quot;400&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The Mojo FPGA board. The Spartan-6 FPGA chip dominates the board.&lt;/div&gt;

&lt;p&gt;Although the Mojo has plenty of I/O pins, it doesn't have any I/O devices included except 8 LEDs. It would be nicer to experiment with a board that includes buttons, 7-segment displays, VGA output, sensors and so forth. (It's not hard to wire up stuff to the Mojo, but it would be convenient to have them included.) Also, some development boards include external RAM but the Mojo doesn't, a problem for applications such as a logic analyzer that require a lot of storage.&lt;span id=&quot;fnref:ram&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html#fn:ram&quot; rel=&quot;footnote&quot;&gt;11&lt;/a&gt;&lt;/span&gt; (You can extend the Mojo with an &lt;a href=&quot;https://embeddedmicro.com/products/io-shield&quot;&gt;IO shield&lt;/a&gt; or &lt;a href=&quot;https://embeddedmicro.com/products/sdram-shield&quot;&gt;RAM shield&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;A good introductory book to get started with the Mojo is &lt;a href=&quot;http://amzn.to/2FLX5aZ&quot;&gt;Programming FPGAs&lt;/a&gt;; it also covers the considerably cheaper &lt;a href=&quot;http://papilio.cc/index.php?n=Papilio.PapilioOne&quot;&gt;Papilo One&lt;/a&gt; and &lt;a href=&quot;https://numato.com/product/elbert-v2-spartan-3a-fpga-development-board&quot;&gt;Elbert 2&lt;/a&gt; boards. A list of FPGA development boards is &lt;a href=&quot;https://joelw.id.au/FPGA/CheapFPGADevelopmentBoards&quot;&gt;here&lt;/a&gt; if you want to look at other options.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;An FPGA is an impractical way to implement FizzBuzz, but it was a fun project and I learned a lot about FPGA programming. I certainly wouldn't get the FPGA job if FizzBuzz was used as an interview question, though! My code is on &lt;a href=&quot;https://github.com/shirriff/fpga-fizzbuzz&quot;&gt;github&lt;/a&gt;, but keep in mind I'm a beginner to FPGAs.&lt;/p&gt;
&lt;p&gt;Follow me on &lt;a href=&quot;https://twitter.com/kenshirriff&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;http://www.righto.com/feeds/posts/default&quot;&gt;RSS&lt;/a&gt; to find out about my latest blog posts.&lt;/p&gt;
&lt;h2&gt;Notes and references&lt;/h2&gt;


</description>
<pubDate>Tue, 13 Mar 2018 18:01:07 +0000</pubDate>
<dc:creator>jf</dc:creator>
<og:url>http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html</og:url>
<og:title>Implementing FizzBuzz on an FPGA</og:title>
<og:description>I recently started FPGA programming and figured it would be fun to use an FPGA to implement the FizzBuzz algorithm. An FPGA ( Field-Progra...</og:description>
<og:image>https://lh3.googleusercontent.com/-Uu2hBnSZ-Zw/WqdlcPHhZcI/AAAAAAABP9o/GsfPXMqChYQEhXyJP4pItnUV_46VCNvRwCHMYBhgL/w1200-h630-p-k-no-nu/mojo.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.righto.com/2018/03/implementing-fizzbuzz-on-fpga.html</dc:identifier>
</item>
</channel>
</rss>