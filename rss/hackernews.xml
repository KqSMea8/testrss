<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Algorithms Behind Modern Storage Systems</title>
<link>https://queue.acm.org/detail.cfm?id=3220266</link>
<guid isPermaLink="true" >https://queue.acm.org/detail.cfm?id=3220266</guid>
<description>&lt;div class=&quot;navbar&quot;&gt;

&lt;a href=&quot;https://queue.acm.org/&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/acmqueue_logo.gif&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot; target=&quot;_new&quot;&gt;&lt;img src=&quot;https://queue.acm.org/app/2018_03-04_lrg.png&quot; with=&quot;90&quot; height=&quot;120&quot; alt=&quot;March/April 2018 issue of acmqueue&quot;/&gt;&lt;/a&gt; &lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot;&gt;The March/April issue of acmqueue is out now&lt;/a&gt;&lt;/strong&gt;&lt;br clear=&quot;all&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;br/&gt;&lt;h4&gt;&lt;a href=&quot;https://queue.acm.org/listing.cfm?item_topic=File%20Systems%20and%20Storage&amp;amp;qc_type=theme_list&amp;amp;filter=File%20Systems%20and%20Storage&amp;amp;page_title=File%20Systems%20and%20Storage&amp;amp;order=desc&quot;&gt;File Systems and Storage&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;  &lt;a href=&quot;https://dl.acm.org/ft_gateway.cfm?id=3220266&amp;amp;ftid=1967080&amp;amp;dwn=1&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/icon_pdf.png&quot; alt=&quot;Download PDF version of this article&quot;/&gt; PDF&lt;/a&gt;&lt;/p&gt;
&lt;label&gt;May 14, 2018&lt;br/&gt;&lt;strong&gt;&lt;a class=&quot;descriptor&quot; href=&quot;https://queue.acm.org/issuedetail.cfm?issue=3212477&quot;&gt;Volume 16, issue 2&lt;/a&gt;&lt;/strong&gt;&lt;/label&gt;

&lt;h2&gt;Different uses for read-optimized B-trees and write-optimized LSM-trees&lt;/h2&gt;
&lt;h3&gt;Alex Petrov&lt;/h3&gt;
&lt;p&gt;The amounts of data processed by applications are constantly growing. With this growth, scaling storage becomes more challenging. Every database system has its own tradeoffs. Understanding them is crucial, as it helps in selecting the right one from so many available choices.&lt;/p&gt;
&lt;p&gt;Every application is different in terms of read/write workload balance, consistency requirements, latencies, and access patterns. Familiarizing yourself with database and storage internals facilitates architectural decisions, helps explain why a system behaves a certain way, helps troubleshoot problems when they arise, and fine-tunes the database for your workload.&lt;/p&gt;
&lt;p&gt;It's impossible to optimize a system in all directions. In an ideal world there would be data structures guaranteeing the best read and write performance with no storage overhead but, of course, in practice that's not possible.&lt;/p&gt;
&lt;p&gt;This article takes a closer look at two storage system design approaches used in a majority of modern databases—read-optimized &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.96.6637&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;B-trees&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; and write-optimized &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.44.2782&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;LSM (log-structured merge)-trees&lt;/a&gt;&lt;sup&gt;5&lt;/sup&gt;—and describes their use cases and tradeoffs.&lt;/p&gt;
&lt;h3&gt;B-Trees&lt;/h3&gt;
&lt;p&gt;B-trees are a popular read-optimized indexing data structure and generalization of binary trees. They come in many variations and are used in many databases (including &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/innodb-physical-structure.html&quot;&gt;MySQL InnoDB&lt;/a&gt;&lt;sup&gt;4&lt;/sup&gt; and &lt;a href=&quot;http://www.interdb.jp/pg/pgsql01.html&quot;&gt;PostgreSQL&lt;/a&gt;&lt;sup&gt;7&lt;/sup&gt;) and even &lt;a href=&quot;https://en.wikipedia.org/wiki/HTree&quot;&gt;file systems&lt;/a&gt; (HFS+&lt;sup&gt;8&lt;/sup&gt;, HTrees in ext4&lt;sup&gt;9&lt;/sup&gt;). The &lt;em&gt;B&lt;/em&gt; in &lt;em&gt;B&lt;/em&gt;-tree stands for &lt;em&gt;Bayer&lt;/em&gt;, the author of the original data structure, or &lt;em&gt;Boeing&lt;/em&gt;, where he worked at that time.&lt;/p&gt;
&lt;p&gt;In a &lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_tree&quot;&gt;binary tree&lt;/a&gt; every node has two children (referred as a left and a right child). Left and right subtrees hold the keys that are less than and greater than the current node key, respectively. To keep the tree depth to a minimum, a binary tree has to be balanced: when randomly ordered keys are being added to the tree, it is natural that one side of the tree will eventually get deeper than the other.&lt;/p&gt;
&lt;p&gt;One way to rebalance a binary tree is to use so-called rotation: rearrange nodes, pushing the parent node of the longer subtree down below its child and pulling this child up, effectively placing it in its parent's position. Figure 1 is an example of rotation used for balancing in a binary tree. On the left, a binary tree is unbalanced after adding node 2 to it. In order to balance the tree, node 3 is used as a pivot (the tree is rotated around it). Then node 5, previously a root node and a parent node for 3, becomes its child node. After the rotation step is done, the height of the left subtree decreases by one and the height of the right subtree increases by one. The maximum depth of the tree has decreased.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov1.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;p&gt;Binary trees are most useful as in-memory data structures. Because of balancing (the need to keep the depth of all subtrees to a minimum) and low fanout (a maximum of two pointers per node), they don't work well on disk. B-trees allow for storing more than two pointers per node and work well with block devices by matching the node size to the page size (e.g., 4 KB). Some implementations today use larger node sizes, spanning across multiple pages in size.&lt;/p&gt;
&lt;p&gt;B-trees have the following properties:&lt;/p&gt;
&lt;p&gt;• Sorted. This allows sequential scans and simplifies lookups.&lt;/p&gt;
&lt;p&gt;• Self-balancing. There's no need to balance the tree during insertion and deletion: when a B-tree node is full, it is split in two, and when the occupancy of the neighboring nodes falls below a certain threshold, the nodes are merged. This also means that leaves are equally distant from the root and can be located using the same amount of steps during lookup.&lt;/p&gt;
&lt;p&gt;• Guarantee of logarithmic lookup time. This makes B-trees a good choice for database indexes, where lookup times are important.&lt;/p&gt;
&lt;p&gt;• Mutable. Inserts, updates, and deletes (also, subsequent splits and merges) are performed on disk in place. To make in-place updates possible, a certain amount of space overhead is required. A B-tree can be organized as a clustered index, where actual data is stored on the leaf nodes or as a heap file with an unclustered B-tree index.&lt;/p&gt;
&lt;p&gt;This article discusses the B+tree,&lt;sup&gt;3&lt;/sup&gt; a modern variant of the B-tree often used for database storage. The B+tree is different from the original B-tree&lt;sup&gt;1&lt;/sup&gt; in that (a) it has an additional level of linked leaf nodes holding the values, and (b) these values cannot be stored on internal nodes.&lt;/p&gt;
&lt;h4&gt;Anatomy of the B-tree&lt;/h4&gt;
&lt;p&gt;Let's first take a closer look at the B-tree building blocks, illustrated in figure 2. B-trees have several node types: root, internal, and leaf. Root (top) is the node that has no parents (i.e., it is not a child of any other node). Internal nodes (middle) have both a parent and children; they connect a root node with leaf nodes. Leaf nodes (bottom) carry the data and have no children. Figure 2 depicts a B-tree with a branching factor of four (four pointers, three keys in internal nodes, and four key/value pairs on leaves).&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov2.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;p&gt;B-trees are characterized by the following:&lt;/p&gt;
&lt;p&gt;• Branching factor-the number (&lt;em&gt;N&lt;/em&gt;) of pointers to the child nodes. Along with the pointers, root and internal nodes hold up to &lt;em&gt;N-1&lt;/em&gt; keys.&lt;/p&gt;
&lt;p&gt;• Occupancy-how many pointers to child items the node is currently holding, out of the maximum available. For example, if the tree-branching factor is &lt;em&gt;N&lt;/em&gt;, and the node is currently holding &lt;em&gt;N/2&lt;/em&gt; pointers, occupancy is 50 percent.&lt;/p&gt;
&lt;p&gt;• Height-the number of B-tree levels, signifying how many pointers have to be followed during lookup.&lt;/p&gt;
&lt;p&gt;Every nonleaf node in the tree holds up to &lt;em&gt;N&lt;/em&gt; keys (index entries), separating the tree into &lt;em&gt;N+1&lt;/em&gt; subtrees that can be located by following a corresponding pointer. Pointer &lt;em&gt;i&lt;/em&gt; from an entry &lt;em&gt;K&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt; points to a subtree in which all the index entries are such that &lt;em&gt;K&lt;sub&gt;i-1&lt;/sub&gt; &amp;lt;= K&lt;sub&gt;searched&lt;/sub&gt; &amp;lt; K&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt; (where &lt;em&gt;K&lt;/em&gt; is a set of keys). The first and last pointers are special cases, pointing to subtrees in which all the entries are less than or equal to &lt;em&gt;K&lt;sub&gt;0&lt;/sub&gt;&lt;/em&gt; in the case of the leftmost child, or greater than &lt;em&gt;K&lt;sub&gt;N-1&lt;/sub&gt;&lt;/em&gt; in the case of the rightmost child. A leaf node may also hold a pointer to the previous and next nodes on the same level, forming a doubly linked list of sibling nodes. Keys in all the nodes are always sorted.&lt;/p&gt;
&lt;h4&gt;Lookups&lt;/h4&gt;
&lt;p&gt;When performing lookups, the search starts at the root node and follows internal nodes recursively down to the leaf level. On each level, the search space is reduced to the child subtree (the range of this subtree includes the searched value) by following the child pointer. Figure 3 shows a lookup in a B-tree making a single root-to-leaf pass, following the pointers “between” the two keys, one of which is greater than (or equal to) the searched term, and the other of which is less than the searched term. When a point query is performed, the search is complete after locating the leaf node. During the range scan, the keys and values of the found leaf, and then the sibling leaf's nodes, are traversed, until the end of the range is reached.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov3.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;p&gt;In terms of complexity, B-trees guarantee &lt;em&gt;log(n)&lt;/em&gt; lookup, because finding a key within the node is performed using binary search, shown in figure 4. Binary search is easily explained in terms of searching for words beginning with a certain letter in the dictionary, where all words are sorted alphabetically. First you open the dictionary exactly in the middle. If the searched letter is alphabetically “less than” (appears earlier than) the one opened, you continue your search in the left half of the dictionary; otherwise, you continue in the right half. You keep reducing the remaining page range by half and picking the side to follow until you find the desired letter. Every step halves the search space, making the lookup time logarithmic. Searches in B-trees have logarithmic complexity, since on the node level keys are sorted, and the binary search is performed in order to find a match. This is also why it's important to keep the occupancy high and uniform across the tree.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov4.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;h4&gt;Insertions, updates, and deletions&lt;/h4&gt;
&lt;p&gt;When performing insertions, the first step is to locate the target leaf. For that, the aforementioned search algorithm is used. After the target leaf is located, key and value are appended to it. If the leaf does not have enough free space, this situation is called overflow, and the leaf has to be split in two. This is done by allocating a new leaf, moving half the elements to it and appending a pointer to this newly allocated leaf to the parent. If the parent doesn't have free space either, a split is performed on the parent level as well. The operation continues until the root is reached. When the root overflows, its contents are split between the newly allocated nodes, and the root node itself is overwritten in order to avoid relocation. This also implies that the tree (and its height) always grows by splitting the root node.&lt;/p&gt;
&lt;h3&gt;LSM-Trees&lt;/h3&gt;
&lt;p&gt;The log-structured merge-tree is an immutable disk-resident write-optimized data structure. It is most useful in systems where writes are more frequent than lookups that retrieve the records. LSM-trees have been getting more attention because they can eliminate random insertions, updates, and deletions.&lt;/p&gt;
&lt;h4&gt;Anatomy of the LSM-tree&lt;/h4&gt;
&lt;p&gt;To allow sequential writes, LSM-trees batch writes and updates in a memory-resident table (often implemented using a data structure allowing logarithmic time lookups, such as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree&quot;&gt;binary search tree&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Skip_list&quot;&gt;skip list&lt;/a&gt;) until its size reaches a threshold, at which point it is written on disk (this operation is called a &lt;em&gt;flush&lt;/em&gt;). Retrieving the data requires searching all disk-resident parts of the tree, checking the in-memory table, and merging their contents before returning the result. Figure 5 shows the structure of an LSM-tree: a memory-resident table used for writes. Whenever the memory table is large enough, its sorted contents are written on disk. Reads are served, hitting both disk- and memory-resident tables, requiring a merge process to reconcile the data.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov5.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;h4&gt;Sorted String Tables&lt;/h4&gt;
&lt;p&gt;Many modern LSM-tree implementations (such as &lt;a href=&quot;https://en.wikipedia.org/wiki/RocksDB&quot;&gt;RocksDB&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Apache_Cassandra&quot;&gt;Apache Cassandra&lt;/a&gt;) implement disk-resident tables as SSTables (Sorted String Tables), because of their simplicity (easy to write, search, and read) and merge properties (during the merge, source SSTable scans and merged result writes are sequential).&lt;/p&gt;
&lt;p&gt;An SSTable is a disk-resident ordered immutable data structure. Structurally, an SSTable is split into two parts: data and index blocks, as shown in figure 6. A data blocks consists of sequentially written unique key/value pairs, ordered by key. An index block contains keys mapped to data-block pointers, pointing to where the actual record is located. An index is often implemented using a format optimized for quick searches, such as a B-tree, or using a hash table for a point-query. Every value item in an SSTable has a timestamp associated with it. This specifies the write time for inserts and updates (which are often indistinguishable) and removal time for deletes.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov6.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;p&gt;SSTables have some nice properties:&lt;/p&gt;
&lt;p&gt;• Point-queries (i.e., finding a value by key) can be done quickly by looking up the primary index.&lt;/p&gt;
&lt;p&gt;• Scans (i.e., iterating over all key/value pairs in a specified key range) can be done efficiently simply by reading key/value pairs sequentially from the data block.&lt;/p&gt;
&lt;p&gt;An SSTable represents a snapshot of all database operations over a period of time, as the SSTable is created by the &lt;em&gt;flush&lt;/em&gt; process from the memory-resident table that served as a buffer for operations against the database state for this period.&lt;/p&gt;
&lt;h4&gt;Lookups&lt;/h4&gt;
&lt;p&gt;Retrieving data requires searching all SSTables on disk, checking the memory-resident tables, and merging their contents before returning the result. The merge step during the read is required since the searched data can reside in multiple SSTables.&lt;/p&gt;
&lt;p&gt;The merge step is also necessary to ensure that the deletes and updates work. Deletes in an LSM-tree insert placeholders (often called &lt;em&gt;tombstones&lt;/em&gt;), specifying which key was marked for deletion. Similarly, an update is just a record with a later timestamp. During the read, the records that get shadowed by deletes are skipped and not returned to the client. A similar thing happens with the updates: out of two records with the same key, only the one with the later timestamp is returned. Figure 7 shows a merge step reconciling the data stored in separate tables for the same key: as shown here, the record for Alex was written with timestamp 100 and updated with a new phone and timestamp 200; the record for John was deleted. The other two entries are taken as is, as they're not shadowed.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov7.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;p&gt;To reduce the number of searched SSTables and to avoid checking every SSTable for the searched key, many storage systems employ a data structure known as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Bloom_filter&quot;&gt;Bloom filter&lt;/a&gt;&lt;sup&gt;10&lt;/sup&gt;. This is a probabilistic data structure that can be used to test whether an element is a member of the set. It can produce false-positive matches (i.e., state that the element is a member of set, while it is not, in fact, present there) but cannot produce false negatives (i.e., if a negative match is returned, the element is guaranteed not to be a member of the set). In other words, a Bloom filter is used to tell if the key “might be in an SSTable” or “is definitely not in an SSTable.” SSTables for which a Bloom filter has returned a negative match are skipped during the query.&lt;/p&gt;
&lt;h4&gt;LSM-tree maintenance&lt;/h4&gt;
&lt;p&gt;Since SSTables are &lt;em&gt;immutable&lt;/em&gt;, they are written sequentially and hold no reserved empty space for in-place modifications. This means insert, update, or delete operations would require rewriting the whole file. All operations modifying the database state are “batched” in the memory-resident table. Over time, the number of disk-resident tables will grow (data for the same key located in several files, multiple versions of the same record, redundant records that got shadowed by deletes), and the reads will continue getting more expensive.&lt;/p&gt;
&lt;p&gt;To reduce the cost of reads, reconcile space occupied by shadowed records, and reduce the number of disk-resident tables, LSM-trees require a &lt;em&gt;compaction&lt;/em&gt; process that reads complete SSTables from disk and merges them. Because SSTables are sorted by key and compaction works like merge-sort, this operation is very efficient: records are read from several sources sequentially, and merged output can be appended to the results file right away, also sequentially. One of the advantages of merge-sort is that it can work efficiently even for merging large files that don't fit in memory. The resulting table preserves the order of the original SSTables.&lt;/p&gt;
&lt;p&gt;During this process, merged SSTables are discarded and replaced with their “compacted” versions, as shown in figure 8. Compaction takes multiple SSTables and merges them into one. Some database systems logically group the tables of the same size to the same “level” and start the merge process whenever enough tables are on a particular level. After compaction, the number of SSTables that have to be addressed is reduced, making queries more efficient.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov8.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;h3&gt;Atomicity and Durability&lt;/h3&gt;
&lt;p&gt;To reduce the number of I/O operations and make them sequential, both B-trees and LSM-trees batch operations in memory before making an actual update. This means that data integrity is not guaranteed during failure scenarios and &lt;em&gt;atomicity&lt;/em&gt; (applying a series of changes atomically, as if they were a single operation, or not applying them at all) and &lt;em&gt;durability&lt;/em&gt; (ensuring that in the face of a process crash or power loss, data has reached persistent storage) properties are not ensured.&lt;/p&gt;
&lt;p&gt;To solve that problem, most modern storage systems employ WAL (write-ahead logging). The key idea behind WAL is that all the database state modifications are first durably persisted in the append-only log on disk. If the process crashes in the middle of an operation, the log is replayed, ensuring that no data is lost and all changes appear atomically.&lt;/p&gt;
&lt;p&gt;In B-trees, using WAL can be understood as writing changes to data files only after they have been logged. Usually log sizes for B-tree storage systems are relatively small: as soon as changes are applied to the persisted storage, they can be discarded. WAL serves as a backup for the in-flight operations: any changes that were not applied to data pages can be redone from the log records.&lt;/p&gt;
&lt;p&gt;In LSM-trees, WAL is used to persist changes that have reached the memtables but have not yet been fully flushed on disk. As soon as a memtable is fully flushed and switched so that read operations can be served from the newly created SSTable, the WAL segment holding the data for the flushed memtable can be discarded.&lt;/p&gt;
&lt;h3&gt;Summarizing&lt;/h3&gt;
&lt;p&gt;One of the biggest differences between the B-tree and LSM-tree data structures is what they optimize for and what implications these optimizations have.&lt;/p&gt;
&lt;p&gt;Let's compare the properties of B-trees with LSM-trees. In summary, B-trees have the following properties:&lt;/p&gt;
&lt;p&gt;• They are mutable, which allows for in-place updates by introducing some space overhead and a more involved write path, although it does not require complete file rewrites or multisource merges.&lt;/p&gt;
&lt;p&gt;• They are read-optimized, meaning they do not require reading from (and subsequently merging) multiple sources, thus simplifying the read path.&lt;/p&gt;
&lt;p&gt;• Writes might trigger a cascade of node splits, making some write operations more expensive.&lt;/p&gt;
&lt;p&gt;• They are optimized for paged environments (block storage), where byte addressing is not possible.&lt;/p&gt;
&lt;p&gt;• Fragmentation, caused by frequent updates, might require additional maintenance and block rewrites. B-trees, however, usually require less maintenance than LSM-tree storage.&lt;/p&gt;
&lt;p&gt;• Concurrent access requires reader/writer isolation and involves chains of locks and latches.&lt;/p&gt;
&lt;p&gt;LSM-trees have these properties:&lt;/p&gt;
&lt;p&gt;• They are immutable. SSTables are written on disk once and never updated. Compaction is used to reconcile space occupied by removed items and merge same-key data from multiple data files. Merged SSTables are discarded and removed after a successful merge as part of the compaction process. Another useful property coming from immutability is that flushed tables can be accessed concurrently.&lt;/p&gt;
&lt;p&gt;• They are write optimized, meaning that writes are buffered and flushed on disk sequentially, potentially allowing for spatial locality on the disk.&lt;/p&gt;
&lt;p&gt;• Reads might require accessing data from multiple sources, since data for the same key, written during different times, might land in different data files. Records have to go through the merge process before being returned to the client.&lt;/p&gt;
&lt;p&gt;• Maintenance/compaction is required, as buffered writes are flushed on disk.&lt;/p&gt;
&lt;h3&gt;Evaluating Storage Systems&lt;/h3&gt;
&lt;p&gt;Developing storage systems always presents the same challenges and factors to consider. Deciding what to optimize for has a substantial influence on the result. You can spend more time during write in order to lay out structures for more efficient reads, reserve extra space for in-place updates, facilitate faster writes, and buffer data in memory to ensure sequential write operations. It is impossible, however, to do this all at once. An ideal storage system would have the lowest read cost, lowest write cost, and no overhead. In practice, data structures compromise among multiple factors. Understanding these compromises is important.&lt;/p&gt;
&lt;p&gt;Researchers from Harvard's DASlab (Data System Laboratory) summarized the three key parameters database systems are optimized for: read overhead, update overhead, and memory overhead, or RUM. Understanding which of these parameters are most important for your use-case influences the choice of data structures, access methods, and even suitability for certain workloads, as the algorithms are tailored having a specific use-case in mind.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://daslab.seas.harvard.edu/rum-conjecture/&quot;&gt;RUM Conjecture&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt; states that setting an upper bound for two of the mentioned overheads also sets a lower bound for the third one. For example, B-trees are read-optimized at the cost of write overhead as well as having to reserve empty space for the (thereby resulting in memory overhead). LSM-trees have less space overhead at a cost of read overhead brought on by having to access multiple disk-resident tables during the read. These three parameters form a competing triangle, and improvement on one side may imply compromise on the other. Figure 9 illustrates the RUM Conjecture.&lt;/p&gt;
&lt;img src=&quot;http://deliveryimages.acm.org/10.1145/3230000/3220266/petrov9.png&quot; alt=&quot;Algorithms Behind Modern Storage Systems&quot;/&gt;&lt;p&gt;B-trees optimize for read performance: the index is laid out in a way that minimizes the disk accesses required to traverse the tree. Only a single index file has to be accessed to locate the data. This is achieved by keeping this index file mutable, which also increases write amplification resulting from node splits and merges, relocation, and fragmentation/imbalance-related maintenance. To amortize update costs and reduce the number of splits, B-trees reserve extra free space in nodes on all levels. This helps to postpone write amplification until the node is full. In short, B-trees trade update and memory overhead for better read performance.&lt;/p&gt;
&lt;p&gt;LSM-trees optimize for write performance. Neither updates nor deletes require locating data on disk (which B-trees do), and they guarantee sequential writes by buffering all insert, update, and delete operations in memory-resident tables. This comes at the price of higher maintenance costs and a need for compaction (which is just a way of mitigating the ever-growing price of reads and reducing the number of disk-resident tables) and more expensive reads (as the data has to be read from multiple sources and merged). At the same time, LSM-trees eliminate memory overhead by not reserving any empty space (unlike B-tree nodes, which have an average occupancy of 70 percent, an overhead required for in-place updates) and allowing block compression because of the better occupancy and immutability of the end file. In short, LSM-trees trade read performance and maintenance for better write performance and lower memory overhead.&lt;/p&gt;
&lt;p&gt;There are data structures that optimize for each desired property. Using adaptive data structures allows for better read performance at the price of higher maintenance costs. Adding metadata facilitating traversals (such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Fractional_cascading&quot;&gt;fractional cascading&lt;/a&gt;) will have an impact on write time and take space, but can improve the read time. Optimizing for memory efficiency using compression (for example, algorithms such as &lt;a href=&quot;http://www.vldb.org/pvldb/vol8/p1816-teller.pdf&quot;&gt;Gorilla compression&lt;/a&gt;,&lt;sup&gt;6&lt;/sup&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Delta_encoding&quot;&gt;delta encoding&lt;/a&gt;, and many others) will add some overhead for packing the data on writes and unpacking it on reads. Sometimes, you can trade functionality for efficiency. For example, &lt;a href=&quot;https://en.wikipedia.org/wiki/Database_storage_structures&quot;&gt;heap files and hash indexes&lt;/a&gt; can provide great performance guarantees and smaller space overhead because of the file format simplicity, for the price of not being able to perform anything but point queries. You can also trade precision for space and efficiency by using approximate data structures, such as the Bloom filter, &lt;a href=&quot;https://en.wikipedia.org/wiki/HyperLogLog&quot;&gt;HyperLogLog&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Count%E2%80%93min_sketch&quot;&gt;Count-Min sketch&lt;/a&gt;, and many others.&lt;/p&gt;
&lt;p&gt;The three tunables—read, update, and memory overheads—can help you evaluate the database and gain a deeper understanding of the workloads for which it is best suited. All of them are quite intuitive, and it's often easy to sort the storage system into one of the buckets and guess how it's going to perform, then validate your hypothesis through extensive testing.&lt;/p&gt;
&lt;p&gt;Of course, there are other important factors to consider when evaluating a storage system, such as maintenance overhead, operational simplicity, system requirements, suitability for frequent updates and deletes, access patterns, and so on. The RUM Conjecture is just a rule of thumb that helps to develop an intuition and provide an initial direction. Understanding your workload is the first step on the way to building a scalable back end.&lt;/p&gt;
&lt;p&gt;Some factors may vary from implementation to implementation, and even two databases that use similar storage-design principles may end up performing differently. Databases are complex systems with many moving parts and are an important and integral part of many applications. This information will help you peek under the hood of a database and, knowing the difference between the underlying data structures and their inner doings, decide what's best for you.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;p&gt;1. Comer, D. 1979. The ubiquitous B-tree. &lt;em&gt;Computing Surveys&lt;/em&gt; 11(2); 121-137; &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.96.6637&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.96.6637&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2. Data Systems Laboratory at Harvard. The RUM Conjecture; &lt;a href=&quot;http://daslab.seas.harvard.edu/rum-conjecture/&quot;&gt;http://daslab.seas.harvard.edu/rum-conjecture/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;3. Graefe, G. 2011. Modern B-tree techniques. &lt;em&gt;Foundations and Trends in Databases&lt;/em&gt; 3(4): 203-402; &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;amp;rep=rep1&amp;amp;type=pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;4. MySQL 5.7 Reference Manual. The physical structure of an InnoDB index; &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/innodb-physical-structure.html&quot;&gt;https://dev.mysql.com/doc/refman/5.7/en/innodb-physical-structure.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;5. O'Neil, P., Cheng, E., Gawlick, D., O'Neil, E. 1996. The log-structured merge-tree. &lt;em&gt;Acta Informatica&lt;/em&gt; 33(4): 351-385; &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.44.2782&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.44.2782&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;6. Pelkonen, T., Franklin, S., Teller, J., Cavallaro, P., Huang, Q., Meza, J., Veeraraghavan, K. 2015. Gorilla: a fast, scalable, in-memory time series database. &lt;em&gt;Proceedings of the VLDB Endowment&lt;/em&gt; 8(12): 1816-1827;  &lt;a href=&quot;http://www.vldb.org/pvldb/vol8/p1816-teller.pdf&quot;&gt;http://www.vldb.org/pvldb/vol8/p1816-teller.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;7. Suzuki, H. 2015-2018. The internals of PostreSQL; &lt;a href=&quot;http://www.interdb.jp/pg/pgsql01.html&quot;&gt;http://www.interdb.jp/pg/pgsql01.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;8. Apple HFS Plus Volume Format; &lt;a href=&quot;https://developer.apple.com/legacy/library/technotes/tn/tn1150.html#BTrees&quot;&gt;https://developer.apple.com/legacy/library/technotes/tn/tn1150.html#BTrees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9. Mathur, A., Cao, M., Bhattacharya, S., Dilger, A., Tomas, A., Vivier, L. (2007). &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.111.798&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;The new ext4 filesystem: current status and future plans&lt;/a&gt;. &lt;em&gt;Proceedings of the Linux Symposium&lt;/em&gt;. Ottawa, Canada: Red Hat.&lt;/p&gt;
&lt;p&gt;10. Bloom, B. H. (1970), &lt;a href=&quot;https://dl.acm.org/citation.cfm?doid=362686.362692&quot;&gt;Space/time trade-offs in hash coding with allowable errors&lt;/a&gt;,&lt;em&gt;Communications of the ACM&lt;/em&gt;, 13 (7): 422-426&lt;/p&gt;
&lt;h4&gt;Related articles&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1413264&quot;&gt;The Five-minute Rule: 20 Years Later and How Flash Memory Changes the Rules&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Goetz Graefe, Hewlett-Packard Laboratories&lt;br/&gt;The old rule continues to evolve, while flash memory adds two new rules.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1413264&quot;&gt;https://queue.acm.org/detail.cfm?id=1413264&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2696453&quot;&gt;Disambiguating Databases&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Rick Richardson&lt;br/&gt;Use the database built for your access model.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2696453&quot;&gt;https://queue.acm.org/detail.cfm?id=2696453&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1814327&quot;&gt;You're Doing It Wrong&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Poul-Henning Kamp&lt;br/&gt;Think you've mastered the art of server performance? Think again.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1814327&quot;&gt;https://queue.acm.org/detail.cfm?id=1814327&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alex Petrov&lt;/strong&gt; (&lt;a href=&quot;http://coffeenco.de/&quot;&gt;http://coffeenco.de/&lt;/a&gt;, &lt;a href=&quot;https://github.com/ifesdjeen&quot;&gt;@ifesdjeen (GitHub)&lt;/a&gt; &lt;a href=&quot;https://twitter.com/ifesdjeen&quot;&gt;@ifesdjeen (Twitter)&lt;/a&gt;) is an Apache Cassandra committer and storage-systems enthusiast. Over the past several years, he has worked on databases, building distributed systems and data-processing pipelines for various companies.&lt;/p&gt;
&lt;p&gt;Copyright © 2018 held by owner/author. Publication rights licensed to ACM.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;floatLeft&quot; src=&quot;https://queue.acm.org/img/q%20stamp_small.jpg&quot; width=&quot;26&quot; height=&quot;45&quot; alt=&quot;acmqueue&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Originally published in Queue vol. 16, no. 2&lt;/em&gt;—&lt;br/&gt;see this item in the &lt;a href=&quot;https://portal.acm.org/citation.cfm?id=3220266&quot;&gt;ACM Digital Library&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;ACMQueue&quot;&gt;Tweet&lt;/a&gt; 


&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;
Related:
&lt;p&gt;&lt;span&gt;Mihir Nanavati, Malte Schwarzkopf, Jake Wires, Andrew Warfield&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2874238&quot;&gt;&lt;strong&gt;Non-volatile Storage&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Implications of the Datacenter's Shifting Center&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thanumalayan Sankaranarayana Pillai, Vijay Chidambaram, Ramnatthan Alagappan, Samer Al-Kiswany, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2801719&quot;&gt;&lt;strong&gt;Crash Consistency&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Rethinking the Fundamental Abstractions of the File System&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Adam H. Leventhal&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2463636&quot;&gt;&lt;strong&gt;A File System All Its Own&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Flash memory has come a long way. Now it's time for software to catch up.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Michael Cornwell&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2385276&quot;&gt;&lt;strong&gt;Anatomy of a Solid-state Drive&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;While the ubiquitous SSD shares many features with the hard-disk drive, under the surface they are completely different.&lt;/p&gt;
&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;(newest first)&lt;/p&gt;
&lt;p class=&quot;author&quot;&gt;Blagovest Petrov | Wed, 16 May 2018 07:45:01 UTC&lt;/p&gt;
Awesome! What did you use for the diagrams?
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;| Wed, 16 May 2018 07:13:26 UTC&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;

&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3220266#&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/logo_acm.gif&quot;/&gt;&lt;/a&gt;&lt;br/&gt;© 2018 ACM, Inc. All Rights Reserved.&lt;/p&gt;
</description>
<pubDate>Wed, 16 May 2018 01:01:25 +0000</pubDate>
<dc:creator>matt_d</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://queue.acm.org/detail.cfm?id=3220266</dc:identifier>
</item>
<item>
<title>Rust at CloudFlare</title>
<link>https://docs.google.com/presentation/d/1ERVTXZbYBMZf-9Zk3YsWw2oV14C5j0i1PsVgGywSsAI/mobilepresent?slide=id.g244c4c34_09</link>
<guid isPermaLink="true" >https://docs.google.com/presentation/d/1ERVTXZbYBMZf-9Zk3YsWw2oV14C5j0i1PsVgGywSsAI/mobilepresent?slide=id.g244c4c34_09</guid>
<description>&lt;div class=&quot;shape&quot; title=&quot;&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;$ cargo test --message-format=json&lt;/p&gt;
&lt;p&gt;{&quot;features&quot;:[],&quot;filenames&quot;:[&quot;/Users/steve/Code/sine/rust/target/debug/sine-a289a000285de875&quot;,&quot;/Users/steve/Code/sine/rust/target/debug/sine-a289a000285de875.dSYM&quot;],&quot;fresh&quot;:true,&quot;package_id&quot;:&quot;sine 0.1.0 (path+file:///Users/steve/Code/sine/rust)&quot;,&quot;profile&quot;:{&quot;debug_assertions&quot;:true,&quot;debuginfo&quot;:2,&quot;opt_level&quot;:&quot;0&quot;,&quot;overflow_checks&quot;:true,&quot;test&quot;:true},&quot;reason&quot;:&quot;compiler-artifact&quot;,&quot;target&quot;:{&quot;crate_types&quot;:[&quot;bin&quot;],&quot;kind&quot;:[&quot;bin&quot;],&quot;name&quot;:&quot;sine&quot;,&quot;src_path&quot;:&quot;/Users/steve/Code/sine/rust/src/main.rs&quot;}}&lt;/p&gt;
&lt;p&gt;Finished &lt;span&gt;dev [unoptimized + debuginfo] target(s) in 0.0 secs&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Running &lt;span&gt;target/debug/deps/sine-a289a000285de875&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;running 0 tests&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;shape&quot; title=&quot;&quot;&gt;
&lt;p&gt;json please&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;shape&quot; title=&quot;&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;cargo test -- -Z unstable-options --format json 2&amp;gt; /dev/null&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;


</description>
<pubDate>Tue, 15 May 2018 20:03:03 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>Rust Bay Area Meetup - May 2018 @ Cloudflare</og:title>
<og:type>article</og:type>
<og:url>https://docs.google.com/presentation/d/1ERVTXZbYBMZf-9Zk3YsWw2oV14C5j0i1PsVgGywSsAI/mobilepresent?_escaped_fragment_&amp;usp=embed_facebook</og:url>
<og:image>https://lh4.googleusercontent.com/HVwMOxXLlnLgA8ePg4A9m0izs8TZv-kKXG_dq0fftb9vlW6zn5ixWZe_MhT8yuVly2MvWQ=w1200-h630-p</og:image>
<og:description>Rust Bay Area Meetup - May 2018 @Cloudflare! WIFI: Cloudflare-Guest / #savetheinternet</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.google.com/presentation/d/1ERVTXZbYBMZf-9Zk3YsWw2oV14C5j0i1PsVgGywSsAI/mobilepresent?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>State-of-the-art text classification with universal language models</title>
<link>http://nlp.fast.ai/classification/2018/05/15/introducting-ulmfit.html</link>
<guid isPermaLink="true" >http://nlp.fast.ai/classification/2018/05/15/introducting-ulmfit.html</guid>
<description>&lt;p class=&quot;message&quot;&gt;This post is a lay-person’s introduction to our new paper, which shows how to classify documents automatically with both higher accuracy and less data requirements than previous approaches. We’ll explain in simple terms: natural language processing; text classification; transfer learning; language modeling; and how our approach brings these ideas together. If you’re already familar with NLP and deep learning, you’ll probably want to jump over to our &lt;a href=&quot;http://nlp.fast.ai/category/classification.html&quot;&gt;NLP classification page&lt;/a&gt; for technical links.&lt;/p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Today we’re releasing our paper &lt;a href=&quot;https://arxiv.org/abs/1801.06146&quot;&gt;Universal Language Model Fine-tuning for Text Classification&lt;/a&gt; (ULMFiT), pre-trained models, and full source code in the Python programming language. The paper has been peer-reviewed and accepted for presentation at the &lt;a href=&quot;http://acl2018.org/&quot;&gt;Annual Meeting of the Association for Computational Linguistics&lt;/a&gt; (ACL 2018). For links to videos providing an in-depth walk-through of the approach, all the Python modules used, pre-trained models, and scripts for building your own models, see our &lt;a href=&quot;http://nlp.fast.ai/category/classification.html&quot;&gt;NLP classification page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method dramatically improves over previous approaches to &lt;em&gt;text classification&lt;/em&gt;, and the code and pre-trained models allow anyone to leverage this new approach to better solve problems such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Finding documents relevant to a legal case;&lt;/li&gt;
&lt;li&gt;Identifying spam, bots, and offensive comments;&lt;/li&gt;
&lt;li&gt;Classifying positive and negative reviews of a product;&lt;/li&gt;
&lt;li&gt;Grouping articles by political orientation;&lt;/li&gt;
&lt;li&gt;…and much more.&lt;/li&gt;
&lt;/ul&gt;&lt;img class=&quot;image&quot; width=&quot;480&quot; src=&quot;http://nlp.fast.ai/images/ulmfit_imdb.png&quot; alt=&quot;ULMFiT requires orders of magnitude less data than previous approaches.&amp;lt;br /&amp;gt;(Figure 3 from the paper)&quot;/&gt; ULMFiT requires orders of magnitude less data than previous approaches.&lt;br/&gt;(Figure 3 from the paper)
&lt;p&gt;So what does this new technique do exactly? Let’s first of all take a look at part of the abstract from the paper and see what it says—and then in the rest of this article we’ll unpack this and learn exactly what it all means:&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;Transfer learning has greatly impacted computer vision, but existing approaches in NLP still require task-specific modifications and training from scratch. We propose an effective transfer learning method that can be applied to any task in NLP, and introduce techniques that are key for fine-tuning a language model. Our method significantly outperforms the state-of-the-art on six text classification tasks, reducing the error by 18-24% on the majority of datasets. Furthermore, with only 100 labeled examples, it matches the performance of training from scratch on 100x more data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;nlp-deep-learning-and-classification&quot;&gt;NLP, deep learning, and classification&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Natural language processing&lt;/em&gt; (NLP) is an area of computer science and artificial intelligence that deals with (as the name suggests) using computers to process natural language. Natural language refers to the normal languages we use to communicate day to day, such as English or Chinese—as opposed to specialized languages like computer code or music notation. NLP is used in a wide variety of applications, such as search, personal assistants, summarization, etc. Overall, NLP is challenging as the strict rules we use when writing computer code are a poor fit for the nuance and flexibility of language. You’ve likely run into those limitations yourself, with the frustrating experience of trying to communicate with automated phone answering systems, or limited capabilities of early “conversational bots” like Siri.&lt;/p&gt;
&lt;p&gt;In the last couple of years we’ve started to see &lt;em&gt;deep learning&lt;/em&gt; making significant inroads into areas where computers have previously seen limited success. Rather than requiring a set of fixed rules that are defined by the programmer, deep learning uses neural networks that learn rich non-linear relationships directly from data. Most notable is the success of deep learning in computer vision, as seen for example in the rapid progress in image classification in the &lt;a href=&quot;https://qz.com/1034972/the-data-that-changed-the-direction-of-ai-research-and-possibly-the-world/&quot;&gt;Imagenet competition&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Deep learning has also seen some success in NLP, for example in automatic translation, as discussed in &lt;a href=&quot;https://www.nytimes.com/2016/12/14/magazine/the-great-ai-awakening.html&quot;&gt;this extensive NY Times article&lt;/a&gt;. A common feature of successful NLP tasks is that large amounts of labeled data are available for training a model. However, until now such applications were limited to those institutions that were able to collect and label huge datasets and had the computational resources to process them on a cluster of computers for a long time.&lt;/p&gt;
&lt;p&gt;One particular area that is still challenging with deep learning for NLP, curiously enough, is the exact area where it’s been most successful in computer vision: &lt;em&gt;classification&lt;/em&gt;. This refers to any problem where your goal is to categorize things (such as images, or documents) into groups (such as images of cats vs dogs, or reviews that are positive vs negative, and so forth). A huge number of important real-world problems turn out to largely be about classification, which is why, for example, the success of deep learning on Imagenet (which is a classification problem) has led to a great many commercial applications. In NLP, current approaches are good at identifying, for instance, when a movie review is positive or negative, a problem known as &lt;em&gt;sentiment analysis&lt;/em&gt;. Models struggle, however, as soon as things get more ambiguous, as often there is not enough labeled data to learn from.&lt;/p&gt;
&lt;h2 id=&quot;transfer-learning&quot;&gt;Transfer learning&lt;/h2&gt;
&lt;p&gt;Our goal was to address these two problems: a) deal with NLP problems where we don’t have masses of data and computational resources, and b) make NLP classification easier. As it turned out, we (Jeremy and Sebastian) had both been working on the exact field that would solve this: &lt;a href=&quot;http://ruder.io/transfer-learning/&quot;&gt;transfer learning&lt;/a&gt;. Transfer learning refers to the use of a model that has been trained to solve one problem (such as classifying images from Imagenet) as the basis to solve some other somewhat similar problem. One common way to do this is by &lt;em&gt;fine-tuning&lt;/em&gt; the original model (such as classifying CT scans into cancerous or not—an application of transfer learning that Jeremy developed when he founded &lt;a href=&quot;http://www.enlitic.com&quot;&gt;Enlitic&lt;/a&gt;). Because the fine-tuned model doesn’t have to learn from scratch, it can generally reach higher accuracy with much less data and computation time than models that don’t use transfer learning.&lt;/p&gt;
&lt;p&gt;Very simple transfer learning using just a single layer of weights (known as &lt;em&gt;embeddings&lt;/em&gt;) has been extremely popular for some years, such as the &lt;a href=&quot;https://code.google.com/archive/p/word2vec/&quot;&gt;&lt;em&gt;word2vec&lt;/em&gt;&lt;/a&gt; embeddings from Google. However, full neural networks in practice contain many layers, so only using transfer learning for a single layer was clearly just scratching the surface of what’s possible.&lt;/p&gt;
&lt;p&gt;The question, then, was what could we transfer from, in order to solve NLP problems? The answer to this question fell into Jeremy’s lap, when his friend Stephen Merity announced he had developed the &lt;a href=&quot;https://github.com/salesforce/awd-lstm-lm&quot;&gt;AWD LSTM language model&lt;/a&gt;, which was a dramatic improvement over previous approaches to &lt;em&gt;language modeling&lt;/em&gt;. A language model is an NLP model which learns to predict the next word in a sentence. For instance, if your mobile phone keyboard guesses what word you are going to want to type next, then it’s using a language model. The reason this is important is because for a language model to be really good at guessing what you’ll say next, it needs a lot of &lt;em&gt;world knowledge&lt;/em&gt; (e.g. “I ate a hot” → “dog”, “It is very hot” → “weather”), and a deep understanding of grammar, semantics, and other elements of natural language. This is exactly the kind of knowledge that we leverage implicitly when we read and classify a document.&lt;/p&gt;
&lt;p&gt;We found that in practice this approach to transfer learning has the features that allow it to be a &lt;em&gt;universal&lt;/em&gt; approach to NLP transfer learning:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It works across tasks varying in document size, number, and label type&lt;/li&gt;
&lt;li&gt;It uses a single architecture and training process&lt;/li&gt;
&lt;li&gt;It requires no custom feature engineering or preprocessing&lt;/li&gt;
&lt;li&gt;It does not require additional in-domain documents or labels.&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;making-it-work&quot;&gt;Making it work&lt;/h2&gt;
&lt;img class=&quot;image&quot; width=&quot;640&quot; src=&quot;http://nlp.fast.ai/images/ulmfit_approach.png&quot; alt=&quot;High level ULMFiT approach (IMDb example)&quot;/&gt; High level ULMFiT approach (IMDb example)
&lt;p&gt;This idea &lt;a href=&quot;https://arxiv.org/abs/1511.01432&quot;&gt;has been tried before&lt;/a&gt;, but required millions of documents for adequate performance. We found that we could do a lot better by being smarter about how we fine-tune our language model. In particular, we found that if we carefully control how fast our model learns and update the pre-trained model so that it does not forget what it has previously learned, the model can adapt a lot better to a new dataset. One thing that we were particularly excited to find is that the model can learn well even from a limited number of examples. On one text classification dataset with two classes, we found that training our approach with only 100 labeled examples (and giving it access to about 50,000 unlabeled examples), we were able to achieve the same performance as training a model from scratch with 10,000 labeled examples.&lt;/p&gt;
&lt;p&gt;Another important insight was that we could use any reasonably general and large language corpus to create a universal language model—something that we could fine-tune for any NLP target corpus. We decided to use Stephen Merity’s &lt;a href=&quot;https://einstein.ai/research/the-wikitext-long-term-dependency-language-modeling-dataset&quot;&gt;Wikitext 103&lt;/a&gt; dataset, which contains a pre-processed large subset of English Wikipedia.&lt;/p&gt;
&lt;p&gt;Research in NLP has mostly focused on English and training a model on a non-English language comes with its own set of challenges. Generally, the number of public datasets for non-English languages is small; if you want to train a text classification model for a language such as Thai, you invariably have to collect your own data. Collecting data in a non-English language often means that you need to annotate the data or find annotators yourself, as crowd-sourcing services such as &lt;a href=&quot;https://www.mturk.com/&quot;&gt;Amazon Mechanical Turk&lt;/a&gt; mostly employ English-speaking annotators.&lt;/p&gt;
&lt;p&gt;With ULMFiT, we can make training text classification models for languages other than English a lot easier as all we need is access to a Wikipedia, which is currently &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Wikipedias&quot;&gt;available for 301 languages&lt;/a&gt;, a small number of documents that can easily be annotated by hand, and optionally additional unlabeled documents. To make this even easier, we will soon launch a &lt;a href=&quot;http://nlp.fast.ai/category/model_zoo.html&quot;&gt;model zoo&lt;/a&gt; with pre-trained language models for many languages.&lt;/p&gt;
&lt;h2 id=&quot;the-future-of-ulmfit&quot;&gt;The future of ULMFiT&lt;/h2&gt;
&lt;p&gt;We have found that the approach works well on different tasks with the same settings. Besides text classification, there are many other important NLP problems, such as sequence tagging or natural language generation, that we hope ULMFiT will make easier to tackle in the future. We will be updating this site as we complete our experiments and build models in these areas.&lt;/p&gt;
&lt;p&gt;In computer vision the success of transfer learning and availability of pre-trained Imagenet models has transformed the field. Many people including entrepreneurs, scientists, and engineers are now using fine-tuned Imagenet models to solve important problems involving computer vision—everything from improving crop yields in Africa to building robots that sort lego bricks. Now that the same tools are available for processing natural language, we hope to see the same explosion of applications in this field too.&lt;/p&gt;
&lt;p&gt;Whilst we already have shown state of the art results for text classification, there’s still a lot of work to be done to really get the most out of NLP transfer learning. In the computer vision world there have been a number of important and insightful papers that have analyzed transfer learning in that field in depth. In particular, Yosinski et al. tried to answer the question “&lt;a href=&quot;https://arxiv.org/abs/1411.1792&quot;&gt;how transferable are features in deep neural networks&lt;/a&gt;”, and Huh et al. studied “&lt;a href=&quot;https://arxiv.org/abs/1608.08614&quot;&gt;what makes ImageNet good for transfer learning&lt;/a&gt;”. Yosinski even created a rich &lt;a href=&quot;https://github.com/yosinski/deep-visualization-toolbox&quot;&gt;visualization toolkit&lt;/a&gt; to help practitioners better understand the features in their computer vision models (shown in the video below).&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/AgkfIQ4IGaM&quot; frameborder=&quot;0&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt; Deep Visualization Toolbox
&lt;p&gt;If you try out ULMFiT on a new problem or dataset, we’d love to hear about it! Drop by the &lt;a href=&quot;http://forums.fast.ai&quot;&gt;deep learning forums&lt;/a&gt; and tell us how it goes (and do let us know if you have any questions along the way).&lt;/p&gt;

</description>
<pubDate>Tue, 15 May 2018 18:12:57 +0000</pubDate>
<dc:creator>jph00</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://nlp.fast.ai/classification/2018/05/15/introducting-ulmfit.html</dc:identifier>
</item>
<item>
<title>I Got Catfished by a Candidate</title>
<link>https://www.saastr.com/catfished-by-a-candidate/</link>
<guid isPermaLink="true" >https://www.saastr.com/catfished-by-a-candidate/</guid>
<description>&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-49887&quot; src=&quot;https://3yq63w3tvb6c1innxc1hzsya-wpengine.netdna-ssl.com/wp-content/uploads/catfish-candidate.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;422&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;What follows is a true story. Names, places, and companies have been changed to protect the innocent (or not so innocent).&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I was catfished by a candidate. And not just during a phone screen. This guy made it through a recruiting agency, a phone screen, and three rounds of interviews. We were about to make the hire when everything unraveled.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For those of you who aren’t familiar with the term, a catfish is someone who creates a false identity online. The motivation behind a catfish can vary from tricking someone in an online dating app, seeking revenge, simply playing a joke, or in my case, seeking a job.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I learned a lot from this experience (plus it is a pretty good story), so I thought it would be fitting to share with the SaaStr community.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Act One: Falling For The Catfish&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When someone seems too good to be true they usually are. A clever Catfish Candidate won’t appear to be perfect—he will say all the right things when you need him to, but will mix in enough humility to give his story just enough edge to seem plausible.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After countless phone screens, in-person interviews, and even a failed hire or two, any hiring manager can become exhausted. So much so that when a good candidate comes around you can fall for him immediately and things can’t move quickly enough.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the case of our Catfish, who applied for an AE role, we hit it off fantastically over the phone. Plus, he worked at a previous company that I worked for—which was a win and made me feel comfortable with his candidacy right off the bat. After the phone screen, we brought him back into the office to meet with the team. He impressed each interviewer with his knowledge and passion for the brand, his sales acumen, outbound hunter mentality, and overall presence.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Our Catfish never faltered, kept a smile on his face the entire time, and did his homework. We even talked about sales operations, discussed the pros and cons of MEDDIC, and talked about Salesforce workflows. I mean, this guy was pretty good.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next step was the offer, and if I was lucky, maybe I could have a new rep in the office by next week.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now, if I looked a little closer, I would have seen some telltale signs. His story didn’t totally add up, his LinkedIn profile was on the lighter side, and we only had a few common connections—which was odd considering we both had worked at the same company.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Act Two: Things Start Getting a Little (Cat)Fishy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Before I make any hire I always do my reference checks. I call the ones that the candidate provides and I do my own backdoor reference checks. I know, backdoor reference checks aren’t&lt;/span&gt; &lt;em&gt;&lt;span&gt;always&lt;/span&gt;&lt;/em&gt; &lt;span&gt;considered kosher by everyone…but…I do consider them to be necessary—especially in the Bay Area. And, to those of you who are shaking their heads at me right now—if I didn’t do my backdoor checks I would have never uncovered the Catfish.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I asked for his references from the recruiter, I requested that one of them be his manager at the company that I had previously worked for—let’s call that company Acme Corp for the sake of this post. He said that he left on good terms, so this shouldn’t have been a problem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;While waiting for his references to come through, I started doing my own reference checks. Now, it has been awhile since I worked at Acme Corp and the company has gone through extensive changes—especially on the sales team—so I knew I didn’t have many contacts left over there. I went through hundreds of AEs on LinkedIn searching for the name of someone I was friendly with. I found two people—let’s call one Jim and one Bob—and I reached out to them both asking if they knew my Catfish.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next day I received two references from the recruiter—but neither was a manager and neither was from Acme Corp. Apparently she was still waiting for that particular reference. Odd…but OK. Why wouldn’t he have that info readily available?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I checked my LinkedIn, I saw that my two friends had gotten back to me, but neither Jim nor Bob had heard of my candidate. However, Jim said he would ask around discreetly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now I was starting to get nervous. No Acme Corp reference…my friends that supposedly worked on the same team didn’t know him. Seems suspect. I mean, maybe they didn’t know each other because Acme Corp is a large company now with lots of sales reps?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Plausible, but unlikely.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then everything quickly unraveled from there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Act Three: Catching a Catfish&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The recruiter was still having trouble getting the Acme Corp reference—which at this point was causing me some minor heart palpitations. Something wasn’t right.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A bit later in the day I got a ping on LinkedIn from Jim who said that he had asked around and no one has heard of him. Jim had even looked in Salesforce and no one by my Catfish’s name had never held a Salesforce account for Acme. And finally, in Jim’s opinion—my Catfish had never worked there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;WTF. UGH. Was it possible that someone had made it through the interview process all of the way to references and completely lied about his most recent work experience—at a company I had previously worked for? That would be crazy, right? And also very risky.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And then the clincher came—a completely coincidental, struck-by-lightning, never-happens-IRL clincher. The recruiter emailed me back with the Catfish’s reference…and what name was staring at me but the name, email address, and phone number of my friend Jim. Well, the fake email address and phone number anyway. Our Catfish was now confirmed. Out of all of the possible people to choose as your fake manager, this person chose one out of the two people that I knew from Acme Corp.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The catfish had gone so far as to create fake email addresses and phone numbers for his references.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After that, I went full-boar sleuthing on Google putting to work all of the skills that I had learned watching the MTV show&lt;/span&gt; &lt;em&gt;&lt;span&gt;Catfish.&lt;/span&gt;&lt;/em&gt; &lt;span&gt;Reverse phone number lookups, social media pages, deep Google searches, and more. I was consumed. And I found some additional concerning things.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The craziest part was that if the Catfish had picked&lt;/span&gt; &lt;em&gt;&lt;span&gt;literally any other person&lt;/span&gt;&lt;/em&gt; &lt;span&gt;who worked at Acme Corp I probably would never have known. I would have called the fake phone number and emailed the fake email address and would have never been the wiser. I would have spoken to Fake Jim, who would have given me a glowing reference and I would have sent the offer letter. Done deal. Signed and delivered.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Act Four: How to Spot a Catfish Candidate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After it was confirmed that our Catfish had indeed lied on his resume, on his LinkedIn profile, in interviews, and provided fake reference details, I spent a good amount of time marinating on what happened. My team and I are a pretty savvy group. How did it get by us and how do you prevent this going forward?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We for sure would have hired this guy. And who knows, maybe he would have killed it. But, in the end, something would have slipped and the situation would have caused repercussions six months down the line.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Learn from my mistakes! Here is how to spot a catfish candidate before you are dragged into his murky waters:&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Rule #1: Trust your gut!&lt;/strong&gt; &lt;span&gt;Most Catfish make a few mistakes along the way. Perhaps it is a story that doesn’t quite make sense, a too-new LinkedIn profile, or an unexplained hole in a resume—either way, there is usually something. Some folks on my team did pick up on the fact that this candidate’s story did sound slightly odd. If something doesn’t add up…trust your gut and dig in deeper.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rule #2: Take a long hard look at a candidate’s social profiles.&lt;/strong&gt; &lt;span&gt;Probably the most tell-tale sign that there was something amiss with this candidate was his LinkedIn profile. An AE who has been in the SaaS space for several years should have a pretty built-out profile. This profile looked pretty new, didn’t have a ton of connections, and I only shared a couple of connections with him.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rule #3: Always do reference checks and get a backdoor reference if you can.&lt;/strong&gt; &lt;span&gt;Sometimes people forget to do the reference check step. This needs to be a critical step in the process. And my advice is to go a step further—see if you have any common connections and reach out. If nothing is apparent from their profile, consider if you know anyone who may have worked at your candidate’s past company and reach out.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rule #4: Google is your friend.&lt;/strong&gt; &lt;span&gt;It’s easy to forget this step. But before you make a hire, search his name in Google because you never know what might come up. And, don’t just check the first page—make sure to go deeper into the search results to try and catch anything suspicious.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;After careful deliberation (and a good bout of self control) I decided not to reach out to the candidate and reenact a Catfish confrontation a la Nev and Max. In the end, I was definitely disappointed the candidate ended up being a fake. However, I am glad that I caught it early before we hired him. If we had hired him, tough to say what could have happened. Maybe he would have been great and our best performing AE. Maybe he wouldn’t have even known how to log into Salesforce. Or, even worse, maybe he would have been dishonest about something down the line. Whatever the outcome, better to suss it out early.&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 15 May 2018 17:57:27 +0000</pubDate>
<dc:creator>imartin2k</dc:creator>
<og:url>https://www.saastr.com/catfished-by-a-candidate/</og:url>
<og:type>article</og:type>
<og:title>I Got Catfished By A Candidate: The True Story and How to Keep It From Happening to You</og:title>
<og:description>What follows is a true story. Names, places, and companies have been changed to protect the innocent (or not so innocent). I was catfished by a candidate. And not just during a phone screen. This guy made it through a recruiting agency, a phone scree...</og:description>
<og:image>//3yq63w3tvb6c1innxc1hzsya-wpengine.netdna-ssl.com/wp-content/uploads/catfish-candidate.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.saastr.com/catfished-by-a-candidate/</dc:identifier>
</item>
<item>
<title>Completely Silent Computer</title>
<link>https://tp69.wordpress.com/2018/04/17/completely-silent-computer/</link>
<guid isPermaLink="true" >https://tp69.wordpress.com/2018/04/17/completely-silent-computer/</guid>
<description>&lt;p&gt;I’ve been trying to make my computers quieter for nearly three decades.  Custom liquid cooling loops, magnetically-stabilised fluid-dynamic bearings, acoustic dampeners, silicone shock absorbers, you name it.  Well, last week I finally managed to build a &lt;strong&gt;completely silent computer&lt;/strong&gt;.  Without further ado…&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1335&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4a/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518346052&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;50&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.0083333333333333&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4a&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1335&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=640&quot; alt=&quot;DB4a&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4a.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Say hello to the &lt;a href=&quot;http://www.streacom.com/products/db4-fanless-chassis/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Streacom DB4&lt;/a&gt; — a 26x26x27cm case that doesn’t have a single fan.  Indeed, it doesn’t have any moving parts at all.  It’s totally silent — 0dB.&lt;/p&gt;
&lt;p&gt;If you strip away the top and four (13mm-thick extruded aluminium) side walls, you see a minimal chassis, and a central mounting plate for a mini-ITX motherboard (oriented with IO pointing down through the bottom of the case).&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1336&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4b/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=640&quot; data-orig-size=&quot;1200,900&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;DB4b&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1336&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=640&quot; alt=&quot;DB4b&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4b.jpeg?w=1024 1024w, https://tp69.files.wordpress.com/2018/04/db4b.jpeg 1200w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;At the time I selected components for the system, there were only four mini-ITX motherboards for me to choose from:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ASUS ROG Strix B350-I Gaming&lt;/li&gt;
&lt;li&gt;Gigabyte AB350N-Gaming-WiFi ITX&lt;/li&gt;
&lt;li&gt;MSI B350I Pro AC&lt;/li&gt;
&lt;li&gt;ASRock Fatal1ty AB350 Gaming-ITX/ac&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(Astute readers will notice they are all AMD (Socket AM4) motherboards.  The whole Meltdown/Spectre debacle rendered my previous Intel system insecure and unsecurable so that was the final straw for me — no more Intel CPUs.)&lt;/p&gt;
&lt;p&gt;I ended up getting the &lt;a href=&quot;https://www.asrock.com/mb/AMD/Fatal1ty%20AB350%20Gaming-ITXac/index.asp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ASRock AB350 Gaming-ITX/ac&lt;/a&gt; motherboard:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1337&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4c/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518091921&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;64&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4c&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1337&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=640&quot; alt=&quot;DB4c&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4c.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Although any mini-ITX motherboard can — theoretically — be mounted in the DB4, the whole case is designed to be &lt;strong&gt;passively-cooled&lt;/strong&gt; by using heat pipes to transfer the heat generated by the CPU and GPU to the side panels where it can be radiated and convected away.  Careful analysis of the routes the CPU heat pipes would need to take, and clearances required by them, revealed that certain motherboards simply wouldn’t work — components were in the way.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Gigabyte has the ATX power connector at the top of the board for some reason, so that was a massive, insurmountable obstacle.&lt;/li&gt;
&lt;li&gt;The Asus has a solid bank of SoC VRM caps that the heatpipes would have literally rested on.  Anyone that knows anything about capacitors and heat knows that would have been a recipe for disaster.&lt;/li&gt;
&lt;li&gt;The MSI has a huge SoC VRM heatsink that would have posed an insurmountable obstacle to one (maybe even two) of the heatpipes.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The ASRock was the &lt;em&gt;only&lt;/em&gt; motherboard that could fit the DB4 (and optional &lt;a href=&quot;http://www.streacom.com/products/lh6-cpu-heatpipe-kit-for-db4/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LH6 Cooling Kit&lt;/a&gt;) heat pipes without much in the way of drama.  All of that will probably make a lot more sense when you see the heatpipes installed:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1339&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4d/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518102282&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;64&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4d&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1339&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=640&quot; alt=&quot;DB4d&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4d.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To fully appreciate the minute clearances involved, here it is from another angle:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1340&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4e/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518101372&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;50&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4e&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1340 aligncenter&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=640&quot; alt=&quot;DB4e&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4e.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;em&gt;Yep, literally fractions of a millimetre of clearance in some places.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The DB4 comes with the hardware necessary to shift heat from the CPU to one of the side panels via four heatpipes and a single heat spreader.  In this configuration a 65W CPU can be supported.  By adding the LH6 Cooling Kit, you can connect the CPU to two side panels via six heatpipes and three heat spreaders, and support a 105W CPU.&lt;/p&gt;
&lt;p&gt;In such a passively-cooled system, the heat dissipation figures limit the CPUs that can be installed.  For reference:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ryzen 2400G 4C8T 3.6GHz — 46-65W&lt;/li&gt;
&lt;li&gt;Ryzen 5 1600 6C12T 3.2GHz — 65W&lt;/li&gt;
&lt;li&gt;Ryzen 5 1600X 6C12T 3.6GHz — 95W&lt;/li&gt;
&lt;li&gt;Ryzen 7 1700 8C16T 3.0GHz — 65W&lt;/li&gt;
&lt;li&gt;Ryzen 7 1700X 8C16T 3.4GHz — 95W&lt;/li&gt;
&lt;li&gt;Ryzen 7 1800X 8C16T 3.6GHz — 95W&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So a stock DB4 can only support up to a 2400G/1600/1700 — forget overclocking — whilst a DB4+LH6 can support even a 1600X/1700X/1800X — with a little bit of room for overclocking.&lt;/p&gt;
&lt;p&gt;Unlike Intel — who only support their sockets for as long as it takes you to unwrap the box — AMD supports their sockets for &lt;em&gt;much&lt;/em&gt; longer.  The AM4 will be supported until 2020.  Thus my &lt;em&gt;cunning plan&lt;/em&gt; was to start off 2018 with a CPU that can be comfortably cooled by the DB4+LH6, overclock, stress test and monitor thermals for a couple of years, then — &lt;em&gt;if the advantages would be tangible and I feel the need&lt;/em&gt; — throw in a more efficient CPU when the last AM4 CPUs come off the production line in 2020, then cruise for the next half-decade or so.&lt;/p&gt;
&lt;p&gt;All of that led me to install a 65W &lt;a href=&quot;https://www.amd.com/en/products/cpu/amd-ryzen-5-1600&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ryzen 5 1600&lt;/a&gt;.  Since I have a B350 motherboard, I have the ability to overclock the CPU to 1600X/95W levels without much of an issue.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1343&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4f/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518093943&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;80&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4f&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1343&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=640&quot; alt=&quot;DB4f&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4f.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Note:  If you are happy sitting within the 65W thermal envelope, and are &lt;em&gt;not&lt;/em&gt; overclocking anything, you could forego the LH6 Cooling Kit.  Because the DB4 heat pipes are &lt;em&gt;shorter&lt;/em&gt; than the LH6 ones, and don’t go over the edge of the motherboard, pretty-much all of the component obstruction issues that eliminated the Gigabyte, Asus and MSI motherboards from consideration would no longer apply.  Something to keep in mind if you &lt;em&gt;don’t&lt;/em&gt; need the speed but &lt;em&gt;do&lt;/em&gt; want some of the features that one or more of those boards may have (but which the ASRock does not).&lt;/p&gt;
&lt;p&gt;As far as memory goes, I went with a &lt;a href=&quot;https://www.corsair.com/us/en/Categories/Products/Memory/VENGEANCE%C2%AE-LPX-16GB-%282-x-16GB%29-DDR4-DRAM-2400MHz-C16-Memory-Kit---Black/p/CMK32GX4M2Z2400C16&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Corsair Vengeance LPX CMK32GX4M2Z2400C16 32GB (2x16GB) DDR4&lt;/a&gt; kit.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1344&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/cmk32gx4m2z2400c16-l/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=640&quot; data-orig-size=&quot;960,726&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;cmk32gx4m2z2400c16-l&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1344&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=640&quot; alt=&quot;cmk32gx4m2z2400c16-l&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=640 640w, https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=150 150w, https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=300 300w, https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg?w=768 768w, https://tp69.files.wordpress.com/2018/04/cmk32gx4m2z2400c16-l.jpg 960w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I’ve never had a problem with Corsair Vengeance LPX RAM.  This specific kit was on the QVL for the motherboard and an overclocker was able to push his kit to 3200MHz on exactly the same motherboard as I have, so I was confident that I could get a nice memory overclock with minimal effort — subject to the silicon lottery, of course.  Since this machine isn’t for gaming, and isn’t running an APU, &lt;em&gt;really high&lt;/em&gt; memory speeds aren’t as important to me as large amounts of RAM.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1346&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4g/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=399&amp;amp;h=130&quot; data-orig-size=&quot;654,213&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;DB4g&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=399&amp;amp;h=130?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=399&amp;amp;h=130?w=640&quot; class=&quot; wp-image-1346 alignright&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=399&amp;amp;h=130&quot; alt=&quot;DB4g&quot; width=&quot;399&quot; height=&quot;130&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=399&amp;amp;h=130 399w, https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=150&amp;amp;h=49 150w, https://tp69.files.wordpress.com/2018/04/db4g1.jpeg?w=300&amp;amp;h=98 300w, https://tp69.files.wordpress.com/2018/04/db4g1.jpeg 654w&quot; sizes=&quot;(max-width: 399px) 100vw, 399px&quot;/&gt;&lt;img data-attachment-id=&quot;1347&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4h/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=401&amp;amp;h=289&quot; data-orig-size=&quot;664,478&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;DB4h&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=401&amp;amp;h=289?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=401&amp;amp;h=289?w=640&quot; class=&quot; wp-image-1347 alignright&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=401&amp;amp;h=289&quot; alt=&quot;DB4h&quot; width=&quot;401&quot; height=&quot;289&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=401&amp;amp;h=289 401w, https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=150&amp;amp;h=108 150w, https://tp69.files.wordpress.com/2018/04/db4h.jpeg?w=300&amp;amp;h=216 300w, https://tp69.files.wordpress.com/2018/04/db4h.jpeg 664w&quot; sizes=&quot;(max-width: 401px) 100vw, 401px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;SSDs are the only totally silent storage option, and I got rid of my last HDD more than seven years ago, so this system was always going to have SSDs.  The only question was “Which ones?”&lt;/p&gt;
&lt;p&gt;Since the motherboard has an M.2 slot on the back, I decided to go with a &lt;a href=&quot;https://www.samsung.com/us/computing/memory-storage/solid-state-drives/ssd-960-evo-m-2-1tb-mz-v6e1t0bw/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1TB Samsung 960 Evo NVMe&lt;/a&gt; for the main drive and a &lt;a href=&quot;https://www.samsung.com/us/computing/memory-storage/solid-state-drives/ssd-860-evo-2-5--sata-iii-1tb-mz-76e1t0b-am/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1TB Samsung 860 Evo SATA&lt;/a&gt; for the backup drive.&lt;/p&gt;
&lt;p&gt;I would have preferred two NVMe drives (to cut down on cable clutter), but the ASRock motherboard only has one M.2 slot.  The Asus motherboard, on the other hand, has two slots but (as mentioned before) that is not compatible with the LH6 Cooling Kit.  Ah well — compromises of some sort often need to be made.&lt;/p&gt;
&lt;p&gt;For what I will be doing with this computer, fast transfer rates and a life expectancy of at least seven years is what I am after from these drives.  I only really need ~600GB of space, so by over-provisioning a couple of hundred gigs I can let wear-levelling do its thing and make seven years an easy target to hit.&lt;/p&gt;
&lt;p&gt;Even though this system is &lt;em&gt;not&lt;/em&gt; meant to be a gaming rig, there’s no harm in putting in the best GPU you can without blowing the thermals.  The &lt;a href=&quot;http://www.streacom.com/products/gpu-cooling-kit-for-db4/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GPU Cooling Kit&lt;/a&gt; allows up to a 75W GPU to be modded and cooled via heat pipes and spreader to a single wall.  That pretty-much limits you to the GTX 1050 Ti and below if you prefer Nvidia cards — like I do.&lt;/p&gt;
&lt;p&gt;The GPU I &lt;em&gt;wanted&lt;/em&gt; was the MSI GeForce GTX 1050 Ti Aero ITX OC 4GB but my parts supplier ran out of them literally as I was assembling my online order.  With no idea when supplies would be restored (thanks to the cryptocurrency mining craze), I went with my second preference of an &lt;a href=&quot;https://www.asus.com/us/Graphics-Cards/PH-GTX1050TI-4G/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ASUS Phoenix GeForce GTX 1050 Ti 4GB&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1351&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4j/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1523629093&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;125&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4j&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1351&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=640&quot; alt=&quot;DB4j&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4j.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Whilst both GPUs fit into the space, the MSI was a few centimetres shorter than the Asus.  None of the dual-fan 1050 Ti GPUs had even the remotest chance of fitting.&lt;/p&gt;
&lt;p&gt;After removing the fan, shroud and heatsink I cleaned up the GPU itself, applied fresh thermal paste, then fitted the GPU Cooling Kit:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1352&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4k/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=640&quot; data-orig-size=&quot;2451,3264&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;DB4k&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=640?w=225&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1352&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=640&quot; alt=&quot;db4k.jpeg&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=113 113w, https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=225 225w, https://tp69.files.wordpress.com/2018/04/db4k-e1523985297921.jpeg?w=768 768w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The final step was to pop heat sinks onto each of the four VRAM chips:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1353&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4l/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1523643498&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4l&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1353&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=640&quot; alt=&quot;DB4l&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4l.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Power testing of a wide range of 1050 Ti cards reveals that they do indeed pull the full 75W when under load, so I’m at the limits of the GPU Cooling Kit and there’s no room for overclocking the GPU (even if I wanted to).&lt;/p&gt;
&lt;p&gt;To power all this I installed a &lt;a href=&quot;http://www.streacom.com/products/zf240-fanless-240w-zeroflex-psu/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Streacom ZF240 Fanless 240W ZeroFlex PSU&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1348&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4i/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518106413&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;160&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.05&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4i&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1348&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=640&quot; alt=&quot;DB4i&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4i.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I researched the power draws of the various components and worked out that the power budgets on all rails — except the 12V rail — had plenty of headroom.  The 12V rail can theoretically hit ~85% of the 168W max capacity if both the CPU &lt;em&gt;and&lt;/em&gt; GPU are running at 100%.  Normally I prefer to leave myself a lot more headroom than that, but since this system is not meant for gaming, and I can’t actually think of any other scenarios where I’m likely to max out both &lt;em&gt;at the same time&lt;/em&gt;, I’m not really concerned.  (If it &lt;em&gt;does&lt;/em&gt; become an issue then I can install a SFX PSU with minimal effort and buy myself more headroom.)&lt;/p&gt;
&lt;p&gt;Over the years I’ve also come to appreciate PSU efficiency curves, and recognise that ‘idling’ systems with large PSUs is a horrible waste of energy.  To get the most out of your PSU you should size it so that your typical usage falls in the 25-75% range.  The ZF240 has an efficiency rating of 93% and I think my selection of components will let it achieve such levels on a regular basis — given my historic and anticipated usage patterns.&lt;/p&gt;
&lt;p&gt;Low power consumption is an especially important issue if you plan on going off-grid.  Since that’s a goal we have in the 2–4 year time frame, and this computer will be used much longer than that, it makes sense to aim for high efficiency and low power consumption at the same time.&lt;/p&gt;
&lt;p&gt;&lt;img data-attachment-id=&quot;1354&quot; data-permalink=&quot;https://tp69.wordpress.com/2018/04/17/completely-silent-computer/db4m/&quot; data-orig-file=&quot;https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=640&quot; data-orig-size=&quot;3264,2448&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;2.4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;iPhone 4S&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1518347369&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;4.28&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;50&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.005952380952381&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;DB4m&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=640?w=300&quot; data-large-file=&quot;https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=640?w=640&quot; class=&quot;alignnone size-full wp-image-1354&quot; src=&quot;https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=640&quot; alt=&quot;DB4m&quot; srcset=&quot;https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=640 640w, https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=1280 1280w, https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=150 150w, https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=300 300w, https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=768 768w, https://tp69.files.wordpress.com/2018/04/db4m.jpeg?w=1024 1024w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Final remarks…&lt;/p&gt;
&lt;p&gt;The pursuit of silence &lt;em&gt;can&lt;/em&gt; be costly and this build certainly was — ending up just shy of AU$3,000.  If cryptocurrency miners weren’t inflating prices all over the place, it probably could have come in closer to $2,400 — still a fair bit, but not eye-watering.  Nonetheless, the price is less than each of my last three systems and it manages to achieve what none of them ever did:  &lt;strong&gt;Complete and utter silence&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This computer makes no noise when it starts up.  It makes no noise when it shuts down.  It makes no noise when it idles.  It makes no noise when it’s under heavy load.  It makes no noise when it’s reading or writing data.  It can’t be heard in a regular room during the day.  It can’t be heard in a completely quiet house in the middle of the night.  It can’t be heard from 1m away.  It can’t be heard from 1cm away.  It can’t be heard — &lt;em&gt;period&lt;/em&gt;.  It’s taken nearly 30 years to reach this point, but I’ve finally arrived.  The journey is over and &lt;em&gt;it feels great&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are after a silent — not just quiet, but &lt;em&gt;silent&lt;/em&gt; — daily driver, then I strongly recommend a passively-cooled case, heat pipes and solid state drives.  Eliminate the moving parts (e.g. fans, HDDs) and you eliminate the noise — it’s not that complicated.  It also doesn’t need to be really expensive (my system requirements were not ‘average’ so please don’t infer from this post that all DB4-based systems are as expensive).  Silence (and a perfectly respectable computer) can easily be had for half the price.&lt;/p&gt;
&lt;p&gt;That’s about it, methinks.  If you have any questions or would like more details (about any aspect of this build) to be added to the post, fire away in the comments.&lt;/p&gt;
&lt;p&gt;Cheerio!&lt;/p&gt;

&lt;div class=&quot;wpcnt&quot;&gt;
&lt;div class=&quot;wpa wpmrec&quot;&gt;&lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 15 May 2018 17:03:47 +0000</pubDate>
<dc:creator>signa11</dc:creator>
<og:type>article</og:type>
<og:title>Completely Silent Computer</og:title>
<og:url>https://tp69.wordpress.com/2018/04/17/completely-silent-computer/</og:url>
<og:description>I’ve been trying to make my computers quieter for nearly three decades.  Custom liquid cooling loops, magnetically-stabilised fluid-dynamic bearings, acoustic dampeners, silicone shock absorb…</og:description>
<og:image>https://tp69.files.wordpress.com/2018/04/db4i.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tp69.wordpress.com/2018/04/17/completely-silent-computer/</dc:identifier>
</item>
<item>
<title>Ask HN: How do I learn math/physics in my thirties?</title>
<link>https://news.ycombinator.com/item?id=17075261</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=17075261</guid>
<description>I'm in my early thirties and I feel I've not really made any significant effort in learning math/physics beyond the usual curriculum at school. I realize I didn't have the need for it and didn't have the right exposure (environment/friends) that would have inculcated in me these things. And perhaps I was lazy as well all these years to go that extra mile.
&lt;p&gt;I have (had) a fairly good grasp of calculus and trigonometry and did a fairly good job working on a number of problems in high school. But over the past 12-13 years, I've really not had any need to flex my math muscles other than a problem here or there at work. Otherwise it's the same old enterprise software development.&lt;/p&gt;&lt;p&gt;I follow a bunch of folks on the internet and idolize them for their multifaceted personalities - be it math, programming/problem solving, physics, music etc. And these people had a natural flair for math/physics which was nurtured by their environment which made them participate in IOI/ACPC etc. in high school and undergrad which unfortunately I didn't get a taste of. I can totally see that these are the folks who have high IQs and they can easily learn a new domain in a few months if they were put in one.&lt;/p&gt;
&lt;p&gt;Instead of ruing missed opportunities, I want to take it under my stride in my thirties to learn math/physics so as to become better at it. I might not have made an effort till now, but I hopefully have another 40 years to flex my muscles. I believe I'm a little wiser than how I was a few years back, so I'm turning to the community for help.&lt;/p&gt;
&lt;p&gt;How do I get started? I'm looking to (re)learn the following - calculus, linear algebra, constraint solving, optimization problems, graph theory, discrete math and slowly gain knowledge and expertise to appreciate theoretical physics, astrophysics, string theory etc.&lt;/p&gt;
</description>
<pubDate>Tue, 15 May 2018 16:40:09 +0000</pubDate>
<dc:creator>mosconaut</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=17075261</dc:identifier>
</item>
<item>
<title>Introducing Surface Hub 2</title>
<link>https://www.microsoft.com/en-us/surface/business/surface-hub-2?ranMID=24542&amp;ranEAID=nOD/rLJHOac&amp;ranSiteID=nOD_rLJHOac-1V1lpEzo5_X6JfKOdhtdnw&amp;tduid=(7a84a49de6e2bd145c26ef7d5726ab90)(256380)(2459594)(nOD_rLJHOac-1V1lpEzo5_X6JfKOdhtdnw)()</link>
<guid isPermaLink="true" >https://www.microsoft.com/en-us/surface/business/surface-hub-2?ranMID=24542&amp;ranEAID=nOD/rLJHOac&amp;ranSiteID=nOD_rLJHOac-1V1lpEzo5_X6JfKOdhtdnw&amp;tduid=(7a84a49de6e2bd145c26ef7d5726ab90)(256380)(2459594)(nOD_rLJHOac-1V1lpEzo5_X6JfKOdhtdnw)()</guid>
<description>&lt;h2 class=&quot;c-heading-2 f-lean&quot;&gt;Move beyond meetings, to true teaming&lt;/h2&gt;
&lt;p class=&quot;c-paragraph-2&quot;&gt;Teams come in all shapes and sizes. They can be local or spread across the globe. People are your biggest investment – and your most valuable asset. To transform from collaboration to true teamwork, you need to invest in tools that bring out their best in the conference room, in a team space, in any space.&lt;/p&gt;
</description>
<pubDate>Tue, 15 May 2018 15:36:59 +0000</pubDate>
<dc:creator>remir</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.microsoft.com/en-us/surface/business/surface-hub-2?ranMID=24542&amp;ranEAID=nOD/rLJHOac&amp;ranSiteID=nOD_rLJHOac-1V1lpEzo5_X6JfKOdhtdnw&amp;tduid=(7a84a49de6e2bd145c26ef7d5726ab90)(256380)(2459594)(nOD_rLJHOac-1V1lpEzo5_X6JfKOdhtdnw)()</dc:identifier>
</item>
<item>
<title>HTTP headers we don&amp;#039;t want</title>
<link>https://www.fastly.com/blog/headers-we-dont-want</link>
<guid isPermaLink="true" >https://www.fastly.com/blog/headers-we-dont-want</guid>
<description>&lt;p&gt;&lt;em&gt;If you want to learn more about headers, don’t miss Andrew’s talk at &lt;a href=&quot;https://www.fastly.com/altitude/2018/london&quot;&gt;Altitude London&lt;/a&gt; on May 22.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;HTTP headers are an important way of controlling how caches and browsers process your web content. But many are used incorrectly or pointlessly, which adds overhead at a critical time in the loading of your page, and may not work as you intended. In this first of a series of posts about header best practice, we’ll look at unnecessary headers.&lt;/p&gt;
&lt;p&gt;Most developers know about and depend on a variety of HTTP headers to make their content work. Those that are best known include &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Length&lt;/code&gt;, which are both almost universal. But more recently, headers such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Security-Policy&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Strict-Transport-Security&lt;/code&gt; have started to improve security, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Link rel=preload&lt;/code&gt; headers to improve performance. Few sites use these, despite their wide support across browsers.&lt;/p&gt;
&lt;p&gt;At the same time, there are lots of headers that are hugely popular but aren’t new and aren’t actually all that useful. We can prove this using &lt;a href=&quot;http://httparchive.org/&quot;&gt;HTTP Archive&lt;/a&gt;, a project run by Google and sponsored by Fastly that loads 500,000 websites every month using &lt;a href=&quot;https://www.webpagetest.org/&quot;&gt;WebPageTest&lt;/a&gt;, and makes the results available in &lt;a href=&quot;https://cloud.google.com/bigquery/&quot;&gt;BigQuery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From the HTTP Archive data, here are the 30 most popular response headers (based on the number of domains in the archive which are serving each header), and roughly how useful each one is:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Header name&lt;/th&gt;
&lt;th&gt;Requests&lt;/th&gt;
&lt;th&gt;Domains&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;7&quot;&gt;&lt;tr&gt;&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;48779277&lt;/td&gt;
&lt;td&gt;535621&lt;/td&gt;
&lt;td&gt;Required by protocol&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;content-type&lt;/td&gt;
&lt;td&gt;47185627&lt;/td&gt;
&lt;td&gt;533636&lt;/td&gt;
&lt;td&gt;Usually required by browser&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;server&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;43057807&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;519663&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;content-length&lt;/td&gt;
&lt;td&gt;42388435&lt;/td&gt;
&lt;td&gt;519118&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last-modified&lt;/td&gt;
&lt;td&gt;34424562&lt;/td&gt;
&lt;td&gt;480294&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;cache-control&lt;/td&gt;
&lt;td&gt;36490878&lt;/td&gt;
&lt;td&gt;412943&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;etag&lt;/td&gt;
&lt;td&gt;23620444&lt;/td&gt;
&lt;td&gt;412370&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;content-encoding&lt;/td&gt;
&lt;td&gt;16194121&lt;/td&gt;
&lt;td&gt;409159&lt;/td&gt;
&lt;td&gt;Required for compressed content&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;expires&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;29869228&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;360311&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;x-powered-by&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;4883204&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;211409&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;pragma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;7641647&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;188784&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;x-frame-options&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;3670032&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;105846&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;access-control-allow-origin&lt;/td&gt;
&lt;td&gt;11335681&lt;/td&gt;
&lt;td&gt;103596&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;x-content-type-options&lt;/td&gt;
&lt;td&gt;11071560&lt;/td&gt;
&lt;td&gt;94590&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;link&lt;/td&gt;
&lt;td&gt;1212329&lt;/td&gt;
&lt;td&gt;87475&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;age&lt;/td&gt;
&lt;td&gt;7401415&lt;/td&gt;
&lt;td&gt;59242&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;x-cache&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;5275343&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;56889&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;x-xss-protection&lt;/td&gt;
&lt;td&gt;9773906&lt;/td&gt;
&lt;td&gt;51810&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;strict-transport-security&lt;/td&gt;
&lt;td&gt;4259121&lt;/td&gt;
&lt;td&gt;51283&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;via&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;4020117&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;47102&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;p3p&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;8282840&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;44308&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;expect-ct&lt;/td&gt;
&lt;td&gt;2685280&lt;/td&gt;
&lt;td&gt;40465&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;content-language&lt;/td&gt;
&lt;td&gt;334081&lt;/td&gt;
&lt;td&gt;37927&lt;/td&gt;
&lt;td&gt;Debatable&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;x-aspnet-version&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;676128&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;33473&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;access-control-allow-credentials&lt;/td&gt;
&lt;td&gt;2804382&lt;/td&gt;
&lt;td&gt;30346&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;x-robots-tag&lt;/td&gt;
&lt;td&gt;179177&lt;/td&gt;
&lt;td&gt;24911&lt;/td&gt;
&lt;td&gt;Not relevant to browsers&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;x-ua-compatible&lt;/td&gt;
&lt;td&gt;489056&lt;/td&gt;
&lt;td&gt;24811&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;access-control-allow-methods&lt;/td&gt;
&lt;td&gt;1626129&lt;/td&gt;
&lt;td&gt;20791&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;access-control-allow-headers&lt;/td&gt;
&lt;td&gt;1205735&lt;/td&gt;
&lt;td&gt;19120&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Let’s look at the unnecessary headers and see why we don’t need them, and what we can do about it.&lt;/p&gt;
&lt;h2&gt;Vanity (server, x-powered-by, via)&lt;/h2&gt;
&lt;p&gt;You may be very proud of your choice of server software, but most people couldn’t care less. At worst, these headers might be divulging sensitive data that makes your site easier to attack.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Server: apache
X-Powered-By: PHP/5.1.1
Via: 1.1 varnish, 1.1 squid
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://httpwg.org/specs/rfc7231.html#header.server&quot;&gt;RFC7231&lt;/a&gt; allows for servers to include a &lt;code class=&quot;highlighter-rouge&quot;&gt;Server&lt;/code&gt; header in the response, identifying the software used to serve the content. This is most commonly a string like “apache” or “nginx”. While it’s allowed, it’s not mandatory, and offers very little value to either developers or end users. Nevertheless, this is the third most popular HTTP response header on the web today.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;X-Powered-By&lt;/code&gt; is the most popular header in our list that is not defined in any standard, and has a similar purpose, though normally refers to the application platform that sits behind the web server. Common values include “ASP.net”, “PHP” and “Express”. Again this isn’t providing any tangible benefit and is taking up space.&lt;/p&gt;
&lt;p&gt;More debatable perhaps is &lt;code class=&quot;highlighter-rouge&quot;&gt;Via&lt;/code&gt;, which is required (&lt;a href=&quot;https://httpwg.org/specs/rfc7230.html#header.via&quot;&gt;by RFC7230&lt;/a&gt;) to be added to the response by any proxy through which it passes to identify the proxy. This can be something useful like the proxy’s hostname, but is more likely to be a generic identifier like “vegur”, “varnish”, or “squid”. Removing (or not setting) this header is technically a spec violation, but no browsers do anything with it, so it’s reasonably safe to get rid of it if you want to.&lt;/p&gt;
&lt;h2&gt;Deprecated standards (P3P, Expires, X-Frame-Options)&lt;/h2&gt;
&lt;p&gt;Another category of headers is those that do have an effect in the browser but are not (or are no longer) the best way of achieving that effect.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;P3P: cp=&quot;this is not a p3p policy&quot;
Expires: Thu, 01 Dec 1994 16:00:00 GMT
X-Frame-Options: SAMEORIGIN
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;P3P&lt;/code&gt; is a curious animal. I had no idea what this was, and even more curiously, one of the most common values is “this is not a p3p policy”. Well, is it, or isn’t it?&lt;/p&gt;
&lt;p&gt;The story here goes back to an &lt;a href=&quot;https://en.wikipedia.org/wiki/P3P#User_agent_support&quot;&gt;attempt to standardise a machine readable privacy policy&lt;/a&gt;. There was disagreement on how to surface the data in browsers, and only one browser ever implemented the header - Internet Explorer. Even in IE though, &lt;code class=&quot;highlighter-rouge&quot;&gt;P3P&lt;/code&gt; didn’t trigger any visual effect to the user; it just needs to be present to permit access to third party cookies in iframes. Some sites even set a non-conforming P3P policy like the one above – even though doing so is on &lt;a href=&quot;https://www.cylab.cmu.edu/_files/pdfs/tech_reports/CMUCyLab10014.pdf&quot;&gt;shaky legal ground&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Needless to say, reading third party cookies is generally a bad idea, so if you don’t do it, then you won’t need to set a &lt;code class=&quot;highlighter-rouge&quot;&gt;P3P&lt;/code&gt; header!&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Expires&lt;/code&gt; is almost unbelievably popular, considering that &lt;code class=&quot;highlighter-rouge&quot;&gt;Cache-Control&lt;/code&gt; has been preferred over &lt;code class=&quot;highlighter-rouge&quot;&gt;Expires&lt;/code&gt; for 20 years. Where a &lt;code class=&quot;highlighter-rouge&quot;&gt;Cache-Control&lt;/code&gt; header includes a &lt;code class=&quot;highlighter-rouge&quot;&gt;max-age&lt;/code&gt; directive, any &lt;code class=&quot;highlighter-rouge&quot;&gt;Expires&lt;/code&gt; header on the same response will be ignored. But there are a massive number of sites setting both, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;Expires&lt;/code&gt; header is most commonly set to &lt;code class=&quot;highlighter-rouge&quot;&gt;Thu, 01 Dec 1994 16:00:00&lt;/code&gt; GMT, because you want your content to not be cached and copy-pasting the example date &lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;from the spec&lt;/a&gt; is certainly one way of doing that.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.fastly.com/cimages/6pk8mg3yh2ee/63zsHXNxp6YmWacesKYgwy/e3f1040e2d948b0655667aaa86d5310f/Screen_Shot_2018-05-10_at_21.49.25.png&quot; alt=&quot;Screen Shot 2018-05-10 at 21.49.25&quot;/&gt;&lt;/p&gt;
&lt;p&gt;But there is simply no reason to do this. If you have an &lt;code class=&quot;highlighter-rouge&quot;&gt;Expires&lt;/code&gt; header with a date in the past, replace it with:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Cache-Control: no-cache, private
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Some of the tools that audit your site will tell you to add an &lt;code class=&quot;highlighter-rouge&quot;&gt;X-Frame-Options&lt;/code&gt; header with a value of ‘SAMEORIGIN’. This tells browsers that you are refusing to be framed by another site, and is generally a good defense against &lt;a href=&quot;https://en.wikipedia.org/wiki/Clickjacking&quot;&gt;clickjacking&lt;/a&gt;. However, the same effect can be achieved, with more consistent support and more robust definition of behaviour, by doing:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Content-Security-Policy: frame-ancestors 'self'
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This has the additional benefit of being part of a header (CSP) which you should have anyway for other reasons (more on that later). So you can probably do without &lt;code class=&quot;highlighter-rouge&quot;&gt;X-Frame-Options&lt;/code&gt; these days.&lt;/p&gt;
&lt;h2&gt;Debug data (X-ASPNet-Version, X-Cache)&lt;/h2&gt;
&lt;p&gt;It’s kind of astonishing that some of the most popular headers in common use are not in any standard. Essentially this means that somehow, thousands of websites seem to have spontaneously agreed to use a particular header in a particular way.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;X-Cache: HIT
X-Request-ID: 45a336c7-1bd5-4a06-9647-c5aab6d5facf
X-ASPNet-Version: 3.2.32
X-AMZN-RequestID: 0d6e39e2-4ecb-11e8-9c2d-fa7ae01bbebc
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In reality, these ‘unknown’ headers are not separately and independently minted by website developers. They are typically artefacts of using particular server frameworks, software or specific vendors’ services (in this example set, the last header is a common AWS header).&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;X-Cache&lt;/code&gt;, in particular, is actually added by Fastly (other CDNs also do this), along with other Fastly-related headers like &lt;code class=&quot;highlighter-rouge&quot;&gt;X-Cache-Hits&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;X-Served-By&lt;/code&gt;. When debugging is enabled, we add even more, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Fastly-Debug-Path&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Fastly-Debug-TTL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These headers are not recognised by any browser, and removing them makes no difference to how your pages are rendered. However, since these headers might provide you, the developer, with useful information, you might like to keep a way to turning them on.&lt;/p&gt;
&lt;h2&gt;Misunderstandings (Pragma)&lt;/h2&gt;
&lt;p&gt;I didn’t expect to be in 2018 writing a post about the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pragma&lt;/code&gt; header, but according to our HTTP Archive data it’s still the 11th most popular. Not only was Pragma deprecated as long ago as 1997, but it was never intended to be a response header anyway - as specified, it only has meaning as part of a request.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Pragma: no-cache
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Nevertheless it’s use as a response header is so widespread that some browsers recognise it in this context as well. Today the probability that your response will transit a cache that understands &lt;code class=&quot;highlighter-rouge&quot;&gt;Pragma&lt;/code&gt; in a response context, and doesn’t understand &lt;code class=&quot;highlighter-rouge&quot;&gt;Cache-Control&lt;/code&gt;, is vanishingly small. If you want to make sure that something isn’t cached, &lt;code class=&quot;highlighter-rouge&quot;&gt;Cache-Control: no-cache, private&lt;/code&gt; is all you need.&lt;/p&gt;
&lt;h2&gt;Non-Browser (X-Robots-Tag)&lt;/h2&gt;
&lt;p&gt;One header in our top 30 is a non-browser header. &lt;code class=&quot;highlighter-rouge&quot;&gt;X-Robots-Tag&lt;/code&gt; is intended to be consumed by a crawler, such as Google or Bing’s bots. Since it has no meaning to a browser, you could choose to only set it when the requesting user-agent is a crawler. Equally, you might decide that this makes testing harder, or perhaps that it violates the terms of service of the search engine.&lt;/p&gt;
&lt;h2&gt;Bugs&lt;/h2&gt;
&lt;p&gt;Finally, it’s worth finishing on an honourable mention for simple bugs. In a &lt;em&gt;request&lt;/em&gt;, a &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; header makes sense, but seeing it on a response probably means your server is misconfigured somehow (I’d love to know how, exactly). Nevertheless, 68 domains in HTTP archive are returning a &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; header in their responses.&lt;/p&gt;
&lt;h2&gt;Removing headers at the edge&lt;/h2&gt;
&lt;p&gt;Fortunately, if your site is behind Fastly, removing headers is pretty easy using &lt;a href=&quot;https://docs.fastly.com/guides/vcl/&quot;&gt;VCL&lt;/a&gt;. It makes sense that you might want to keep the genuinely useful debug data available to your dev team, but hide it for public users, so that’s easily done by detecting a cookie or inbound HTTP header:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;unset resp.http.Server;
unset resp.http.X-Powered-By;
unset resp.http.X-Generator;

if (!req.http.Cookie:debug &amp;amp;&amp;amp; !req.http.Debug) {
  unset resp.http.X-Amzn-RequestID;
  unset resp.http.X-Cache;
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In the next post in this series, I’ll be talking about best practices for headers that you should be setting, and how to enable them at the edge.&lt;/p&gt;

&lt;div class=&quot;blog-authors&quot;&gt;
&lt;h3&gt;&lt;span&gt;Author&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;author&quot; readability=&quot;11.566502463054&quot;&gt;
&lt;div class=&quot;avatar&quot;&gt;&lt;img src=&quot;https://www.fastly.com/cimages/6pk8mg3yh2ee/3pTevJeCUgGmciYcO0AekS/5ef5dceb48c1470755bba26cd0d13abc/andrew_betts_author_photo.jpg&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;bio&quot; readability=&quot;18.313628899836&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.fastly.com/blog/andrew-betts&quot;&gt;Andrew Betts&lt;/a&gt; | Web Developer and Principal Developer Advocate&lt;/p&gt;
&lt;p&gt;Andrew Betts is a Web Developer and Principal Developer Advocate for Fastly, where he works with developers across the world to help make the web faster, more secure, more reliable, and easier to work with. He founded a web consultancy which was ultimately acquired by the Financial Times, led the team that created the FT’s pioneering HTML5 web app, and founded the FT’s Labs division. He is also an elected member of the W3C Technical Architecture Group, a committee of nine people who guide the development of the World Wide Web.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/triblondon&quot; class=&quot;author-twitter&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;triblondon&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Tue, 15 May 2018 15:34:56 +0000</pubDate>
<dc:creator>kawera</dc:creator>
<og:title>The headers we don't want</og:title>
<og:url>https://www.fastly.com/blog/headers-we-dont-want/</og:url>
<og:description>HTTP headers are an important way of controlling how caches and browsers process your web content. But many are used incorrectly or pointlessly, which adds overhead at a critical time in the loading of your page, and may not work as you intended.</og:description>
<og:image>https://www.fastly.com/assets/og-image-285da566f98fbd28c8c29333174f371fc1158d721b9b457b4b475ac408d966f0.png?canvas=1200:630&amp;width=1200&amp;height=630&amp;fit=bounds&amp;bg-color=FFFFFF</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.fastly.com/blog/headers-we-dont-want</dc:identifier>
</item>
<item>
<title>Tom Wolfe Has Died</title>
<link>https://www.nytimes.com/2018/05/15/obituaries/tom-wolfe-pyrotechnic-nonfiction-writer-and-novelist-dies-at-87.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/05/15/obituaries/tom-wolfe-pyrotechnic-nonfiction-writer-and-novelist-dies-at-87.html</guid>
<description>&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;“Girl of the Year,” his 1964 portrait of the Manhattan “it” girl Baby Jane Holzer, opened with the literary equivalent of a cinematic pan shot at a Rolling Stones concert:&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;“Bangs manes bouffants beehive Beatle caps butter faces brush-on lashes decal eyes puffy sweaters French thrust bras flailing leather blue jeans stretch pants stretch jeans honey dew bottoms éclair shanks elf boots ballerinas Knight slippers, hundreds of them these flaming little buds, bobbing and screaming, rocketing around inside the Academy of Music Theater underneath that vast old moldering cherub dome up there — aren’t they super-marvelous?”&lt;/p&gt;
&lt;h2 class=&quot;css-91b9p3 eqpy7av0&quot;&gt;‘Radical Chic’ Skewered&lt;/h2&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;In June 1970, New York magazine devoted an entire issue to “These Radical Chic Evenings,” Mr. Wolfe’s 20,000-word sendup of a fund-raiser given for the Black Panthers by Leonard Bernstein, the conductor of the New York Philharmonic, and his wife, the Chilean actress Felicia Montealegre, in their 13-room Park Avenue penthouse duplex — an affair attended by scores of the Bernsteins’ liberal, rich and mostly famous friends.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;“Do Panthers like little Roquefort cheese morsels rolled on crushed nuts this way, and asparagus tips in mayonnaise dabs, and meatballs petites au Coq Hardi, all of which are at the very moment being offered to them on gadrooned silver platters by maids in black uniforms with hand-ironed white aprons?,” Mr. Wolfe wrote, outraging liberals and Panthers alike.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;When a Time reporter asked a minister for the Black Panthers to comment on the accuracy of Mr. Wolfe’s account, he said, “You mean that dirty, blatant, lying, racist dog who wrote that fascist disgusting thing in New York magazine?”&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;The article was included in Mr. Wolfe’s essay collection “Radical Chic and Mau-Mauing the Flak Catchers,” published in 1970.&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Storms did not seem to bother Mr. Wolfe, as his forays into the art world demonstrated. He had always had an interest in art and was indeed an artist himself, sometimes illustrating his work with pen-and-ink drawings. He was a contributing artist at Harper’s from 1978 to 1981 and exhibited his work on occasion at Manhattan galleries. Many of his illustrations were collected in “In Our Time” (1980).&lt;/p&gt;
&lt;p class=&quot;css-1cy1v93 e2kc3sl0&quot;&gt;Earlier, in “The Painted Word” (1975), he produced a gleeful screed denouncing contemporary art as a con job perpetrated by cultural high priests, notably the critics Clement Greenberg, Harold Rosenberg and Leo Steinberg — “the kings of cultureburg,” as he called them.&lt;/p&gt;
</description>
<pubDate>Tue, 15 May 2018 15:10:04 +0000</pubDate>
<dc:creator>mackmcconnell</dc:creator>
<og:url>https://www.nytimes.com/2018/05/15/obituaries/tom-wolfe-pyrotechnic-nonfiction-writer-and-novelist-dies-at-88.html</og:url>
<og:type>article</og:type>
<og:title>Tom Wolfe, Author of ‘The Right Stuff’ and ‘Bonfire of the Vanities,’ Dies</og:title>
<og:image>https://static01.nyt.com/images/2018/05/16/obituaries/16WOLFEsub-2/16WOLFEsub-2-facebookJumbo-v2.jpg</og:image>
<og:description>He wrote “The Electric Kool-Aid Acid Test,” “Bonfire of the Vanities” and “The Right Stuff,” and pioneered a novelistic form of journalism in the 1960s and ’70s.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/05/15/obituaries/tom-wolfe-pyrotechnic-nonfiction-writer-and-novelist-dies-at-88.html</dc:identifier>
</item>
<item>
<title>Eigenvectors and Eigenvalues (2015)</title>
<link>http://setosa.io/ev/eigenvectors-and-eigenvalues/</link>
<guid isPermaLink="true" >http://setosa.io/ev/eigenvectors-and-eigenvalues/</guid>
<description>&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=1100&quot;/&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link href=&quot;http://fonts.googleapis.com/css?family=Lato:100,200,300,400&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/ev/styles/style.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;Explained Visually&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@setosaio&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;/ev/eigenvectors-and-eigenvalues/fb-thumb.png&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Eigenvectors and Eigenvalues explained visually&quot;/&gt;&lt;title&gt;Eigenvectors and Eigenvalues explained visually&lt;/title&gt;&lt;meta name=&quot;twitter:creator&quot; content=&quot;vicapow&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/ev/eigenvectors-and-eigenvalues/style.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body ng-app=&quot;myApp&quot; ng-controller=&quot;MainCtrl&quot; id=&quot;readabilityBody&quot; readability=&quot;70.385167464115&quot;&gt;
&lt;section class=&quot;title&quot; readability=&quot;1.811320754717&quot;&gt;&lt;p&gt;

&lt;h3 class=&quot;by-line&quot;&gt;Explained Visually&lt;/h3&gt;
&lt;/p&gt;

&lt;/section&gt;&lt;section ng-controller=&quot;IntroCtrl&quot; readability=&quot;24.511349306431&quot;&gt;&lt;p&gt;By &lt;a href=&quot;http://twitter.com/vicapow&quot;&gt;Victor Powell&lt;/a&gt; and &lt;a href=&quot;http://twitter.com/lewislehe&quot;&gt;Lewis Lehe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eigenvalues/vectors are instrumental to understanding electrical circuits, mechanical systems, ecology and even Google's &lt;a href=&quot;http://www.rose-hulman.edu/~bryan/googleFinalVersionFixed.pdf&quot;&gt;PageRank&lt;/a&gt; algorithm. Let's see if visualization can make these ideas more intuitive.&lt;/p&gt;
&lt;p&gt;To begin, let $v$ be a vector (shown as a point) and $A$ be a matrix with columns $a_1$ and $a_2$ (shown as arrows). If we multiply $v$ by $A$, then $A$ sends $v$ to a new vector $Av$.&lt;/p&gt;
&lt;div ng-controller=&quot;BasisCtrl&quot; readability=&quot;35&quot;&gt;



&lt;p&gt;If you can draw a line through the three points $(0,0)$, $v$ and $Av$, then $Av$ is just $v$ multiplied by a number $\lambda$; that is, $Av = \lambda v$. In this case, we call $\lambda$ an &lt;strong&gt;eigenvalue&lt;/strong&gt; and $v$ an &lt;strong&gt;eigenvector&lt;/strong&gt;. For example, here $(1,2)$ is an eigvector and $5$ an eigenvalue.&lt;/p&gt;
&lt;p&gt;Below, change the columns of $A$ and drag $v$ to be an eigenvector. Note three facts: First, every point on the same line as an eigenvector is an eigenvector. Those lines are &lt;strong&gt;eigenspaces&lt;/strong&gt;, and each has an associated eigenvalue. Second, if you place $v$ on an eigenspace (either $s_1$ or $s_2$) with associated eigenvalue $\lambda&amp;lt;1$, then $Av$ is closer to $(0,0)$ than $v$; but when $\lambda&amp;gt;1$, it's farther. Third, both eigenspaces depend on both columns of $A$: it is not as though $a_1$ only affects $s_1$.&lt;/p&gt;
&lt;div ng-controller=&quot;TransCtrl&quot; readability=&quot;17&quot;&gt;
&lt;h3 id=&quot;what-are-eigenvalues-vectors-good-for-&quot;&gt;What are eigenvalues/vectors good for?&lt;/h3&gt;
&lt;p&gt;If you keep multiplying $v$ by $A$, you get a sequence ${ v, Av, A^2v,}$ etc. Eigenspaces attract that sequence and eigenvalues tell you whether it ends up at $(0,0)$ or far away. Therefore, eigenvectors/values tell us about systems that evolve step-by-step.&lt;/p&gt;

&lt;p&gt;Let's explore some applications and properties of these sequences.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;section ng-controller=&quot;BacteriaCtrl&quot; readability=&quot;26.502049180328&quot;&gt;&lt;h3 id=&quot;fibonacci-sequence&quot;&gt;Fibonacci Sequence&lt;/h3&gt;
&lt;p&gt;Suppose you have some amoebas in a petri dish. Every minute, all adult amoebas produce one child amoeba, and all child amoebas grow into adults (Note: this is not really how amoebas reproduce.). So if $t$ is a minute, the equation of this system is&lt;/p&gt;
&lt;p&gt;which we can rewrite in matrix form like&lt;/p&gt;
&lt;p&gt;Below, press &quot;Forward&quot; to step ahead a minute. The total population is the &lt;a href=&quot;http://en.wikipedia.org/wiki/Fibonacci_number&quot;&gt;Fibonacci Sequence&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;button ng-click=&quot;reset()&quot; class=&quot;btn primary&quot;&gt;reset&lt;/button&gt; &lt;button ng-click=&quot;forward()&quot; class=&quot;btn primary&quot;&gt;forward&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;{{opt.pos[opt.curGen][0]}} {{opt.pos[opt.curGen][0] === 1 ? 'child' : 'children' }} + {{opt.pos[opt.curGen][1]}} {{opt.pos[opt.curGen][1] === 1 ? 'adult' : 'adults' }} = {{opt.pos[opt.curGen][0] + opt.pos[opt.curGen][1]}}&lt;/p&gt;
&lt;p&gt;As you can see, the system goes toward the grey line, which is an eigenspace with $\lambda = (1+\sqrt 5)/2 &amp;gt; 1$.&lt;/p&gt;
&lt;h3 id=&quot;steady-states&quot;&gt;Steady States&lt;/h3&gt;
&lt;p&gt;Suppose that, every year, a fraction $p$ of New Yorkers move to California and a fraction $q$ of Californians move to New York. Drag the circles to decide these fractions and the number starting in each state.&lt;/p&gt;
&lt;/section&gt;&lt;section ng-controller=&quot;MigrationCtrl&quot; readability=&quot;35.051875498803&quot;&gt;&lt;p&gt;To understand the system better, we can start by writing it in matrix terms like:&lt;/p&gt;
&lt;p&gt;It turns out that a matrix like $A$, whose entries are positive and whose columns add up to one (try it!), is called a &lt;a href=&quot;http://www.math.harvard.edu/~knill/teaching/math19b_2011/handouts/lecture33.pdf&quot;&gt;Markov matrix&lt;/a&gt;, and it always has $\lambda = 1$ as its largest eigenvalue. That means there's a value of $v_t$ for which $Av_t =\lambda v_t = 1 v_t = v_t$. At this &quot;steady state,&quot; the same number of people move in each direction, and the populations stay the same forever. Hover over the animation to see the system go to the steady state.&lt;/p&gt;


&lt;p&gt;For more on Markov matrices, check out our explanation of &lt;a href=&quot;http://setosa.io/ev/markov-chains/&quot;&gt;Markov Chains&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So far we've only looked at systems with real eigenvalues. But looking at the equation $ Av = \lambda v$, who's to say $\lambda$ and $v$ can't have some imaginary part? That it can't be a &lt;a href=&quot;http://en.wikipedia.org/wiki/Complex_number&quot;&gt;complex&lt;/a&gt; number? For example,&lt;/p&gt;
&lt;p&gt;Here, $1+i$ is an eigenvalue and $(1, i)$ is an eigenvector.&lt;/p&gt;
&lt;p&gt;If a matrix has complex eigenvalues, its sequence spirals around $(0,0)$. To see this, drag $A$'s columns (the arrows) around until you get a spiral. The eigenvalues are plotted in the real/imaginary plane to the right. You'll see that whenever the eigenvalues have an imaginary part, the system spirals, no matter where you start things off.&lt;/p&gt;
&lt;/section&gt;&lt;section ng-controller=&quot;FourQuadCtrl&quot;&gt;steps: &lt;input type=&quot;range&quot; min=&quot;2&quot; max=&quot;opt.maxPoints&quot; ng-model=&quot;opt.n&quot;/&gt;&lt;/section&gt;
&lt;h3 id=&quot;learning-more&quot;&gt;Learning more&lt;/h3&gt;
&lt;p&gt;We've really only scratched the surface of what linear algebra is all about. To learn more, check out the legendary Gilbert Strang's &lt;a href=&quot;http://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/least-squares-determinants-and-eigenvalues/eigenvalues-and-eigenvectors/&quot;&gt;Linear Algebra&lt;/a&gt; course at MIT's Open Courseware site. To get more practice with applications of eigenvalues/vectors, also ceck out the excellent &lt;a href=&quot;http://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/&quot;&gt;Differential Equations&lt;/a&gt; course.&lt;/p&gt;

&lt;section readability=&quot;4.1747572815534&quot;&gt;&lt;p&gt;For more explanations, visit the Explained Visually &lt;a href=&quot;http://setosa.io/ev/&quot;&gt;project homepage.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or subscribe to our mailing list.&lt;/p&gt;

&lt;br/&gt;&lt;/section&gt;&lt;section readability=&quot;0.45238095238095&quot;&gt;
&lt;noscript readability=&quot;1.15625&quot;&gt;
&lt;p&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;/a&gt;&lt;/section&gt;&lt;/body&gt;</description>
<pubDate>Tue, 15 May 2018 13:28:03 +0000</pubDate>
<dc:creator>vimalvnair</dc:creator>
<og:image>/ev/eigenvectors-and-eigenvalues/fb-thumb.png</og:image>
<og:title>Eigenvectors and Eigenvalues explained visually</og:title>
<dc:format>text/html</dc:format>
<dc:identifier>http://setosa.io/ev/eigenvectors-and-eigenvalues/</dc:identifier>
</item>
</channel>
</rss>