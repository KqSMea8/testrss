<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Basecamp doesn’t employ anyone in SF, but now we pay everyone as though all did</title>
<link>https://m.signalvnoise.com/basecamp-doesnt-employ-anyone-in-san-francisco-but-now-we-pay-everyone-as-though-all-did-3ee87013cfc2</link>
<guid isPermaLink="true" >https://m.signalvnoise.com/basecamp-doesnt-employ-anyone-in-san-francisco-but-now-we-pay-everyone-as-though-all-did-3ee87013cfc2</guid>
<description>&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*J0Znftz9w-YEdOSILoV6kw.jpeg&quot; data-width=&quot;800&quot; data-height=&quot;376&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*J0Znftz9w-YEdOSILoV6kw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*J0Znftz9w-YEdOSILoV6kw.jpeg&quot;/&gt;&lt;/div&gt;
If you want to be amongst the best paid people in software, you have to move to San Francisco. Or do you?

&lt;p name=&quot;e1f6&quot; id=&quot;e1f6&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The roots of Basecamp are in Chicago. It’s where the business started, it’s where our only office is located, it’s where we do all our meet-ups. But more than just a geographical connection, there’s a spiritual one too: Chicago is the city that works.&lt;/p&gt;
&lt;p name=&quot;947a&quot; id=&quot;947a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So it made sense when &lt;a href=&quot;https://m.signalvnoise.com/how-we-pay-people-at-basecamp-f1d04f4f194b&quot; data-href=&quot;https://m.signalvnoise.com/how-we-pay-people-at-basecamp-f1d04f4f194b&quot; class=&quot;markup--anchor markup--p-anchor&quot; target=&quot;_blank&quot;&gt;we decided to get serious&lt;/a&gt; about setting pay in a fair, transparent, and systematic way to use the Chicago rates as a base. They were already higher than just about any other location we employed people from. And as &lt;a href=&quot;https://basecamp.com/books/remote&quot; data-href=&quot;https://basecamp.com/books/remote&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;a remote company&lt;/a&gt;, we employ people from all over the place.&lt;/p&gt;
&lt;p name=&quot;6232&quot; id=&quot;6232&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Yet when we were doing our pay studies this year, we started to question that decision. If we’re already paying people from Tampa or Chattanooga the much higher Chicago rates, why is the rate based on Chicago at all?&lt;/p&gt;
&lt;p name=&quot;563b&quot; id=&quot;563b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It started to increasingly seem like an arbitrary choice, and if we were going to make one such, why not go for the best and the top?&lt;/p&gt;
&lt;p name=&quot;cd50&quot; id=&quot;cd50&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;That’s what we did. Starting 2018, Basecamp is paying everyone as though they live in San Francisco and work for a software company that pays in the top 10% of that market (compared to base pay + bonus, but not options).&lt;/p&gt;
&lt;p name=&quot;b743&quot; id=&quot;b743&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We don’t actually have anyone who lives in San Francisco, but now everyone is being paid as though they did. Whatever an employee pockets in the difference in cost of living between where they are and the sky-high prices in San Francisco is theirs to keep.&lt;/p&gt;
&lt;p name=&quot;bcff&quot; id=&quot;bcff&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This is not how companies normally do their thing. I’ve been listening to Adam Smith’s 1776 classic on the &lt;a href=&quot;https://www.audible.com/pd/Classics/The-Wealth-of-Nations-Audiobook/B004IM8EPE?source_code=GPAGBSH0508140001&amp;amp;cvosrc=ppc%20cse.google%20shopping.342766860&amp;amp;cvo_crid=90539104740&amp;amp;cvo_pid=23455575420&quot; data-href=&quot;https://www.audible.com/pd/Classics/The-Wealth-of-Nations-Audiobook/B004IM8EPE?source_code=GPAGBSH0508140001&amp;amp;cvosrc=ppc%20cse.google%20shopping.342766860&amp;amp;cvo_crid=90539104740&amp;amp;cvo_pid=23455575420&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Wealth of Nations&lt;/a&gt;, and just passed through the chapter on how the market is set by masters trying to get away with paying the least possible, and workers trying to press for the maximum possible. An antagonistic struggle, surely.&lt;/p&gt;
&lt;p name=&quot;71a4&quot; id=&quot;71a4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It doesn’t need to be like that. Especially in software, which is a profitable business when run with restraint and sold to businesses.&lt;/p&gt;
&lt;p name=&quot;e4e2&quot; id=&quot;e4e2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Jason and I surely could get away with paying people in Chattanooga the rates of that market. Or people in Tampa that. Or those in Portland that. It’s how most companies do it.&lt;/p&gt;
&lt;p name=&quot;f342&quot; id=&quot;f342&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But in what other part of the business do we look at what we can merely get away with? Are we trying to make the bare minimum of a product we can get away selling to customers? Are we looking to do the bare minimum of a job marketing our business? No.&lt;/p&gt;
&lt;p name=&quot;23de&quot; id=&quot;23de&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Do better than what you can get away with. Do more than the bare minimum. Don’t wait for the pressure to build. Don’t wait for the requests to mount. The best time to take a step forward is right now.&lt;/p&gt;
&lt;p name=&quot;716e&quot; id=&quot;716e&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;(And before you ask, sorry, we’re actually not hiring. That’s part of the restraint bit. We have a &lt;a href=&quot;https://basecamp.com/about/team&quot; data-href=&quot;https://basecamp.com/about/team&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;team of fifty five&lt;/a&gt; of the most kind, wonderful, and capable people I’ve ever had the pleasure of working with. That’s all we need at the moment to do what we want to do.)&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 10:27:49 +0000</pubDate>
<dc:creator>onmyway133</dc:creator>
<og:title>Basecamp doesn’t employ anyone in San Francisco, but now we pay everyone as though all did</og:title>
<og:url>https://m.signalvnoise.com/basecamp-doesnt-employ-anyone-in-san-francisco-but-now-we-pay-everyone-as-though-all-did-3ee87013cfc2</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*J0Znftz9w-YEdOSILoV6kw.jpeg</og:image>
<og:description>The roots of Basecamp are in Chicago. It’s where the business started, it’s where our only office is located, it’s where we do all our meet…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://m.signalvnoise.com/basecamp-doesnt-employ-anyone-in-san-francisco-but-now-we-pay-everyone-as-though-all-did-3ee87013cfc2?gi=71d4b528fb5e</dc:identifier>
</item>
<item>
<title>SQL Keys in Depth</title>
<link>https://begriffs.com/posts/2018-01-01-sql-keys-in-depth.html</link>
<guid isPermaLink="true" >https://begriffs.com/posts/2018-01-01-sql-keys-in-depth.html</guid>
<description>&lt;p&gt;The internet is full of dogmatic commandments for choosing and using keys in relational databases. At times it verges on a holy war: should you use natural or artificial keys? Auto-incrementing integers, UUIDs?&lt;/p&gt;
&lt;p&gt;After wading through sixty-four articles, skimming sections in five books, and asking questions on IRC and StackOverflow I think I’ve put the pieces together and have a recommendation to harmonize the various camps. Many arguments about keys boil down to false dichotomies and failures to acknowledge other points of view.&lt;/p&gt;
&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;
&lt;p&gt;Let’s break the problem down, and then put it all together at the end. First, what’s a key?&lt;/p&gt;
&lt;h3 id=&quot;what-are-keys-really&quot;&gt;What are keys, really?&lt;/h3&gt;
&lt;p&gt;For the moment forget about &lt;em&gt;primary&lt;/em&gt; keys, we’re looking for the general idea. A key is a column or columns that together have no duplicate values across rows. Also the columns must be irreducibly unique, meaning no subset of the columns has this uniqueness.&lt;/p&gt;
&lt;p&gt;For example, consider a table for counting cards in a card game:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; cards_seen (
  suit text,
  face text
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we’re tracking a single deck (no repeated cards), then the combination of suit and face is unique. We don’t want to list the same suit and face twice in the table because that would be redundant. If a card is in the table we’ve seen it, otherwise we haven’t.&lt;/p&gt;
&lt;p&gt;We can and should ask the database to enforce this constraint by adding:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; cards_seen (
  suit text,
  face text,

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt; (suit, face)
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Neither &lt;code&gt;suit&lt;/code&gt; nor &lt;code&gt;face&lt;/code&gt; is unique on its own. We can see multiple cards with the same suit, or with the same face. Because &lt;code&gt;(suit, face)&lt;/code&gt; is unique, but the individual columns are not, we say that the combination is irreducible, and &lt;code&gt;(suit, face)&lt;/code&gt; is a key.&lt;/p&gt;
&lt;p&gt;Expanding the situation a bit, if we were tracking multiple packs of cards, we could include a new field to record the number of times a card was seen:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; cards_seen (
  suit text,
  face text,
  seen &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although the triple &lt;code&gt;(suit, face, seen)&lt;/code&gt; should be unique, it’s not a key because the subset &lt;code&gt;(suit, face)&lt;/code&gt; should be unique too. That’s because two rows having the same suit and face but different values for &lt;code&gt;seen&lt;/code&gt; would be contradictory information. So &lt;code&gt;(suit, face)&lt;/code&gt; is a key and there are no other keys for this table.&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; readability=&quot;10&quot;&gt;
&lt;h4&gt;Uniqueness constraints&lt;/h4&gt;
&lt;p&gt;In PostgreSQL the preferred way to add a unique constraint is to declare it directly as we did. The use of indexes to enforce unique constraints could be considered an implementation detail that should not be accessed directly. There’s no need to manually create indexes on columns already declared unique; doing so would just duplicate the automatically-created index.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A table can have more than one key, it’s no problem. In fact we should declare &lt;em&gt;all&lt;/em&gt; keys so the database can enforce them.&lt;/p&gt;
&lt;p&gt;Here are two examples of tables that have multiple keys.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;23&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;co&quot;&gt;-- Three keys&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; tax_brackets (
  min_income  &lt;span class=&quot;dt&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;),
  max_income  &lt;span class=&quot;dt&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;),
  tax_percent &lt;span class=&quot;dt&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;),

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt;(min_income),
  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt;(max_income),
  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt;(tax_percent)
);

&lt;span class=&quot;co&quot;&gt;-- Two keys&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; flight_roster (
  departure timestamptz,
  gate text,
  pilot text

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt;(departure, gate),
  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt;(departure, pilot)
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For brevity the examples so far are missing other constraints that in reality they should enforce. For instance cards should not be seen a negative number of times. Also we should forbid NULL values for most columns considered so far (except the &lt;code&gt;max_income&lt;/code&gt; column for tax brackets where NULL could could represent infinity).&lt;/p&gt;
&lt;h3 id=&quot;the-curious-case-of-primary-keys&quot;&gt;The curious case of primary keys&lt;/h3&gt;
&lt;p&gt;What we simply called keys in the previous section are traditionally called candidate keys. “Candidate” is terminology which implies that the keys are all competing for the esteemed position of “primary key,” with the remainder relegated to “alternate keys.”&lt;/p&gt;
&lt;p&gt;It took a while for SQL implementations to clear up misunderstandings about keys and the relational model. The earliest database products fixated on what was then a low-level conception of primary key.&lt;/p&gt;
&lt;p&gt;Primary keys were required by these database systems to identify the physical location of a row on sequential access media. Joe Celko explains:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;The term “key” meant the sort-key of a file that was required to do any reasonable processing with the original sequential file systems. A deck of punch cards is read in one and only one order; you cannot “back space” a card reader. The first magnetic tape drives mimicked that design and did not allow bi-directional access. In fact, the original Sybase SQL Server required that cursors had to “re-wind” a table to the start and move forward to read a prior row.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Modern SQL is supposed to abstract from the physical representation. Tables model relations, and should not expose an implicit order in their rows. However even today SQL Server creates a clustered index by default for primary keys, physically ordering rows in the old tradition.&lt;/p&gt;
&lt;p&gt;In most databases primary keys have survived as a vestige, and nowadays merely provide some conveniences rather than reflecting or determining physical layout. For instance declaring a primary key includes a NOT NULL constraint automatically, and defines the default foreign key target in a PostgreSQL table. Primary keys also give a hint that their columns are preferred for joins.&lt;/p&gt;
&lt;p&gt;A primary key does not prevent declaring other keys. In fact a table with keys will function fine when none is designated as primary. Lighting will not come out of the sky and strike you.&lt;/p&gt;
&lt;h3 id=&quot;finding-natural-keys&quot;&gt;Finding natural keys&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://begriffs.com/images/key-natural.jpg&quot; class=&quot;right&quot; alt=&quot;UPC codes are a natural key&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The keys we’ve seen so far are “natural,” so called because they are properties of the thing modeled, properties that have intrinsic interest even if nobody was looking to create a key.&lt;/p&gt;
&lt;p&gt;The first thing to keep in mind when examining a table for possible natural keys is not to overthink it. StackExchange user sqlvogel advises:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Some people seem to struggle with the choice of “natural” key attributes because they hypothesize situations where a particular key might not be unique in some given population. This misses the point. The point of a key is to impose a business rule that attributes must and will be unique for the population of data within a particular table at any given point in time. The table always represents data in a particular and hopefully well-understood context (the “business domain” AKA “domain of discourse”). It is the intention/requirement to apply a uniqueness constraint within that domain that matters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rule of thumb is to add a key constraint when a column is unique for the values at hand and will remain so in reasonable scenarios. You can always remove the constraint if necessary. (If this worries you, we’ll talk about key stability later.)&lt;/p&gt;
&lt;p&gt;For instance, a database of hobbyist club members could include uniqueness on the two columns first_name, last_name of members. Duplicates are likely unintentional at this scale, and if necessary the constraint can be dropped. Until an actual conflict happens the key is a reasonable precaution.&lt;/p&gt;
&lt;p&gt;As a database grows to cover more ambitious material, finding natural keys can be more difficult. The data we store is a simplification of external reality, and doesn’t capture some of the things that otherwise distinguish objects in the world, such as their changing position over time. In the absence of some kind of item code, what distinguishes two cans of soda or boxes of cereal other than their position in space or tiny deviations in weight or packaging?&lt;/p&gt;
&lt;p&gt;This is why standards bodies create and add distinguishing marks to products. Cars have Vehicle Identification Numbers (VIN) stamped onto them, books have ISBNs printed inside, commodity food packaging has UPC. You might argue that these numbers don’t seem natural. Why am I calling them natural keys?&lt;/p&gt;
&lt;p&gt;The naturalness or artificiality of unique properties in a database is relative to the outside world. A key which was artificial at birth in some standards body or government agency becomes natural to us because it’s generally agreed upon in the world at large, and/or imprinted on objects.&lt;/p&gt;
&lt;p&gt;There are many industry, public and international standards for a broad variety of things including currencies, languages, financial instruments, chemical compounds and medical diagnoses.&lt;/p&gt;
&lt;p&gt;Here are some values that often work as natural keys:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ISO 3166 country codes&lt;/li&gt;
&lt;li&gt;ISO 639 language codes&lt;/li&gt;
&lt;li&gt;ISO 4217 currency codes&lt;/li&gt;
&lt;li&gt;ISIN stock symbols&lt;/li&gt;
&lt;li&gt;UPC/EAN, VIN, GTIN, ISBN&lt;/li&gt;
&lt;li&gt;login names&lt;/li&gt;
&lt;li&gt;email addresses&lt;/li&gt;
&lt;li&gt;room numbers&lt;/li&gt;
&lt;li&gt;mac address on a network&lt;/li&gt;
&lt;li&gt;(lat,lon) for points on the earth&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As advised, declare keys when you can and when reasonable, even multiple keys per table. But remember there are some caveats to keep in mind with the ideas above.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Not everyone has an email address. May be fine for the intended use of the database. Also people do change their email addresses from time to time. (More about key stability later.)&lt;/li&gt;
&lt;li&gt;ISIN stock symbols do alter over time, for instance the symbols GOOG and GOOGL do not accurately represent the reorganization of the company from Google to Alphabet. They can sometimes be confusing, e.g. TWTR vs TWTRQ. Some investors incorrectly bought the latter during Twitter’s IPO.&lt;/li&gt;
&lt;li&gt;Social security numbers are specific to American citizens, have privacy implications, and are reused after death. Also people can get new ones after identity theft. Finally the same number can identify both a person and a business tax id.&lt;/li&gt;
&lt;li&gt;Postal mail zip codes are a bad choice for towns. Multiple towns share a zip, and there are often multiple zips in a town.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;artificial-keys&quot;&gt;Artificial keys&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://begriffs.com/images/key-artificial.png&quot; class=&quot;right&quot; alt=&quot;artificial keys are made up&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Given that a key is a column with unique values in each row, one way to create one is to cheat and throw made-up unique values into each row. Artificial keys are just that: an invented code used for referring to facts or objects.&lt;/p&gt;
&lt;p&gt;Crucially this code derives from the database itself and is not known by anyone except users of the database. That’s what distinguishes artificial keys from standards-based natural keys.&lt;/p&gt;
&lt;p&gt;Whereas natural keys’ advantage is preventing table row duplication or contradiction, artificial keys are useful because they make it easy for people or other systems to refer to a row, and also improve lookup and join speed by avoiding string (or multi-column) key comparisons.&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot; readability=&quot;10&quot;&gt;
&lt;h4&gt;Surrogates&lt;/h4&gt;
&lt;p&gt;People also use artificial keys as an anchor so that no matter how business rules and columns change, the same row can always be identified the same way. An artificial key used for this purpose is called a “surrogate key” and requires special care. We’ll consider surrogates later.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Non-surrogate artificial keys are convenient for referring to a row from &lt;em&gt;outside&lt;/em&gt; a database. Whether exposed in a URL, affixed to an invoice, spoken over the phone, redeemed at a checkout counter or printed on a license plate, an artificial key succinctly identifies a fact or object. (A license plate is a natural key to you and me, but designed as an artificial key by the Dept of Motor Vehicles.)&lt;/p&gt;
&lt;p&gt;Artificial keys should be chosen with communication media in mind, to minimize typos and mistakes. Consider whether the key must be pronounced, read in print, sent via SMS, read in handwriting, entered into a pinpad, or embedded in a URL. Additionally some artificial keys like credit card numbers contain a &lt;a href=&quot;https://begriffs.com/posts/2017-10-21-sql-domain-integrity.html#credit-card-validation&quot;&gt;checksum&lt;/a&gt; so that if certain errors happen they can at least be detected.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;US license plates have &lt;a href=&quot;https://en.wikipedia.org/wiki/United_States_license_plate_designs_and_serial_formats#Skipping_characters&quot;&gt;rules&lt;/a&gt; about ambiguous characters such as &lt;code&gt;O&lt;/code&gt; vs &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Hospitals and pharmacies are especially careful, considering doctors’ handwriting. See &lt;a href=&quot;https://www.ismp.org/newsletters/acutecare/showarticle.aspx?id=81&quot;&gt;misidentification of alphanumeric symbols&lt;/a&gt; for lots of examples.&lt;/li&gt;
&lt;li&gt;Texting a confirmation code? Remember to stay within the &lt;a href=&quot;https://en.wikipedia.org/wiki/GSM_03.38&quot;&gt;GSM 03.38&lt;/a&gt; character set.&lt;/li&gt;
&lt;li&gt;Unlike Base64 encoding for arbitrary byte data, &lt;a href=&quot;https://philzimmermann.com/docs/human-oriented-base-32-encoding.txt&quot;&gt;Base32&lt;/a&gt; uses a restricted set of symbols which can be conveniently used by humans and processed by old computer systems which recognize only restricted character sets.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://arxiv.org/html/0901.4016&quot;&gt;Proquints&lt;/a&gt; are readable, spellable, pronounceable ids. They are PRO-nouncable QUINT-uplets of alternating unambiguous consonants and vowels.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Be advised that whenever you expose an artificial key to the world people have weird reasons to request custom exceptional values. Look no further than vanity license plates or the system for making pronounceable ids that became the infamous &lt;a href=&quot;http://thedailywtf.com/articles/The-Automated-Curse-Generator&quot;&gt;automated curse generator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sticking with numeric keys can work, although even in that case people have numerical taboos like omitting the &lt;a href=&quot;https://en.wikipedia.org/wiki/Thirteenth_floor&quot;&gt;thirteenth floor&lt;/a&gt;. But numbers work well in many places like URLs, pinpads, and for handwritten legibility if the recipient knows the key is comprised of all digits. Although proquints carry more information density per spoken syllable, numbers are pretty good.&lt;/p&gt;
&lt;p&gt;One thing to avoid in publicly exposed numbers is sequential order. It allows people to probe for resources (&lt;code&gt;/videos/1.mpeg&lt;/code&gt;, &lt;code&gt;/videos/2.mpeg&lt;/code&gt; etc) and also leaks cardinality information. Add a Feistel cipher on top of a sequence. This hides the ordering while maintaining uniqueness.&lt;/p&gt;
&lt;p&gt;The PostgreSQL &lt;a href=&quot;https://wiki.postgresql.org/wiki/Pseudo_encrypt&quot;&gt;pseudo encrypt wiki&lt;/a&gt; gives an example cipher function:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;FUNCTION&lt;/span&gt; pseudo_encrypt(&lt;span class=&quot;fu&quot;&gt;VALUE&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) returns &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;AS&lt;/span&gt; $$
&lt;span class=&quot;kw&quot;&gt;DECLARE&lt;/span&gt;
l1 &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;;
l2 &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;;
r1 &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;;
r2 &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;;
i int:=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;kw&quot;&gt;BEGIN&lt;/span&gt;
 l1:= (&lt;span class=&quot;fu&quot;&gt;VALUE&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;) &amp;amp; &lt;span class=&quot;dv&quot;&gt;65535&lt;/span&gt;;
 r1:= &lt;span class=&quot;fu&quot;&gt;VALUE&lt;/span&gt; &amp;amp; &lt;span class=&quot;dv&quot;&gt;65535&lt;/span&gt;;
 &lt;span class=&quot;kw&quot;&gt;WHILE&lt;/span&gt; i &amp;lt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;LOOP&lt;/span&gt;
   l2 := r1;
   r2 := l1 # ((((&lt;span class=&quot;dv&quot;&gt;1366&lt;/span&gt; * r1 + &lt;span class=&quot;dv&quot;&gt;150889&lt;/span&gt;) % &lt;span class=&quot;dv&quot;&gt;714025&lt;/span&gt;) / &lt;span class=&quot;fl&quot;&gt;714025.0&lt;/span&gt;) * &lt;span class=&quot;dv&quot;&gt;32767&lt;/span&gt;):&lt;span class=&quot;ch&quot;&gt;:int&lt;/span&gt;;
   l1 := l2;
   r1 := r2;
   i := i + &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;
 &lt;span class=&quot;kw&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;LOOP&lt;/span&gt;;
 &lt;span class=&quot;kw&quot;&gt;RETURN&lt;/span&gt; ((r1 &amp;lt;&amp;lt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;) + l1);
&lt;span class=&quot;kw&quot;&gt;END&lt;/span&gt;;
$$ LANGUAGE plpgsql strict immutable;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This particular function is its own inverse (i.e. &lt;code&gt;pseudo_encrypt(pseudo_encrypt(x)) = x&lt;/code&gt;). Using the function verbatim is sort of security through obscurity and if someone guesses you used Feistel from the PostgreSQL docs then it’s easy to obtain the inverse to return to the original sequence. However you can change it up by supplying your own function in place of &lt;code&gt;(((1366 * r1 + 150889) % 714025) / 714025.0)&lt;/code&gt;. Your function must produce a value between 0 and 1. You could simply tweak the numbers in the previous expression.&lt;/p&gt;
&lt;p&gt;Here’s how to use pseudo_encrypt:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SEQUENCE&lt;/span&gt; my_table_seq;

&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; my_table (
  short_id &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;DEFAULT&lt;/span&gt; pseudo_encrypt(
      nextval(&lt;span class=&quot;st&quot;&gt;'my_table_seq'&lt;/span&gt;):&lt;span class=&quot;ch&quot;&gt;:int&lt;/span&gt;
    ),
  &lt;span class=&quot;co&quot;&gt;-- other columns …&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt; (short_id)
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This solution stores the randomized values in the &lt;code&gt;short_id&lt;/code&gt; column. If the database needs to support high data ingestion rates you may instead choose to store the incrementing sequence itself in the table and convert it for display on demand with &lt;code&gt;pseudo_encrypt&lt;/code&gt;. Indexing randomized values can lead to write amplification as we’ll explore later.&lt;/p&gt;
&lt;p&gt;The previous example used a regular sized integer for the &lt;code&gt;short_id&lt;/code&gt; column. To use &lt;code&gt;bigint&lt;/code&gt; we’d need a different Feistel function like &lt;a href=&quot;https://en.wikipedia.org/wiki/XTEA&quot;&gt;XTEA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another way to obscure an integer sequence as by transforming it into short strings. Try the &lt;a href=&quot;https://github.com/iCyberon/pg_hashids&quot;&gt;pg_hashids&lt;/a&gt; extension:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; EXTENSION pg_hashids;

&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SEQUENCE&lt;/span&gt; my_table_seq;

&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; my_table (
  short_id text &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;DEFAULT&lt;/span&gt; id_encode(
      nextval(&lt;span class=&quot;st&quot;&gt;'my_table_seq'&lt;/span&gt;),
      &lt;span class=&quot;st&quot;&gt;'long string as table-specific salt'&lt;/span&gt;
    ),
  &lt;span class=&quot;co&quot;&gt;-- other columns …&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt; (short_id)
);

&lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; my_table &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt;
  (&lt;span class=&quot;kw&quot;&gt;DEFAULT&lt;/span&gt;), (&lt;span class=&quot;kw&quot;&gt;DEFAULT&lt;/span&gt;), (&lt;span class=&quot;kw&quot;&gt;DEFAULT&lt;/span&gt;);

&lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; my_table;
&lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;┌──────────┐&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;│ short_id │&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;├──────────┤&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;│ R4       │&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;│ ya       │&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;│ Ll       │&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;└──────────┘&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once again it may be more performant to store the integers themselves in the table and convert on demand, but benchmark it and see if you really need to add the complexity.&lt;/p&gt;
&lt;p&gt;With a clear notion of artificial and natural keys we can see that the natural-vs-artificial debate is a false dichotomy. Artificial and natural keys are not mutually exclusive! The same table can have both. In fact a table with artificial key ought to enforce a natural key as well, except in the few cases where no natural key exists, such as a table of coupon codes:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;co&quot;&gt;-- A rare table: no natural key candidates to&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;-- declare along with the artificial &quot;code&quot; key&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; coupons (
  code text &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
  amount &lt;span class=&quot;dt&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
  redeemed &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;,

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt; (code)
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Having an artificial key and not declaring natural keys when they exist leaves the latter unprotected:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; cars (
  car_id bigserial &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
  vin &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
  &lt;span class=&quot;dt&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,

  &lt;span class=&quot;kw&quot;&gt;UNIQUE&lt;/span&gt; (car_id)
  &lt;span class=&quot;co&quot;&gt;-- should have added&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;-- UNIQUE (vin)&lt;/span&gt;
);

&lt;span class=&quot;co&quot;&gt;-- This unfortunately succeeds&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; cars (vin, &lt;span class=&quot;dt&quot;&gt;year&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt;
  (&lt;span class=&quot;st&quot;&gt;'1FTJW36F2TEA03179'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1996&lt;/span&gt;),
  (&lt;span class=&quot;st&quot;&gt;'1FTJW36F2TEA03179'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1997&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only argument against declaring extra keys is that each one will entail another unique index which will increase the cost of table writes. Depends on how much you value data correctness, so probably worth declaring the keys.&lt;/p&gt;
&lt;p&gt;It’s worth declaring multiple artificial keys too if they exist. For instance, a business has Applicants and Employees. Every employee was once an applicant and refers to Applicants by their own id, which is should be a key of employee as well. Another example would be setting employee id and login name as two keys on Employees.&lt;/p&gt;
&lt;h3 id=&quot;surrogate-keys&quot;&gt;Surrogate Keys&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://begriffs.com/images/key-surrogate.jpg&quot; class=&quot;right&quot; alt=&quot;surrogate keys are on the inside&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As mentioned above, an important kind of artificial key is called a surrogate key. It’s not meant to be succinct or shareable like other artificial keys, it’s meant as an internal placeholder that identifies a row forevermore. It’s used in SQL and joins but not explicitly referenced by an application.&lt;/p&gt;
&lt;p&gt;If you know about PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/10/static/ddl-system-columns.html&quot;&gt;system columns&lt;/a&gt; you could think of surrogates as almost a database implementation detail like a ctid except never changing. A surrogate value should be chosen once for each row and then never changed.&lt;/p&gt;
&lt;p&gt;Surrogates make great targets for foreign keys, and the foreign keys should be marked as &lt;code&gt;ON UPDATE RESTRICT&lt;/code&gt; to help enforce the immutability of the surrogate. On the other hand, foreign keys to publicly shared keys should be marked &lt;code&gt;ON UPDATE CASCADE&lt;/code&gt;, which allows maximum flexibility to change those keys’ values. (The cascading update runs with the same &lt;a href=&quot;https://begriffs.com/posts/2017-08-01-practical-guide-sql-isolation.html&quot;&gt;isolation level&lt;/a&gt; as its surrounding transaction, so don’t worry about concurrency problems, the database can handle that if you choose a strict isolation level.)&lt;/p&gt;
&lt;p&gt;Don’t “naturalize” surrogate keys. As soon as you display the value of a surrogate key to your end users, or worse yet allow users to work with the value (perhaps via search), you have effectively given the key business meaning. The exposed key in our database could then be considered a natural key in someone else’s.&lt;/p&gt;
&lt;p&gt;Forcing external systems to use other artificial keys explicitly designed for sharing allows us to change the exposed keys as needed to accommodate changing requirements, while joining and maintaining referential integrity with surrogates internally.&lt;/p&gt;
&lt;h4 id=&quot;auto-incrementing-bigint&quot;&gt;Auto-incrementing bigint&lt;/h4&gt;
&lt;p&gt;The most common choice for surrogate keys is the auto-incrementing “bigserial” column, aka the &lt;code&gt;IDENTITY&lt;/code&gt; column. (In fact, PostgreSQL 10 now supports the IDENTITY construct like Oracle does, see &lt;a href=&quot;https://www.postgresql.org/docs/10/static/sql-createtable.html&quot;&gt;CREATE TABLE&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;However I believe an auto-incrementing int is usually the wrong choice for surrogate keys. My opinion is uncommon, so let me explain.&lt;/p&gt;
&lt;p&gt;Disadvantages of serial keys:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Starting all sequences at 1 and counting up means that rows from different tables will share many of the same key values. This isn’t ideal. Disjoint sets of keys per table would be preferred so that queries can’t accidentally mix up the constants in a join, say, and still return results. (As a workaround you could arrange each sequence as multiples of distinct prime numbers to achieve disjointness, but that’s painstaking.)&lt;/li&gt;
&lt;li&gt;Calling &lt;code&gt;nextval()&lt;/code&gt; on sequences introduces shared schema state that scales less easily across nodes in new distributed SQL systems being developed.&lt;/li&gt;
&lt;li&gt;Merging data from another database that also uses bigserial keys will conflict with existing data. The sequential values simply aren’t unique across systems.&lt;/li&gt;
&lt;li&gt;Philosophically the incrementing number harkens back to old systems with an implicit row order. If you want to order rows, do it explicitly with a timestamp column or something meaningful in the data itself. Doing otherwise violates the first normal form.&lt;/li&gt;
&lt;li&gt;(Weak reason, but) those little ids are tempting to expose.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;uuid&quot;&gt;UUID&lt;/h4&gt;
&lt;p&gt;Let’s consider another option: using a bigger integers (128 bits) generated in a randomized pattern. Algorithms for generating such universally unique identifiers (UUIDs) are extremely unlikely to ever generate the same value twice, even when run simultaneously on different CPUs.&lt;/p&gt;
&lt;p&gt;UUIDs seem to be the natural choice for surrogate keys, right? If you want to label rows uniquely then nothing beats a unique label!&lt;/p&gt;
&lt;p&gt;So why doesn’t everyone use them on PostgreSQL? There are some bogus reasons and one legitimate reason. Also there’s a workaround for the legitimate reason, and I’ll present benchmarks to illustrate.&lt;/p&gt;
&lt;p&gt;First the bogus reasons. Some people think UUIDs are strings because of the traditional dashed hexadecimal representation: 5bd68e64-ff52-4f54-ace4-3cd9161c8b7f. In fact some databases don’t have a compact (128-bit) uuid type, but PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/current/static/datatype-uuid.html&quot;&gt;does&lt;/a&gt;. It’s the size of two bigints, and that’s not an appreciable overhead when compared with the bulk of other information in the database.&lt;/p&gt;
&lt;p&gt;Another invalid criticism of UUIDs is that they are unwieldy: who wants to pronounce them, type them, or see them? That’s valid for an exposed artificial key, but (by design) nobody will ever see a surrogate UUID. Maybe a developer running SQL commands in psql to debug the system might deal with the UUIDs, but that’s about it. The developer could also refer to rows with friendlier keys if those are defined.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The real problem with UUIDs is that highly randomized values cause write amplification due to full-page writes in the write-ahead log (WAL).&lt;/strong&gt; This means worse performance when inserting rows. It really depends on the algorithm used for generating UUIDs, though.&lt;/p&gt;
&lt;p&gt;Let’s measure the write amplification. The fault lies with old filesystems, really. When PostgreSQL writes data to disk it does so by modifying a “page” on disk. If a computer loses power at a critical time then most filesystems may still report the write as successful before the data is safe on disk. If PostgreSQL naively considered the action complete then the database would be corrupted when the system goes back online.&lt;/p&gt;
&lt;p&gt;PostgreSQL cannot trust that most OS/filesystem/disk configurations will enforce atomicity, so the database saves the entire state of a newly modified disk page to the write-ahead log for use in restoration after a potential crash. Indexing highly random values like UUIDs tends to touch a whole lot of different disk pages, which means writing the full page size (usually 4k or 8k) to the WAL for each insertion. That’s called a full-page write (FPW).&lt;/p&gt;
&lt;p&gt;Some UUID generation algorithms (like Twitter’s “snowflake” or &lt;code&gt;uuid_generate_v1()&lt;/code&gt; in the &lt;a href=&quot;https://www.postgresql.org/docs/10/static/uuid-ossp.html&quot;&gt;uuid-ossp&lt;/a&gt; extension for PostgreSQL) produce monotonically increasing values per machine. This consolidates writes into fewer disk pages, reducing FPW.&lt;/p&gt;
&lt;p&gt;We can measure the PFW penalty for different UUID generation algorithms and also inspect WAL statistics. To do this I set up the following benchmark.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;EC2 instance running ami-aa2ea6d0
&lt;ul&gt;&lt;li&gt;Ubuntu Server 16.04 LTS (HVM)&lt;/li&gt;
&lt;li&gt;EBS General Purpose (SSD)&lt;/li&gt;
&lt;li&gt;c3.xlarge&lt;/li&gt;
&lt;li&gt;vCPU: 4&lt;/li&gt;
&lt;li&gt;RAM GiB: 7.5&lt;/li&gt;
&lt;li&gt;Disk GB: 2 x 40 (SSD)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PostgreSQL built from source
&lt;ul&gt;&lt;li&gt;https://ftp.postgresql.org/pub/source/v10.1/postgresql-10.1.tar.gz&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./configure --with-uuid=ossp CFLAGS=&quot;-O3&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Default database configuration except:
&lt;ul&gt;&lt;li&gt;max_wal_size=‘10GB’;&lt;/li&gt;
&lt;li&gt;checkpoint_timeout=‘2h’;&lt;/li&gt;
&lt;li&gt;synchronous_commit=‘off’;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Schema:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; EXTENSION &lt;span class=&quot;ot&quot;&gt;&quot;uuid-ossp&quot;&lt;/span&gt;;
&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; EXTENSION pgcrypto;

&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; u_v1 ( u uuid &lt;span class=&quot;kw&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;KEY&lt;/span&gt; );
&lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; u_crypto ( u uuid &lt;span class=&quot;kw&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;KEY&lt;/span&gt; );&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before inserting UUIDs into each table, I found the current position of the write-ahead log.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; pg_walfile_name(pg_current_wal_lsn());

&lt;span class=&quot;co&quot;&gt;/* For instance,&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;     pg_walfile_name&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;--------------------------&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; 000000010000000000000001&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I used that position to get statistics about WAL usage after benchmarking. This gets the stats from events occurring subsequent to a start position:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;ex&quot;&gt;pg_waldump&lt;/span&gt; --stats 000000010000000000000001&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I ran tests for three scenarios:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Inserting UUIDs generated by &lt;code&gt;gen_random_uuid()&lt;/code&gt; (provided by &lt;a href=&quot;https://www.postgresql.org/docs/10/static/pgcrypto.html&quot;&gt;pgcrypto&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Inserting from &lt;code&gt;uuid_generate_v1()&lt;/code&gt; (provided by [uuid-ossp] (https://www.postgresql.org/docs/10/static/uuid-ossp.html)&lt;/li&gt;
&lt;li&gt;Inserting from &lt;code&gt;gen_random_uuid()&lt;/code&gt; again, but with &lt;code&gt;full_page_writes='off'&lt;/code&gt; in the db configuration. This shows how fast it would be without FPW amplification.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;For each of these scenarios I started from an empty table and inserted 2^10 UUIDs. I repeated the insertions over sixteen rounds, timing each to see how the performance changed with more data in the table.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;co&quot;&gt;-- for instance, I ran this 16 times with \timing in psql&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; u_crypto (
  &lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; gen_random_uuid()
  &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; generate_series(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1024&lt;/span&gt;*&lt;span class=&quot;dv&quot;&gt;1024&lt;/span&gt;)
);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are the speed results:&lt;/p&gt;
&lt;div class=&quot;figure&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://begriffs.com/images/uuid-insert-graph.png&quot; alt=&quot;Graph of UUID insertion speed&quot;/&gt;&lt;p class=&quot;caption&quot;&gt;Graph of UUID insertion speed&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here are the WAL statistics for each method:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;gen_random_uuid()

Type         N      (%)   Record size      (%)   FPI size      (%)
----         -      ---   -----------      ---   --------      ---
XLOG       260 (  0.15)         13139 (  0.09)     484420 ( 30.94)
Heap2      765 (  0.45)        265926 (  1.77)     376832 ( 24.07)
Heap     79423 ( 46.55)       6657121 ( 44.20)     299776 ( 19.14)
Btree    89354 ( 52.37)       7959710 ( 52.85)     404832 ( 25.85)

uuid_generate_v1()

Type         N      (%)   Record size      (%)   FPI size      (%)
----         -      ---   -----------      ---   --------      ---
XLOG         0 (  0.00)             0 (  0.00)          0 (  0.00)
Heap2        0 (  0.00)             0 (  0.00)          0 (  0.00)
Heap    104326 ( 49.88)       7407146 ( 44.56)          0 (  0.00)
Btree   104816 ( 50.12)       9215394 ( 55.44)          0 (  0.00)

gen_random_uuid() with fpw=off

Type         N      (%)   Record size      (%)   FPI size      (%)
----         -      ---   -----------      ---   --------      ---
XLOG         4 (  0.00)           291 (  0.00)         64 (  0.84)
Heap2        0 (  0.00)             0 (  0.00)          0 (  0.00)
Heap    107778 ( 49.88)       7654268 ( 46.08)          0 (  0.00)
Btree   108260 ( 50.11)       8956097 ( 53.91)       7556 ( 99.16)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This confirms that &lt;code&gt;gen_random_uuid&lt;/code&gt; generates a lot of WAL activity as full-page images (FPI) and the other methods do not. The last one of course because I prevented the database from doing so. Suppressing FPW is not a technique you want to use for real though, unless you’re very certain of your filesystem and disk configuration. &lt;a href=&quot;https://blog.2ndquadrant.com/pg-phriday-postgres-zfs/&quot;&gt;This article&lt;/a&gt; suggests that ZFS may be safe for disabling FPW, but use caution.&lt;/p&gt;
&lt;p&gt;The clear winner in my benchmark is &lt;code&gt;uuid_generate_v1()&lt;/code&gt;. It’s fast and doesn’t seem to slow down as rows accumulate. Also the uuid-ossp extension is pre-installed on hosted databases like RDS and Citus Cloud, so the function will be available with no extra work.&lt;/p&gt;
&lt;p&gt;The docs warn about uuid_generate_v1 that&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;This involves the MAC address of the computer and a time stamp. Note that UUIDs of this kind reveal the identity of the computer that created the identifier and the time at which it did so, which might make it unsuitable for certain security-sensitive applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However I don’t think this is a problem for us because the surrogate key won’t be exposed. The library does offer a &lt;code&gt;uuid_generate_v1mc()&lt;/code&gt; that obscures the mac address if you’re still concerned.&lt;/p&gt;
&lt;h3 id=&quot;summary-and-suggestion&quot;&gt;Summary and Suggestion&lt;/h3&gt;
&lt;p&gt;Now that we know the various types of keys and their uses, here’s my suggestion for choosing them in your own database.&lt;/p&gt;
&lt;p&gt;For each table:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Identify and declare all natural keys.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;&amp;lt;table_name&amp;gt;_id&lt;/code&gt; surrogate key of type &lt;code&gt;uuid&lt;/code&gt; with default value &lt;code&gt;uuid_generate_v1()&lt;/code&gt;. You can even mark it as a primary key if you like. Including the table name in this id makes joins simpler. It’s &lt;code&gt;JOIN foo USING (bar_id)&lt;/code&gt; vs &lt;code&gt;JOIN foo ON (foo.bar_id = bar.id)&lt;/code&gt;. Do not expose this key to clients or anywhere outside the database.&lt;/li&gt;
&lt;li&gt;For “join tables” declare all foreign key columns as a single composite primary key.&lt;/li&gt;
&lt;li&gt;Add an artificial key if desired for use in a URL or anywhere else you want to share a reference to a row. Use a Feistel cipher or pg_hashids to conceal auto-incrementing integers.&lt;/li&gt;
&lt;li&gt;Mark foreign keys to surrogate UUIDs as &lt;code&gt;ON UPDATE RESTRICT&lt;/code&gt; and to external artificial keys as &lt;code&gt;ON UPDATE CASCADE&lt;/code&gt;. Use your own judgement for natural keys.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This approach provides internal key stability while acknowledging and protecting natural keys. It also decouples externally-facing artificial keys from either. With the proper understanding we can move beyond a “primary key” fixation and appreciate the various roles that keys play.&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 05:20:41 +0000</pubDate>
<dc:creator>chmaynard</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://begriffs.com/posts/2018-01-01-sql-keys-in-depth.html</dc:identifier>
</item>
<item>
<title>Clang runs in the browser and compiles C++ to WebAssembly</title>
<link>https://tbfleming.github.io/cib/</link>
<guid isPermaLink="true" >https://tbfleming.github.io/cib/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;&lt;title&gt;Clang In Browser&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot;&gt;
    &lt;div class=&quot;main&quot;&gt;
        &lt;div id=&quot;pane-top&quot; class=&quot;split split-vertical&quot;&gt;
            
            &lt;div id=&quot;pane-clang-format&quot; class=&quot;process split split-horizontal&quot;&gt;
                &lt;p&gt;
                    clang-format:
                    &lt;span id=&quot;clang-format-status&quot;/&gt;
                    &lt;button id=&quot;clang-format-reboot&quot; class=&quot;right-button&quot; onclick=&quot;rebootClangFormat()&quot;&gt;Reboot&lt;/button&gt;
                &lt;/p&gt;
                
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id=&quot;pane-bottom&quot; class=&quot;split split-vertical&quot;&gt;
            &lt;div id=&quot;pane-clang&quot; class=&quot;process split split-horizontal&quot;&gt;
                &lt;p&gt;
                    &lt;button id=&quot;clang-run&quot; onclick=&quot;compile()&quot;&gt;Compile&lt;/button&gt;
                    &lt;button id=&quot;clang-save&quot; onclick=&quot;saveWasm()&quot;&gt;Save&lt;/button&gt;
                    &lt;span id=&quot;clang-status&quot;/&gt;
                    &lt;button id=&quot;clang-reboot&quot; class=&quot;right-button&quot; onclick=&quot;clang.reboot()&quot;&gt;Reboot&lt;/button&gt;
                &lt;/p&gt;
                &lt;pre id=&quot;clang-io&quot; class=&quot;io&quot;/&gt;
            &lt;/div&gt;
            &lt;div id=&quot;pane-runtime&quot; class=&quot;process split split-horizontal&quot;&gt;
                &lt;p&gt;
                    &lt;button id=&quot;runtime-run&quot; onclick=&quot;run()&quot;&gt;Run&lt;/button&gt;
                    &lt;span id=&quot;runtime-status&quot;/&gt;
                    &lt;button id=&quot;runtime-reboot&quot; class=&quot;right-button&quot; onclick=&quot;runtime.reboot()&quot;&gt;Reboot&lt;/button&gt;
                &lt;/p&gt;
                &lt;pre id=&quot;runtime-io&quot; class=&quot;io&quot;/&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;/body&gt;</description>
<pubDate>Tue, 02 Jan 2018 01:48:18 +0000</pubDate>
<dc:creator>lifthrasiir</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tbfleming.github.io/cib/</dc:identifier>
</item>
<item>
<title>Show HN: A game my 12-year-old daughter wrote</title>
<link>http://www.mind-circus.org</link>
<guid isPermaLink="true" >http://www.mind-circus.org</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;&lt;title&gt;Mind Circus&lt;/title&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta content=&quot;width=device-width, initial-scale=1.0&quot; name=&quot;viewport&quot;/&gt;&lt;link href=&quot;favicon.ico&quot; rel=&quot;shortcut icon&quot; type=&quot;image/bmp&quot;/&gt;&lt;link href=&quot;https://fonts.googleapis.com/css?family=Raleway&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link href=&quot;https://fonts.googleapis.com/css?family=Montserrat&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;Mind Circus Games&lt;/p&gt;
&lt;div id=&quot;desc&quot; class=&quot;center&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;3 o'clock&lt;/p&gt;
&lt;p&gt;3 o'clock is the strange puzzle game where you try to figure out who or what killed the Canderwalt family. This game will take you through a 15 minute journey in the house where it happened. You will be able to point and click through the entire story, but there's a catch! You must uncover what happened by doing the crime yourself! Will you be able to solve the mystery?&lt;/p&gt;
&lt;p&gt;Click on the image below to start&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;container&quot;&gt;&lt;a href=&quot;http://www.mind-circus.org/threeoclock.html&quot;&gt;&lt;img id=&quot;threeoclock&quot; src=&quot;http://www.mind-circus.org/start.png&quot;/&gt;&lt;/a&gt; &lt;img id=&quot;nathan&quot; src=&quot;http://www.mind-circus.org/nathan2.png&quot;/&gt;&lt;/div&gt;
&lt;div id=&quot;credits&quot; class=&quot;center&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;CREDITS&lt;/p&gt;
&lt;p&gt;Management,Script and Graphics: Sophie Broderick&lt;/p&gt;
&lt;p&gt;Marketing Assistance and Debugging: Skylar Thomas&lt;/p&gt;

&lt;p&gt;Emotional support: Magie Broderick&lt;/p&gt;
&lt;p&gt;Catering, Craft Service: Jana Broderick&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a title=&quot;Web Analytics&quot; href=&quot;http://clicky.com/101093115&quot;&gt;&lt;img alt=&quot;Web Analytics&quot; src=&quot;http://static.getclicky.com/media/links/badge.gif&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;noscript&gt;
&lt;p&gt;&lt;img alt=&quot;Clicky&quot; width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://in.getclicky.com/101093115ns.gif&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 02 Jan 2018 00:57:47 +0000</pubDate>
<dc:creator>david927</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.mind-circus.org/</dc:identifier>
</item>
<item>
<title>The mysterious case of the Linux Page Table Isolation patches</title>
<link>http://pythonsweetness.tumblr.com/post/169166980422/the-mysterious-case-of-the-linux-page-table</link>
<guid isPermaLink="true" >http://pythonsweetness.tumblr.com/post/169166980422/the-mysterious-case-of-the-linux-page-table</guid>
<description>&lt;p&gt;&lt;em&gt;[Various errors and updates are addressed in &lt;a href=&quot;http://pythonsweetness.tumblr.com/post/169217189597/quiet-in-the-peanut-gallery&quot;&gt;Quiet in the peanut gallery&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;tl;dr:&lt;/em&gt; there is presently an embargoed security bug impacting apparently all contemporary CPU architectures that implement virtual memory, requiring hardware changes to fully resolve. Urgent development of a software mitigation is being done in the open and recently landed in the Linux kernel, and a similar mitigation began appearing in NT kernels in November. In the worst case the software fix causes huge slowdowns in typical workloads. There are hints the attack impacts common virtualization environments including Amazon EC2 and Google Compute Engine, and additional hints the exact attack may involve a new variant of Rowhammer.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;I don’t really care much for security issues normally, but I adore a little intrigue, and it seems anyone who would normally write about these topics is either somehow very busy, or already knows the details and isn’t talking, which leaves me with a few hours on New Years’ Day to go digging for as much information about this mystery as I could piece together.&lt;/p&gt;
&lt;p&gt;Beware this is very much a connecting-the-invisible-dots type affair, so it mostly represents guesswork until such times as the embargo is lifted. From everything I’ve seen, including the vendors involved, many fireworks and much drama is likely when that day arrives.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LWN&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The trail begins with LWN’s &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Flwn.net%2FArticles%2F741878%2F&amp;amp;t=ODY1YTM4MjYyYzU2NzNmM2VmYzEyMGIzODJkY2IxNDg0MDhkZDM1MSxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;current state of kernel page-table isolation&lt;/a&gt; article posted on December 20th. It’s apparent from the tone that a great deal of urgent work by the core kernel developers has been poured into the &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Flwn.net%2FArticles%2F738975%2F&amp;amp;t=MzQxMmMyYThhNDdiMGJkZmRmZWI5NDkzZmQ3ZTM4ZDcwYzFhMjU5OSxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;KAISER patch series&lt;/a&gt; first posted in October by a group of researchers from &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fwww.iaik.tugraz.at%2Fcontent%2Fresearch%2Fsesys%2F&amp;amp;t=NzEwZjg5YmQ1ZTNlZWIyYWE0YzgzZmZjN2ZmM2E2YjMzNDk5YTk4YixXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;TU Graz&lt;/a&gt; in Austria.&lt;/p&gt;
&lt;p&gt;The purpose of the series is conceptually simple: to prevent a variety of attacks by unmapping as much of the Linux kernel from the process page table while the process is running in user space, greatly hindering attempts to identify kernel virtual address ranges from unprivileged userspace code.&lt;/p&gt;
&lt;p&gt;The group’s paper describing KAISER, &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fgruss.cc%2Ffiles%2Fkaiser.pdf&amp;amp;t=OTk4NGQwZTQ1NTdlNzE1ZGEyZTdlY2ExMTY1MTJhNzk2ODIzYWY1OSxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;KASLR is Dead: Long Live KASLR&lt;/a&gt;, makes specific reference in its abstract to removing all knowledge of kernel address space from the memory management hardware while user code is active on the CPU.&lt;/p&gt;
&lt;p&gt;Of particular interest with this patch set is that it touches a core, wholly fundamental pillar of the kernel (and its interface to userspace), and that it is obviously being rushed through with the greatest priority. When reading about memory management changes in Linux, usually the first reference to a change happens long before the change is ever merged, and usually after numerous rounds of review, rejection and flame war spanning many seasons and moon phases.&lt;/p&gt;
&lt;p&gt;The KAISER (now KPTI) series was merged in some time less than 3 months.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recap: ASLR&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;On the surface, the patches appear designed to ensure Address Space Layout Randomization remains effective: this is a security feature of modern operating systems that attempts to introduce as many random bits as possible into the address ranges for commonly mapped objects.&lt;/p&gt;
&lt;p&gt;For example, on invoking /usr/bin/python, the dynamic linker will arrange for the system C library, heap, thread stack and main executable to all receive randomly assigned address ranges:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;$ bash -c ‘grep heap /proc/$$/maps’&lt;br/&gt;019de000-01acb000 rw-p 00000000 00:00 0                                  [heap]&lt;br/&gt;$ bash -c 'grep heap /proc/$$/maps’&lt;br/&gt;023ac000-02499000 rw-p 00000000 00:00 0                                  [heap]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notice how the start and end offset for the bash process heap changes across runs.&lt;/p&gt;
&lt;p&gt;The effect of this feature is that, should a buffer management bug lead to an attacker being able to overwrite some memory address pointing at program code, and that address should later be used in program control flow, such that the attacker can divert control flow to a buffer containing contents of their choosing, it becomes much more difficult for the attacker to populate the buffer with machine code that would lead to, for example, the system() C library function being invoked, as the address of that function varies across runs.&lt;/p&gt;
&lt;p&gt;This is a simple example, ASLR is designed to protect many similar such scenarios, including preventing the attacker from learning the addresses of program data that may be useful for modifying control flow or implementing an attack.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;KASLR is “simply” ASLR applied to the kernel itself: on each reboot of the system, address ranges belonging to the kernel are randomized such that an attacker who manages to divert control flow while running in kernel mode cannot guess addresses for functions and structures necessary for implementing their attack, such as locating the current process data, and flipping the active UID from an unprivileged user to root, etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bad news: the software mitigation is expensive&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The primary reason for the old Linux behaviour of mapping kernel memory in the same page tables as user memory is so that when the user’s code triggers a system call, fault, or an interrupt fires, it is not necessary to change the virtual memory layout of the running process.&lt;/p&gt;
&lt;p&gt;Since it is unnecessary to change the virtual memory layout, it is further unnecessary to flush highly performance-sensitive CPU caches that are dependant on that layout, primarily the &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FTranslation_lookaside_buffer&amp;amp;t=NjEyNGUzNTk2MGY3ODY3ODIxZjQ1Yjc4YWZjMGNmNmI1OWU1M2U0YyxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;Translation Lookaside Buffer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the page table splitting patches merged, it becomes necessary for the kernel to flush these caches every time the kernel begins executing, and every time user code resumes executing. For some workloads, the effective total loss of the TLB lead around every system call leads to highly visible slowdowns: &lt;a href=&quot;https://twitter.com/grsecurity/status/947439275460702208&quot;&gt;@grsecurity measured a simple case&lt;/a&gt; where Linux “du -s” suffered a 50% slowdown on a recent AMD CPU.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;34C3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Over at this year’s CCC, you can find another of the TU Graz researchers &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dewe3-mUku94&amp;amp;t=NjczZmIzNWY3YTA2NGFiZDJmYThlMjlhMWM1YTE3NThhNzY0OGJlMSxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;describing a pure-Javascript ASLR attack&lt;/a&gt; that works by carefully timing the operation of the CPU memory management unit as it traverses the page tables that describe the layout of virtual memory. The effect is that through a combination of high precision timing and selective eviction of CPU cache lines, a Javascript program running in a web browser can recover the virtual address of a Javascript object, enabling subsequent attacks against browser memory management bugs.&lt;/p&gt;
&lt;p&gt;So again, on the surface, we have a group authoring the KAISER patches also demonstrating a technique for unmasking ASLR’d addresses, and the technique, demonstrated using Javascript, is imminently re-deployable against an operating system kernel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recap: Virtual Memory&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the usual case, when some machine code attempts to load, store, or jump to a memory address, modern CPUs must first translate this &lt;em&gt;virtual address&lt;/em&gt; to a &lt;em&gt;physical address,&lt;/em&gt; by way of walking a series of OS-managed arrays (called page tables) that describe a mapping between virtual memory and physical RAM installed in the machine.&lt;/p&gt;
&lt;p&gt;Virtual memory is possibly the single most important robustness feature in modern operating systems: it is what prevents, for example, a dying process from crashing the operating system, a web browser bug crashing your desktop environment, or one virtual machine running in Amazon EC2 from effecting changes to another virtual machine on the same host.&lt;/p&gt;
&lt;p&gt;The attack works by exploiting the fact that the CPU maintains numerous caches, and by carefully manipulating the contents of these caches, it is possible to infer which addresses the memory management unit is accessing behind the scenes as it walks the various levels of page tables, since an uncached access will take longer (in real time) than a cached access. By detecting which elements of the page table are accessed, it is possible to recover the majority of the bits in the virtual address the MMU was busy resolving.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Evidence for motivation, but not panic&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have found motivation, but so far we have not seen anything to justify the sheer panic behind this work. ASLR in general is an imperfect mitigation and very much a last line of defence: there is barely a 6 month period where even a non-security minded person can read about some new method for unmasking ASLR’d pointers, and reality has been this way for as long as ASLR has existed.&lt;/p&gt;
&lt;p&gt;Fixing ASLR alone is not sufficient to describe the high priority motivation behind the work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Evidence: it’s a hardware security bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From reading through the patch series, a number of things are obvious.&lt;/p&gt;
&lt;p&gt;First of all, as &lt;a href=&quot;https://twitter.com/grsecurity/status/947147105684123649&quot;&gt;@grsecurity points out&lt;/a&gt;, some comments in the code have been redacted, and additionally the main documentation file describing the work is presently missing entirely from the Linux source tree.&lt;/p&gt;
&lt;p&gt;Examining the code, it is structured in the form of a runtime patch applied at boot only when the kernel detects the system is impacted, using exactly the same mechanism that, for example, applies mitigations for the infamous &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FPentium_F00F_bug&amp;amp;t=Yjc4MDZhNDZjZDdiYWNkNmJkNjQ3ZDNjZmVlZmRkMGM2NDYwN2I2YSxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;Pentium F00F bug&lt;/a&gt;:&lt;br/&gt;&lt;/p&gt;
&lt;img src=&quot;http://78.media.tumblr.com/1c80c45e14c1e676b35cdd89cc9b557c/tumblr_inline_p1untxZBBD1rkm8fh_500.jpg&quot; data-orig-width=&quot;667&quot; data-orig-height=&quot;315&quot; width=&quot;500&quot; height=&quot;236&quot;/&gt;&lt;p&gt;&lt;strong&gt;More clues: Microsoft have also implemented page table splitting&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From a little digging through the FreeBSD source tree, it seems that so far other free operating systems are not implementing page table splitting, however as noted by &lt;a href=&quot;https://twitter.com/aionescu/status/930412525111296000&quot;&gt;Alex Ioniscu on Twitter&lt;/a&gt;, the work already is not limited to Linux: public NT kernels from as early as November have begun to implement the same technique.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guesswork: Rowhammer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Digging further into the work of the researchers at TU Graz, we find &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fwww.tugraz.at%2Fen%2Ftu-graz%2Fservices%2Fnews-stories%2Fplanet-research%2Fsingleview%2Farticle%2Fwenn-rowhammer-nur-noch-einmal-klopft%2F&amp;amp;t=NWM1ZjZlZWU2NzFlMWIyNmI5MGZlNjJlZmM2YTlhOTIzNGY3Yjk4NyxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;When rowhammer only knocks once&lt;/a&gt;, an announcement on December 4th of a &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Farxiv.org%2Fabs%2F1710.00551&amp;amp;t=ZjAyMDUzZWRmYjExNGNlYzRlMjE1NTliMTI2M2Y4YjkxMTFhMjI0OCxXRG55eVpXNw%3D%3D&amp;amp;b=t%3AqBH2b-yWL63V8acbuG-EUQ&amp;amp;p=http%3A%2F%2Fpythonsweetness.tumblr.com%2Fpost%2F169166980422%2Fthe-mysterious-case-of-the-linux-page-table&amp;amp;m=1&quot;&gt;new variant of the Rowhammer attack&lt;/a&gt;:&lt;br/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;In this paper, we present novel Rowhammer attack and exploitation primitives, showing that even a combination of all defenses is ineffective. Our new attack technique, one-location hammering, breaks previous assumptions on requirements for triggering the Rowhammer bug&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a quick recap, Rowhammer is a class of problem fundamental to most (all?) kinds of commodity DRAMs, such as the memory in the average computer. Through precise manipulation of one area of memory, it is possible to cause degradation of storage in a related (but otherwise logically distinct) area of memory. The effect is that Rowhammer can be used to flip bits of memory that unprivileged user code should have no access to, such as bits describing how much access that code should have to the rest of the system.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;I found this work on Rowhammer particularly interesting, not least for its release being in such close proximity to the page table splitting patches, but because Rowhammer attacks require a target: you must know the physical address of the memory you are attempting to mutate, and a first step to learning a physical address may be learning a virtual address, such as in the KASLR unmasking work.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guesswork: it effects major cloud providers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On the kernel mailing list we can see, in addition to the names of subsystem maintainers, e-mail addresses belonging to employees of Intel, Amazon and Google. The presence of the two largest cloud providers is particularly interesting, as this provides us with a strong clue that the work may be motivated in large part by virtualization security.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Which leads to even more guessing: virtual machine RAM, and the virtual memory addresses used by those virtual machines are ultimately represented as large contiguous arrays on the host machine, arrays that, especially in the case of only 2 tenants on a host machine, are assigned by memory allocators in the Xen and Linux kernels that likely have very predictable behaviour.&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Favourite guess: it is a privilege escalation attack against hypervisors&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Putting it all together, I would not be surprised if we start 2018 with the release of the mother of all hypervisor privilege escalation bugs, or something similarly systematic as to drive so much urgency, and the presence of so many interesting names on the patch set’s CC list.&lt;/p&gt;
&lt;p&gt;One final tidbit, while I’ve lost my place reading through the patches, there is some code that specifically marked either paravirtual or HVM Xen as unaffected.&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Invest in popcorn, 2018 is going to be fun&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;It’s totally possible this guess is miles off reality, but one thing is for sure, it’s going to be an exciting few weeks when whatever this thing is published.&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 16:27:42 +0000</pubDate>
<dc:creator>KirinDave</dc:creator>
<og:title>The mysterious case of the Linux Page Table Isolation patches</og:title>
<og:url>http://pythonsweetness.tumblr.com/post/169166980422/the-mysterious-case-of-the-linux-page-table</og:url>
<og:description>[Various errors and updates are addressed in Quiet in the peanut gallery] tl;dr: there is presently an embargoed security bug impacting apparently all contemporary CPU architectures that implement...</og:description>
<og:type>tumblr-feed:entry</og:type>
<og:image>http://78.media.tumblr.com/1c80c45e14c1e676b35cdd89cc9b557c/tumblr_inline_p1untxZBBD1rkm8fh_540.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://pythonsweetness.tumblr.com/post/169166980422/the-mysterious-case-of-the-linux-page-table</dc:identifier>
</item>
<item>
<title>Zero-Width Characters: Invisibly fingerprinting text</title>
<link>https://www.zachaysan.com/writing/2017-12-30-zero-width-characters</link>
<guid isPermaLink="true" >https://www.zachaysan.com/writing/2017-12-30-zero-width-characters</guid>
<description>&lt;header readability=&quot;2&quot;&gt;
&lt;p&gt;Invisibly fingerprinting text&lt;/p&gt;
&lt;/header&gt;&lt;p&gt;&lt;strong&gt;Journalists watch out—you may be unintentionally revealing sources.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In early 2016 I realized that it was possible to use zero-width characters, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Zero-width_non-joiner&quot;&gt;zero-width non-joiner&lt;/a&gt; or other zero-width characters like the &lt;a href=&quot;https://en.wikipedia.org/wiki/Zero-width_space&quot;&gt;zero-width space&lt;/a&gt; to fingerprint text. Even with just a single type of zero-width character the presence or non-presence of the non-visible character is enough bits to fingerprint even the shortest text.&lt;/p&gt;
&lt;p&gt;We're​ not the​ same text, even though we look the same.&lt;/p&gt;
&lt;p&gt;We're not the same​ text, even though we look the same.&lt;/p&gt;
&lt;p&gt;Unlike previous text fingerprinting techniques, zero-width characters are not removed when formatting is removed from text. They're often not even visible in contexts where software experts would expect them to be, like on a programming terminal.&lt;/p&gt;
&lt;p&gt;I also realized that it is possible to use &lt;a href=&quot;https://en.wikipedia.org/wiki/Homoglyph&quot;&gt;homoglyph&lt;/a&gt; substitution (e.g., replacing the letter &quot;a&quot; with its Cyrillic counterpart, &quot;а&quot;), but I dismissed this as too easy to detect due to the differences in character rendering across fonts and systems. However, differences in dashes (en, em, and hyphens), quotes (straight vs curly), word spelling (color vs colour), and the number of spaces after sentence endings could probably go undetected due to their frequent use in real text.&lt;/p&gt;
&lt;p&gt;With increased effort, synonyms (huge vs large vs massive) can also be used, though it would require some manual setup because words lack single definitions (due to homonyms) and in some contexts would be easier to detect since differing word lengths may cause sentences to wrap differently across documents.&lt;/p&gt;
&lt;p&gt;Countermeasures for journalists or others engaged with leakers, in decreasing order of effectiveness:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Avoid releasing excerpts and raw documents.&lt;/li&gt;
&lt;li&gt;Get the same documents from multiple leakers to ensure they have the exact same content on a byte-by-byte level.&lt;/li&gt;
&lt;li&gt;Manually retype excerpts to avoid invisible characters and homoglyphs.&lt;/li&gt;
&lt;li&gt;Keep excerpts short to limit the amount of information shared.&lt;/li&gt;
&lt;li&gt;Use a tool that strips non-whitelisted characters from text before sharing it with others.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;After discovering these techniques I shared them with some friends to try to help track down a cyber criminal which they thought might be an insider threat (it wasn't, it was just a normal blackhat hacker). Then the White House started leaking like an old hose, so I continued to keep quiet. The reason I'm writing about this now is that it appears both &lt;a href=&quot;https://www.researchgate.net/publication/308044170&quot;&gt;homoglyph substitution&lt;/a&gt; and &lt;a href=&quot;http://blog.fastforwardlabs.com/2017/06/23/fingerprinting-documents-with-steganography.html&quot;&gt;zero-width fingerprinting&lt;/a&gt; have been discovered by others, so journalists should be informed of the existence of these techniques.&lt;/p&gt;
&lt;p&gt;If your news organization has a pre-existing trove of documents it should be fairly straightforward to scan them for zero-width characters or mixed character encodings. Detecting synonym substitution would require multiple documents and some custom code, but should be fairly straightforward for an intermediately skilled data scientist or software developer with some time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update: &lt;a href=&quot;https://www.zachaysan.com/writing/2018-01-01-fingerprinting-update&quot;&gt;Subsequent article&lt;/a&gt; based on reader feedback and other comments.&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 01 Jan 2018 15:17:59 +0000</pubDate>
<dc:creator>based2</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.zachaysan.com/writing/2017-12-30-zero-width-characters</dc:identifier>
</item>
<item>
<title>Ask HN: What’s your favorite talk from 2017?</title>
<link>https://news.ycombinator.com/item?id=16045859</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=16045859</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;16046184&quot; readability=&quot;8.4509466437177&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2254733218589&quot;&gt;&lt;tr readability=&quot;8.4509466437177&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.605851979346&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16050094&quot; readability=&quot;7.7988721804511&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8994360902256&quot;&gt;&lt;tr readability=&quot;7.7988721804511&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.4661654135338&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046345&quot; readability=&quot;2.5251798561151&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2625899280576&quot;&gt;&lt;tr readability=&quot;2.5251798561151&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046509&quot; readability=&quot;2.4375&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.21875&quot;&gt;&lt;tr readability=&quot;2.4375&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046927&quot; readability=&quot;4.4467213114754&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2233606557377&quot;&gt;&lt;tr readability=&quot;4.4467213114754&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.4467213114754&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048233&quot; readability=&quot;7.5555555555556&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7777777777778&quot;&gt;&lt;tr readability=&quot;7.5555555555556&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.0833333333333&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048575&quot; readability=&quot;5.1964285714286&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.5982142857143&quot;&gt;&lt;tr readability=&quot;5.1964285714286&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.8973214285714&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049666&quot; readability=&quot;6.4056603773585&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2028301886792&quot;&gt;&lt;tr readability=&quot;6.4056603773585&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16052256&quot; readability=&quot;6.4789081885856&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2394540942928&quot;&gt;&lt;tr readability=&quot;6.4789081885856&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.6277915632754&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049389&quot; readability=&quot;3.9285714285714&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049792&quot; readability=&quot;6.5290519877676&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2645259938838&quot;&gt;&lt;tr readability=&quot;6.5290519877676&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.7308868501529&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16050592&quot; readability=&quot;1.4561403508772&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046270&quot; readability=&quot;2.6413043478261&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.320652173913&quot;&gt;&lt;tr readability=&quot;2.6413043478261&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.5217391304348&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046503&quot; readability=&quot;3.3414634146341&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6707317073171&quot;&gt;&lt;tr readability=&quot;3.3414634146341&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048651&quot; readability=&quot;5.256880733945&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6284403669725&quot;&gt;&lt;tr readability=&quot;5.256880733945&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046638&quot; readability=&quot;0.59459459459459&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046815&quot; readability=&quot;15.697656840514&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.848828420257&quot;&gt;&lt;tr readability=&quot;15.697656840514&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.169312169312&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047792&quot; readability=&quot;16.609350237718&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.304675118859&quot;&gt;&lt;tr readability=&quot;16.609350237718&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.724247226624&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047656&quot; readability=&quot;16.738891936369&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.3694459681843&quot;&gt;&lt;tr readability=&quot;16.738891936369&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.292649478881&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046949&quot; readability=&quot;5.0883977900552&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.5441988950276&quot;&gt;&lt;tr readability=&quot;5.0883977900552&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.3922651933702&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047519&quot; readability=&quot;5.6658227848101&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8329113924051&quot;&gt;&lt;tr readability=&quot;5.6658227848101&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.1936708860759&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049247&quot; readability=&quot;0.94915254237288&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049632&quot; readability=&quot;4.5045045045045&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2522522522523&quot;&gt;&lt;tr readability=&quot;4.5045045045045&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.5045045045045&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16052513&quot; readability=&quot;1.6444444444444&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;0.82222222222222&quot;&gt;&lt;tr readability=&quot;1.6444444444444&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;240&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046680&quot; readability=&quot;5.3035714285714&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6517857142857&quot;&gt;&lt;tr readability=&quot;5.3035714285714&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.5357142857143&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047463&quot; readability=&quot;9.4346978557505&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7173489278752&quot;&gt;&lt;tr readability=&quot;9.4346978557505&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.5769980506823&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047907&quot; readability=&quot;15.668508287293&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.8342541436464&quot;&gt;&lt;tr readability=&quot;15.668508287293&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.116712707182&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048456&quot; readability=&quot;1.25&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047526&quot; readability=&quot;3.4378378378378&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7189189189189&quot;&gt;&lt;tr readability=&quot;3.4378378378378&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.4378378378378&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048087&quot; readability=&quot;2.3125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr coll&quot; id=&quot;16047430&quot; readability=&quot;0.59459459459459&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047571&quot; readability=&quot;8.6666666666667&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.3333333333333&quot;&gt;&lt;tr readability=&quot;8.6666666666667&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.1851851851852&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049391&quot; readability=&quot;4.8014184397163&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.4007092198582&quot;&gt;&lt;tr readability=&quot;4.8014184397163&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.043262411348&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049585&quot; readability=&quot;7.5714285714286&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7857142857143&quot;&gt;&lt;tr readability=&quot;7.5714285714286&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;240&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049276&quot; readability=&quot;2.3309352517986&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049608&quot; readability=&quot;2.5909090909091&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2954545454545&quot;&gt;&lt;tr readability=&quot;2.5909090909091&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;240&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.4545454545455&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048379&quot; readability=&quot;6.5320855614973&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2660427807487&quot;&gt;&lt;tr readability=&quot;6.5320855614973&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.5989304812834&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047921&quot; readability=&quot;3.2405063291139&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.620253164557&quot;&gt;&lt;tr readability=&quot;3.2405063291139&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.2405063291139&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047402&quot; readability=&quot;16.817439862543&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.4087199312715&quot;&gt;&lt;tr readability=&quot;16.817439862543&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.763745704467&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049347&quot; readability=&quot;3.6028368794326&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8014184397163&quot;&gt;&lt;tr readability=&quot;3.6028368794326&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.4042553191489&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046973&quot; readability=&quot;2.6826347305389&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047512&quot; readability=&quot;8.46138996139&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.230694980695&quot;&gt;&lt;tr readability=&quot;8.46138996139&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.6409266409266&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047976&quot; readability=&quot;6.5093457943925&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2546728971963&quot;&gt;&lt;tr readability=&quot;6.5093457943925&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.1144859813084&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048418&quot; readability=&quot;5.824427480916&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.912213740458&quot;&gt;&lt;tr readability=&quot;5.824427480916&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6564885496183&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047544&quot; readability=&quot;4.9471458773784&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.4735729386892&quot;&gt;&lt;tr readability=&quot;4.9471458773784&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.7103594080338&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047605&quot; readability=&quot;3.5229357798165&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7614678899083&quot;&gt;&lt;tr readability=&quot;3.5229357798165&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.5229357798165&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047814&quot; readability=&quot;2.5508982035928&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2754491017964&quot;&gt;&lt;tr readability=&quot;2.5508982035928&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16049016&quot; readability=&quot;32.841437632135&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;16.420718816068&quot;&gt;&lt;tr readability=&quot;32.841437632135&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;40.305400730348&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;54.946921443737&quot;&gt;&lt;span class=&quot;c00&quot;&gt;That comment/subdiscussion you're linking to on the subreddit seems like a pretty good examination of the relationship that's developed between him and the alt-right. Or at least part of one.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But I'm puzzled by the statement that the comment you're responding to accurately describes Peterson's views on race. Except maybe in narrow categories that don't match up particularly well with a broad conception like &quot;race&quot; (e.g., Ashkenazi Jews), I can't recall any instances of him asserting a correlation between race and IQ, though it's possible I've missed something, and I'm open to visiting anything you might want to point out.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;And I also think that it's a mistake to boil the alt-right relationship down to race issues. I think it starts elsewhere. In addition to the points in that reddit discussion, I think there's a fundamental shared narrative that goes something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&quot;Some (or all!) of the people and institutions that make up society are hostile to people speaking the truth freely. Maybe even more hostile to it than they were in the past. They are hostile to it because they are weak and corrupt and tyrannical. But it's important thing for people to speak up anyway.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Peterson &lt;em&gt;absolutely&lt;/em&gt; says this, repeatedly and quite clearly. And it resonates, because most people probably &lt;em&gt;have&lt;/em&gt; been in situations where they've faced hostility and even retaliation for saying something that others didn't like.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;And I think if you pressed Peterson, he would probably say that this narrative is part of the human condition, and the reason why he frames the problem as people being weak and corrupt and tyrannical is that it's a known failure mode for pretty much all of humanity and it's probably true in some degree inside every single human being. And it's important to speak up anyway not necessarily because you are the sole promethean bearer of The Truth, but because &lt;em&gt;nobody&lt;/em&gt; is the lone possessor of the truth and we will likely do better at working things out if we have conversations and negotiate. I think this line of argument has some limits that I'm not sure are sufficiently explored, but it's a pretty compelling one based on my own introspection and observation of humans, though I also find that the degree of &quot;corrupt&quot;ness in the hypothetical human you're dealing with matters &lt;em&gt;a lot&lt;/em&gt;, and I also think Peterson may underestimate the downside of using language like &quot;weak and corrupt and tyrannical&quot; because it invites contempt into the understanding of the situation and that usually doesn't make things better.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But for some segments of the right (among other people), I think this narrative often goes farther. It is not a description of part of what it's like to exist as a human among other humans, it is part of repeated liturgy about the problem of being a conservative in a society besieged by malevolent political opposition. It says that conservatives in particular are unjustly singled out for this kind of treatment, and that it's much more often because of bias rather than any flaws in their own position, and that the weak and corrupt and tyrannical people are Marxists who want a totalitarian state, and what you have to say is not only important because the process of dialogue helps with synthesis but it's important because it's the Capital-RT Real Truth whose only flaw is that too many people aren't brave or strong enough to look it in the eye and understand it, and the only hope is that you repeat it often and strongly enough without being seduced.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;(And again, the right is hardly the only segment of humanity that starts to think like this, but I don't think there's any credible argument that this narrative isn't deeply embedded in current political conservatism in the US.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Now, I happen to think that there's an important distinction between the former and the latter formation of this narrative. But no matter how nuanced someone is being, if you lower the resolution at which you're &lt;em&gt;listening&lt;/em&gt; to someone present both, you might not be able to tell the difference. One could imagine that someone who can't tell the difference between &quot;IQ matters and has a genetic component&quot; and &quot;you can make sensible generalizations about a person's IQ by race (and we should!)&quot; might have precisely that problem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;And though I think JBP tends to be nuanced and I &lt;em&gt;try&lt;/em&gt; to pay attention to that... frankly, there are times when &lt;em&gt;I&lt;/em&gt; can't tell the difference between the former and the latter (which seems weird to me considering how widely prevalent and accepted many conservative ideas among my social circle and in the institutions I tend to participate in. But then again, I don't work at a University, and I grew up in a conservative state and am part of a religious subculture, and so most of the time when I'm facing an uphill battle in a discussion it's quite the opposite).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;So I think that's where the love-in begins. It probably also helps that JBP defends the value and message of traditional religious stories and focuses quite a bit on personal responsibility (perhaps as contrasted with state measures) and the merits of conscientiousness and bringing order into the world -- all things that are likely to resonate with conservatives. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048179&quot; readability=&quot;20.521562245728&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;10.260781122864&quot;&gt;&lt;tr readability=&quot;20.521562245728&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;20.521562245728&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048364&quot; readability=&quot;0.59459459459459&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048611&quot; readability=&quot;6.5893333333333&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2946666666667&quot;&gt;&lt;tr readability=&quot;6.5893333333333&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.236&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046696&quot; readability=&quot;1.0384615384615&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047143&quot; readability=&quot;6.5058823529412&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2529411764706&quot;&gt;&lt;tr readability=&quot;6.5058823529412&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047414&quot; readability=&quot;3.5838926174497&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7919463087248&quot;&gt;&lt;tr readability=&quot;3.5838926174497&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.4798657718121&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047701&quot; readability=&quot;2.2432432432432&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047105&quot; readability=&quot;3.468085106383&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7340425531915&quot;&gt;&lt;tr readability=&quot;3.468085106383&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046382&quot; readability=&quot;5.2699619771863&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046938&quot; readability=&quot;0.88888888888889&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046222&quot; readability=&quot;3.0136054421769&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046251&quot; readability=&quot;2.9271523178808&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046435&quot; readability=&quot;2.5789473684211&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046576&quot; readability=&quot;2.0666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046070&quot; readability=&quot;5.4499121265378&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046321&quot; readability=&quot;3.1967213114754&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046223&quot; readability=&quot;1.8589211618257&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047296&quot; readability=&quot;2.2615384615385&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046464&quot; readability=&quot;10.095238095238&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.047619047619&quot;&gt;&lt;tr readability=&quot;10.095238095238&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.8888888888889&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046190&quot; readability=&quot;1.8171428571429&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046119&quot; readability=&quot;2.5389221556886&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046659&quot; readability=&quot;4.5205479452055&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2602739726027&quot;&gt;&lt;tr readability=&quot;4.5205479452055&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046384&quot; readability=&quot;2.7089947089947&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046669&quot; readability=&quot;2.8510638297872&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047806&quot; readability=&quot;2.8051948051948&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046342&quot; readability=&quot;4.2266666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046810&quot; readability=&quot;2.325&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047826&quot; readability=&quot;1.3076923076923&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048127&quot; readability=&quot;8.0675675675676&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.0337837837838&quot;&gt;&lt;tr readability=&quot;8.0675675675676&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.722972972973&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046334&quot; readability=&quot;1.4390243902439&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047624&quot; readability=&quot;2.4933687002653&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046239&quot; readability=&quot;0.86440677966102&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047821&quot; readability=&quot;12.286396181384&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.1431980906921&quot;&gt;&lt;tr readability=&quot;12.286396181384&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.7804295942721&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046115&quot; readability=&quot;0.95798319327731&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046206&quot; readability=&quot;6.1551724137931&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.0775862068966&quot;&gt;&lt;tr readability=&quot;6.1551724137931&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046326&quot; readability=&quot;5.8848758465011&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.9424379232506&quot;&gt;&lt;tr readability=&quot;5.8848758465011&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.3177200902935&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046798&quot; readability=&quot;3.344262295082&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.672131147541&quot;&gt;&lt;tr readability=&quot;3.344262295082&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047532&quot; readability=&quot;4.2056074766355&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048213&quot; readability=&quot;1.7687861271676&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046906&quot; readability=&quot;2.0853658536585&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047589&quot; readability=&quot;1.71875&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048371&quot; readability=&quot;6.3949044585987&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046031&quot; readability=&quot;1.7424242424242&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046147&quot; readability=&quot;3.6190476190476&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8095238095238&quot;&gt;&lt;tr readability=&quot;3.6190476190476&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16048835&quot; readability=&quot;1.7542372881356&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046909&quot; readability=&quot;2.5396825396825&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047076&quot; readability=&quot;1.5759493670886&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047126&quot; readability=&quot;3.5708812260536&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7854406130268&quot;&gt;&lt;tr readability=&quot;3.5708812260536&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16046120&quot; readability=&quot;1.7612903225806&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;16047724&quot; readability=&quot;14.287322564856&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.1436612824278&quot;&gt;&lt;tr readability=&quot;14.287322564856&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;21.010768477729&quot;&gt;

&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Mon, 01 Jan 2018 12:43:04 +0000</pubDate>
<dc:creator>dev_256</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=16045859</dc:identifier>
</item>
<item>
<title>What Could Have Entered the Public Domain on January 1, 2018</title>
<link>https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/</link>
<guid isPermaLink="true" >https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/</guid>
<description>

&lt;h2&gt;What &lt;em&gt;Could&lt;/em&gt; Have Entered the Public Domain on January 1, 2018?&lt;/h2&gt;
&lt;h3&gt;Under the law that existed until 1978 . . . Works from 1961 &lt;span class=&quot;c1&quot;&gt;      &lt;a class=&quot;twitter-share-button&quot; href=&quot;https://twitter.com/share&quot;&gt;Tweet&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&quot;Illustration of works that could have entered the public domain on January 1, 2018&quot; src=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/2018whatmighthave.png&quot; /&gt;&lt;/p&gt;
&lt;h5 class=&quot;green&quot;&gt;The books &lt;em&gt;Catch-22&lt;/em&gt;, &lt;em&gt;Stranger in a Strange Land&lt;/em&gt;, and &lt;em&gt;The Phantom Tollbooth&lt;/em&gt;, the films &lt;em&gt;Breakfast at Tiffany’s&lt;/em&gt; and &lt;em&gt;West Side Story&lt;/em&gt;, and more. . .&lt;/h5&gt;
&lt;p&gt;Current US law extends copyright for 70 years after the date of the author's death, and corporate “works-for-hire” are copyrighted for 95 years after publication. But prior to the 1976 Copyright Act (which became effective in 1978), the maximum copyright term was 56 years—an initial term of 28 years, renewable for another 28 years. Under those laws, works published in 1961 would enter the public domain on January 1, 2018, where they would be “free as the air to common use.” Under current copyright law, we’ll have to wait until &lt;em&gt;&lt;strong&gt;2057&lt;/strong&gt;&lt;/em&gt;.&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn1text&quot;&gt;1&lt;/a&gt; And no published works will enter our public domain until 2019. The laws in other countries are different—&lt;a href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/&quot; target=&quot;_blank&quot;&gt;thousands of works are entering the public domain in Canada and the EU on January 1&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;green&quot;&gt;Catch-2057&lt;/h3&gt;
&lt;p&gt;What books would be entering the public domain if we had the pre-1978 copyright laws? You might recognize some of the titles below.&lt;/p&gt;
&lt;div class=&quot;bookcontainer&quot; id=&quot;bookcontainer&quot;&gt;

&lt;div class=&quot;booklist&quot; id=&quot;booklist&quot;&gt;
&lt;ul class=&quot;c2&quot;&gt;&lt;li&gt;Joseph Heller, &lt;span class=&quot;colortitles&quot;&gt;Catch-22&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Walker Percy, &lt;span class=&quot;colortitles&quot;&gt;The Moviegoer&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;J.D. Salinger, &lt;span class=&quot;colortitles&quot;&gt;Franny and Zooey&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;John Howard Griffin, &lt;span class=&quot;colortitles&quot;&gt;Black Like Me&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Irving Stone, &lt;span class=&quot;colortitles&quot;&gt;The Agony and the Ecstasy&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Muriel Spark, &lt;span class=&quot;colortitles&quot;&gt;The Prime of Miss Jean Brodie&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Robert A. Heinlein, &lt;span class=&quot;colortitles&quot;&gt;Stranger in a Strange Land&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;William S. Burroughs, &lt;span class=&quot;colortitles&quot;&gt;The Soft Machine&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Norton Juster, &lt;span class=&quot;colortitles&quot;&gt;The Phantom Tollbooth&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Roald Dahl, &lt;span class=&quot;colortitles&quot;&gt;James and the Giant Peach&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;rightimagecaption&quot; readability=&quot;9.9240506329114&quot;&gt;&lt;img src=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/bh-526-burroughs-15-1200.jpg&quot; /&gt;&lt;br /&gt;Taking remix to another level, Burroughs wrote &lt;em&gt;The Soft Machine&lt;/em&gt; using the &quot;cut-up technique,&quot; where existing text is cut up and rearranged to create a new work. (Image from BOO-HOORAY's exhibit &lt;a href=&quot;http://www.boo-hooray.com/cut-up-william-s-burroughs/&quot; target=&quot;_blank&quot;&gt;Cut-Ups: William S. Burroughs 1914–2014&lt;/a&gt;.)&lt;/div&gt;
&lt;p&gt;What a trove of books! They are but a fraction of what would be entering the public domain on January 1. Imagine them being freely available to students and educators around the world—many of the themes in these books certainly resonate today.&lt;/p&gt;
&lt;p&gt;You would be free to use these books for theater, or make them into a film. You could translate them into other languages, or create accessible Braille or audio versions.&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn2text&quot;&gt;2&lt;/a&gt; You could read them online or buy cheaper print editions, because others were free to republish them. Empirical studies have shown that public domain books are less expensive, available in more editions and formats, and more likely to be in print—see &lt;a href=&quot;http://www.minnesotalawreview.org/articles/property-rights-efficient-exploitation-copyrighted-works-empirical-analysis-public-domain-copyrighted-fiction-bestsellers/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2130008&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, and &lt;a href=&quot;http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2290181&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Imagine a digital Library of Alexandria containing all of the world’s books from 1961 and earlier, where, thanks to technology, you can search, link, annotate, copy and paste. (Google Books has brought us closer to this reality, but for copyrighted books where there is no separate agreement with the copyright holder, it only shows three short snippets, not the whole book.) &lt;span class=&quot;colortitles&quot;&gt;Instead of seeing these literary works enter the public domain in 2018, we will have to wait until 2057.&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;green&quot;&gt;The Copyright Trap&lt;/h3&gt;
&lt;p&gt;Consider the films from 1961 that would have become available this year. You could share clips with friends or incorporate them into fan fiction. Community theaters could show the full features. Libraries and archivists would be free to digitize and preserve them. Here are a few of the movies that we won’t see in the public domain for another 39 years.&lt;/p&gt;
&lt;div class=&quot;moviecontainer&quot; id=&quot;moviecontainer&quot;&gt;

&lt;div class=&quot;movielist&quot; id=&quot;movielist&quot;&gt;
&lt;ul class=&quot;c2&quot;&gt;&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;Breakfast at Tiffany’s&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;West Side Story&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;The Guns of Navarone&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;A Raisin in the Sun&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;The Parent Trap&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;Splendor in the Grass&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;Judgment at Nuremberg&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;The Misfits&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;colortitles&quot;&gt;The Hustler&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img alt=&quot;West Side Story: 'America'&quot; src=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/westsidestory_americabox2.png&quot; /&gt; If these films were in the public domain, you could use them in your own works, just as they used earlier works in theirs. &lt;em&gt;West Side Story&lt;/em&gt; (music by Leonard Bernstein, lyrics by Stephen Sondheim, book by Arthur Laurents) was free to draw upon &lt;em&gt;Romeo and Juliet&lt;/em&gt; because Shakespeare’s work was in the public domain. And as Judge Richard Posner observed, if the underlying works were copyrighted, “&lt;em&gt;Romeo and Juliet&lt;/em&gt; itself would have infringed Arthur Brooke’s &lt;em&gt;The Tragicall Historye of Romeo and Juliet&lt;/em&gt; . . . which in turn would have infringed several earlier &lt;em&gt;Romeo and Juliets&lt;/em&gt;, all of which probably would have infringed Ovid’s story of &lt;em&gt;Pyramus and Thisbe&lt;/em&gt;.” One work inspires another. That is how the public domain feeds creativity.&lt;/p&gt;
&lt;p&gt;The films above are famous, so thanks to projects like the &lt;a href=&quot;http://www.loc.gov/programs/national-film-preservation-board/about-this-program&quot; target=&quot;_blank&quot;&gt;National Film Registry&lt;/a&gt;, we’re not likely to lose them entirely. The true tragedy is that of forgotten films that are &lt;a href=&quot;https://law.duke.edu/cspd/pdf/cspdorphanfilm.pdf&quot; target=&quot;_blank&quot;&gt;literally disintegrating while preservationists wait for their copyright terms to expire&lt;/a&gt;.&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn3text&quot;&gt;3&lt;/a&gt;&lt;/p&gt;
&lt;h3 class=&quot;green&quot;&gt;Let’s Twist Again . . . Like We Did 56 Years Ago&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/chubby-checkers_lets-twist-again_headline.png&quot; /&gt;What 1961 music could you have used without fear of a lawsuit? If you wanted to find guitar tabs or sheet music and freely use some of the influential music from 1961, January 1 2018 would have been a rocking day for you under earlier copyright laws. Patsy Cline’s classic &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;Crazy&lt;/em&gt;&lt;/span&gt; (Willie Nelson) would be available. So would &lt;span class=&quot;colortitles&quot;&gt;Stand By Me&lt;/span&gt; (Ben E. King, Jerry Leiber, Mike Stoller), &lt;span class=&quot;colortitles&quot;&gt;Runaway&lt;/span&gt; (Del Shannon, Max Crook), and &lt;span class=&quot;colortitles&quot;&gt;Let’s Twist Again&lt;/span&gt; (Kal Mann, Dave Appell). You could publicly perform or set short films to &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;Surfin'&lt;/em&gt;&lt;/span&gt; (Brian Wilson, Mike Love) or &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;Crying&lt;/em&gt;&lt;/span&gt; (Roy Orbison, Joe Melson), all without permission or fee. Today these musical works remain copyrighted until 2057.&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn4text&quot;&gt;4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/elvissinging.png&quot; /&gt;Like &lt;em&gt;West Side Story&lt;/em&gt;, some of the hit songs from 1961 borrowed from earlier works. Elvis Presley’s &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;Surrender&lt;/em&gt;&lt;/span&gt; (Doc Pomus, Mort Shuman) was adapted from the 1902 Neapolitan ballad &quot;Torna a Surriento&quot; (Ernesto and Giambattista de Curtis), and his &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;Can’t Help Falling in Love&lt;/em&gt;&lt;/span&gt; (Hugo Peretti, Luigi Creatore, George David Weiss) is derived from the 1784 French song &quot;Plaisir d’amour&quot; (Jean-Paul-Égide Martini). (&lt;a href=&quot;https://law.duke.edu/musiccomic/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;To read more about the rich history of borrowing in music, see our free comic book!&lt;/span&gt;&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;For art lovers, 1961 also featured works such as Roy Lichtenstein’s &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;Look Mickey!&lt;/em&gt;&lt;/span&gt;,&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn5text&quot;&gt;5&lt;/a&gt; a pop culture commentary based on an image from Disney’s &lt;em&gt;Donald Duck: Lost and Found&lt;/em&gt;. Lichtenstein was not sued for copyright infringement, but today’s Lichtenstein might very well face a lawsuit. Until works enter the public domain, an artist wanting to legally reuse them as Lichtenstein did would have to rely on “fair use,” a doctrine that allows uses of copyrighted expression for purposes including commentary and criticism. Fair use is a valuable exception, but its application can be complex and unpredictable in practice. It’s unclear whether &lt;em&gt;Look Mickey!&lt;/em&gt; would be protected by fair use. (&lt;a href=&quot;https://law.duke.edu/cspd/comics/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;To learn more about fair use, you can read our comic book on the subject, &lt;em&gt;Bound By Law&lt;/em&gt;, here.&lt;/span&gt;&lt;/a&gt;)&lt;/p&gt;
&lt;h3 class=&quot;green&quot;&gt;Science from 1961—copyrighted research, still behind paywalls&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&quot;Aliens: Humans have been searching for us! Cool! How do we contact them? ... I don't know, these articles are behind paywalls.&quot; src=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/contacting-earth.png&quot; /&gt;1961 was another noteworthy year for science, including foundational developments in the search for extraterrestrial intelligence (SETI). Frank Drake developed the &lt;a href=&quot;https://en.wikipedia.org/wiki/Drake_equation&quot; target=&quot;_blank&quot;&gt;Drake equation&lt;/a&gt; for estimating the likelihood of finding extraterrestrial civilizations in the Milky Way. And while other researchers were focused on detecting alien communication via radio signals, Charles H. Townes and R.N. Schwartz suggested that aliens might also communicate using optical masers in their article “&lt;a href=&quot;https://www.nature.com/articles/190205a0.pdf&quot; target=&quot;_blank&quot;&gt;Interstellar and Interplanetary Communication by Optical Masers&lt;/a&gt;,” published in the journal &lt;em&gt;Nature&lt;/em&gt;. But if you want to read that article, and you do not have a subscription or institutional access, you will encounter a paywall. The same is true for other articles from the same issue of &lt;em&gt;Nature&lt;/em&gt; such as “&lt;a href=&quot;https://www.nature.com/articles/190224a0&quot; target=&quot;_blank&quot;&gt;Dynamics and Energetics of Swimming in Water-Beetles&lt;/a&gt;” or “&lt;a href=&quot;https://www.nature.com/articles/190225a0&quot; target=&quot;_blank&quot;&gt;Cosmic Ray Ages of the Treysa and Sikhote–Alin Meteorites&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;A distressing number of scientific articles from 1961 require payment or a subscription or account, including those in major journals such as &lt;a href=&quot;http://science.sciencemag.org/content/by/year/1961&quot; target=&quot;_blank&quot;&gt;Science&lt;/a&gt; and &lt;a href=&quot;https://jamanetwork.com/journals/jama/issue/175/1&quot; target=&quot;_blank&quot;&gt;JAMA&lt;/a&gt;,&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn6text&quot;&gt;6&lt;/a&gt; both of which charge &lt;span class=&quot;colortitles&quot;&gt;&lt;em&gt;$30&lt;/em&gt; to view a single article from 1961 for 24 hours&lt;/span&gt;. &lt;span&gt;Want to read a 1961 article about graduate medical education? Here's the &lt;/span&gt;&lt;a href=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/jama_graduate-education.png&quot; onclick=&quot;window.open(this.href, 'JAMAGraduateEducationPaymentPage', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=934,height=623'); return false;&quot;&gt;payment page&lt;/a&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;Want to read “An Experiment in the History of Science: With a simple but ingenious device Galileo could obtain relatively precise time measurements”? If you go to&lt;/span&gt; &lt;em&gt;Science&lt;/em&gt;&lt;span&gt;’s&lt;/span&gt; &lt;a href=&quot;https://law.duke.edu/sites/default/files/images/centers/cspd/magazine_sciencepaywall1.png&quot; onclick=&quot;window.open(this.href, 'SciencePaymentWindow', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=934,height=575'); return false;&quot;&gt;&lt;span&gt;page to purchase digital access&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, you will see that you can purchase access for 1 day for $30 US—but that’s not all. You also have to agree to the following restrictions and conditions: “You may view, download, and/or print the article for your personal scholarly, research, and educational use” but may not distribute or post it, and you must agree both to accept cookies and be contacted from time to time about the publisher’s products.&lt;/span&gt; &lt;span&gt;Of course, many scientists will have institutional access to these journals, but this access is not guaranteed—even institutions such as Harvard have considered canceling their subscriptions because they &lt;/span&gt;&lt;a href=&quot;http://www.theguardian.com/science/2012/apr/24/harvard-university-journal-publishers-prices&quot; target=&quot;_blank&quot;&gt;could no longer afford the escalating prices of major journal subscriptions&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;It’s remarkable to find scientific research from 1961 hidden behind publisher paywalls. Thankfully, some publishers have made older articles available in full online, so that you can read them, even though it may still be illegal to copy and distribute them. In addition, some older articles have been made available on third party websites, but this is not a stable solution for providing reliable access to science. Third party postings can be difficult to find or taken down, links can get broken, and would-be posters may be deterred by the risk of a lawsuit. Under the pre-1978 copyright term, all of this history would be free to scholars, students, and enthusiasts.&lt;/p&gt;
&lt;p&gt;Not all scientific publishers work under this kind of copyright scheme. “Open Access” scientific publications, like those of the &lt;a href=&quot;http://www.plos.org/&quot; target=&quot;_blank&quot;&gt;Public Library of Science&lt;/a&gt;, are under &lt;a href=&quot;http://creativecommons.org/&quot; target=&quot;_blank&quot;&gt;Creative Commons&lt;/a&gt; licenses, meaning that they can be copied freely from the day they are published.&lt;/p&gt;
&lt;h3 class=&quot;green&quot;&gt;Works from 1989!&lt;/h3&gt;
&lt;p&gt;Most of the works highlighted here are famous—that is why we included them. And if that fame meant that the work was still being exploited commercially 28 years after its publication, the rights holders would probably renew the copyright. But we know from empirical studies that 85% of authors did not renew their copyrights (for books, the number is even higher—93% did not renew), since most works exhaust their commercial value very quickly.&lt;/p&gt;
&lt;p class=&quot;pquote2&quot;&gt;Under the law that existed until 1978 . . . Up to 85% of all copyrighted works from 1989 might have been entering the public domain on January 1, 2018.&lt;/p&gt;
&lt;p&gt;That means that all of these examples from 1961 are only the tip of the iceberg. If the pre-1978 laws were still in effect, we could have seen 85% of the works published in 1989 enter the public domain on January 1, 2018. Imagine what that would mean to our archives, our libraries, our schools and our culture. Such works could be digitized, preserved, and made available for education, for research, for future creators. Instead, they will remain under copyright for decades to come, perhaps even into the next century.&lt;/p&gt;
&lt;p&gt;Perhaps the most troubling aspect of the current copyright term is that in most cases, the cultural harm is not offset by any benefit to an author or rights holder. Unlike the famous works highlighted here, the vast majority of works from 1961 do not retain commercial value,&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn7text&quot;&gt;7&lt;/a&gt; but they are off limits to users who do not want to risk a copyright lawsuit. This means that &lt;em&gt;&lt;strong&gt;no one&lt;/strong&gt; is benefiting from continued copyright, while the works remain both commercially unavailable and culturally off limits. The public loses the possibility of meaningful access for no good reason.&lt;/em&gt; You can read more about the current costs associated with &lt;a href=&quot;https://law.duke.edu/cspd/orphanworks/&quot; target=&quot;_blank&quot;&gt;orphan works&lt;/a&gt;—works that are still presumably under copyright, but with no identifiable or locatable copyright holder—&lt;a href=&quot;http://chronicle.com/article/Out-of-Fear-Institutions-Lock/127701/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.abajournal.com/magazine/article/a_trove_of_historic_jazz_recordings_has_found_a_home_in_harlem_but_you_cant&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Importantly, the US Copyright Office has been engaged in &lt;a href=&quot;http://www.copyright.gov/orphan/&quot; target=&quot;_blank&quot;&gt;efforts to find solutions to the orphan works problem.&lt;/a&gt; However, unlike other countries, the US has not enacted any such solutions.&lt;/p&gt;
&lt;hr /&gt;&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn1ref&quot;&gt;1&lt;/a&gt; The copyright term for works published between 1950 and 1963 was extended to 95 years from the date of publication, so long as the works were published with a copyright notice and the term renewed (which is generally the case with famous works such as those we are highlighting).&lt;br /&gt;     Many works published in 1961 are already in the public domain because the copyright holder did not comply with notice, renewal, or other copyright formalities. However, tracking down this information can be difficult (you can read just one of many illustrative examples collected by the Copyright Office &lt;a href=&quot;http://www.copyright.gov/orphan/comments/OW0676-AHA.pdf&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;). Therefore, users often have to presume these works are copyrighted or risk a lawsuit (only works published before 1923 are conclusively in the public domain). You can read more about copyright terms from this excellent &lt;a href=&quot;http://copyright.cornell.edu/resources/publicdomain.cfm&quot; target=&quot;_blank&quot;&gt;chart&lt;/a&gt; and from the US Copyright Office’s &lt;a href=&quot;http://www.copyright.gov/circs/circ15a.pdf&quot; target=&quot;_blank&quot;&gt;guide&lt;/a&gt;.&lt;br /&gt;     It is also difficult to determine whether foreign works are in the public domain in the U.S. Generally speaking, as a result of international agreements, foreign works published after 1923 are still under copyright in the US as long as one of the following is true: they were published in compliance with US formalities, they were still copyrighted in their home countries as of 1996, or they were then published in the US within 30 days of publication abroad. You can learn more about copyright terms for foreign works from the Copyright Office guide &lt;a href=&quot;http://www.copyright.gov/circs/circ38b.pdf&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn2ref&quot;&gt;2&lt;/a&gt; If you think publishers have not objected to this, you would be wrong. US copyright law has an exception that allows books to be reproduced in accessible formats, but this exception only applies to “authorized entities”—nonprofits or governmental agencies with a primary mission related to providing such services.&lt;/p&gt;
&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn3ref&quot;&gt;3&lt;/a&gt; The law allows libraries and archives (not preservationists generally) to digitize works during the last 20 years of their copyright term, but only in limited circumstances: the library or archive first has to determine through a “reasonable investigation” that the work is not being commercially exploited &lt;em&gt;and&lt;/em&gt; that they cannot obtain another copy of it at a reasonable price.&lt;/p&gt;
&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn4ref&quot;&gt;4&lt;/a&gt; Under federal law at the time, these “musical compositions”—the music and lyrics—were subject to copyright, but the particular “sound recordings” embodying the musical compositions were not; federal copyright did not cover sound recordings until 1972. (Pre-1972 sound recordings are protected under some states' laws.) So, for example, the musical composition “It's Now or Never” written by Wally Gold and Aaron Schroeder would be federally copyrighted, but not Elvis Presley's particular sound recording of that composition.&lt;/p&gt;
&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn5ref&quot;&gt;5&lt;/a&gt; While we were able to find copyright renewals for all of the books, movies, and songs mentioned on this page (meaning that they are in fact copyrighted through 2057), we weren’t able to track down a renewal for “Look Mickey!” This doesn’t mean it’s not copyrighted — Lichtenstein’s estate has made copyright claims over other works in the past — just that we couldn’t locate the renewal in the Copyright Office database (as explained above, this can sometimes be difficult).&lt;/p&gt;
&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn6ref&quot;&gt;6&lt;/a&gt; Sometimes you can see the first archived journal article you choose, but the remaining articles are behind a paywall. And even when 1961 articles are readable, they’re still copyrighted—these publishers won’t allow you to reproduce or distribute them without permission.&lt;/p&gt;
&lt;p id=&quot;fn&quot;&gt;&lt;a class=&quot;note&quot; href=&quot;https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/#fn7ref&quot;&gt;7&lt;/a&gt; A Congressional Research Service study indicated that only 2% of works between 55 and 75 years old continue to retain commercial value. As explained above, many works from 1961 are technically in the public domain, but it is often difficult to conclusively determine public domain status, so users have to presume that they’re still under copyright.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;license&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; class=&quot;c3&quot; height=&quot;37&quot; hspace=&quot;3&quot; src=&quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&quot; /&gt;&lt;/a&gt;The Public Domain Day 2018 web pages by Duke University's &lt;a href=&quot;https://law.duke.edu/cspd/&quot; target=&quot;_blank&quot;&gt;Center for the Study of the Public Domain&lt;/a&gt; are licensed under a &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;license&quot; target=&quot;_blank&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 12:41:05 +0000</pubDate>
<dc:creator>aw3c2</dc:creator>
<og:url>https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/</og:url>
<og:title>Public Domain Day 2018 Pre-1976 | Duke University School of Law</og:title>
<og:description> </og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://law.duke.edu/cspd/publicdomainday/2018/pre-1976/</dc:identifier>
</item>
<item>
<title>Former Google and Facebook execs are sounding alarms about the power of tech</title>
<link>https://www.theguardian.com/commentisfree/2018/jan/01/silicon-valley-eating-soul-google-facebook-tech</link>
<guid isPermaLink="true" >https://www.theguardian.com/commentisfree/2018/jan/01/silicon-valley-eating-soul-google-facebook-tech</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;O&lt;/span&gt;&lt;/span&gt;ne source of angst came close to being 2017’s signature subject: how the internet and the tiny handful of companies that dominate it are affecting both individual minds and the present and future of the planet. The old idea of the online world as a burgeoning utopia looks to have peaked around the time of the Arab spring, and is in retreat.&lt;/p&gt;
&lt;p&gt;If you want a sense of how much has changed, picture the president of the US tweeting his latest provocation in the small hours, and consider an array of words and phrases now freighted with meaning: &lt;a href=&quot;https://www.theguardian.com/uk-news/2017/dec/18/russia-linked-twitter-accounts-tried-to-divide-uk-after-terrorist-attacks&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Russia&lt;/a&gt;, &lt;a href=&quot;https://www.theguardian.com/commentisfree/2017/oct/16/bots-social-media-threaten-democracy-technology&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;bots&lt;/a&gt;, &lt;a href=&quot;https://www.theguardian.com/technology/2017/nov/14/british-mp-calls-on-twitter-to-release-russian-troll-factory-tweets&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;troll farms&lt;/a&gt;, &lt;a href=&quot;https://www.theguardian.com/technology/2016/apr/12/online-abuse-how-harrassment-revenge-pornography-different-countries-deal-with-it&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;online abuse&lt;/a&gt;, &lt;a href=&quot;https://www.theguardian.com/media/2016/dec/18/what-is-fake-news-pizzagate&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;fake news&lt;/a&gt;, &lt;a href=&quot;https://www.theguardian.com/commentisfree/2017/feb/02/corporate-dark-money-power-atlantic-lobbyists-brexit&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;dark money&lt;/a&gt;.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 1&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Another sign of how much things have shifted is a volte-face by Silicon Valley’s most powerful man. Barely more than a year ago the Facebook founder, Mark Zuckerberg, seemed still to be rejoicing in his company’s imperial phase, blithely dismissing the idea that fabricated news carried by his platform had affected the outcome of the 2016 US election as a &lt;a href=&quot;https://www.theguardian.com/technology/2016/nov/10/facebook-fake-news-us-election-mark-zuckerberg-donald-trump&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;“pretty crazy idea”&lt;/a&gt;. Now scarcely a week goes by without some Facebook pronouncement or other, either updating the wider world about its latest quest to put its operations beyond criticism or assuring us that its belief in an eternally upbeat, fuzzily liberal ethos is as fervent as ever.&lt;/p&gt;
&lt;p&gt;The company has reached a fascinating point in its evolution; it is as replete with importance and interest as any political party. Facebook is at once massively powerful and also suddenly defensive. Its deeply questionable tax affairs &lt;a href=&quot;https://www.theguardian.com/technology/2017/dec/12/facebook-ad-revenue-countries-earned-ireland&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;are being altered&lt;/a&gt;; 1,000 new employees have been hired to monitor its advertising. At the same time, it still seems unable to provide any answers to worries about its effects on the world beyond more and more Facebook. &lt;a href=&quot;https://newsroom.fb.com/news/2017/12/hard-questions-is-spending-time-on-social-media-bad-for-us/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;A pre-Christmas statement claimed&lt;/a&gt; that although “passive” use of social media could harm users, “actively interacting with people” online was linked not just to “improvements in wellbeing”, but to “joy”. In short, if Facebook does your head in, the solution is apparently not to switch off, but more Facebook.&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;Former Facebook president Sean Parker warned that it 'literally changes your relationship with society, with each other'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;While Zuckerberg and his colleagues do ethical somersaults, there is rising noise from a group of people who made headlines towards the year’s end: the former insiders at tech giants who now loudly worry about what their innovations are doing to us. The former Facebook president Sean Parker &lt;a href=&quot;https://www.theguardian.com/technology/2017/nov/09/facebook-sean-parker-vulnerability-brain-psychology&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;warned in November&lt;/a&gt; that its platform “literally changes your relationship with society, with each other … God only knows what it’s doing to our children’s brains.”&lt;/p&gt;
&lt;p&gt;At around the same time, the former Facebook executive Chamath Palihapitiya held a public interview at Stanford University in which he did not exactly mince his words. “The short-term, dopamine-driven feedback loops that we have created are destroying how society works,” &lt;a href=&quot;https://www.gsb.stanford.edu/insights/chamath-palihapitiya-why-failing-fast-fails&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;he said&lt;/a&gt;. “No civil discourse, no cooperation, misinformation, mistruth … So we are in a really bad state of affairs right now, in my opinion.” (Strangely, around a week later he seemed to recant, claiming he had only meant to “start an important conversation”, and that Facebook was still a company he “loved”.)&lt;/p&gt;
&lt;p&gt;Then there is Tristan Harris, a former high-up at Google who is now hailed as “the closest thing Silicon Valley has to a conscience”. Under the banner of a self-styled “movement” called &lt;a href=&quot;http://www.timewellspent.io/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Time Well Spent&lt;/a&gt;, he and his allies are urging software developers to tone down the compulsive elements of their inventions, and the millions who find themselves hooked to change their behaviour.&lt;/p&gt;
&lt;p&gt;What they are up against, meanwhile, is apparently personified by Nir Eyal, a Stanford lecturer and tech consultant who could be a character from the brilliant &lt;a href=&quot;https://www.theguardian.com/tv-and-radio/tvandradioblog/2014/aug/06/silicon-valley-mike-judge-sitcom&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;HBO sitcom Silicon Valley&lt;/a&gt;. In 2013 he published Hooked: How To Build Habit-Forming Products. His inspiration for the book is the behaviourist psychology pioneered by BF Skinner. Among his pearls of wisdom is one both simple and chilling: “For new behaviours to really take hold, they must occur often.” But on close inspection, even he sounds somewhat ambivalent: last April, at something called the Habit Summit, he told his audience that at home he had installed a device that cut off the internet at a set time every day.&lt;/p&gt;
&lt;p&gt;Good for him. The reality for millions of other people is a constant experience that all but buries the online world’s liberating possibilities in a mess of alerts, likes, messages, retweets and internet use so pathologically needy and frantic that it inevitably makes far too many people vulnerable to pernicious nonsense and real dangers.&lt;/p&gt;
&lt;p&gt;Thanks to manipulative ephemera, WhatsApp users anxiously await the ticks that confirm whether a message has been read by a receiver; and, a turbocharged version of the addictive dots that flash on an iPhone when a friend is replying to you, Snapchat now alerts its users when a friend starts typing a message to them. And we all know what lies around the corner: a world of Sensurround virtual reality, and an internet wired into just about every object we interact with. As the repentant Facebookers say: if we’re not careful, we will soon be at risk of being locked into mindless behavioural loops, craving distraction even from other distractions.&lt;/p&gt;
&lt;p&gt;There is a possible way out of this, of course. It resides not in some luddite fantasy of an army of people carrying old Nokia phones and writing each other letters, but the possibility of a culture that actually embraces the idea of navigating the internet with a discriminating sensibility and an emphasis on basic moderation. We now know – don’t we? – that the person who begins most social encounters by putting their phone on the table is either an addict or an idiot.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 2&quot;&gt;
&lt;/aside&gt;&lt;p&gt;There is also a mounting understanding that one of the single most important aspects of modern parenting is to be all too aware of how much social media can mess with people’s minds, and to limit our children’s screen time. This, after all, is what &lt;a href=&quot;https://www.theguardian.com/technology/billgates&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Bill Gates&lt;/a&gt; and Steve Jobs did, as evidenced by one of the latter’s most pithy statements. In 2010 he was asked about his children’s opinion of the iPad. “They haven’t used it,” he said. “We limit how much technology our kids use at home.”&lt;/p&gt;
&lt;p&gt;Two billion people actively use Facebook; at least 3.5 billion are now reckoned to be online. Their shared habits, compulsions and susceptibilities will clearly have a huge influence on the world’s progress, or lack of it. So we ought to listen to Tristan Harris and his campaign. “Religions and governments don’t have that much influence over people’s daily thoughts,” &lt;a href=&quot;https://www.wired.com/story/our-minds-have-been-hijacked-by-our-phones-tristan-harris-wants-to-rescue-them/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;he recently told Wired magazine&lt;/a&gt;. “But we have three technology companies” – he meant Facebook, Google and Apple – “who have this system that frankly they don’t even have control over … Right now, 2 billion people’s minds are already jacked in to this automated system, and it’s steering people’s thoughts toward either personalised paid advertising or misinformation or conspiracy theories. And it’s all automated; the owners of the system can’t possibly monitor everything that’s going on, and they can’t control it.”&lt;/p&gt;
&lt;p&gt;And then came the kicker. “This isn’t some kind of philosophical conversation. This is an urgent concern happening right now.” Amid an ocean of corporate sophistry and doublethink, those words have the distinct ring of truth.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;bullet&quot;&gt;•&lt;/span&gt; John Harris is a Guardian columnist&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 11:32:00 +0000</pubDate>
<dc:creator>DrNuke</dc:creator>
<og:url>http://www.theguardian.com/commentisfree/2018/jan/01/silicon-valley-eating-soul-google-facebook-tech</og:url>
<og:description>Former Google and Facebook executives are sounding the alarm about the pervasive power of tech, writes Guardian columnist John Harris</og:description>
<og:image>https://i.guim.co.uk/img/media/aa0909fa601a3e787aaa612245d587b59dd9fcd7/0_0_2560_1536/master/2560.jpg?w=1200&amp;h=630&amp;q=55&amp;auto=format&amp;usm=12&amp;fit=crop&amp;crop=faces%2Centropy&amp;bm=normal&amp;ba=bottom%2Cleft&amp;blend64=aHR0cHM6Ly91cGxvYWRzLmd1aW0uY28udWsvMjAxNy8xMC8wNi9vcGluaW9uc19vdmVybGF5LWZhY2Vib29rLnBuZz90ZXN0&amp;s=ba810e80ceb1309f463be84d70c4d97c</og:image>
<og:type>article</og:type>
<og:title>Take it from the insiders: Silicon Valley is eating your soul | John Harris</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/commentisfree/2018/jan/01/silicon-valley-eating-soul-google-facebook-tech</dc:identifier>
</item>
<item>
<title>Why is writing mathematical proofs more fault-proof than writing code? (2011)</title>
<link>https://cs.stackexchange.com/questions/85327/why-is-writing-down-mathematical-proofs-more-fault-proof-than-writing-computer-c</link>
<guid isPermaLink="true" >https://cs.stackexchange.com/questions/85327/why-is-writing-down-mathematical-proofs-more-fault-proof-than-writing-computer-c</guid>
<description>

Let's look at things at the simplest, and most basic level.
&lt;p&gt;For math, we have:&lt;br/&gt;2+3=5&lt;/p&gt;&lt;p&gt;I learned about that when I was very, very young. I can look at the most basic elements: two objects, and three objects. Great.&lt;/p&gt;
&lt;p&gt;For computer programming, most people tend to use a high-level language. Some high-level languages can even &quot;compile&quot; into one of the lower high-level languages, like C. C can then be translated into Assembly language. Assembly language then gets converted into machine code. A lot of people think the complexity ends there, but it doesn't: Modern CPUs take the machine code as instructions, but then run &quot;micro code&quot; to actually execute those instructions.&lt;/p&gt;
&lt;p&gt;This means that, at the most basic level (dealing with the simplest of structures), we are now dealing with micro-code, which is embedded in the hardware and which most programmers don't even use directly, nor update. In fact, not only do most programmers not touch micro code (0 levels higher than micro code), most programmers don't touch machine code (1 level higher than micro code), nor even Assembly (2 levels higher than micro code) (except, perhaps, for a bit of formal training during college). Most programmers will spend time only 3 or more levels higher.&lt;/p&gt;
&lt;p&gt;Furthermore, if we look at Assembly (which is as low level as people typically get), each individual step is typically understandable by people who have been trained and have the resources to interpret that step. In this sense, Assembly is much simpler than a higher level language. However, Assembly is so simple that performing complex tasks, or even mediocre tasks, is very tedious. Upper-level languages free us from that.&lt;/p&gt;
&lt;p&gt;In a law about &quot;reverse engineering&quot;, a judge declared that even if code can theoretically be handled one byte at a time, modern programs involve millions of bytes, so some sorts of records (like copies of code) must be made just for such an effort to be feasible. (Therefore internal development wasn't considered a violation of the generalized &quot;no making copies&quot; rule of copyright law.) (I'm probably thinking of making unauthorized Sega Genesis cartridges, but may be thinking of something said during the Game Genie case.)&lt;/p&gt;

&lt;p&gt;Do you run code meant for 286s? Or do you run 64-bit code?&lt;/p&gt;
&lt;p&gt;Mathematics uses fundamentals that extend back for millennia. With computers, people typically consider investment in something two decades old to be uselessly wasteful of resources. That means Mathematics can be a lot more thoroughly tested.&lt;/p&gt;

&lt;p&gt;I was taught (by a friend who had more formal computer programming training than myself) that there is no such thing as a bug-free C compiler that meets the C specifications. This is because the C language basically assumes the possibility of using infinite memory for the purpose of a stack. Obviously, such an impossible requirement had to be deviated from when people tried to make usable compilers that worked with actual machines that are a bit more finite in nature.&lt;/p&gt;
&lt;p&gt;In practice, I have found that with JScript in Windows Script Host, I've been able to accomplish a lot of good using objects. (I like the environment because the toolset needed to try new code is built into modern versions of Microsoft Windows.) When using this environment, I've found that sometimes there is no easily-findable documentation on how the object works. However, using the object is so beneficial, that I do so anyway. So what I'd do is write code, which may be buggy as a hornet's nest, and do so in a nicely sandboxed environment where I can see the effects, and learn about the object's behaviors while interacting with it.&lt;/p&gt;
&lt;p&gt;In other cases, sometimes only after I've figured out how an object behaves, I've found that the object (bundled with the operating system) is buggy, and that it is a known issue that Microsoft has intentionally decided will not be fixed.&lt;/p&gt;
&lt;p&gt;In such scenarios, do I rely on OpenBSD, created by masterful programmers that create new releases on-schedule, on a regular basis (twice a year), with a famous security record of &quot;only two remote holes&quot; in 10+ years? (Even they have errata patches for less severe issues.) No, by no means. I don't rely on such a product with such higher quality, because I'm working for a business that support businesses that supply people with machines that use Microsoft Windows, so that is what my code needs to work on.&lt;/p&gt;
&lt;p&gt;Practicality/usability require that I work on the platforms that people find useful, and that is a platform which is famously bad for security (even though tremendous improvements have been made from the early days of the millennium which the same company's products were much worse).&lt;/p&gt;

&lt;p&gt;There are numerous reasons why computer programming is more error prone, and that is accepted by the community of computer users. In fact, most code is written in environments which will not tolerate error-free efforts. (Some exceptions, such as developing security protocols, may receive a bit more effort in this regard.) Besides the commonly thought of reasons of businesses not wanting to invest more money, and miss artificial deadlines to make customers happy, there is the impact of the march of technology which simply states that if you spend too much time, you will be working on an obsolete platform because things do change significantly within a decade.&lt;/p&gt;
&lt;p&gt;Offhand, I can recall being surprised at just how short some very useful and popular functions were, when I saw some source code for strlen and strcpy. For instance, strlen may have been something like &quot;int strlen(char *x){char &lt;em&gt;y=x;while (&lt;/em&gt;(y++));return (y-x)-1;}&quot;&lt;/p&gt;
&lt;p&gt;However, typical computer programs are much lengthier than that. Also, a lot of modern programming will use other code which may be less thoroughly tested, or even known to be buggy. Today's systems are much more elaborate than what can easily be thought through, except by hand-waving away a lot of the minutia as &quot;details handled by lower levels&quot;.&lt;/p&gt;
&lt;p&gt;This mandatory complexity, and the certainty of working with complex and even wrong systems, makes computer programming a lot hardware to verify than a lot of mathematics where things tend to boil down to a lot simpler levels.&lt;/p&gt;
&lt;p&gt;When you break things down in mathematics, you get to individual pieces that children can understand. Most people trust math; at least basic arithmetic (or, at least, counting).&lt;/p&gt;
&lt;p&gt;When you really break down computer programming to see what's happening under the hood, you end up with broken implementations of broken standards and code that is ultimately executed electronically, and that physical implementation is just one step below microcode which most university-trained computer scientists don't dare touch (if they are even aware of it).&lt;/p&gt;
&lt;p&gt;I've spoken with some programmers who are in college or recent graduates who outright object to the notion that bug-free code can be written. They've written off the possibility, and though they acknowledge that some impressive examples (which I have been able to show) are some convincing arguments, they consider such samples to be unrepresentative rare flukes, and still dismiss the possibility of being able to count on having such higher standards. (A much, much different attitude than the much more trustable foundation we see in math.)&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 10:33:41 +0000</pubDate>
<dc:creator>dgellow</dc:creator>
<og:type>website</og:type>
<og:url>https://cs.stackexchange.com/questions/85327/why-is-writing-down-mathematical-proofs-more-fault-proof-than-writing-computer-c</og:url>
<og:image>https://cdn.sstatic.net/Sites/cs/img/apple-touch-icon@2.png?v=324a3e0c2b03</og:image>
<og:title>Why is writing down mathematical proofs more fault-proof than writing computer code?</og:title>
<og:description>I have noticed that I find it far easier to write down mathematical proofs without making any mistakes, than to write down a computer program without bugs. It seems that this is something more</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://cs.stackexchange.com/questions/85327/why-is-writing-down-mathematical-proofs-more-fault-proof-than-writing-computer-c</dc:identifier>
</item>
</channel>
</rss>