<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Twitter&amp;#039;s Secret “Guest Mode”</title>
<link>https://shkspr.mobi/blog/2018/08/twitters-secret-guest-mode/</link>
<guid isPermaLink="true" >https://shkspr.mobi/blog/2018/08/twitters-secret-guest-mode/</guid>
<description>&lt;p&gt;Twitter has an undocumented feature which lets you follow accounts &lt;em&gt;without&lt;/em&gt; being logged in. Here's how I found it, and how you can use it.&lt;/p&gt;
&lt;p&gt;My &lt;a href=&quot;https://shkspr.mobi/blog/2012/09/review-panasonic-tx-l37et5b/&quot;&gt;crappy old TV&lt;/a&gt; has a crappy old web browser on it. One boring Sunday, I decided to see which websites worked and which didn't on a 6 year old browser. Anything using LetsEncrypt was unavailable due to &quot;security certificate issues&quot; - but Twitter worked. Sort of.&lt;/p&gt;
&lt;p&gt;As soon as I opened the page, I was redirected to &lt;code&gt;mobile.twitter.com/i/guest&lt;/code&gt; - don't try it on your regular browser, it won't work there.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shkspr.mobi/blog/wp-content/uploads/2018/08/Press-the-follow-button-promt-on-the-website.jpg&quot; alt=&quot;Press the follow button prompt on the website.&quot; width=&quot;413&quot; height=&quot;230&quot; class=&quot;aligncenter size-full wp-image-30208&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This offered me the &quot;guest&quot; experience. I was able to browse Twitter and, crucially, follow accounts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shkspr.mobi/blog/wp-content/uploads/2018/08/Twitters-guest-mode-displayed-on-a-TV.jpg&quot; alt=&quot;Twitter's guest mode displayed on a TV.&quot; width=&quot;1080&quot; height=&quot;768&quot; class=&quot;aligncenter size-full wp-image-30210&quot; srcset=&quot;https://shkspr.mobi/blog/wp-content/uploads/2018/08/Twitters-guest-mode-displayed-on-a-TV.jpg 1080w, https://shkspr.mobi/blog/wp-content/uploads/2018/08/Twitters-guest-mode-displayed-on-a-TV-768x546.jpg 768w&quot; sizes=&quot;(max-width: 1080px) 100vw, 1080px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The temporary guest account doesn't show up in any follower metrics, and you can't interact with the Tweets. But for a read-only experience, it's useful. There are, of course, some more limitations.&lt;/p&gt;
&lt;h2&gt;Secret Agent Man&lt;/h2&gt;
&lt;p&gt;As I mentioned - this doesn't work in most regular browsers. You need to change your User Agent to something that Twitter doesn't recognise. I went with &quot;Lynx&quot;. Or, you could just &lt;a href=&quot;https://lynx.browser.org/&quot;&gt;use the Lynx browser&lt;/a&gt; all the time like I do. Because I'm Old-School-Kool™.&lt;/p&gt;
&lt;h2&gt;Disorder&lt;/h2&gt;
&lt;p&gt;Tweets aren't ordered in a timeline like the regular experience. You see a dozen of one user's tweets, then a dozen of the next user's, and so on. A slightly frustrating experience.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shkspr.mobi/blog/wp-content/uploads/2018/08/My-tweets-followed-by-Adeles-tweets.jpg&quot; alt=&quot;My tweets followed by Adele's tweets&quot; width=&quot;546&quot; height=&quot;468&quot; class=&quot;aligncenter size-full wp-image-30209&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Limited Success&lt;/h2&gt;
&lt;p&gt;By default, Twitter shows you a selection of Verified accounts to follow - but you can follow whoever you want. Well, you can follow up to four people!&lt;/p&gt;
&lt;p&gt;Yup, in this limited mode, you can only stalk 4 strangers before Twitter hits you with weird error messages about your browser not being supported.&lt;/p&gt;
&lt;h2&gt;Me Want Cookie!&lt;/h2&gt;
&lt;p&gt;The secret lies in the cookies.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shkspr.mobi/blog/wp-content/uploads/2018/08/Technical-details-of-a-Twitter-cookie-fs8.png&quot; alt=&quot;Technical details of a Twitter cookie.&quot; width=&quot;567&quot; height=&quot;151&quot; class=&quot;aligncenter size-full wp-image-30202&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the names of the accounts you are following is stored in a pipe delimited format.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;guest_timeline_users=TwitterMusic|LBuckingham|StevePerryMusic|edent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;But, if you're as skilled a h4x0r as I am, you can just edit that cookie and follow many more people.&lt;/p&gt;
&lt;h2&gt;Now what?&lt;/h2&gt;
&lt;p&gt;I've no idea if this legacy mode is still intended to be there - or if it has just been forgotten about. I couldn't find any documentation or mention of it. I don't think there's anything particularly nasty a malicious user can do with it.&lt;/p&gt;
&lt;p&gt;It's an odd little curio - and probably only of interest if you have an ancient browser but still crave tweets.&lt;/p&gt;
&lt;footer class=&quot;entry-footer&quot;/&gt;</description>
<pubDate>Thu, 16 Aug 2018 11:43:32 +0000</pubDate>
<dc:creator>edent</dc:creator>
<og:type>article</og:type>
<og:title>Twitter's Secret &quot;Guest Mode&quot;</og:title>
<og:url>https://shkspr.mobi/blog/2018/08/twitters-secret-guest-mode/</og:url>
<og:description>Twitter has an undocumented feature which lets you follow accounts without being logged in. Here’s how I found it, and how you can use it. My crappy old TV has a crappy old web browser on it.…</og:description>
<og:image>https://shkspr.mobi/blog/wp-content/uploads/2018/08/Twitters-guest-mode-displayed-on-a-TV.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://shkspr.mobi/blog/2018/08/twitters-secret-guest-mode/</dc:identifier>
</item>
<item>
<title>Dugout Loop</title>
<link>https://www.boringcompany.com/dugout</link>
<guid isPermaLink="true" >https://www.boringcompany.com/dugout</guid>
<description>&lt;p&gt;Tunneling is much less invasive than construction of alternative transportation methods (e.g. road widening). Nevertheless, The Boring Company and our consultants are working with the City of LA Bureau of Engineering to draft an environmental impact report (EIR), which will identify ways to minimize and avoid impacts to the community. &lt;/p&gt;
&lt;p&gt;As part of the CEQA process, the Initial Study (IS) and Notice of Preparation (NOP) for the Dugout Loop process will be available for public review from August 16, 2018 to September 17, 2018. A public scoping meeting will be held at Dodger Stadium, 1000 Vin Scully Avenue, Los Angeles, CA 90012, on August 28, 2018 from 6:15 pm to 9:00 pm. Please visit LABOE’s website for more information on the location and availability of the IS for public review.  For more information on the location and availability of the IS for public review, please visit LABOE’s website at: &lt;a href=&quot;http://eng.lacity.org/dugout-loop&quot;&gt;http://eng.lacity.org/dugout-loop&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;The public will be engaged during this process and all comments will be included in the EIR. &lt;/p&gt;
</description>
<pubDate>Thu, 16 Aug 2018 03:47:50 +0000</pubDate>
<dc:creator>ot</dc:creator>
<og:title>Dugout Loop</og:title>
<og:url>https://www.boringcompany.com/dugout/</og:url>
<og:type>website</og:type>
<og:image>http://static1.squarespace.com/static/5915617137c58104451ac5fb/t/59156241414fb5cf0bfcf39d/1494573633789/favicon.png?format=1000w</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.boringcompany.com/dugout</dc:identifier>
</item>
<item>
<title>Google Needs to Come Clean About Its Chinese Plans</title>
<link>https://www.eff.org/deeplinks/2018/08/google-needs-come-clean-about-its-chinese-plans</link>
<guid isPermaLink="true" >https://www.eff.org/deeplinks/2018/08/google-needs-come-clean-about-its-chinese-plans</guid>
<description>&lt;p&gt;&lt;span&gt;Eight years after Google initially took a stand against Internet censorship by exiting the Chinese search market, we are disappointed to learn the company has been secretly re-considering an extended collaboration with the &lt;/span&gt;&lt;a href=&quot;https://www.eff.org/deeplinks/2016/01/china-shows-how-backdoors-lead-software-censorship&quot;&gt;massive censorship and surveillance-wielding state&lt;/a&gt;&lt;span&gt;. &lt;/span&gt;According to an &lt;a href=&quot;https://theintercept.com/2018/08/01/google-china-search-engine-censorship/&quot;&gt;Intercept report&lt;/a&gt; released at the beginning of the month, Google is working on a censored version of its search service for release in China.&lt;/p&gt;
&lt;p&gt;In 2010, EFF and many other organizations &lt;a href=&quot;https://www.eff.org/deeplinks/2010/01/uncensoring-china-bravo-google&quot;&gt;praised Google&lt;/a&gt; for refusing to sacrifice the company’s values for access to the Chinese market. At the time, this move followed public backlash and several attacks on Google’s infrastructure that targeted the personal data of several prominent Chinese human rights activists. Google’s departure from China showed that strong core values in fundamental human rights could beat out short-term economic gain in the calculus of an Internet company.&lt;/p&gt;
&lt;p&gt;But now &lt;span&gt;it seems the company has reversed course.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This news comes amid other reports of American tech giants compromising values to enter or remain within China: Facebook has &lt;a href=&quot;https://www.nytimes.com/2016/11/22/technology/facebook-censorship-tool-china.html&quot;&gt;piloted a censored version&lt;/a&gt; of its own platform, and Apple recently &lt;a href=&quot;https://www.reuters.com/article/us-china-apple-icloud-insight/apple-moves-to-store-icloud-keys-in-china-raising-human-rights-fears-idUSKCN1G8060&quot;&gt;faced criticism&lt;/a&gt; for moving its customers' data into China-hosted servers, and adding code to &lt;a href=&quot;https://boingboing.net/2018/07/15/china-isnt-null-terminated.html&quot;&gt;filter the Taiwanese flag emoji&lt;/a&gt; in Chinese locales.&lt;/p&gt;
&lt;p&gt;Within China, Google’s direct competitor, Baidu, has been facing a significant amount of social, regulatory, and economic backlash over recent advertising malpractice, such as monetizing &lt;a href=&quot;https://www.bbc.co.uk/news/business-36189252&quot;&gt;questionable&lt;/a&gt; &lt;a href=&quot;https://www.nytimes.com/2016/05/04/world/asia/china-baidu-investigation-student-cancer.html&quot;&gt;medical&lt;/a&gt; &lt;a href=&quot;https://www.bbc.com/news/world-asia-china-35340394&quot;&gt;advertisements&lt;/a&gt;, heavily &lt;a href=&quot;http://tech.sina.com.cn/i/2018-01-30/doc-ifyqyuhy7612801.shtml&quot;&gt;deprioritizing non-Baidu services&lt;/a&gt;, and &lt;a href=&quot;https://mp.weixin.qq.com/s/r3YiwFHt_8HwC849FwNAZg&quot;&gt;allegedly promoting phishing sites&lt;/a&gt;. There may well be a &lt;a href=&quot;https://www.cnet.com/news/baidu-ceo-confident-of-defeating-google-china-disagrees/&quot;&gt;growing&lt;/a&gt; &lt;a href=&quot;https://qz.com/593120/chinese-citizens-are-boycotting-search-engine-baidu-and-praying-for-google-to-come-back/&quot;&gt;demand&lt;/a&gt; for competition within the Chinese search engine market.&lt;/p&gt;
&lt;p&gt;In even considering these changes, Google needs to tread carefully. In the wake of the last wave of engagement with the Chinese market, and to prevent Internet companies being complicit with human rights’ violations, the company joined with Microsoft and Yahoo! to create a set of standards for working in countries with poor human rights records: the Global Network Initiative’s &lt;a href=&quot;https://globalnetworkinitiative.org/implementation-guidelines/&quot;&gt;Implementation Guidelines&lt;/a&gt;. EFF was a founding member of the GNI, but subsequently &lt;a href=&quot;https://www.eff.org/ja/issues/global-network-initiative&quot;&gt;left the coalition in 2013&lt;/a&gt; due to concerns that the companies were unable to be forthcoming about their involvement in state surveillance, even within a confidential environment.&lt;/p&gt;
&lt;p&gt;From the outside, it’s unclear to us whether this project has yet to be considered in the light of that agreement. GNI’s Executive Director has told reporters, in part, that “All member companies are expected to implement the GNI Principles wherever they operate, and are subject to independent assessment, which is overseen by our multi-stakeholder Board of Directors.” It might reassure Google’s own staff and external critics to be told that process was being followed, and if both the GNI and Google were more public about the results of that procedure.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But for now, &lt;/span&gt;&lt;span&gt;it seems the company has opted to prepare new Chinese plans outside the view of the public, and even behind the backs of many of their own employees.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;From 2006 to 2018: Both Google and China are more powerful than ever&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Our original concerns &lt;a href=&quot;https://www.eff.org/deeplinks/2006/01/chinese-new-year-resolutions-google&quot;&gt;from 2006&lt;/a&gt; still stand today, but in 2018, the potential for damage when large tech companies co-operate with repressive states has grown.&lt;/p&gt;
&lt;p&gt;Since 2006, Google’s capabilities have expanded massively. We live in an era in which Google-owned tracking scripts are present on an &lt;a href=&quot;http://randomwalker.info/publications/OpenWPM_1_million_site_tracking_measurement.pdf&quot;&gt;incredible 75% of the top million websites&lt;/a&gt;. Google’s personalized profiles of its users across several online services help it provide “relevant” search results and advertisements.&lt;/p&gt;
&lt;p&gt;Simultaneously, in order to sustain their position on strong censorship, the Chinese government has had to implement broad and pervasive surveillance laws and technology. In particular, the explosive dominance of centralized applications like Weibo and WeChat, whose communications and transactions are &lt;a href=&quot;https://www.nytimes.com/2018/04/15/world/asia/china-gay-ban-sina-weibo-.html&quot;&gt;regularly&lt;/a&gt; &lt;a href=&quot;https://www.theguardian.com/world/2018/feb/28/china-bans-the-letter-n-internet-xi-jinping-extends-power&quot;&gt;surveilled&lt;/a&gt; &lt;a href=&quot;https://www.scmp.com/news/china/policies-politics/article/2110806/wechat-users-censoring-content-amid-china-crackdown&quot;&gt;and&lt;/a&gt; &lt;a href=&quot;https://www.scmp.com/news/china/article/2087363/chinas-wechat-censoring-your-sensitive-photos-not-just-text-study-shows&quot;&gt;censored&lt;/a&gt;, has ultimately transformed the digital landscape in China.&lt;/p&gt;
&lt;p&gt;2017 in particular saw a new wave of &lt;a href=&quot;https://www.newamerica.org/cybersecurity-initiative/digichina/blog/translation-cybersecurity-law-peoples-republic-china/&quot;&gt;regulatory crackdowns&lt;/a&gt; aimed towards strengthening digital surveillance practices across the Chinese Internet. In particular, the government began restricting tools used for anonymity and privacy by arresting &lt;a href=&quot;https://www.theguardian.com/world/2017/dec/22/man-in-china-sentenced-to-five-years-jail-for-running-vpn&quot;&gt;local VPN providers&lt;/a&gt;, &lt;a href=&quot;https://www.nytimes.com/2017/09/25/business/china-whatsapp-blocked.html&quot;&gt;banning end-to-end chat applications&lt;/a&gt; like WhatsApp, and mandating Internet platforms to &lt;a href=&quot;https://techcrunch.com/2017/08/27/china-doubles-down-on-real-name-registration-laws-forbidding-anonymous-online-posts/&quot;&gt;require offline identity verification&lt;/a&gt;. In certain regions of China, citizens merely attempting to use foreign or encrypted applications like WhatsApp or Telegram can have their service cut off and are &lt;a href=&quot;https://www.nytimes.com/2015/11/24/business/international/china-cuts-mobile-service-of-xinjiang-residents-evading-internet-filters.html&quot;&gt;asked to report to the police&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It’s not clear how or whether Google’s planned offerings will comply with these new national regulations, or whether exemptions would be worked out for the tech giant.&lt;/p&gt;
&lt;p&gt;At this early stage, it’s this lack of transparency that concerns us most.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;What happened to transparency within Google?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Google once prided itself in its internal organizational transparency, especially when compared to giants like Apple, famous for their &lt;a href=&quot;https://arstechnica.com/gadgets/2012/10/apples-secret-garden-the-struggle-over-leaks-and-security/&quot;&gt;secrets veiled in black cloth&lt;/a&gt;. However, as we saw with &lt;a href=&quot;https://www.eff.org/deeplinks/2018/04/should-google-really-be-helping-us-military-build-ai-systems&quot;&gt;Project Maven&lt;/a&gt;, Google’s controversial AI contract with the Department of Defense, executives within the organization are willing to &lt;a href=&quot;https://theintercept.com/2018/05/31/google-leaked-emails-drone-ai-pentagon-lucrative/&quot;&gt;keep projects quiet&lt;/a&gt; in the face of potential backlash. The initiative was not publicized, and came to light only when &lt;a href=&quot;https://gizmodo.com/google-is-helping-the-pentagon-build-ai-for-drones-1823464533&quot;&gt;employees noticed&lt;/a&gt; and brought it to the &lt;a href=&quot;https://www.nytimes.com/2018/04/04/technology/google-letter-ceo-pentagon-project.html&quot;&gt;forefront of internal discussion forums&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unlike in 2006, when Google was &lt;a href=&quot;https://googleblog.blogspot.com/2006/01/google-in-china.html&quot;&gt;open (and even apologetic)&lt;/a&gt; about the quality and nature of its service in China, this new iteration was developed with little external or internal visibility. A source at The Intercept reports that knowledge about Google’s China project was “restricted to just a few hundred members of the Internet giant’s 88,000-strong workforce.” Though Project Maven was not publicized, this information was at least available to employees. This time, the vast majority of employees discovered the existence of the China project only &lt;a href=&quot;https://www.businessinsider.com/google-employees-react-report-china-censored-search-engine-2018-8&quot;&gt;after these emails were leaked&lt;/a&gt; to the public media.&lt;/p&gt;
&lt;p&gt;That means certain questions remain unanswered, not just publicly, but even among Google’s own staff. What sacrifices will Google make to its own operating practices in order to enter the Chinese market? Will it have to comply with China’s internal strict regulations, and how will these compromises affect its offerings outside of China?&lt;/p&gt;
&lt;p&gt;The public, Google’s users, and Google’s employees have been kept increasingly in the dark about compromises on the company’s own values that could massively affect the lives of not only citizens within China or the U.S., but also Internet users around the world. Google has already committed to processes that consider human rights when entering new markets in the &lt;a href=&quot;https://globalnetworkinitiative.org/participants/google/&quot;&gt;Global Network Initiative&lt;/a&gt;. Is it following them?&lt;/p&gt;
&lt;p&gt;Google is an effective gatekeeper of the Internet for a large majority of the world. It’s the portal through which many access the Internet, and through which Google itself continues to collect troves of information about these users across a variety of platforms. With that kind of responsibility, everyone — inside and outside Google — needs to stay vigilant and continue to hold the giant accountable. Avoiding internal oversight and criticism will not evade the backlash that will come from launching a complicit service, or the damaging consequences to Chinese users when Google’s compromises are used against them. It is better to have this debate now, in public, than to pick up the pieces when the damage has been done.&lt;/p&gt;
</description>
<pubDate>Thu, 16 Aug 2018 01:54:40 +0000</pubDate>
<dc:creator>panarky</dc:creator>
<og:type>article</og:type>
<og:title>Google Needs To Come Clean About Its Chinese Plans</og:title>
<og:url>https://www.eff.org/deeplinks/2018/08/google-needs-come-clean-about-its-chinese-plans</og:url>
<og:description>Eight years after Google initially took a stand against Internet censorship by exiting the Chinese search market, we are disappointed to learn the company has been secretly re-considering an extended collaboration with the massive censorship and surveillance-wielding state....</og:description>
<og:image>https://www.eff.org/files/banner_library/google-spy-eye.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eff.org/deeplinks/2018/08/google-needs-come-clean-about-its-chinese-plans</dc:identifier>
</item>
<item>
<title>Botched CIA Communications System Helped Blow Cover of Chinese Agents</title>
<link>https://foreignpolicy.com/2018/08/15/botched-cia-communications-system-helped-blow-cover-chinese-agents-intelligence/</link>
<guid isPermaLink="true" >https://foreignpolicy.com/2018/08/15/botched-cia-communications-system-helped-blow-cover-chinese-agents-intelligence/</guid>
<description>&lt;p&gt;It was considered one of the CIA’s worst failures in decades: Over a two-year period starting in late 2010, Chinese authorities systematically dismantled the agency’s network of agents across the country, executing dozens of suspected U.S. spies. But since then, a question has loomed over the entire debacle.&lt;/p&gt;
&lt;p&gt;How were the Chinese able to roll up the network?&lt;/p&gt;
&lt;p&gt;Now, nearly eight years later, it appears that the agency botched the communication system it used to interact with its sources, according to five current and former intelligence officials. The CIA had imported the system from its Middle East operations, where the online environment was considerably less hazardous, and apparently underestimated China’s ability to penetrate it.&lt;/p&gt;
&lt;p&gt;“The attitude was that we’ve got this, we’re untouchable,” said one of the officials who, like the others, declined to be named discussing sensitive information. The former official described the attitude of those in the agency who worked on China at the time as “invincible.”&lt;/p&gt;
&lt;p&gt;Other factors played a role as well, including China’s alleged recruitment of former CIA officer Jerry Chun Shing Lee around the same time. Federal prosecutors indicted Lee earlier this year in connection with the affair.&lt;/p&gt;
&lt;p&gt;But the penetration of the communication system seems to account for the speed and accuracy with which Chinese authorities moved against the CIA’s China-based assets.&lt;/p&gt;
&lt;p&gt;“You could tell the Chinese weren’t guessing. The Ministry of State Security [which handles both foreign intelligence and domestic security] were always pulling in the right people,” one of the officials said.&lt;/p&gt;
&lt;p&gt;“When things started going bad, they went bad fast.”&lt;/p&gt;
&lt;p&gt;The former officials also said the real number of CIA assets and those in their orbit executed by China during the two-year period was around 30, though some sources spoke of higher figures. The &lt;em&gt;New York Times&lt;/em&gt;, which first &lt;a href=&quot;https://www.nytimes.com/2017/05/20/world/asia/china-cia-spies-espionage.html&quot;&gt;reported&lt;/a&gt; the story last year, put the number at “more than a dozen.” All the CIA assets detained by Chinese intelligence around this time were eventually killed, the former officials said.&lt;/p&gt;
&lt;p&gt;The CIA, FBI, and National Security Agency declined to comment for this story. The Chinese Embassy in Washington did not respond to requests for comment.&lt;/p&gt;
&lt;p&gt;At first, U.S. intelligence officials were “shellshocked,” said one former official. Eventually, rescue operations were mounted, and several sources managed to make their way out of China.&lt;/p&gt;
&lt;p&gt;One of the former officials said the last CIA case officer to have meetings with sources in China distributed large sums of cash to the agents who remained behind, hoping the money would help them flee.&lt;/p&gt;
&lt;p&gt;When the intelligence breach became known, the CIA formed a special task force along with the FBI to figure out what went wrong. During the investigation, the task force identified three potential causes of the failure, the former officials said: A possible agent had provided Chinese authorities with information about the CIA asset network, some of the CIA’s spy work had been sloppy and might have been detected by Chinese authorities, and the communications system had been compromised. The investigators concluded that a “confluence and combination of events” had wiped out the spy network, according to one of the former officials.&lt;/p&gt;
&lt;p&gt;Eventually, U.S. counterintelligence officials identified Lee, the former CIA officer who had worked extensively in Beijing, as China’s likely informant. Court documents suggest Lee was in contact with his handlers at the Ministry of State Security through at least 2011.&lt;/p&gt;
&lt;p&gt;Chinese authorities paid Lee hundreds of thousands of dollars for his efforts, according to the documents. He was indicted in May of this year on a charge of conspiracy to commit espionage.&lt;/p&gt;
&lt;p&gt;But Lee’s alleged betrayal alone could not explain all the damage that occurred in China during 2011 and 2012, the former officials said. Information about sources is so highly compartmentalized that Lee would not have known their identities. That fact and others reinforced the theory that China had managed to eavesdrop on the communications between agents and their CIA handlers.&lt;/p&gt;
&lt;p&gt;When CIA officers begin working with a new source, they often use an interim covert communications system—in case the person turns out to be a double agent.&lt;/p&gt;
&lt;p&gt;The communications system used in China during this period was internet-based and accessible from laptop or desktop computers, two of the former officials said.&lt;/p&gt;
&lt;p&gt;This interim, or “throwaway,” system, an encrypted digital program, allows for remote communication between an intelligence officer and a source, but it is also separated from the main communications system used with vetted sources, reducing the risk if an asset goes bad.&lt;/p&gt;
&lt;p&gt;Although they used some of the same coding, the interim system and the main covert communication platform used in China at this time were supposed to be clearly separated. In theory, if the interim system were discovered or turned over to Chinese intelligence, people using the main system would still be protected—and there would be no way to trace the communication back to the CIA. But the CIA’s interim system contained a technical error: It connected back architecturally to the CIA’s main covert communications platform. When the compromise was suspected, the FBI and NSA both ran “penetration tests” to determine the security of the interim system. They found that cyber experts with access to the interim system could also access the broader covert communications system the agency was using to interact with its vetted sources, according to the former officials.&lt;/p&gt;
&lt;p&gt;In the words of one of the former officials, the CIA had “fucked up the firewall” between the two systems.&lt;/p&gt;
&lt;p&gt;U.S. intelligence officers were also able to identify digital links between the covert communications system and the U.S. government itself, according to one former official—links the Chinese agencies almost certainly found as well. These digital links would have made it relatively easy for China to deduce that the covert communications system was being used by the CIA. In fact, some of these links pointed back to parts of the CIA’s own website, according to the former official.&lt;/p&gt;
&lt;p&gt;The covert communications system used in China was first employed by U.S. security forces in war zones in the Middle East, where the security challenges and tactical objectives are different, the sources said. “It migrated to countries with sophisticated counterintelligence operations, like China,” one of the officials said.&lt;/p&gt;
&lt;p&gt;The system was not designed to withstand the scrutiny of a place like China, where the CIA faced a highly sophisticated intelligence service and a completely different online environment.&lt;/p&gt;
&lt;p&gt;As part of China’s Great Firewall, internet traffic there is watched closely, and unusual patterns are flagged. Even in 2010, online anonymity of any kind was proving increasingly difficult.&lt;/p&gt;
&lt;p&gt;Once Chinese intelligence obtained access to the interim communications system,­ penetrating the main system would have been relatively straightforward, according to the former intelligence officials. The window between the two systems may have only been open for a few months before the gap was closed, but the Chinese broke in during this period of vulnerability.&lt;/p&gt;
&lt;p&gt;Precisely how the system was breached remains unclear. The Ministry of State Security might have run a double agent who was given the communication platform by his CIA handler. Another possibility is that Chinese authorities identified a U.S. agent—perhaps through information provided by Lee—and seized that person’s computer. Alternatively, authorities might have identified the system through a pattern analysis of suspicious online activities.&lt;/p&gt;
&lt;p&gt;China was so determined to crack the system that it had set up a special task force composed of members of the Ministry of State Security and the Chinese military’s signals directorate (roughly equivalent to the NSA), one former official said.&lt;/p&gt;
&lt;p&gt;Once one person was identified as a CIA asset, Chinese intelligence could then track the agent’s meetings with handlers and unravel the entire network. (Some CIA assets whose identities became known to the Ministry of State Security were not active users of the communications system, the sources said.)&lt;/p&gt;
&lt;p&gt;One of the former officials said the agency had “strong indications” that China shared its findings with Russia, where some CIA assets were using a similar covert communications system. Around the time the CIA’s source network in China was being eviscerated, multiple sources in Russia suddenly severed their relationship with their CIA handlers, according to an &lt;a href=&quot;https://www.nbcnews.com/news/china/cia-china-turncoat-lee-may-have-compromised-u-s-spies-n839316&quot;&gt;NBC News&lt;/a&gt; report that aired in January—and confirmed by this former official.&lt;/p&gt;
&lt;p&gt;The failure of the communications system has reignited a debate within the intelligence community about the merits of older, lower-tech methods for covert interactions with sources, according to the former officials.&lt;/p&gt;
&lt;p&gt;There is an inherent paradox to covert communications systems, one of the former officials said: The easier a system is to use, the less secure it is.&lt;/p&gt;
&lt;p&gt;The former officials said CIA officers operating in China since the debacle had reverted to older methods of communication, including interacting surreptitiously in person with sources. Such methods can be time-consuming and carry their own risks.&lt;/p&gt;
&lt;p&gt;The disaster in China has led some officials to conclude that internet-based systems, even ones that employ sophisticated encryption, can never be counted on to shield assets.&lt;/p&gt;
&lt;p&gt;“Will a system always stay encrypted, given the advances in technology? You’re supposed to protect people forever,” one of the former officials said.&lt;/p&gt;

</description>
<pubDate>Thu, 16 Aug 2018 01:03:45 +0000</pubDate>
<dc:creator>mkeeter</dc:creator>
<og:title>Botched CIA Communications System Helped Blow Cover of Chinese Agents</og:title>
<og:image>https://foreignpolicymag.files.wordpress.com/2018/08/eagle-china-new-size_rougher-sm.jpg</og:image>
<og:url>https://foreignpolicy.com/2018/08/15/botched-cia-communications-system-helped-blow-cover-chinese-agents-intelligence/</og:url>
<og:description>The number of informants executed in the debacle is higher than initially thought.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://foreignpolicy.com/2018/08/15/botched-cia-communications-system-helped-blow-cover-chinese-agents-intelligence/</dc:identifier>
</item>
<item>
<title>Georgia Tech Creates Cybersecurity Master’s Degree Online for Less Than $10k</title>
<link>https://www.news.gatech.edu/2018/08/08/georgia-tech-creates-cybersecurity-masters-degree-online-less-10000</link>
<guid isPermaLink="true" >https://www.news.gatech.edu/2018/08/08/georgia-tech-creates-cybersecurity-masters-degree-online-less-10000</guid>
<description>&lt;!---*                         *---&gt;&lt;!---* START NEWS PAGE RENDER  *---&gt;&lt;!---*                         *---&gt;&lt;!-- News Topics  ----&gt;&lt;span class=&quot;primary-topic-alt&quot;&gt;  &lt;a href=&quot;https://www.news.gatech.edu/news-room-topics/science-and-technology&quot; typeof=&quot;skos:Concept&quot; property=&quot;rdfs:label skos:prefLabel&quot; datatype=&quot;&quot;&gt;Science and Technology&lt;/a&gt;&lt;/span&gt;&lt;!-- News Title  ----&gt;
			&lt;h2 class=&quot;news-release-title&quot;&gt;
				Georgia Tech Creates Cybersecurity Master’s Degree Online for Less Than $10,000			&lt;/h2&gt;

			&lt;!-- News Sub Title  ----&gt;
							&lt;h3 class=&quot;subtitle&quot;&gt;Newest at-scale program offered with edX addresses global industry workforce shortage&lt;/h3&gt;
			
			&lt;!-- Author, Dateline and Location ----&gt;
			&lt;div class=&quot;dateline-details clearfix&quot; readability=&quot;9&quot;&gt;
				&lt;p&gt;
											By
						Institute Communications | 										  &lt;span class=&quot;date-display-single&quot; property=&quot;dc:date&quot; datatype=&quot;xsd:dateTime&quot; content=&quot;2018-08-08T00:00:00-04:00&quot;&gt;August 8, 2018&lt;/span&gt; &lt;span class=&quot;location&quot;&gt;
         • Atlanta, GA        &lt;/span&gt; &lt;/p&gt;

				&lt;!-- Sharetools --&gt;
				
				&lt;!---**---&gt;
				&lt;hr/&gt;&lt;/div&gt;

			&lt;div id=&quot;hero-wrapper-description&quot;&gt;&lt;div class=&quot;hero-spot image&quot;&gt;
	&lt;div class=&quot;hg-image&quot; readability=&quot;4.6842105263158&quot;&gt;
		&lt;a href=&quot;https://www.news.gatech.edu/sites/default/files/uploads/mercury_images/filming_in_studio.jpg&quot; class=&quot;colorbox&quot; title=&quot;OMS Cybersecurity Course Production&quot;&gt;&lt;img typeof=&quot;foaf:Image&quot; src=&quot;https://www.news.gatech.edu/sites/default/files/styles/740_x_scale/public/uploads/mercury_images/filming_in_studio.jpg?itok=5p32Fvdn&quot; alt=&quot;OMS Cybersecurity Course Production&quot;/&gt;&lt;/a&gt;		&lt;p&gt;Click image to enlarge&lt;/p&gt;
		&lt;div class=&quot;hg-image-description&quot; readability=&quot;5.0769230769231&quot;&gt;
			&lt;p&gt;The Georgia Tech OMS Cybersecurity will begin in January 2019. &lt;/p&gt;			
						
					&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
			&lt;p&gt;The Georgia Institute of Technology has announced a new online cybersecurity master’s degree that will be offered for less than $10,000 and delivered in collaboration with &lt;a href=&quot;https://www.edx.org/&quot;&gt;edX&lt;/a&gt;. The &lt;a href=&quot;http://omscybersecurity.gatech.edu/&quot;&gt;Online Master of Science in Cybersecurity&lt;/a&gt; (OMS Cybersecurity) is designed to address a severe global workforce shortage in the field. According to the 2017 Global Information Security Workforce Study, the shortage is expected to reach 1.8 million people by 2022.&lt;/p&gt;

&lt;p&gt;Georgia Tech is the only nationally ranked Top 10 university to offer such a program at a tuition rate intended to increase higher education accessibility and affordability. The degree has existed on campus since 2002 and costs $20,000 for in-state students and $40,000 for those out-of-state. Applications for spring 2019 are open now until October 1, 2018.&lt;/p&gt;

&lt;p&gt;The OMS Cybersecurity program will launch January 7, 2019 with 250 students and will scale over time to meet demand and student needs. The program is designed to serve working professionals who can study part-time and earn the degree within two to three years. It is richly technical and offers the same three interdisciplinary tracks available on campus beginning with information security and followed by policy and energy systems in fall 2019. &lt;/p&gt;

&lt;p&gt;“Georgia Tech’s OMS Cybersecurity degree pairs world-class computer science, engineering, and public policy instruction with Georgia Tech Research Institute’s legacy of applied research in areas related to military, government, and law enforcement,” said Rafael L. Bras, provost and executive vice president for Academic Affairs and K. Harrison Brown Family Chair.  &quot;As demand continues to grow, Georgia Tech is proud to deliver innovative, affordable, top quality education in high-demand areas, like cybersecurity, to learners around the nation and world.” &lt;/p&gt;

&lt;p&gt;OMS Cybersecurity is Georgia Tech’s third at-scale online degree program. It will follow the same model as the groundbreaking &lt;a href=&quot;http://www.omscs.gatech.edu/&quot;&gt;online Master of Science in Computer Science&lt;/a&gt; (OMSCS) program, which launched in 2014 on Udacity with support from AT&amp;amp;T and has enrolled approximately 10,000 students overall for the $6,800 degree. The Institute followed on that success in 2017 by launching the &lt;a href=&quot;https://pe.gatech.edu/degrees/analytics&quot;&gt;Online Master of Science in Analytics&lt;/a&gt; on edX with support from AT&amp;amp;T and Accenture, which currently has 706 students in its second semester and costs less than $10,000. &lt;/p&gt;

&lt;p&gt;“We are excited to strengthen our partnership with Georgia Tech by now offering two top-ranked online master’s degrees in high-demand fields to learners all over the world,” said Anant Agarwal, edX CEO and MIT professor. “The new OMS Cybersecurity follows on the success of the stacked OMS Analytics on edX, which offers learners the option to start with a MicroMasters program on edX that can count toward their full master’s degree. This collaboration with Georgia Tech is the latest milestone in creating stackable, affordable, and accessible online master’s degrees in subjects that address today’s global skill gaps.”&lt;/p&gt;

&lt;p&gt;OMS Cybersecurity is built on the proven success of the on-campus Master of Science in Cybersecurity, which was started as a master’s degree in information security in 2002 by Mustaque Ahamad, associate director, Institute for Information Security &amp;amp; Privacy, professor, School of Computer Science, and co-founder and chief scientist at Pindrop, a cybersecurity company. Because of the interdisciplinary nature of the cybersecurity field, the program was broadened to include tracks in energy systems and policy.&lt;/p&gt;

&lt;p&gt;“The on-campus program has a long history as a world-class master’s degree in information security,” said Ahamad. “Graduates from this degree have gone on to become top leaders in the field.”&lt;/p&gt;

&lt;p&gt;&quot;Cybersecurity is a global problem,” said Milton Mueller, professor at Georgia Tech’s School of Public Policy, “The OMS format not only extends Georgia Tech's reach to American professionals in cybersecurity, but also makes it possible for working professionals anywhere in the world to avail themselves of Tech's educational resources and expertise.&quot; &lt;/p&gt;

&lt;p&gt;The U.S. will have 265,000 more cybersecurity jobs than skilled workers by 2022, as projected by the ISC Center for Cyber Safety and Education. Cybersecurity job postings continue to surge, having increased by 71 percent between 2012 and 2017. Job postings specifying a master’s degree have grown by 73 percent during the same period, based on data provided in the 2017 Burning Glass/Labor Insights Report. The report also cites the Washington D.C. metro area as ranking first in the country for cybersecurity employment opportunities with 44,244 job postings. &lt;/p&gt;

&lt;p&gt;&quot;As chief information security officers work to protect organizations from malicious cyber threats, they have difficulty finding trained people to staff their team. The cybersecurity workforce pipeline is a critical component to the future of our nation’s economic and national security posture. CISOs are excited to hear about Georgia Tech’s degree providing enhanced training and teaching multi-faceted skills for employment in the cybersecurity job market,” said Patrick Gaul, executive director of the National Technology Security Coalition.   &lt;/p&gt;

&lt;p&gt;OMS Cybersecurity is an interdisciplinary collaboration between Georgia Tech’s School of Computer Science in the College of Computing, the School of Public Policy in the Ivan Allen College of Liberal Arts, and the School of Electrical and Computer Engineering in the College of Engineering. &lt;/p&gt;

&lt;p&gt;&quot;The OMS Cybersecurity degree offers the same comprehensive, rigorous curriculum as the on-campus program,&quot; said Raheem Beyah, faculty lead for the program, Motorola Foundation Professor and associate chair for Strategic Initiatives and Innovation in the School of Electrical and Computer Engineering, and co-founder of Fortiphyd Logic, Inc., an industrial control cybersecurity company. “Courses are taught by leaders in the field of cybersecurity research who are sought after by industry and government entities for their knowledge and expertise.&quot; &lt;/p&gt;

&lt;p&gt;Courses for the program will be designed and produced for online delivery by &lt;a href=&quot;https://pe.gatech.edu/&quot;&gt;Georgia Tech Professional Education&lt;/a&gt; (GTPE), the Institute’s lifelong learning arm that has provided professional education for more than 40 years. &lt;/p&gt;

&lt;p&gt;“OMS Cybersecurity is designed for working professionals aiming to develop deep expertise in cybersecurity without interrupting their careers,” said Nelson C. Baker, dean of GTPE. “With this degree, we’re able to offer them the opportunity to build careers in a rapidly growing field while delivering cybersecurity experts to industry to address extreme workforce shortages.” &lt;/p&gt;

&lt;p&gt;Additional details on the Georgia Tech OMS Cybersecurity program can be found at &lt;a href=&quot;http://omscybersecurity.gatech.edu&quot;&gt;omscybersecurity.gatech.edu&lt;/a&gt;.&lt;/p&gt;							
				
													
									</description>
<pubDate>Wed, 15 Aug 2018 21:58:31 +0000</pubDate>
<dc:creator>electriclove</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.news.gatech.edu/2018/08/08/georgia-tech-creates-cybersecurity-masters-degree-online-less-10000</dc:identifier>
</item>
<item>
<title>Leo Editor</title>
<link>https://www.leoeditor.com/</link>
<guid isPermaLink="true" >https://www.leoeditor.com/</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&quot;Leo is a revolutionary step in the right direction for programming.&quot;―Brian Takita&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&quot;Leo is the best IDE that I have had the pleasure to use. It has totally changed not only the way that I program, but also the way that I store and organize all of the information that I need for the job that I do.&quot;―Ian Mulvany&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&quot;When first I opened Leo, it was out of curiosity. But having used it, I'll never go back. They'll have to pry Leo out of my cold, dead fingers!&quot;―Travers A. Hough&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Leo is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Personal_information_manager&quot;&gt;PIM&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Integrated_development_environment&quot;&gt;IDE&lt;/a&gt; and outliner that accelerates the work flow of programmers, authors and web designers. &lt;em&gt;Outline nodes may appear in more than one place&lt;/em&gt;, allowing multiple organizations of data within a single outline.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.leoeditor.com/preface.html&quot;&gt;&lt;strong&gt;A brief summary of Leo&lt;/strong&gt;&lt;/a&gt;.&lt;br /&gt;&lt;a href=&quot;https://www.leoeditor.com/testimonials.html&quot;&gt;&lt;strong&gt;What people are saying about Leo&lt;/strong&gt;&lt;/a&gt;.&lt;br /&gt;&lt;a href=&quot;https://www.leoeditor.com/tutorial.html&quot;&gt;&lt;strong&gt;Learn about Leo in 20 minutes&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ask us anything&lt;/strong&gt; at the &lt;a href=&quot;http://groups.google.com/group/leo-editor&quot;&gt;&lt;strong&gt;leo-editor Google Group&lt;/strong&gt;&lt;/a&gt;.&lt;br /&gt;&lt;a href=&quot;mailto:edreamleo@gmail.com?Subject=About%20Leo&quot; target=&quot;_top&quot;&gt;&lt;strong&gt;Send us a postcard&lt;/strong&gt;&lt;/a&gt;, telling how you use Leo. Thanks!&lt;/p&gt;
&lt;p&gt;Here is a screenshot of Leo's main window:&lt;/p&gt;
&lt;img class=&quot;screenshot&quot; src=&quot;https://www.leoeditor.com/screen-shots/DarkScreenShot.png&quot; alt=&quot;ScreenShot&quot; /&gt;</description>
<pubDate>Wed, 15 Aug 2018 21:21:59 +0000</pubDate>
<dc:creator>type0</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.leoeditor.com/</dc:identifier>
</item>
<item>
<title>Introducing the Windows Pseudo Console (ConPty)</title>
<link>https://blogs.msdn.microsoft.com/commandline/2018/08/02/windows-command-line-introducing-the-windows-pseudo-console-conpty/</link>
<guid isPermaLink="true" >https://blogs.msdn.microsoft.com/commandline/2018/08/02/windows-command-line-introducing-the-windows-pseudo-console-conpty/</guid>
<description>&lt;p&gt;In this, the fourth post in the Windows Command-Line series, we'll discuss the new Windows Pseudo Console (ConPTY) infrastructure and API - why we built it, what it's for, how it works, how to use it, and more.&lt;/p&gt;


&lt;ol&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/06/20/windows-command-line-backgrounder/&quot;&gt;Command-Line Backgrounder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/06/27/windows-command-line-the-evolution-of-the-windows-command-line/&quot;&gt;The Evolution of the Windows Command-Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/07/20/windows-command-line-inside-the-windows-console/&quot;&gt;Inside the Windows Console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Introducing the Windows Pseudo Console (ConPTY) API &lt;em&gt;[this post]&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In &lt;a href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/07/20/windows-command-line-inside-the-windows-console/&quot; target=&quot;_blank&quot;&gt;the previous post&lt;/a&gt; in this series, we started to explore the internals of the Windows Console and Windows' Command-Line infrastructure. We also discussed many of Console's strengths and outlined its key weaknesses.&lt;/p&gt;
&lt;p&gt;One of those weaknesses is that Windows tries to be &quot;helpful&quot; but gets in the way of alternative and 3rd party Console developers, service developers, etc. When building a Console or service, developers need to be able to access/supply the communication pipes through which their Terminal/service communicates with command-line applications. In the *NIX world, this isn't a problem because *NIX provides a &lt;a href=&quot;https://en.wikipedia.org/wiki/Pseudoterminal&quot; target=&quot;_blank&quot;&gt;&quot;Pseudo Terminal&quot; (PTY)&lt;/a&gt; infrastructure which makes it easy to build the communication plumbing for a Console or service, but Windows does not ...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;... until now!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before we dig into what we've done, let's briefly revisit how Terminals evolved:&lt;/p&gt;
&lt;h2 id=&quot;in-the-beginning-was-the-tty&quot;&gt;In the beginning was the TTY&lt;/h2&gt;
&lt;p&gt;As discussed in &lt;a href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/06/20/windows-command-line-backgrounder/&quot; target=&quot;_blank&quot;&gt;the first 'backgrounder' post in this series&lt;/a&gt;, in the early days of computing, users operated computers via electromechanical Teletype (TTY) devices connected to a computer via some form of serial communications link (typically a &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_current_loop_interface&quot; target=&quot;_blank&quot;&gt;20mA current loop&lt;/a&gt;).&lt;/p&gt;
&lt;img alt=&quot;Ken Thompson and Dennis Richie (standing) working on a DEC PDP-11 via teletype (notice no electronic display)&quot; src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/command-line-thompson-richie-teletype.jpg&quot;/&gt;&lt;br/&gt;Ken Thompson and Dennis Richie (standing) working on a DEC PDP-11 via teletype (notice no electronic display)&lt;br/&gt;&lt;h3 id=&quot;rise-of-the-terminals&quot;&gt;Rise of the Terminals&lt;/h3&gt;
&lt;p&gt;Teletype devices were replaced by computerized Terminals with electronic display devices (usually CRT screens). Terminals were generally very simple devices (hence the term &quot;dumb terminal&quot;) containing only the electronics and compute-power required to:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Accept text input via the keyboard&lt;/li&gt;
&lt;li&gt;Buffer input text one line at a time (enabling local editing before sending)&lt;/li&gt;
&lt;li&gt;Send/receive text via serial communications (usually via the once ubiquitous &lt;a href=&quot;https://en.wikipedia.org/wiki/RS-232&quot; target=&quot;_blank&quot;&gt;RS-232&lt;/a&gt; interface)&lt;/li&gt;
&lt;li&gt;Display received text on the Terminal's display&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Despite their simplicity (or perhaps because of it), Terminals rapidly became the primary devices used to operate mini, mainframe, and server computers: Most data entry clerks, computer operators, system administrators, scientists, researchers, software developers, and industry luminaries earned their digital-stripes by pounding away on Terminals from DEC, IBM, Wyse, and many others.&lt;/p&gt;
&lt;img alt=&quot;Admiral Grace Hopper in her office with a DEC VT220 Terminal on her desk&quot; src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/command-line-grace-hopper-terminal.jpg&quot;/&gt;&lt;br/&gt;Admiral Grace Hopper in her office with a DEC VT220 Terminal on her desk&lt;br/&gt;&lt;h3 id=&quot;the-rise-and-rise-of-software-terminals&quot;&gt;The Rise and Rise of Software Terminals&lt;/h3&gt;
&lt;p&gt;Starting in the mid 1980's, dedicated Terminal devices gradually started to be replaced by general purpose computers that were rapidly becoming more affordable, popular, and powerful. Many early PCs and other computers of the '80s had Terminal applications that could open a connection to the PC's RS-232 serial port and exchange data with whatever was listening on the other end of the connection.&lt;/p&gt;
&lt;p&gt;As general-purpose computers grew in sophistication, the Graphical User Interface (GUI) arrived and introduced a whole new world of simultaneously running applications, including Terminal applications.&lt;/p&gt;
&lt;p&gt;But a problem arose: How would a Terminal application speak to another Command-Line application running on the same machine? And how would you attach a physical serial cable between the two apps running on the same computer?&lt;/p&gt;
&lt;h2 id=&quot;enter-the-pseudo-terminal-pty&quot;&gt;Enter, the Pseudo Terminal (PTY)&lt;/h2&gt;
&lt;p&gt;In the *NIX world, this problem was solved by the introduction of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pseudoterminal&quot; target=&quot;_blank&quot;&gt;Pseudo Terminal (PTY)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The PTY virtualizes a computer's serial communications hardware, exposing &quot;master&quot; and &quot;slave&quot; pseudo-devices: Terminal apps connect to a master pseudo-device; Command-Line applications (e.g. shells like Cmd, PowerShell, and bash) connect to a slave pseudo-device. When the Terminal client sends text and/or control commands (encoded as text) to the master, the text is relayed along to the associated &quot;slave&quot;. Text emitted by the application is sent to the slave and is then routed back to the master and thus to the Terminal. Data is always sent/received asynchronously.&lt;/p&gt;
&lt;img alt=&quot;Terminal to/from PTY to/from App/Shell&quot; src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/terminal-pty-shell-e1532552020635.png&quot;/&gt;&lt;br/&gt;Terminal PTY App/Shell&lt;p&gt;Importantly, the &quot;slave&quot; pseudo-device emulates the behavior of a physical Terminal device and converts command characters into &lt;a target=&quot;_blank&quot;&gt;POSIX signals&lt;/a&gt;. For example, if a user types &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Control-C&quot;&gt;CTRL+C&lt;/a&gt; into the Terminal, the ASCII value of CTRL+C (0x03) is sent via the master. When received by the slave, the 0x03 value is removed from the input stream and a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Signal_(IPC)#SIGINT&quot;&gt;SIGINT signal&lt;/a&gt; is generated.&lt;/p&gt;
&lt;p&gt;This PTY infrastructure is used extensively by *NIX Terminal applications, text pane managers (like screen, tmux), etc. Such apps call &lt;a target=&quot;_blank&quot;&gt;openpty()&lt;/a&gt; which returns a pair of file descriptors (fd) for the PTY's master and slave. The app can then fork/exec the child Command-Line application (e.g. bash), which uses its slave fds to listen and return text to the attached Terminal.&lt;/p&gt;
&lt;p&gt;This mechanism allows Terminal applications to &quot;talk&quot; directly to Command-Line applications running locally in the same way as the Terminal would talk with a remote Computer via a serial/network connection.&lt;/p&gt;
&lt;h2 id=&quot;what-no-windows-pseudo-console&quot;&gt;What, no Windows Pseudo Console?&lt;/h2&gt;
&lt;p&gt;So, as we discussed in the previous post in this series - &lt;a target=&quot;_blank&quot; href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/07/20/windows-command-line-inside-the-windows-console/&quot;&gt;Inside the Windows Console&lt;/a&gt; - while the Windows Console is conceptually similar to the traditional *NIX Terminal, it differs in several key ways, especially at its lowest-levels which can cause problems for developers of Windows Command-Line apps, 3rd-party Terminals/Consoles, and server apps:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Windows lacks a PTY infrastructure&lt;/strong&gt;: When the user launches a Command-Line app (e.g. Cmd, PowerShell, wsl, ipconfig, etc.), Windows itself &quot;hooks up&quot; a new or existing Console instance to the app&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows obstructs 3rd party Consoles and Server Apps&lt;/strong&gt;: Windows (currently) does not provide Terminals a way to supply the communication pipes via which it wants to communicate with a Command-Line app. 3rd party Terminals are forced to create an off-screen Console, and to send it user-input and scrape its output, redrawing the output on the 3rd party Console's own display!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Only Windows has a Console API&lt;/strong&gt;: Windows Command-Line apps rely on the Win32 Console API which reduces code portability because every other platform &quot;speaks text/VT&quot; rather than calling APIs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Command-Line Remoting is substandard&lt;/strong&gt;: Windows' Command-Line apps' dependence on Console API significantly impedes interop &amp;amp; remoting scenarios&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;what-to-do&quot;&gt;What to do?&lt;/h2&gt;
&lt;p&gt;We've heard from many, &lt;em&gt;&lt;strong&gt;many&lt;/strong&gt;&lt;/em&gt; developers, who've frequently requested a PTY-like mechanism in Windows - especially those who created and/or work on ConEmu/Cmder, Console2/ConsoleZ, Hyper, VSCode, Visual Studio, WSL, Docker, and OpenSSH.&lt;/p&gt;
&lt;p&gt;Even &lt;a target=&quot;_blank&quot;&gt;Peter Bright - Technology Editor for Ars Technica&lt;/a&gt; - has been asking for a PTY mechanism since a few days after I first joined the Console team:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/command-line-conpty-peter-bright-ask.png&quot; alt=&quot;Peter Bright asks for a PTY&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And again more recently:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/07/command-line-conpty-peter-bright-ask2.png&quot; alt=&quot;Peter Bright asks again if a PTY is on the way&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Well, we finally did it: &lt;strong&gt;We created a Pseudo Console for Windows&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Since taking ownership of the Console ~4 years ago, the Console Team has been busy overhauling the Windows Console &amp;amp; Command-Line internals. While doing so, we regularly and carefully considered the issues described above and many other related asks and issues. But the internals weren't in the right shape to make a Pseudo Console feasible ... until now!&lt;/p&gt;
&lt;p&gt;Windows' new Pseudo Console (ConPTY) infrastructure, API, and several other supporting changes will remedy/facilitate an entire class of issues ... &lt;em&gt;&lt;strong&gt;without breaking or damaging backward compatibility for existing command-line applications&lt;/strong&gt;&lt;/em&gt;!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The new Win32 ConPTY API (formal docs to follow soon) is now available in recent Windows 10 Insider builds and corresponding &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK&quot; target=&quot;_blank&quot;&gt;Windows 10 Insider Preview SDK&lt;/a&gt;, and will ship in the next major release of Windows 10 (due sometime in fall/winter 2018).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;consoleconhosts-architecture&quot;&gt;Console/ConHost's Architecture&lt;/h2&gt;
&lt;p&gt;To understand ConPTY, we have to revisit the architecture of Windows Console ... or more accurately ... ConHost!&lt;/p&gt;
&lt;p&gt;It's important to understand that while ConHost implements what you see and know as the Windows Console application itself, ConHost also contains and implements most of Windows' Command-Line infrastructure! From now on, however, &lt;strong&gt;ConHost also becomes a true &quot;Console Host&quot;&lt;/strong&gt;, supporting all Command-Line applications and/or GUI applications that communicate with Command-Line applications!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;How? Why? What?&lt;/strong&gt;&lt;/em&gt; Let's dig in some more:&lt;/p&gt;
&lt;p&gt;Here's a high-level view of the internal architecture of Console/ConHost:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/command-line-conpty-architecture.png&quot; alt=&quot;Console Architecture including the ConPTY&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Compared to the architecture we outlined in &lt;a target=&quot;_blank&quot; href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/07/20/windows-command-line-inside-the-windows-console/&quot;&gt;the previous &quot;Console Internals&quot; post in this series&lt;/a&gt;, ConHost now contains a few additional modules for handling VT and a new ConPTY module that implements the public API:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;ConPTY API&lt;/strong&gt;: The new Win32 ConPTY API provides a mechanism that is similar to the POSIX PTY model, but in a Windows-relevant manner&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VT Interactivity&lt;/strong&gt;: Receives incoming UTF-8 encoded text, converts each displayable text character into the corresponding &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/console/input-record-str&quot;&gt;&lt;code&gt;INPUT_RECORD&lt;/code&gt;&lt;/a&gt;, and stores them in the Input Buffer. It also handles control sequences such as 0x03 (CTRL+C) converting them into &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/console/key-event-record-str&quot;&gt;&lt;code&gt;KEY_EVENT_RECORDS&lt;/code&gt;&lt;/a&gt; that will effect the corresponding control action&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VT Renderer&lt;/strong&gt;: Generates the VT sequences necessary to move the cursor and render the text and styling in regions of the Output Buffer that have changed since the previous frame&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Okay, but what does this actually mean?&lt;/p&gt;
&lt;h2 id=&quot;how-do-windows-command-line-applications-work&quot;&gt;How Do Windows Command-Line Applications Work?&lt;/h2&gt;
&lt;p&gt;To better understand the impact of the new ConPTY infrastructure, let's consider for a moment how Windows Console and Command-Line applications have worked up until now.&lt;/p&gt;
&lt;p&gt;Whenever a user launches a Command-Line application like Cmd, PowerShell, or ssh, Windows creates a new Win32 process into which it loads the app's executable binary file, and any dependencies (resources or libraries).&lt;/p&gt;
&lt;p&gt;The newly created process usually inherits the stdin and stdout handles from its parent. If the parent was a Windows GUI process, there are no stdin and stdout handles and so Windows will spin up and attach the new app to a new Console instance. Communications between Command-Line apps and their Console are transported via ConDrv.&lt;/p&gt;
&lt;p&gt;For example, if launched from a non-elevated PowerShell instance, the new app process will inherit its parent's stdin/stdout handles and will therefore receive input from and emit output to the same Console as the parent.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a little &quot;hand-waving&quot; going on here as there are cases where Command-Line apps are launched attached to a &lt;em&gt;new&lt;/em&gt; Console instance, especially for security reasons, but the cases described above are generally true.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ultimately, when a Command-Line app/shell is launched, Windows connects it to a Console (ConHost.exe) instance via ConDrv:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/command-line-conpty-1803-console-architecture.png&quot; alt=&quot;Console architecture in Win10 1803&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-does-conhost-work&quot;&gt;How does ConHost work?&lt;/h2&gt;
&lt;p&gt;Whenever a Command-Line application is executed, Windows will connect the app to a new or existing ConHost instance. The app and its Console instance are connected via the kernel-mode Console Driver (ConDrv) which sends/receives IOCTL messages containing serialized API call requests and/or text data.&lt;/p&gt;
&lt;p&gt;Historically, as outlined in prior posts, ConHost's job today is a relatively simple one:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The user generates input via keyboard/mouse/pen/touch which is converted into &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/console/key-event-record-str&quot;&gt;&lt;code&gt;KEY_EVENT_RECORD&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/console/mouse-event-record-str&quot;&gt;&lt;code&gt;MOUSE_EVENT_RECORD&lt;/code&gt;&lt;/a&gt; and stored in the Input Buffer&lt;/li&gt;
&lt;li&gt;The Input Buffer is drained one record at a time and performs the requested input action like draw text on screen, move cursor, copy/paste text, etc. Many of these actions result in the Output Buffer's contents being changed. These changed regions are recorded by ConHost's state engine&lt;/li&gt;
&lt;li&gt;Each frame, the Console renders the OutputBuffer's changed regions to the display&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When a Command-Line app calls Windows Console APIs, the API calls are serialized into IOCTL messages and sent via the ConDrv driver. ConDrv then delivers the IOCTL messages to the attached Console, which decodes and executes the requested API call. Return/output values are serialized back into an IOCTL message and sent back to the app via ConDrv.&lt;/p&gt;
&lt;h2 id=&quot;conhost---investing-in-yesterday-for-tomorrow&quot;&gt;ConHost - Investing in yesterday for tomorrow&lt;/h2&gt;
&lt;p&gt;Microsoft tries, wherever possible, to maintain backward compatibility with existing apps/tools. This is especially true in the Command-Line world. In fact, 32-bit editions of Windows 10 can still run many/most &quot;Win16&quot; 16-bit Windows apps and executables!&lt;/p&gt;
&lt;p&gt;As mentioned above, one of ConHost's key roles is to provide services to Command-Line apps that it hosts, especially legacy apps that call and rely on the Win32 Console API. ConHost now offers some new services:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Seamlessly provide PTY-like infrastructure for communication with modern Consoles and Terminals&lt;/li&gt;
&lt;li&gt;Modernizes legacy/traditional Command-Line Apps
&lt;ul&gt;&lt;li&gt;Receives &amp;amp; converts UTF-8 encoded text/VT into input records (as if typed by user)&lt;/li&gt;
&lt;li&gt;Executes Console API calls for the app it's hosting, updating its &quot;Output Buffer&quot; accordingly&lt;/li&gt;
&lt;li&gt;Renders changed regions of the output buffer as UTF-8 encoded text/VT&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Below is an example of a modern Console app talking via a ConPTY ConHost to a Command-Line app&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/command-line-conpty-bridging.png&quot; alt=&quot;ConPty bridging Traditional and Modern Command-Line apps&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In this new model:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Console:
&lt;ol&gt;&lt;li&gt;Creates its own communication pipes&lt;/li&gt;
&lt;li&gt;Calls the ConPTY API to create a ConPTY causing Windows to spin up a ConHost instance connected to the other end of the pipes&lt;/li&gt;
&lt;li&gt;Creates an instance of the Command-Line app (e.g. PowerShell) attached to ConHost as usual&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;ConHost:
&lt;ol&gt;&lt;li&gt;Reads UTF-8 encoded text/VT input and converts into &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/console/input-record-str&quot;&gt;&lt;code&gt;INPUT_RECORD&lt;/code&gt;&lt;/a&gt; that are sent to the Command-Line app&lt;/li&gt;
&lt;li&gt;Executes API calls from the Command-Line app which may modify the contents of the Output Buffer&lt;/li&gt;
&lt;li&gt;Renders changes in its Output Buffer as UTF-8 encoded text/VT and sends the resulting text to its Console&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Command-Line app:
&lt;ol&gt;&lt;li&gt;Runs as usual, reading input and calling Console APIs without any knowledge that its ConPTY ConHost is translating its input/output from/to UTF-8 encoded text/VT!&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The latter point is important! When a legacy Command-Line app uses a Console API like &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/console/writeconsoleoutput&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;WriteConsoleOutput(...)&lt;/code&gt;&lt;/a&gt;, the specified text is written to the attached ConHost's Output Buffer. Periodically, ConHost renders changed areas of the Output Buffer as text/VT which is sent via stdout back to the Console.&lt;/p&gt;
&lt;p&gt;Ultimately, this means that even traditional Command-Line apps &quot;speak text/VT&quot; externally, &lt;em&gt;&lt;strong&gt;without requiring any changes&lt;/strong&gt;&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;Using the new ConPTY infrastructure, 3rd party Consoles can now communicate directly with modern and traditional Command-Line applications, and speak text/VT with all of them.&lt;/p&gt;
&lt;h2 id=&quot;remoting-windows-command-line-applications&quot;&gt;Remoting Windows Command-Line Applications&lt;/h2&gt;
&lt;p&gt;The mechanism above works great on a single machine, but also helps when you interact with, for example, a PowerShell instance running on a remote Windows machine or in a container&lt;/p&gt;
&lt;p&gt;To run Command-Line applications remotely (i.e. on remote machines, servers, or in containers), there is a challenge: Command-Line apps running on remote machines communicate with a local ConHost instance because IOCTL messages are not designed for use over a network connection. So how does input from a Console running on your client machine get to the remote machine, and how does output from the app running on the remote machine get back to your client Console? Further, what if you're running a Linux or Mac machine that has Terminals, but not Windows-compatible Consoles, and don't understand how Windows Console works?&lt;/p&gt;
&lt;p&gt;So, to remotely operate a Windows machine we need a communications broker of some kind - one that can transparently serialize data across some form of network connection and manage app instance lifetime, etc.&lt;/p&gt;
&lt;p&gt;Something like &lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_Shell&quot; target=&quot;_blank&quot;&gt;ssh&lt;/a&gt;, perhaps?&lt;/p&gt;
&lt;p&gt;Thankfully, &lt;a href=&quot;https://www.openssh.com/&quot; target=&quot;_blank&quot;&gt;OpenSSH&lt;/a&gt; was recently &lt;a href=&quot;https://github.com/PowerShell/Win32-OpenSSH&quot; target=&quot;_blank&quot;&gt;ported to Windows&lt;/a&gt; and &lt;a href=&quot;https://blogs.msdn.microsoft.com/commandline/2018/01/22/openssh-in-windows-10/&quot; target=&quot;_blank&quot;&gt;added as a Windows 10 optional feature&lt;/a&gt;. PowerShell Core has also adopted ssh as one of its supported &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/core-powershell/running-remote-commands&quot; target=&quot;_blank&quot;&gt;PowerShell Core Remoting&lt;/a&gt; protocols. And for those who've invested in Windows PowerShell, &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/core-powershell/running-remote-commands?view=powershell-6#windows-powershell-remoting&quot; target=&quot;_blank&quot;&gt;Windows PowerShell Remoting&lt;/a&gt; is still a viable option.&lt;/p&gt;
&lt;p&gt;Let's consider how &lt;a href=&quot;https://github.com/PowerShell/Win32-OpenSSH&quot; target=&quot;_blank&quot;&gt;OpenSSH for Windows&lt;/a&gt; allows us to remotely operate Windows Command-Line shells and apps today:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/command-line-conpty-remoting-before-pty.png&quot; alt=&quot;Command-Line Remoting Before ConPTY&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Currently, OpenSSH involves some unwanted convolutions:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The user:
&lt;ol&gt;&lt;li&gt;Runs the ssh client and Windows attaches a Console instance as usual&lt;/li&gt;
&lt;li&gt;Types into the Console which sends keystrokes to the ssh clent&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The ssh client:
&lt;ol&gt;&lt;li&gt;Reads input as bytes of text data&lt;/li&gt;
&lt;li&gt;Sends the text data via the network to the listening sshd service&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The sshd service has to jump through several hoops:
&lt;ol&gt;&lt;li&gt;Launches the default shell (i.e. Cmd) which causes Windows to spawn &amp;amp; connect a new Console instance&lt;/li&gt;
&lt;li&gt;Finds &amp;amp; attaches itself to the Cmd instance's Console&lt;/li&gt;
&lt;li&gt;Moves Console off-screen (and/or hides it)&lt;/li&gt;
&lt;li&gt;Sends input data received from ssh client to the off-screen Console as input&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The cmd instance operates as it always has:
&lt;ol&gt;&lt;li&gt;Gathers input delivered by the sshd service&lt;/li&gt;
&lt;li&gt;Does work&lt;/li&gt;
&lt;li&gt;Calls Console APIs to emit/style text, move the cursor, etc.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The attached [off-screen] Console:
&lt;ol&gt;&lt;li&gt;Executes the API calls, updating its output buffer&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The sshd service:
&lt;ol&gt;&lt;li&gt;Scrapes the off-screen Console's output buffer, finds differences, encodes them into text/VT and sends them back to ...&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The ssh client which sends the text back to ...&lt;/li&gt;
&lt;li&gt;The Console, which draws the text on the screen&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Fun, right? No, it's not!&lt;/strong&gt;&lt;/em&gt; There's a lot that can and does go wrong, especially in the process of simulating and sending user-input and scraping the output buffer to/from the off-screen Console. This results in instability, crashes, data corruption, excessive power consumption, etc. Further, not all apps do the work to scrape text properties as well as text itself, which results in text formatting being lost, and remoted applications' text being &quot;monochromatized&quot;!&lt;/p&gt;
&lt;h3 id=&quot;remoting-using-modern-conhost-and-conpty&quot;&gt;Remoting Using Modern ConHost and ConPTY&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Surely we can do better than this?&lt;/strong&gt;&lt;/em&gt; Yes, yes we can - let's make a few architectural changes and use our new ConPTY:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/command-line-conpty-remoting-with-pty.png&quot; alt=&quot;Command-Line Remoting With ConPTY&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In the diagram above, we can see:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The user:
&lt;ol&gt;&lt;li&gt;Runs the ssh client and Windows attaches a Console instance as usual&lt;/li&gt;
&lt;li&gt;Types into the Console which sends keystrokes to the ssh clent&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The ssh client:
&lt;ol&gt;&lt;li&gt;Reads input as bytes of text data&lt;/li&gt;
&lt;li&gt;Sends the text data via the network to the listening sshd service&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The sshd service:
&lt;ol&gt;&lt;li&gt;Creates stdin/stdout pipes&lt;/li&gt;
&lt;li&gt;Calls the ConPTY API to create a ConPTY&lt;/li&gt;
&lt;li&gt;Launches instance of Cmd attached to the other end of the ConPTY. Windows spins-up and attaches a new ConHost instance&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The cmd instance operates as it always has:
&lt;ol&gt;&lt;li&gt;Gathers input&lt;/li&gt;
&lt;li&gt;Does work&lt;/li&gt;
&lt;li&gt;Calls Console APIs to emit/style text, move the cursor, etc.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;The ConPTY ConHost instance:
&lt;ol&gt;&lt;li&gt;Executes the API calls, updating its output buffer&lt;/li&gt;
&lt;li&gt;Renders changed regions of the output buffer as UTF-8 encoded text/VT which is sent back to the Console/Terminal via ssh&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The ConPTY-enabled approach above is clearly much cleaner and simpler for the sshd service. The only Windows Console API calls are being executed entirely within a Command-Line app's ConHost instance which converts any visible changes into text/VT: Nothing ConHost is connected to need know that the app its hosting calls Console APIs rather than generating text/VT itself!&lt;/p&gt;
&lt;p&gt;We think you'll agree that this new ConPTY remoting mechanism results in an elegant, consistent, simpler architecture. Combined with the powerful features built into ConHost, supporting legacy apps, and rendering changes caused by apps calling Console APIs into text/VT, the new ConHost and ConPTY infrastructure helps us carry the past into the future.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The ConPTY API is available in the current &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK&quot; target=&quot;_blank&quot;&gt;Windows 10 Insider Preview SDK&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By now, I am sure you're itching to see some code 😉&lt;/p&gt;
&lt;p&gt;Let's take a look at the API declarations:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-C&quot;&gt;// Creates a &quot;Pseudo Console&quot; (ConPTY).
HRESULT WINAPI CreatePseudoConsole(
                                _In_ COORD size,        // ConPty Dimensions
                                _In_ HANDLE hInput,     // ConPty Input
                                _In_ HANDLE hOutput,    // ConPty Output
                                _In_ DWORD dwFlags,     // ConPty Flags
                                _Out_ HPCON* phPC);     // ConPty Reference

// Resizes the given ConPTY to the specified size, in characters.
HRESULT WINAPI ResizePseudoConsole(_In_ HPCON hPC, _In_ COORD size);

// Closes the ConPTY and all associated handles. Client applications attached 
// to the ConPTY will also terminated. 
VOID WINAPI ClosePseudoConsole(_In_ HPCON hPC);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The ConPTY API above essentially exposes three new functions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;CreatePseudoConsole(size, hInput, hOutput, dwFlags, phPC)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Creates a pty with dimensions of &lt;code&gt;w&lt;/code&gt; columns and &lt;code&gt;h&lt;/code&gt; rows of characters using pipes created by the caller:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: Width and Height (in chars) of the ConPTY buffer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hInput&lt;/code&gt;: For writing input to the PTY, encoded as UTF-8, text/VT sequences&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hOutput&lt;/code&gt;: For reading the output from the PTY, encoded as UTF-8, text/VT sequences&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dwFlags&lt;/code&gt;: Possible values:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;PSEUDOCONSOLE_INHERIT_CURSOR&lt;/code&gt;: The created ConPTY will attempt to inherit the cursor position of the parent Terminal application&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;phPC&lt;/code&gt;: handle to a Console reference for the cerated ConPty&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;: Success/failure. On success, &lt;code&gt;phPC&lt;/code&gt; contains handle to the new ConPty&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ResizePseudoConsole(hPC, size)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Resizes the given ConPTY’s internal buffer to represent a display of the specified character width and height&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ClosePseudoConsole(hPC)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Closes the ConPTY and all associated handles. Client applications attached to the ConPTY will also terminated, as if they were running in a console window that was closed&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;using-the-conpty-api&quot;&gt;Using the ConPTY API&lt;/h2&gt;
&lt;p&gt;Below is a small code example of how to call the ConPTY API to create a Pseudo Console and attach a Command-Line application to the created ConPTY.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: A full implementation of this sample will be published on &lt;a href=&quot;https://github.com/microsoft/console&quot; target=&quot;_blank&quot;&gt;our GitHub Repo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;    // Note: Most error checking removed for brevity.
    
    // ...
    
    // Initializes the specified startup info struct with the required properties and
    // updates its thread attribute list with the specified ConPTY handle
    HRESULT InitializeStartupInfoAttachedToConPTY(STARTUPINFOEX* siEx, HPCON hPC)
    {
        HRESULT hr = E_UNEXPECTED;
        size_t size;

        siEx-&amp;gt;StartupInfo.cb = sizeof(STARTUPINFOEX);
        
        // Create the appropriately sized thread attribute list
        InitializeProcThreadAttributeList(NULL, 1, 0, &amp;amp;size);
        std::unique_ptr&amp;lt;BYTE[]&amp;gt; attrList = std::make_unique&amp;lt;BYTE[]&amp;gt;(size);
        
        // Set startup info's attribute list &amp;amp; initialize it
        siEx-&amp;gt;lpAttributeList = reinterpret_cast&amp;lt;PPROC_THREAD_ATTRIBUTE_LIST&amp;gt;(
            attrList.get());
        bool fSuccess = InitializeProcThreadAttributeList(
            siEx-&amp;gt;lpAttributeList, 1, 0, (PSIZE_T)&amp;amp;size);
            
        if (fSuccess)
        {
            // Set thread attribute list's Pseudo Console to the specified ConPTY
            fSuccess = UpdateProcThreadAttribute(
                            lpAttributeList,
                            0,
                            PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE,
                            hPC,
                            sizeof(HPCON),
                            NULL,
                            NULL);
            return fSuccess ? S_OK : HRESULT_FROM_WIN32(GetLastError());
        }
        else
        {
            hr = HRESULT_FROM_WIN32(GetLastError());
        }
        return hr;
    }
    
    // ...
    
    HANDLE hOut, hIn;
    HANDLE outPipeOurSide, inPipeOurSide;
    HANDLE outPipePseudoConsoleSide, inPipePseudoConsoleSide;
    HPCON hPC = 0;

    // Create the in/out pipes:
    CreatePipe(&amp;amp;inPipePseudoConsoleSide, &amp;amp;inPipeOurSide, NULL, 0);
    CreatePipe(&amp;amp;outPipeOurSide, &amp;amp;outPipePseudoConsoleSide, NULL, 0);

    // Create the Pseudo Console, using the pipes
    CreatePseudoConsole(
        {80, 32}, 
        inPipePseudoConsoleSide, 
        outPipePseudoConsoleSide, 
        0, 
        &amp;amp;hPC);

    // Prepare the StartupInfoEx structure attached to the ConPTY.
    STARTUPINFOEX siEx{};
    InitializeStartupInfoAttachedToConPTY(&amp;amp;siEx, hPC);

    // Create the client application, using startup info containing ConPTY info
    wchar_t* commandline = L&quot;c:\\windows\\system32\\cmd.exe&quot;;
    PROCESS_INFORMATION piClient{};
    fSuccess = CreateProcessW(
                    nullptr,
                    commandline,
                    nullptr,
                    nullptr,
                    TRUE,
                    EXTENDED_STARTUPINFO_PRESENT,
                    nullptr,
                    nullptr,
                    &amp;amp;siEx-&amp;gt;StartupInfo,
                    &amp;amp;piClient);

    // ...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At this point, cmd.exe is running connected to the ConPTY created by &lt;code&gt;CreatePseudoConsole()&lt;/code&gt;. The caller uses the ConPTY's handles that it created to write and read to/from the Cmd instance. The Pseudo Console can be resized by calling &lt;code&gt;ResizePseudoConsole()&lt;/code&gt;, and can be closed by calling &lt;code&gt;ClosePseudoConsole()&lt;/code&gt;:&lt;/p&gt;
&lt;h3 id=&quot;writing-to-pseudo-console&quot;&gt;Writing to Pseudo Console&lt;/h3&gt;
&lt;p&gt;Writing input to the ConPTY is simple:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;// Input &quot;echo Hello, World!&quot;, press enter to have cmd process the command,
//  input an up arrow (to get the previous command), and enter again to execute.
std::string helloWorld = &quot;echo Hello, World!\n\x1b[A\n&quot;;
DWORD dwWritten;
WriteFile(hIn, helloWorld.c_str(), (DWORD)helloWorld.length(), &amp;amp;dwWritten, nullptr);
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;resizing-the-pseudo-console&quot;&gt;Resizing the Pseudo Console&lt;/h3&gt;
&lt;p&gt;This scenario shows how to resize the ConPTY:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;// Suppose some other async callback triggered us to resize.
//      This call will update the Terminal with the size we received.
HRESULT hr = ResizePseudoConsole(hPC, {120, 30});
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;closing-the-pseudo-console&quot;&gt;Closing the Pseudo Console&lt;/h3&gt;
&lt;p&gt;Closing the ConPTY couldn't be simpler:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;ClosePseudoConsole(hPC);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note: Closing the ConPTY will terminate the associated ConHost and any attached clients.&lt;/p&gt;

&lt;p&gt;The introduction of the ConPTY API is perhaps one of the most fundamental, and liberating, changes that's happened to the Windows Command-Line in several years ... if not &lt;em&gt;decades&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;We, the Console team, have already ported some of Microsoft's tools to use the ConPTY API. We're also working with several teams inside Microsoft (Windows Subsystem for Linux (WSL), Windows Containers, VSCode, Visual Studio, etc.), and with several external parties including &lt;a href=&quot;https://twitter.com/maximusConEmu&quot; target=&quot;_blank&quot;&gt;@maximusConEmu&lt;/a&gt; - creator of the awesome &lt;a href=&quot;https://conemu.github.io/&quot; target=&quot;_blank&quot;&gt;ConEmu&lt;/a&gt; 3rd party Console for Windows.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;But we need your help&lt;/strong&gt;&lt;/em&gt; to raise awareness of, and to start adopting the new ConPTY API:&lt;/p&gt;
&lt;h2 id=&quot;command-line-application-developers&quot;&gt;Command-Line Application Developers&lt;/h2&gt;
&lt;p&gt;If you own and/or maintain an existing traditional Windows Command-Line application, you're largely off the hook and don't have much to do: ConHost will do all the work for you - you can continue to depend upon and call the Console API's as you always have, and your app will work just as it always has, while also benefitting from improved, higher-fidelity experience if operated remotely 😃&lt;/p&gt;
&lt;p&gt;But if you'd like to, you can also introduce new VT support gradually or in new feature areas if you wish - the decision is yours.&lt;/p&gt;
&lt;p&gt;If, on the other hand you're currently or are planning on writing &lt;em&gt;&lt;strong&gt;new&lt;/strong&gt;&lt;/em&gt; Windows Command-Line applications, we strongly encourage you to consider simply emitting UTF-8 encoded text/VT instead of calling the Windows Console API: &quot;Speaking VT&quot; will give you access to many features that will not be available via the Windows Console API (e.g. &lt;a href=&quot;https://blogs.msdn.microsoft.com/commandline/2016/09/22/24-bit-color-in-the-windows-console/&quot; target=&quot;_blank&quot;&gt;16M RGB True Color support&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;3rd-party-consoleservice-developers&quot;&gt;3rd Party Console/Service Developers&lt;/h2&gt;
&lt;p&gt;If you're a developer working on a stand-alone Console/Terminal app, or are integrating a Console inside of an application, then we strongly encourage you to explore and adopt the new ConPTY API at your earliest convenience: Adopting the ConPTY API (rather than the older off-screen Console mechanism) is likely to eliminate several classes of bugs, while increasing stability, reliability, and performance.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an example, the VSCode team currently maintains an issue (&lt;a href=&quot;https://github.com/Microsoft/vscode/issues/45693&quot; target=&quot;_blank&quot;&gt;GitHub #45693&lt;/a&gt;) that tracks several issues caused by Windows' current lack of a Pseudo Console.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;detecting-the-conpty-api&quot;&gt;Detecting the ConPTY API&lt;/h2&gt;
&lt;p&gt;The new ConPTY API will be available for the first time in the Autumn/Fall 2018 release of Windows 10.&lt;/p&gt;
&lt;p&gt;If you need to support earlier versions of Windows, then you'll likely need to test at runtime whether the currently running version of Windows supports ConPTY. As with most Win32 API's an effective way to test if an API is present is to use &lt;a target=&quot;_blank&quot;&gt;Runtime Dynamic Linking&lt;/a&gt; approach of calling &lt;a target=&quot;_blank&quot;&gt;&lt;code&gt;LoadLibrary()&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a target=&quot;_blank&quot;&gt;&lt;code&gt;GetProcAddress()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the currently running version of Windows supports ConPTY, your app can find and call the new ConPTY APIs. If not, you'll have to revert to the convoluted mechanisms used until now, as outlined above.&lt;/p&gt;

&lt;p&gt;Another long post ... this is getting to be a habit! Once again, if you've read and followed the post this far, &lt;strong&gt;THANK YOU&lt;/strong&gt;! 😃&lt;/p&gt;
&lt;p&gt;There's a lot to unpack from the information above, but we feel it is important to understand &lt;em&gt;why&lt;/em&gt; we make changes and improvements such as introducing a Pseudo Console API, as well as &lt;em&gt;what&lt;/em&gt; we built. Our goals here are to eradicate an entire class of issues and limitations for developers of Console and server apps, and to make developing code for the Windows Command Line infrastructure more powerful, consistent, and fun.&lt;/p&gt;
&lt;p&gt;We look forward to hearing from you via &lt;a href=&quot;https://insider.windows.com/en-us/how-to-feedback/&quot;&gt;Feedback Hub&lt;/a&gt;. For more complex problems, please file issues on our &lt;a href=&quot;https://github.com/microsoft/console&quot; target=&quot;_blank&quot;&gt;Windows Console GitHub Repo&lt;/a&gt;. And if you have questions, please &lt;a href=&quot;https://twitter.com/richturn_ms&quot; target=&quot;_blank&quot;&gt;ping me on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can't wait to hear about what you build atop the new Pseudo Console API.&lt;/p&gt;
&lt;p&gt;Rich &amp;amp; the Windows Console Team:&lt;br/&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2018/08/Team-Console.png&quot; alt=&quot;Team Console&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 15 Aug 2018 18:50:00 +0000</pubDate>
<dc:creator>mnkypete</dc:creator>
<og:type>article</og:type>
<og:title>Windows Command-Line: Introducing the Windows Pseudo Console (ConPTY)</og:title>
<og:url>http://blogs.msdn.microsoft.com/commandline/?p=3715</og:url>
<og:description>In this, the fourth post in the Windows Command-Line series, we'll discuss the new Windows Pseudo Console (ConPTY) infrastructure and API - why we built it, what it's for, how it works, how to use it, and more.</og:description>
<og:image>https://msdnshared.blob.core.windows.net/media/2018/07/command-line-thompson-richie-teletype.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blogs.msdn.microsoft.com/commandline/2018/08/02/windows-command-line-introducing-the-windows-pseudo-console-conpty/</dc:identifier>
</item>
<item>
<title>Inside the die of Intel&amp;#039;s 8087 coprocessor chip, root of modern floating point</title>
<link>http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html</link>
<guid isPermaLink="true" >http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html</guid>
<description>Looking inside the Intel 8087, an early floating point chip, I noticed an interesting feature on the die: the substrate bias generation circuit. In this article I explain how this circuit is implemented, using analog and digital circuitry to create a negative voltage.
&lt;p&gt;Intel introduced the 8087 chip in 1980 to improve floating-point performance on 8086/8088 computers such as the original IBM PC. Since early microprocessors were designed to operate on integers, arithmetic on floating point numbers was slow, and transcendental operations such as trig or logarithms were even worse. But the 8087 co-processor greatly improved floating point speed, up to 100 times faster. The 8087's architecture became part of later Intel processors, and the 8087's instructions are still a part of today's x86 desktop computers.&lt;span id=&quot;fnref:instructions&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html#fn:instructions&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;I opened up an 8087 chip and took die photos with a &lt;a href=&quot;http://www.righto.com/2015/12/creating-high-resolution-integrated.html&quot;&gt;microscope&lt;/a&gt; yielding the composite photo below. The die of the 8087 is fairly complex, with 40,000 transistors (according to &lt;a href=&quot;https://www.intel.com/content/dam/www/public/us/en/documents/case-studies/floating-point-case-study.pdf&quot;&gt;Intel&lt;/a&gt;) or 45,000 transistors (according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Intel_8087&quot;&gt;Wikipedia&lt;/a&gt;). The photo shows the metal layer of the chip, the connections on top of the chip. The thickest white lines provide power and ground connections to all parts of the chip. Hidden underneath the metal are the polysilicon and silicon that form the chip's transistors. (Click the photo for a large image.)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-bBPPiHPswKE/W3RDsXboQwI/AAAAAAABTmQ/2YEAocwan18oaf9akKBFh7dIMXVpTSx5wCHMYBhgL/w9999/die.jpg&quot;&gt;&lt;img alt=&quot;Die photo of the Intel 8087 floating point coprocessor chip.&quot; class=&quot;hilite&quot; height=&quot;774&quot; src=&quot;https://lh3.googleusercontent.com/-bBPPiHPswKE/W3RDsXboQwI/AAAAAAABTmQ/2YEAocwan18oaf9akKBFh7dIMXVpTSx5wCHMYBhgL/w600/die.jpg&quot; title=&quot;Die photo of the Intel 8087 floating point coprocessor chip.&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Die photo of the Intel 8087 floating point coprocessor chip.&lt;/div&gt;
&lt;p&gt;The bottom half of the chip holds the 80 bit wide arithmetic circuitry: an adder, shifters, mathematical constant storage and registers. The large rectangle in the middle of the chip is the microcode that controls the chip. At the top is control logic and bus circuitry that interfaced with the 8086 processor. (I'll discuss the inner workings of the 8087 in more detail in later blog posts.)&lt;/p&gt;
&lt;p&gt;The black lines around the outside of the die photo are the tiny bond wires connecting the pads on the die to the 40 pins of the chip. By studying the &lt;a href=&quot;https://datasheet.octopart.com/QD8087-Intel-datasheet-38976620.pdf&quot;&gt;8087 datasheet&lt;/a&gt;, it's not too hard to figure out which pad on the die corresponds to each pin of the chip; the chip's 40 pins (numbered counterclockwise) are wired in order to 40 pads on the chip. The diagram below zooms in on the center right part of the die, labeling some of the pads. (Note that the ground and +5V power (Vcc) pads have multiple wires in parallel to carry more current.) However, one puzzle appeared—an extra pad and wire located between pads 40 and 1, not associated with any of the chip's pins.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-79cEqQEwscU/W3RDsVP86mI/AAAAAAABTmQ/Us0cUYqsBYw0q5xBm35NDtTRiJIDFVCsACHMYBhgL/w9999/die-pads.png&quot;&gt;&lt;img alt=&quot;Each pad on the die of the 8087 FPU chip is wired to one of the 40 pins of the chip. But there is one extra wire between pins 1 and 40. It is connected to the chips's substrate.&quot; class=&quot;hilite&quot; height=&quot;383&quot; src=&quot;https://lh3.googleusercontent.com/-79cEqQEwscU/W3RDsVP86mI/AAAAAAABTmQ/Us0cUYqsBYw0q5xBm35NDtTRiJIDFVCsACHMYBhgL/w250/die-pads.png&quot; title=&quot;Each pad on the die of the 8087 FPU chip is wired to one of the 40 pins of the chip. But there is one extra wire between pins 1 and 40. It is connected to the chips's substrate.&quot; width=&quot;250&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Each pad on the die of the 8087 FPU chip is wired to one of the 40 pins of the chip. But there is one extra wire between pins 1 and 40. It is connected to the chips's substrate.&lt;/div&gt;
&lt;p&gt;Looking at the bond wires on the chip (below) revealed that the mystery pad wasn't connected to one of the pins but to a tiny cubical block to the right of the die. Since the cube is on the same metallic base as the die, it connects to the die's underlying silicon, the substrate. I did some reverse-engineering and determined that this is part of the 8087's substrate bias circuit, which uses this connection to put a negative voltage on the substrate. The rest of this blog post explains how this circuit works.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-zNAjZIpOhBM/W3RDsQvjaWI/AAAAAAABTmQ/oxiuFlOFv-wVg6kH3e22-h-hZMwxw1qggCHMYBhgL/w9999/die-in-package.jpg&quot;&gt;&lt;img alt=&quot;The die of the 8087 FPU chip, showing the bond wires from the die to the package.&quot; class=&quot;hilite&quot; height=&quot;346&quot; src=&quot;https://lh3.googleusercontent.com/-zNAjZIpOhBM/W3RDsQvjaWI/AAAAAAABTmQ/oxiuFlOFv-wVg6kH3e22-h-hZMwxw1qggCHMYBhgL/w400/die-in-package.jpg&quot; title=&quot;The die of the 8087 FPU chip, showing the bond wires from the die to the package.&quot; width=&quot;400&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The die of the 8087 FPU chip, showing the bond wires from the die to the package.&lt;/div&gt;
&lt;h2&gt;What is substrate bias?&lt;/h2&gt;
&lt;p&gt;High-density integrated circuits in the 1970s were usually built from NMOS transistors. The diagram below shows the structure of an NMOS transistor. The integrated circuit starts with a silicon substrate, and transistors are built on this. Regions of the silicon are &lt;a href=&quot;https://en.wikipedia.org/wiki/Doping_(semiconductor)&quot;&gt;doped&lt;/a&gt; with impurities to create diffusion regions with desired properties. The transistor can be viewed as a switch, allowing current to flow between two diffusion regions called the source and drain. The transistor is controlled by the gate, made of a special type of silicon called polysilicon. A high signal voltage on the gate lets current flow between the source and drain, while a low signal voltage blocks current flow. An insulating oxide layer separates the gate from the silicon underneath; this insulating layer will be important later. These tiny transistors can be combined to form logic gates, the components of microprocessors and other digital chips.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-ikRkHCdGde8/W3RDsTJCzAI/AAAAAAABTmQ/tmOq0TNeCQsoCZhQdth3LC270G9ykb0jgCHMYBhgL/w9999/mosfet.png&quot;&gt;&lt;img alt=&quot;Structure of a MOSFET as implemented in an integrated circuit.&quot; class=&quot;hilite&quot; height=&quot;201&quot; src=&quot;https://lh3.googleusercontent.com/-ikRkHCdGde8/W3RDsTJCzAI/AAAAAAABTmQ/tmOq0TNeCQsoCZhQdth3LC270G9ykb0jgCHMYBhgL/w400/mosfet.png&quot; title=&quot;Structure of a MOSFET as implemented in an integrated circuit.&quot; width=&quot;400&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Structure of a MOSFET as implemented in an integrated circuit.&lt;/div&gt;
&lt;p&gt;For high-performance integrated circuits, it was beneficial to apply a negative &quot;bias&quot; voltage to the substrate. &lt;span id=&quot;fnref:benefits&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html#fn:benefits&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/span&gt; To obtain this substrate bias voltage, many chips in the 1970s had an external pin that was connected to -5V.&lt;span id=&quot;fnref:memory&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html#fn:memory&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/span&gt; However, engineers didn't like chips that required an inconvenient extra voltage. Even worse, chips of that era often required a third voltage,&lt;span id=&quot;fnref:twelve&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html#fn:twelve&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/span&gt; so systems required three power supplies to support these chips. In addition, the number of pins on ICs was limited (typically just 18 pins for memory chips), so using up two pins for extra voltages was unfortunate. Part of the solution, developed around the end of the &lt;a href=&quot;https://ieeexplore.ieee.org/document/1051477/&quot;&gt;1970s&lt;/a&gt;, was for chips to generate the negative bias voltage internally. The result was chips that used a single convenient +5V supply, making engineers happier.&lt;/p&gt;
&lt;h2&gt;Inside the 8087's substrate bias circuit&lt;/h2&gt;
&lt;p&gt;You might wonder how a chip can turn a positive voltage into a negative voltage. The answer is a circuit called the &lt;a href=&quot;https://en.wikipedia.org/wiki/Charge_pump&quot;&gt;charge pump&lt;/a&gt;, which uses capacitors to generate the desired voltage.&lt;/p&gt;
&lt;p&gt;The 8087's bias generator has two charge pumps working in alternation. The schematics below show the operation of one of the charge pumps. The charge pump is driven by an oscillating signal (Q) and its inverse (&lt;span&gt;Q&lt;/span&gt;). In the first step, the upper transistor is switched on, causing the capacitor to charge to 5 volts with respect to ground. The second step is where the magic happens. The lower transistor turns on, connecting the high side of the capacitor to ground. Since the capacitor is still charged to 5 volts, the low side of the capacitor must now be at -5 volts, producing the desired negative voltage at the output. When the oscillator flips again, the upper transistor is turned on and the cycle repeats.&lt;span id=&quot;fnref:electrons&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html#fn:electrons&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/span&gt; The charge pump gets its name because it pumps charge from the output to ground. If you view the diodes as check valves, the charge pump is analogous to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Piston_pump&quot;&gt;manual water pump&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-P10FPDiNmNY/W3Sif_BSF4I/AAAAAAABTnM/cTS5_YFcrk4Ioghu6-8ZWTUwovCXNAL0ACHMYBhgL/w9999/pump2.png&quot;&gt;&lt;img alt=&quot;Schematic of the charge pump used in the Intel 8087 to provide negative substrate bias.&quot; class=&quot;hilite&quot; height=&quot;250&quot; src=&quot;https://lh3.googleusercontent.com/-P10FPDiNmNY/W3Sif_BSF4I/AAAAAAABTnM/cTS5_YFcrk4Ioghu6-8ZWTUwovCXNAL0ACHMYBhgL/w600/pump2.png&quot; title=&quot;Schematic of the charge pump used in the Intel 8087 to provide negative substrate bias.&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Schematic of the charge pump used in the Intel 8087 to provide negative substrate bias.&lt;/div&gt;
&lt;p&gt;To reverse engineer the charge pump circuitry, I examined the die with a microscope. The metal layer obscures the transistors underneath, making it difficult to see the circuitry. But by dissolving the metal layer with hydrochloric acid, I exposed the polysilicon and silicon layers, revealing the transistors and capacitors, as seen below. (The colorful regions are simply interference patterns due to some oxide that wasn't fully removed.) The die photo below shows the two charge pumps: one to the left of the pad, and one below. Each charge pump matches the schematic above, with two diodes, a large capacitor, and two drive transistors.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-znEedQkabvI/W3RDsWYtTFI/AAAAAAABTmQ/qgx2obFK0yYKgsxzzdtH08IhaXRZXOIRQCHMYBhgL/w9999/labeled-poly.jpg&quot;&gt;&lt;img alt=&quot;The substrate bias circuit of the 8087. The metal layer has been removed in this die photo.&quot; class=&quot;hilite&quot; height=&quot;376&quot; src=&quot;https://lh3.googleusercontent.com/-znEedQkabvI/W3RDsWYtTFI/AAAAAAABTmQ/qgx2obFK0yYKgsxzzdtH08IhaXRZXOIRQCHMYBhgL/w450/labeled-poly.jpg&quot; title=&quot;The substrate bias circuit of the 8087. The metal layer has been removed in this die photo.&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The substrate bias circuit of the 8087. The metal layer has been removed in this die photo.&lt;/div&gt;
&lt;p&gt;The capacitors are the most visible feature of the substrate bias circuitry. Although microscopic, they are huge by chip standards. The area used by the capacitors is about the same as 72 bits of register storage, over 400 transistors. Each capacitor consists of polysilicon over a silicon region, separated by insulating oxide; the polysilicon and silicon form the plates of the capacitor. In the photo, the capacitors are studded with squares; these squares are contacts between the polysilicon or silicon and the metal layer on top. (The metal layer is not visible as it was removed.)&lt;/p&gt;
&lt;p&gt;The four drive transistors are much larger than regular transistors since they must handle high current. The red lines are the polysilicon wires forming the gates. The green lines are contacts to the metal layer, connecting the transistors to +5V or ground. The diodes next to the pad are formed from transistors by connecting the gate and drain together (&lt;a href=&quot;https://electronics.stackexchange.com/a/92386/51939&quot;&gt;details&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The charge pumps are driven by the &lt;a href=&quot;https://en.wikipedia.org/wiki/Ring_oscillator&quot;&gt;ring oscillator&lt;/a&gt; at the bottom of the above image. This ring oscillator consists of five inverters in a loop as shown below. Because the number of inverters is odd, the system is unstable and will oscillate. For instance, if the input to the first inverter is 0, the output from the fifth inverter will be 1. This will flip the first inverter, and the &quot;flip&quot; will travel through the loop causing oscillation. To slow down the oscillation rate, two resistor-capacitor networks are inserted into the ring. Since the capacitors will take some time to charge and discharge, the oscillations will be slowed, giving the charge pump time to operate.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-UyztWpuShtw/W3RDsZQNiCI/AAAAAAABTmQ/tFT5garAdwIyAkomwXLBRx5Ba6wWRN3BACHMYBhgL/w9999/ring.png&quot;&gt;&lt;img alt=&quot;The ring oscillator circuit in the 8087's charge pump.&quot; class=&quot;hilite&quot; height=&quot;281&quot; src=&quot;https://lh3.googleusercontent.com/-UyztWpuShtw/W3RDsZQNiCI/AAAAAAABTmQ/tFT5garAdwIyAkomwXLBRx5Ba6wWRN3BACHMYBhgL/w400/ring.png&quot; title=&quot;The ring oscillator circuit in the 8087's charge pump.&quot; width=&quot;400&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The ring oscillator circuit in the 8087's charge pump.&lt;/div&gt;
&lt;p&gt;Before explaining the ring oscillator, I'll show how a standard NMOS inverter is implemented in silicon. The diagram below shows an inverter, its schematic, and how it appears on the die. The inverter uses a transistor and a pull-up resistor (which is really a transistor). If the input is low, the transistor is off and the pull-up resistor pulls the output to +5V. If the input is high, the transistor is on, pulling the output to ground. Thus, the circuit inverts the input.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-hIyjDroRN94/W3RDsboHfMI/AAAAAAABTmQ/6770F1G9i2cZvD-xXl-hagU2eJJt3y2OACHMYBhgL/w9999/inverter-diagram.png&quot;&gt;&lt;img alt=&quot;How an inverter is implemented with NMOS logic, and how it appears on the chip die.&quot; class=&quot;hilite&quot; height=&quot;216&quot; src=&quot;https://lh3.googleusercontent.com/-hIyjDroRN94/W3RDsboHfMI/AAAAAAABTmQ/6770F1G9i2cZvD-xXl-hagU2eJJt3y2OACHMYBhgL/w600/inverter-diagram.png&quot; title=&quot;How an inverter is implemented with NMOS logic, and how it appears on the chip die.&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;How an inverter is implemented with NMOS logic, and how it appears on the chip die.&lt;/div&gt;
&lt;p&gt;In the die photo above, the inverter's physical layout matches the schematic. The large beige regions are doped silicon. The thinner yellow areas bordered with purple are polysilicon. The input is a polysilicon wire. Where it crosses the doped silicon it forms the gate of a transistor between ground (below the input) and the output (above the input). The pull-up resistor is implemented with a transistor that has the gate and drain tied together; the indicated contact forms this connection between the transistor's polysilicon gate and its silicon drain. The polysilicon also forms the output wire. Thus, an inverter is implemented on the chip with two transistors.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-aOsMvrov0Hg/W3RDsSv6c_I/AAAAAAABTmQ/mMsECTnggSAY94qWDU_DVJ_3t3Qx98P0wCHMYBhgL/w9999/ring-die.png&quot;&gt;&lt;img alt=&quot;The ring oscillator in the 8087 FPU chip, as seen on the die.&quot; class=&quot;hilite&quot; height=&quot;259&quot; src=&quot;https://lh3.googleusercontent.com/-aOsMvrov0Hg/W3RDsSv6c_I/AAAAAAABTmQ/mMsECTnggSAY94qWDU_DVJ_3t3Qx98P0wCHMYBhgL/w500/ring-die.png&quot; title=&quot;The ring oscillator in the 8087 FPU chip, as seen on the die.&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;The ring oscillator in the 8087 FPU chip, as seen on the die.&lt;/div&gt;
&lt;p&gt;The photo above shows how the ring oscillator appears on the die. The five inverters are outlined. Each inverter has a different orientation to optimize the layout, but careful examination shows the same transistor and pull-up structure explained above. The resistors and capacitors for the R-C delays are also indicated. The resistors are simply transistors with a long distance between source and drain, reducing the current flow. These capacitors are constructed like the charge pump capacitors, but are much smaller; the silicon on the bottom and the polysilicon on top form the capacitor plates, separated by the thin insulating oxide layer.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;The substrate bias generator on the 8087 chip is an interesting combination of digital circuitry (a ring oscillator formed from inverters) and an analog charge pump. Substrate bias generator circuits were introduced in the late 1970s, helping memory chips and microprocessors to operate from a single +5V supply, much more convenient than requiring three different voltages. The substrate bias generator produces a negative voltage from the positive supply voltage by using a charge pump.&lt;/p&gt;
&lt;p&gt;While the bias generator may seem like an obscure part of 1970s computer history, bias generation is still part of modern integrated circuits but has become much more complex, with multiple carefully regulated biases in multiple power domains. There is even a standard (&lt;a href=&quot;http://www.techdesignforums.com/practice/guides/unified-power-format-upf/&quot;&gt;IEEE 1801 power format&lt;/a&gt;) that allows IC design tools to generate the necessary circuitry.&lt;span id=&quot;fnref:modernbias&quot;&gt;&lt;a class=&quot;ref&quot; href=&quot;http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html#fn:modernbias&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Likewise, even though Intel's 8087 floating point unit chip was introduced 38 years ago, it still has a large impact today. It spawned the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 floating point standard&lt;/a&gt; used for most modern floating point arithmetic, and the 8087's instructions remain a part of the x86 processors used in most computers.&lt;/p&gt;
&lt;p&gt;I'll end with one more 8087 die photo; this one shows the polysilicon and silicon after stripping off the metal. You may recognize the substrate bias generator circuit at the center right. (Click for a large image.)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-7S_Q0bzu-7A/W3RDsZwprvI/AAAAAAABTmQ/mUZVqFspfJEzvXyFJdQtA1AOBdKcCFDJACHMYBhgL/w9999/stripped.jpg&quot;&gt;&lt;img alt=&quot;Die photo of the Intel 8087 floating point unit. The metal layer has been stripped off with acid, revealing the polysilicon and silicon underneath.&quot; class=&quot;hilite&quot; height=&quot;772&quot; src=&quot;https://lh3.googleusercontent.com/-7S_Q0bzu-7A/W3RDsZwprvI/AAAAAAABTmQ/mUZVqFspfJEzvXyFJdQtA1AOBdKcCFDJACHMYBhgL/w600/stripped.jpg&quot; title=&quot;Die photo of the Intel 8087 floating point unit. The metal layer has been stripped off with acid, revealing the polysilicon and silicon underneath.&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cite&quot;&gt;Die photo of the Intel 8087 floating point unit. The metal layer has been stripped off with acid, revealing the polysilicon and silicon underneath.&lt;/div&gt;
&lt;p&gt;I announce my latest blog posts on Twitter, so follow me at &lt;a href=&quot;https://twitter.com/kenshirriff&quot;&gt;@kenshirriff&lt;/a&gt; for future 8087 articles. I also have an &lt;a href=&quot;http://www.righto.com/feeds/posts/default&quot;&gt;RSS feed&lt;/a&gt;. Thanks to Ed Spittles and Eric Smith for comments.&lt;/p&gt;
&lt;h2&gt;Notes and references&lt;/h2&gt;


</description>
<pubDate>Wed, 15 Aug 2018 17:30:26 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:url>http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html</og:url>
<og:title>Inside the die of Intel's 8087 coprocessor chip, root of modern floating point</og:title>
<og:description>Looking inside the Intel 8087, an early floating point chip, I noticed an interesting feature on the die: the substrate bias generation circ...</og:description>
<og:image>https://lh3.googleusercontent.com/-bBPPiHPswKE/W3RDsXboQwI/AAAAAAABTmQ/2YEAocwan18oaf9akKBFh7dIMXVpTSx5wCHMYBhgL/w1200-h630-p-k-no-nu/die.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html</dc:identifier>
</item>
<item>
<title>Launch HN: The Buttermilk  Company (YC S18) – Homemade Indian Food in 5 Minutes</title>
<link>https://news.ycombinator.com/item?id=17767789</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=17767789</guid>
<description>Hey HN,
&lt;p&gt;I’m Mitra Raman, the founder/CEO of The Buttermilk Company (&lt;a href=&quot;https:///www.thebuttermilkco.com&quot; rel=&quot;nofollow&quot;&gt;https:///www.thebuttermilkco.com&lt;/a&gt;). We help you make authentic, fresh Indian food in 5 minutes by just adding water to our products.&lt;/p&gt;&lt;p&gt;As an Indian-American in my 20s, I grew up eating my mom’s homemade Indian food everyday. When I moved away from home to attend Carnegie Mellon University, I was homesick for the first time and realized how hard it was to find anything that resembled my mom’s food. I either had to make it myself (finding the Indian grocery store + following my mom’s recipe took way too much time) or would settle for whatever generic dishes at the local Indian restaurant. The options were expensive, time-consuming, or tasted horrible.&lt;/p&gt;
&lt;p&gt;Two years into my job as an Software Engineer at Amazon, I asked my mom to help me make her rasam. She gave me all the ingredients in a ziploc bag and told me to just add hot water! I asked my friends about how they coped with homesickness and realized that most parents were also figuring out their own ways of getting their kids’ favorites foods to them when they moved. That’s how the idea for Buttermilk started!&lt;/p&gt;
&lt;p&gt;We crowdsource our recipes from real people (keeping our product truly authentic) and develop them into products that are super easy for our customers to make. If you’ve ever asked your mom to send a family recipe to you, you know how hard it is to get this right! Our team spends hours in the kitchen tweaking each recipe so we can prep and cook it just enough that the customer can complete the cooking with water. We have to be careful to not over-prep such that the taste and nutritional value erode over time.&lt;/p&gt;
&lt;p&gt;We use fresh and non-GMO ingredients, make everything from scratch (seriously, even the garam masala), and deliver our perishable products in sustainable packaging. Our production is extremely detail-oriented and time-consuming because we are recreating recipes for one family into large-scale batches that need to maintain the quality of its original recipe. To improve efficiency, we have built software to track food production, predict incoming volume, and help our production and fulfillment teams communicate. We’re also exploring new shelf-life extension technologies (such as HPP) so our products can last a lot longer. Currently, they must be refrigerated for 5-7 days or frozen for up to 3 months -- if you don’t eat them before then, that is!&lt;/p&gt;
&lt;p&gt;In terms of market size: there are over 4 million Indian immigrants in the U.S. This demographic, like all other ethnic groups, is poorly served by the existing food options when it comes to their cuisines. And of course there is the population of everyone who just likes Indian food and can’t find or make it! Though we are starting with Indian cuisine, we definitely don't plan to stop there. The market for ethnic foods in the U.S. is at least $5B. But in good startup style, we've started with the specific problem we ourselves had.&lt;/p&gt;
&lt;p&gt;We’re super eager to hear your feedback, ideas, and experiences in this space or as it relates to our type of product.&lt;/p&gt;
</description>
<pubDate>Wed, 15 Aug 2018 17:15:42 +0000</pubDate>
<dc:creator>mitraraman</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=17767789</dc:identifier>
</item>
<item>
<title>SQLite – The “server-process-edition” branch</title>
<link>https://sqlite.org/src/artifact/0c6bc6f55191b690</link>
<guid isPermaLink="true" >https://sqlite.org/src/artifact/0c6bc6f55191b690</guid>
<description>&lt;div class=&quot;header&quot;&gt;
&lt;div class=&quot;title&quot;&gt;&lt;img id=&quot;sqlitelogo&quot; src=&quot;https://sqlite.org/src/logo&quot; height=&quot;50&quot;/&gt;&lt;span id=&quot;titlesep&quot;&gt;/&lt;/span&gt; Artifact Content&lt;/div&gt;
&lt;div class=&quot;status&quot;&gt;&lt;a href=&quot;https://sqlite.org/src/login&quot;&gt;Login&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;mainmenu&quot;&gt;&lt;a href=&quot;https://sqlite.org/src/doc/trunk/README.md&quot;&gt;Home&lt;/a&gt; &lt;a href=&quot;https://sqlite.org/src/timeline&quot;&gt;Timeline&lt;/a&gt; &lt;a href=&quot;https://sqlite.org/src/dir?ci=tip&quot;&gt;Files&lt;/a&gt; &lt;a href=&quot;https://sqlite.org/src/brlist&quot;&gt;Branches&lt;/a&gt; &lt;a href=&quot;https://sqlite.org/src/taglist&quot;&gt;Tags&lt;/a&gt; &lt;a href=&quot;https://sqlite.org/src/ticket&quot;&gt;Tickets&lt;/a&gt;&lt;/div&gt;
&lt;form id=&quot;f01&quot; method=&quot;get&quot; action=&quot;/src/artifact&quot;&gt;

&lt;div class=&quot;submenu&quot;&gt;&lt;a class=&quot;label&quot; href=&quot;https://sqlite.org/src/timeline?n=200&amp;amp;uf=0c6bc6f55191b6900595fe37470bbe5772953ab5c64dae967d07a5d58a0c3508&quot;&gt;Check-ins Using&lt;/a&gt; &lt;a class=&quot;label&quot; href=&quot;https://sqlite.org/src/raw/README-server-edition.html?name=0c6bc6f55191b6900595fe37470bbe5772953ab5c64dae967d07a5d58a0c3508&quot;&gt;Download&lt;/a&gt; &lt;a class=&quot;label&quot; href=&quot;https://sqlite.org/src/artifact?name=0c6bc6f55191b690&amp;amp;txt=1&quot;&gt;Text&lt;/a&gt; &lt;label class=&quot;submenuctrl submenuckbox&quot;&gt;&lt;input type=&quot;checkbox&quot; name=&quot;ln&quot; id=&quot;submenuctrl-0&quot;/&gt;Line Numbers&lt;/label&gt;&lt;/div&gt;
&lt;input type=&quot;hidden&quot; name=&quot;name&quot; value=&quot;0c6bc6f55191b690&quot;/&gt;&lt;/form&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;h2&gt;Artifact 0c6bc6f55191b6900595fe37470bbe5772953ab5c64dae967d07a5d58a0c3508:&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;File &lt;a data-href=&quot;/src/finfo?name=README-server-edition.html&amp;amp;m=0c6bc6f55191b690&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;README-server-edition.html&lt;/a&gt; — part of check-in &lt;a class=&quot;timelineHistLink&quot; data-href=&quot;/src/info/fbc4f4ad259cfe04&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;[fbc4f4ad]&lt;/a&gt; at &lt;a data-href=&quot;/src/timeline?c=2017-07-31+19:55:56&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;2017-07-31 19:55:56&lt;/a&gt; on branch &lt;a data-href=&quot;/src/timeline?r=server-process-edition&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;server-process-edition&lt;/a&gt; — Add documentation file ./README-server-edition.html. (user: &lt;a data-href=&quot;/src/timeline?c=2017-07-31+19:55:56&amp;amp;u=dan&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;dan&lt;/a&gt;, size: 9574) &lt;a data-href=&quot;/src/annotate?filename=README-server-edition.html&amp;amp;checkin=fbc4f4ad259cfe04&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;[annotate]&lt;/a&gt; &lt;a data-href=&quot;/src/blame?filename=README-server-edition.html&amp;amp;checkin=fbc4f4ad259cfe04&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;[blame]&lt;/a&gt; &lt;a data-href=&quot;/src/timeline?n=all&amp;amp;uf=0c6bc6f55191b690&quot; href=&quot;https://sqlite.org/src/honeypot&quot;&gt;[check-ins using]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;/div&gt;
&lt;p&gt;This page was generated in about 0.004s by Fossil 2.6 [b0ae37c039] 2018-08-16 12:31:40&lt;/p&gt;
</description>
<pubDate>Wed, 15 Aug 2018 15:29:32 +0000</pubDate>
<dc:creator>yread</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://sqlite.org/src/artifact/0c6bc6f55191b690</dc:identifier>
</item>
</channel>
</rss>