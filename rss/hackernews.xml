<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>You fired your top talent. I hope you’re happy</title>
<link>https://medium.com/@deusexmachina667/you-fired-your-top-talent-i-hope-youre-happy-cf57c41183dd</link>
<guid isPermaLink="true" >https://medium.com/@deusexmachina667/you-fired-your-top-talent-i-hope-youre-happy-cf57c41183dd</guid>
<description>&lt;p name=&quot;d456&quot; id=&quot;d456&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;I recently read a story here titled “&lt;a href=&quot;https://medium.freecodecamp.org/we-fired-our-top-talent-best-decision-we-ever-made-4c0a99728fde?gi=fbc062e62a4&quot; data-href=&quot;https://medium.freecodecamp.org/we-fired-our-top-talent-best-decision-we-ever-made-4c0a99728fde?gi=fbc062e62a4&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;We fired our top talent. Best decision we ever made.&lt;/a&gt;”&lt;/p&gt;
&lt;p name=&quot;fe6b&quot; id=&quot;fe6b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Lets have a seat, you and I. We need to talk. If you haven’t read the story I linked to, take about 10–15 minutes or so, read up, and soak it all in.&lt;/p&gt;
&lt;p name=&quot;c3d4&quot; id=&quot;c3d4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Done? Fantastic. Lets dissect this, because there is so much more than meets the eye here. Presumably, if you have read the story, you understand that the author describes a problem worker that he has dubbed “Rick”. Rick is the local genius with a ton of domain knowledge about their product, and a member of the core development staff for this product.&lt;/p&gt;
&lt;p name=&quot;5827&quot; id=&quot;5827&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;On the surface, this is a story about a tech bro who thinks that he is god’s gift to them, that they should worship the ground he walks on and that they should be thankful for his very presence, and that they booted Rick’s ass out the door because his reputation cashed checks that his talent couldn’t pay for.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*-xOgonQSmYDuMNyv_QveFg.gif&quot; data-width=&quot;500&quot; data-height=&quot;227&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*-xOgonQSmYDuMNyv_QveFg.gif&quot;/&gt;&lt;/div&gt;
TL;DR
&lt;p name=&quot;4760&quot; id=&quot;4760&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Rockstar complexes happen in nearly every field of work imaginable. In case your field of work or study refers to them differently, rockstars are people who think that their shit doesn’t stink, that they’re the best, and that its beneath them to work well and/or play well with others. They sometimes do quality work, and are doted upon by their peers for it, but in reality are hard to manage, hard to handle, and hard to mold into your team dynamics. Just like real rockstars.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*pePkbnfwmUzgMiYlxg21uw.png&quot; data-width=&quot;500&quot; data-height=&quot;700&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*pePkbnfwmUzgMiYlxg21uw.png&quot;/&gt;&lt;/div&gt;
Infosec has an unbearable rockstar problem, but its not an infosec exclusive issue.
&lt;p name=&quot;eac5&quot; id=&quot;eac5&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Personally, I’m of the opinion that if you find these people and you are in the process of interviewing them, regardless of whatever modicum of talent they have, they aren’t worth your time because of the loss of morale and teamwork they bring to the team. This is actually something brought up in the story itself — about how Rick ignored team meetings, and belittled his co-workers. About how after Rick left, productivity soared and they managed to pull together to save the day! The author does this to make you hate Rick, and say “yeah! Screw that guy! Sounds like this group’s management finally grew some balls and told that rockstar to go take a hike! I totally wanna work with these people!”&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*ZSj6aZCijrDXmJtYl4o47A.jpeg&quot; data-width=&quot;1920&quot; data-height=&quot;1080&quot; data-is-featured=&quot;true&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*ZSj6aZCijrDXmJtYl4o47A.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*ZSj6aZCijrDXmJtYl4o47A.jpeg&quot;/&gt;&lt;/div&gt;
Look at my story! I’m going to use pop culture character names and memes and shit to identify with my audience! Whee!
&lt;p name=&quot;b2fa&quot; id=&quot;b2fa&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;If you were paying attention though, there were some troubling things that you might have picked up along the way:&lt;/p&gt;
&lt;p name=&quot;4c5f&quot; id=&quot;4c5f&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p&quot;&gt;“ Any time anyone had a question about code or needed help with a task, they would go to Rick. Rick had a giant whiteboard installed in his office used only for this purpose. It was always cluttered with the ghosts of past discussions that wouldn’t quite erase.&lt;/p&gt;
&lt;p name=&quot;da75&quot; id=&quot;da75&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Any time there was a particularly challenging problem, Rick would handle it.”&lt;/p&gt;
&lt;p name=&quot;4165&quot; id=&quot;4165&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So, right at the very beginning, you can tell that the company is contributing to a culture of dependency on Rick in order to get things done. Rick is our superstar who solves all of our problems, and life is great.&lt;/p&gt;
&lt;p name=&quot;cdc4&quot; id=&quot;cdc4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Where is the documentation?&lt;/p&gt;
&lt;p name=&quot;ebc9&quot; id=&quot;ebc9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Where are the meetings to discuss these issues and how they were resolved?&lt;/p&gt;
&lt;p name=&quot;7bd3&quot; id=&quot;7bd3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Oh, that’s the part that you aren’t being told about, probably because management was so short-sighted. After all, if we have a superstar on-board who can handle all of these problems, Why do we have to worry about documentation and/or continuity of operations if he passes away/gets hit by a bus/gets swallowed by a wormhole/gets a better job offer elsewhere?&lt;/p&gt;
&lt;p name=&quot;1d53&quot; id=&quot;1d53&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If you read in between the lines, it appears that management was complacent to lay problems at Rick’s doorstop, and didn’t care that Rick and/or the team didn’t take time to document the problem and/or resolution.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*gJ0heogfydSF5L9M_wEDAg.jpeg&quot; data-width=&quot;630&quot; data-height=&quot;630&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*gJ0heogfydSF5L9M_wEDAg.jpeg&quot;/&gt;&lt;/div&gt;
At this point, Rick is more like Tyrion Lannister. Sharp as a tack, and quite capable of getting things done. Hopefully doesn’t have an alcoholism problem just yet.
&lt;p name=&quot;c974&quot; id=&quot;c974&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--figure&quot;&gt;“Soon, Rick stopped attending meetings. Rick didn’t have time for meetings any more because there was too much to code.&lt;/p&gt;
&lt;p name=&quot;2b13&quot; id=&quot;2b13&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Rick closed his door. His whiteboard lay fallow. Rick no longer had time to train anyone because he had too much to solve on his own.”&lt;/p&gt;
&lt;p name=&quot;dcff&quot; id=&quot;dcff&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Where is management during all this? Where are the metrics? Because seriously, if there is one thing I’ve learned in my experiences in IT and Information Security is that Management wants metrics.&lt;/p&gt;
&lt;p name=&quot;af12&quot; id=&quot;af12&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Nobody cared that Rick was missing meetings?&lt;/p&gt;
&lt;p name=&quot;20b9&quot; id=&quot;20b9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Nobody was measuring open/closed tickets?&lt;/p&gt;
&lt;p name=&quot;5eac&quot; id=&quot;5eac&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Nobody was on-hand to document issues and their resolution as they happened?&lt;/p&gt;
&lt;p name=&quot;b9b4&quot; id=&quot;b9b4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Nobody noticed that Rick was shutting himself in as he was pouring more and more work on to his own plate?&lt;/p&gt;
&lt;p name=&quot;1a4a&quot; id=&quot;1a4a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;They didn’t notice or like most management, they flat-out didn’t care. Things are working, progress is being made, and our little all-star is saving us money, preventing us from having to ship the codebase overseas, so full steam ahead!&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Sf2IQGSQ4ZYwSer8lzcp8Q.jpeg&quot; data-width=&quot;350&quot; data-height=&quot;447&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Sf2IQGSQ4ZYwSer8lzcp8Q.jpeg&quot;/&gt;&lt;/div&gt;
A thing nobody in management at Rick’s company did — ask themselves WTF is goin’ on.
&lt;p name=&quot;72f8&quot; id=&quot;72f8&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--figure&quot;&gt;“ On our project dashboard, green flags changed to yellow. Yellow changed to red. Red lights started blinking. One by one, task statuses changed to “Impeded.” Everyone was waiting for Rick.”&lt;/p&gt;
&lt;p name=&quot;0137&quot; id=&quot;0137&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p&quot;&gt;“ Rick was churning out code faster than ever. He was working seven-day weeks, twelve hours a day.”&lt;/p&gt;
&lt;p name=&quot;a53d&quot; id=&quot;a53d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So Rick was taking on a much larger workload than he could manage, and in addition to that, was working a 12x7 schedule.&lt;/p&gt;
&lt;p name=&quot;1327&quot; id=&quot;1327&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Nobody said anything when they noticed Rick was in the office or logged in remotely for extended hours for days and weeks on end?&lt;/p&gt;
&lt;p name=&quot;f917&quot; id=&quot;f917&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Management didn’t come in and demand that Rick take a step back and start documenting his shit?&lt;/p&gt;
&lt;p name=&quot;3884&quot; id=&quot;3884&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;No team leaders or managers checked Rick’s ticket/bug load and decided that his workload needed to be distributed?&lt;/p&gt;
&lt;p name=&quot;b242&quot; id=&quot;b242&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Not only that, but management let this shit go on for &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;two solid years&lt;/strong&gt;?&lt;/p&gt;
&lt;p name=&quot;dc48&quot; id=&quot;dc48&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Where in flying fuck &lt;em class=&quot;markup--em markup--p-em&quot;&gt;was&lt;/em&gt; management?&lt;/p&gt;
&lt;p name=&quot;96ab&quot; id=&quot;96ab&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Where were the team leads?&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*00GZCLdcET9QrrJelfP70g.gif&quot; data-width=&quot;256&quot; data-height=&quot;256&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*00GZCLdcET9QrrJelfP70g.gif&quot;/&gt;&lt;/div&gt;
One wonders where leadership is at, at a time like this. But if this is a Silly Valley startup, they’re probably busy huffing Juicero packets or something.
&lt;p name=&quot;91a4&quot; id=&quot;91a4&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--figure&quot;&gt;“ We sat down with Rick and had a conversation about his role in the project…”&lt;/p&gt;
&lt;p name=&quot;bbf2&quot; id=&quot;bbf2&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p&quot;&gt;“How did Rick react to this?&lt;/p&gt;
&lt;p name=&quot;90fc&quot; id=&quot;90fc&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The only way Rick could. Rick exploded.&lt;/p&gt;
&lt;p name=&quot;1cd1&quot; id=&quot;1cd1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Rick wanted no part of this farce. If we couldn’t appreciate his genius, that was our fault, not his. Rick predicted that within months we’d come crawling back to him begging him to save us.”&lt;/p&gt;
&lt;p name=&quot;5cdd&quot; id=&quot;5cdd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Imagine that for months, maybe even years you were considered a lynchpin and a trusted developer for a company. Maybe even responsible for their core product. You have been working 12x7 shifts for who knows how long now. Your checkbook doesn’t seem to reflect that, nobody seems to appreciate it, and the only thing that appears to be happening is that your workload continues to grow, until your grotesque monster of terrible hacks, and undocumented code threatens to stand up and strangle you, not unlike Frankenstein’s monster.&lt;/p&gt;
&lt;p name=&quot;40b2&quot; id=&quot;40b2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Its fine though.&lt;/p&gt;
&lt;p name=&quot;1578&quot; id=&quot;1578&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You’re keeping the ship together. You can come back and fix those hacks later. You can remove those band-aid, improvisational fixes, and replace them with solid workmanship you’d actually be proud of. Not only that, but there are parts of the code you wrote that are starting to become an mystery to even yourself. We’ll come back, disassemble this code, and document it properly. All I have to do is get the product to RTM/GA and I can go back and refine it as necessary. They need me. My work is important. I have to get this done. I can’t fail. We’re running out of funding. I can’t lose this job. Living in $BigCity is too expensive for me to fail.&lt;/p&gt;
&lt;p name=&quot;1a22&quot; id=&quot;1a22&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;What will I do if I fail?&lt;/p&gt;
&lt;p name=&quot;fc97&quot; id=&quot;fc97&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;How will I recover?&lt;/p&gt;
&lt;p name=&quot;c994&quot; id=&quot;c994&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Can I recover?&lt;/p&gt;
&lt;p name=&quot;108c&quot; id=&quot;108c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;And before you know it, you’re being asked to meet management, and being told that all of your work is being scrapped, and that we’re starting over. How might you react? and don’t bullshit me that you would accept it with poise and grace. That you would be fine with having all of your work nuked, all of those 12 hour days hacking away at code for hours blown away. That it was all for naught.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*6soWa4siTavfUJpZsdBxsA.jpeg&quot; data-width=&quot;600&quot; data-height=&quot;450&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*6soWa4siTavfUJpZsdBxsA.jpeg&quot;/&gt;&lt;/div&gt;
Come again?
&lt;p name=&quot;8b31&quot; id=&quot;8b31&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;I can’t speak for any of you, but I would explode with the fury of a thousand suns. I might say some things that I didn’t mean. I might make some comparisons that might not have been… fully accurate. Burning the candle on both ends can do terrible things to one’s mental and physical health. and instead of addressing the concerns like an adult, and maybe telling Rick that he shouldn’t be the sole lynchpin of your organization, talking him off of the cliff, you just fire him because its easier.&lt;/p&gt;
&lt;p name=&quot;99ef&quot; id=&quot;99ef&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;How many days and weeks did he pull 12 hour shifts?&lt;/p&gt;
&lt;p name=&quot;c62d&quot; id=&quot;c62d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;How many family gatherings, birthdays, holidays, etc. did he miss?&lt;/p&gt;
&lt;p name=&quot;de64&quot; id=&quot;de64&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Did he have a family?&lt;/p&gt;
&lt;p name=&quot;d066&quot; id=&quot;d066&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Did he have friends outside of work?&lt;/p&gt;
&lt;p name=&quot;dfb8&quot; id=&quot;dfb8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;A loved one?&lt;/p&gt;
&lt;p name=&quot;1604&quot; id=&quot;1604&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Children?&lt;/p&gt;
&lt;p name=&quot;000a&quot; id=&quot;000a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Startup culture doesn’t ask these questions because startup culture (and most of IT culture for that matter) doesn’t care about your well-being. Only the work you produce, and having their liabilities limited, in the event they have to fire you.&lt;/p&gt;
&lt;p name=&quot;6660&quot; id=&quot;6660&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’ve been fired before during situations that were less than ideal that I did not think were fair. And while being free from an environment that doesn’t like how you do things and/or doesn’t do things in a way that you feel is conducive is a wonderful feeling, the not-so-wonderful feeling of inadequacy, and having to explain why you left your former position under not-so-friendly terms could be a terrible stigma to deal with when looking for new employment.&lt;/p&gt;
&lt;p name=&quot;a3fc&quot; id=&quot;a3fc&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;That feeling of freedom begins to dwindle as you see your savings account rapidly deplete (Given that the author and the author’s company are in California, where the cost of living is absolutely ridiculous, probably depleting way more rapidly than one would like) and quickly turns into dread as those questions you had while you were working come back to haunt you:&lt;/p&gt;
&lt;p name=&quot;e072&quot; id=&quot;e072&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Can you find work in a timely manner?&lt;/p&gt;
&lt;p name=&quot;ab9b&quot; id=&quot;ab9b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Is this going to be what breaks you?&lt;/p&gt;
&lt;p name=&quot;8f04&quot; id=&quot;8f04&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Why did they fire you when you gave them everything?&lt;/p&gt;
&lt;p name=&quot;3eef&quot; id=&quot;3eef&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Why did nobody fight to keep you on-board?&lt;/p&gt;
&lt;p name=&quot;7241&quot; id=&quot;7241&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;They refer to Rick as transforming from Dr. Jekyll to Mr. Hyde, and his descent over time. Obviously, his co-workers noticed. Maybe they even reported his remarks or his unwillingness to work with others to management. They could’ve nipped this in the bud earlier. They could’ve told Rick to take a step back, and start sharing the burden with his co-workers.&lt;/p&gt;
&lt;p name=&quot;8dc4&quot; id=&quot;8dc4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The article doesn’t specify what they did or didn’t do from the company’s end during all of these problems, but judging by the tone, it appears as though they kept placing their problems at Rick’s door, causing the pressure to continue to mount, while not allowing or advising Rick to take time off to recuperate and/or redistrute the workload.&lt;/p&gt;
&lt;p name=&quot;44f5&quot; id=&quot;44f5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Instead, they played Rick like a fiddle, burned out all of his talent and skill, and once Rick was considered damaged goods, kicked his ass to the curb for the good of the company’s productivity. How brave! How heroic!&lt;/p&gt;
&lt;p name=&quot;82f6&quot; id=&quot;82f6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The original article claims that firing Rick was the best decision they ever made, but at the end of the day, they lost someone with tons of domain-specific knowledge, someone who worked with the clients to prototype the requirements they desired, and ended up being forced to ship an inferior product with even more of a pushback as they re-invented Rick’s work, complaining about the shitty code. All the while, they remained totally oblivious to the burdens this man was bearing to keep it all together.&lt;/p&gt;
&lt;p name=&quot;9877&quot; id=&quot;9877&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Instead of the article being a story about how they stopped this man’s descent into burnout via intervention, outstanding teamwork, and competent management, something that IT, Infosec, and Developers REALLY need to hear, they decided to focus on the toxic environment and problems in which seemed to stem from Rick. Instead of tackling the root cause of the issue (hey man, whats eating you?), they opted for the quick and easy fix (Hey Rick, GTFO!). Par for the course, as far as I can tell.&lt;/p&gt;
</description>
<pubDate>Mon, 16 Oct 2017 11:55:34 +0000</pubDate>
<dc:creator>ech</dc:creator>
<og:title>You fired your top talent. I hope you’re happy. – Tony Robinson – Medium</og:title>
<og:url>https://medium.com/@deusexmachina667/you-fired-your-top-talent-i-hope-youre-happy-cf57c41183dd</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*ZSj6aZCijrDXmJtYl4o47A.jpeg</og:image>
<og:description>I recently read a story here titled “We fired our top talent. Best decision we ever made.”</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@deusexmachina667/you-fired-your-top-talent-i-hope-youre-happy-cf57c41183dd</dc:identifier>
</item>
<item>
<title>Key Reinstallation Attacks – Breaking WPA2 by Forcing Nonce Reuse</title>
<link>https://www.krackattacks.com/</link>
<guid isPermaLink="true" >https://www.krackattacks.com/</guid>
<description>&lt;h2 class=&quot;firsttitle&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;We discovered serious weaknesses in WPA2, a protocol that secures all modern protected Wi-Fi networks. An attacker within range of a victim can exploit these weaknesses using &lt;u&gt;k&lt;/u&gt;ey &lt;u&gt;r&lt;/u&gt;einstallation &lt;u&gt;a&lt;/u&gt;tta&lt;u&gt;ck&lt;/u&gt;s (KRACKs). Concretely, attackers can use this novel attack technique to read information that was previously assumed to be safely encrypted. This can be abused to steal sensitive information such as credit card numbers, passwords, chat messages, emails, photos, and so on. &lt;strong&gt;The attack works against all modern protected Wi-Fi networks&lt;/strong&gt;. Depending on the network configuration, it is also possible to inject and manipulate data. For example, an attacker might be able to inject ransomware or other malware into websites.&lt;/p&gt;
&lt;p&gt;The weaknesses are in the Wi-Fi standard itself, and not in individual products or implementations. Therefore, any correct implementation of WPA2 is likely affected. To prevent the attack, users must update affected products as soon as security updates become available. Note that &lt;strong&gt;if your device supports Wi-Fi, it is most likely affected&lt;/strong&gt;. During our initial research, we discovered ourselves that Android, Linux, Apple, Windows, OpenBSD, MediaTek, Linksys, and others, are all affected by some variant of the attacks. For more information about specific products, consult the &lt;a href=&quot;https://www.kb.cert.org/vuls/byvendor?searchview&amp;amp;Query=FIELD+Reference=228519&amp;amp;SearchOrder=4&quot;&gt;database of CERT/CC&lt;/a&gt;, or contact your vendor.&lt;/p&gt;
&lt;p&gt;The research behind the attack will be presented at the &lt;a href=&quot;https://acmccs.github.io/session-F3/&quot;&gt;Computer and Communications Security (CCS)&lt;/a&gt; conference, and at the &lt;a href=&quot;https://www.blackhat.com/eu-17/briefings/schedule/#key-reinstallation-attacks-breaking-the-wpa2-protocol-8861&quot;&gt;Black Hat Europe&lt;/a&gt; conference. Our &lt;a href=&quot;https://www.krackattacks.com/#paper&quot;&gt;detailed research paper&lt;/a&gt; can already be downloaded.&lt;/p&gt;

&lt;h2&gt;Demonstration&lt;/h2&gt;
&lt;p&gt;As a proof-of-concept we executed a key reinstallation attack against an Android smartphone. In this demonstration, the attacker is able to decrypt all data that the victim transmits. For an attacker this is easy to accomplish, because our key reinstallation attack is exceptionally devastating against Linux and Android 6.0 or higher. This is because &lt;strong&gt;Android and Linux can be tricked into (re)installing an all-zero encryption key&lt;/strong&gt; (&lt;a href=&quot;https://www.krackattacks.com/#details-android&quot;&gt;see below for more info&lt;/a&gt;). When attacking other devices, it is harder to decrypt all packets, although a large number of packets can nevertheless be decrypted. In any case, the following demonstration highlights the type of information that an attacker can obtain when performing key reinstallation attacks against protected Wi-Fi networks:&lt;/p&gt;

&lt;p&gt;Our attack is not limited to recovering login credentials (i.e. e-mail addresses and passwords). In general, any data or information that the victim transmits can be decrypted. Additionally, depending on the device being used and the network setup, it is also possible to decrypt data sent towards the victim (e.g. the content of a website). Although websites or apps may use HTTPS as an additional layer of protection, we warn that this extra protection can (still) be bypassed in a worrying number of situations.  For example, HTTPS was previously bypassed in &lt;a href=&quot;https://pdfs.semanticscholar.org/48fc/8f1aa0b6d1e4266b8017820ff8770fb67b6f.pdf&quot;&gt;non-browser software&lt;/a&gt;, in &lt;a href=&quot;https://www.imperialviolet.org/2014/02/22/applebug.html&quot;&gt;Apple's iOS and OS X&lt;/a&gt;, in &lt;a href=&quot;https://arstechnica.com/information-technology/2015/04/android-apps-still-suffer-game-over-https-defects-7-months-later/&quot;&gt;Android apps&lt;/a&gt;, in &lt;a href=&quot;https://arxiv.org/ftp/arxiv/papers/1505/1505.00589.pdf&quot;&gt;Android apps again&lt;/a&gt;, in &lt;a href=&quot;http://blog.ioactive.com/2014/01/personal-banking-apps-leak-info-through.html&quot;&gt;banking apps&lt;/a&gt;, and even in &lt;a href=&quot;https://arstechnica.com/information-technology/2017/01/majority-of-android-vpns-cant-be-trusted-to-make-users-more-secure/&quot;&gt;VPN apps&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Our main attack is against the 4-way handshake of the WPA2 protocol. This handshake is executed when a client wants to join a protected Wi-Fi network, and is used to confirm that both the client and access point possess the correct credentials (e.g. the pre-shared password of the network). At the same time, the 4-way handshake also negotiates a fresh encryption key that will be used to encrypt all subsequent traffic. Currently, all modern protected Wi-Fi networks use the 4-way handshake. This implies all these networks are affected by (some variant of) our attack. For instance, the attack works against personal and enterprise Wi-Fi networks, against the older WPA and the latest WPA2 standard, and even against networks that only use AES.  &lt;strong&gt;All our attacks against WPA2 use a novel technique called a key reinstallation attack (KRACK):&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Key reinstallation attacks: high level description&lt;/h3&gt;
&lt;p&gt;In a key reinstallation attack, the adversary tricks a victim into reinstalling an already-in-use key. This is &lt;strong&gt;achieved by manipulating and replaying cryptographic handshake messages&lt;/strong&gt;. When the victim reinstalls the key, associated parameters such as the incremental transmit packet number (i.e. nonce) and receive packet number (i.e. replay counter) are reset to their initial value. Essentially, to guarantee security, a key should only be installed and used once. Unfortunately, we found this is not guaranteed by the WPA2 protocol. By manipulating cryptographic handshakes, we can abuse this weakness in practice.&lt;/p&gt;
&lt;h3&gt;Key reinstallation attacks: concrete example against the 4-way handshake&lt;/h3&gt;
&lt;p&gt;As described in the &lt;a href=&quot;https://www.krackattacks.com/#paper&quot;&gt;introduction of the research paper&lt;/a&gt;, the idea behind a key reinstallation attack can be summarized as follows. When a client joins a network, it executes the 4-way handshake to negotiate a fresh encryption key. It will install this key after receiving message 3 of the 4-way handshake. Once the key is installed, it will be used to encrypt normal data frames using an encryption protocol. However, because messages may be lost or dropped, the Access Point (AP) will retransmit message 3 if it did not receive an appropriate response as acknowledgment. As a result, the client may receive message 3 multiple times. Each time it receives this message, it will reinstall the same encryption key, and thereby reset the incremental transmit packet number (nonce) and receive replay counter used by the encryption protocol. We show that &lt;strong&gt;an attacker can force these nonce resets by collecting and replaying retransmissions of message 3 of the 4-way handshake&lt;/strong&gt;. By forcing nonce reuse in this manner, the encryption protocol can be attacked, e.g., packets can be replayed, decrypted, and/or forged. The same technique can also be used to attack the group key, PeerKey, TDLS, and fast BSS transition handshake.&lt;/p&gt;
&lt;h3&gt;Practical impact&lt;/h3&gt;
&lt;p&gt;In our opinion, the most widespread and practically impactful attack is the key reinstallation attack against the 4-way handshake. We base this judgement on two observations. First, during our own research we found that most clients were affected by it. Second, adversaries can use this attack to decrypt packets sent by clients, allowing them to intercept sensitive information such as passwords or cookies. Decryption of packets is possible because a key reinstallation attack causes the transmit nonces (sometimes also called packet numbers or initialization vectors) to be reset to zero. As a result, &lt;strong&gt;the same encryption key is used with nonce values that have already been used in the past&lt;/strong&gt;. In turn, this causes all encryption protocols of WPA2 to reuse &lt;a href=&quot;https://en.wikipedia.org/wiki/Keystream&quot;&gt;keystream&lt;/a&gt; when encrypting packets. In case a message that reuses keystream has known content, it becomes trivial to derive the used keystream. This keystream can then be used to decrypt messages with the same nonce. When there is no known content, it is harder to decrypt packets, although still possible in several cases (e.g. &lt;a href=&quot;https://crypto.stackexchange.com/a/2250&quot;&gt;English text can still be decrypted&lt;/a&gt;).  In practice, finding packets with known content is not a problem, so it should be assumed that any packet can be decrypted.&lt;/p&gt;
&lt;p&gt;The ability to decrypt packets can be used to decrypt TCP SYN packets. This allows an adversary to obtain the TCP sequence numbers of a connection, and &lt;a href=&quot;https://en.wikipedia.org/wiki/TCP_sequence_prediction_attack&quot;&gt;hijack TCP connections&lt;/a&gt;. As a result, even though WPA2 is used, the adversary can now perform one of the most common attacks against open Wi-Fi networks: injecting malicious data into unencrypted HTTP connections. For example, an attacker can abuse this to inject ransomware or malware into websites that the victim is visiting.&lt;/p&gt;
&lt;p&gt;If the victim uses either the WPA-TKIP or GCMP encryption protocol, instead of AES-CCMP, the impact is especially catastrophic. &lt;strong&gt;Against these encryption protocols, nonce reuse enables an adversary to not only decrypt, but also to forge and inject packets&lt;/strong&gt;. Moreover, because GCMP uses the same authentication key in both communication directions, and this key can be recovered if nonces are reused, it is especially affected. Note that support for GCMP is currently being rolled out under the name Wireless Gigabit (WiGig), and is expected to be &lt;a href=&quot;http://www.grandviewresearch.com/press-release/global-wireless-gigabit-wigig-market&quot;&gt;adopted at a high rate&lt;/a&gt; over the next few years.&lt;/p&gt;
&lt;p&gt;The direction in which packets can be decrypted (and possibly forged) depends on the handshake being attacked. Simplified, when attacking the 4-way handshake, we can decrypt (and forge) packets sent &lt;em&gt;by&lt;/em&gt; the client. When attacking the Fast BSS Transition (FT) handshake, we can decrypt (and forge) packets sent &lt;em&gt;towards&lt;/em&gt; the client. Finally, most of our attacks also allow the replay of unicast, broadcast, and multicast frames. For further details, see Section 6 of &lt;a href=&quot;https://www.krackattacks.com/#paper&quot;&gt;our research paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that our attacks &lt;strong&gt;do not recover the password of the Wi-Fi network&lt;/strong&gt;. They also do not recover (any parts of) the fresh encryption key that is negotiated during the 4-way handshake.&lt;/p&gt;

&lt;h3&gt;Android and Linux&lt;/h3&gt;
&lt;p&gt;Our attack is especially catastrophic against version 2.4 and above of wpa_supplicant, a Wi-Fi client commonly used on Linux. Here, the client will install an all-zero encryption key instead of reinstalling the real key. This vulnerability appears to be caused by a remark in the Wi-Fi standard that suggests to clear the encryption key from memory once it has been installed for the first time. When the client now receives a retransmitted message 3 of the 4-way handshake, it will reinstall the now-cleared encryption key, effectively installing an all-zero key. Because Android uses wpa_supplicant, Android 6.0 and above also contains this vulnerability. This makes it &lt;strong&gt;trivial to intercept and manipulate traffic sent by these Linux and Android devices&lt;/strong&gt;.  Note that currently &lt;a href=&quot;https://developer.android.com/about/dashboards/index.html&quot;&gt;41% of Android devices&lt;/a&gt; are vulnerable to this exceptionally devastating variant of our attack.&lt;/p&gt;
&lt;h3&gt;Assigned CVE identifiers&lt;/h3&gt;
&lt;p&gt;The following Common Vulnerabilities and Exposures (CVE) identifiers were assigned to track which products are affected by specific instantiations of our key reinstallation attack:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13077&quot;&gt;CVE-2017-13077&lt;/a&gt;: Reinstallation of the pairwise encryption key (PTK-TK) in the 4-way handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13078&quot;&gt;CVE-2017-13078&lt;/a&gt;: Reinstallation of the group key (GTK) in the 4-way handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13079&quot;&gt;CVE-2017-13079&lt;/a&gt;: Reinstallation of the integrity group key (IGTK) in the 4-way handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13080&quot;&gt;CVE-2017-13080&lt;/a&gt;: Reinstallation of the group key (GTK) in the group key handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13081&quot;&gt;CVE-2017-13081&lt;/a&gt;: Reinstallation of the integrity group key (IGTK) in the group key handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13082&quot;&gt;CVE-2017-13082&lt;/a&gt;: Accepting a retransmitted Fast BSS Transition (FT) Reassociation Request and reinstalling the pairwise encryption key (PTK-TK) while processing it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13084&quot;&gt;CVE-2017-13084&lt;/a&gt;: Reinstallation of the STK key in the PeerKey handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13086&quot;&gt;CVE-2017-13086&lt;/a&gt;: reinstallation of the Tunneled Direct-Link Setup (TDLS) PeerKey (TPK) key in the TDLS handshake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13087&quot;&gt;CVE-2017-13087&lt;/a&gt;: reinstallation of the group key (GTK) when processing a Wireless Network Management (WNM) Sleep Mode Response frame.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-13088&quot;&gt;CVE-2017-13088&lt;/a&gt;: reinstallation of the integrity group key (IGTK) when processing a Wireless Network Management (WNM) Sleep Mode Response frame.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that each CVE identifier represents a specific instantiation of a key reinstallation attack. This means each CVE ID describes a specific protocol vulnerability, and therefore &lt;strong&gt;many vendors are affected by each individual CVE ID&lt;/strong&gt;. You can also read &lt;a href=&quot;https://www.kb.cert.org/vuls/id/228519&quot;&gt;vulnerability note VU#228519&lt;/a&gt; of CERT/CC for additional details on which products are known to be affected.&lt;/p&gt;

&lt;h2&gt;Paper&lt;/h2&gt;
&lt;p&gt;Our research paper behind the attack is titled &lt;a href=&quot;https://papers.mathyvanhoef.com/ccs2017.pdf&quot;&gt;Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2&lt;/a&gt; and will be presented at the &lt;a href=&quot;https://www.sigsac.org/ccs/CCS2017/&quot;&gt;Computer and Communications Security (CCS)&lt;/a&gt; conference on &lt;a href=&quot;https://acmccs.github.io/session-F3/&quot;&gt;Wednesday 1 November 2017&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Although this paper is made public now, it was already submitted for review on 19 May 2017. After this, only minor changes were made. As a result, the findings in the paper are already several months old. In the meantime, we have found easier techniques to carry out our key reinstallation attack against the 4-way handshake. With our novel attack technique, it is now trivial to exploit implementations that only accept encrypted retransmissions of message 3 of the 4-way handshake. In particular this means that &lt;strong&gt;attacking macOS and OpenBSD is significantly easier than discussed in the paper&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We would like to highlight the following addendums and errata:&lt;/p&gt;
&lt;h3&gt;Addendum: wpa_supplicant v2.6 and Android 6.0+&lt;/h3&gt;
&lt;p&gt;Linux's wpa_supplicant v2.6 is also vulnerable to the installation of an all-zero encryption key in the 4-way handshake. This was discovered by John A. Van Boxtel. As a result, all Android versions higher than 6.0 are also affected by the attack, and hence can be tricked into installing an all-zero encryption key. The new attack works by injecting a forged message 1, with the same ANonce as used in the original message 1, before forwarding the retransmitted message 3 to the victim. &lt;/p&gt;
&lt;h3&gt;Addendum: other vulnerable handshakes&lt;/h3&gt;
&lt;p&gt;After our initial research as reported in the paper, we discovered that the TDLS handshake and WNM Sleep Mode Response frame are also vulnerable to key reinstallation attacks.&lt;/p&gt;
&lt;h3&gt;Selected errata&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;In Figure 9 at stage 3 of the attack, the frame transmitted from the adversary to the authenticator should say a ReassoReq instead of ReassoResp.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;We have made scripts to detect whether an implementation of the 4-way handshake, group key handshake, or Fast BSS Transition (FT) handshake is vulnerable to key reinstallation attacks. These scripts will be released once we had the time to clean up their usage instructions.&lt;/p&gt;
&lt;p&gt;We also made a proof-of-concept script that exploits the all-zero key (re)installation present in certain Android and Linux devices. This script is the one that we used in the &lt;a href=&quot;https://www.krackattacks.com/#demo&quot;&gt;demonstration video&lt;/a&gt;. It will be released once everyone had a reasonable chance to update their devices (and we have had a chance to prepare the code repository for release). We remark that the reliability of our proof-of-concept script may depend on how close the victim is to the real network. If the victim is very close to the real network, the script may fail because the victim will always directly communicate with the real network, even if the victim is (forced) on a different Wi-Fi channel than this network.&lt;/p&gt;

&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt;
&lt;h3 class=&quot;firsttitle&quot;&gt;Do we now need WPA3?&lt;/h3&gt;
&lt;p&gt;No, luckily &lt;strong&gt;implementations can be patched in a backwards-compatible manner&lt;/strong&gt;. This means a patched client can still communicate with an unpatched access point, and vice versa. In other words, a patched client or access points sends exactly the same handshake messages as before, and at exactly the same moments in time. However, the security updates will assure a key is only installed once, preventing our attacks. So again, update all your devices once security updates are available.&lt;/p&gt;

&lt;h3&gt;Should I change my Wi-Fi password?&lt;/h3&gt;
&lt;p&gt;Changing the password of your Wi-Fi network does not prevent (or mitigate) the attack. So you do not have to update the password of your Wi-Fi network. Instead, you should make sure all your devices are updated, and you should also update the firmware of your router. After updating your router, you can &lt;em&gt;optionally&lt;/em&gt; change the Wi-Fi password as an extra precaution.&lt;/p&gt;
&lt;h3&gt;I'm using WPA2 with only AES. That's also vulnerable?&lt;/h3&gt;
&lt;p&gt;Yes, that network configuration is also vulnerable. The attack works against both WPA1 and WPA2, against personal and enterprise networks, and against any cipher suite being used (WPA-TKIP, AES-CCMP, and GCMP). So everyone should update their devices to prevent the attack!&lt;/p&gt;
&lt;h3&gt;You use the word &quot;we&quot; in this website. Who is we?&lt;/h3&gt;
&lt;p&gt;I use the word &quot;we&quot; because that's what I'm used to writing in papers. In practice, all the work is done by me, with me being Mathy Vanhoef. My awesome supervisor is added under an &lt;a href=&quot;https://en.wikipedia.org/wiki/Academic_authorship#Honorary_authorship&quot;&gt;honorary authorship&lt;/a&gt; to the research paper for his excellent general guidance. But all the real work was done on my own. So the &lt;a href=&quot;http://phdcomics.com/comics.php?f=562&quot;&gt;author list&lt;/a&gt; of academic papers does not represent &lt;a href=&quot;https://imgur.com/a/mKnnu&quot;&gt;division of work&lt;/a&gt; :)&lt;/p&gt;
&lt;h3&gt;Is my device vulnerable?&lt;/h3&gt;
&lt;p&gt;Probably. Any device that uses Wi-Fi is likely vulnerable. Contact your vendor for more information.&lt;/p&gt;
&lt;h3&gt;What if there are no security updates for my router?&lt;/h3&gt;
&lt;p&gt;Our main attack is against the 4-way handshake, and does not exploit access points, but instead targets clients. So it might be that your router does not require security updates. We strongly advise you to contact your vendor for more details. In general though, you can try to mitigate attacks against routers and access points by disabling client functionality (which is for example used in repeater modes) and disabling 802.11r (fast roaming). For ordinary home users, your priority should be updating clients such as laptops and smartphones.&lt;/p&gt;
&lt;h3&gt;How did you discover these vulnerabilities?&lt;/h3&gt;
&lt;p&gt;When working on the final (i.e. camera-ready) version of &lt;a href=&quot;https://lirias.kuleuven.be/bitstream/123456789/572634/1/asiaccs2017.pdf&quot;&gt;another paper&lt;/a&gt;, I was double-checking some claims we made regarding OpenBSD's implementation of the 4-way handshake. In a sense I was slacking off, because I was supposed to be just finishing the paper, instead of staring at code. But there I was, inspecting some code I already read a hundred times, to avoid having to work on the next paragraph. It was at that time that a particular call to &lt;a href=&quot;https://github.com/openbsd/src/blob/ca7fda7e2ae9fcf15b882d71bc910143e6b0d09b/sys/net80211/ieee80211_pae_input.c#L519&quot;&gt;ic_set_key&lt;/a&gt; caught my attention. This function is called when processing message 3 of the 4-way handshake, and it installs the pairwise key to the driver. While staring at that line of code I thought &lt;em&gt;“Ha. I wonder what happens if that function is called twice”&lt;/em&gt;. At the time I (correctly) guessed that calling it twice might reset the nonces associated to the key. And since message 3 can be retransmitted by the Access Point, in practice it might indeed be called twice. &lt;em&gt;“Better make a note of that. Other vendors might also call such a function twice. But let's first finish this paper...”&lt;/em&gt;. A few weeks later, after finishing the paper and completing some other work, I investigated this new idea in more detail. And the rest is history.&lt;/p&gt;
&lt;h3&gt;The 4-way handshake was mathematically proven as secure. How is your attack possible?&lt;/h3&gt;
&lt;p&gt;The brief answer is that the formal proof does not assure a key is installed once. Instead, it only assures the negotiated key remains secret, and that handshake messages cannot be forged.&lt;/p&gt;
&lt;p&gt;The longer answer is mentioned in &lt;a href=&quot;https://www.krackattacks.com/#paper&quot;&gt;the introduction of our research paper&lt;/a&gt;: our attacks do not violate the security properties proven in formal analysis of the 4-way handshake. In particular, these proofs state that the negotiated encryption key remains private, and that the identity of both the client and Access Point (AP) is confirmed. Our attacks do not leak the encryption key. Additionally, although normal data frames can be forged if TKIP or GCMP is used, an attacker cannot forge handshake messages and hence cannot impersonate the client or AP during handshakes. Therefore, the properties that were proven in formal analysis of the 4-way handshake remain true. However, the problem is that the proofs do not model key installation. Put differently, the formal models did not define when a negotiated key should be installed. In practice, this means the same key can be installed multiple times, thereby resetting nonces and replay counters used by the encryption protocol (e.g. by WPA-TKIP or AES-CCMP).&lt;/p&gt;
&lt;h3&gt;Some attacks in paper seem hard&lt;/h3&gt;
&lt;p&gt;We have follow-up work making our attacks (against for example macOS and OpenBSD) significantly more general and easier to execute. So although we agree that some of the attack scenarios in the paper are rather impractical, do not let this fool you into believing key reinstallation attacks cannot be abused in practice.&lt;/p&gt;
&lt;h3&gt;If an attacker can do a man-in-the-middle attack, why can't he just decrypt all the data?&lt;/h3&gt;
&lt;p&gt;As mentioned in the demonstration, the attacker first obtains a man-in-the-middle (MitM) position between the victim and the real Wi-Fi network (called a &lt;a href=&quot;https://lirias.kuleuven.be/bitstream/123456789/473761/1/acsac2014.pdf&quot;&gt;channel-based MitM position&lt;/a&gt;). However, this MitM position does not enable the attacker to decrypt packets! This position only allows the attacker to reliably delay, block, or replay &lt;em&gt;encrypted&lt;/em&gt; packets. So at this point in the attack, he or she cannot yet decrypt packets. Instead, the ability to reliably delay and block packets is used to execute a key reinstallation attack. After performing a key reinstallation attacks, packets can be decrypted.&lt;/p&gt;
&lt;h3&gt;Are people exploiting this in the wild?&lt;/h3&gt;
&lt;p&gt;We are not in a position to determine if this vulnerability has been (or is being) actively exploited in the wild. That said, key reinstallations can actually occur spontaneously without an adversary being present! This may for example happen if the last message of a handshake is lost due to background noise, causing a retransmission of the previous message. When processing this retransmitted message, keys may be reinstalled, resulting in nonce reuse just like in a real attack.&lt;/p&gt;
&lt;h3&gt;Should I temporarily use WEP until my devices are patched?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NO!&lt;/strong&gt; Keep using WPA2.&lt;/p&gt;
&lt;h3&gt;Will the Wi-Fi standard be updated to address this?&lt;/h3&gt;
&lt;p&gt;There seems to be an agreement that the Wi-Fi standard should be updated to explicitly prevent our attacks. These updates likely will be backwards-compatible with older implementations of WPA2. Time will tell whether and how the standard will be updated.&lt;/p&gt;
&lt;h3&gt;Is the Wi-Fi Alliance also addressing these vulnerabilities?&lt;/h3&gt;
&lt;p&gt;For those unfamiliar with Wi-Fi, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Wi-Fi_Alliance&quot;&gt;Wi-Fi Alliance&lt;/a&gt; is an organization which certifies that Wi-Fi devices conform to certain standards of interoperability. Among other things, this assures that Wi-Fi products from different vendors work well together.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wi-fi.org/securityupdate2017&quot;&gt;The Wi-Fi Alliance has a plan&lt;/a&gt; to help remedy the discovered vulnerabilities in WPA2. Summarized, they will:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Require testing for this vulnerability within their global certification lab network.&lt;/li&gt;
&lt;li&gt;Provide a vulnerability detection tool for use by any Wi-Fi Alliance member (this tool is based on my own detection tool that determines if a device is vulnerable to some of the discovered key reinstallation attacks).&lt;/li&gt;
&lt;li&gt;Broadly communicate details on this vulnerability, including remedies, to device vendors. Additionally, vendors are encouraged to work with their solution providers to rapidly integrate any necessary patches.&lt;/li&gt;
&lt;li&gt;Communicate the importance for users to ensure they have installed the latest recommended security updates from device manufacturers.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Why did you use match.com as an example in the demonstration video?&lt;/h3&gt;
&lt;p&gt;Users share a lot of personal information on websites such as match.com. So this example highlights all the sensitive information an attacker can obtain, and hopefully with this example people also better realize the potential (personal) impact. We also hope this example makes people aware of &lt;a href=&quot;https://www.theguardian.com/technology/2017/sep/26/tinder-personal-data-dating-app-messages-hacked-sold&quot;&gt;all the information these dating websites may be collecting&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;How can these types of bugs be prevented?&lt;/h3&gt;
&lt;p&gt;We need more rigorous inspections of protocol implementations. This requires help and additional research from the academic community! Together with other researchers, we hope to organize workshop(s) to improve and verify the correctness of security protocol implementations.&lt;/p&gt;
&lt;h3&gt;Why the domain name krackattacks.com?&lt;/h3&gt;
&lt;p&gt;First, I'm aware that KRACK attacks is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Pleonasm&quot;&gt;pleonasm&lt;/a&gt;, since KRACK stands for &lt;u&gt;k&lt;/u&gt;ey &lt;u&gt;r&lt;/u&gt;einstallation &lt;u&gt;a&lt;/u&gt;tta&lt;u&gt;ck&lt;/u&gt; and hence already contains the word attack. But the domain name rhymes, so that's why it's used.&lt;/p&gt;
&lt;h3&gt;Did you get bug bounties for this?&lt;/h3&gt;
&lt;p&gt;I haven't applied for any bug bounties yet, nor have I received one already.&lt;/p&gt;
&lt;h3&gt;How does this attack compare to other attacks against WPA2?&lt;/h3&gt;
&lt;p&gt;This is the first attack against the WPA2 protocol that doesn't rely on password guessing. Indeed, other attacks against WPA2-enabled network are against surrounding technologies such as &lt;a href=&quot;http://archive.hack.lu/2014/Hacklu2014_offline_bruteforce_attack_on_wps.pdf&quot;&gt;Wi-Fi Protected Setup (WPS)&lt;/a&gt;, or are attacks against older standards such as &lt;a href=&quot;https://lirias.kuleuven.be/bitstream/123456789/401042/1/wpatkip.pdf&quot;&gt;WPA-TKIP&lt;/a&gt;. Put differently, none of the existing attacks were against the 4-way handshake or against cipher suites defined in the WPA2 protocol. In contrast, our key reinstallation attack against the 4-way handshake (and against other handshakes) highlights vulnerabilities in the WPA2 protocol itself.&lt;/p&gt;
&lt;h3&gt;Are other protocols also affected by key reinstallation attacks?&lt;/h3&gt;
&lt;p&gt;We expect that certain &lt;em&gt;implementations of other protocols&lt;/em&gt; may be vulnerable to similar attacks. So it's a good idea to audit security protocol implementations with this attack in mind. However, we consider it unlikely that other &lt;em&gt;protocol standards&lt;/em&gt; are affected by similar attacks (or at least so we hope). Nevertheless, it's still a good idea to audit other protocols!&lt;/p&gt;
&lt;h3&gt;Is there is higher resolution version of the logo?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.krackattacks.com/images/logo.png&quot;&gt;Yes there is&lt;/a&gt;. And a big thank you goes to the person that made the logo!&lt;/p&gt;
&lt;h3&gt;When did you first notify vendors about the vulnerability?&lt;/h3&gt;
&lt;p&gt;We sent out notifications to vendors whose products we tested ourselves around 14 July 2017. After communicating with these vendors, we realized how widespread the weaknesses we discovered are (only then did I &lt;em&gt;truly&lt;/em&gt; convince myself it was indeed a protocol weaknesses and not a set of implementation bugs). At that point, we decided to let &lt;a href=&quot;https://cert.org/&quot;&gt;CERT/CC&lt;/a&gt; help with the disclosure of the vulnerabilities. In turn, CERT/CC sent out a broad notification to vendors on 28 August 2017.&lt;/p&gt;
&lt;h3&gt;Why did OpenBSD silently release a patch before the embargo?&lt;/h3&gt;
&lt;p&gt;OpenBSD was notified of the vulnerability on 15 July 2017, before CERT/CC was involved in the coordination. Quite quickly, Theo de Raadt replied and critiqued the tentative disclosure deadline: &lt;em&gt;“In the open source world, if a person writes a diff and has to sit on it for a month, that is very discouraging”&lt;/em&gt;. Note that I wrote and included a suggested diff for OpenBSD already, and that at the time the tentative disclosure deadline was around the end of August. As a compromise, I allowed them to silently patch the vulnerability. In hindsight this was a bad decision, since others might rediscover the vulnerability by inspecting their silent patch. To avoid this problem in the future, OpenBSD will now receive vulnerability notifications closer to the end of an embargo.&lt;/p&gt;
&lt;h3&gt;So you expect to find other Wi-Fi vulnerabilities?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;“I think we're just getting started.”&lt;/em&gt;  — Master Chief, Halo 1&lt;/p&gt;

</description>
<pubDate>Mon, 16 Oct 2017 09:08:41 +0000</pubDate>
<dc:creator>fanfantm</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.krackattacks.com/</dc:identifier>
</item>
<item>
<title>Severe flaw in WPA2 protocol leaves Wi-Fi traffic open to eavesdropping</title>
<link>https://arstechnica.com/information-technology/2017/10/severe-flaw-in-wpa2-protocol-leaves-wi-fi-traffic-open-to-eavesdropping/</link>
<guid isPermaLink="true" >https://arstechnica.com/information-technology/2017/10/severe-flaw-in-wpa2-protocol-leaves-wi-fi-traffic-open-to-eavesdropping/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2014/04/ssl-eavesdropping.jpg&quot;/&gt;&lt;div class=&quot;caption-credit&quot;&gt;Aurich Lawson / Thinkstock&lt;/div&gt;&lt;aside id=&quot;social-left&quot;&gt;&lt;a title=&quot;120 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/information-technology/2017/10/severe-flaw-in-wpa2-protocol-leaves-wi-fi-traffic-open-to-eavesdropping/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-before&quot;&gt;reader comments&lt;/span&gt; &lt;span class=&quot;comment-count-number&quot;&gt;185&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;&lt;span&gt;Share this story&lt;/span&gt;    &lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;An air of unease set into the security circles on Sunday as they prepared for the disclosure of high-severity vulnerabilities in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Wi-Fi_Protected_Access&quot;&gt;Wi-Fi Protected Access II protocol&lt;/a&gt; that make it possible for attackers to eavesdrop Wi-Fi traffic passing between computers and access points.&lt;/p&gt;
&lt;p&gt;The proof-of-concept exploit is called KRACK, short for Key Reinstallation Attacks. The research has been a closely guarded secret for weeks ahead of a coordinated disclosure that's scheduled for 8am Monday, East Coast time. A &lt;a href=&quot;https://www.krackattacks.com/&quot;&gt;website disclosing the vulnerability&lt;/a&gt; said it affects the core WPA2 protocol itself and is effective against devices running the Android, Linux, Apple, Windows, and OpenBSD operating systems, as well as MediaTek Linksys, and other types of devices. The site warned attackers can exploit it to decrypt a wealth of sensitive data that's normally encrypted by the nearly ubiquitous Wi-Fi encryption protocol.&lt;/p&gt;
&lt;p&gt;&quot;This can be abused to steal sensitive information such as credit card numbers, passwords, chat messages, emails, photos, and so on. The attack works against all modern protected Wi-Fi networks. Depending on the network configuration, it is also possible to inject and manipulate data. For example, an attacker might be able to inject ransomware or other malware into websites.&quot;&lt;/p&gt;
&lt;p&gt;The researchers provided the following video showing the attack in progress against an device running Google's Android mobile operating system:&lt;/p&gt;
&lt;div class=&quot;wrapper&quot;&gt;&lt;iframe type=&quot;text/html&quot; width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Oh4WURZoR98?start=0&amp;amp;wmode=transparent&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/div&gt;
&lt;div class=&quot;caption-text&quot;&gt;KRACK Attacks: Bypassing WPA2 against Android and Linux&lt;/div&gt;
&lt;p&gt;The site went on to warn that visiting only HTTPS-protected Web pages wasn't automatically a remedy for the risk.&lt;/p&gt;
&lt;p&gt;&quot;Although websites or apps may use HTTPS as an additional layer of protection, we warn that this extra protection can (still) be bypassed in a worrying number of situations,&quot; the researchers explained. &quot;For example, HTTPS was previously bypassed in &lt;a href=&quot;https://pdfs.semanticscholar.org/48fc/8f1aa0b6d1e4266b8017820ff8770fb67b6f.pdf&quot;&gt;non-browser software&lt;/a&gt;, in &lt;a href=&quot;https://www.imperialviolet.org/2014/02/22/applebug.html&quot;&gt;Apple's iOS and OS X&lt;/a&gt;, in &lt;a href=&quot;https://arstechnica.com/information-technology/2015/04/android-apps-still-suffer-game-over-https-defects-7-months-later/&quot;&gt;Android apps&lt;/a&gt;, in &lt;a href=&quot;https://arxiv.org/ftp/arxiv/papers/1505/1505.00589.pdf&quot;&gt;Android apps again&lt;/a&gt;, in &lt;a href=&quot;http://blog.ioactive.com/2014/01/personal-banking-apps-leak-info-through.html&quot;&gt;banking apps&lt;/a&gt;, and even in &lt;a href=&quot;https://arstechnica.com/information-technology/2017/01/majority-of-android-vpns-cant-be-trusted-to-make-users-more-secure/&quot;&gt;VPN apps&lt;/a&gt;.&quot;&lt;/p&gt;
&lt;p&gt;The researchers went on to say that the weakness allows attackers to target both vulnerable access points as well as vulnerable computers, smartphones and other types of clients with differing levels of difficulty. Both Windows and iOS aren't believed to be vulnerable to the most effective attacks. Linux and Android appear to be more susceptible, because attackers can force network decryption on clients in seconds with little effort. Linux patches are available but it's not immediately clear when they will become available for various distributions and for Android users. Patches are also available for some but not all Wi-Fi access points.&lt;/p&gt;
&lt;p&gt;Monday's disclosure follows an advisory the &lt;a href=&quot;https://www.us-cert.gov/&quot;&gt;US CERT&lt;/a&gt; recently distributed to about 100 organizations described the research this way:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;US-CERT has become aware of several key management vulnerabilities in the 4-way handshake of the Wi-Fi Protected Access II (WPA2) security protocol. The impact of exploiting these vulnerabilities includes decryption, packet replay, TCP connection hijacking, HTTP content injection, and others. Note that as protocol-level issues, most or all correct implementations of the standard will be affected. The CERT/CC and the reporting researcher KU Leuven, will be publicly disclosing these vulnerabilities on 16 October 2017.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to a researcher who has been briefed on the vulnerability, it works by exploiting a four-way handshake that's used to establish a key for encrypting traffic. During the third step, the key can be resent multiple times. When it's resent in certain ways, a cryptographic nonce can be reused in a way that completely undermines the encryption.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://github.com/vanhoefm/krackattacks/blob/gh-pages/index.html&quot;&gt;Github page belonging to one of the researchers&lt;/a&gt; and a separate placeholder website for the vulnerability used the following tags:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WPA2&lt;/li&gt;
&lt;li&gt;KRACK&lt;/li&gt;
&lt;li&gt;key reinstallation&lt;/li&gt;
&lt;li&gt;security protocols&lt;/li&gt;
&lt;li&gt;network security, attacks&lt;/li&gt;
&lt;li&gt;nonce reuse&lt;/li&gt;
&lt;li&gt;handshake&lt;/li&gt;
&lt;li&gt;packet number&lt;/li&gt;
&lt;li&gt;initialization vector&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers briefed on the vulnerabilities &lt;a href=&quot;https://twitter.com/Nick_Lowe/status/919527451570638848&quot;&gt;said they are indexed&lt;/a&gt; as: CVE-2017-13077, CVE-2017-13078, CVE-2017-13079, CVE-2017-13080, CVE-2017-13081, CVE-2017-13082, CVE-2017-13084, CVE-2017-13086, CVE-2017-13087, CVE-2017-13088. One researcher told Ars that Aruba and Ubiquiti, which sell wireless access points to large corporations and government organizations, already have updates available to patch or mitigate the vulnerabilities.&lt;/p&gt;
&lt;p&gt;The vulnerabilities are scheduled to be formally presented in a talk titled &lt;a href=&quot;https://acmccs.github.io/session-F3/&quot;&gt;Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2&lt;/a&gt; scheduled for November 1 at the &lt;a href=&quot;https://acmccs.github.io/papers/&quot;&gt;ACM Conference on Computer and Communications Security&lt;/a&gt; in Dallas. It's believed that Monday's disclosure will be made through the site &lt;a href=&quot;https://www.krackattacks.com/&quot;&gt;krackattacks.com&lt;/a&gt;. The researchers presenting the talk are Mathy Vanhoef and Frank Piessens of KU Leuven. The researchers presented &lt;a href=&quot;https://www.blackhat.com/docs/webcast/08242017-securely-implementing-network2.pdf&quot;&gt;this related research&lt;/a&gt; in August at the Black Hat Security Conference in Las Vegas.&lt;/p&gt;
&lt;p&gt;The vast majority of existing access points aren't likely to be patched quickly, and some may not be patched at all. If initial reports are accurate that encryption bypass exploits are easy and reliable in the WPA2 protocol, it's likely attackers will be able to eavesdrop on nearby Wi-Fi traffic as it passes between computers and access points. It might also mean it's possible to forge &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;Dynamic Host Configuration Protocol&lt;/a&gt; settings, opening the door to hacks involving users' domain name service.&lt;/p&gt;
&lt;p&gt;It wasn't possible to confirm the details reported in the CERT advisory or to assess the severity at the time this post was going live. If eavesdropping or hijacking scenarios turn out to be easy to pull off, people should avoid using Wi-Fi whenever possible until a patch or mitigation is in place. When Wi-Fi is the only connection option, people should use HTTPS, STARTTLS, Secure Shell, and other reliable protocols to encrypt Web and e-mail traffic as it passes between computers and access points. As a fall-back users should consider using a virtual private network as an added safety measure, but users are reminded to choose their VPN providers carefully, since &lt;a href=&quot;https://arstechnica.com/information-technology/2017/01/majority-of-android-vpns-cant-be-trusted-to-make-users-more-secure/&quot;&gt;many services can't be trusted to make users more secure&lt;/a&gt;. This post will be updated as more information becomes available.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Post updated to add details from researchers.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 16 Oct 2017 04:49:12 +0000</pubDate>
<dc:creator>tdrnd</dc:creator>
<og:url>https://arstechnica.com/information-technology/2017/10/severe-flaw-in-wpa2-protocol-leaves-wi-fi-traffic-open-to-eavesdropping/</og:url>
<og:title>Severe flaw in WPA2 protocol leaves Wi-Fi traffic open to eavesdropping</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2014/04/ssl-eavesdropping-640x215.jpg</og:image>
<og:description>KRACK attack allows other nasties, including connection hijacking and malicious injection.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/information-technology/2017/10/severe-flaw-in-wpa2-protocol-leaves-wi-fi-traffic-open-to-eavesdropping/</dc:identifier>
</item>
<item>
<title>I Fell 15,000 Feet and Lived</title>
<link>https://uss-la-ca135.org/60/1960Judkins-Knott.html</link>
<guid isPermaLink="true" >https://uss-la-ca135.org/60/1960Judkins-Knott.html</guid>
<description>&lt;big&gt;Source : Chapter 7 in author Ron Knott's new book : ' SUPERSONIC COWBOYS '&lt;br /&gt;(sharing forty-five Crusader stories) &quot; I  Fell 15,000 Feet And Lived &quot; by Cliff Judkins [abridged]&lt;br /&gt;&lt;/big&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://uss-la-ca135.org/knott-f8clip1.gif&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;big&gt;&lt;big&gt;&lt;span&gt;CHAPTER SEVEN&lt;/span&gt;&lt;/big&gt;&lt;br /&gt;&lt;big&gt;I FELL 15,000 FEET AND LIVED&lt;/big&gt;&lt;br /&gt;&lt;big&gt;&lt;span&gt;CLIFF JUDKINS&lt;/span&gt;&lt;br /&gt;&lt;/big&gt;&lt;/big&gt;&lt;/p&gt;&lt;p&gt;&lt;big&gt;    &lt;span&gt;“Jud, you’re on fire, get out of there!”&lt;/span&gt;&lt;/big&gt;&lt;br /&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Needless to say that startling command got my attention. As you will read in this report, this was just the beginning of my problems!&lt;/big&gt;&lt;br /&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;It had all started in the brilliant sunlight 20,000 feet above the Pacific Ocean as I nudged my F-8 Crusader jet into position behind the lumbering, deep-bellied refueling plane. After a moment of jockeying for position, I made the connection and matched my speed to that of the slowpoke tanker. I made the graceful task of plugging into the trailing fuel conduit so they could pump fuel into my tanks.&lt;/big&gt;&lt;br /&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;This in-flight refueling process was necessary, and routine, because the F-8 could not hold enough fuel to fly from California to Hawaii. This routine mission was labeled “Trans-Pac,” meaning Flying Airplanes across the Pacific. This had been going on for years.&lt;/big&gt;&lt;br /&gt;&lt;/p&gt;
&lt;br /&gt;&lt;a href=&quot;https://uss-la-ca135.org/knott-f8-refueling8.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://uss-la-ca135.org/knott-f8-refueling8tn.jpg&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;big&gt;&lt;span&gt;Crusaders&lt;/span&gt; in-flight refueling from a C-130 Tanker&lt;/big&gt;&lt;div readability=&quot;12.986608292557&quot;&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Soon, after plugging-in to the tanker, my fuel gauges stirred, showing that all was well. In my cockpit, I was relaxed and confident. As I was looking around, I was struck for an instant by the eeriness of the scene: here I was, attached, like an unwanted child, by an umbilicus to a gargantuan mother who was fleeing across the sky at 200 knots as though from some unnamed danger. Far below us was a broken layer of clouds that filtered the sun glare over the Pacific.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;In my earphones, I heard Major Van Campen, our flight leader, chatting with Major D.K. Tooker who was on a Navy destroyer down below. Major Tooker had ejected from his aircraft, the day before, in this same area, when his Crusader flamed out mysteriously during the same type of refueling exercise.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;At that time no one knew why his aircraft had flamed out. We all supposed it had been some freak accident that sometimes happens with no explanation.  One thing we knew for sure, it was not pilot error. This accident had to be some kind of mechanical malfunction, but what? Our squadron had a perfect safety record and was very disturbed because of the loss of an airplane the day before.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt; “Eleven minutes to mandatory disconnect point,” the tanker commander said.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I checked my fuel gages again, everything appeared normal.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;My thoughts were, “In a few hours I knew we’d all be having dinner at the Kaneohe Officers Club on Oahu, Hawaii. Then after a short rest, we’d continue our 6,000-mile trek to Atsugi, Japan, via Midway and Wake Island.” Our whole outfit - Marine All Weather Fighter Squadron 323 - was being transferred to the Far East for a one-year period of operations.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;“Nine minutes to mandatory disconnect.”&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;My fuel gages indicated that the tanks were almost full. I noticed that my throttle lever was sticking a little. That was unusual, because the friction lock was holding it in place and was loose enough. It grew tighter as I tried to manipulate it gently.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Then - &lt;span&gt;thud!&lt;/span&gt;  I heard the crack of an explosion.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I could see the rpm gauge unwinding and the tailpipe temperature dropping. The aircraft had lost power – the engine had quit running – this is a flame-out!  &lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I punched the mike button, and said, “This is Jud. I’ve got a flame-out!” &lt;br /&gt;Unfortunately, my radio was already dead; I was neither sending nor receiving anything via my radio.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I quickly disconnected from the tanker and nosed the aircraft over, into a shallow dive, to pick up some flying speed to help re-start the engine. I needed a few seconds to think.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I yanked the handle that extended the air-driven emergency generator, called the Ram Air Turbine (RAT), into the slipstream, hoping to get ignition for an air start. The igniters clicked gamely, and the rpm indicator started to climb slowly, as did the tailpipe temperature. This was a positive indication that a re-start was beginning. For one tantalizing moment I thought everything would be all right. But the rpm indicator hung uncertainly at 30 percent of capacity and refused to go any faster. This is not nearly enough power to maintain flight. &lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;The fire warning light (pilots call it the panic light) blinked on. This is not a good sign. And to make matters worse, jet fuel poured over the canopy like water from a bucket. At the same instant, my radio came back on, powered by the emergency generator, and a great babble of voices burst through my earphones.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;&lt;span&gt;“Jud, you’re on fire, get out of there!”&lt;/span&gt;&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Fuel was pouring out of my aircraft; from the tailpipe; from the intake duct; from under the wings, and igniting behind me in a great awesome trail of fire.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The suddenness of the disaster overwhelmed me, and I thought: “This can’t be happening to me!”&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;The voices in my ears kept urging me to fire the ejection seat and abandon my aircraft.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I pressed my mike button and told the flight leader, “I’m getting out!”&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I took my hands off the flight controls and reached above my head for the canvas curtain that would start the ejection sequence. I pulled it down hard over my face and waited for the tremendous kick in the pants, which would send me rocketing upward, free of the aircraft.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Nothing happened! The canopy, which was designed to jettison in the first part of the ejection sequence did not move. It was still in place and so was I.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;My surprise lasted only a second. Then I reached down between my knees for the alternate ejection-firing handle, and gave it a vigorous pull. Again, nothing happened. This was very surprising. Both, the primary, and the secondary ejection procedures had failed and I was trapped in the cockpit of the burning aircraft.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The plane was now in a steep 60-degree dive. For the first time, I felt panic softening the edges of my determination. I knew that I had to do something or I was going to die in this sick airplane. There was no way out of it. With great effort, I pulled my thoughts together and tried to imagine some solution.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;A voice in my earphones was shouting: “Ditch the plane! Ditch it in the ocean!”&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;It must have come from the tanker skipper or one of the destroyer commanders down below, because every jet pilot knows you can’t ditch a jet and survive. The plane would hit the water at a very high a speed, flip over and sink like a stone and they usually explode on impact.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I grabbed the control stick and leveled the aircraft. Then I yanked the alternate handle again in an attempt to fire the canopy and start the ejection sequence, but still nothing happened. That left me with only one imaginable way out, which was to jettison the canopy manually and try to jump from the aircraft without aid of the ejection seat.&lt;br /&gt; Was such a thing possible? I was not aware of any Crusader pilot who had ever used this World War II tactic to get out of a fast flying jet. I had been told that this procedure, of bailing out of a jet, was almost impossible. Yes, the pilot may get out of the airplane but the massive 20-foot high tail section is almost certain to strike the pilot’s body and kill him before he falls free of the aircraft. My desperation was growing, and any scheme that offered a shred of success seemed better than riding that aircraft into the sea, which would surely be fatal.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I disconnected the canopy by hand, and with a great whoosh it disappeared from over my head never to be seen again. Before trying to get out of my confined quarters, I trimmed the aircraft to fly in a kind of sidelong skid: nose high and with the tail swung around slightly to the right.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Then I stood up in the seat and put both arms in front of my face. I was sucked out harshly from the airplane. I cringed as I tumbled outside the bird, expecting the tail to cut me in half, but thank goodness, that never happened!&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;In an instant I knew I was out of there and uninjured.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I waited . . . and waited . . . until my body, hurtling through space, with the 225 knots of momentum started to decelerate. I pulled the D-ring on my parachute, which is the manual way to open the chute if the ejection seat does not work automatically. I braced myself for the opening shock. I heard a loud pop above me, but I was still falling very fast. As I looked up I saw that the small pilot chute had deployed. (This small chute is designed to keep the pilot from tumbling until the main chute opens.) But, I also noticed a sight that made me shiver with disbelief and horror! The main, 24-foot parachute was just flapping in the breeze and was tangled in its own shroud lines. It hadn’t opened! I could see the white folds neatly arranged, fluttering feebly in the air.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;“This is very serious,” I thought.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Frantically, I shook the risers in an attempt to balloon the chute and help it open. It didn’t work. I pulled the bundle down toward me and wrestled with the shroud lines, trying my best to get the chute to open. The parachute remained closed. All the while I am falling like a rock toward the ocean.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I looked down hurriedly. There was still plenty of altitude remaining. I quickly developed a frustrating and sickening feeling.  I wanted everything to halt while I collected my thoughts, but my fall seemed to accelerate.  I noticed a ring of turbulence in the ocean. It looked like a big stone had been thrown in the water. It had white froth at its center; I finally realized this is where my plane had crashed in the ocean.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;“Would I be next to crash?” were my thoughts!&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Again, I shook the parachute risers and shroud lines, but the rushing air was holding my chute tightly in a bundle. I began to realize that I had done all I could reasonably do to open the chute and it was not going to open. I was just along for a brutal ride that may kill or severely injure me.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I descended rapidly through the low clouds. Now there was only clear sky between me and the ocean. This may be my last view of the living. I have no recollection of positioning myself properly or even bracing for the impact. In fact, I don’t remember hitting the water at all. At one instant I was falling very fast toward the ocean. The next thing I remember is hearing a shrill, high-pitched whistle that hurt my ears.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;Suddenly, I was very cold. In that eerie half-world of consciousness, I thought, “Am I alive?” I finally decided, and not all at once, “Yes, I think I am . . . I am alive!”&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The water helped clear my senses. But as I bounced around in the water I began coughing and retching. The Mae West around my waist had inflated. I concluded that the shrill whistling sound that I had heard was the gas leaving the CO2 cylinders as it was filling the life vest.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;A sense of urgency gripped me, as though there were some task I ought to be performing. Then it dawned on me what it was. The parachute was tugging at me from under the water. It had finally billowed out (much too late) like some Brobdingnagian Portuguese man-of-war. I tried reaching down for my hunting knife located in the knee pocket of my flight suit. I had to cut the shroud lines of the chute before it pulled me under for good.&lt;br /&gt;This is when I first discovered that I was injured severely. The pain was excruciating. Was my back broken? I tried to arch it slightly and felt the pain again. I tried moving my feet, but that too was impossible. They were immobile, and I could feel the bones in them grating against each other.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;There was no chance of getting that hunting knife, but I had another, smaller one in the upper torso of my flight suit. With difficulty, I extracted it and began slashing feebly at the spaghetti-like shroud line mess surrounding me.&lt;br /&gt;Once free of the parachute, I began a tentative search for the survival pack. It contained a one-man life raft, some canned water, food, fishing gear, and dye markers. The dye markers colored the water around the pilot to aid the rescue team in finding a down airman. All of this survival equipment should have been strapped to my hips. It was not there. It had been ripped away from my body upon impact with the water.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;“How long would the Mae West sustain me?” I wondered.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I wasn’t sure, but I knew I needed help fast. The salt water that I had swallowed felt like an enormous rock in the pit of my gut. But worst of all, here I was, completely alone, 600 miles from shore, lolling in the deep troughs and crests of the Pacific Ocean. And my Crusader aircraft, upon which had been lavished such affectionate attention, was sinking thousands of feet to the bottom of the ocean.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;At that moment, I was struck by the incredible series of coincidences that had just befallen me. I knew that my misfortune had been a one-in-a-million occurrence. In review, I noted that the explosion aloft should not have happened. The ejection mechanism should have worked. The parachute should have opened. None of these incidents should have happened. I had just experienced three major catastrophes in one flight. My squadron had a perfect safety record. “Why was all of this happening?” was my thinking.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;In about ten minutes I heard the drone of a propeller-driven plane. The pot-bellied, four-engine tanker came into view, flying very low. They dropped several green dye markers near me, and some smoke flares a short distance from my position. They circled overhead and dropped an inflated life raft about 50 yards from me.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I was so pleased and tried to swim toward the raft. When I took two strokes, I all most blacked out due to the intense pain in my body. The tanker circled again and dropped another raft closer to me, but there was no way for me to get to it, or in it, in my condition.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The water seemed to be getting colder, and a chill gripped me. I looked at my watch, but the so-called unbreakable crystal was shattered and the hands torn away. I tried to relax and surrender to the Pacific Ocean swells. I could almost have enjoyed being buoyed up to the crest of one swell and gently sliding into the trough of the next, but I was in such excruciating pain. I remembered the words W.C. Fields had chosen for his epitaph: “On the whole, I’d rather be in Philadelphia.”&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;In about an hour, a Coast Guard amphibian plane flew over and circled me as though deciding whether or not to land. But the seas were high and I knew he couldn’t make it. He came in very low and dropped another raft; this one had a 200-foot lanyard attached to it. The end of the lanyard landed barely ten feet from me. I paddled gently backward using only my arms. I caught hold of it and pulled the raft to me. Even before trying, I knew I couldn’t crawl into the raft due to my physical condition. I was able to get a good grip on its side and hold on. This gave me a little security.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The Coast Guard amphibian gained altitude and flew off. (I learned later that he headed for a squadron of minesweepers that was returning to the United States from a tour of the Western Pacific. He was unable to tune to their radio frequency for communications. But this ingenious pilot lowered a wire from his aircraft and dragged it across the bow of the minesweeper, the USS Embattle. The minesweeper captain understood the plea, and veered off at top speed in my direction.)&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;I was fully conscious during the two and a half hours it took the ship to reach me. I spotted the minesweeper while teetering at the crest of a wave. Soon, its great bow was pushing in toward me and I could see sailors in orange lifejackets crowding its lifelines. A bearded man in a black rubber suit jumped into the water and swam to me.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;“Are you hurt?” he asked.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;“Yes,” I said. “My legs and back.”&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I was now very cold and worried about the growing numbness in my legs. Perhaps the imminence of rescue made me light-headed, for I only vaguely remember being hoisted aboard the ship. I was laid out on the ship’s deck as they cut away my flight suit.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;“Don’t touch my legs! Don’t touch my legs!” I screamed.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I don’t remember it. Somebody gave me a shot of morphine and this erased part of my extreme pain.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;An hour or so later a man was bending over me and asking questions. (It was a doctor who had been high-lined over from the USS Los Angeles, a cruiser that had been operating in the area.)&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;He said, “You have a long scar on your abdomen. How did it get there?”&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;I told him about a serious auto accident I’d had four years earlier in Texas, and that my spleen had been removed at that time.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;He grunted, and asked more questions while he continued examining me. Then he said, “You and I are going to take a little trip over to the USS Los Angeles; it’s steaming alongside.”&lt;br /&gt;Somehow they got me into a wire stretcher, and hauled me, dangling and dipping, across the watery interval between the Embattle and the cruiser.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;In the Los Angeles’s sickbay, they gave me another shot of morphine, thank God, and started thrusting all sorts of hoses into my body. I could tell from all the activity, and from the intense, hushed voices, that they were very worried about my condition.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;My body temperature was down to 94 degrees; my intestines and kidneys were in shock. The doctors never left my side during the night. They took my blood pressure every 15 minutes. I was unable to sleep. Finally, I threw-up about a quart or more of seawater. After this my nausea was relieved a bit.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;By listening to the medical team, who was working on me, I was able to piece together the nature of my injuries. This is what I heard them saying. My left ankle was broken in five places. My right ankle was broken in three places. A tendon in my left foot was cut. My right pelvis was fractured. My number 7 vertebra was fractured. My left lung had partially collapsed. There were many cuts and bruises all over my face and body, and, my intestines and kidneys had been shaken into complete inactivity.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The next morning &lt;a href=&quot;https://uss-la-ca135.org/60/jcook-h&amp;amp;d-div1963.jpg&quot; target=&quot;_blank&quot;&gt;Dr. Valentine Rhodes&lt;/a&gt; told me that the Los Angeles was steaming at flank speed to a rendezvous with a helicopter 100 miles from Long Beach, California.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;At 3:30 that afternoon, I was hoisted into the belly of a Marine helicopter from the USS Los Angeles’s fantail, and we whirred off to a hospital ship, the USS Haven, docked in Long Beach, CA.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Once aboard the Haven, doctors came at me from all sides with more needles, tubes, and X-ray machines. Their reaction to my condition was so much more optimistic than I had expected. I finally broke down and let go a few tears of relief, exhaustion, and thanks to all hands and God.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Within a few months I was all systems go again. My ankles were put back in place with the help of steel pins. The partially collapsed left lung re-inflated and my kidneys and intestines were working again without the need of prodding.&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;The Marine Corps discovered the cause of my flame-out, and that of Major Tooker, the day before, was the failure of an automatic cut-off switch in the refueling system.  The aircraft’s main fuel tank was made of heavy reinforced rubber. When the cut-off switch failed, this allowed the tank to overfill and it burst like a balloon. This then caused the fire and flameout. We will never know why the ejection seat failed to work since it is in the bottom of the ocean. The parachute failure is a mystery also. Like they say, &lt;span&gt;“Some days you are the dog and others you are the fire-plug.”&lt;/span&gt;&lt;br /&gt;&lt;/big&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;Do I feel lucky? That word doesn’t even begin to describe my feelings. To survive a 15,000-foot fall with an unopened chute is a fair enough feat. My mind keeps running back to something Dr. Rhodes told me in the sickbay of the Los Angeles during those grim and desperate hours.&lt;br /&gt;&lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;He said that if I had had a spleen, it almost certainly would have ruptured when I hit the water, and I would have bled to death. Of the 25 pilots in our squadron, I am the only one without a spleen. It gives me something to think about. Maybe it does you as well.&lt;/big&gt;&lt;p&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;big&gt;&lt;span&gt;Cliff Judkins&lt;/span&gt;&lt;/big&gt;&lt;/p&gt;&lt;p&gt;[Author’s Note: Amazingly, Cliff Judkins not only survived this ordeal but he also returned to flight status. He was flying the F-8 Crusader again within six months after the accident. After leaving the Marine Corps he was hired as a pilot with Delta Airlines and retired as a Captain from that position.]&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;
&lt;div readability=&quot;11&quot;&gt;&lt;p&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;&lt;span&gt;Thanks to Ron Knott for permission to use the story from his book, and thanks again to Cliff Judkins for sharing his amazing experience with us.&lt;/span&gt;  &lt;/big&gt;&lt;span&gt;&lt;big&gt;Finally, thanks and God Bless both men for their service to our country.  &lt;br /&gt;&lt;/big&gt;&lt;/span&gt;&lt;big&gt;   &lt;/big&gt; &lt;big&gt;   &lt;/big&gt; &lt;span&gt;&lt;big&gt;Semper Fi    - 23 may 2009&lt;/big&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 16 Oct 2017 01:34:12 +0000</pubDate>
<dc:creator>curtis</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://uss-la-ca135.org/60/1960Judkins-Knott.html</dc:identifier>
</item>
<item>
<title>Essential C</title>
<link>http://cslibrary.stanford.edu/101/</link>
<guid isPermaLink="true" >http://cslibrary.stanford.edu/101/</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;meta name=&quot;description&quot; content=&quot;Stanford CS Education Library: A 45 page summary of all the common features and techniques for the C language.&quot; /&gt;&lt;meta name=&quot;keywords&quot; content=&quot;c language, c programming, c programmer, kernighan, ritchie, introduction to c, introduction, manual, explanation, reference&quot; /&gt;&lt;meta name=&quot;GENERATOR&quot; content=&quot;Mozilla/4.77 (Macintosh; U; PPC) [Netscape]&quot; /&gt;&lt;meta name=&quot;Author&quot; content=&quot;Nick Parlante&quot; /&gt;&lt;meta name=&quot;Description&quot; content=&quot;Stanford CS Education Library: A 45 page summary of all the common features and techniques for the C language.&quot; /&gt;&lt;meta name=&quot;KeyWords&quot; content=&quot;c program, c language, c programming, c langage, c program, c programmer, kernighan, ritchie, introduction to c, c manual&quot; /&gt;&lt;title&gt;Essential C&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; id=&quot;readabilityBody&quot; readability=&quot;41.71375464684&quot;&gt;

&lt;p&gt;Stanford CS Education Library: A 45 page summary of the C language. Explains all the common features and techniques for the C language. The coverage is pretty quick, so it is most appropriate for someone with some programming background who needs to see how C works. Topics include variables, int types, floating point types, promotion, truncation, operators, control structures (if, while, for), functions, value parameters, reference parameters, structs, pointers, arrays, the pre-processor, and the standard C library functions. (revised 4/2003)&lt;/p&gt;
&lt;h3&gt;Download &lt;a href=&quot;http://cslibrary.stanford.edu/101/EssentialC.pdf&quot;&gt;EssentialC.pdf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;See also&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cslibrary.stanford.edu/help.html&quot;&gt;Downloading help&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;Up to the &lt;a href=&quot;http://cslibrary.stanford.edu/&quot;&gt;CS Education Library Home&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Sun, 15 Oct 2017 23:59:28 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://cslibrary.stanford.edu/101/</dc:identifier>
</item>
<item>
<title>Predicting, Decrypting, and Abusing WPA2/802.11 Group Keys [pdf]</title>
<link>https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_vanhoef.pdf</link>
<guid isPermaLink="true" >https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_vanhoef.pdf</guid>
<description>&lt;a href=&quot;https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_vanhoef.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Sun, 15 Oct 2017 19:19:15 +0000</pubDate>
<dc:creator>hadronzoo</dc:creator>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_vanhoef.pdf</dc:identifier>
</item>
<item>
<title>What is Nix and why you should try it</title>
<link>https://yakking.branchable.com/posts/what-and-why-nix/</link>
<guid isPermaLink="true" >https://yakking.branchable.com/posts/what-and-why-nix/</guid>
<description>&lt;p&gt;Normally our Unix systems organise the file system in a structure called the Filesystem Hierarchy Standard (FHS). Installing into an FHS has limitations, what would happen if we want to install, for example, two different versions of ruby at the same time? Typically this isn't possible without explicitly specifying a separate installation directory, if we just install to the usual place e.g. &lt;code&gt;/usr/bin&lt;/code&gt; then we will just overwrite the previous ruby. So perhaps we would install one ruby into &lt;code&gt;/usr/bin&lt;/code&gt; and another into &lt;code&gt;/usr/local/bin&lt;/code&gt;, this is fine, but what about dependent libs? Assuming the two different versions of ruby do require different dependencies then we have potentially the same problem that the dependencies for the 1st ruby might overwrite the dependencies for the 2nd ruby.&lt;/p&gt;
&lt;p&gt;Nix gets around this to some extent by not using FHS, instead nix installs all files into the nix store, which is usually located at &lt;code&gt;/nix/store&lt;/code&gt;. All programs in a nix store are identified by their store path, which is uniquely generated for each distinct nix package. As a result of this, different versions of the same ruby no longer conflict because they are each assigned their own locations within the nix store.&lt;/p&gt;
&lt;p&gt;To enable use of programs within the store, nix maintains an environment which is basically a mapping of FHS path &lt;code&gt;-&amp;gt;&lt;/code&gt; nix store path, where the &lt;code&gt;-&amp;gt;&lt;/code&gt; is a symlink. So for example, let's first install ruby 2.0 into our environment&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;nix@salo:~$ nix-env -f nixpkgs -iA pkgs.ruby_2_0
installing ‘ruby-2.0.0-p648’
these paths will be fetched (3.43 MiB download, 19.35 MiB unpacked):
  /nix/store/bxm4s71qdyh071ap5ywxc63aja62cbyc-gdbm-1.13
  /nix/store/d2ccapssrq683rj0fr7d7nb3ichxvlsy-ruby-2.0.0-p648
  /nix/store/h85k47l9zpwwxdsn9kkjmqw8pnfnrwmm-libffi-3.2.1
  /nix/store/zj8cjx71sqvv46sxfggjpdzqz6nss047-libyaml-0.1.7
fetching path ‘/nix/store/bxm4s71qdyh071ap5ywxc63aja62cbyc-gdbm-1.13’...
....
building path(s) ‘/nix/store/j649f78ha04mi1vykz601b00ml3qlr9q-user-environment’
created 419 symlinks in user environment
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;we can see the symlink that was just created to our ruby2.0 in the store,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;nix@salo:~$ ls -l $(which irb)
lrwxrwxrwx 1 nix nix 67 Jan  1  1970 /home/nix/.nix-profile/bin/irb -&amp;gt; /nix/store/d2ccapssrq683rj0fr7d7nb3ichxvlsy-ruby-2.0.0-p648/bin/irb

nix@salo:~$ irb
irb(main):001:0&amp;gt; puts RUBY_VERSION
2.0.0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;as you can see we're only able to execute the interactive ruby prompt &lt;code&gt;irb&lt;/code&gt; because it's symlinked into our environment which is, of course, on the &lt;code&gt;$PATH&lt;/code&gt;,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;nix@salo:~$ echo $PATH
/home/nix/.nix-profile/bin:/home/nix/.nix-profile/sbin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to prove the point about multiple versions on the same system let's swap ruby 2.0 for ruby 2.4&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;nix@salo:~$ nix-env -f nixpkgs -iA pkgs.ruby_2_4
replacing old ‘ruby-2.0.0-p648’
installing ‘ruby-2.4.1’
these paths will be fetched (3.13 MiB download, 15.32 MiB unpacked):
  /nix/store/48xrfkanmx5sshqj1364k2dw25xr4znj-ruby-2.4.1
fetching path ‘/nix/store/48xrfkanmx5sshqj1364k2dw25xr4znj-ruby-2.4.1’...
...
*** Downloading ‘https://cache.nixos.org/nar/00hh9w9nvlbinya1i9j0v7v89pw3zzlrfqps72441k7p2n8zq7d3.nar.    xz’ to ‘/nix/store/48xrfkanmx5sshqj1364k2dw25xr4znj-ruby-2.4.1’...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 3205k  100 3205k    0     0   114k      0  0:00:27  0:00:27 --:--:--  125k

building path(s) ‘/nix/store/7b2mmk2ffmy1c2bxq7r6y9cn6r0nwn8s-user-environment’
created 415 symlinks in user environment

nix@salo:~$ ls -l $(which irb)
lrwxrwxrwx 1 nix nix 62 Jan  1  1970 /home/nix/.nix-profile/bin/irb -&amp;gt; /nix/store/48xrfkanmx5sshqj1364k2dw25xr4znj-ruby-2.4.1/bin/irb

nix@salo:~$ irb
irb(main):001:0&amp;gt; puts RUBY_VERSION
2.4.1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You may be wondering whether this is really an improvement, since although we have multiple versions of the same package installed on our system, we can only have one &lt;code&gt;ruby&lt;/code&gt; in the environment at any one time. To deal with this nix provides the nix-shell utility which constructs an environment on demand and runs a new shell based on that environment.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;nix@salo:~/nixpkgs$ nix-shell -p ruby_2_0            
these paths will be fetched (4.44 MiB download, 22.57 MiB unpacked):
  /nix/store/2l8irkrhvdqmd1h96pcnwv0832p9r901-libffi-3.2.1
  /nix/store/945sd3dbynzpkqdd71cqqpsl8gwi9zsq-ruby-2.0.0-p647
  /nix/store/m74m7c4qbzml7ipfxzlpxddcn9ah8jrs-gdbm-1.12
  /nix/store/zbjyc3ylb9bj3057rk5payv3sr0gnmkc-openssl-1.0.2l
  /nix/store/zsgmhsc8pjx9cisbjdk06qqjm8h89lmp-libyaml-0.1.7
fetching path ‘/nix/store/m74m7c4qbzml7ipfxzlpxddcn9ah8jrs-gdbm-1.12’...
...
[nix-shell:~/nixpkgs]$ which irb
/nix/store/945sd3dbynzpkqdd71cqqpsl8gwi9zsq-ruby-2.0.0-p647/bin/irb

[nix-shell:~/nixpkgs]$ irb
irb(main):001:0&amp;gt; puts RUBY_VERSION
2.0.0
=&amp;gt; nil
irb(main):002:0&amp;gt;

nix@salo:~/nixpkgs$ nix-shell -p ruby_2_4
these paths will be fetched (3.13 MiB download, 15.30 MiB unpacked):
  /nix/store/wly748apb5r37byvvgq85hshgzcahv0y-ruby-2.4.0
fetching path ‘/nix/store/wly748apb5r37byvvgq85hshgzcahv0y-ruby-2.4.0’...
...
[nix-shell:~/nixpkgs]$ which irb
/nix/store/wly748apb5r37byvvgq85hshgzcahv0y-ruby-2.4.0/bin/irb

[nix-shell:~/nixpkgs]$ irb
irb(main):001:0&amp;gt; puts RUBY_VERSION
2.4.0
=&amp;gt; nil
irb(main):002:0&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We haven't even started to scratch the surface in this intro, there's lots of really exciting stuff I've not even mentioned, like how you can always rollback to the environment at an earlier state: every mutation to the environment is recorded, so every time you install or uninstall a nixpkg a new &quot;generation&quot; of the environment is created, and it's always possible to immediately rollback to some earlier generation. NixOS itself takes all these super exciting ideas and applies them to an entire operating system, where each user has their own environment, so ruby for one user might mean ruby2.0 and ruby for another might mean ruby2.4. Hopefully it's clear now how these different versions of the same package can live in harmony under NixOS.&lt;/p&gt;
&lt;p&gt;I hope I've managed to convey some of nix's coolness in this short space, if I have then you should definitely check lethalman's &quot;nix-pills&quot;&lt;a href=&quot;http://lethalman.blogspot.co.uk/2014/07/nix-pill-1-why-you-should-give-it-try.html&quot;&gt;1&lt;/a&gt; series for a really deep explanation of how nix works internally and how to create nixpkgs from scratch. There's also ofcourse the NixOS website&lt;a href=&quot;https://nixos.org/&quot;&gt;2&lt;/a&gt; and &lt;code&gt;#nixos&lt;/code&gt; on &lt;code&gt;irc.freenode.net&lt;/code&gt; which is probably one of the friendliest communities out there.&lt;/p&gt;
</description>
<pubDate>Sun, 15 Oct 2017 17:58:34 +0000</pubDate>
<dc:creator>vletrmx</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://yakking.branchable.com/posts/what-and-why-nix/</dc:identifier>
</item>
<item>
<title>New Research on How Ride-Hailing Impacts Travel Behavior</title>
<link>http://www.planetizen.com/features/95227-new-research-how-ride-hailing-impacts-travel-behavior</link>
<guid isPermaLink="true" >http://www.planetizen.com/features/95227-new-research-how-ride-hailing-impacts-travel-behavior</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://itspubs.ucdavis.edu/wp-content/themes/ucdavis/pubs/download_pdf.php?id=2752&quot; target=&quot;_blank&quot;&gt;A new repor&lt;/a&gt;&lt;a href=&quot;https://medium.com/r/?url=https%3A%2F%2Fitspubs.ucdavis.edu%2Fwp-content%2Fthemes%2Fucdavis%2Fpubs%2Fdownload_pdf.php%3Fid%3D2752&quot; target=&quot;_blank&quot;&gt;t&lt;/a&gt; on the adoption and use of ride-hailing finds that services like Uber and Lyft attract passengers away from public transit, biking, and walking, in addition to serving as a complementary mode (e.g., for commuter rail). The UC Davis Institute of Transportation Studies research is the first-ever study with representative data from major cities across America on ride-hailing and its impact on travel decisions.&lt;/p&gt;
&lt;p&gt;Ride-hailing services like Uber and Lyft are clearly shaping the way that people move in major cities. However, due to their rapid rise in popularity, the relatively slow pace of regulation, and &lt;a href=&quot;https://www.citylab.com/transportation/2017/07/private-mobility-services-need-to-share-their-data-heres-how/532482/&quot; target=&quot;_blank&quot;&gt;lack of available data&lt;/a&gt; on how, when, and why people use these services, city planners and transportation researchers have been limited in their ability to provide insights into how ride-hailing is changing travel choices and plan for the future. The downside is that those who are responsible for making important long-range decisions about transportation infrastructure and vehicle fleets (e.g., auto manufacturers) are essentially operating in the blind without data.&lt;/p&gt;
&lt;p&gt;The new report was produced by researchers at the University of California, Davis Institute of Transportation Studies — one of five leading national transportation research centers funded by the U.S. Department of Transportation.&lt;/p&gt;
&lt;h3&gt;Uber and Lyft most likely add to traffic in major cities today&lt;/h3&gt;
&lt;p&gt;In this study based on data collected in major cities across America, we found that a large portion of travelers are substituting ride-hailing in place of public transit, biking, and walking trips, or would not have made the trips at all (Fig. 1). These trips, which are being substituted for or generated by ride-hailing, are most likely adding vehicles to the road in major metropolitan areas. There is a significant need for future research on the topic — the most recent findings from major cities seem to suggest that ride-hailing is likely adding to, not reducing traffic congestion.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.planetizen.com/files/styles/content_image/public/img/Ride-Hail_Substitution_final.png?itok=pVDWicS6&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;image-caption&quot;&gt;Figure 1. How ride-hailing users would travel if Uber or Lyft were unavailable.&lt;/p&gt;
&lt;p&gt;The research (and ride-hailing firms themselves) suggest that ride-hailing can be complementary to public transit. This is also true. However, this study finds that while some portion of individuals increase their transit use (an increase in commuter rail use), the net effect across the entire population is an overall reduction in public transit use and a shift towards lower occupancy vehicles (i.e. more cars).&lt;/p&gt;
&lt;p&gt;The broader implications of this shift in travel choice are critical. Cities are grappling with how to plan for the potential introduction of autonomous vehicles, which many believe will be &lt;a href=&quot;https://www.citylab.com/life/2017/01/the-future-of-autonomous-vehicles-is-shared/512417/&quot; target=&quot;_blank&quot;&gt;deployed through shared services&lt;/a&gt;, not to mention the ever-rising impacts of the transportation sector on energy use and emissions. As of 2016, transportation surpassed the power sector as &lt;a href=&quot;https://www.vox.com/2016/6/13/11911798/emissions-electricity-versus-transportation&quot; target=&quot;_blank&quot;&gt;the largest contributor to the U.S. climate problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Many believe that sharing vehicles can help address our growing transportation woes — however, this research shows that sharing vehicles is not enough. We will likely need to foster more dense development patterns that can minimize vehicle miles traveled through walkable and bike-friendly neighborhoods, continue to invest in mass transit, and facilitate shared rides in shared vehicles through pricing or incentives.&lt;/p&gt;
&lt;p&gt;With the right model, it is also possible that ride-hailing could serve as an effective solution in existing suburban areas where personal vehicles dominate travel. However, without significant coordination between cities, public transit agencies, and ride-hailing services themselves, we do not believe this optimistic scenario is likely to materialize. It hasn’t thus far.&lt;/p&gt;
&lt;h3&gt;Evolution of shared mobility services&lt;/h3&gt;
&lt;p&gt;Much of prior academic research on impacts of shared mobility services study what we term carsharing 1.0 — that is, early models of carsharing where vehicles were picked up and returned to the same location, typically through hourly rentals (Fig. 2). A key takeaway from this recent report is that not all shared services can be viewed as the same.&lt;/p&gt;
&lt;p&gt;The adoption rates of ride-hailing far outpace the adoption rates of prior carsharing models. Older business models of carsharing have attracted only 2 million members in North America and close to 5 million globally — over roughly 15 years. Conversely, the adoption ride-hailing (e.g., Uber, Lyft, Didi), the latest model of “shared mobility” is estimated to have grown to more than 250 million users globally within their first five years of existence.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sciencedirect.com/science/article/pii/S0967070X16000056&quot; target=&quot;_blank&quot;&gt;Prior research&lt;/a&gt; shows that carsharing members (e.g. Zipcar, car2go) were highly educated and environmentally oriented. We believe that the widely cited vehicle reduction “impacts” of carsharing were more likely due to &lt;a href=&quot;http://methods.sagepub.com/reference/encyclopedia-of-survey-research-methods/n526.xml&quot; target=&quot;_blank&quot;&gt;self-selection bias&lt;/a&gt; rather than a significant causal relationship. Early carshare members were motivated to reduce their environmental footprint, and they represent less than 1% of the entire U.S. population.&lt;/p&gt;
&lt;p&gt;Ride-hailing, on the other hand, has captured a much broader swath of the population. Interestingly, but perhaps not surprisingly, we find that more than half of carsharing users surveyed dropped their membership, with 23% citing their use of services like Uber and Lyft as the top reason they no longer use carsharing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.planetizen.com/files/styles/content_image/public/img/SharedMobilityEvolution.png?itok=3-aG3uHy&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;image-caption&quot;&gt;Figure 2. The evolution of shared mobility services.&lt;/p&gt;
&lt;h3&gt;Reduced vehicle ownership and reduced carsharing membership&lt;/h3&gt;
&lt;p&gt;The research study reveals a number of additional insights into the travel decisions made by individuals and households, including the demographics of typical ride-hailing adopters, frequency of ride-hailing use, and vehicle ownership decisions.&lt;/p&gt;
&lt;p&gt;Key findings include the following:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Nearly a quarter (24%) of ride-hailing adopters in metropolitan areas use ride-hailing on a weekly or daily basis.&lt;/li&gt;
&lt;li&gt;Parking represents the top reason that urban ride-hailing users substitute a ride-hailing service in place of driving themselves (37%).&lt;/li&gt;
&lt;li&gt;College-educated, affluent Americans have adopted ride-hailing services at double the rate of less educated, lower income populations.&lt;/li&gt;
&lt;li&gt;Among adopters of prior carsharing services, 65% have also used ride-hailing. More than half of them have dropped their membership, and 23% cite their use of ride-hailing services as the top reason they have dropped carsharing.&lt;/li&gt;
&lt;li&gt;Ride-hailing users have higher personal vehicle ownership rates than those who use “transit only”: 52% versus 46%.&lt;/li&gt;
&lt;li&gt;Among non-transit users, there are no differences in vehicle ownership rates between ride-hailing users and traditionally car-centric households.&lt;/li&gt;
&lt;li&gt;Those who have reduced the number of cars they own and the average number of miles they drive personally have substituted those trips with increased ride-hailing use. Net vehicle miles traveled (VMT) changes are unknown.&lt;/li&gt;
&lt;li&gt;After using ride-hailing, the average net change in transit use is a 6% reduction among Americans in major cities.&lt;/li&gt;
&lt;li&gt;As compared with previous studies that have suggested shared mobility services complement transit services, the substitutive versus complementary nature of ride-hailing varies greatly based on the type of transit service in question. On average, ride-hailing hailing appears to reduce bus ridership and complement commuter rail.&lt;/li&gt;
&lt;li&gt;49% to 61% of ride-hailing trips would have not been made at all, or by walking, biking, or transit.&lt;/li&gt;
&lt;li&gt;Directionally, based on mode substitution and ride-hailing frequency of use data, ride-hailing is currently likely to contribute to growth in vehicle miles traveled (VMT) in the major cities represented in this study.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The full report can be downloaded through &lt;a href=&quot;https://itspubs.ucdavis.edu/wp-content/themes/ucdavis/pubs/download_pdf.php?id=2752&quot; target=&quot;_blank&quot;&gt;the ITS website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Regina Clewlow, PhD is a leading transportation researcher on shared mobility and autonomous vehicles. She received her Ph.D. from MIT in Transportation Systems, and has served as a research scientist at UC Berkeley, Stanford, and UC Davis. Dr. Clewlow joined the transportation startup world where she was previously the Director of Business Development and Strategy at Ridescout (acquired by Daimler and rebranded as moovel). To learn more about how to access new urban mobility insights &lt;a href=&quot;https://tinyletter.com/rclewlow&quot; target=&quot;_blank&quot;&gt;sign up here&lt;/a&gt;, or contact her via &lt;a href=&quot;https://www.linkedin.com/in/clewlow/&quot; target=&quot;_blank&quot;&gt;LinkedIn&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 15 Oct 2017 17:30:49 +0000</pubDate>
<dc:creator>WisNorCan</dc:creator>
<og:image>https://www.planetizen.com/files/images/shutterstock_721950895.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.planetizen.com/features/95227-new-research-how-ride-hailing-impacts-travel-behavior</og:url>
<og:title>New Research on How Ride-Hailing Impacts Travel Behavior</og:title>
<og:description>Useable data of the effects of ride-hailing service on travel behavior is sorely lacking, but a new study sheds light on critical questions about what companies like Uber and Lyft mean for transit, active transportation, and congestion.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.planetizen.com/features/95227-new-research-how-ride-hailing-impacts-travel-behavior</dc:identifier>
</item>
<item>
<title>Why physicists still use Fortran (2015)</title>
<link>http://moreisdifferent.com/2015/07/16/why-physicsts-still-use-fortran/</link>
<guid isPermaLink="true" >http://moreisdifferent.com/2015/07/16/why-physicsts-still-use-fortran/</guid>
<description>&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“I don’t know what the programming language of the year 2000 will look like, but I know it will be called FORTRAN.” –  Charles Anthony Richard Hoare, circa 1982&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Fortran is rarely used today in industry — one ranking ranks it behind &lt;a href=&quot;http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html&quot;&gt;29 other languages&lt;/a&gt;. However, Fortran is still a dominant language for the large scale simulation of physical systems, ie. for things like the astrophysical modeling of stars and galaxies, hydrodynamics codes (cf. &lt;a href=&quot;http://flash.uchicago.edu/site/flashcode/&quot;&gt;Flash&lt;/a&gt;), large scale molecular dynamics, electronic structure calculation codes (cf. &lt;a href=&quot;http://departments.icmab.es/leem/siesta/&quot;&gt;SIESTA&lt;/a&gt;), large scale climate models, etc.  In the field of high performance computing (HPC), of which large scale numerical simulation is a subset, there are only two languages in use today — C++ and “modern Fortran” (Fortran 90/95/03/08). The popular &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_MPI&quot;&gt;Open MPI&lt;/a&gt; libraries for parallelizing code were developed for these two languages. So basically, if you want fast code that an run on many processors, you are limited to these two options. Modern Fortran also has a feature called ‘&lt;a href=&quot;https://en.wikipedia.org/wiki/Coarray_Fortran&quot;&gt;coarrays&lt;/a&gt;‘ which puts parallelization features directly into the language. Coarrays started as an extension of Fortran 95 and were incorporated into Fortran 2008 standard.&lt;/p&gt;
&lt;p&gt;The heavy use of Fortran by physicists often confounds computer scientists and other outsiders who tend to view Fortran as a historical anachronism.&lt;/p&gt;
&lt;p&gt;What I would like to do in this article is explain why Fortran is still a useful language. I am not advocating that physics majors learn Fortran — since most physics majors will end up in research, their time may be better invested in learning C++ (or just sticking with Matlab/Octave/Python). What I would like to explain is why Fortran is still used, and show that it is not merely because physicists are ‘behind the time’ (although this is sometimes true – about a year ago I saw a physics student working on a Fortran 77 code, and both the student and adviser were unaware of Fortran 90). Computer scientists should (and do) consider the continued dominance of Fortran in numerical computing as a challenge.&lt;/p&gt;
&lt;p&gt;Before digging in I feel obligated to discuss a bit of history, since when many hear “Fortran” they immediately think of punch cards and code with line numbers. The original specification for Fortran was written in 1954.  Early Fortran (designated in allcaps as FORTRAN) was, by modern standards hellish, but it was incredible leap forward from previous programming, which was done in assembly. FORTRAN was often programed with punch cards, as is not-so-fondly recalled by Prof. Miriam Forman here at Stony Brook. Fortran has through many revisions, the most well known are the 66, 77, 90, 95, 03, and 08 standards.&lt;/p&gt;
&lt;p&gt;It is often said that the reason Fortran is still used is that it is &lt;em&gt;fast.&lt;/em&gt; But is it the fastest? The website &lt;a href=&quot;http://benchmarksgame.alioth.debian.org&quot;&gt;http://benchmarksgame.alioth.debian.org&lt;/a&gt; allows for a &lt;a href=&quot;http://benchmarksgame.alioth.debian.org/u64q/fortran.html&quot;&gt;comparison of several benchmarks between C and Fortran&lt;/a&gt;. On most of the benchmarks, Fortran and C++ are the fastest.  Note that Python, which is the darling of computer scientists, is usually about 100 times slower, but that is the nature of interpreted code.  Python is unsuited for heavy numerical computation but highly suited for many other things. Interestingly, C++ beats Fortran on all but two of the benchmarks, although they are fairly close on most. However, the two benchmarks where Fortran wins (n-body simulation and calculation of spectra) are the most physics-y. The results vary somewhat depending on whether one compares a single core or quad core machine with Fortran lagging a bit more behind C++ on the quad core. The benchmarks where Fortran is much slower than C++ involve processes where most of the time is spent reading and writing data, for which Fortran is known to be slow.&lt;/p&gt;
&lt;p&gt;So, altogether, C++ is just as fast as Fortran and often a bit faster.  The question we really should be asking is “why do physics professors continue to advise their students to use Fortran rather than C++?”&lt;/p&gt;
&lt;h2 id=&quot;fortran-has-legacy-code&quot;&gt;Fortran has legacy code&lt;/h2&gt;
&lt;p&gt;Given the long history of Fortran, it is no surprise that a large amount of legacy code in physics is written in Fortran. Physicists usually try to minimize the amount of coding they do, therefore, if legacy code exists they will use it. Even if old code is hard to read, poorly documented, and not the most efficient, it is often faster to use old validated code than to write new code. Physicists are not in the business of writing code, after all, they are trying to understand the nature of reality. Researchers usually want to take the path of least resistance. Professors usually have legacy code on hand (often code they wrote themselves decades ago) and pass this code on to their students. This saves their students time, and also takes uncertainty out of the debugging process.&lt;/p&gt;
&lt;h2 id=&quot;fortran-is-easier-for-physics-students-to-learn-than-c&quot;&gt;Fortran is easier for physics students to learn than C++&lt;/h2&gt;
&lt;p&gt;Overall, I think Fortran is easier to learn than C++. Fortran 90 and C are very similar, but Fortran is easier to code in for reasons I will discuss. C is a fairly primitive languages, so physicists who go the C++ route tend to look into object oriented coding. Object oriented coding can be useful, especially with massive software projects, but it takes significantly more time to learn. One has to learn abstract concepts like classes and inheritance. The paradigm of object oriented coding is very different from the procedural paradigm used in Fortran. Fortran is based on a simple procedural paradigm that is closer to what actually happens ‘under the hood’ inside a computer. When optimizing / vectorizing code for speed the procedural paradigm seems easier to work under.  Physicists generally have an understanding of how computers work and are inclined to think in terms of physical processes, such as the transfer of data from disk to RAM and from RAM to CPU cache. This is in contrast to mathematicians, who prefer to think in terms of abstract functions and logic. It is also in contrast to the way one thinks about object oriented code. Optimizing object oriented code seems more difficult to me than procedural code. Objects are very bulky structures compared the physicist’s data structure of choice: the array.&lt;/p&gt;
&lt;h2 id=&quot;point-of-ease-1-fortran-array-handling-features&quot;&gt;Point of ease 1: Fortran array handling features&lt;/h2&gt;
&lt;p&gt;** Arrays (or in physics-speak, matrices) lie at the heart of all physics calculations. Fortran 90+ incorporates array handling features, similar to &lt;a href=&quot;https://en.wikipedia.org/wiki/APL_(programming_language)&quot;&gt;APL&lt;/a&gt; or Matlab/Octave. Arrays can be copied, multiplied by a scalar, or multiplied together quite intuitively as:&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
A = B
A = 3.24*B
C = A*B
B = exp(A)
norm = sqrt(sum(A**2))
&lt;/pre&gt;
&lt;p&gt;Here, A, B, C are arrays, with some dimensions (for instance, they all could 10x10x10). C = A*B gives an element-by-element multiplication of A and B, assuming A and B are the same size. To do a matrix multiplication, one would use C = matmul(A,B). Almost all of the intrinsic functions in Fortran (Sin(), Exp(), Abs(), Floor(), etc) can take arrays as arguments, leading to easy of use and very neat code. Similar C++ code simply does not exist. In the base implementation of C++, merely copying an array requires cycling through all the elements with &lt;em&gt;for&lt;/em&gt; loops or a call to a library function. Trying to feed an array into the wrong library function in C will return an error. Having to use libraries instead of intrinsic functions means the resulting code is never as neat, as transferable, or as easy to learn.&lt;/p&gt;
&lt;p&gt;In Fortran, array elements are indexed using the simple syntax A[x,y,z], whereas in C++ one has to use A[x][y][z].  Arrays are indexed starting at 1, which conforms to the way physicists talk about matrices, unlike C++ arrays, which start at 0. The following Fortran code shows a few more array features:&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
A = (/ i , i = 1,100 /)
B = A(1:100:10)
C(10:) = B
&lt;/pre&gt;
&lt;p&gt;First a vector A is created using an &lt;em&gt;implicit do&lt;/em&gt; loop, also called an &lt;em&gt;array constructor&lt;/em&gt;. Next, a vector B is created from every 10th element of A using a ‘stride’ of 10 in the subscript. Finally, array B is copied into array C, starting at element 10. Fortran supports declaring arrays with indices that are zero or negative:&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
double precision, dimension(-1:10) :: myArray
&lt;/pre&gt;
&lt;p&gt;A negative index may sound silly, but I have heard that they can be very useful – imagine a negative index as an area with ‘extra space’ for annotations. Fortran also supports &lt;a href=&quot;http://www.fortran.gantep.edu.tr/local/HPFCourse/HTMLHPFCourseNotesnode102.html&quot;&gt;vector-valued indices&lt;/a&gt;. For instance, we can extract elements 1, 5, and 7 from a Nx1 array A into a 3×1 array B using:&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
subscripts = (/ 1, 5, 7 /)
B = A(subscripts)
&lt;/pre&gt;
&lt;p&gt;Fortran also incorporates &lt;a href=&quot;http://www.fortran.gantep.edu.tr/local/HPFCourse/HTMLHPFCourseNotesnode100.html&quot;&gt;masking&lt;/a&gt; of arrays in all intrinsic functions. For instance, if we want to take the log of a matrix on all of the elements where it is greater than zero we use&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
log_of_A = log(A, mask= A .gt. 0)
&lt;/pre&gt;
&lt;p&gt;Alternatively we may want to take all the negative points in an array and set them to 0. This can be done in one line using the ‘where’ command:&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
where(my_array .lt. 0.0) my_array = 0.0
&lt;/pre&gt;
&lt;p&gt;Dynamically allocating and deallocating arrays in Fortran is easy. For instance, to allocate a 2D array:&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
real, dimension(:,:), allocatable :: name_of_array
allocate(name_of_array(xdim, ydim))
&lt;/pre&gt;
&lt;p&gt;C++&lt;a href=&quot;http://www.eskimo.com/~scs/cclass/int/sx9b.html&quot;&gt; requires the following code&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;brush: cpp; title: ; notranslate&quot; title=&quot;&quot;&gt;
int ** array;
array = malloc(nrows * sizeof(double * ));

for(i = 0; i &amp;amp;lt; nrows; i++){
     array[i] = malloc(ncolumns * sizeof(double));
}
&lt;/pre&gt;
&lt;p&gt;To deallocate an array in Fortran, we use&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
deallocate(name_of_array)
&lt;/pre&gt;
&lt;p&gt;In C++, we have:&lt;/p&gt;
&lt;pre class=&quot;brush: cpp; title: ; notranslate&quot; title=&quot;&quot;&gt;
for(i = 0; i &amp;amp;lt; nrows; i++){
    free(array[i]);
}
free(array);
&lt;/pre&gt;
&lt;h2 id=&quot;point-of-ease-2-little-need-to-worry-about-pointers--memory-allocation&quot;&gt;Point of ease 2: Little need to worry about pointers / memory allocation&lt;/h2&gt;
&lt;p&gt;In languages like C++ , all variables are passed by value, unless they are arrays, which are passed by reference. However, in many scenarios passing an array by value may make more sense – consider if our data consists of the positions of 100 molecules at different timesteps. Now we may want to analyze the motion of a single molecule. We take a ‘slice’ of the array (a subarray) corresponding to the coordinates of the atoms in that molecule and pass it to a function. Now we are going to do a complicated series of analyses on that subarray. If we used pass by reference, the values being pointed to are going to be non-contiguous in memory. Because of the way CPUs access memory, manipulating non-contiguous data is &lt;em&gt;slow&lt;/em&gt;. If we pass by value, however, we create a new array in memory which is contiguous. For instance, when passing a slice of a large array into a function to be operated on, the compiler may create a new location in memory if this is deemed more efficient. This may in fact be much more efficient, if the array can be stored in the CPU’s cache. To the physicist’s delight, the compiler does all the ‘dirty work’ of optimizing memory use.&lt;/p&gt;
&lt;p&gt;In Fortran, variables are usually passed by reference, not by value. Under the hood the Fortran compiler automatically optimizes the passing so as to be most efficient. To a physics professor, a Fortran compiler is a much more trusted optimizer of memory usage than any physics student! As a result of all this, from what I have seen physicists rarely use pointers, although Fortran-90+ &lt;a href=&quot;http://www.personal.psu.edu/jhm/f90/lectures/42.html&quot;&gt;does contain pointers.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortran has several features that allow the programmer to give information to the compiler which assists in debugging and optimization. In this way, coding errors can be caught at compile-time, rather than at run-time. For instance, any variable can be declared as a parameter, that is, something which doesn’t change.&lt;/p&gt;
&lt;pre class=&quot;brush: cpp; title: ; notranslate&quot; title=&quot;&quot;&gt;
double precision, parameter :: hbar = 6.63e-34
&lt;/pre&gt;
&lt;p&gt;If a parameter is ever changed in the code, the compiler returns an error. In C, there is something similar called a_ &lt;a href=&quot;https://en.wikipedia.org/wiki/Const_(computer_programming)&quot;&gt;const&lt;/a&gt;:_&lt;/p&gt;
&lt;pre class=&quot;brush: cpp; title: ; notranslate&quot; title=&quot;&quot;&gt;
double const hbar = 6.63e-34
&lt;/pre&gt;
&lt;p&gt;The problem is that a ‘const real’ is a different type than a normal ‘real’. If a function that takes a ‘real’ is fed a ‘const real’, it will return an error. It is easy to imagine how this can lead to problems with interoperability between codes.&lt;/p&gt;
&lt;p&gt;Fortran also has an ‘intent’ specification tells the compiler whether an argument being passed to a function or subroutine is an input, and output, or both an input and output. The use of ‘intent’ specifiers helps the compiler optimize code and increases code readability and robustness.&lt;/p&gt;
&lt;p&gt;There are other similar features in Fortran, used to varying degrees. For instance, Fortran 95 introduced the idea of declaring a function as ‘pure’. A pure function does not have any side effects – it only changes variables that are arguments to the function and not any other global variables. A special case of a pure function is an ‘elemental’ function, which is a function that takes a scalar argument and returns a scalar, and is meant to operate on the elements of an array. The knowledge that a functions are ‘pure’ or ‘elemental’ can lead to additional optimizations by the compiler, especially when the code is being parallized.&lt;/p&gt;

&lt;p&gt;In scientific computation, Fortran remains dominant and will not being going away anytime soon.  In &lt;a href=&quot;https://software.intel.com/en-us/blogs/2015/03/27/doctor-fortran-in-the-future-of-fortran&quot;&gt;a survey of Fortran users&lt;/a&gt; at the 2014 Supercomputing Convention, 100% of respondents said they thought they would still be using Fortran in five years.  The survey also showed that a large number of people were using mixed code with C overwhelmingly the second language (90%). Anticipating the increased mixing of Fortran and C code, the Fortran 2015 specification will have greater features for code interoperability.  Increasingly, Fortran code is being called by higher-level codes written in Python. The computer scientists who bash physicists for using Fortran fail to realize that Fortran remains uniquely suited for doing what it was named for – FOrmula TRANslation, or converting physics formulas into code. Many are also unaware that Fortran has continued to develop, incorporating new features as time passage (albeit slowly). Calling modern Fortran (Fortran 90+) ‘old’ is like calling C++ old because C was first developed around 1973.  On the other hand, even the most modern Fortran standard (2008) retains backwards compatibility to Fortran 77 and most of Fortran 66. In this sense the continued usefulness of Fortran is a challenge to computer scientists. Recently, researchers at MIT have decided to tackle this challenge with full force by developing &lt;a href=&quot;http://newsoffice.mit.edu/2014/high-performance-computing-programming-ease&quot;&gt;a brand new language for HPC called Julia&lt;/a&gt;, first released in 2012. If Julia will actually overtake Fortran remains to be seen. I suspect in any case it will take quite a long time.&lt;/p&gt;
&lt;h2 id=&quot;further-reading&quot;&gt;Further reading:&lt;/h2&gt;
&lt;ol readability=&quot;0.80597014925373&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1820518&quot;&gt;“The Ideal HPC Programming Language”&lt;/a&gt; – A software engineer does a detailed analysis (quite above my head) and concludes Fortran comes closest to the ideal language for HPC.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/146159/is-fortran-faster-than-c&quot;&gt;Is Fortran faster than C?&lt;/a&gt; – The first answer to this StackOverflow question explains why Fortran’s assumption of no aliasing of memory makes it faster than C.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.76785714285714&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://implicitnone.com/about/&quot;&gt;Implicit None&lt;/a&gt; – a blog written by a Fortran enthusiast&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Sun, 15 Oct 2017 15:05:33 +0000</pubDate>
<dc:creator>dralley</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://moreisdifferent.com/2015/07/16/why-physicsts-still-use-fortran/</dc:identifier>
</item>
<item>
<title>US telcos appear to be selling non-anonymized access to consumer telephone data</title>
<link>https://medium.com/@philipn/want-to-see-something-crazy-open-this-link-on-your-phone-with-wifi-turned-off-9e0adb00d024</link>
<guid isPermaLink="true" >https://medium.com/@philipn/want-to-see-something-crazy-open-this-link-on-your-phone-with-wifi-turned-off-9e0adb00d024</guid>
<description>&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;43.706146926537&quot;&gt;
&lt;p name=&quot;a435&quot; id=&quot;a435&quot; class=&quot;graf graf--p graf--leading&quot;&gt;What’s going on here?&lt;/p&gt;
&lt;p name=&quot;1204&quot; id=&quot;1204&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In December of 2013, AT&amp;amp;T announced their &lt;a href=&quot;https://www.att.com/gen/press-room?pid=25161&amp;amp;cdvn=news&amp;amp;newsarticleid=37345&quot; data-href=&quot;https://www.att.com/gen/press-room?pid=25161&amp;amp;cdvn=news&amp;amp;newsarticleid=37345&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;“Mobile Identity API”&lt;/a&gt;, available only through an enterprise contract with AT&amp;amp;T. Verizon later announced something similar. It looks like both Danal and Payfone are paying for access to these enterprise telco APIs[&lt;a href=&quot;http://newswire.telecomramblings.com/2013/12/payfone-strikes-deal-att-verify-mobile-identity-2/&quot; data-href=&quot;http://newswire.telecomramblings.com/2013/12/payfone-strikes-deal-att-verify-mobile-identity-2/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;1&lt;/a&gt;], [&lt;a href=&quot;https://www.youtube.com/watch?v=IMlYpPNVMas&quot; data-href=&quot;https://www.youtube.com/watch?v=IMlYpPNVMas&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;2&lt;/a&gt;].&lt;/p&gt;
&lt;p name=&quot;0241&quot; id=&quot;0241&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;These services are &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;using your mobile phone’s IP address to look up your phone number, your billing information and possibly your phone’s current location as provided by cell phone towers&lt;/strong&gt; (no GPS or phone location services required). These services are doing this with the assistance of the telco providers.&lt;/p&gt;
&lt;p name=&quot;d4ca&quot; id=&quot;d4ca&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;These services claim to help detect fraud by cross-referencing user provided billing or phone number information with the cell phone provider’s information. Or, in the case of cell phone location, cross referencing phone-provided GPS location with the location of the phone as provided by cell phone towers.&lt;/p&gt;
&lt;p name=&quot;d05e&quot; id=&quot;d05e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;While the two demos above require the lookup IP address to be the same as the requesting IP address, such safeguards may not be in place if you purchase contracts from these companies. For instance, the payfone.com API appears to allow customers to &lt;a href=&quot;http://archive.fo/SDo9K&quot; data-href=&quot;http://archive.fo/SDo9K&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;look up cell phone information just by saying the user has consented&lt;/a&gt;. Their API also allows batch lookups.&lt;/p&gt;
&lt;p name=&quot;0300&quot; id=&quot;0300&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In 2003, news came to light that &lt;a href=&quot;http://www.nytimes.com/2013/09/02/us/drug-agents-use-vast-phone-trove-eclipsing-nsas.html&quot; data-href=&quot;http://www.nytimes.com/2013/09/02/us/drug-agents-use-vast-phone-trove-eclipsing-nsas.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;AT&amp;amp;T was providing the DEA and other law enforcement agencies&lt;/a&gt; with no-court-warrant-required access to real time cell phone metadata. This was a &lt;a href=&quot;https://www.eff.org/deeplinks/2016/10/att-requires-police-hide-hemisphere-phone-spying&quot; data-href=&quot;https://www.eff.org/deeplinks/2016/10/att-requires-police-hide-hemisphere-phone-spying&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;pretty big deal&lt;/a&gt; at &lt;a href=&quot;https://www.eff.org/deeplinks/2016/12/shareholders-demand-transparency-atts-hemisphere-phone-records-spying-program&quot; data-href=&quot;https://www.eff.org/deeplinks/2016/12/shareholders-demand-transparency-atts-hemisphere-phone-records-spying-program&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;the time&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;2e67&quot; id=&quot;2e67&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But what these services show us is even more alarming: &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;US telcos appear to be selling direct, non-anonymized, real-time access to consumer telephone data to third party services — not just federal law enforcement officials — who are then selling access to that data.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;ad50&quot; id=&quot;ad50&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Given the trivial “consent” step required by these services and unlikely audit controls, it appears that &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;these services could be used to track or de-anonymize nearly anyone with a cell phone in the United States with potentially no oversight&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Sun, 15 Oct 2017 14:41:15 +0000</pubDate>
<dc:creator>benaadams</dc:creator>
<og:title>Want to see something crazy? Open this link on your phone with WiFi turned off.</og:title>
<og:url>https://medium.com/@philipn/want-to-see-something-crazy-open-this-link-on-your-phone-with-wifi-turned-off-9e0adb00d024</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*I9lMORFjkew9IK9g00oqLA.png</og:image>
<og:description>https://bit.ly/crazymobiledemo</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@philipn/want-to-see-something-crazy-open-this-link-on-your-phone-with-wifi-turned-off-9e0adb00d024</dc:identifier>
</item>
</channel>
</rss>