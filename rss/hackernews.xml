<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Mars likely to have enough oxygen to support life: study</title>
<link>https://phys.org/news/2018-10-mars-oxygen-life.html</link>
<guid isPermaLink="true" >https://phys.org/news/2018-10-mars-oxygen-life.html</guid>
<description>&lt;div class=&quot;first-block&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;image-block-ins&quot;&gt;&lt;a rel=&quot;lightbox&quot; href=&quot;https://3c1703fe8d.site.internapcdn.net/newman/gfx/news/2018/thenewresear.jpg&quot; title=&quot;The new research was made possible by the discovery by NASA's Curiosity Mars rover of manganese oxides&quot;&gt;&lt;img src=&quot;https://3c1703fe8d.site.internapcdn.net/newman/csz/news/800/2018/thenewresear.jpg&quot; alt=&quot;The new research was made possible by the discovery by NASA's Curiosity Mars rover of manganese oxides&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
The new research was made possible by the discovery by NASA's Curiosity Mars rover of manganese oxides
&lt;p&gt;Modern-day Mars may be more hospitable to oxygen-breathing life than previously thought.&lt;/p&gt;
&lt;/div&gt;&lt;section class=&quot;article-banner first-banner&quot;&gt;
&lt;/section&gt;&lt;p&gt;A new study suggests that salty water at or near the surface of the red planet could contain enough dissolved O2 to support oxygen-breathing microbes, and even more complex organisms such as sponges.&lt;/p&gt;
&lt;p&gt;&quot;Nobody thought of Mars as a place where aerobic respiration would work because there is so little oxygen in the atmosphere,&quot; said Vlada Stamenkovic an Earth and planetary scientist at the Jet Propulsion Laboratory who led the work. &quot;What we're saying is it is possible that this planet that is so different from Earth could have given aerobic life a chance.&quot;&lt;/p&gt;
&lt;p&gt;As part of the report, Stamenkovic and his coauthors also identified which regions of Mars are most likely to contain brines with the greatest amounts of dissolved oxygen. This could help NASA and other space agencies plan where to send landers on future missions, they said.&lt;/p&gt;
&lt;p&gt;The work was published Monday in &lt;em&gt;Nature Geoscience&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;On its surface, the planet Mars is not what you would consider a hospitable place for most Earthlings.&lt;/p&gt;
&lt;p&gt;Here on Earth, 21 percent of our atmosphere is made up of oxygen—thanks to the abundance of plants and other organisms that create oxygen as a byproduct of photosynthesis.&lt;/p&gt;
&lt;p&gt;The Martian atmosphere, on the other hand, is made up of just .145 percent oxygen, according to data collected by the Mars rovers.&lt;/p&gt;
&lt;p&gt;With no plants to make O2, the minuscule amount of oxygen on Mars is created when radiation from the sun interacts with CO2 in the planet's atmosphere.&lt;/p&gt;
&lt;p&gt;In addition, Mars' atmosphere is extremely thin—160 times thinner than Earth's atmosphere. In addition, the temperature at the surface frequently drops to minus 100, making it extremely difficult for liquid water to exist on the planet's surface.&lt;/p&gt;
&lt;p&gt;Pure liquid water would either freeze or evaporate away on Mars, but salty water, or brines, could remain in a liquid state at or just below the surface of the planet, the authors said. That's because water mixed with salts has a lower freezing temperature than plain water. (That's why those unfortunate people who live in cold climates use salt to melt the ice on their sidewalks.)&lt;/p&gt;
&lt;p&gt;In the first part of the paper, the authors use computer models to show that water mixed with salts already present on Mars could be stable in a liquid state at or near the surface.&lt;/p&gt;

&lt;p&gt;Once the authors were convinced that these liquid brines could exist, their next step was to determine how much dissolved oxygen they could absorb from the atmosphere.&lt;/p&gt;
&lt;p&gt;&quot;If there are brines on Mars, then the oxygen would have no choice but to infiltrate them,&quot; said Woody Fischer, a geobiologist at Caltech who worked on the study. &quot;The oxygen would make it everywhere.&quot;&lt;/p&gt;
&lt;p&gt;To calculate how much oxygen the brines might absorb, the researchers had to consider their chemistry, as well as the temperature and air pressure at the Martian surface. Brines will absorb more oxygen when the temperature is lower and the air pressure is higher.&lt;/p&gt;
&lt;p&gt;Their results showed that modern Mars could support liquid environments with enough dissolved O2 to support oxygen-breathing microbes across the planet. They also found that the oxygen concentrations would be especially high in brines found at the polar regions, where temperatures are cooler.&lt;/p&gt;
&lt;p&gt;So far, this work has been done through computer modeling. But experts still said that the study looks robust.&lt;/p&gt;
&lt;p&gt;&quot;The best studies that rely on models for their results conduct a thorough review of the possible variables that can influence the model output,&quot; said Kathleen Mandt, a planetary biologist at the Johns Hopkins University Applied Physics Laboratory. &quot;This study does a good job at exploring a range of possible outcomes.&quot;&lt;/p&gt;
&lt;p&gt;What the study doesn't do, however, is prove that there are indeed brines on Mars.&lt;/p&gt;
&lt;p&gt;&quot;What we know is that theoretically there should be brines on Mars, and that they would be able to dissolve enough oxygen to be biologically useful,&quot; Stamenkovic said.&lt;/p&gt;
&lt;p&gt;The next step, he said, is two-fold.&lt;/p&gt;
&lt;p&gt;He hopes that researchers here on Earth will do experiments to put oxygen-breathing microbes in the brines that could occur on Mars to find out what type of chemistry they do and whether they can thrive. The other step would be to send a lander to Mars that can look for brines from the shallow to the deep subsurface.&lt;/p&gt;
&lt;p&gt;&quot;Amazing work has been done by NASA to look for evidence of past habitable environments,&quot; he said. &quot;I am a big promoter of looking for current habitable environments, and we can do that by starting to explore if there is liquid water on Mars.&quot;&lt;/p&gt;
&lt;p&gt;To that end, Stamenkovic is working to develop a new tool, no bigger than a shoe box, that could be used to find water on Mars and determine its salinity, no digging necessary.&lt;/p&gt;
&lt;p&gt;He calls it TH2OR.&lt;/p&gt;
&lt;p class=&quot;news-relevant&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/WebPage&quot;&gt;&lt;a href=&quot;https://phys.org/news/2018-10-mars-oxygen-life.html#&quot; id=&quot;inl-rel-href&quot;&gt;&lt;img class=&quot;toolsicon ic-rel&quot; src=&quot;https://cf3e497594.site.internapcdn.net/tmpl/v5/img/1x1.gif&quot; width=&quot;14&quot; height=&quot;16&quot; alt=&quot;&quot;/&gt;&lt;/a&gt; &lt;strong&gt;Explore further:&lt;/strong&gt; &lt;a itemprop=&quot;relatedLink&quot; href=&quot;https://phys.org/news/2018-09-earth-salt-lake-mars-expert.html&quot;&gt;What on Earth could live in a salt water lake on Mars? An expert explains&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More information:&lt;/strong&gt; Vlada Stamenković et al. O2 solubility in Martian near-surface environments and implications for aerobic life, &lt;em&gt;Nature Geoscience&lt;/em&gt; (2018). &lt;a data-doi=&quot;1&quot; href=&quot;http://dx.doi.org/10.1038/s41561-018-0243-0&quot; target=&quot;_blank&quot;&gt;DOI: 10.1038/s41561-018-0243-0&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;footer class=&quot;post-floor clearfix&quot; readability=&quot;20.273722627737&quot;&gt;&lt;div class=&quot;post-copyright&quot; readability=&quot;16.888888888889&quot;&gt;
&lt;p&gt;&lt;strong&gt;Journal reference:&lt;/strong&gt; &lt;a rel=&quot;news&quot; class=&quot;textTag&quot; href=&quot;https://phys.org/journals/nature-geoscience/&quot;&gt;Nature Geoscience&lt;/a&gt;  &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;post-rating&quot; id=&quot;rank&quot;&gt;
&lt;div id=&quot;flip-box&quot;&gt;
&lt;div class=&quot;flip&quot;&gt;
&lt;p&gt;&lt;span id=&quot;shares&quot;&gt;2226&lt;/span&gt; shares &lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;section class=&quot;copyright&quot; readability=&quot;3&quot;&gt;&lt;p&gt;©2018 Los Angeles Times&lt;br/&gt;Distributed by Tribune Content Agency, LLC.&lt;br/&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/footer&gt;</description>
<pubDate>Tue, 23 Oct 2018 01:33:06 +0000</pubDate>
<dc:creator>daegloe</dc:creator>
<og:title>Mars could have enough molecular oxygen to support life, and scientists figured out where to find it</og:title>
<og:description>Modern-day Mars may be more hospitable to oxygen-breathing life than previously thought.</og:description>
<og:image>https://3c1703fe8d.site.internapcdn.net/newman/gfx/news/2018/thenewresear.jpg</og:image>
<og:type>article</og:type>
<og:url>https://phys.org/news/2018-10-mars-oxygen-life.html</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://phys.org/news/2018-10-mars-oxygen-life.html</dc:identifier>
</item>
<item>
<title>World&amp;#039;s oldest intact shipwreck discovered in Black Sea</title>
<link>https://www.theguardian.com/science/2018/oct/23/oldest-intact-shipwreck-thought-to-be-ancient-greek-discovered-at-bottom-of-black-sea</link>
<guid isPermaLink="true" >https://www.theguardian.com/science/2018/oct/23/oldest-intact-shipwreck-thought-to-be-ancient-greek-discovered-at-bottom-of-black-sea</guid>
<description>&lt;p&gt;Archaeologists have found what they believe to be the world’s oldest intact shipwreck at the bottom of the Black Sea where it appears to have lain undisturbed for more than 2,400 years.&lt;/p&gt;
&lt;p&gt;The 23-metre (75ft) vessel, thought to be ancient Greek, was discovered with its mast, rudders and rowing benches all present and correct just over a mile below the surface. A lack of oxygen at that depth preserved it, the researchers said.&lt;/p&gt;
&lt;p&gt;“A ship surviving intact from the classical world, lying in over 2km of water, is something I would never have believed possible,” said Professor Jon Adams, the principal investigator with the Black Sea Maritime &lt;a href=&quot;https://www.theguardian.com/science/archaeology&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Archaeology&lt;/a&gt; Project (MAP), the team that made the find. “This will change our understanding of shipbuilding and seafaring in the ancient world.”&lt;/p&gt;
&lt;p&gt;The ship is believed to have been a trading vessel of a type that researchers say has only previously been seen “on the side of ancient Greek pottery such as the ‘Siren Vase’ in the British Museum”.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;The ‘Siren Vase’ in the British Museum: the shipwreck is believed to be a vessel similar to that shown bearing Odysseus.&quot; src=&quot;https://i.guim.co.uk/img/media/23314dfe6cd0f62c08338e5128b1ac3a155fd8e0/0_0_3543_2650/master/3543.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;fit=max&amp;amp;s=01a3e0af3757a198ea98f2e038bcdb56&quot;/&gt;&lt;/div&gt;

The ‘Siren Vase’ in the British Museum: the shipwreck is believed to be a vessel similar to that shown bearing Odysseus. Photograph: Werner Forman/UIG via Getty Images
&lt;p&gt;That work, which dates from about the same period, depicts a similar vessel bearing Odysseus past the sirens, with the Homeric hero lashed to the mast to resist their songs.&lt;/p&gt;
&lt;p&gt;The team reportedly said they intended to leave the vessel where it was found, but added that a small piece had been carbon dated by the University of Southampton and claimed the results “confirmed [it] as the oldest intact shipwreck known to mankind”. The team said the data would be published at the Black Sea MAP conference at the Wellcome Collection in London later this week.&lt;/p&gt;
&lt;a href=&quot;https://interactive.guim.co.uk/maps/embed/oct/2018-10-23T01:01:04.html&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;locator&lt;/a&gt;
&lt;p&gt;It was among more than 60 shipwrecks found by the international team of maritime archaeologists, scientists and marine surveyors, which has been on a three-year mission to explore the depths of the Black Sea to gain a greater understanding of the impact of prehistoric sea-level changes.&lt;/p&gt;
&lt;p&gt;They said the finds varied in age from a “17th-century Cossack raiding fleet, through Roman trading vessels, complete with amphorae, to a complete ship from the classical period”.&lt;/p&gt;
&lt;p&gt;The documentary team made a two-hour film that is due to be shown at the &lt;a href=&quot;http://www.britishmuseum.org/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;British Museum&lt;/a&gt; on Tuesday.&lt;/p&gt;


</description>
<pubDate>Tue, 23 Oct 2018 00:10:23 +0000</pubDate>
<dc:creator>the_duke</dc:creator>
<og:url>http://www.theguardian.com/science/2018/oct/23/oldest-intact-shipwreck-thought-to-be-ancient-greek-discovered-at-bottom-of-black-sea</og:url>
<og:description>Archaeologists say the 23-metre vessel has lain undisturbed for more than 2,400 years</og:description>
<og:image>https://i.guim.co.uk/img/media/1cb1179ad6b0ff0d187a4c94e7f7484a91b81839/22_176_4072_2443/master/4072.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;fit=crop&amp;overlay-align=bottom%2Cleft&amp;overlay-width=100p&amp;overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&amp;s=72e825823e9532b5bdaf68712dba78da</og:image>
<og:type>article</og:type>
<og:title>World's oldest intact shipwreck discovered in Black Sea</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/science/2018/oct/23/oldest-intact-shipwreck-thought-to-be-ancient-greek-discovered-at-bottom-of-black-sea</dc:identifier>
</item>
<item>
<title>iPhones are hard to use</title>
<link>https://blog.fawny.org/2018/10/22/hardtouse/</link>
<guid isPermaLink="true" >https://blog.fawny.org/2018/10/22/hardtouse/</guid>
<description>&lt;p&gt;I once wrote a user manual for a handheld engine-diagnostics module for Daewoo cars. I know “hard to use” when I see it. iPhones are hard to use.&lt;/p&gt;
&lt;ul readability=&quot;15.950538687561&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;On two occasions on the same bus route, I couldn’t stand to watch late-middle-aged persons (eyeglasses perched on forehead in one case) struggle to read their iPhones. I took hold of their phones for a moment each (I got permission) and brought up the well-hidden screen for text-size selection. They picked the bigger fonts they’d needed all along. They were so grateful it was embarrassing.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The same thing later happened, though not on a bus, with an 85-year-old who was also struggling.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;Another senior knows he can send a text message to a certain phone number containing the ID number of a bus stop, but had no idea that was the worst possible way to get a transit prediction, nor that transit predictions could work everywhere, nor what to do if he were in an unfamiliar place and/or could not find the number of a bus stop.&lt;/p&gt;
&lt;p&gt;(How did this senior learn to use his iPhone? He asked his wife how to do things. He also thought he had to use the Gmail app to read his Gmail.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.2688172043011&quot;&gt;
&lt;p&gt;My almost-blind friend upgraded from an iTouch to an iPhone 8, then couldn’t check his voicemail for weeks because &lt;a href=&quot;https://www.flickr.com/photos/joeclark/sets/72157696848140930&quot; title=&quot;Flickr set&quot;&gt;iPhone keyboards and keypads randomly change or invert their colours&lt;/a&gt; and he simply could not see or locate the number buttons.&lt;/p&gt;
&lt;div id=&quot;TiOS_diallingvoicemail_850h.png-img&quot; class=&quot;splorpist&quot; readability=&quot;7&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://fawny.org/blogimages2017/iOS_diallingvoicemail_850h.png&quot; alt=&quot;Light keypad, then dark keypad with Voicemail title&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Before and after calling voicemail&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;What was obviously an itinerant Filipina nanny or maid on the way to a temp gig stopped me to ask where a well-hidden street with a hard-to-pronounce name was. “Huh?” I said. She opened her iPhone X (which had then just been released) and showed me its map. She had no idea she could ask the phone for directions. (And only after I saw the map did I understand the name she mispronounced.)&lt;/p&gt;
&lt;p&gt;(&lt;span class=&quot;caps&quot;&gt;UPDATE&lt;/span&gt;) A full day after publishing this posting, I remembered that even at the time even I forgot one could ask the iPhone for directions. People just blank on things.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;I had to tell someone who uses his Apple Watch for notifications and daily fitness tracking that his watch could give him directions &lt;em&gt;and that his phone had a Health app&lt;/em&gt;. I had to explain to him how to search for it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;hr class=&quot;w33&quot; /&gt;&lt;p&gt;Very advanced, very tuned-in people learn about, and learn how to use, new Apple features by watching them being demonstrated onstage during Apple keynote events.&lt;/p&gt;
&lt;p&gt;Then there’s everybody else. &lt;span id=&quot;more-7565&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Don Norman told us several times several years ago (&lt;a href=&quot;https://www.linkedin.com/pulse/why-apples-products-so-confusing-ignore-design-don-norman/&quot; title=&quot;Why are Apple’s products so confusing? They ignore design principles&quot;&gt;Ⅰ&lt;/a&gt; – &lt;a href=&quot;https://www.jnd.org/dn.mss/apples_products_are.html&quot; title=&quot; Apple’s products are getting harder to use because they ignore principles of design&quot;&gt;Ⅱ&lt;/a&gt; – &lt;a href=&quot;https://www.fastcompany.com/3053406/how-apple-is-giving-design-a-bad-name&quot; title=&quot;How Apple is giving design a bad name&quot;&gt;Ⅲ&lt;/a&gt;) that iPhones hide their functions. Apple never admits it makes mistakes. The next time you hear Tim Cook or somebody recounting a tale of a guy who crashed his car and was able to call a paramedic using his Apple Watch, think instead of millions of people who cannot use their phones for basic &lt;em&gt;or truly serious&lt;/em&gt; needs.&lt;/p&gt;
&lt;p&gt;With an alleged one billion “iOS devices” in use over a decade, Apple’s mistakes are the butterfly effect writ large. Anything that people could get wrong, or simply not know about, will be gotten wrong or will go unknown by tens of millions.&lt;/p&gt;
&lt;h2 id=&quot;street_201810hardtouse&quot;&gt;It’s a 1½-way street&lt;/h2&gt;
&lt;p&gt;In the iPhone context there are things you should reasonably expect are possible without any reflection (my iPhone has a calculator). There are things that should have been obvious in retrospect (my iPhone can give me directions).&lt;/p&gt;
&lt;p&gt;Yet sometimes people just need to learn the basics. There are people who Google “Facebook” to go to Facebook. (They don’t know what a browser address bar is despite its having stared them in the face for a decade, and also don’t know about bookmarks.) There are people who know what address bars are but not search bars, so they go to &lt;code&gt;google.com&lt;/code&gt; for every search. (&lt;abbr title=&quot;Compare&quot;&gt;Cf.&lt;/abbr&gt; &lt;a href=&quot;https://blog.fawny.org/browserfind/&quot; title=&quot;In the archives: The browser Find command&quot;&gt;the browser Find command&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;You shouldn’t be afraid of your phone. You shouldn’t feel inhibited from just trying things out. But we are. Me, too.&lt;/p&gt;
&lt;h2 id=&quot;necess_201810hardtouse&quot;&gt;Two absolute necessities&lt;/h2&gt;
&lt;p&gt;And they’re both hidden.&lt;/p&gt;
&lt;h3 id=&quot;textsize_201810hardtouse&quot;&gt;Text size&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://fawny.org/blogimages2017/textsize_650h.png&quot; alt=&quot;Larger text screen with third-to-last option selected&quot; class=&quot;alignright outdent10&quot; /&gt; If Apple actually cared about accessibility (it does not), on the setup screen for every iPhone, iPad, and iPod Touch would be a step you could not skip wherein you have to choose your preferred text size. And it would state explicitly that if you have to pick a size that seems a bit too big or one that’s a bit too small, go bigger.&lt;/p&gt;
&lt;p&gt;This function relates to blindness less than you might expect. Blind people don’t all need things blown up huge. My blind friend mentioned above needs normal-sized type. This issue relates to hundreds of millions of middle-aged people with presbyopia, the aging-related inability to focus that got its name three centuries ago. (It’s &lt;em&gt;inability&lt;/em&gt; to focus. &lt;em&gt;Nothing&lt;/em&gt; you can do will bring the object into focus without moving it or adding a lens.)&lt;/p&gt;
&lt;p&gt;If – further – Apple were committed to diversity (it is not), middle-aged persons would be involved in product and software development and would be present to kick up a fuss when they themselves cannot read the products they created. (Or their complaints would actually be heeded.)&lt;/p&gt;
&lt;h3 id=&quot;wifi_201810hardtouse&quot;&gt;Constant intrusive reminders of wifi networks&lt;/h3&gt;
&lt;p&gt;Even just yesterday I saw the hundredth or thousandth person instantly and reflexively and uncomprehendingly dismiss the alert box that jumps up whenever you &lt;em&gt;aren’t&lt;/em&gt; near a wifi signal you’ve logged into while there are &lt;em&gt;other&lt;/em&gt; networks to choose from. (I stood next to a friend once and took the phone out of his hand to &lt;a href=&quot;http://osxdaily.com/2012/04/07/stop-iphone-looking-for-wifi-networks/&quot; title=&quot;How-to article&quot;&gt;turn this function off&lt;/a&gt;. I did &lt;em&gt;not&lt;/em&gt; get permission but I did it anyway.)&lt;/p&gt;
&lt;p&gt;If anything in the Apple “ecosystem” reeks of the kind of Windows autism that repels Macintosh supremacists, it is every iPhone’s insistence on interrupting you just because you passed by a wifi router.&lt;/p&gt;
&lt;p&gt;Try this experiment. Take any kind of ride through an urban setting passing coffeeshops or dense residences like high-rises and condos. (Or just businesses. &lt;em&gt;Everybody&lt;/em&gt; has wireless Internet.) Hold your phone and pretend to do something with it. You’ll be interrupted endlessly.&lt;/p&gt;
&lt;p&gt;I say again: Everyone dismisses this dialogue instantly, with no knowledge of what they’re doing &lt;em&gt;or what &lt;em&gt;it&lt;/em&gt; was doing&lt;/em&gt;, and with no memory of having done it. It’s a special kind of annoyance akin to dissociative anæsthesia, in that you may not know what just happened but you sure as shit don’t want to relive it. Yet you will: It’s on by default. (And it’s too maddening for a screenshot here.)&lt;/p&gt;
&lt;h2 id=&quot;security&quot;&gt;Security (of the person)&lt;/h2&gt;
&lt;ul readability=&quot;36.458333333333&quot;&gt;&lt;li id=&quot;pass_201810hardtouse&quot; readability=&quot;10.639024390244&quot;&gt;
&lt;p&gt;Because Apple calls its passwords pass&lt;em&gt;codes&lt;/em&gt;, nobody has any clue at all that you can use an alphanumeric pass&lt;em&gt;word&lt;/em&gt; instead of a string of six digits. (Like &lt;kbd&gt;&lt;a href=&quot;https://www.usatoday.com/story/tech/talkingtech/2018/10/11/kanye-change-your-iphone-passcode-now-using-000000-bad-idea/1606983002/&quot; title=&quot;‘USA Today’ coverage&quot;&gt;000000&lt;/a&gt;&lt;/kbd&gt;?)&lt;/p&gt;
&lt;p&gt;The terminology is painful across the board. “Numeric passcode” and “password” and “alphanumeric passphrase” and “alphanumeric” are all terms we shouldn’t have to use.&lt;/p&gt;
&lt;p&gt;The interface biases you almost irrevocably toward a numeric pass&lt;em&gt;code&lt;/em&gt; instead of a pass&lt;em&gt;word&lt;/em&gt;. My blind friend had no idea what was going on one day when my login screen came up showing a keyboard.&lt;/p&gt;
&lt;p&gt;Note that pass&lt;em&gt;words&lt;/em&gt; are so unusual &lt;a href=&quot;https://arstechnica.com/gadgets/2013/09/apple-fixes-a-pair-of-lockscreen-bugs-with-ios-7-0-2-update/&quot; title=&quot;iOS 7.0.2&quot;&gt;there was a time when you couldn’t log into your phone if you were Greek and used one&lt;/a&gt;. Yes, it stands to reason that pass&lt;em&gt;words&lt;/em&gt; don’t have to use the characters on an American computer keyboard. Even Apple did not know that for a while.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;MedicalID_201810hardtouse&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;Seniors love iPads, but seniors and unhealthy people in general have a serious pressing need to fill out the Medical ID section (not obvious) in the Health app (also not obvious). Exactly the people who need this function are the least likely to use it. We cannot, and should not, rely on these seniors’ grandkids or caregivers to do it for them.&lt;/p&gt;
&lt;p&gt;Fill out these fields and not only could a paramedic, or just a bystander, learn what medical conditions you have if you’re unconscious, &lt;em&gt;they can phone your emergency contacts&lt;/em&gt; (and also call an ambulance via 911 or local equivalent). Somebody &lt;em&gt;could&lt;/em&gt; steal your phone while you’re lying half-dead on a sidewalk, but &lt;em&gt;somebody else&lt;/em&gt; could give you a serious headstart on getting your emergency taken care of.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;directions_201810hardtouse&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Few know that Siri and Maps can give you spoken and written directions. Even explaining it that way is too dry and abstract. I’ve had to say the following to people who visibly do not understand when I tell them their phone can give them directions: “If you ever get lost, hold the button down and say ‘Get me home.’ You can also hold the button down and say ‘Where am I?’ ”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I&lt;/em&gt; have had to use both of those features. Within broad limits, there is no need to get lost ever again if you have an iPhone. Now specify for me how many people know that.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;contactcard_201810hardtouse&quot; readability=&quot;4.9603174603175&quot;&gt;
&lt;p&gt;You really need to tell the phone, &lt;a href=&quot;http://osxdaily.com/2018/03/08/set-my-information-siri-ios/&quot; title=&quot;How to Set Your Personal Info with Siri on iPhone and iPad&quot;&gt;and/or Siri&lt;/a&gt;, who you are and who your family members are. This involves creating a contact card (what’s that?) &lt;em&gt;for yourself&lt;/em&gt; and linking to it. Then all your family members need their own cards, and you have to laboriously specify their relationships to you.&lt;/p&gt;
&lt;p&gt;I insist this is not an optional or nice-to-have feature. If you have chest pain, you have to be able to hold the button down and say “Call Charlie” or “Call my wife.” (God help us if Siri asks which Charlie to call.)&lt;/p&gt;
&lt;p&gt;Another friend really did have chest pain in a foreign country and it never occurred to him to call anybody. So in fact, Apple, a trillion-dollar corporation, has to put considerably greater resources into telling people how to set up their phones for emergencies so they will actually use those phones then. Again, this means &lt;em&gt;forcing people to do it upon setup&lt;/em&gt; and making it exceedingly clear, in writing and in video, what their phones can do for them when they need their phones the most.&lt;/p&gt;
&lt;p&gt;As a simple example any non-autist could have figured out over the last half-decade of iPhone development, say the following to Siri: “I’m in trouble.” Or try “I need help.” Shouldn’t those do something useful?&lt;/p&gt;
&lt;p&gt;Further, if you set up a contact card and identify yourself as the owner, anyone can ask Siri “Whose phone is this?” if they find your lost phone.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;VIP_201810hardtouse&quot; readability=&quot;3&quot;&gt;
&lt;p&gt;Last but not least, almost nobody knows you can designate some correspondents as “VIP,” so that their messages and E‑mails really get in your face. It’s also so hard to do that I have to Google it every time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Seriously advanced security features like two-factor authentication (which kind? Apple offers two) are exactly the sort of thing only experts who don’t need them will ever set up.&lt;/p&gt;
&lt;h2 id=&quot;basic_201810hardtouse&quot;&gt;“Basic” features few understand&lt;/h2&gt;
&lt;p&gt;Observing what are dismissively called “normal people” (or “users”) for more than a decade, the one thing iPhone owners are proud they know how to do is force-quit apps. They also know how to set a ringtone and choose atrocious wallpaper.&lt;/p&gt;
&lt;p&gt;And that’s &lt;em&gt;it&lt;/em&gt;. But they aren’t to blame.&lt;/p&gt;
&lt;ul readability=&quot;15.700753498385&quot;&gt;&lt;li id=&quot;swipe_201810hardtouse&quot; readability=&quot;3.6483516483516&quot;&gt;
&lt;p&gt;People kind of don’t know that they can swipe up or down from top or bottom of screen. As an example, I certainly almost never see anybody turn wifi on or off that way (it’s almost always through Settings). They certainly don’t know what Control Center and Notification Center are by name. (They also &lt;a href=&quot;https://daringfireball.net/linked/2015/08/22/iphone-6-plus-camera&quot; title=&quot;e.g., Gruber&quot;&gt;don’t know what their iSight camera is&lt;/a&gt;. They don’t know what Springboard is, and shouldn’t have to. But do they know what the home screen is?)&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;swipeLR_201810hardtouse&quot; readability=&quot;-1&quot;&gt;
&lt;p&gt;Swiping from left and right edges is barely known as being equivalent to Back and Forward commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;manip_201810hardtouse&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;You can directly manipulate almost anything on the lock screen. (They don’t know it’s a “lock screen.” They don’t know what they’ve done to their phone is “lock” it. They know they haven’t turned it off, exactly, except for the minority who completely power down their phones every single time they stop using them. Again, my blind friend was one of those people at the outset – because he believed what a Windows/Android user had told him about “battery life.”) They don’t know that those aren’t pictures on their screen but objects that can be manipulated.&lt;/p&gt;
&lt;p&gt;Exception: Music or podcasts, because the play/pause icons are self-explanatory. But try getting someone to clear a meeting reminder, or respond to a message, right from the lock screen. Only experts know that.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;pressandhold_201810hardtouse&quot; readability=&quot;1.8257345491388&quot;&gt;
&lt;p&gt;Press-and-hold is completely undiscoverable &lt;em&gt;except by accident&lt;/em&gt;. (But &lt;a href=&quot;https://support.apple.com/en-ca/HT207213&quot; title=&quot;Apple Support page for creating mailboxes&quot;&gt;is that “3D Touch” or is it “press and hold” or might it be “press deeply”&lt;/a&gt;?)&lt;/p&gt;
&lt;p&gt;What can press-and-hold do that people don’t know about?&lt;/p&gt;
&lt;ul readability=&quot;7.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Directly move a scrollbar. (Fails most of the time due to tiny narrow hotspots you’re expected to hit on the first go.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Show a magnified absolute-centred duplicate of nearly anything onscreen you cannot actually manipulate, like whatever is in the title bar. (Try pressing and holding on the battery icon.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Reader Mode in Safari, hugely useful in and of itself and nearly unknown. (Tap to activate; hold to customize.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Copy and paste. I insist that few know this function exists.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;keyboard_2018.10.23update&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;(&lt;span class=&quot;caps&quot;&gt;UPDATE&lt;/span&gt;) I forgot to mention that you can hold down on the keyboard to turn that keyboard into a trackpad manqué. So hard to use (and, of course, completely undiscoverable) that, while demonstrating it to my blind friend, I had to Google a raft of articles to figure out how it worked.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li id=&quot;move_201810hardtouse&quot; readability=&quot;3.8758620689655&quot;&gt;
&lt;p&gt;Move apps around. Creating a folder by dropping one app onto another is the second-worst interface feature of iOS. (Nº 1 with a bullet is undo; &lt;a href=&quot;https://blog.fawny.org/2018/10/22/hardtouse/#undo_201810hardtouse&quot; title=&quot;Gold standard of hidden features&quot;&gt;see below&lt;/a&gt;.) Pressing and holding on apps is what people do by accident.&lt;/p&gt;
&lt;p&gt;In fact, pressing and holding happens &lt;em&gt;only&lt;/em&gt; by accident for non-experts.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Did you know drag-and-drop exists on iPhones? I do. I can’t get it to work half the time. It requires a lighter press than 3D Touch but more than a tap.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;HONOURABLE MENTION&lt;/span&gt;: If somebody told you your Home button was going to wear out, hence you turned on AssistiveTouch, you were lied to. (That lie will have been expressed in Chinese. I have never seen a disabled person with AssistiveTouch turned on. &lt;em&gt;Only&lt;/em&gt; people with broken screens and ethnic Chinese use it, in my direct observation and &lt;a href=&quot;https://www.quora.com/Why-do-so-many-people-in-Beijing-use-assistive-touch-on-their-iPhones&quot; title=&quot;Quora article&quot;&gt;according to popular lore&lt;/a&gt;.)&lt;/p&gt;
&lt;h2 id=&quot;diabolical_201810hardtouse&quot;&gt;Diabolical interfaces&lt;/h2&gt;
&lt;ul readability=&quot;7.6544600938967&quot;&gt;&lt;li id=&quot;callwaiting&quot; readability=&quot;2.5475409836066&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.flickr.com/photos/joeclark/31667103476/&quot; title=&quot;Flickr photo&quot;&gt;user interface for call waiting&lt;/a&gt; (&lt;a href=&quot;https://www.flickr.com/photos/joeclark/14106135654/&quot; title=&quot;Second Flickr photo&quot;&gt;another example&lt;/a&gt;) not only is confusing on its face, it’s impossible to use &lt;em&gt;while you’re talking on the phone&lt;/em&gt; and &lt;em&gt;after you realize there’s another call coming in&lt;/em&gt; and &lt;em&gt;while you’re trying not to miss that call&lt;/em&gt; (or are annoyed because your phone interrupted you).&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;search_2018.10.22&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;You can search your iPhone. Whole categories of items cannot be found (e.g., photos with real filenames), but you &lt;em&gt;can&lt;/em&gt; search. You just have to know the following sequence:&lt;/p&gt;
&lt;ol readability=&quot;-1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Find a spot in Springboard (what’s that?) with no apps or folders.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Pull down. (Not from the top of the screen.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type your search term.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;It turns out you can swipe left (in most languages) from the home screen and Search appears there, too – but, due to banner blindness, it’s functionally invisible with the avalanche of coloured and vibrant items below it. I know it’s there and I basically never see it.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;photo_URL_201810hardtouse&quot; readability=&quot;-1&quot;&gt;
&lt;p&gt;The two hardest things to get onto or off of an iPhone: A photo or an URL.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;onesong_201810hardtouse&quot; readability=&quot;-1&quot;&gt;
&lt;p&gt;The simplest task that is functionally impossible to do (also on Macintosh): Play exactly one song.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;experts_201810hardtouse&quot;&gt;If experts who get paid to cover Apple do not know a feature exists, it does not&lt;/h2&gt;
&lt;p&gt;The most advanced Apple experts – &lt;a href=&quot;https://daringfireball.net/2018/10/icloud_photo_library_start_over&quot; title=&quot;Gruber&quot;&gt;one, actually&lt;/a&gt; – had no idea the following was possible. And, as with so many features, the right way to demonstrate them is via video, not a written explanation.&lt;/p&gt;
&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; select lots and lots of photos.&lt;/p&gt;
&lt;ul readability=&quot;2.8837209302326&quot;&gt;&lt;li readability=&quot;6.6744186046512&quot;&gt;
&lt;p&gt;Albums in the Photos app are opaque and basically go unused; that’s why Camera Roll &lt;a href=&quot;https://www.macrumors.com/2014/10/16/camera-roll-ios-81/&quot; title=&quot;In iOS 8.1&quot;&gt;had to be reinstated&lt;/a&gt; after it was removed for our own good.&lt;/p&gt;
&lt;p&gt;Still, go into any album. (Except shared ones, and except a few other kinds.) Hit the &lt;kbd&gt;Select&lt;/kbd&gt; button. Tap the first photo. Touch and &lt;em&gt;don’t lift your finger from&lt;/em&gt; the next photo, then drag immediately to the end of the row. Keep dragging straight down through rows to select more rows.&lt;/p&gt;
&lt;div id=&quot;TSelectAll_Citroen-911_850h.png-img&quot; class=&quot;splorpist&quot;&gt;&lt;img src=&quot;https://fawny.org/blogimages2017/SelectAll_Citroen-911_850h.png&quot; alt=&quot;Selecting many photos (11 with checkmarks)&quot; /&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Need to deselect a few? You can. Just tap them again (and you can drag through them).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Now you see with Adobe Lightroom has a select-all checkbox.&lt;/p&gt;
&lt;div id=&quot;TLightroom_selectall.png-img&quot; class=&quot;splorpist&quot;&gt;&lt;img src=&quot;https://fawny.org/blogimages2017/Lightroom_selectall.png&quot; alt=&quot;Lightroom with Select checkbox&quot; /&gt;&lt;/div&gt;
&lt;p&gt;But Apple does know, at a preconscious level, that selecting many or all pictures is an issue: In the Recently Deleted album, whose location changed in iOS 12 such that I couldn’t find it, you can Delete All in two presses.&lt;/p&gt;
&lt;p&gt;(Fun fact: You can drag and drop photos in some albums, which I discovered by getting the sequence wrong that I just listed above.)&lt;/p&gt;
&lt;h2 id=&quot;advanced_201810hardtouse&quot;&gt;Advanced features few understand&lt;/h2&gt;
&lt;ul readability=&quot;13.675459632294&quot;&gt;&lt;li&gt;
&lt;p&gt;AirDrop.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Apple Pay. Inscrutable and scary even in countries that have had chip cards forever, like Canada.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;What a Share menu is, and the fact you can reorder such menus and remove items you never use. (Much more important with big fonts because the menus side-scroll.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Remove the suggestion bar on your keyboard, which (again, after a decade) I have seen actually used &lt;em&gt;only&lt;/em&gt; in Chinese and Japanese keyboards where you have no choice in the matter. (People can see it. They just do not use it.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Remove “apps” from Messages (that row of icons just below your text-entry field – nobody knows what they’re called, and few use or want them).&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;undo_201810hardtouse&quot; readability=&quot;13.3300330033&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://fawny.org/blogimages2017/AssistiveTouch-homebutton-undo_650h.jpg&quot; alt=&quot;Home screen (with shirtless dude in pup hood) showing AssistiveTouch menu with home button, undo, other items&quot; class=&quot;alignright outdent10&quot; /&gt; The gold standard here is Undo. &lt;a href=&quot;https://daringfireball.net/2018/08/shake_to_undo&quot; title=&quot;Gruber: On Shake to Undo&quot;&gt;You have to shake your iPhone&lt;/a&gt; (or giant iPad Pro) to undo an action. You discover this by accident as you get up from a restaurant table with your phone in your hand, only to be greeted with an &lt;samp&gt;Undo Typing&lt;/samp&gt; dialogue box. Unless you are an expert, you have no idea what just happened.&lt;/p&gt;
&lt;p&gt;If you really want and need the Undo feature, turn it on with AssistiveTouch. But AssistiveTouch itself has a diabolical user interface.&lt;/p&gt;
&lt;p&gt;[Yes, I have a Home button in my AssistiveTouch, as there are weird force-quit scenarios (yes, I force-quit apps) where it’s the only thing that works.]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;Siri_201810hardtouse&quot;&gt;Siri is hard to use&lt;/h2&gt;
&lt;p&gt;Like you, I can’t get Siri to set something up correctly on the first go more than three-quarters of the time. You shouldn’t have to talk a certain way to a virtual assistant. After this many years, he should understand you; he does not. (Siri is an Australian male.)&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;strong&gt;Set up an appointment with Fred tomorrow at two&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;“Which Fred?”&lt;/dd&gt;
&lt;dd&gt;If it’s near midnight, he’ll ask you which day you mean&lt;/dd&gt;
&lt;dd&gt;If you aren’t a savage and are using a 24-hour clock, he &lt;em&gt;will&lt;/em&gt; get the time right no matter what you say&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Set up an appointment for nine&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Tries to make it for 21:00, not 09:00, when people generally have “appointments”&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Set up an appointment for tomorrow at two&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;“Let me know if you want to make any changes.” “What does that mean?” “Sorry for being obtuse”&lt;/dd&gt;
&lt;dd&gt;It turns out you can laboriously change any part of an item: “Change the time to 2:35”; “Change the title to ‘Late lunch’ ”&lt;/dd&gt;
&lt;/dl&gt;&lt;h2 id=&quot;nicetohave_201810hardtouse&quot;&gt;Genuine nice-to-have features&lt;/h2&gt;
&lt;ul readability=&quot;6.4037037037037&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Have your phone say out loud who’s calling you. This one is so pressing even David Pogue &lt;a href=&quot;https://finance.yahoo.com/news/pogues-basics-have-your-iphone-announce-your-calls-212108695.html&quot; title=&quot;Pogue’s Basics: Have your iPhone announce your calls&quot;&gt;wrote about it&lt;/a&gt;. (Settings ☞ Phone ☞ Announce Calls.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Change how Messages depicts the name of your contacts. Generally you just want first name or nickname, yes, not first name plus last initial? (Settings ☞ Contacts ☞ Short Name.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The only people who need their screen to “lock” within only a few seconds are those in high-security jobs (and wary teenagers). Almost everybody else can function better with a lag time of several minutes. (Settings ☞ Display &amp;amp; Brightness ☞ Auto-Lock.)&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;scrolltotop&quot; readability=&quot;-21&quot;&gt;
&lt;p&gt;Scroll to the top by tapping the clock. (Who would possibly discover that by accident? Somebody had to tell me about it.) Of course there’s no system-wide way to scroll to the bottom, because obviously that will never come up, because obviously no Apple software engineer has had to get to the very end of a list of 250 wedding guests in a hurry.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;manual_201810hardtouse&quot;&gt;Did you know there’s a user manual?&lt;/h2&gt;
&lt;p&gt;In the iBooks (or is it Books?) Store you can download an &lt;cite&gt;iPhone User Guide&lt;/cite&gt; for each major software version. There are usually iPad and sometimes iPod Touch user guides, too.&lt;/p&gt;
&lt;p&gt;Once you do that (you won’t), you’ll find that almost nothing I have described here is covered. It &lt;em&gt;does&lt;/em&gt; mention the ability to announce who’s calling you, but buries text size in the accessibility gulag, recapitulating the entire problem.&lt;/p&gt;
&lt;hr class=&quot;w33&quot; /&gt;&lt;p id=&quot;stewed_201810hardtouse&quot;&gt;I sat and stewed about this posting for months. If nothing else, I need to keep it from becoming a script for a YouTube video about “hidden features” in iOS.&lt;/p&gt;
&lt;p&gt;iPhones are hard to use.&lt;/p&gt;
&lt;h2 id=&quot;seealso_2018.10.23update&quot;&gt;See also&lt;/h2&gt;
&lt;ol class=&quot;typei&quot; readability=&quot;-0.096153846153846&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.fawny.org/mysetup/&quot; title=&quot;In the archives: My setup&quot;&gt;My setup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.fawny.org/technicallycompetent/&quot; title=&quot;Archive post&quot;&gt;What a technically competent person knows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.15094339622642&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.fawny.org/windoids/&quot; title=&quot;Another archive post&quot;&gt;Concepts Windoids cannot understand&lt;/a&gt; (with &lt;a href=&quot;https://blog.fawny.org/tag/windoids/&quot; title=&quot;tag: Windoids&quot;&gt;follow-ups&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Mon, 22 Oct 2018 21:05:34 +0000</pubDate>
<dc:creator>mrzool</dc:creator>
<dc:language>en-CA</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.fawny.org/2018/10/22/hardtouse/</dc:identifier>
</item>
<item>
<title>Fall in Love with the Problem, Not the Solution</title>
<link>https://www.starterstory.com/blog/building-apps-for-shopify-fall-in-love-with-the-problem-not-the-solution</link>
<guid isPermaLink="true" >https://www.starterstory.com/blog/building-apps-for-shopify-fall-in-love-with-the-problem-not-the-solution</guid>
<description>&lt;p&gt;One of the best pieces of advice I was given was to &lt;em&gt;Fall in love with the problem, not the solution&lt;/em&gt;. And it wasn’t until I came across a big problem that I realized how perfect this advice is.&lt;/p&gt;
&lt;p&gt;--&lt;/p&gt;
&lt;p&gt;My name is Ahmad Iqbal and I’m currently running two online businesses. I am both an Ecommerce Merchant as well as an Ecommerce App Developer.&lt;/p&gt;
&lt;p&gt;The first of the two is my online store where I &lt;a href=&quot;https://getnadeef.com/&quot; target=&quot;blank&quot;&gt;sell hand-held bidets&lt;/a&gt;. The later business, borne of the need to increase bidet sales, guided me to designing and developing apps for other merchants, like me.&lt;/p&gt;
&lt;p&gt;In this post I want to illustrate how I made the leap from selling bidets online, to building an app design and development team. It’s strange for me to say it out loud, &quot;how does one go from selling butt cleaning appliances to building and marketing apps?&quot; So when Pat from Starter Story reached out to do a follow-up piece to &lt;a href=&quot;https://www.starterstory.com/nadeef&quot; target=&quot;blank&quot;&gt;my original post&lt;/a&gt; I was happy to try and put my experiences into words. Not just for others to read, but for myself in documenting my journey.&lt;/p&gt;
&lt;p&gt;If the title hasn’t already given it away, this will be about my relationship with Problems.&lt;/p&gt;
&lt;p&gt;I'm going to start at the middle (quiting my job) and then go to 2015 when this 'starter story' actually started, followed by the meat and potatos of the frameworks we use in our app development model.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/t0pm5m7uku03/LKwJRTkOw8y8icK0C4mI0/f3b095e49cb430d8309f2a7e87013581/Scout_Raven_Shopify_Apps__1_.JPG&quot; alt=&quot;Scout Raven Shopify Apps (1)&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Quitting my Job &amp;amp; Making Money through Shopify Apps&lt;/h3&gt;
&lt;p&gt;From 2015 to 2017 I was working full-time at a global Big Four firm as a Senior Technology Consultant. My job was to help Fortune 1000 companies get their products to market faster. During my time growing my bidet store, I was starting to become more and more immersed in growth marketing. So much so, that I spun out a marketing framework I used for myself and called it the &lt;a href=&quot;https://www.slideshare.net/ahmiq/agile-marketing-framework&quot; target=&quot;blank&quot;&gt;&quot;Agile Marketing Framework&quot;&lt;/a&gt; for the firm. Everything I was learning on my own time for growing my own business, was helping me be better for my big clients at my job. But even though doing well at work felt great, it was WAY more fun helping small businesses. In 2017 I had decided the world needs better small businesses, not bigger big businesses.&lt;/p&gt;
&lt;p&gt;But in order to quit my job (my Nadeef bidet sales were taking a hit with my attention now diverted between my demanding full-time job, app design/development, and supporting Scout merchants) I needed to figure out if building apps on Shopify would be a viable business model. Was it even possible to earn a living selling apps full time?&lt;/p&gt;
&lt;p&gt;It seemed like a tough proposition. I would need thousands of merchants paying at least $20/month to create a successful business. I didn’t think it would be possible, until I came across the &lt;a href=&quot;https://apps.shopify.com/partners/shappify&quot; target=&quot;blank&quot;&gt;Bold Commerce&lt;/a&gt; story. This four person team in Winnipeg, Manitoba, had almost the same story as us. Merchants first, identified gaps in the app store, and deciding to build apps on Shopify. Bold Commerce now employs almost 300 people, with no outside funding to date, and with their growth solely on the Shopify platform. This case study was enough to convince us to take the leap, I wanted us to be like Bold.&lt;/p&gt;
&lt;p&gt;Having decided it was in fact possible to build positive cash flows through app subscriptions on Shopify, next thing we had to do was get our financing organized.&lt;/p&gt;
&lt;p&gt;We decided to take three months to prepare and think about if this problem was something we wanted to dedicate the next several years of our lives to. This three month period was my time to save as much money as I could, and test my own conviction. This time was a constant decision making cycle, where I continually asked myself if the market was big enough, if the problem was widespread enough, and if I had the right pieces in place. It was an important lesson from my first startup attempt almost seven years earlier. In my first startup we picked the wrong market, at the wrong time, with no experience or resources, and the result was a four year uphill campaign that left us in pieces.&lt;/p&gt;
&lt;p&gt;So before quitting my job, every dollar of income was saved, Bitcoins were cashed, plans to move out of my parent’s basement were halted, and I started creating a partner network across the ecommerce ecosystem.&lt;/p&gt;
&lt;p&gt;We had enough to focus on building our apps for 36 months without worrying about money or raising venture capital. Today we’re on month 12 out of 36.&lt;/p&gt;
&lt;h3&gt;Let's Talk About the Failure First&lt;/h3&gt;
&lt;p&gt;Instead of jupming straight into Scout (the first app we built and the main subject of this post) let me first tell you about one of our apps that did not do well. Our &quot;hand-written&quot; notes app was attempted after the initial success of Scout, but it was a wake up call to stay focused on the problem, not the solution.&lt;/p&gt;
&lt;p&gt;After quitting my job, and landing on the bigger problem of customer experience as our company mandate (more on this later), we decided to offer hand-written note services. We figured customers would love getting a handwritten note from merchants, so with little else research, or testing, we went ahead and started building out this crazy printer.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bmi48moBWGG/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;/&gt;
&lt;p&gt;The app would connect to your Shopify backend, identify your VIP customers, and then convert that customer information into a special Adobe Illustrator script that would feed into the printer. The printer then would proceed to start writing the notes in a handwritten style font (both the letter copy and the addresses on the envelope).&lt;/p&gt;
&lt;p&gt;We rolled this app out as an added skill to &lt;a href=&quot;https://apps.shopify.com/scout-cart-recovery&quot; target=&quot;blank&quot;&gt;Scout&lt;/a&gt;. Basically, when Scout would alert you about the previous days’ VIP customers, it now offered an additional button labeled &quot;Send Handwrote Card&quot; which when pressed would instigate our printer. When the card was printed, I’d just have to put the postage stamp on it and drop it off at the post office which was across the street from our co-working space.&lt;/p&gt;
&lt;p&gt;I believe this idea failed because &lt;em&gt;I fell in love with the solution&lt;/em&gt; (cool looking robotic handwriting printer) rather than the problem it was designed to solve. I still believe there is value in this idea, but by overbuilding the solution first, we lost track of what was most important.&lt;/p&gt;
&lt;p&gt;If I had to do it again I would have done a few things differently:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Manually write and fulfill the cards myself while doing the merchant discovery&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because there exists an intimate relationship between selling the service, and having to manually having to fulfill the service. It gives you more appreciation for the process and what’s important to do it successfully. Like with Scout, where I called my customers up manually through finding their details myself, and only after seeing how to do it well proceeded to systemize it with an app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Personally talk to each merchant who wanted cards written&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This would have been the best (only?) way to validate the value of the service. How important is this service for merchants? What else do they wish they could give as 'thank you's? What price would they be willing to pay on high volume handwritten cards? How much does it bother them that the cards are not personally written by the brand, and hence not authentic?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Write 0 lines of new code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why divert precious development time and resources on something if A) it’s possible to do manually, and B) there is no guarantee that it’s a lucrative idea?&lt;/p&gt;
&lt;p&gt;Thinking back, this idea was destined to fail for several reasons. Writing notes is very time consuming, there isn’t enough volume in the merchants who wanted to use it, the authenticity of the cards dies if customers figure out it’s not actually written by a person (even though it fooled almost anyone who looked at it). Even if we had done this the lean way and manually tested first, I still think we would have stopped offering the solution. But if I had just followed my four step Identify, Test, Build, Measure framework we would have saved the $4,000 we ended up spending designing and developing the software, and sourcing this printer and it’s parts. I would have found out in the Test section of the cycle that this is way too time consuming and merchants have too many questions about it to feel comfortable signing off on handwritten notes on high volume.&lt;/p&gt;
&lt;p&gt;The handwritten note printer is now a piece of decoration at our office, but hey, at least it makes for a good conversation! And it taught me what I'm about to share with you today...&lt;/p&gt;
&lt;h3&gt;Identifying a Problem&lt;/h3&gt;
&lt;p&gt;Rewind back to 2015, a few months after opening my &lt;a href=&quot;https://www.getnadeef.com&quot; target=&quot;blank&quot;&gt;Nadeef hand-held bidet&lt;/a&gt; store on Shopify I found myself tackling the abandoned checkout problem, something every merchants probably faces. For every three potential customers that reached the final stage of checkout, one wasn’t pulling out their credit card. The way I saw it, I was leaking 33% of my sales in the final, most crucial, &quot;moment of truth.&quot;&lt;/p&gt;
&lt;p&gt;I was new to this field, I didn’t know the jargon or the best practices, all I knew was I needed to plug this hole. I went down a rabbit hole of recommendations, blog posts, forum threads, apps and YouTube videos. I tried many tactics, with varying degrees of &quot;success&quot; but later I realized I was asking myself the wrong question.&lt;/p&gt;
&lt;p&gt;Instead of asking &quot;How can I recovery these sales?&quot; I should have been asking “Why are customer abandoning their checkout?”&lt;/p&gt;
&lt;p&gt;At first I tried to extrapolate why they abandoned through the default go-to answers most blog posts claim are the reasons, like shipping timeframes, pricing, return policies, etc. But I knew these weren’t the real issues causing the abandoned cart because I would address them in my auto-recovery emails, exit-popups, Facebook retargeting campaigns, or all the other ways I would try to reduce abandons.&lt;/p&gt;
&lt;p&gt;As simple as those recovery tactics may seem, I now know I was overthinking it. There was only one thing I could do to figure out why someone abandoned their checkout. Pick up the phone, and ask them one-on-one.&lt;/p&gt;
&lt;p&gt;Before I go on, I should state that my recovery rate at this point was around 10%. And Shopify’s dashboard told me this was a good thing. I just didn’t think that was good at all. It meant that for every 10 people who reached the final stage of their checkout only one person actually returned to buy? Sure it's better than $0, but what about the other 90% who aren't returning? Surely we could do better than 1/10...&lt;/p&gt;
&lt;p&gt;...and I wanted to talk to those nine people.&lt;/p&gt;
&lt;p&gt;Calling my abandoned checkout customers changed everything. It changed my whole perspective about how to do business, and it continues to change it even now. At first, there was hesitation to call up a customer out of the blue, but the desire to figure out the problem far outweighed any &quot;worst-case&quot; awkward conversation. Not to mention, they weren’t cold leads, these were highly interested customer who reached the final steps of making a purchase. In my head I kept telling myself this was exactly as if someone walked into a store, grabbed some items, placed them on the checkout counter, but just as they were about to pull out their wallet, they turned around and walked out the door. Wouldn’t the store owner ask what’s up? So I just smiled and dialled.&lt;/p&gt;
&lt;p&gt;The results were tremendous.&lt;/p&gt;
&lt;p&gt;I went from recovering 10% of my abandoned checkouts from auto-emails, &lt;a href=&quot;https://medium.com/@ahmadiqbal/the-evidence-scout-chatbot-lead-to-55-abandoned-cart-recovery-a18d84f5a8b7&quot; target=&quot;blank&quot;&gt;to recovering 55% when I got them on the phone&lt;/a&gt;. Not only that but by gathering feedback and identifying holes in my offering the percentage of abandons slowly decreased as well.&lt;/p&gt;
&lt;p&gt;I’ve outlined my learnings from calling customers into the below diagram.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bmv3snuBUgD/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;/&gt;
&lt;h3&gt;Creating a Solution&lt;/h3&gt;
&lt;p&gt;I saw my process was working, but now I needed to systemize it so I could maintain consistency in my call backs. I quickly learned that the longer I waited to call the abandoned customer back the less likely I would be able to recovery the sale. I really just needed an alert app, one that would push notify me as soon as someone abandoned, tell me what products they left, and their phone number. There was nothing in the app store that provided this function.&lt;/p&gt;
&lt;p&gt;Don’t get me wrong, there were tonnes of cart recovery apps available. The top results, the &quot;Top 10&quot; lists, all relied on exit-popups, and auto-emails. I didn’t want an app to take an auto-action by auto-sending an email, or auto-sending a Facebook message. I wanted to be told, so I could take action on it personally. I needed this because I learned how important the one-on-one relationship with my own customer was.&lt;/p&gt;
&lt;p&gt;So I called up one of my friends, who was also the developer on my first start-up, and one weekend later Scout was born. It was stupid simple. 20 minutes after an abandoned checkout, Scout would email me with the key details I needed. When I got this email all I had to do was tap the phone number in the email and my phone would automatically start dialling. It wasn’t an exciting or sexy process. It wasn’t even very hard. There was no user interface to design, there was no website to develop, it was just a hacked prototype with one simple, useful, function. &lt;em&gt;If&lt;/em&gt; an abandoned checkout, &lt;em&gt;then&lt;/em&gt; email me. And it just took a weekend to build.&lt;/p&gt;
&lt;p&gt;I used this prototype of Scout for my own needs for several months. It was easier to manage because I was push notified when I needed to take an action. It maintained my high recovery rate. And most importantly, it was fun to know when an abandon happened in real-time, it made my site feel more alive.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bmd3MBUB5dr/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;/&gt;
&lt;p&gt;Having used it for a few months and not seeing any slowdown in its utility for my store, we decided this was a tactic every merchant should have in their sales strategy. We iterated on the first version of the email-only alert channel and made it a Facebook Messenger bot, sort of like a customer relationship focused personal assistant. Scout's job would be to alert merchants when a customer abandoned their checkout, and give you their checkout details.&lt;/p&gt;
&lt;p&gt;So we published the free app in the Shopify App Store and &lt;a href=&quot;https://apps.shopify.com/scout-cart-recovery#reviews&quot; target=&quot;blank&quot;&gt;one review at a time&lt;/a&gt;, we realized it was as useful for many others as it was for us. Merchants were sending thank you emails to us, and it was here we felt we had found our first glimmer of that ever illusive &quot;Product-Market Fit.&quot;&lt;/p&gt;
&lt;p&gt;You have to remember, during this time both my friend and I had full-time jobs, and I was also running my bidet store. Scout was in no way near something resembling a business. And we didn’t approach it at all to be its own business. We just wanted to put something out into the world that would have an impact. Plain and simple. Our first few installs came organically from the Shopify App Store, and a few weeks later we had a small spike as a result of Felix Thea’s &lt;a href=&quot;https://www.shopify.ca/blog/nadeef-bidet-abandoned-carts&quot; target=&quot;blank&quot;&gt;Shopify Masters Podcast&lt;/a&gt; where, as a guest I spoke about Nadeef and mentioned Scout. We didn’t do any marketing for it until we reached about 1,000 merchants through organic search, which took over a year to achieve.&lt;/p&gt;
&lt;p&gt;It felt good making an impact for so many entrepreneurs, but we didn’t feel we had anything to quit our jobs for, yet…&lt;/p&gt;
&lt;h3&gt;What is &quot;Product-Market Fit&quot;?&lt;/h3&gt;
&lt;p&gt;Finding product-market fit is a term used very frequently in the startup or entrepreneurial circles. If you’ve found product-market fit, it means you’ve figured out how to consistently deliver value to a group of people (and get paid as a result).&lt;/p&gt;
&lt;p&gt;The two components in this equation are &lt;em&gt;Product&lt;/em&gt; and &lt;em&gt;Market&lt;/em&gt;. In my experience, the key is to start with the market. It’s important to start with the market because that’s the big immovable environment you’re in. It’s uncertain, it’s changing, there are producers and consumers operating in it already. One can’t create a market, one can only play in it, and so the market is the &quot;hard part.&quot;&lt;/p&gt;
&lt;p&gt;The product side of the equation is the easy part. These days if you can dream it, you can figure out how to make it, or get it made. For example, if you want to build a skateboard that can be converted into a surfboard, you could probably figure that out. Let's assume you've done that, it looks great, and has tonnes of cool features like an intergrated smartphone app! Awesome, great work!&lt;/p&gt;
&lt;p&gt;But now that it's built, who’s going to buy it? Where do they live, what's the population of all the surf-friendly cities? Who suffers badly enough from carrying two boards? How big is the problem? How much are people willing to pay for this? How often do they need to buy parts/replace their boards?&lt;/p&gt;
&lt;p&gt;The point is, if you confident in your answers to the above questions and your ability to establish a distribution and marketing strategy to your ideal target market, then it makes sense to start product developerment. The same rules apply for app development.&lt;/p&gt;
&lt;p&gt;I will clarify that I didn’t think Scout had enough of a product-market fit at the time. I thought we had found some fit, but we still had (have) a long way to go. After all, it is a free app and no one pays for it, so we don’t really have a way to measure if it valuable enough that people pay for it.&lt;/p&gt;
&lt;p&gt;The way this went down for us was simple. We were trying to solve my problem first. Being one of the participants in the &quot;market&quot; that had a problem with online sales, I slowly learned what I needed. And when I saw it helped/worked/was awesome, I had de-risked the product enough to feel comfortable going to market with it. In my case, it was as simple as publishing Scout to the app store AFTER knowing it was working for me.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BmgdhG7hpqh/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;/&gt;
&lt;p&gt;This is again, why the advice of falling in love with the problem, is so great. Because it forces you to &lt;em&gt;think about the market, and its needs, first&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Iterating the Product&lt;/h3&gt;
&lt;p&gt;Fast forward about a year after using Scout. I was looking through my list of customers, ordered from highest Lifetime Value (LTV) to lowest, and noticed something really fascinating. Eight out of my top 10 customers had originally abandoned their checkout and were individuals I had personally reached out over the phone. This means that by calling my abandoned checkout customers I was not only recovering the sale, but as a result they were turning into VIP customers.&lt;/p&gt;
&lt;p&gt;This was a huge wake up call because it helped me understand the real problem in my online sales strategy. If calling my abandoned checkout customers resulted in them becoming loyal customers, what if I also called those who bought without abandoning? If the one-on-one phone call is the common denominator for the high retention rate, why not apply it to more customers?&lt;/p&gt;
&lt;p&gt;Thinking back to the phone conversations over the previous 12 months I realized the most valuable bi-product of asking for feedback was not the sale itself. Rather, it was the lasting brand impression that a friendly, pre-sale service call had on my customer. Suddenly my high recovery rate made so much sense. The phone call earned trust with my customers and they were happy to come back and do business with me.&lt;/p&gt;
&lt;p&gt;With this realization came clarity about our app focus. Creating customer conversations. Customer relationships are today's small business competitive advantage. And so Scout had its first major iteration, the opportunity we've decided to pursue is to enable customer relationships. We decided Scout’s job for each and every merchant that installs it, is to identify these relationship building opportunities and turn them into one-on-one conversations.&lt;/p&gt;
&lt;p&gt;I like the below diagram (as opposed to the one earlier above) for explaining the concept in more detail because it outlines another key step, which is to test your hypothesis. Once you’ve identifying a new problem you want to solve, next thing you should do is run a test to see if your solution will work. If you can solve it, then you should build something to systemize it. If you can’t at least prove your hypothesis is true even a little bit, then I wouldn’t recommend investing more time in building a systemized solution (the product).&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BmtVRiFh-a2/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;/&gt;
&lt;p&gt;Once you’ve gone through the loop at least once, you should have identified opportunities for improvements, and this is where Scout is today. Currently we feel we’re on the Learn phase in our third loop.&lt;/p&gt;
&lt;p&gt;For those who are interested in the math of our second &quot;Measure&quot; step as it related to my store’s results after 12 months using using Scout:&lt;/p&gt;
&lt;p&gt;My top 10 customers had spent at least $600 on my store, through an average of 3 or more purchases. My top three had spent at least $1,000 in 5+ orders. As a comparison, the average customer LTV is $100.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Eight out of my top 10 overall customers were originally abandoned checkouts that I had called and recovered. They went on to be way more likely to become returning and word-of-mouth customers. Based on this, it was safe to say I needed to focus on getting more people on the phone, regardless of whether they abandoned first or not. This was the most recent learning which fueled the next round of product iterations.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Generating Installs&lt;/h3&gt;
&lt;p&gt;The Shopify App Store is pretty saturated today. There are so many apps on there already, many popular apps even have dozens of copycats. This makes it hard to market apps to merchants, because there is so much noise that’s keeping them from finding your app.&lt;/p&gt;
&lt;p&gt;I wish I had some secret formula we used to grow our installs. What I will say is that the vast majority of installs come straight from app store ranking, which I believe is mostly dependant on the number of 5 star reviews and your usable of the right keywords. I’ve added a screenshot of our first 9 months below to show you what the growth looked like in the early days.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/t0pm5m7uku03/1NbjcAuXlqqi0s0E8IKwe0/c6e04f177ac27710a1e03c1ffc6c24c8/first_9_months_installs&quot; alt=&quot;first 9 months installs&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can see that for the first 4 months, we only generated 20 installs. And three of those were from my own store and a couple friends’. The other 17 I believe probably came from the Shopify Master Podcast that I was featured on. To be fair, remember that at this time we were not focused on Scout at all. I had my full-time job, as well as my bidet store, so there were no marketing efforts put into Scout whatsoever. So how did the growth suddenly pick up in January 2017?&lt;/p&gt;
&lt;p&gt;I believe it had a lot to do with positive merchant reviews of the app. I think the app store’s algorithms started picking up the reviews we were generating and this caused a sort of upward cycle. Based on this, my advice would be, in order to grow your app installs, focus on your merchant support. Offer the best customer support you possibly can, and keep providing this level of support. It’s worked for us in the past, and it continues to work for us. Every few weeks when we generate several positive reviews in quick succession we watch our installs over the next few days, and it is noticeably larger.&lt;/p&gt;
&lt;p&gt;Just like the theme of our apps, of enabling merchants to provide great customer experience, we do the same for our service. We are an app development merchant to business owners. We saw it working in terms of making product sales online, why wouldn’t it work for app companies trying to sell to other businesses?&lt;/p&gt;
&lt;p&gt;So far the story checks out.&lt;/p&gt;
&lt;h3&gt;Customer Experience is Important (because it’s hard)&lt;/h3&gt;
&lt;p&gt;In my research around ecommerce success stories, I came across Zappos. Their business model was so on point I had to create some content around it in the form of several vlogs. &lt;a href=&quot;http://scout-merchant-home.webflow.io/&quot; target=&quot;blank&quot;&gt;Our series of vlogs&lt;/a&gt; talks about several topics around small businesses, especially the advantage that we have as small businesses. Hint: it has a lot to do with our ability to provide a superior customer experience.&lt;/p&gt;
&lt;p&gt;To get back to Zappos, Zappos is an online shoe store based in Las Vegas, Nevada, that was eventually acquired by Amazon for $1.2 billion. It just sold shoes, the same shoes you’d find in any regular store, but it did so with a militant focus on the customer experience.&lt;/p&gt;
&lt;p&gt;They do this so well that their business has a 75% repurchase rate. Even though it's an online retail business model, I strongly feel the same principles apply to all sorts of models, including SaaS, consulting, whatever.&lt;/p&gt;
&lt;p&gt;So how did Zappos do this? They did this by reinvesting a portion of each sale’s revenue, back into the customer’s experience. So instead of taking $20 from $100 sale and giving it to Facebook or Google ads in the hope of acquiring a new customer, they would use that $20 to upgrade their shipping to overnight, send a free pizza, or offer unlimited free returns. This not only made sure they retained the customer (repurchasing customers spent more and bought more frequently), but they also created free word-of-mouth customers through the advocate marketing as a result of the great experience. Tony Hsieh, the CEO of Zappos went on to write a book called &lt;em&gt;Delivering Happiness&lt;/em&gt; about this idea, which I would &lt;a href=&quot;https://www.amazon.com/Delivering-Happiness-Profits-Passion-Purpose/dp/0446576220/ref=sr_1_1?ie=UTF8&amp;amp;qid=1534191569&amp;amp;sr=8-1&amp;amp;keywords=delivering+happiness&quot; target=&quot;blank&quot;&gt;highly reccommend&lt;/a&gt; for all merchants.&lt;/p&gt;
&lt;p&gt;Speaking of great books, another book also further opened my eyes to the lost opportunities at businesses who don’t focus on the customer experience. Joey Coleman’s &lt;a href=&quot;https://www.amazon.com/Never-Lose-Customer-Again-Lifelong/dp/0735220034&quot; target=&quot;blank&quot;&gt;Never Lose a Customer Again&lt;/a&gt; opening chapter highlights an interesting ratio of 43:1. For every 43 books about sales or marketing, there is only one book about customer service, experience, or retention. That means the education around creating a customer far outweighs the education around keeping the customer. But why? It's a known fact retention provides more profitability than new acqusitions.&lt;/p&gt;
&lt;p&gt;Thinking about why this is, I believe it has less to do with the difficulty of creating &quot;wow&quot; customer experiences, and more to do with how ridiculously easy it is to automate ads and marketing campaigns. I don’t think we’re against doing hard things, but when presented with the easy option, that’s what merchants will take.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BaFgvoblF44/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;/&gt;
&lt;p&gt;If the &quot;orthodox&quot; marketing tactics can be automated (and they can), you should also incorporate the unorthodox campaigns. Things like sending a free pizza and handwritten thank you notes, will close the loop for a complete marketing strategy.&lt;/p&gt;
&lt;p&gt;Whether you’re marketing physical goods, or SaaS apps, or even professional services, it’s easy to want to automate everything. Automating Facebook and Google ads, automating email campaigns, automating chatbots, automating discounts, popups, and special offers, automating dropshipping; it’s really easy to do this, and the app stores are overflowing with apps that automate. It’s clear automation is the future, but there is no competitive advantage here.&lt;/p&gt;
&lt;p&gt;And so in order to stand out, I’ve learned you can’t automate the hard things. You should try to do the important hard things personally, because it’s in those moments that you will build brand reputation and value.&lt;/p&gt;
&lt;h3&gt;More than One Solution (to the Problem)&lt;/h3&gt;
&lt;p&gt;We went from running a Shopify store earning several thousand dollars per month, to developing a suite of apps used by over 10,000 merchants.&lt;/p&gt;
&lt;p&gt;Working on Scout, and seeing the success from it, we started ideating other ways of getting customers on the phone. Why does only an abandoned checkout need to result in the phone call? What if a customer is interested in purchasing but hasn’t clicked &quot;add to cart&quot; yet? To capture these unrealized leads we developed the callback app called &lt;a href=&quot;https://apps.shopify.com/raven&quot; target=&quot;blank&quot;&gt;Raven Callback&lt;/a&gt;. Raven turns website visits into qualified sales calls. It helped tremendously on my store, because it started to capture more leads due to its lightweight nature. I didn't think the contact/email form was working for me because it’s too much stuff for customers to type, and they perceive replies would take up to 48 hours, so why bother? Same with the livechat, since majority of &lt;strong&gt;small businesses&lt;/strong&gt; don’t reply immediately. The “immediate” callback did wonders and customers continuously commented it was the best customer service they’ve experienced. So, we ran with Raven as well, based on the success I had with my own store we published it on the Shopify App Store.&lt;/p&gt;
&lt;p&gt;Raven only has a few dozen merchants on our paid plans, but just those merchants have directly generated over $500,000 for themselves in sales over the past 3 months since we launched. Again, we’re seeing the phone channel as a great medium to close sales, and it works really well for certain products and services. I think any store that wants to have one-on-one conversations with customers, especially those who sell products over $200, should seriously consider the phone as a sales channel.&lt;/p&gt;
&lt;h3&gt;What’s Next&lt;/h3&gt;
&lt;p&gt;Now we’re working on publishing our third app, again, inspired from running my bidet store. It’s not phone related, but it is related to customer experience and building a relationship with your VIP customers. The app is called &lt;a href=&quot;https://www.getpizzaparty.com&quot; target=&quot;blank&quot;&gt;Pizza Party&lt;/a&gt;, and it sends free pizzas to those VIP customers.&lt;/p&gt;
&lt;p&gt;Based on the learnings from the &quot;failed&quot; hand-written note product, this time, I'm focusing on more customer conversations about it before going ahead and publishing the app. We're not sure yet when we'll officially launch it, it's about half-way done, but I'm happy to chat with anyone who wants to use it for their store. It’s really fun and easy to use. When merchants install it they just outline the parameters of a &quot;great&quot; customer, like order value, lifetime value or order frequency, and then confirm which customers to send to. For example, if you consider any customer who spends at least $200 per order on your store as a “VIP” customer, then Pizza Party will send a free “thank you” pizza to that customer on your behalf. The merchant pays for the pizza, and we take a small percentage, but it’s super easy to get started and really fun to use. The feedback I was getting from my bidet customers who I sent free pizzas was just too awesome to pass up on this app idea. I sent free large cheese pizzas to customers who bought a few hundred dollars worth of bidets last winter and that small token of my appreciation turned into a few hundred dollars in more revenue; it was triple digit ROI. Customers said it was the best customer service they’ve ever had, ended up sharing the story with their friends, which then resulted in word-of-mouth sales.&lt;/p&gt;
&lt;p&gt;If you’ve read this far you’ve probably put together the pattern here. I tried a marketing experiment for my Nadeef Bidet store, and if it worked really well I tried to systemize it. By focusing on solving our own problems first, we now have 3 apps, 3 more in private beta, and plans to roll out for several other platforms very soon. And thanks for reading! If you want to get in touch, or have any quetions, feel free to reach out &lt;a href=&quot;https://www.starterstory.com/cdn-cgi/l/email-protection#5b3a3336322a636c1b3c363a323775383436&quot; target=&quot;blank&quot;&gt;via email&lt;/a&gt; or &lt;a href=&quot;https://www.instagram.com/ahmiq/?hl=en&quot; target=&quot;blank&quot;&gt;Instagram&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ll sign off with a Haiku:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What better problem&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Than the one you yourself face&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To solve for others too&lt;/em&gt;&lt;/p&gt;
&lt;h2 class=&quot;question&quot;&gt;Want to start your own business?&lt;/h2&gt;
&lt;div class=&quot;answer&quot; readability=&quot;17.153605015674&quot;&gt;
&lt;p&gt;Hey! 👋I'm Pat Walls, the founder of Starter Story.&lt;/p&gt;
&lt;p&gt;We interview successful business owners and share the stories behind their business.&lt;/p&gt;
&lt;p&gt;By sharing these stories, we want to help others get started.&lt;/p&gt;
&lt;p&gt;If you liked this story, &lt;a class=&quot;external-link&quot; href=&quot;https://manage.kmail-lists.com/subscriptions/subscribe?a=Jchkiv&amp;amp;g=KBDbDN&quot; target=&quot;_blank&quot;&gt;join our mailing list&lt;/a&gt; for new interviews every Tuesday.&lt;/p&gt;
&lt;p&gt;- &lt;img alt=&quot;pat-walls&quot; class=&quot;article-bio&quot; src=&quot;https://s3.amazonaws.com/www.starterstory.com/pat-walls.png&quot;/&gt;&lt;a class=&quot;external-link&quot; href=&quot;https://twitter.com/thepatwalls&quot; target=&quot;_blank&quot;&gt;Pat Walls,&lt;/a&gt; Founder of Starter Story&lt;/p&gt;
&lt;/div&gt;
&lt;h2 class=&quot;question&quot;&gt;Share Building Apps for Shopify: Fall In Love With The Problem, Not The Solution!&lt;/h2&gt;

</description>
<pubDate>Mon, 22 Oct 2018 19:24:30 +0000</pubDate>
<dc:creator>patwalls</dc:creator>
<og:title>Building Apps for Shopify: Fall In Love With The Problem, Not The Solution - Starter Story</og:title>
<og:description>One of the best pieces of advice I was given was to Fall in love with the problem, not the solution. And it wasn’t until I came across a big problem that I realized how perfect this advice is.--My name is Ahmad Iqbal and I’m currently running two online businesses. I am both an Ecommerc...</og:description>
<og:url>https://www.starterstory.com/blog/building-apps-for-shopify-fall-in-love-with-the-problem-not-the-solution</og:url>
<og:image>https://s3.amazonaws.com/www.starterstory.com/stories/social_shares/000/000/191/original/temp.png?1540264930</og:image>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.starterstory.com/blog/building-apps-for-shopify-fall-in-love-with-the-problem-not-the-solution</dc:identifier>
</item>
<item>
<title>AWS CEO Jassy follows Apple in calling for retraction of Chinese spy chip story</title>
<link>https://www.cnbc.com/2018/10/22/aws-ceo-jassy-follows-apple-calls-for-spy-chip-story-retraction.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2018/10/22/aws-ceo-jassy-follows-apple-calls-for-spy-chip-story-retraction.html</guid>
<description>&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Andy Jassy, the CEO of &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;9399&quot; data-inline-quote-symbol=&quot;AMZN&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=AMZN&quot;&gt;Amazon&lt;/a&gt; Web Services, followed Apple's lead in calling the for the retraction of Bloomberg's story about spy chips being embedded in servers.&lt;/p&gt;
&lt;p&gt;&quot;They offered no proof, story kept changing, and showed no interest in our answers unless we could validate their theories,&quot; Jassy wrote in a tweet on Monday. &quot;Reporters got played or took liberties. Bloomberg should retract.&quot;&lt;/p&gt;
&lt;blockquote class=&quot;embed-container twitter-tweet&quot;&gt;
&lt;p&gt;&lt;a class=&quot;inline_asset&quot; href=&quot;https://twitter.com/ajassy/status/1054401346827243520?s=21&quot; target=&quot;_self&quot;&gt;tweet&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apple CEO &lt;a href=&quot;https://www.cnbc.com/tim-cook/&quot;&gt;Tim Cook&lt;/a&gt; told Buzzfeed on Friday that the scenario Bloomberg reported never happened and that the October story in Bloomberg Businessweek &lt;a href=&quot;https://www.cnbc.com/2018/10/19/apples-tim-cook-calls-for-retraction-on-chinese-spy-chip-story.html&quot;&gt;should be retracted&lt;/a&gt;. Bloomberg &lt;a href=&quot;https://www.cnbc.com/2018/10/04/chinese-spy-chips-are-said-to-be-found-in-hardware-used-by-apple-amazon-apple-denies-the-bloomberg-businessweek-report.html&quot;&gt;alleged data center hardware&lt;/a&gt; used by Apple and AWS, and provided by server company &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;56045&quot; data-inline-quote-symbol=&quot;SMCI&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=SMCI&quot;&gt;Super Micro&lt;/a&gt;, was under surveillance by the Chinese government, even though almost all the companies named in the report denied Bloomberg's claim.&lt;/p&gt;
&lt;p&gt;Bloomberg published a denial from AWS alongside its own report, and AWS refuted the report in a more strongly worded six-paragraph &lt;a class=&quot;inline_asset&quot; href=&quot;https://aws.amazon.com/blogs/security/setting-the-record-straight-on-bloomberg-businessweeks-erroneous-article/&quot;&gt;blog post&lt;/a&gt; entitled &quot;Setting the Record Straight on Bloomberg Businessweek's Erroneous Article.&quot;&lt;/p&gt;
&lt;p&gt;The Bloomberg story said that servers from Super Micro in AWS Beijing data centers contained malicious chips, which were also found in servers from Elemental Technologies, a company AWS acquired.&lt;/p&gt;
&lt;p&gt;&quot;There are so many inaccuracies in ‎this article as it relates to Amazon that they're hard to count,&quot; Steve Schmidt, chief information security officer at AWS, wrote in the post.&lt;/p&gt;
&lt;p&gt;Also on Monday, Super Micro told shareholders that it sent &lt;a href=&quot;https://www.cnbc.com/2018/10/22/super-micro-to-review-chips-in-light-of-media-report-on-hacking.html&quot;&gt;a letter to customers&lt;/a&gt; informing them that it's conducting a &quot;complicated and time-consuming review to further address the article&quot; even as it lacks proof of the sort of malicious chips that Bloomberg had described.&lt;/p&gt;
&lt;p&gt;WATCH: &lt;a href=&quot;https://www.cnbc.com/video/2018/10/09/super-micro-plunges-on-new-report-of-hacked-hardware-in-us.html&quot;&gt;Super Micro plunges on new report of hacked hardware in US&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;/&gt;</description>
<pubDate>Mon, 22 Oct 2018 19:24:19 +0000</pubDate>
<dc:creator>magoghm</dc:creator>
<og:type>article</og:type>
<og:url>https://www.cnbc.com/2018/10/22/aws-ceo-jassy-follows-apple-calls-for-spy-chip-story-retraction.html</og:url>
<og:image>https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2018/03/05/105045612-jassy-hands.1910x1000.jpg</og:image>
<og:title>AWS CEO Jassy follows Apple in calling for spy chip story retraction</og:title>
<og:description>AWS CEO Andy Jassy said in a tweet on Monday that Bloomberg should retract its story about Chinese spy chips. He was agreeing with Apple CEO Tim Cook, who told Buzzfeed last week that the story was wrong.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2018/10/22/aws-ceo-jassy-follows-apple-calls-for-spy-chip-story-retraction.html</dc:identifier>
</item>
<item>
<title>Rust can be difficult to learn and frustrating, but it&amp;#039;s also very exciting</title>
<link>https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/</link>
<guid isPermaLink="true" >https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/</guid>
<description>&lt;p&gt;I recently decided to put serious effort into learning the Rust programming language. I saw it coming up frequently in interesting projects (e.g. &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;ripgrep&lt;/a&gt;) and kept hearing good things about it. My hesitation to picking up Rust since its 1.0 release in 2015 came from two fronts. First, I’m completely invested in Go because of InfluxDB. Second, I heard that it was not the easiest thing to learn. While I don’t normally shy away from difficult tasks, I was hesitant because I believe that many developer tools that take off do so because they are easy to use or give developers significant productivity gains. More often than not, I want to invest my time in tools that I think have longevity that will get some critical mass in the market.&lt;/p&gt;
&lt;p&gt;However, there were a few things about Rust that gave me the inkling that even if it might be difficult to learn, it also might be carving out a very important (and needed) niche in the programming language landscape. What follows are my reflections on what I think those strengths are, how I’m approaching learning the language, and why I’m very excited about Rust. But be warned, I haven’t yet run anything in production, I’ve only written around 2,500 lines of Rust code, and I have yet to do any multi-threaded or network programming, or benchmarking. This is all based on my early impressions.&lt;/p&gt;
&lt;p&gt;So why Rust? What caused me to want to look into the language more deeply? I’d be lying if I didn’t say that its performance wasn’t one of the big factors. No garbage collection, but with primitives built into the language/compiler to make sure you don’t forget to free the mallocs or accidentally dereference invalid pointers? Sign me up. There were two other big features on the list that interested me. The ability to create libraries that you can link to in other languages (like Python, Ruby, Go, etc.) via FFI was something I’ve been thinking about for some future work at Influx. Also, low (or zero?) cost integration with C and C++ libraries was a big motivator. There are some big C++ projects that I’d like to integrate with, and Rust seemed like a nice way to do this.&lt;/p&gt;
&lt;p&gt;As for Rust’s relevance to Influx, I have a dream of creating a Rust-based implementation of &lt;a href=&quot;https://www.influxdata.com/blog/why-were-building-flux-a-new-data-scripting-and-query-language/&quot;&gt;Flux (our new scripting &amp;amp; query language)&lt;/a&gt; that uses the C++ Apache Arrow libraries, that would be embeddable in other systems (like Spark, Kafka Streams or other places). Additionally, the new version of our cloud platform is a services-based design so Rust could find its way into our infrastructure through specific services that could benefit from its performance and guarantees in preventing data races (another big Rust advantage). So those are what motivated me to finally take the leap, but I soon found out that those wouldn’t be the only things that make Rust a compelling language to work with.&lt;/p&gt;
&lt;h2&gt;Learning Rust by Implementing a Lexer, Pratt Parser, and Tree Walking Interpreter&lt;/h2&gt;
&lt;p&gt;I decided that a small project was the best way to start picking up the language. I saw someone link to Thorsten Ball’s book on &lt;a href=&quot;https://interpreterbook.com/&quot;&gt;Writing an Interpreter in Go&lt;/a&gt; and thought that writing that in Rust would be a good place to start. After having read the book, I highly recommend it, but I’ll come back to that. I’ve written an interpreter before, I’m very familiar with Go, and the nice thing about this project is that it limits the scope of what I’d need to learn. It only uses standard library functionality and doesn’t require any multi-threading or networking. Thorsten’s book comes with all of the code and extensive tests so it’s easy to make sure things are correct. I didn’t have to think about the algorithmic how of what I was building, only how to do it in Rust specifically. But before I dove into implementation, I’d have to pick up the language basics.&lt;/p&gt;
&lt;p&gt;I should probably give a little context for where I’m coming from as a developer, because I think people with different backgrounds might find it easier (or harder) to learn Rust. I’ve been a Go programmer pretty exclusively since mid-2013. Prior to that I worked on a single page Javascript (Backbone) application for the better part of a year and before that I had built a “time series database (API)” in Scala. Going back further I was writing Ruby and Rails applications with a bunch of Javascript thrown into the mix, which is what I focused on from about 2006 to 2010. Before that it was C# and before that Delphi (which isn’t one I see on many resumes). I’ve written C and C++ before, but not since 2009 and even then I’ve probably only written about 10k lines of code in those two. More to the point, I’ve spent almost my entire career working in garbage collected languages. I also haven’t been very low level and not a systems person (unless you count building a database).&lt;/p&gt;
&lt;p&gt;I started out by reading &lt;a href=&quot;https://doc.rust-lang.org/book/&quot;&gt;The Rust Programming Language&lt;/a&gt;, which is part of the free online documentation. My learning process usually involves multiple passes over material that covers the subject I’m trying to learn. The first pass is just to get the higher level ideas and introduce the vocabulary. I refer to this as the point where I build an index in my head of concepts. So I read through the book fairly quickly without worrying about if I deeply understood each part since I’m intending on either re-reading it, or picking up another book to cover the same material in a slightly different way.&lt;/p&gt;
&lt;p&gt;Reading through this particular book made me appreciate early one of the Rust community’s strengths: documentation is built into everything. Docs for the standard library are online, or you can bring them up locally with a single command (something that’s great when you’re learning on a plane). Documentation exists as comments in the code and this is standard for third-party libraries. Cargo, the package management system, is quite good at pulling this all together. If you have a library, you can bring up its docs and the docs for all of its dependencies with a single command. The other amazing thing about the documentation in comments is that the examples you put into your docs will actually get built during testing, so code in documentation never falls out of sync with the actual library definitions (&lt;a href=&quot;https://github.com/pauldix/monkey-rust/blob/master/src/lib.rs#L16-L34&quot;&gt;example from my project&lt;/a&gt;). These little touches all combine to build what I think is a very solid foundation for future Rust library authors, and more importantly, users.&lt;/p&gt;
&lt;p&gt;At this point I was ready to start actually writing code. Thorsten’s book comes in at only four chapters, but it’s quite a bit of material (just over 200 pages). The order you implement everything is this: first the lexer, then the parser, then the interpreter, and then go back to add features to the language in all three areas. Converting the lexer over to Rust was a fairly straightforward process and didn’t present too many challenges beyond initial struggles with the borrow checker and compiler. Since a big part of learning a new thing is rote memorization, the mechanical aspects of building a lexer and parser are actually a good repetitive task to start hammering the syntax and vocabulary into your brain. It’s also fun and satisfying to create a test, see it fail, then write a bit of code to make it pass. Thorsten’s writing style is great, and he makes the whole exercise quite fun.&lt;/p&gt;
&lt;p&gt;When it came time to implement the parser, I hit a wall. Specifically, I had to figure out how to do recursion and a nested tree structure (the AST) without having the &lt;a href=&quot;https://doc.rust-lang.org/1.8.0/book/references-and-borrowing.html&quot;&gt;Rust borrow checker&lt;/a&gt; yell at me. I Googled around a bit and re-read some sections of the book, but I obviously needed a deeper understanding of the borrow checker. I also read other people’s accounts of “hitting a wall” in the process of learning Rust so I figured extra effort would lead me to scaling it.&lt;/p&gt;
&lt;p&gt;In fact, there were multiple times during my learning process in which I was transported back in time to when I was initially trying to learn how to program. After learning Basic in elementary &amp;amp; middle school, I remember evenings in high school trying to get C programs to compile and just not figuring things out. It took me multiple attempts and approaches to eventually pick up programming in any meaningful way. Contrary to popular belief, I don’t think great programmers have some innate ability that makes learning to code easy. I think they just fight through the hurdles in search of those few moments when things “just work” and you feel a deep sense of satisfaction. My sense is that if you’re going to learn Rust, you need to prepare yourself for this level of effort and frustration, but if you do, I think the payoff is worth it.&lt;/p&gt;
&lt;p&gt;I decided it was time to go back to some more structured learning so I picked up &lt;a href=&quot;https://www.amazon.com/Programming-Rust-Fast-Systems-Development/dp/1491927283/&quot;&gt;Programming Rust&lt;/a&gt; and read through the first ten chapters before coming back to code. This book is great and was exactly what I needed to start really getting some of Rust’s core concepts. This one covers some in-depth stuff about how memory is organized and frequently references C++ code in comparison, but knowledge of C++ isn’t a prerequisite for getting significant value out of it. I think reading both is a good approach and I’d probably repeat it in the same way: read one, write some code, then read the other.&lt;/p&gt;
&lt;p&gt;After reading the first 10 chapters of Programming Rust, I was able to push through the rest of the implementation. I still have open questions, and I’m not sure if the structure I used makes the most sense. I tried to stick pretty close to Thorsten’s Go implementation, but I did bring in some Rust specific things. But overall I’m not sure if an experienced Rust programmer would approve of the style and structure. I’ll come back to what I plan on doing to address this gap in my knowledge.&lt;/p&gt;
&lt;p&gt;I used enums pretty extensively, and I used Rust’s Result pattern for returning errors. Rust’s idioms on error handling are fantastic. Errors have to be handled (or explicitly ignored with extra code and keystrokes) and the &lt;a href=&quot;https://doc.rust-lang.org/book/2018-edition/ch09-02-recoverable-errors-with-result.html#a-shortcut-for-propagating-errors-the--operator&quot;&gt;? operator&lt;/a&gt; is very nice in eliminating a bunch of boilerplate error handling code (which should be particularly compelling for anyone coming from Go). No more checking the error and returning if it’s there. Rust handles this for you. Take this function for parsing a hash literal from Thorsten’s Go implementation and my Rust implementation:&lt;/p&gt;
&lt;h3&gt;Go Implementation&lt;/h3&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
&lt;code class=&quot;language-markup&quot;&gt;func (p *Parser) parseHashLiteral() ast.Expression {
        hash := &amp;amp;ast.HashLiteral{Token: p.curToken}
        hash.Pairs = make(map[ast.Expression]ast.Expression)

        for !p.peekTokenIs(token.RBRACE) {
                p.nextToken()
                key := p.parseExpression(LOWEST)

                if !p.expectPeek(token.COLON) {
                        return nil
                }

                p.nextToken()
                value := p.parseExpression(LOWEST)

                hash.Pairs[key] = value

                if !p.peekTokenIs(token.RBRACE) &amp;amp;&amp;amp; !p.expectPeek(token.COMMA) {
                        return nil
                }
        }

        if !p.expectPeek(token.RBRACE) {
                return nil
        }

        return hash
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Rust Implementation&lt;/h3&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
&lt;code class=&quot;language-markup&quot;&gt;.   fn parse_hash_literal(parser: &amp;amp;mut Parser) -&amp;gt; ParseResult {
        let mut pairs: HashMap&amp;lt;Expression,Expression&amp;gt; = HashMap::new();

        while !parser.peek_token_is(&amp;amp;Token::Rbrace) {
            parser.next_token();
            let key = parser.parse_expression(Precedence::Lowest)?;

            parser.expect_peek(Token::Colon)?;
            parser.next_token();
            let value = parser.parse_expression(Precedence::Lowest)?;

            pairs.insert(key, value);

            if !parser.peek_token_is(&amp;amp;Token::Rbrace) {
                parser.expect_peek(Token::Comma)?;
            }
        }

        parser.expect_peek(Token::Rbrace)?;

        Ok(Expression::Hash(Box::new(HashLiteral{pairs})))
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see, I kept a pretty faithful port with the function names and basic code structure being largely the same. The experienced Rust developers will probably notice my inconsistent use of moves or borrows when passing a token to a method (I should refactor). There are three spots in the Go implementation that check for some error condition and return a nil if found. Thorsten puts errors into the struct that’s doing the parsing, where I chose to propagate errors through the return values of functions so that I could use Rust’s ? operator. I think Rust has the most elegant patterns for error handling of any language I’ve worked with. I never liked exceptions and Go’s pattern is more about style, which can be ignored or abused. Rust enforces it in the compiler. I like this because I’m a flawed human being that works with other human beings, so if the compiler can force us onto the right path, I’m all for it.&lt;/p&gt;
&lt;p&gt;Once I passed the hurdle of implementing the first pieces of the Parser, everything else was pretty straightforward. As I mentioned, it’s a pretty mechanical process, so I just used that time to work on memorizing syntax for everything and taking pleasure in the step by step process of test, fail, pass. I suppose I did take a little time to learn how to implement local scopes and closures in the language. I had to pick up &lt;a href=&quot;https://doc.rust-lang.org/std/rc/struct.Rc.html&quot;&gt;Rc&lt;/a&gt; (a reference counted pointer) and &lt;a href=&quot;https://doc.rust-lang.org/std/cell/struct.RefCell.html&quot;&gt;RefCell&lt;/a&gt; (for dynamically mutating &lt;a href=&quot;https://github.com/pauldix/monkey-rust/blob/master/src/object.rs#L212-L216&quot;&gt;state in the Environment associated with a function&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Although this design led to memory leaks in my implementation, that’s because it creates a cycle of reference counted structs due to the Monkey language’s closures, so they don’t get freed up. I’m wondering if there’s a way to design and structure the code around this or if I need to implement a basic garbage collector. I’ve opened up &lt;a href=&quot;https://github.com/pauldix/monkey-rust/issues/2&quot;&gt;an issue to discuss a GC for Monkey Rust&lt;/a&gt; if anyone is up for giving me a few pointers in the right direction.&lt;/p&gt;
&lt;h2&gt;Rust’s Strengths and Sweet Spot&lt;/h2&gt;
&lt;p&gt;I’d estimate that I’m not quite halfway through my process of learning Rust, but I still have some thoughts about where I think Rust fits into the programming landscape. The easiest way to think about it is to talk about what language Rust might replace. I think that almost any project you’d consider doing in C or C++ is a candidate for doing in Rust. Lower level systems projects, things that require excellent performance, or projects that require more control over what happens with your memory. Load balancers, proxies, operating systems, databases, network queues, distributed systems, machine learning libraries, the underlying implementation for higher level languages, and probably countless other things that are not coming immediately to mind. I think all of these represent perfect candidates for Rust implementations.&lt;/p&gt;
&lt;p&gt;Over the last five years, Go has been picking up a significant number of these kinds of projects. One of Go’s primary advantages is in how simple the language is and how quickly it can be learned. Contrast this to Rust, which has significantly more syntax, a model for working with memory management that few if any programmers are familiar with, and a compiler that can be more strict than even the worst disciplinarian. However, there are compelling advantages that Rust can boast, which I think warrant the initial learning curve.&lt;/p&gt;
&lt;p&gt;I mentioned this earlier, but Rust’s model makes creating a data race impossible when developing safe Rust code. The concurrency model is checked by the compiler. We’ve had a number of production bugs in InfluxDB due to data races that were only caught under heavy load. While Go may have channels, it offers no compile time guarantees that you’re not creating data races.&lt;/p&gt;
&lt;p&gt;Forced error checking by the compiler is another big win. Yes, your development process can force code reviews, which should catch any code not correctly handling errors, but that’s a fallible process. With Rust, the compiler forces you to “do the right thing”, which is great because then you won’t have to worry about it slipping past a code review.&lt;/p&gt;
&lt;p&gt;No referencing nil pointers. Oh how many times over the last five years have I done this, seen this or been bitten by it? That all goes away with Rust. Again, the compiler will force you to do the right thing. Speaking of the compiler, the messages it gives are the best I’ve ever seen. Helpful and frequently tell you exactly what to do to fix your error.&lt;/p&gt;
&lt;p&gt;In Rust there are entire classes of bugs that are simply impossible to create because of the compile time guarantees. Because it’s software, there will be bugs. Oh yes, there will be bugs. However, we can create all new bugs and not trip over these other ones that we’ve been creating for the last four-plus decades. This is the payoff, and despite the strictness of the compiler, Rust’s bet is that if you learn the way you can be as productive (or more) than with another language. In Programming Rust, Jim Blandy and Jason Orendorff refer to this as “Rust’s radical wager.”&lt;/p&gt;
&lt;h2&gt;Next Steps &amp;amp; Conclusion&lt;/h2&gt;
&lt;p&gt;I have more miles to travel on my Rust journey before I can validate Blandy and Orendorff’s proposition, but I intend to give it real effort. Here are the next steps on my journey to getting to some level of Rust expertise.&lt;/p&gt;
&lt;p&gt;I intend to finish Programming Rust and read through &lt;a href=&quot;https://doc.rust-lang.org/nomicon/&quot;&gt;The Rustinomicon&lt;/a&gt;, the book on advanced and unsafe Rust. After that I’ll pick up a small prototype project to create a web service that uses a C++ storage library. For that I’ll finally dig into network programming and multi-threading. I’ll also be picking up a little unsafe code (or using an existing Crate). Speaking of, how are Rustaceans writing gRCP services?&lt;/p&gt;
&lt;p&gt;Another place I need to focus some time on is what idiomatic Rust looks like. For this, I’d like to spend time reading through Crates (Rust libraries) that other Rust developers think show good style and exercise all the various areas of the language. Any recommendations here would be greatly appreciated, just &lt;a href=&quot;https://twitter.com/pauldix&quot;&gt;@pauldix&lt;/a&gt; on Twitter. Also, if there are any Rustaceans that have an hour to get on a Zoom call with me and pick apart my &lt;a href=&quot;https://github.com/pauldix/monkey-rust&quot;&gt;code for Monkey Rust&lt;/a&gt;, I’d be in your debt and I’d be happy to pay it forward to some other newcomers once I’m more up to speed. Or I’ve also left some &lt;a href=&quot;https://github.com/pauldix/monkey-rust/pull/1&quot;&gt;questions on a pull request in the repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, I picked up Thorsten’s sequel to Writing an Interpreter in Go, titled &lt;a href=&quot;https://compilerbook.com/&quot;&gt;Writing a Compiler in Go&lt;/a&gt;, which I’m looking forward to reading through while adding to my implementation of Monkey Rust. If you have any interest in the subject, I highly recommend them.&lt;/p&gt;
&lt;p&gt;After all of this, I’ll be in a good place to make real efforts on some of the projects I envision for Rust at Influx. I think an embeddable implementation of Flux would be a fantastic thing to create in Rust.&lt;/p&gt;
&lt;p&gt;I haven’t yet figured out how productive I can be in Rust, but so far I’m enjoying learning the language and am very excited about what I might be able to build with it. I think there’s a very real possibility that mountains of C and C++ code gets rewritten over the next fifty years leading to more secure systems software built around Rust’s guarantees. Would I write a new web service in it? Maybe, although I’d probably still reach for Go, but depending on the requirements, Rust might be a first choice.&lt;/p&gt;
&lt;p&gt;And if Rust’s radical wager turns out to be a winning bet, it’ll become my de facto first choice for servers and systems.&lt;/p&gt;

</description>
<pubDate>Mon, 22 Oct 2018 19:16:45 +0000</pubDate>
<dc:creator>pauldix</dc:creator>
<og:type>article</og:type>
<og:title>Rust can be difficult to learn and frustrating, but it’s also the most exciting thing in software development in a long time | InfluxData</og:title>
<og:description>I recently decided to put serious effort into learning the Rust programming language. I saw it coming up frequently in interesting projects (e.g. ripgrep) and kept hearing good things about it. My hesitation to picking up Rust since its 1.0 release in 2015 came from two fronts. First, I’m completely invested in Go because of …</og:description>
<og:url>https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/</og:url>
<og:image>https://www.influxdata.com/wp-content/uploads/InfluxData-fb-image.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/</dc:identifier>
</item>
<item>
<title>Oculus co-founder is leaving Facebook after cancellation of ‘Rift 2’ headset</title>
<link>https://techcrunch.com/2018/10/22/oculus-co-founder-is-leaving-facebook-after-cancellation-of-rift-2-headset/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/10/22/oculus-co-founder-is-leaving-facebook-after-cancellation-of-rift-2-headset/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/person/brendan-iribe&quot; target=&quot;_blank&quot; data-type=&quot;person&quot; data-entity=&quot;brendan-iribe&quot;&gt;Brendan Iribe,&lt;/a&gt; the co-founder and former CEO of &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/oculus-vr&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;oculus-vr&quot;&gt;Oculus,&lt;/a&gt; announced today that he is leaving Facebook, TechCrunch has learned.&lt;/p&gt;
&lt;p&gt;Iribe is leaving &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/facebook&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;facebook&quot;&gt;Facebook&lt;/a&gt; following some internal shake-ups in the company’s virtual reality arm last week that saw the cancellation of the company’s next generation “Rift 2” PC-powered virtual reality headset, which he had been leading development of, a source close to the matter told TechCrunch.&lt;/p&gt;
&lt;p&gt;Iribe and the Facebook executive team had “fundamentally different views on the future of Oculus that grew deeper over time,” and Iribe wasn’t interested in a “race to the bottom” in terms of performance, we are told.&lt;/p&gt;
&lt;p&gt;Iribe announced his departure in a Facebook post today:&lt;/p&gt;
&lt;blockquote readability=&quot;37&quot;&gt;
&lt;p&gt;So much has happened since the day we founded Oculus in July 2012. I never could have imagined how much we would accomplish and how far we would come. And now, after six incredible years, I am moving on.&lt;/p&gt;
&lt;p&gt;I’m deeply proud and grateful for all that we’ve done together. We assembled one of the greatest research and engineering teams in history, delivered the first step of true virtual presence with Oculus Rift and Touch, and inspired an entirely new industry. We started a revolution that will change the world in ways we can’t even envision.&lt;/p&gt;
&lt;p&gt;Yet, as far as we’ve come, the journey has just begun. Michael Abrash is right: “These are the good old days”. Now is when we get to pioneer the foundation of the next great computing platform and medium – this is our time to be pushing the state-of-the-art onward and upward. Every part of VR and AR needs to improve, especially the hardware and core technology, and Oculus has the best team in the world to do that. Although we’re still far from delivering the magical smart glasses we all dream about, now they are nearly within our reach.&lt;/p&gt;
&lt;p&gt;Working alongside so many talented people at Oculus and Facebook has been the most transformative experience of my career. We have a saying when someone compliments or thanks you – “Team effort”. The success of Oculus was only possible because of such an extraordinary team effort. I’d like to sincerely thank everyone that’s been a part of this amazing journey, especially Mark for believing in this team and the future of VR and AR.&lt;/p&gt;
&lt;p&gt;As for me, this will be the first real break I’ve taken in over 20 years. It’s time to recharge, reflect and be creative. I’m excited for the next chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The cancellation of the company’s next-gen PC-based “Rift 2” virtual reality product showcases how the interests of Facebook’s executive leadership have centered on all-in-one headsets that don’t require a connection to an external PC or phone. In May, Oculus released the $199 Oculus Go headset and plans to release the $399 Oculus Quest headset sometime next spring. A Facebook spokesperson tells TechCrunch that PC VR is part of the company’s future product roadmap and that much of what Iribe’s team has been working on will be manifested in future products.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update:&lt;/strong&gt; 2:13pm PT&lt;/em&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;While Facebook did not deny our report that the “Rift 2” being developed under Iribe’s PC VR team had been canceled, the company reiterated to us in a comment that they are continuing to invest in PC.&lt;/p&gt;
&lt;p&gt;“While we can’t comment on our product roadmap specifics, we do have future plans, and can confirm that we are planning for a future version of Rift,” a Facebook spokesperson told TechCrunch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&quot;attachment_1735707&quot; class=&quot;wp-caption alignnone&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;wp-image-1735707 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/10/Screen-Shot-2018-10-22-at-9.52.44-AM.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;392&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook CEO Mark Zuckerberg and then-Oculus CEO Brendan Iribe at Oculus Connect 3 in late 2016&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Iribe’s exit comes at a time when a number of the founders of Facebook’s high-profile startup acquisitions are leaving the company. Less than a month ago, Instagram co-founders Kevin Systrom and Mike Krieger announced their plans to leave the company in a decision that &lt;a href=&quot;https://techcrunch.com/2018/09/24/instagram-founders-leave/&quot;&gt;TechCrunch was told&lt;/a&gt; was partially the result of mounting tensions. WhatsApp co-founder &lt;a href=&quot;https://techcrunch.com/2018/04/30/jan-koum-quits-facebook/&quot;&gt;Jan Koum left Facebook&lt;/a&gt; earlier this year. Iribe’s fellow co-founder Palmer Luckey &lt;a href=&quot;https://techcrunch.com/2017/03/30/palmer-luckey-facebook/&quot;&gt;left Facebook&lt;/a&gt; in early 2017, a decision he &lt;a href=&quot;https://www.cnbc.com/2018/10/10/oculus-co-founder-luckey-says-it-wasnt-my-choice-to-leave-facebook.html&quot;&gt;recently recounted&lt;/a&gt; was not a choice that he made.&lt;/p&gt;
&lt;p&gt;Iribe came onto Facebook after the $2 billion acquisition of Oculus VR in 2014 where he had been the company’s founding CEO. After a substantial company reorganization in late 2016, Iribe was moved from the CEO position to the head of the company’s PC VR division.&lt;/p&gt;

&lt;p&gt;Before co-founding Oculus VR, Iribe was the chief product officer of Gaikai, a cloud-gaming startup that Sony bought in 2012 for $380 million; before that, he co-founded and led Scaleform, a gaming user interface tools startup that Autodesk bought in 2011 for $36 million.&lt;/p&gt;
&lt;p&gt;We’ve reached out to Iribe for comment.&lt;/p&gt;
</description>
<pubDate>Mon, 22 Oct 2018 18:13:49 +0000</pubDate>
<dc:creator>sharkweek</dc:creator>
<og:title>Oculus co-founder is leaving Facebook after cancellation of ‘Rift 2’ headset</og:title>
<og:description>Brendan Iribe, the co-founder and former CEO of Oculus, announced today that he is leaving Facebook, TechCrunch has learned. Iribe is leaving Facebook following some internal shake-ups in the company’s virtual reality arm last week that saw the cancellation of the company’s next generat…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2014/05/brendan-iribe-oculus3.jpg?w=600</og:image>
<og:url>http://social.techcrunch.com/2018/10/22/oculus-co-founder-is-leaving-facebook-after-cancellation-of-rift-2-headset/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/10/22/oculus-co-founder-is-leaving-facebook-after-cancellation-of-rift-2-headset/</dc:identifier>
</item>
<item>
<title>The Secretive Business of Facial-Recognition Software in Retail Stores</title>
<link>http://nymag.com/intelligencer/2018/10/retailers-are-using-facial-recognition-technology-too.html</link>
<guid isPermaLink="true" >http://nymag.com/intelligencer/2018/10/retailers-are-using-facial-recognition-technology-too.html</guid>
<description>&lt;div class=&quot;lede-image-wrapper inline horizontal&quot;&gt;&lt;img src=&quot;https://pixel.nymag.com/imgs/daily/intelligencer/2018/10/19/19-lowes-facial-recognition.w700.h700.jpg&quot; class=&quot;lede-image&quot; data-src=&quot;https://pixel.nymag.com/imgs/daily/intelligencer/2018/10/19/19-lowes-facial-recognition.w700.h700.jpg&quot; data-content-img=&quot;&quot; alt=&quot;&quot;/&gt;&lt;div class=&quot;lede-image-data&quot;&gt;
&lt;div class=&quot;attribution&quot;&gt;&lt;span class=&quot;credit&quot;&gt;Photo-Illustration: Konstantin Sergeyev/Intelligencer; Photo: Joe Raedle/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngefubs00pii2yes2jd97cr@published&quot; data-word-count=&quot;101&quot;&gt;Have you been to Madison Square Garden recently? Or Kennedy International Airport? If so, there’s a good chance that you were photographed by a security camera. Depending on where you were and the technology being used, your face may have been analyzed by bots and checked against a database of criminals and “known shoplifters.” It doesn’t need to have been MSG, either: For all we know, the same technology could also be in use at dozens of other places around New York City, from department stores to megachurches, but no one can say for sure except the companies supplying the software.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngeh0vq000w3a61851no3i9@published&quot; data-word-count=&quot;92&quot;&gt;Facial-recognition software, which has been in development since the 1960s and has been gaining popularity with police for more than a decade, has taken off with retailers and event spaces during the last couple of years, consultants say. It’s marketed to them as an unparalleled tool for cutting down on shoplifting, and sold to the public as a security tool — helping identify would-be terrorists at sports games, for instance, or protecting consumers against identity theft by making sure that they are who they say they are. It’s also almost completely unregulated.&lt;/p&gt;
&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pdi2yexl223x3m@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-0-480&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;300x250,300x252,320x100&quot; data-label=&quot;inArticleMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-6BcKkLRm&quot;/&gt;&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pfi2yef18go14s@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-480-768&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;468x60,480x60,300x250&quot; data-label=&quot;inArticleMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-x7hlM7dI&quot;/&gt;&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngeha6u00133a61ery0xmtn@published&quot; data-word-count=&quot;64&quot;&gt;“The technology is in some environments where I’m sure millions of people, in a year, or even in a month, are subjected to it,” said Donna Lieberman, executive director of the New York Civil Liberties Union. “Nobody has any idea that it’s happening, or what data is being collected, or how it’s being stored, or for how long, or who has access to it.”&lt;/p&gt;
&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pei2yeyrk7lvto@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-768-1180&quot; data-name=&quot;/4088/Intelligencer&quot; data-sizes=&quot;300x250&quot; data-label=&quot;inArticleTablet&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-l9SbcOt1&quot;/&gt;&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00phi2yeeqogdx0y@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-1180-plus&quot; data-name=&quot;/4088/Intelligencer&quot; data-sizes=&quot;528x379&quot; data-label=&quot;outStreamDesktop&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-KRQbYtcM&quot;/&gt;&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngehuiz001b3a61i53lxw5v@published&quot; data-word-count=&quot;68&quot;&gt;On Wednesday, New York City Councilman Ritchie Torres, who represents the Bronx, introduced a bill aimed at changing this. It would require businesses to start telling the public if they’re using facial recognition, how long they’re storing it, and who they’re sharing it with. Torres said he was inspired to put the bill out after he learned about Madison Square Garden’s use of facial recognition in the spring.&lt;/p&gt;
&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pgi2yewfmp1jbm@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-0-768&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;528x379&quot; data-label=&quot;outStreamMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-mjWysWsU&quot;/&gt;&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngei39i001j3a61jd8rdn6v@published&quot; data-word-count=&quot;21&quot;&gt;“It’s both a no-brainer and a small measure — a baby step,” Lieberman said. “I think it’s necessary but not sufficient.”&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngeirh4001r3a61aeow29ji@published&quot; data-word-count=&quot;131&quot;&gt;Adrian Weidmann, a retail consultant based in Minneapolis, said most stores, from bodegas to shopping malls, already have most of the technology in place to start tracking customers: not just the scores of security cameras in an average big-box store, but also the cameras inside digital signs and kiosks, which show whether shoppers are paying attention to ads. “It’s the same camera lens,” Weidmann said. All it takes to upgrade is a piece of software. The software often comes with a database of criminals or known shoplifters, which comes from combining the shoplifter registries of participating stores, said Clare Garvie, who studies the technology and its privacy implications at Georgetown Law. It’s unclear exactly what it takes to be put in these databases, let alone how to get your name removed.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngeix6a001z3a61v64fgqb5@published&quot; data-word-count=&quot;106&quot;&gt;Peter Trepp, CEO of the facial-recognition software company FaceFirst, &lt;a href=&quot;https://www.buzzfeednews.com/article/leticiamiranda/retail-companies-are-testing-out-facial-recognition-at&quot;&gt;told BuzzFeed&lt;/a&gt; in August that retail now accounted for nearly half of his company’s business. “If you think about the top 40 or top 80 companies you know, almost all of them are thinking about facial recognition, or they’ve all at least looked into it,” he said. (FaceFirst declined to make Trepp or any other representatives available for this story.) Trepp also told the Sports Network, a Canadian publication, last year that his company had been marketing to sports stadiums and teams and was “very much in play” with a number of them, but wouldn’t give details.&lt;/p&gt;
&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pdi2yexl223x3m@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-0-480&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;300x250,300x252,320x100&quot; data-label=&quot;inArticleMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-lKJ1K4l2&quot;/&gt;&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pfi2yef18go14s@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-480-768&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;468x60,480x60,300x250&quot; data-label=&quot;inArticleMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-HGo8nDcc&quot;/&gt;&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pei2yeyrk7lvto@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-768-1180&quot; data-name=&quot;/4088/Intelligencer&quot; data-sizes=&quot;300x250&quot; data-label=&quot;inArticleTablet&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-eXsfeHb3&quot;/&gt;&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngejbwz00273a61o3qw1b8l@published&quot; data-word-count=&quot;69&quot;&gt;The retailers and venues themselves are almost universally secretive about what they’re doing. The American Civil Liberties Union, of which Lieberman’s organization is a regional branch, polled the country’s 20 largest retailers earlier this year — substituting Disney for Amazon, since Amazon doesn’t have many physical stores — about whether they routinely photograph customers. Only one, the supermarket conglomerate that owns Food Lion and Giant, said it did not.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngejx90002f3a618t7o3pfl@published&quot; data-word-count=&quot;50&quot;&gt;Walmart has &lt;a href=&quot;http://fortune.com/2015/11/09/wal-mart-facial-recognition/&quot;&gt;admitted&lt;/a&gt; that it tested the technology in 2015 but decided it wasn’t profitable enough. Target also told BuzzFeed that it had tested it but wouldn’t say where or when. And in 2016, Saks Fifth Avenue &lt;a href=&quot;https://www.theguardian.com/cities/2016/mar/03/revealed-facial-recognition-software-infiltrating-cities-saks-toronto&quot;&gt;told &lt;em&gt;The Guardian&lt;/em&gt;&lt;/a&gt; that it was using the technology in its Canadian stores.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngekb2e002n3a61n1k9q6v9@published&quot; data-word-count=&quot;88&quot;&gt;Torres’s bill, if it gains any traction, is likely to come up against a serious lobbying effort by the tech industry. Several states, including Alaska, Connecticut, Montana, New Hampshire, and Washington, have considered similar privacy laws within the last couple of years, but none but Washington have followed through. (Illinois and Texas also have long-standing privacy laws in place.) Trade groups and companies like Facebook and Google have come out in full force. Facebook has been especially aggressive, according to &lt;a href=&quot;https://www.publicintegrity.org/2017/07/31/21027/saving-face-facebook-wants-access-without-limits&quot;&gt;a report from the Center for Public Integrity&lt;/a&gt;.&lt;/p&gt;
&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pdi2yexl223x3m@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-0-480&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;300x250,300x252,320x100&quot; data-label=&quot;inArticleMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-mx3N4IyY&quot;/&gt;&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pfi2yef18go14s@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-480-768&quot; data-name=&quot;/4088/Intelligencer_Mobile&quot; data-sizes=&quot;468x60,480x60,300x250&quot; data-label=&quot;inArticleMobile&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-9XuwEaVy&quot;/&gt;&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngekl72002v3a61r2z9khsq@published&quot; data-word-count=&quot;127&quot;&gt;The interest of Google and Facebook in unregulated facial-recognition systems in retail settings may not be entirely about their concern for the security of brick-and-mortar stores. In the future, facial-recognition technology could also be used for marketing, helping stores track customers in real life the way online retailers track them with cookies. There’s no evidence that this is happening so far, but Weidmann, the consultant, said that he’s already seeing companies merge their security and marketing divisions. On a project with Home Depot last year, for instance, he helped the marketing team use security footage to track customers through stores and figure out what products they were browsing. “Nobody had ever thought about linking the two,” he said. “I was able to get a much wider lens.”&lt;/p&gt;
&lt;aside data-uri=&quot;nymag.com/intelligencer/_components/ad/instances/cjngefubs00pei2yeyrk7lvto@published&quot; data-placeholder=&quot;settings&quot; class=&quot;ad vp-768-1180&quot; data-name=&quot;/4088/Intelligencer&quot; data-sizes=&quot;300x250&quot; data-label=&quot;inArticleTablet&quot; data-site=&quot;Intelligencer&quot; id=&quot;ad-cid-KPSYrbiK&quot;/&gt;&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjngel4r500333a61psxgee9c@published&quot; data-word-count=&quot;47&quot;&gt;He believes that Amazon is leading the way for all major retailers, brick-and-mortar shops included. “They’re all in a panic,” he said. “How do we bring relevance back to our brick-and-mortar?” Facial recognition, he said, along with location tracking on smartphones, could make the “physical cookie” possible.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/intelligencer/_components/clay-paragraph/instances/cjnkim3d8000n2c5zz07qnhla@published&quot; data-word-count=&quot;54&quot;&gt;&lt;em&gt;This story previously cited an ACLU report from earlier this year that said the Lowe’s chain of home-improvement stores had self-reported that it uses the technology. A spokeswoman from Lowe’s clarified that the stores tested the technology four years ago and decided against using it in any way. Its privacy policy now reflects this.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 22 Oct 2018 18:08:47 +0000</pubDate>
<dc:creator>NN88</dc:creator>
<og:title>Smile! The Secretive Business of Facial-Recognition Software in Retail Stores</og:title>
<og:url>http://nymag.com/intelligencer/2018/10/retailers-are-using-facial-recognition-technology-too.html</og:url>
<og:description>Madison Square Garden, and Kennedy International Airport both use facial-recognition software to identify their customers. Who else does?</og:description>
<og:image>https://pixel.nymag.com/imgs/daily/intelligencer/2018/10/19/19-lowes-facial-recognition.w1200.h630.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://nymag.com/intelligencer/2018/10/retailers-are-using-facial-recognition-technology-too.html</dc:identifier>
</item>
<item>
<title>Repl.it raises $4.5M from A16Z, Paul Graham, and others</title>
<link>https://repl.it/site/blog/a16z</link>
<guid isPermaLink="true" >https://repl.it/site/blog/a16z</guid>
<description>&lt;p&gt;We're thrilled to announce that we have raised a Seed round led by Andreessen Horowitz, with Marc Andreessen and Andrew Chen championing the deal. We're also sharing that a million users have used Repl.it in the last month. Moreover, our developers have shipped 250,000 websites/apps since our &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/site/blog/platform&quot;&gt;hosting platform&lt;/a&gt; launch in March.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/public/images/blog/team.png&quot;&gt;&lt;img src=&quot;https://repl.it/public/images/blog/team.png&quot; alt=&quot;repl.it team&quot; title=&quot;repl.it team&quot;/&gt;&lt;/a&gt; &lt;em&gt;Checkout our Soundcloud for our latest album&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We started Repl.it as a side project with the straightforward goal of making it easy to get a REPL for your favorite &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/languages&quot;&gt;language&lt;/a&gt; when you need one. Coding, we believed, should be as simple as opening a new browser tab.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://i.imgur.com/xRLWGYy.png&quot;&gt;&lt;img src=&quot;https://i.imgur.com/xRLWGYy.png&quot; alt=&quot;repl&quot; title=&quot;repl&quot;/&gt;&lt;/a&gt; &lt;em&gt;How Repl.it looked a few years ago&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;However, our users wanted more. They misused our system for things it wasn't meant for: they &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/talk/share/I-made-Tetris-in-a-python-terminal-and-its-as-bad-as-you-think-need-help-with-flickering-screen/5986&quot;&gt;hacked games&lt;/a&gt; into our dumb web terminal, they made &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/talk/share/Working-Chatroom/3741&quot;&gt;networked applications&lt;/a&gt; despite not having explicit support for it, and they kept asking for more. Not a day goes by without getting emails from users asking how to do one thing or another in our environment.&lt;/p&gt;
&lt;p&gt;Encouraged by this tremendous pull from our users, our new goal is to build a software development platform where you can, with minimal prior experience, develop, ship, and acquire users for your apps -- all in the same place.&lt;/p&gt;
&lt;p&gt;Cloud-computing is one of the most significant paradigm shifts in our industry, yet it remains commandable only by relatively few professionals. It's similar to when, prior to microcomputers, only big corporations and universities had mainframes. We want Repl.it to be the microcomputer to the cloud's mainframe.&lt;/p&gt;
&lt;p&gt;Today, while some percentage of our developers use Repl.it as their primary IDE, most professional programmers use it (or other online IDEs) as playgrounds or secondary environments for side-projects. But we believe we can build a more compelling toolchain and platform that, in the future, will be indispensable for developers.&lt;/p&gt;
&lt;h3 id=&quot;funding&quot;&gt;Funding&lt;/h3&gt;
&lt;p&gt;After graduating YC last winter, we went out to fundraise. A16z's ability to spot trends and paradigm-shifting companies in the devtools and cloud infrastructure space made them our top choice. After all, they've invested in some of our favorite developer tools ranging from GitHub to Digital Ocean to Netlify.&lt;/p&gt;
&lt;p&gt;Personally, Marc Andreessen's long view of computing and his involvement in the early web platform and the genesis of the cloud (his company LoudCloud might've been the one to coin the term) makes him an especially valuable partner to have in this.&lt;/p&gt;
&lt;p&gt;We're also fortunate to have Andrew Chen as a partner. His experience working with startups in both consumer internet and enterprise spaces is exactly the right expertise we need. Devtool companies generally grow in what resembles a consumer-internet play but end up a B2B company.&lt;/p&gt;
&lt;p&gt;In addition to a16z, we're happy to see participation from some of our existing investors: Bloomberg Beta, Reach Capital, and Y Combinator. Moreover, we're joined by some of our friends and mentors that have tremendous experience building relevant companies:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Paul Graham, founder of Viaweb&lt;/li&gt;
&lt;li&gt;Andrew Sutherland, CTO &amp;amp; founder of Quizlet&lt;/li&gt;
&lt;li&gt;Greg Brockman, CTO of OpenAI&lt;/li&gt;
&lt;li&gt;Olivier Pomel, CEO &amp;amp; founder of Datadog&lt;/li&gt;
&lt;li&gt;Ben Darnell, CTO &amp;amp; founder of CockroachLabs&lt;/li&gt;
&lt;li&gt;Zach Sims, CEO &amp;amp; founder of Codecademy&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;what-s-next-&quot;&gt;What's next?&lt;/h3&gt;
&lt;p&gt;We spend most of our time building tech in two major areas:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IDE: we're building the world's fastest online IDE. It loads in less than 2 seconds, and it's complete with &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/site/blog/intel&quot;&gt;code-intellisense&lt;/a&gt;. It's also a REPL-driven environment.&lt;/li&gt;
&lt;li&gt;Cloud infrastructure: we're building a fast and reliable container orchestration system that also provides a remote development environment.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Just last week we released two features that make our platform more compelling for shipping code:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Adding a domain name and live-developing a website&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/talk/announcements/BetaExplorers-Announcing-replrun-publish-your-terminal-apps-as-websites/7802&quot;&gt;repl.run&lt;/a&gt;: ship your terminal apps as websites (beta)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Building and shipping a terminal snake game&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;What's in progress:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Multiplayer REPLs: text collaboration is easy but imagine collaborating with others on the same container, same filesystem, same interpreter process!&lt;/li&gt;
&lt;li&gt;We're standardizing our REPL protocol to make it easy to add new languages and for the environment to be genuinely a REPL-driven one. Think Jupyter Kernels but for fullstack REPLs. You'll be able to add your favorite language/environment to Repl.it.&lt;/li&gt;
&lt;li&gt;Continuous-deployment-like system: it's going to have a closer gap than traditional (boring) dev-staging-prod pipeline. We think we have something novel to share in this space too.&lt;/li&gt;
&lt;li&gt;We're about to start working on a distributed filesystem implementation that allows Repl.it users to edit their files in the browser, on &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/replit/repl.sh&quot;&gt;their desktop computer&lt;/a&gt;, or in their development container and will all magically sync.&lt;/li&gt;
&lt;li&gt;Bootstrapped IDE: we built a &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/site/blog/IDE&quot;&gt;small-core functional IDE&lt;/a&gt; with the ability to live-reload plugins. We think that we have a possibly novel and fantastic plugin development experience. We're looking to open that up for 3rd-party developers soon.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Moving around plugins in the IDE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Within a year, we want to get to a place where more people are using Repl.it to build businesses and ship production software. We're also excited to push the state-of-the-art forward -- enough boring repetitive stuff.&lt;/p&gt;
&lt;h2 id=&quot;business&quot;&gt;Business&lt;/h2&gt;
&lt;p&gt;Right now, we're making some revenue through our &lt;a target=&quot;_blank&quot; href=&quot;https://repl.it/pricing&quot;&gt;Hacker plan&lt;/a&gt; where you pay $7 for more compute resources and private projects. But the opportunity is so much bigger than this.&lt;/p&gt;
&lt;p&gt;As we continue to make Repl.it more useful, we think more people will depend on it for their businesses and that will open up commercialization opportunities in the following domains:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;advanced collaboration tools&lt;/li&gt;
&lt;li&gt;development environment hosting&lt;/li&gt;
&lt;li&gt;web hosting&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;meet-our-team&quot;&gt;Meet our team&lt;/h2&gt;
&lt;p&gt;Our team:&lt;/p&gt;
</description>
<pubDate>Mon, 22 Oct 2018 15:55:22 +0000</pubDate>
<dc:creator>amasad</dc:creator>
<og:title>Repl.it raises $4.5M, announces a million monthly active users</og:title>
<og:description>We're thrilled to announce that we have raised a Seed round led by Andreessen Horowitz, with Marc Andreessen and Andrew Chen championing the deal.…</og:description>
<og:type>article</og:type>
<og:image>https://repl.it/public/images/blog/team.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://repl.it/site/blog/a16z</dc:identifier>
</item>
<item>
<title>WebAssembly’s post-MVP future</title>
<link>https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/</guid>
<description>&lt;p&gt;People have a misconception about WebAssembly. They think that the WebAssembly that landed in browsers back in 2017—which we called the minimum viable product (or MVP) of WebAssembly—is the final version of WebAssembly.&lt;/p&gt;&lt;p&gt;I can understand where that misconception comes from. The WebAssembly community group is really committed to backwards compatibility. This means that the WebAssembly that you create today &lt;strong&gt;will&lt;/strong&gt; continue working on browsers into the future.&lt;/p&gt;
&lt;p&gt;But that doesn’t mean that WebAssembly is feature complete. In fact, that’s far from the case. There are many features that are coming to WebAssembly which will fundamentally alter what you can do with WebAssembly.&lt;/p&gt;
&lt;p&gt;I think of these future features kind of like the skill tree in a videogame. We’ve fully filled in the top few of these skills, but there is still this whole skill tree below that we need to fill-in to unlock all of the applications.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-09-final-e1539904436477.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-32795&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-09-final-e1539904436477-500x319.png&quot; alt=&quot;Skill tree showing WebAssembly skills which will be filled in through the course of the post.&quot; width=&quot;500&quot; height=&quot;319&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-07-runtime-09-final-e1539904436477-500x319.png 500w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-09-final-e1539904436477-250x159.png 250w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-09-final-e1539904436477-768x489.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So let’s look at what’s been filled in already, and then we can see what’s yet to come.&lt;/p&gt;
&lt;h2&gt;Minimum Viable Product (MVP)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-00-A-1-e1539904807805.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32853 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-00-A-1-e1539904807805-500x277.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;277&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-01-mvp-00-A-1-e1539904807805-500x277.png 500w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-00-A-1-e1539904807805-250x138.png 250w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-00-A-1-e1539904807805-768x425.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The very beginning of WebAssembly’s story starts with &lt;a href=&quot;http://kripken.github.io/emscripten-site/&quot;&gt;Emscripten&lt;/a&gt;, which made it possible to run C++ code on the web by transpiling it to JavaScript. This made it possible to bring large existing C++ code bases, for things like games and desktop applications, to the web.&lt;/p&gt;
&lt;p&gt;The JS it automatically generated was still significantly slower than the comparable native code, though. But Mozilla engineers found a type system hiding inside the generated JavaScript, and figured out how to &lt;a href=&quot;https://blog.mozilla.org/luke/2014/01/14/asm-js-aot-compilation-and-startup-performance/&quot;&gt;make this JavaScript run really fast&lt;/a&gt;. This subset of JavaScript was named &lt;a href=&quot;https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/asmjs.org&quot;&gt;asm.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once the other browser vendors saw how fast asm.js was, they &lt;a href=&quot;https://hacks.mozilla.org/2015/03/asm-speedups-everywhere&quot;&gt;started adding the same optimizations&lt;/a&gt; to their engines, too.&lt;/p&gt;
&lt;p&gt;But that wasn’t the end of the story. It was just the beginning. There were still things that engines could do to make this faster.&lt;/p&gt;
&lt;p&gt;But they couldn’t do it in JavaScript itself. Instead, they needed a new language—one that was designed specifically to be compiled to. And that was WebAssembly.&lt;/p&gt;
&lt;p&gt;So what skills were needed for the first version of WebAssembly? What did we need to get to a minimum viable product that could actually run C and C++ efficiently on the web?&lt;/p&gt;
&lt;h3&gt;Skill: Compile target&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-01-comp-target.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32797 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-01-comp-target-e1539905023913-500x255.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;255&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-01-comp-target-e1539905023913-500x255.png 500w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-01-comp-target-e1539905023913-250x127.png 250w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-01-comp-target-e1539905023913-768x392.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;The folks working on WebAssembly knew they didn’t want to just support C and C++. They wanted many different languages to be able to compile to WebAssembly. So they needed a language-agnostic compile target.&lt;/p&gt;
&lt;p&gt;They needed something like the assembly language that things like desktop applications are compiled to—like x86. But this assembly language wouldn’t be for an actual, physical machine. It would be for a conceptual machine.&lt;/p&gt;
&lt;h3&gt;Skill: Fast execution&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-02-fast-exec-e1539905310659.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32798 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-02-fast-exec-e1539905310659-500x254.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;254&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-02-fast-exec-e1539905310659-500x254.png 500w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-02-fast-exec-e1539905310659-250x127.png 250w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-02-fast-exec-e1539905310659-768x390.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;That compiler target had to be designed so that it could run very fast. Otherwise, WebAssembly applications running on the web wouldn’t keep up with users’ expectations for smooth interactions and game play.&lt;/p&gt;
&lt;h3&gt;Skill: Compact&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-03-compact-e1539905278906.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32804 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-03-compact-e1539905278906-500x254.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;254&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-03-compact-e1539905278906-500x254.png 500w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-03-compact-e1539905278906-250x127.png 250w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-03-compact-e1539905278906-768x390.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;In addition to execution time, load time needed to be fast, too. Users have certain expectations about how quickly something will load. For desktop applications, that expectation is that they will load quickly because the application is already installed on your computer. For web apps, the expectation is also that load times will be fast, because web apps usually don’t have to load nearly as much code as desktop apps.&lt;/p&gt;
&lt;p&gt;When you combine these two things, though, it gets tricky. Desktop applications are usually pretty large code bases. So if they are on the web, there’s a lot to download and compile when the user first goes to the URL.&lt;/p&gt;
&lt;p&gt;To meet these expectations, we needed our compiler target to be compact. That way, it could go over the web quickly.&lt;/p&gt;
&lt;h3&gt;Skill: Linear memory&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-04-linear-memory-e1539905361396.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32805 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-01-SS-04-linear-memory-e1539905361396-500x255.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;255&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-04-linear-memory-e1539905361396-500x255.png 500w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-04-linear-memory-e1539905361396-250x127.png 250w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-01-SS-04-linear-memory-e1539905361396-768x392.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;These languages also needed to be able to use memory differently from how JavaScript uses memory. They needed to be able to directly manage their memory—to say which bytes go together.&lt;/p&gt;
&lt;p&gt;This is because languages like C and C++ have a low-level feature called pointers. You can have a variable that doesn’t have a value in it, but instead has the memory address of the value. So if you’re going to support pointers, the program needs to be able to write and read from particular addresses.&lt;/p&gt;
&lt;p&gt;But you can’t have a program you downloaded from the web just accessing bytes in memory willy-nilly, using whatever addresses they want. So in order to create a secure way of giving access to memory, like a native program is used to, we had to create something that could give access to a very specific part of memory and nothing else.&lt;/p&gt;
&lt;p&gt;To do this, WebAssembly uses a linear memory model. This is implemented using TypedArrays. It’s basically just like a JavaScript array, except this array only contains bytes of memory. When you access data in it, you just use array indexes, which you can treat as though they were memory addresses. This means you can pretend this array is C++ memory.&lt;/p&gt;
&lt;h3&gt;Achievement unlocked&lt;/h3&gt;
&lt;p&gt;So with all of these skills in place, people could run desktop applications and games in your browser as if they were running natively on their computer.&lt;/p&gt;
&lt;p&gt;And that was pretty much the skill set that WebAssembly had when it was released as an MVP. It was truly an MVP—a minimum viable product.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-03-final-e1539905426663.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32806 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-01-mvp-03-final-e1539905426663-500x432.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;432&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-01-mvp-03-final-e1539905426663-500x432.png 500w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-03-final-e1539905426663-250x216.png 250w, https://hacks.mozilla.org/files/2018/10/01-01-mvp-03-final-e1539905426663-768x664.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;This allowed certain kinds of applications to work, but there were still a whole host of others to unlock.&lt;/p&gt;
&lt;h2&gt;Heavy-weight Desktop Applications&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-00-A.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32807 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-00-A-e1539905812771-500x277.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;277&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-00-A-e1539905812771-500x277.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-00-A-e1539905812771-250x138.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-00-A-e1539905812771-768x425.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;The next achievement to unlock is heavier weight desktop applications.&lt;/p&gt;
&lt;p&gt;Can you imagine if something like Photoshop were running in your browser? If you could instantaneously load it on any device like you do with Gmail?&lt;/p&gt;
&lt;p&gt;We’ve already started seeing things like this. For example, Autodesk’s AutoCAD team has made their CAD software available the browser. And Adobe has made Lightroom available through the browser using WebAssembly.&lt;/p&gt;
&lt;p&gt;But there are still a few features that we need to put in place to make sure that all of these applications—even the heaviest of heavy weight—can run well in the browser.&lt;/p&gt;
&lt;h3&gt;Skill: Threading&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-01-SS-01-threading-e1540219281254.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32808 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-01-SS-01-threading-e1540219281254-500x162.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;162&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-01-threading-e1540219281254-500x162.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-01-threading-e1540219281254-250x81.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-01-threading-e1540219281254-768x248.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;First, we need support for multithreading. Modern-day computers have multiple cores. These are basically multiple brains that can all be working at the same time on your problem. That can make things go much faster, but to make use of these cores, you need support for threading.&lt;/p&gt;
&lt;h3&gt;Skill: SIMD&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-01-SS-02-SIMD-e1540219323375.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32809 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-01-SS-02-SIMD-e1540219323375-500x160.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;160&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-02-SIMD-e1540219323375-500x160.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-02-SIMD-e1540219323375-250x80.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-02-SIMD-e1540219323375-768x245.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Alongside threading, there’s another technique that utilizes modern hardware, and which enables you to process things in parallel.&lt;/p&gt;
&lt;p&gt;That is SIMD: single instruction multiple data. With SIMD, it’s possible to take a chunk of memory and split up across different execution units, which are kind of like cores. Then you have the same bit of code—the same instruction—run across all of those execution units, but they each apply that instruction to their own bit of the data.&lt;/p&gt;
&lt;h3&gt;Skill: 64-bit addressing&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-01-SS-03-wasm64-e1540219360998.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32810 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-01-SS-03-wasm64-e1540219360998-500x160.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;160&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-03-wasm64-e1540219360998-500x160.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-03-wasm64-e1540219360998-250x80.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-01-SS-03-wasm64-e1540219360998-768x245.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Another hardware capability that WebAssembly needs to take full advantage of is 64-bit addressing.&lt;/p&gt;
&lt;p&gt;Memory addresses are just numbers, so if your memory addresses are only 32 bits long, you can only have so many memory addresses—enough for 4 gigabytes of linear memory.&lt;/p&gt;
&lt;p&gt;But with 64-bit addressing, you have 16 exabytes. Of course, you don’t have 16 exabytes of actual memory in your computer. So the maximum is subject to however much memory the system can actually give you. But this will take the artificial limitation on address space out of WebAssembly.&lt;/p&gt;
&lt;h3&gt;Skill: Streaming compilation&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-01-streaming-e1539905897570.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32811 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-01-streaming-e1539905897570-500x365.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;365&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-01-streaming-e1539905897570-500x365.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-01-streaming-e1539905897570-250x182.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-01-streaming-e1539905897570-768x560.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;For these applications, we don’t just need them to run fast. We needed load times to be even faster than they already were. There are a few skills that we need specifically to improve load times.&lt;/p&gt;
&lt;p&gt;One big step is to do streaming compilation—to compile a WebAssembly file while it’s still being downloaded. WebAssembly was designed specifically to enable easy streaming compilation. In Firefox, we actually compile it so fast—&lt;a href=&quot;https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/&quot;&gt;faster than it is coming in over the network&lt;/a&gt;— that it’s pretty much done compiling by the time you download the file. And other browsers are adding streaming, too.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-02-tiered-e1540219464572.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32812 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-02-tiered-e1540219464572-500x361.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;361&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-02-tiered-e1540219464572-500x361.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-02-tiered-e1540219464572-250x180.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-02-tiered-e1540219464572-768x554.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Another thing that helps is having a tiered compiler.&lt;/p&gt;
&lt;p&gt;For us in Firefox, that means having &lt;a href=&quot;https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/&quot;&gt;two compilers&lt;/a&gt;. The first one—the baseline compiler—kicks in as soon as the file starts downloading. It compiles the code really quickly so that it starts up quickly.&lt;/p&gt;
&lt;p&gt;The code it generates is fast, but not 100% as fast as it could be. To get that extra bit of performance, we run another compiler—the optimizing compiler—on several threads in the background. This one takes longer to compile, but generates extremely fast code. Once it’s done, we swap out the baseline version with the fully optimized version.&lt;/p&gt;
&lt;p&gt;This way, we get quick start up times with the baseline compiler, and fast execution times with the optimizing compiler.&lt;/p&gt;
&lt;p&gt;In addition, we’re working on a new optimizing compiler called &lt;a href=&quot;https://github.com/CraneStation/cranelift&quot;&gt;Cranelift&lt;/a&gt;. Cranelift is designed to compile code quickly, in parallel at a function by function level. At the same time, the code it generates gets even better performance than our current optimizing compiler.&lt;/p&gt;
&lt;p&gt;Cranelift is in the development version of Firefox right now, but disabled by default. Once we enable it, we’ll get to the fully optimized code even quicker, and that code will run even faster.&lt;/p&gt;
&lt;p&gt;But there’s an even better trick we can use to make it so we don’t have to compile at all most of the time…&lt;/p&gt;
&lt;h3&gt;Skill: Implicit HTTP caching&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-03-http-e1540219501952.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32816 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-03-http-e1540219501952-500x359.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;359&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-03-http-e1540219501952-500x359.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-03-http-e1540219501952-250x180.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-03-http-e1540219501952-768x551.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;With WebAssembly, if you load the same code on two page loads, it will compile to the same machine code. It doesn’t need to change based on what data is flowing through it, like the JS JIT compiler needs to.&lt;/p&gt;
&lt;p&gt;This means that we can store the compiled code in the HTTP cache. Then when the page is loading and goes to fetch the .wasm file, it will instead just pull out the precompiled machine code from the cache. This skips compiling completely for any page that you’ve already visited that’s in cache.&lt;/p&gt;
&lt;h3&gt;Skill: Other improvements&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-04-other-e1540219569386.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32817 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-02-SS-04-other-e1540219569386-500x359.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;359&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-04-other-e1540219569386-500x359.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-04-other-e1540219569386-250x180.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-02-SS-04-other-e1540219569386-768x551.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Many discussions are currently percolating around other ways to improve this, skipping even more work, so stay tuned for other load-time improvements.&lt;/p&gt;
&lt;h3&gt;Where are we with this?&lt;/h3&gt;
&lt;p&gt;Where are we with supporting these heavyweight applications right now?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-03-P-07-e1540219610872.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32818 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-03-P-07-e1540219610872-500x359.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;359&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-03-P-07-e1540219610872-500x359.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-03-P-07-e1540219610872-250x180.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-03-P-07-e1540219610872-768x551.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;Threading&lt;/dt&gt;
&lt;dd&gt;For the threading, we have &lt;a href=&quot;https://github.com/WebAssembly/threads&quot;&gt;a proposal&lt;/a&gt; that’s pretty much done, but a key piece of that—&lt;a href=&quot;https://hacks.mozilla.org/2017/06/a-cartoon-intro-to-arraybuffers-and-sharedarraybuffers/&quot;&gt;SharedArrayBuffers&lt;/a&gt;—had to be &lt;a href=&quot;https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/&quot;&gt;turned off in browsers&lt;/a&gt; earlier this year.&lt;br/&gt;They will be turned on again. Turning them off was just a temporary measure to reduce the impact of the Spectre security issue that was discovered in CPUs and disclosed earlier this year, but progress is being made, so stay tuned.&lt;/dd&gt;
&lt;dt&gt;SIMD&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&quot;https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md&quot;&gt;SIMD&lt;/a&gt; is under very active development at the moment.&lt;/dd&gt;
&lt;dt&gt;64-bit addressing&lt;/dt&gt;
&lt;dd&gt;For &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/FutureFeatures.md#linear-memory-bigger-than-4-gib&quot;&gt;wasm-64&lt;/a&gt;, we have a good picture of how we will add this, and it is pretty similar to how x86 or ARM got support for 64 bit addressing.&lt;/dd&gt;
&lt;dt&gt;Streaming compilation&lt;/dt&gt;
&lt;dd&gt;We added &lt;a href=&quot;https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/&quot;&gt;streaming compilation&lt;/a&gt; in late 2017, and other browsers are working on it too.&lt;/dd&gt;
&lt;dt&gt;Tiered compilation&lt;/dt&gt;
&lt;dd&gt;We added our &lt;a href=&quot;https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/&quot;&gt;baseline compiler&lt;/a&gt; in late 2017 as well, and other browsers have been adding the same kind of architecture over the past year.&lt;/dd&gt;
&lt;dt&gt;Implicit HTTP caching&lt;/dt&gt;
&lt;dd&gt;In Firefox, we’re &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1487113&quot;&gt;getting close&lt;/a&gt; to landing support for implicit HTTP caching.&lt;/dd&gt;
&lt;dt&gt;Other improvements&lt;/dt&gt;
&lt;dd&gt;Other improvements are currently in discussion.&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;Even though this is all still in progress, you already see some of these heavyweight applications coming out today, because WebAssembly already gives these apps the performance that they need.&lt;/p&gt;
&lt;p&gt;But once these features are all in place, that’s going to be another achievement unlocked, and more of these heavyweight applications will be able to come to the browser.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-04-final-e1540219657102.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32819 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-heavyweight-04-final-e1540219657102-500x453.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;453&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-04-final-e1540219657102-500x453.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-04-final-e1540219657102-250x227.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-heavyweight-04-final-e1540219657102-768x696.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Small modules interoperating with JavaScript&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-00-A.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-32820&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-00-A-500x281.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;281&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-00-A-500x281.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-00-A-220x125.png 220w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-00-A-250x141.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-00-A-768x432.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;But WebAssembly isn’t just for games and for heavyweight applications. It’s also meant for regular web development… for the kind of web development folks are used to: the small modules kind of web development.&lt;/p&gt;
&lt;p&gt;Sometimes you have little corners of your app that do a lot of heavy processing, and in some cases, this processing can be faster with WebAssembly. We want to make it easy to port these bits to WebAssembly.&lt;/p&gt;
&lt;p&gt;Again, this is a case where some of it’s already happening. Developers are already incorporating WebAssembly modules in places where there are tiny modules doing lots of heavy lifting.&lt;/p&gt;
&lt;p&gt;One example is the parser in the source map library that’s used in Firefox’s DevTools and webpack. It was &lt;a href=&quot;https://hacks.mozilla.org/2018/01/oxidizing-source-maps-with-rust-and-webassembly/&quot;&gt;rewritten in Rust&lt;/a&gt;, compiled to WebAssembly, which made it 11x faster. And WordPress’s Gutenberg parser is &lt;a href=&quot;https://mnt.io/2018/08/22/from-rust-to-beyond-the-webassembly-galaxy/&quot;&gt;on average 86x faster&lt;/a&gt; after doing the same kind of rewrite.&lt;/p&gt;
&lt;p&gt;But for this kind of use to really be widespread—for people to be really comfortable doing it—we need to have a few more things in place.&lt;/p&gt;
&lt;h3&gt;Skill: Fast calls between JS and WebAssembly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-01-call-opts-e1540220093322.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32823 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-01-call-opts-e1540220093322-500x260.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;260&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-01-call-opts-e1540220093322-500x260.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-01-call-opts-e1540220093322-250x130.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-01-call-opts-e1540220093322-768x399.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;First, we need fast calls between JS and WebAssembly, because if you’re integrating a small module into an existing JS system, there’s a good chance you’ll need to call between the two a lot. So you’ll need those calls to be fast.&lt;/p&gt;
&lt;p&gt;But when WebAssembly first came out, these calls weren’t fast. This is where we get back to that whole MVP thing—the engines had the minimum support for calls between the two. They just made the calls work, they didn’t make them fast. So engines need to optimize these.&lt;/p&gt;
&lt;p&gt;We’ve recently finished our work on this in Firefox. Now some of these calls are actually &lt;a href=&quot;https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast/&quot;&gt;faster than non-inlined JavaScript to JavaScript calls.&lt;/a&gt; And others engines are also working on this.&lt;/p&gt;
&lt;h3&gt;Skill: Fast and easy data exchange&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-02-data-exchange-e1540220133991.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32824 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-02-data-exchange-e1540220133991-500x260.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;260&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-02-data-exchange-e1540220133991-500x260.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-02-data-exchange-e1540220133991-250x130.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-02-data-exchange-e1540220133991-768x399.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;That brings us to another thing, though. When you’re calling between JavaScript and WebAssembly, you often need to pass data between them.&lt;/p&gt;
&lt;p&gt;You need to pass values into the WebAssembly function or return a value from it. This can also be slow, and it can be difficult too.&lt;/p&gt;
&lt;p&gt;There are a couple of reasons it’s hard. One is because, at the moment, WebAssembly only understands numbers. This means that you can’t pass more complex values, like objects, in as parameters. You need to convert that object into numbers and put it in the linear memory. Then you pass WebAssembly the location in the linear memory.&lt;/p&gt;
&lt;p&gt;That’s kind of complicated. And it takes some time to convert the data into linear memory. So we need this to be easier and faster.&lt;/p&gt;
&lt;h3&gt;Skill: ES module integration&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-03-es-module-e1540220169128.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32825 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-03-es-module-e1540220169128-500x259.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;259&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-03-es-module-e1540220169128-500x259.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-03-es-module-e1540220169128-250x129.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-03-es-module-e1540220169128-768x397.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Another thing we need is integration with the browser’s built in ES module support. Right now, you instantiate a WebAssembly module using an imperative API. You call a function and it gives you back a module.&lt;/p&gt;
&lt;p&gt;But that means that the WebAssembly module isn’t really part of the JS module graph. In order to use import and export like you do with JS modules, you need to have ES module integration.&lt;/p&gt;
&lt;h3&gt;Skill: Toolchain integration&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-04-toolchain-e1540220201137.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32826 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-04-toolchain-e1540220201137-500x260.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;260&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-04-toolchain-e1540220201137-500x260.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-04-toolchain-e1540220201137-250x130.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-04-toolchain-e1540220201137-768x399.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Just being able to import and export doesn’t get us all the way there, though. We need a place to distribute these modules, and download them from, and tools to bundle them up.&lt;/p&gt;
&lt;p&gt;What’s the npm for WebAssembly? Well, what about npm?&lt;/p&gt;
&lt;p&gt;And what’s the webpack or Parcel for WebAssembly? Well, what about webpack and Parcel?&lt;/p&gt;
&lt;p&gt;These modules shouldn’t look any different to the people who are using them, so no reason to create a separate ecosystem. We just need tools to integrate with them.&lt;/p&gt;
&lt;h3&gt;Skill: Backwards compatibility&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-05-bc-compat-e1540220231412.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32827 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-01-SS-05-bc-compat-e1540220231412-500x259.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;259&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-05-bc-compat-e1540220231412-500x259.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-05-bc-compat-e1540220231412-250x129.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-01-SS-05-bc-compat-e1540220231412-768x397.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;There’s one more thing that we need to really do well in existing JS applications—support older versions of browsers, even those browsers that don’t know what WebAssembly is. We need to make sure that you don’t have to write a whole second implementation of your module in JavaScript just so that you can support IE11.&lt;/p&gt;
&lt;h3&gt;Where are we on this?&lt;/h3&gt;
&lt;p&gt;So where are we on this?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-02-P-05-e1540220264112.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32828 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-02-P-05-e1540220264112-500x257.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;257&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-02-P-05-e1540220264112-500x257.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-02-P-05-e1540220264112-250x129.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-02-P-05-e1540220264112-768x395.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;dl readability=&quot;22.751115075825&quot;&gt;&lt;dt&gt;Fast calls between JS and WebAssembly&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&quot;https://hacks.mozilla.org/?p=32717&quot;&gt;Calls between JS and WebAssembly are fast in Firefox now&lt;/a&gt;, and other browsers are also working on this.&lt;/dd&gt;
&lt;dt&gt;Easy and fast data exchange&lt;/dt&gt;
&lt;dd readability=&quot;49.032283464567&quot;&gt;For easy and fast data exchange, there are a few proposals that will help with this.
&lt;p&gt;As I mentioned before, one reason you have to use linear memory for more complex kinds of data is because WebAssembly only understands numbers. The only types it has are ints and floats.&lt;/p&gt;
&lt;p&gt;With the &lt;a href=&quot;https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md&quot;&gt;reference types proposal&lt;/a&gt;, this will change. This proposal adds a new type that WebAssembly functions can take as arguments and return. And this type is a reference to an object from outside WebAssembly—for example, a JavaScript object.&lt;/p&gt;
&lt;p&gt;But WebAssembly can’t operate directly on this object. To actually do things like call a method on it, it will still need to use some JavaScript glue. This means it works, but it’s slower than it needs to be.&lt;/p&gt;
&lt;p&gt;To speed things up, there’s a proposal that we’ve been calling the &lt;a href=&quot;https://github.com/WebAssembly/host-bindings/blob/master/proposals/host-bindings/Overview.md&quot;&gt;host bindings proposal&lt;/a&gt;. It let’s a wasm module declare what glue must be applied to its imports and exports, so that the glue doesn’t need to be written in JS. By pulling glue from JS into wasm, the glue can be optimized away completely when calling builtin Web APIs.&lt;/p&gt;
&lt;p&gt;There’s one more part of the interaction that we can make easier. And that has to do with keeping track of how long data needs to stay in memory. If you have some data in linear memory that JS needs access to, then you have to leave it there until the JS reads the data. But if you leave it in there forever, you have what’s called a memory leak. How do you know when you can delete the data? How do you know when JS is done with it? Currently, you have to manage this yourself.&lt;/p&gt;
&lt;p&gt;Once the JS is done with the data, the JS code has to call something like a free function to free the memory. But this is tedious and error prone. To make this process easier, we’re adding &lt;a href=&quot;https://github.com/tc39/proposal-weakrefs&quot;&gt;WeakRefs&lt;/a&gt; to JavaScript. With this, you will be able to observe objects on the JS side. Then you can do cleanup on the WebAssembly side when that object is garbage collected.&lt;/p&gt;
&lt;p&gt;So these proposals are all in flight. In the meantime, the &lt;a href=&quot;https://hacks.mozilla.org/2018/03/making-webassembly-better-for-rust-for-all-languages/&quot;&gt;Rust ecosystem has created tools&lt;/a&gt; that automate this all for you, and that polyfill the proposals that are in flight.&lt;/p&gt;
&lt;p&gt;One tool in particular is worth mentioning, because other languages can use it too. It’s called &lt;a href=&quot;https://rustwasm.github.io/wasm-bindgen/&quot;&gt;wasm-bindgen&lt;/a&gt;. When it sees that your Rust code should do something like receive or return certain kinds of JS values or DOM objects, it will automatically create JavaScript glue code that does this for you, so you don’t need to think about it. And because it’s written in a language independent way, other language toolchains can adopt it.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;ES module integration&lt;/dt&gt;
&lt;dd&gt;For ES module integration, &lt;a href=&quot;https://github.com/WebAssembly/esm-integration/tree/master/proposals/esm-integration&quot;&gt;the proposal&lt;/a&gt; is pretty far along. We are starting work with the browser vendors to implement it.&lt;/dd&gt;
&lt;dt&gt;Toolchain support&lt;/dt&gt;
&lt;dd&gt;For toolchain support, there are tools like &lt;a href=&quot;https://github.com/rustwasm/wasm-pack&quot;&gt;&lt;code&gt;wasm-pack&lt;/code&gt;&lt;/a&gt; in the Rust ecosystem which automatically runs everything you need to package your code for npm. And the bundlers are also actively working on support.&lt;/dd&gt;
&lt;dt&gt;Backwards compatibility&lt;/dt&gt;
&lt;dd&gt;Finally, for backwards compatibility, there’s the &lt;code&gt;wasm2js&lt;/code&gt; tool. That takes a wasm file and spits out the equivalent JS. That JS isn’t going to be fast, but at least that means it will work in older versions of browsers that don’t understand WebAssembly.&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;So we’re getting close to unlocking this achievement. And once we unlock it, we open the path to another two.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-03-final-e1540220313636.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32829 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-04-js-interop-03-final-e1540220313636-500x270.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;270&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-04-js-interop-03-final-e1540220313636-500x270.png 500w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-03-final-e1540220313636-250x135.png 250w, https://hacks.mozilla.org/files/2018/10/01-04-js-interop-03-final-e1540220313636-768x415.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;JS frameworks and compile-to-JS languages&lt;/h2&gt;
&lt;p&gt;One is rewriting large parts of things like JavaScript frameworks in WebAssembly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-01-A-01-frameworks-e1540220354792.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32830 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-01-A-01-frameworks-e1540220354792-500x273.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;273&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-01-A-01-frameworks-e1540220354792-500x273.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-01-A-01-frameworks-e1540220354792-250x136.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-01-A-01-frameworks-e1540220354792-768x419.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;The other is making it possible for statically-typed compile-to-js languages to compile to WebAssembly instead—for example, having languages like &lt;a href=&quot;https://www.scala-js.org/&quot;&gt;Scala.js&lt;/a&gt;, or &lt;a href=&quot;https://reasonml.github.io/&quot;&gt;Reason&lt;/a&gt;, or &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; compile to WebAssembly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-01-A-02-langs-e1540220481271.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32831 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-01-A-02-langs-e1540220481271-500x275.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;275&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-01-A-02-langs-e1540220481271-500x275.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-01-A-02-langs-e1540220481271-250x138.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-01-A-02-langs-e1540220481271-768x423.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;For both of these use cases, WebAssembly needs to support high-level language features.&lt;/p&gt;
&lt;h3&gt;Skill: GC&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-01-gc-e1540220514444.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32832 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-01-gc-e1540220514444-500x159.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;159&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-01-gc-e1540220514444-500x159.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-01-gc-e1540220514444-250x79.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-01-gc-e1540220514444-768x244.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;We need integration with the browser’s garbage collector for a couple of reasons.&lt;/p&gt;
&lt;p&gt;First, let’s look at rewriting parts of JS frameworks. This could be good for a couple of reasons. For example, in React, one thing you could do is rewrite the DOM diffing algorithm in Rust, which has very ergonomic multithreading support, and parallelize that algorithm.&lt;/p&gt;
&lt;p&gt;You could also speed things up by allocating memory differently. In the virtual DOM, instead of creating a bunch of objects that need to be garbage collected, you could used a special memory allocation scheme. For example, you could use a bump allocator scheme which has extremely cheap allocation and all-at-once deallocation. That could potentially help speed things up and reduce memory usage.&lt;/p&gt;
&lt;p&gt;But you’d still need to interact with JS objects—things like components—from that code. You can’t just continually copy everything in and out of linear memory, because that would be difficult and inefficient.&lt;/p&gt;
&lt;p&gt;So you need to be able to integrate with the browser’s GC so you can work with components that are managed by the JavaScript VM. Some of these JS objects need to point to data in linear memory, and sometimes the data in linear memory will need to point out to JS objects.&lt;/p&gt;
&lt;p&gt;If this ends up creating cycles, it can mean trouble for the garbage collector. It means the garbage collector won’t be able to tell if the objects are used anymore, so they will never be collected. WebAssembly needs integration with the GC to make sure these kinds of cross-language data dependencies work.&lt;/p&gt;
&lt;p&gt;This will also help statically-typed languages that compile to JS, like Scala.js, Reason, Kotlin or Elm. These language use JavaScript’s garbage collector when they compile to JS. Because WebAssembly can use that same GC—the one that’s built into the engine—these languages will be able to compile to WebAssembly instead and use that same garbage collector. They won’t need to change how GC works for them.&lt;/p&gt;
&lt;h3&gt;Skill: Exception handling&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-02-exception-e1540220563466.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32833 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-02-exception-e1540220563466-500x155.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;155&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-02-exception-e1540220563466-500x155.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-02-exception-e1540220563466-250x77.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-02-exception-e1540220563466-768x238.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;We also need better support for handling exceptions.&lt;/p&gt;
&lt;p&gt;Some languages, like Rust, do without exceptions. But in other languages, like C++, JS or C#, exception handling is sometimes used extensively.&lt;/p&gt;
&lt;p&gt;You can polyfill exception handling currently, but the polyfill makes the code run really slowly. So the default when compiling to WebAssembly is currently to compile without exception handling.&lt;/p&gt;
&lt;p&gt;However, since JavaScript has exceptions, even if you’ve compiled your code to not use them, JS may throw one into the works. If your WebAssembly function calls a JS function that throws, then the WebAssembly module won’t be able to correctly handle the exception. So languages like Rust choose to abort in this case. We need to make this work better.&lt;/p&gt;
&lt;h3&gt;Skill: Debugging&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-03-debugging.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32834 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-03-debugging-e1540220592314-500x159.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;159&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-03-debugging-e1540220592314-500x159.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-03-debugging-e1540220592314-250x79.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-03-debugging-e1540220592314-768x244.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Another thing that people working with JS and compile-to-JS languages are used to having is good debugging support. Devtools in all of the major browsers make it easy to step through JS. We need this same level of support for debugging WebAssembly in browsers.&lt;/p&gt;
&lt;h3&gt;Skill: Tail calls&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-04-tail-calls-e1540220637629.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32835 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-02-SS-04-tail-calls-e1540220637629-500x160.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;160&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-04-tail-calls-e1540220637629-500x160.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-04-tail-calls-e1540220637629-250x80.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-02-SS-04-tail-calls-e1540220637629-768x246.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;And finally, for many functional languages, you need to have support for something called &lt;a href=&quot;https://en.wikipedia.org/wiki/Tail_call&quot;&gt;tail calls&lt;/a&gt;. I’m not going to get too into the details on this, but basically it lets you call a new function without adding a new stack frame to the stack. So for functional languages that support this, we want WebAssembly to support it too.&lt;/p&gt;
&lt;h3&gt;Where are we on this?&lt;/h3&gt;
&lt;p&gt;So where are we on this?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-03-P-04.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32836 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-03-P-04-e1540220662110-500x156.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;156&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-03-P-04-e1540220662110-500x156.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-03-P-04-e1540220662110-250x78.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-03-P-04-e1540220662110-768x240.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;dl readability=&quot;4.6780424983902&quot;&gt;&lt;dt&gt;Garbage collection&lt;/dt&gt;
&lt;dd readability=&quot;12.454198473282&quot;&gt;For garbage collection, there are two proposals currently underway:
&lt;p&gt;The &lt;a href=&quot;https://github.com/tschneidereit/typed-objects-explainer&quot;&gt;Typed Objects proposal&lt;/a&gt; for JS, and the &lt;a href=&quot;https://github.com/WebAssembly/gc&quot;&gt;GC proposal&lt;/a&gt; for WebAssembly. Typed Objects will make it possible to describe an object’s fixed structure. There is an explainer for this, and the proposal will be discussed at an upcoming TC39 meeting.&lt;/p&gt;
&lt;p&gt;The WebAssembly GC proposal will make it possible to directly access that structure. This proposal is under active development.&lt;/p&gt;
&lt;p&gt;With both of these in place, both JS and WebAssembly know what an object looks like and can share that object and efficiently access the data stored on it. Our team actually already has a prototype of this working. However, it still will take some time for these to go through standardization so we’re probably looking at sometime next year.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Exception handling&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&quot;https://github.com/WebAssembly/exception-handling/blob/master/proposals/Level-1.md&quot;&gt;Exception handling&lt;/a&gt; is still in the research and development phase, and there’s work now to see if it can take advantage of other proposals like the reference types proposal I mentioned before.&lt;/dd&gt;
&lt;dt&gt;Debugging&lt;/dt&gt;
&lt;dd&gt;For debugging, there is currently some support in browser devtools. For example, you can step through the text format of WebAssembly in Firefox debugger.But it’s still not ideal. We want to be able to show you where you are in your actual source code, not in the assembly. The thing that we need to do for that is figure out how source maps—or a source maps type thing—work for WebAssembly. So there’s a &lt;a href=&quot;https://github.com/WebAssembly/debugging/blob/master/Charter.md&quot;&gt;subgroup of the WebAssembly CG&lt;/a&gt; working on specifying that.&lt;/dd&gt;
&lt;dt&gt;Tail calls&lt;/dt&gt;
&lt;dd&gt;The &lt;a href=&quot;https://github.com/WebAssembly/tail-call/blob/master/proposals/tail-call/Overview.md&quot;&gt;tail calls proposal&lt;/a&gt; is also underway.&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;Once those are all in place, we’ll have unlocked JS frameworks and many compile-to-JS languages.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-04-final.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32837 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-05-high-level-04-final-e1540220704600-500x405.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;405&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-05-high-level-04-final-e1540220704600-500x405.png 500w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-04-final-e1540220704600-250x202.png 250w, https://hacks.mozilla.org/files/2018/10/01-05-high-level-04-final-e1540220704600-768x621.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;So, those are all achievements we can unlock inside the browser. But what about outside the browser?&lt;/p&gt;

&lt;p&gt;Now, you may be confused when I talk about “outside the browser”. Because isn’t the browser what you use to view the web? And isn’t that right in the name—WebAssembly.&lt;/p&gt;
&lt;p&gt;But the truth is the things you see in the browser—the HTML and CSS and JavaScript—are only part of what makes the web. They are the visible part—they are what you use to create a user interface—so they are the most obvious.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-02-browser-toolbox-e1540221152912.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-32865&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-02-browser-toolbox-e1540221152912-500x220.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;220&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-intro-02-browser-toolbox-e1540221152912-500x220.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-intro-02-browser-toolbox-e1540221152912-250x110.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-intro-02-browser-toolbox-e1540221152912-768x338.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;But there’s another really important part of the web which has properties that aren’t as visible.&lt;/p&gt;
&lt;p&gt;That is the link. And it is a very special kind of link.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-03-link-e1540220782538.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32839 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-03-link-e1540220782538-500x216.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;216&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-intro-03-link-e1540220782538-500x216.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-intro-03-link-e1540220782538-250x108.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-intro-03-link-e1540220782538-768x332.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;The innovation of this link is that I can link to your page without having to put it in a central registry, and without having to ask you or even know who you are. I can just put that link there.&lt;/p&gt;
&lt;p&gt;It’s this ease of linking, without any oversight or approval bottlenecks, that enabled our web. That’s what enabled us to form these global communities with people we didn’t know.&lt;/p&gt;
&lt;p&gt;But if all we have is the link, there are two problems here that we haven’t addressed.&lt;/p&gt;
&lt;p&gt;The first one is… you go visit this site and it delivers some code to you. How does it know what kind of code it should deliver to you? Because if you’re running on a Mac, then you need different machine code than you do on Windows. That’s why you have different versions of programs for different operating systems.&lt;/p&gt;
&lt;p&gt;Then should a web site have a different version of the code for every possible device? No.&lt;/p&gt;
&lt;p&gt;Instead, the site has one version of the code—the source code. This is what’s delivered to the user. Then it gets translated to machine code on the user’s device.&lt;/p&gt;
&lt;p&gt;The name for this concept is portability.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-04-portability-02-e1540220821857.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32840 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-04-portability-02-e1540220821857-500x340.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;340&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-intro-04-portability-02-e1540220821857-500x340.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-intro-04-portability-02-e1540220821857-250x170.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-intro-04-portability-02-e1540220821857-768x522.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;So that’s great, you can load code from people who don’t know you and don’t know what kind of device you’re running.&lt;/p&gt;
&lt;p&gt;But that brings us to a second problem. If you don’t know these people who’s web pages you’re loading, how do you know what kind of code they’re giving you? It could be malicious code. It could be trying to take over your system.&lt;/p&gt;
&lt;p&gt;Doesn’t this vision of the web—running code from anybody who’s link you follow—mean that you have to blindly trust anyone who’s on the web?&lt;/p&gt;
&lt;p&gt;This is where the other key concept from the web comes in.&lt;/p&gt;
&lt;p&gt;That’s the security model. I’m going to call it the sandbox.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-04-security-02-e1540220859323.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32841 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-04-security-02-e1540220859323-500x246.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;246&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-intro-04-security-02-e1540220859323-500x246.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-intro-04-security-02-e1540220859323-250x123.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-intro-04-security-02-e1540220859323-768x378.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Basically, the browser takes the page—that other person’s code—and instead of letting it run around willy-nilly in your system, it puts it in a sandbox. It puts a couple of toys that aren’t dangerous into that sandbox so that the code can do some things, but it leaves the dangerous things outside of the sandbox.&lt;/p&gt;
&lt;p&gt;So the utility of the link is based on these two things:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Portability—the ability to deliver code to users and have it run on any type of device that can run a browser.&lt;/li&gt;
&lt;li&gt;And the sandbox—the security model that lets you run that code without risking the integrity of your machine.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So why does this distinction matter? Why does it make a difference if we think of the web as something that the browser shows us using HTML, CSS, and JS, or if we think of the web in terms of portability and the sandbox?&lt;/p&gt;
&lt;p&gt;Because it changes how you think about WebAssembly.&lt;/p&gt;
&lt;p&gt;You can think about WebAssembly as just another tool in the browser’s toolbox… which it is.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-04-wasm-in-tb-1-e1540221053348.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-32864&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-04-wasm-in-tb-1-e1540221053348-500x225.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;225&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-intro-04-wasm-in-tb-1-e1540221053348-500x225.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-intro-04-wasm-in-tb-1-e1540221053348-250x113.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-intro-04-wasm-in-tb-1-e1540221053348-768x346.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;It is another tool in the browser’s toolbox. But it’s not just that. It also gives us a way to take these other two capabilities of the web—the portability and the security model—and take them to other use cases that need them too.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-06-expand-02-e1540220978397.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32843 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-intro-06-expand-02-e1540220978397-500x219.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;219&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-intro-06-expand-02-e1540220978397-500x219.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-intro-06-expand-02-e1540220978397-250x109.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-intro-06-expand-02-e1540220978397-768x336.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We can expand the web past the boundaries of the browser. Now let’s look at where these attributes of the web would be useful.&lt;/p&gt;
&lt;h2&gt;Node.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-01-A-e1540221197730.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32845 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-01-A-e1540221197730-500x277.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;277&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-node-01-A-e1540221197730-500x277.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-node-01-A-e1540221197730-250x138.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-node-01-A-e1540221197730-768x425.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;How could WebAssembly help Node? It could bring full portability to Node.&lt;/p&gt;
&lt;p&gt;Node gives you most of the portability of JavaScript on the web. But there are lots of cases where Node’s JS modules aren’t quite enough—where you need to improve performance or reuse existing code that’s not written in JS.&lt;/p&gt;
&lt;p&gt;In these cases, you need Node’s native modules. These modules are written in languages like C, and they need to be compiled for the specific kind of machine that the user is running on.&lt;/p&gt;
&lt;p&gt;Native modules are either compiled when the user installs, or precompiled into binaries for a wide matrix of different systems. One of these approaches is a pain for the user, the other is a pain for the package maintainer.&lt;/p&gt;
&lt;p&gt;Now, if these native modules were written in WebAssembly instead, then they wouldn’t need to be compiled specifically for the target architecture. Instead, they’d just run like the JavaScript in Node runs. But they’d do it at nearly native performance.&lt;/p&gt;
&lt;p&gt;So we get to full portability for the code running in Node. You could take the exact same Node app and run it across all different kinds of devices without having to compile anything.&lt;/p&gt;
&lt;p&gt;But WebAssembly doesn’t have direct access to the system’s resources. Native modules in Node aren’t sandboxed—they have full access to all of the dangerous toys that the browser keeps out of the sandbox. In Node, JS modules also have access to these dangerous toys because Node makes them available. For example, Node provides methods for reading from and writing files to the system.&lt;/p&gt;
&lt;p&gt;For Node’s use case, it makes a certain amount of sense for modules to have this kind access to dangerous system APIs. So if WebAssembly modules don’t have that kind of access by default (like Node’s current modules do), how could we give WebAssembly modules the access they need? We’d need to pass in functions so that the WebAssembly module can work with the operating system, just as Node does with JS.&lt;/p&gt;
&lt;p&gt;For Node, this will probably include a lot of the functionality that’s in things like the C standard library. It would also likely include things that are part of &lt;a href=&quot;https://en.wikipedia.org/wiki/POSIX&quot;&gt;POSIX&lt;/a&gt;—the Portable Operating System Interface—which is an older standard that helps with compatibility. It provides one API for interacting with the system across a bunch of different Unix-like OSs. Modules would definitely need a bunch of POSIX-like functions.&lt;/p&gt;
&lt;h3&gt;Skill: Portable interface&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-01-SS-e1540221292681.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32846 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-01-SS-e1540221292681-500x194.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;194&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-node-01-SS-e1540221292681-500x194.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-node-01-SS-e1540221292681-250x97.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-node-01-SS-e1540221292681-768x298.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;What the Node core folks would need to do is figure out the set of functions to expose and the API to use.&lt;/p&gt;
&lt;p&gt;But wouldn’t it be nice if that were actually something standard? Not something that was specific to just Node, but could be used across other runtimes and use cases too?&lt;/p&gt;
&lt;p&gt;A POSIX for WebAssembly if you will. A PWSIX? A portable WebAssembly system interface.&lt;/p&gt;
&lt;p&gt;And if that were done in the right way, you could even implement the same API for the web. These standard APIs could be polyfilled onto existing Web APIs.&lt;/p&gt;
&lt;p&gt;These functions wouldn’t be part of the WebAssembly spec. And there would be WebAssembly hosts that wouldn’t have them available. But for those platforms that could make use of them, there would be a unified API for calling these functions, no matter which platform the code was running on. And this would make universal modules—ones that run across both the web and Node—so much easier.&lt;/p&gt;
&lt;h3&gt;Where are we with this?&lt;/h3&gt;
&lt;p&gt;So, is this something that could actually happen?&lt;/p&gt;
&lt;p&gt;A few things are working in this idea’s favor. There’s a proposal called &lt;a href=&quot;https://github.com/domenic/package-name-maps&quot;&gt;package name maps&lt;/a&gt; that will provide a mechanism for mapping a module name to a path to load the module from. And that will likely be supported by both browsers and Node, which can use it to provide different paths, and thus load entirely different modules, but with the same API. This way, the .wasm module itself can specify a single (module-name, function-name) import pair that Just Works on different environments, even the web.&lt;/p&gt;
&lt;p&gt;With that mechanism in place, what’s left to do is actually figure out what functions make sense and what their interface should be.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-01-P-e1540221369730.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32847 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-01-P-e1540221369730-500x187.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;187&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-node-01-P-e1540221369730-500x187.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-node-01-P-e1540221369730-250x93.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-node-01-P-e1540221369730-768x287.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;There’s no active work on this at the moment. But a lot of discussions are heading in this direction right now. And it looks likely to happen, in one form or another.&lt;/p&gt;
&lt;p&gt;Which is good, because unlocking this gets us halfway to unlocking some other use cases outside the browser. And with this in place, we can accelerate the pace.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-04-final.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-32848&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-06-node-04-final-500x301.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;301&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-06-node-04-final-500x301.png 500w, https://hacks.mozilla.org/files/2018/10/01-06-node-04-final-250x150.png 250w, https://hacks.mozilla.org/files/2018/10/01-06-node-04-final-768x462.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;So, what are some examples of these other use cases?&lt;/p&gt;
&lt;h2&gt;CDNs, Serverless, and Edge Computing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-01-A-cloud-e1540221412524.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32850 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-01-A-cloud-e1540221412524-500x278.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;278&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-07-runtime-01-A-cloud-e1540221412524-500x278.png 500w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-01-A-cloud-e1540221412524-250x139.png 250w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-01-A-cloud-e1540221412524-768x427.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;One example is things like CDNs, and Serverless, and Edge Computing. These are cases where you’re putting your code on someone else’s server, and they make sure that the server is maintained and that the code is close to all of your users.&lt;/p&gt;
&lt;p&gt;Why would you want to use WebAssembly in these cases? There was a great talk explaining exactly this at a conference recently.&lt;/p&gt;
&lt;p&gt;Fastly is a company that provides CDNs and edge computing. And their CTO, Tyler McMullen, &lt;a href=&quot;https://www.youtube.com/watch?v=FkM1L8-qcjU&quot;&gt;explained it this way&lt;/a&gt; (and I’m paraphrasing here):&lt;/p&gt;
&lt;p&gt;If you look at how a process works, code in that process doesn’t have boundaries. Functions have access to whatever memory in that process they want, and they can call whatever other functions they want.&lt;/p&gt;
&lt;p&gt;When you’re running a bunch of different people’s services in the same process, this is an issue. Sandboxing could be a way to get around this. But then you get to a scale problem.&lt;/p&gt;
&lt;p&gt;For example, if you use a JavaScript VM like Firefox’s SpiderMonkey or Chrome’s V8, you get a sandbox and you can put hundreds of instances into a process. But with the numbers of requests that Fastly is servicing, you don’t just need hundreds per process—you need tens of thousands.&lt;/p&gt;
&lt;p&gt;Tyler does a better job of explaining all of it in his talk, so you should go watch that. But the point is that WebAssembly gives Fastly the safety, speed, and scale needed for this use case.&lt;/p&gt;
&lt;p&gt;So what did they need to make this work?&lt;/p&gt;
&lt;h3&gt;Skill: Runtime&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-02-SS.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32849 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-02-SS-e1540221444910-500x187.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;187&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-07-runtime-02-SS-e1540221444910-500x187.png 500w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-02-SS-e1540221444910-250x93.png 250w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-02-SS-e1540221444910-768x287.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;They needed to create their own runtime. That means taking a WebAssembly compiler—something that can compile WebAssembly down to machine code—and combining it with the functions for interacting with the system that I mentioned before.&lt;/p&gt;
&lt;p&gt;For the WebAssembly compiler, Fastly used &lt;a href=&quot;https://github.com/CraneStation/cranelift&quot;&gt;Cranelift&lt;/a&gt;, the compiler that we’re also building into Firefox. It’s designed to be very fast and doesn’t use much memory.&lt;/p&gt;
&lt;p&gt;Now, for the functions that interact with the rest of the system, they had to create their own, because we don’t have that portable interface available yet.&lt;/p&gt;
&lt;p&gt;So it’s possible to create your own runtime today, but it takes some effort. And it’s effort that will have to be duplicated across different companies.&lt;/p&gt;
&lt;p&gt;What if we didn’t just have the portable interface, but we also had a common runtime that could be used across all of these companies and other use cases? That would definitely speed up development.&lt;/p&gt;
&lt;p&gt;Then other companies could just use that runtime—like they do Node today—instead of creating their own from scratch.&lt;/p&gt;
&lt;h3&gt;Where are we on this?&lt;/h3&gt;
&lt;p&gt;So what’s the status of this?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-03-P.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32851 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-03-P-e1540221473263-500x187.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;187&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-07-runtime-03-P-e1540221473263-500x187.png 500w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-03-P-e1540221473263-250x93.png 250w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-03-P-e1540221473263-768x287.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;Even though there’s no standard runtime yet, there are a few runtime projects in flight right now. These include &lt;a href=&quot;https://github.com/WAVM/WAVM&quot;&gt;WAVM&lt;/a&gt;, which is built on top of LLVM, and wasmjit.&lt;/p&gt;
&lt;p&gt;In addition, we’re planning a runtime that’s built on top of Cranelift, called wasmtime.&lt;/p&gt;
&lt;p&gt;And once we have a common runtime, that speeds up development for a bunch of different use cases. For example…&lt;/p&gt;
&lt;h2&gt;Portable CLI tools&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-05-A-cli.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32862 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-05-A-cli-e1540221504824-500x274.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;274&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-07-runtime-05-A-cli-e1540221504824-500x274.png 500w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-05-A-cli-e1540221504824-250x137.png 250w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-05-A-cli-e1540221504824-768x421.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;br/&gt;WebAssembly can also be used in more traditional operating systems. Now to be clear, I’m not talking about in the kernel (although &lt;a href=&quot;https://github.com/nebulet/nebulet&quot;&gt;brave souls are trying that, too&lt;/a&gt;) but WebAssembly running in Ring 3—in user mode.&lt;/p&gt;
&lt;p&gt;Then you could do things like have portable CLI tools that could be used across all different kinds of operating systems.&lt;/p&gt;
&lt;p&gt;And this is pretty close to another use case…&lt;/p&gt;
&lt;h2&gt;Internet of Things&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-05-A-iot.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-32863 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-05-A-iot-e1540221544774-500x277.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;277&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-07-runtime-05-A-iot-e1540221544774-500x277.png 500w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-05-A-iot-e1540221544774-250x138.png 250w, https://hacks.mozilla.org/files/2018/10/01-07-runtime-05-A-iot-e1540221544774-768x425.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;br/&gt;The internet of things includes devices like wearable technology, and smart home appliances.&lt;/p&gt;
&lt;p&gt;These devices are usually resource constrained—they don’t pack much computing power and they don’t have much memory. And this is exactly the kind of situation where a compiler like Cranelift and a runtime like wasmtime would shine, because they would be efficient and low-memory. And in the extremely-resource-constrained case, WebAssembly makes it possible to fully compile to machine code before loading the application on the device.&lt;/p&gt;
&lt;p&gt;There’s also the fact that there are so many of these different devices, and they are all slightly different. WebAssembly’s portability would really help with that.&lt;/p&gt;
&lt;p&gt;So that’s one more place where WebAssembly has a future.&lt;/p&gt;

&lt;p&gt;Now let’s zoom back out and look at this skill tree.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-09-final.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-32795&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-09-final-500x301.png&quot; alt=&quot;Skill tree showing WebAssembly skills which will be filled in through the course of the post.&quot; width=&quot;500&quot; height=&quot;301&quot;/&gt;&lt;/a&gt;I said at the beginning of this post that people have a misconception about WebAssembly—this idea that the WebAssembly that landed in the MVP was the final version of WebAssembly.&lt;/p&gt;
&lt;p&gt;I think you can see now why this is a misconception.&lt;/p&gt;
&lt;p&gt;Yes, the MVP opened up a lot of opportunities. It made it possible to bring a lot of desktop applications to the web. But we still have many use cases to unlock, from heavy-weight desktop applications, to small modules, to JS frameworks, to all the things outside the browser… Node.js, and serverless, and the blockchain, and portable CLI tools, and the internet of things.&lt;/p&gt;
&lt;p&gt;So the WebAssembly that we have today is not the end of this story—it’s just the beginning.&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;14.426614481409&quot;&gt;
&lt;p&gt;Lin is an engineer on the Mozilla Developer Relations team. She tinkers with JavaScript, WebAssembly, Rust, and Servo, and also draws code cartoons.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/lclarkmozilla-com/&quot;&gt;More articles by Lin Clark…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Till works on developer technologies in Mozilla Research, and on JavaScript and WebAssembly standardization in TC39 and the WebAssembly CG.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/tschneidereitmozilla-com/&quot;&gt;More articles by Till Schneidereit…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luke Wagner is a Mozilla software engineer and hacks on JavaScript and WebAssembly in Firefox.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/lwagnermozilla-com/&quot;&gt;More articles by Luke Wagner…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Mon, 22 Oct 2018 15:34:27 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:url>https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future</og:url>
<og:title>WebAssembly’s post-MVP future: A cartoon skill tree – Mozilla Hacks - the Web developer blog</og:title>
<og:description>People have a misconception—they think that the WebAssembly that landed in browsers back in 2017—is the final version. In fact, we still have many use cases to unlock, from heavy-weight ...</og:description>
<og:image>https://hacks.mozilla.org/files/2018/10/featured-image-1.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/</dc:identifier>
</item>
</channel>
</rss>