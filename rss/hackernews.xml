<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Machine Learning: The High Interest Credit Card of Technical Debt (2014)</title>
<link>https://ai.google/research/pubs/pub43146</link>
<guid isPermaLink="true" >https://ai.google/research/pubs/pub43146</guid>
<description>&lt;p&gt;Machine learning offers a fantastically powerful toolkit for building complex systems quickly. This paper argues that it is dangerous to think of these quick wins as coming for free. Using the framework of technical debt, we note that it is remarkably easy to incur massive ongoing maintenance costs at the system level when applying machine learning. The goal of this paper is highlight several machine learning specific risk factors and design patterns to be avoided or refactored where possible. These include boundary erosion, entanglement, hidden feedback loops, undeclared consumers, data dependencies, changes in the external world, and a variety of system-level anti-patterns.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 19:48:26 +0000</pubDate>
<dc:creator>amzans</dc:creator>
<og:image>https://ai.google/static/images/share.png</og:image>
<og:title>Machine Learning: The High Interest Credit Card of Technical Debt – Google AI</og:title>
<og:type>website</og:type>
<og:url>https://ai.google/research/pubs/pub43146</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ai.google/research/pubs/pub43146</dc:identifier>
</item>
<item>
<title>Diablo devolved – magic behind the 1996 computer game</title>
<link>https://github.com/galaxyhaxz/devilution</link>
<guid isPermaLink="true" >https://github.com/galaxyhaxz/devilution</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Diablo devolved - magic behind the 1996 computer game&lt;/p&gt;
&lt;p&gt;Reverse engineered by GalaXyHaXz in 2018&lt;/p&gt;

&lt;p&gt;Diablo was everything but loved by Blizzard. The last update to the game was in 2001, and Blizzard stopped supporting/selling it altogether a few years ago. I took up a mission to fix this problem. Diablo was a game I played extensively as a teenager; but as time passed, it became difficult to run the game on newer hardware. The lack of new content also took away from the re-playability. The ideal solution would be to modernize the source, but reversing the whole game initially sounded impossible.&lt;/p&gt;
&lt;p&gt;Thankfully, there was a little oversight in 1998. Blizzard gave Diablo's source code to two developers: Synergestic Software (to create an expansion), and Climax Studios (to create a Playstation port). Now Sony of Japan has long been known for letting things slide in their QA department. Anything from prototypes to full source code leaks (Beatmania), and Diablo was no exception. A symbolic file was accidentally left on the Japanese port, which contained a layout of everything in the game. This includes functions, data, types, and more! A beta version of the port also leaked, which contained yet another one of these files.&lt;/p&gt;
&lt;p&gt;To top it all off, a debug build of the PC version is contained right there on your Diablo disc! Hidden in &lt;code&gt;DIABDAT.MPQ -&amp;gt; D1221A.MPQ -&amp;gt; DIABLO.EXE&lt;/code&gt;. This build contains debug tools not found in the retail game, and many assert strings giving away code information. Combining these aspects not only makes reversing the game much easier, but it makes it far more accurate. File names, function names, and even line numbers will be fairly close to the real deal.&lt;/p&gt;
&lt;p&gt;After four months of hard work, I present to you Devilution! Instead of seeing how Diablo evolved, we'll see it devolved!&lt;/p&gt;

&lt;p&gt;Having the source code makes things much easier to maintain. For years mod-makers had to rely on tedious code editing and memory injection. A few even went even further and reversed a good chunk of the game (such as Belzebub/The Hell). The problem is that they never released their sources. Usually being a one-man job, they move on with their lives inevitably due to the amount of time/work required or lack of interest. This leaves people with a half-finished mod; one which had countless hours put into it, but left full of bugs and unfinished potential. So we're back to square one. Devilution aims to fix this, by making the source code of Diablo freely available to all.&lt;/p&gt;
&lt;p&gt;The goal of Devilution itself is to recreate the original source code as accurately as possible, in order to ensure that everything is preserved. This goes as far as bugs and badly written code in the original game. However, it becomes a solid base for developers to work with; making it much easier than before to update, fix, and port the game to other platforms.&lt;/p&gt;
&lt;p&gt;As a side goal, Devilution helps document the unused and cut content from the final game. Development of Diablo was rushed near the end--many ideas were scrapped and Multiplayer was quickly hacked in. By examining the source, we can see various quirks of planned development.&lt;/p&gt;

&lt;p&gt;Development of Diablo began around the time Windows 95 released, for which is was optimized. The compiler used was Microsoft Visual C++ 4.20, which was upgraded to 5.10 in later patches (&lt;a href=&quot;https://github.com/galaxyhaxz/devilution/blob/master/Support/linker.xls&quot;&gt;ref: spreadsheet&lt;/a&gt;). Compatibility with these tools is retained to help ensure the reversal is as accurate as possible. There are also Makefiles provided to compile with modern tools as well.&lt;/p&gt;
&lt;p&gt;Building with Visual C++ 5.10&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make sure Service Pack 3 is installed in order to update the linker from 5.00 -&amp;gt; 5.10! Newer versions of Visual Studio work as well, but will upgrade the project.&lt;/li&gt;
&lt;li&gt;Open the project workspace &lt;code&gt;Diablo.dsw&lt;/code&gt; and select &lt;code&gt;Build Diablo.exe&lt;/code&gt;. This will build all dependencies and only takes a few seconds.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Building with MinGW(32/64)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ensure that the MinGW binary paths have been added to the command line.&lt;/li&gt;
&lt;li&gt;For MinGW32, navigate to the project root and execute &lt;code&gt;mingw32-make -f Makefile32&lt;/code&gt;. The process will take longer than Visual Studio.&lt;/li&gt;
&lt;li&gt;For MinGW64, refer to the respective documentation: &lt;a href=&quot;https://github.com/galaxyhaxz/devilution/blob/master/Support/INSTALL_linux.md&quot;&gt;Linux&lt;/a&gt; | &lt;a href=&quot;https://github.com/galaxyhaxz/devilution/blob/master/Support/INSTALL_windows.md&quot;&gt;Windows&lt;/a&gt;. Note that only x86 systems may be targeted for the time being.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Compiling Definitions&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;COPYPROT&lt;/code&gt; (default: on) will define whether or not to use the CD drive for DIABDAT.MPQ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEBUGGER&lt;/code&gt; (default: off) will define whether to skip reloading for direct execution through debuggers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SLEEP&lt;/code&gt; (default: off) will define whether to sleep the program to prevent 100% CPU usage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_DEBUG&lt;/code&gt; (default: off) will define whether to include debug features (refer to 'Debugging' section)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are debug features available through both in-game and through the command-line. These have been ported from the 12-21-96 debug build. Note that not all of them are available yet.&lt;/p&gt;
&lt;p&gt;Command-line parameters&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-^&lt;/code&gt; : enable god mode and debug tools&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-$&lt;/code&gt; : enable god mode with less stuff (further documenting needed) [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; : enables item drop log [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; : disable startup video + increased item drops [PARTIALLY IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; : display frames per second&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; : disable network timeout&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; : disable startup video&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; : unused&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; : draw yellow debug tiles&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt; : enable cheats&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; : disable exclusive DirectDraw access [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-j &amp;lt;##&amp;gt;&lt;/code&gt; : init trigger at level [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l &amp;lt;#&amp;gt; &amp;lt;##&amp;gt;&lt;/code&gt; : start in level as type&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m &amp;lt;###&amp;gt;&lt;/code&gt; : add debug monster, up to 10 allowed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q &amp;lt;#&amp;gt;&lt;/code&gt; : force a certain quest&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r &amp;lt;##########&amp;gt;&lt;/code&gt; : set map seed to&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t &amp;lt;##&amp;gt;&lt;/code&gt; : sets current quest level&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In-game hotkeys&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;?&lt;/code&gt; -&amp;gt; start quest text mode (&lt;code&gt;-&lt;/code&gt;/&lt;code&gt;_&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;Enter&lt;/code&gt; to use) [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Esc&lt;/code&gt; -&amp;gt; stop quest text mode [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;/&lt;code&gt;)&lt;/code&gt; -&amp;gt; cycle through active item flags [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;8&lt;/code&gt;/&lt;code&gt;*&lt;/code&gt; -&amp;gt; level up character&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt; -&amp;gt; refresh vendor items (Griswold premium and Adria)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;]&lt;/code&gt; -&amp;gt; all spells level 10&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:&lt;/code&gt; -&amp;gt; all spells preset level&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[&lt;/code&gt; -&amp;gt; delete all gold in inventory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; -&amp;gt; fill inventory with gold (5000 piece piles)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; -&amp;gt; display dungeon Y/sum [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; -&amp;gt; increase level of the last spell casted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt; -&amp;gt; display &quot;Mid&quot; monster related&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; -&amp;gt; print debug player info&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; -&amp;gt; switch current debug player&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt; -&amp;gt; display &quot;EFlag&quot;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;/&lt;code&gt;L&lt;/code&gt; -&amp;gt; toggle lighting in dungeon [NOT YET IMPLEMENTED]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; -&amp;gt; print debug monster info&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt; -&amp;gt; switch current debug monster&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;/&lt;code&gt;R&lt;/code&gt; -&amp;gt; display game seeds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt;/&lt;code&gt;T&lt;/code&gt; -&amp;gt; display player and cursor coordinates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Currently there are a few issues with the decompiled code. The focus should be on fixing these issues for now instead of cleaning up the code. Currently only Diablo.exe has been reversed, the other files are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Battle.snp&lt;/code&gt;: code for battle.net, outdated protocol and not worth the time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiabloUI.dll&lt;/code&gt;: code for the main menu, this is entirely Windows specific and poorly written. However, it needs to be reversed to complete the source code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SmackW32.dll&lt;/code&gt;: code for the Smacker video library, not worth the time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Standard.snp&lt;/code&gt;: code for local multiplayer, again outdated. Starcraft uses the same format and TCP/IP was added in a later patch. Reversing the UDP portion is desired.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Storm.dll&lt;/code&gt;: we want Diablo to be independent of this library, the main file functions have been reversed as part of StormLib.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VidSize.exe&lt;/code&gt;: changes one byte in registry, ignore.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you are experienced with reversing, help is needed to reverse the user interface (DiabloUI) to help make Diablo cross-platform.&lt;/p&gt;

&lt;p&gt;Here are some screenshots of a few things I tinkered around with, to demonstrate the relative ease of improving the game:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/9426dfe5fc03654a8f1d3c024019cd7c5fb468b6/68747470733a2f2f7333332e706f7374696d672e63632f36786e6e68686c6d6e2f6469616275696d6f6e2e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9426dfe5fc03654a8f1d3c024019cd7c5fb468b6/68747470733a2f2f7333332e706f7374696d672e63632f36786e6e68686c6d6e2f6469616275696d6f6e2e706e67&quot; alt=&quot;Screenshot 1: Monster lifebar+items&quot; title=&quot;Monster lifebar+items&quot; data-canonical-src=&quot;https://s33.postimg.cc/6xnnhhlmn/diabuimon.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://camo.githubusercontent.com/c1b4f8890a676b46fe2b5cae7764c9fae252c7b2/68747470733a2f2f7332322e706f7374696d672e63632f7a3866687575746b312f6469616273746f72652e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c1b4f8890a676b46fe2b5cae7764c9fae252c7b2/68747470733a2f2f7332322e706f7374696d672e63632f7a3866687575746b312f6469616273746f72652e706e67&quot; alt=&quot;Screenshot 2: New trade screen&quot; title=&quot;New trade screen&quot; data-canonical-src=&quot;https://s22.postimg.cc/z8fhuutk1/diabstore.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/sanctuary&quot;&gt;sanctuary&lt;/a&gt; - documenting the Windows-specific Diablo code (engine, mpq, directx)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bwapi&quot;&gt;BWAPI Team&lt;/a&gt; - providing library API to work with Storm&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ladislav-zezula&quot;&gt;Ladislav Zezula&lt;/a&gt; - decompiling PKWARE library, decompiling Storm (StormLib)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fearedbliss&quot;&gt;fearedbliss&lt;/a&gt; - being awe-inspiring&lt;/li&gt;
&lt;li&gt;Climax Studios &amp;amp; Sony - secretly helping with their undercover QA :P&lt;/li&gt;
&lt;li&gt;Blizzard North - wait, this was a typo!&lt;/li&gt;
&lt;li&gt;Depression - reason to waste four months of my life doing this ;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This work is being released to the Public Domain. No assets of Diablo are being provided. You must own a copy of Diablo and have access to the assets beforehand in order to use this software.&lt;/p&gt;
&lt;p&gt;Battle.net(R) - Copyright (C) 1996 Blizzard Entertainment, Inc. All rights reserved. Battle.net and Blizzard Entertainment are trademarks or registered trademarks of Blizzard Entertainment, Inc. in the U.S. and/or other countries.&lt;/p&gt;
&lt;p&gt;Diablo(R) - Copyright (C) 1996 Blizzard Entertainment, Inc. All rights reserved. Diablo and Blizzard Entertainment are trademarks or registered trademarks of Blizzard Entertainment, Inc. in the U.S. and/or other countries.&lt;/p&gt;
&lt;p&gt;This software is in no way associated with or endorsed by Blizzard Entertainment(R).&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Mon, 18 Jun 2018 15:23:16 +0000</pubDate>
<dc:creator>cyberfart</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/15209402?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>galaxyhaxz/devilution</og:title>
<og:url>https://github.com/galaxyhaxz/devilution</og:url>
<og:description>devilution - Diablo devolved - magic behind the 1996 computer game</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/galaxyhaxz/devilution</dc:identifier>
</item>
<item>
<title>Apple sets up iPhones to relay location for 911 calls</title>
<link>http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</link>
<guid isPermaLink="true" >http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</guid>
<description>&lt;aside class=&quot;mod-inline media&quot;&gt;
Credit: Apple&lt;/aside&gt;&lt;div id=&quot;modal-magnify-photo-&quot; class=&quot;reveal-modal&quot; data-reveal=&quot;&quot; aria-labelledby=&quot;modalTitle&quot; aria-hidden=&quot;true&quot; role=&quot;dialog&quot;&gt;
&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;https://media.wpri.com/nxs-wpritv-media-us-east-1/photo/2017/11/06/apple-products-iphone_38459369_ver1.0_640_360.jpg&quot; alt=&quot;Apple sets up iPhones to relay location for 911 calls&quot;/&gt;&lt;small class=&quot;copyright&quot;&gt;Copyright by WPRI - All rights reserved&lt;/small&gt;&lt;/div&gt;
Credit: Apple &lt;/div&gt;

&lt;p&gt;SAN FRANCISCO (AP) — Apple is trying to drag the U.S.'s antiquated system for handling 911 calls into the 21st century.&lt;/p&gt;
&lt;p&gt;If it lives up to Apple's promise, the iPhone's next operating system will automatically deliver quicker and more reliable information pinpointing the location of 911 calls to about 6,300 emergency response centers in the U.S.&lt;/p&gt;
&lt;p&gt;Apple is trying to solve a problem caused by the technological mismatch between a 50-year-old system built for landlines and today's increasingly sophisticated smartphones.&lt;/p&gt;
&lt;p&gt;An estimated 80 percent of roughly 240 million emergency calls in the U.S. this year will come from mobile phones, most of which are capable of precisely tracking where their users are.&lt;/p&gt;
&lt;p&gt;Emergency calling centers, however, don't get that detailed location information from mobile 911 calls. Instead, they get the location of the cellular tower transmitting the call, and must rely on other methods to figure out where the caller is.&lt;/p&gt;
&lt;p&gt;That can take up precious time and often isn't very accurate, especially when calls come from inside a building. Emergency responders are sometimes dispatched a mile or more away from a caller's location.&lt;/p&gt;
&lt;p&gt;Apple's upcoming 911 feature relies on technology from RapidSOS, a New York startup. The approach developed by Apple and RapidSOS sends location data from an iPhone to a &quot;clearinghouse&quot; accessible to emergency calling centers. Only the 911 calling centers will be able to see the data during the call, and none of it can be used for non-emergency purposes, according to Apple.&lt;/p&gt;
&lt;p&gt;Individual call centers will each have to embrace the technology required to communicate with the RapidSOS clearinghouse. Some centers already have the compatible software, according to Apple, but others will have to install upgrades to their existing software.&lt;/p&gt;
&lt;p&gt;Apple expects calling centers for large metropolitan areas to upgrade more quickly than those in rural areas.&lt;/p&gt;
&lt;p&gt;Tom Wheeler, a former chairman for the Federal Communications Commission, believes Apple's new approach for locating 911 calls will set a new industry standard. &quot;This is going to save a lot of lives,&quot; said Wheeler, now a visiting professor at Harvard University. He said he hopes other phone makers will follow Apple's lead.&lt;/p&gt;
&lt;p&gt;The planned changes were announced Monday in Nashville, Tennessee during a 911 convention. They'll be part of iOS 12, the next version of Apple's iPhone software, which the company will release in September as a free update.&lt;/p&gt;


</description>
<pubDate>Mon, 18 Jun 2018 14:57:45 +0000</pubDate>
<dc:creator>chmaynard</dc:creator>
<og:title>Apple sets up iPhones to relay location for 911 calls</og:title>
<og:description>Apple is trying to drag the U.S.'s antiquated system for handling 911 calls into the 21st century.</og:description>
<og:type>article</og:type>
<og:url>http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</og:url>
<og:image>https://media.wpri.com/nxs-wpritv-media-us-east-1/photo/2017/11/06/apple-products-iphone_38459369_ver1.0_1280_720.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.wpri.com/news/us-and-world/apple-sets-up-iphones-to-relay-location-for-911-calls-1/1246399748</dc:identifier>
</item>
<item>
<title>YouTube’s Piracy Filter Blocks MIT Courses, Blender Videos, and More</title>
<link>https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</link>
<guid isPermaLink="true" >https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://torrentfreak.com/images/sadyoutube.jpg&quot; alt=&quot;&quot; width=&quot;275&quot; height=&quot;196&quot; class=&quot;alignright size-full wp-image-117196&quot;/&gt;To protect copyright holders, YouTube uses an advanced piracy recognition system that flags and disables videos which are used without permission.&lt;/p&gt;
&lt;p&gt;This system, known as Content ID, works well most of the time, but it is far from perfect.&lt;/p&gt;
&lt;p&gt;It’s not well equipped to determine whether content deployment is protected under ‘fair use’, and in some cases it even views &lt;a href=&quot;https://torrentfreak.com/musicians-white-noise-youtube-video-hit-with-copyright-complaints-180105/&quot;&gt;white noise&lt;/a&gt; or &lt;a href=&quot;https://news.ycombinator.com/item?id=3637124&quot;&gt;birds chirping&lt;/a&gt; as piracy.&lt;/p&gt;
&lt;p&gt;Over the past several days, an even more worrying trend has appeared. Several popular YouTube accounts including those belonging to ‘&lt;a href=&quot;https://ocw.mit.edu/index.htm&quot;&gt;MIT OpenCourseWare&lt;/a&gt;‘ and the ‘&lt;a href=&quot;https://www.blender.org/&quot;&gt;Blender Foundation&lt;/a&gt;,’ have suddenly had all their videos blocked.&lt;/p&gt;
&lt;p&gt;People who try to watch one of the freely available &lt;a href=&quot;https://www.youtube.com/watch?v=j4b9U9m9MQA&quot;&gt;MIT courses on YouTube&lt;/a&gt; get the following message, which typically appears if an uploader doesn’t have the rights to show content locally.&lt;/p&gt;
&lt;p&gt;“This video contains content from MIT. It is not available in your country.”&lt;/p&gt;
&lt;p&gt;The message appears in all locations that we were able to check, suggesting that it may very well apply worldwide. In any case, on social media there’s no shortage of people mentioning that they can no longer access the courses.&lt;/p&gt;
&lt;center&gt;&lt;strong&gt;Blocked courseware…&lt;/strong&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://torrentfreak.com/images/course-e1529312774179.png&quot; alt=&quot;&quot; width=&quot;567&quot; height=&quot;379&quot; class=&quot;alignnone size-full wp-image-157240&quot;/&gt;&lt;/center&gt;
&lt;p&gt;The issue hasn’t gone unnoticed by MIT’s OpenCourseWare team which is investigating the matter, without pointing fingers.&lt;/p&gt;
&lt;p&gt;“You may have noticed that we are having some trouble with our videos! Please stand by. The elves are working around the clock to fix the issue,” they &lt;a href=&quot;https://twitter.com/MITOCW/status/1007943441035268096&quot;&gt;write&lt;/a&gt;, referring people to non-video content in the meantime.&lt;/p&gt;
&lt;p&gt;Interestingly, the MIT case doesn’t appear to be an isolated incident. Another organization that was hit by the same mysterious blocking efforts is the Blender Foundation.&lt;/p&gt;
&lt;p&gt;The nonprofit organization, which is leading the development of the open source 3D content-creation application Blender, has also had its &lt;a href=&quot;https://www.youtube.com/watch?v=Y-rmzh0PI3c&quot;&gt;videos blocked&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ton Roosendaal, Chairman of the Blender Foundation, noticed the issue on Saturday and contacted YouTube. “This is most probably an error from their side,” Roosendaal said.&lt;/p&gt;
&lt;p&gt;At the time of writing, the issue still hasn’t been resolved.&lt;/p&gt;
&lt;center&gt;&lt;strong&gt;What the heck…&lt;/strong&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://torrentfreak.com/images/tontweet.png&quot; alt=&quot;&quot; width=&quot;578&quot; height=&quot;397&quot; class=&quot;alignnone size-full wp-image-157233&quot;/&gt;&lt;/center&gt;
&lt;p&gt;Both organizations have verified YouTube accounts and many subscribers, which makes them high profile targets. However, two days have passed and it’s still unclear what’s going on.&lt;/p&gt;
&lt;p&gt;The blocking message is part of YouTube’s piracy filter system, but why it was triggered is unknown. As the original publishers, both certainly have the right to publish the videos in question.&lt;/p&gt;
&lt;p&gt;Looking even further, we were able to spot dozens of accounts which show similar “blocking” messages. They include verified ones, such as &lt;a href=&quot;https://www.youtube.com/user/pibindia/videos&quot;&gt;India’s Press Information Bureau&lt;/a&gt;, soccer club &lt;a href=&quot;https://www.youtube.com/watch?v=qZyW4IFf1-E&quot;&gt;Sparta Praha&lt;/a&gt;, and &lt;a href=&quot;https://www.youtube.com/watch?v=zW9zh_9V0SQ&amp;amp;list=TL4s-H0g91xaEI_XL2yG9w-a8irMWSM-An&quot;&gt;England Rugby&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TorrentFreak reached out to YouTube to ask why the videos of these accounts have been blocked but at the time of publication, we had yet to hear back. Something appears to be awfully wrong though.&lt;/p&gt;
&lt;p&gt;The timing of the incident is interesting, to say the least. This week there’s an &lt;a href=&quot;https://torrentfreak.com/judgment-day-nears-for-eus-piracy-filters-180604/&quot;&gt;important vote&lt;/a&gt; scheduled in the European Parliament, which will determine the course of EU copyright law.&lt;/p&gt;
&lt;p&gt;One of the most contested changes is the so-called “upload filter,” which is detailed in Article 13 of the copyright reform proposal. According to opponents, such YouTube-like piracy filters are a threat to free speech.&lt;/p&gt;
&lt;p&gt;These apparent “mistakes” show that there is a point to that.&lt;/p&gt;
&lt;p&gt;Ironically, even French politicians, who were expected to vote in favor of the upload filters, may now reconsider &lt;a href=&quot;https://www.privateinternetaccess.com/blog/2018/06/politicians-about-to-vote-in-favor-of-mandatory-upload-filtering-in-europe-get-channel-deleted-by-youtubes-upload-filtering/&quot;&gt;their stance&lt;/a&gt; after YouTube temporarily &lt;a href=&quot;http://www.europe1.fr/medias-tele/le-compte-youtube-de-la-chaine-dextreme-droite-tv-libertes-ferme-le-rn-sinsurge-3683666&quot;&gt;disabled their account&lt;/a&gt; following three copyright strikes.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 14:57:39 +0000</pubDate>
<dc:creator>gooseus</dc:creator>
<og:type>article</og:type>
<og:title>YouTube's Piracy Filter Blocks MIT Courses, Blender Videos, and More - TorrentFreak</og:title>
<og:description>Several popular YouTube accounts, including those belonging to 'MIT OpenCourseWare' and the 'Blender Foundation,' have had all their videos blocked. People who try to access the videos are informed that they are not available in their country, suggesting that YouTube's piracy filters have been triggered. It's unclear, however, who or what is to blame.</og:description>
<og:url>https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</og:url>
<og:image>https://torrentfreak.com/images/roadblock-blocked-feat.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://torrentfreak.com/youtubes-piracy-filter-blocks-mit-courses-blender-videos-and-more-180618/</dc:identifier>
</item>
<item>
<title>Pulumi – A new open-source cloud development platform</title>
<link>http://joeduffyblog.com/2018/06/18/hello-pulumi/</link>
<guid isPermaLink="true" >http://joeduffyblog.com/2018/06/18/hello-pulumi/</guid>
<description>&lt;p&gt;Today we launched Pulumi, a new open source cloud development platform. Using Pulumi, you author cloud programs using your favorite language, spanning low-level infrastructure-as-code to highly productive and modern container- and serverless-powered applications. We started on Pulumi a little over a year ago and I’m blown away by the progress we’ve made. This is our first step on the journey, and it’s a huge one, and I’m eager to share what we’ve built.&lt;/p&gt;
&lt;p&gt;Pulumi is multi-language, multi-cloud, and fully extensible. On day one, it supports JavaScript, TypeScript, Python, and Go languages, and AWS, Azure, and GCP clouds, in addition to Kubernetes targeting any public, private, or hybrid cloud. Pulumi delivers a single, consistent programming model and set of tools to program and manage any of these environments, supported by a rich ecosystem of reusable packages. Using real languages changes everything.&lt;/p&gt;
&lt;p&gt;TL;DR, with Pulumi, &lt;a href=&quot;https://serverless.com/blog/serverless-application-for-long-running-process-fargate-lambda/&quot;&gt;38 pages of manual instructions&lt;/a&gt; become &lt;a href=&quot;https://github.com/pulumi/examples/blob/master/cloud-js-thumbnailer/index.js&quot;&gt;38 lines of code&lt;/a&gt;. 25,000 lines of YAML configuration becomes 500 lines in a real programming language.&lt;/p&gt;
&lt;p&gt;The entire Pulumi runtime, CLI, and supporting libraries are &lt;a href=&quot;https://github.com/pulumi&quot;&gt;available on GitHub&lt;/a&gt; and free to download at &lt;a href=&quot;https://pulumi.io&quot;&gt;https://pulumi.io&lt;/a&gt;. The team is on tenterhooks &lt;a href=&quot;https://slack.pulumi.io&quot;&gt;awaiting your feedback&lt;/a&gt;. In the meantime, allow me to tell you a bit more about Pulumi, and how and why we got here.&lt;/p&gt;
&lt;h2 id=&quot;why-pulumi&quot;&gt;Why Pulumi?&lt;/h2&gt;
&lt;p&gt;My background is 100% developer tools. I was an early engineer on .NET, architected its concurrency and asynchrony support, led the programming platform for &lt;a href=&quot;http://joeduffyblog.com/2015/11/03/blogging-about-midori/&quot;&gt;a distributed OS&lt;/a&gt;, and managed Microsoft’s languages groups, including open sourcing and taking .NET Core cross-platform. Because of this background, I came to cloud with a unique perspective.&lt;/p&gt;
&lt;p&gt;And what I found was frankly not very appealing to me.&lt;/p&gt;
&lt;p&gt;I started exploring Pulumi during late 2016 with my friend and co-founder Eric Rudder, when containers and serverless were far enough along to show amazing promise, but early enough to be very difficult to use “for real.” The capabilities of the cloud are incredible, but far too difficult to use, still to this day a year and a half later.&lt;/p&gt;
&lt;p&gt;For every serverless function, I had dozens of lines of JSON or YAML configuration. To connect that to an API endpoint, I needed to learn obscure concepts and perform copy-and-paste grunge work. Docker was great when I was running a little cluster on my machine, but running it in production required manually managing etcd clusters, setting up networks and iptable routes, and a whole host of things that were leagues away from my application domain. Kubernetes at least let me do this once and reuse it across clouds, but felt alien and distracting.&lt;/p&gt;
&lt;p&gt;I thought I was a reasonably experienced engineer, having worked 20 years in this industry, but trying to get my code into the cloud made me feel dumb. And frustrated! I knew that if I could just master these new capabilities, the world would be at my fingertips. All the time I spent wading through that complexity should have been time spent creating business value.&lt;/p&gt;
&lt;p&gt;Many aspects of programming have gone through a similar transition:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In the early 80s, we programmed microprocessors using assembly language. Eventually, compiler technology advanced, and we simultaneously settled on common architectures. Low-level programming languages like FORTRAN and C flourished.&lt;/li&gt;
&lt;li&gt;In the early 90s, we programmed directly against low-level OS primitives, whether those were POSIX syscalls or Win32 APIs, and did manual memory and resource management. Eventually, language runtime technology and processor speeds advanced to the state where we could use higher level languages, like Java. This trend has accelerated, and gave way to the web, where JavaScript reigns, in addition to dynamic languages.&lt;/li&gt;
&lt;li&gt;In the early 2000s, shared memory concurrency in our programming models was primitive at best. (I spent &lt;a href=&quot;http://joeduffyblog.com/2016/11/30/15-years-of-concurrency/&quot;&gt;a considerable amount of time on this problem&lt;/a&gt;.) These days, we simply assume the OS has advanced thread pooling, scheduling, and async IO capabilities, and program to much higher level APIs, such as tasks and promises.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I believe we are amidst a similar transition for cloud software. We are right in the middle of a sea change from building monolithic applications to building true cloud-first distributed systems. And yet, of course, the thing about sea changes is that you seldom know it’s happening until after it has happened.&lt;/p&gt;
&lt;p&gt;The “configuration” situation, when viewed in the above light, makes sense. In the early days of VMs, we took our existing applications and tossed them over the fence for someone to add a little bit of INI or XML glue to get them running inside a VM for more flexible management. This approach to configuration stayed with us as we “lifted and shifted” these same VMs into the cloud. And it worked, because we got the boundaries approximately correct.&lt;/p&gt;
&lt;p&gt;Expressing the relationships between container-based microservices, serverless functions, and fine-grained hosted services using this same style of configuration has led to significant accidental complexity. Turning an application into a distributed system can’t be an afterthought. The cloud, it turns out, pervades your architecture and design. And the way that we know how to best express architecture and design in our programs is using code, written in real programming languages with abstractions, reuse, and great tooling.&lt;/p&gt;
&lt;p&gt;Early on, Eric and I interviewed a few dozen customers. What we found was universal disillusionment from developers and DevOps engineers alike. We discovered extreme specialization, and even within the same team, engineers didn’t speak the same language. I’ve been hearing this even more in recent weeks, and I expect a NoYAML movement any day now.&lt;/p&gt;
&lt;p&gt;Specialization is a good thing, and we want our best and brightest cloud architects elevated into senior DevOps and SRE roles, but teams must be able to speak the same language when collaborating. Not having a common lingua franca introduces a hard, physical separation between teams rather than divvying up the work based on policy and circumstances. Pulumi aims to give all of us the tools we need to solve this problem too.&lt;/p&gt;
&lt;h2 id=&quot;what-is-pulumi&quot;&gt;What is Pulumi?&lt;/h2&gt;
&lt;p&gt;Pulumi is a multi-language and multi-cloud development platform. It lets you create all aspects of cloud programs using real languages and real code, from infrastructure on up to the application itself. Just write programs and run them, and Pulumi figures out the rest.&lt;/p&gt;
&lt;p&gt;At the center of Pulumi is a cloud object model, coupled with an evaluation runtime that understands how to take programs written in any language, understand the cloud resources necessary to execute them, and then plan and manage your cloud resources in a robust way. This cloud runtime and object model is inherently language- and cloud-neutral, which is how we can support so many languages and clouds out of the gate. More are on their way.&lt;/p&gt;
&lt;p&gt;Pulumi’s approach takes the familiar concept of infrastructure-as-code, coupled with immutable infrastructure, and lets you reap the automation and repeatability benefits from your favorite languages instead of YAML or DSLs. You can diff changes before deploying them and we keep a perfect audit trail of who changed what and when. The core model is therefore declarative.&lt;/p&gt;
&lt;p&gt;Using real languages unlocks tremendous benefits:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Familiarity&lt;/strong&gt;: no need to learn new bespoke DSLs or YAML-based templating languages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Abstraction&lt;/strong&gt;: as we love in our languages, we can build bigger things out of smaller things&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sharing and reuse&lt;/strong&gt;: we leverage existing language package managers to share and reuse these abstractions, either with the community, within your team, or both&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expressiveness&lt;/strong&gt;: use the full power of your language, including async, loops, and conditionals&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Toolability&lt;/strong&gt;: by using real languages, we instantly gain access to IDEs, refactoring, testing, static analysis and linters, and so much more&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Productivity&lt;/strong&gt;: add all of the above together, and you get things done faster, with more joy&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These benefits of course matter at the lowest layer, when provisioning raw cloud resources, but we’ve found here on the team that you just can’t help but use abstraction. That includes wrapping things in functions to eliminate boilerplate and creating custom classes that introduce higher level concepts, often packaging them up for reuse time and time again.&lt;/p&gt;
&lt;p&gt;For example, this code provisions a DynamoDB database in AWS:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@pulumi/aws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;music&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dynamodb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;music&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Album&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;S&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;S&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;hashKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Album&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rangeKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And &lt;a href=&quot;https://github.com/pulumi/examples/tree/master/cloud-js-thumbnailer&quot;&gt;this code&lt;/a&gt; creates a container-based task and serverless function, triggered by a bucket:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloud&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@pulumi/cloud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffmpegThumbTask&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./path_to_dockerfile/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onPut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;onNewVideo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucketArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucketArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;S3_BUCKET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;INPUT_VIDEO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;TIME_OFFSET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'_'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;OUTPUT_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'_'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Better yet, this code can be deployed to any public or private cloud, based on your needs.&lt;/p&gt;
&lt;p&gt;And, finally, &lt;a href=&quot;https://github.com/pulumi/examples/tree/master/cloud-ts-url-shortener-cache&quot;&gt;this example&lt;/a&gt; creates a Redis cache. How do we know? We don’t need to. The cache component is an abstraction that encapsulates unimportant details we can safely ignore:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./cache&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url-cache&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After using Pulumi for a bit, you’ll stop thinking about infrastructure the same way. Instead of a distinct “thing,” entirely independent from your application, your brain will start thinking about distributed cloud systems as a core part of your program’s architecture, not an afterthought.&lt;/p&gt;
&lt;p&gt;Because of abstraction, we’ve been able to offer some powerful libraries. Libraries are an excellent way to distill and enforce best practices. Of course, there’s nothing particularly special about our own libraries, since they are just functions and classes and code, and we look forward to seeing the ones you build for yourself, your team, or the community.&lt;/p&gt;
&lt;p&gt;Our most sophisticated library – the Pulumi Cloud Framework – offers an early preview of some exciting work in progress, demonstrating how you can create abstractions that span cloud providers’ own views on such core concepts as containers, serverless functions, and storage buckets. In the same way you can write powerful applications in Node.js, Python, Java, .NET, et al., that leverage processes, threads, and filesystems, no matter whether it is macOS, Linux, or Windows, this approach lets you create modern multi-cloud applications that can target any cloud provider. Technologies like Kubernetes and the rest of the CNCF portfolio are helping to drive this inevitable outcome, as they democratize and yield agreement on basic compute abstractions across the entire cloud substrate.&lt;/p&gt;
&lt;p&gt;Pulumi is not a PaaS, despite it offering PaaS-like productivity; your programs always run directly against your cloud of choice, and the full power of that underlying cloud is always accessible. Even if you opt to use higher level components, it’s turtles all the way down, and you can always use the raw resources directly if you wish. It’s like any sophisticated modern piece of software: sometimes the whole thing must be written in C(++), so as to access the full power of the underlying platform, but for most common scenarios, 70-100% can be platform independent code, with 30-0% specialization required to really make it sing on the target OS.&lt;/p&gt;
&lt;p&gt;I have a dozen blog posts queued up to go into more details on all aspects of Pulumi. To keep this post reasonably short, however, I will close with a some of my favorite aspects of Pulumi.&lt;/p&gt;
&lt;h2 id=&quot;my-favorite-things&quot;&gt;My Favorite Things&lt;/h2&gt;
&lt;p&gt;It’s hard to choose, but here are some of my favorite things about Pulumi:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Source&lt;/strong&gt;. I am a huge believer that all developer tools should be open source. Sure, Pulumi is a company too, but there are ample opportunities to build a business model by adding true convenience. (Think Git versus GitHub.) And we benefit tremendously from work that has come before, including Docker, Terraform, Kubernetes, TypeScript, and too many others to mention explicitly. We look forward to becoming part of the ecosystem. Because we bet so big on open source, I am excited to see where the community takes us, especially in the area of higher-level packages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multi-Language&lt;/strong&gt;. Just as with Java and .NET, the Pulumi runtime was architected to support many languages, and to do so in an idiomatic way for all aspects of a target language (style, syntax, packages, etc). Because we are open source, anyone can contribute their own.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multi-Cloud&lt;/strong&gt;. Our cloud object model is a powerful foundation that can support any cloud provider. This delivers a unified programming model, tools, and control plane for managing cloud software anywhere. There’s no need to learn three different YAML dialects, and five different CLIs, just to get a simple container-based application stood up in production.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloud Object Model&lt;/strong&gt;. This underlying cloud object model offers a rich view into how your cloud programs are constructed. The resulting objects form a DAG using dependencies from your program that the system can analyze and understand to deliver insights, a capability we intend to build on over time to unlock sophisticated static analysis and visualizations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reusable Components&lt;/strong&gt;. Thanks to having a real language, we can build higher level abstractions. One of my favorite examples that has helped us to regularly eliminate 1,000s of lines of YAML from our customers’ deployments is our AWS Infrastructure package. It takes the AWS best practices for setting up a Virtual Private Cloud, with private subnets and multi-Availability Zone support, and turns it into a few lines of code to provision an entire network:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsinfra&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@pulumi/aws-infra&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsinfra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-net`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;numberOfAvailabilityZones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Create subnets in many AZs&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;usePrivateSubnets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// Run inside private per-AZ subnets&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;My favorite success story so far has been taking 25,000 lines of a customer’s AWS CloudFormation YAML files – using serverless, containers, infrastructure, and three custom deployment pipelines – and replacing them all with 500 lines of TypeScript and a single continuously deployed architecture using Pulumi. Not only is this far less code that all engineers in the company can understand, so that they can build new things in an afternoon where it used to take weeks, but the result can also now run in Kubernetes on any cloud or on-premises, in addition to lighting up in AWS. Instead of one overloaded engineer managing the team’s CloudFormation stack, the entire team is empowered to move faster.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unified Container Build/Publish Pipeline&lt;/strong&gt;. An aspect of trying to get containers into production that frustrated me early on was trying to synchronize my application, container, and infrastructure management, each of which tended to use different tools. Our Cloud Framework demonstrates an integrated workflow where simply running pulumi up build, diffed, pushed, and pulled a new container image, all orchestrated carefully so as to eliminate downtime.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Serverless Functions as Lambdas&lt;/strong&gt;. AWS got the name exactly right: Lambda. In Pulumi, I can now write my serverless functions using lambdas in my favorite language, without a single line of YAML:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@pulumi/aws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serverless&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@pulumi/aws-serverless&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;topic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;topic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;serverless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloudwatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hourly&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rate(60 minutes)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;aws-sdk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;TopicArn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This capability allows you to capture references to variables: constants, configuration settings or encrypted secrets, or even references to other resources so that I can communicate with them. I may have buried the lede here; the first time you experience this, I guarantee you’ll have an “ah hah” moment, connecting serverless to every single event-driven piece of code you’ve ever written.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources with APIs&lt;/strong&gt;. Because I can capture references to other cloud resources, I can create APIs on top of them to make them easier to use in my runtime code. This enables an “actor-like” programming model without having to deal with configuration and service discovery.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stacks&lt;/strong&gt;. A core concept in Pulumi is the idea of a “stack.” A stack is an isolated instance of your cloud program whose resources and configuration are distinct from all other stacks. You might have a stack each for production, staging, and testing, or perhaps for each single-tenanted environment. Pulumi’s CLI makes it trivial to spin up and tear down lots of stacks. This opens up workflows you might not have previously even attempted, like each developer having her own stack, spinning up (and tearing down) a fresh stack to test out each Pull Request, or even splitting tiers of your service into many stacks that are linked together.&lt;/p&gt;
&lt;p&gt;I could keep going on and on, and I shall do so in future blog posts. Now that Pulumi is out of stealth, expect to hear a lot more from me in the days and weeks to come. I hope that this gives you a better idea of the overall platform, approach, and unique strengths.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What’s Next?&lt;/h2&gt;
&lt;p&gt;Our hope is that with Pulumi, developers and DevOps teams alike will experience a cloud renaissance. Building powerful cloud software will be more enjoyable, more productive, and more collaborative. Modern cloud software will shift from being islands of code with an equal amount of configuration glue in between, to being elegant distributed systems.&lt;/p&gt;
&lt;p&gt;This is a hard problem. I am in no way saying we’ve solved it. I do believe that Pulumi is the closest thing to this future cloud development platform that I’ve personally seen and wanted. Betting on languages will enable us all to “stand on the shoulders of giants” during this exciting time, which gives me optimism; languages are always a safe bet.&lt;/p&gt;
&lt;p&gt;Today is quite possibly the most exciting day of my career. I’d like to thank our amazing team and everybody who helped out along the way, indulging our crazy ideas, and believing in us.&lt;/p&gt;
&lt;p&gt;Get Pulumi now at &lt;a href=&quot;https://pulumi.io&quot;&gt;https://pulumi.io&lt;/a&gt;, or simply run:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://get.pulumi.com | sh
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I can’t wait to see all the incredible things you will build using Pulumi.&lt;/p&gt;
&lt;p&gt;Joe&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;P. S. I’d be remiss if I did not thank my late mentor, and best friend, Chris Brumme. Although Chris is not with us to celebrate this moment, I have wondered, at every step, “what would Chris do.” Pulumi is the Hawaiian word for “broom” and, though it is a complete mispronunciation of his name, I am proud to have built Pulumi in his honor nonetheless.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 13:01:08 +0000</pubDate>
<dc:creator>MikusR</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://joeduffyblog.com/2018/06/18/hello-pulumi/</dc:identifier>
</item>
<item>
<title>Audi CEO Stadler Taken Into Custody in Diesel-Cheating Probe</title>
<link>https://www.bloomberg.com/news/articles/2018-06-18/audi-ceo-stadler-taken-into-custody-in-diesel-probe</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-06-18/audi-ceo-stadler-taken-into-custody-in-diesel-probe</guid>
<description>&lt;aside class=&quot;left-column&quot;&gt;&lt;div class=&quot;text-to-speech&quot;&gt;
&lt;p&gt;LISTEN TO ARTICLE&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;share-article-button&quot;&gt;
&lt;p&gt;SHARE THIS ARTICLE&lt;/p&gt;




&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;Volkswagen AG’s board was unable to agree on a new leader for its Audi unit after more than six hours of debate Monday, with some members balking at making a hasty choice after the unexpected arrest of the brand’s longtime chief.&lt;/p&gt;


&lt;p&gt;Plans by VW stakeholders to quickly appoint Audi sales boss Bram Schot as the unit’s interim chief executive officer following the arrest of Rupert Stadler encountered resistance at a meeting of supervisory board members, and it’s unclear when the situation will be resolved, according to people familiar with the matter.&lt;/p&gt;


&lt;p&gt;“The supervisory board members of VW and Audi haven’t reached a decision yet today and continue to explore the situation,” the automaker said in an emailed statement late Monday. A company spokesman declined to elaborate. Stadler’s arrest, over his role in the manufacturer’s diesel-emissions scandal, is the first among VW group’s management board members.&lt;/p&gt;


&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-328656730&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iX8tMTHup4lE/v0/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iX8tMTHup4lE/v0/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot; data-img-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;news-figure-caption-text caption&quot;&gt;
&lt;p&gt;Bram Schot&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Photographer: Christophe Stache/AFP via Getty Images&lt;/p&gt;

&lt;p&gt;Board members had planned a routine gathering at the headquarters in Wolfsburg, Germany, but they were caught by surprise by Stadler’s arrest, and the get-together quickly escalated into a crisis meeting, said the people, who asked not to be identified because the deliberations aren’t public. Audi is the VW group’s largest profit contributor and it can ill-afford a vacuum at the top. Stadler was arrested earlier Monday at his home in Ingolstadt, Germany.&lt;/p&gt;


&lt;p&gt;With Schot, Audi’s head of sales and marketing since September, VW would be going with an executive so far untainted by the emissions scandal. The 56-year-old joined VW from Daimler AG in 2011, holding positions at the commercial-vehicles unit. But some opposition emerged to choosing Schot, and the parties -- including board members, labor representatives and government officials -- will review options on Tuesday, said the people.&lt;/p&gt;
&lt;p&gt;Stadler’s arrest raises fresh questions about Volkswagen’s crisis management that’s alternated between stonewalling and cooperation, while protecting its most senior managers amid swirling allegations that some of the key leaders might have been informed earlier about the diesel-engine cheating than they acknowledged so far.&lt;/p&gt;
&lt;p data-tout-type=&quot;story&quot;&gt;&lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2018-06-18/vw-executive-tally-in-vw-dieselgate-grows-with-stadler-arrest&quot; title=&quot;Click for full story&quot; target=&quot;_blank&quot;&gt;Click here to read more on VW executives caught in the diesel probes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Munich prosecutors sought to take Stadler, 55, into custody because of the risk he may tamper with evidence, they said in a statement. Prosecutors acted after wiretapping his phone, Sueddeutsche Zeitung reported. Last week, authorities raided his house and named him a suspect in their probe of fraud and falsifying public documents in relation to selling diesel cars in Europe.&lt;/p&gt;

&lt;p&gt;Stadler is willing to be questioned later this week and his lawyers won’t challenge his arrest for now, prosecutor Stephan Necknig said. Investigators had indications Stadler, who hasn’t been charged, may influence witnesses in the probe, he said. Pretrial detention can last as long as three months and can be extended while cooperative suspects usually leave custody much faster.&lt;/p&gt;
&lt;h3&gt;In Doubt&lt;/h3&gt;
&lt;p&gt;The arrest, which comes days after Volkswagen &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2018-06-13/vw-agrees-to-1-2-billion-diesel-fine-from-german-prosecutors&quot; title=&quot;VW Agrees to $1.2 Billion Fine as Diesel Crisis Grinds On (2)&quot; target=&quot;_blank&quot;&gt;agreed&lt;/a&gt; to pay a 1 billion-euro ($1.2 billion) fine imposed by German prosecutors, spells more trouble at the top of one of Volkswagen’s critically-important divisions. Stadler oversees a unit that generates vital profits and provides technology including engines to a number of the group’s brands -- including Porsche.&lt;/p&gt;
&lt;p&gt;Even if Stadler wasn’t directly involved in the diesel-engine manipulation, there has been an obvious lack of oversight at Audi that stretched over years, Juergen Pieper, a Frankfurt-based analyst at Metzler Bank, said by phone.&lt;/p&gt;
&lt;div class=&quot;chart&quot; data-responsive=&quot;true&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;chart-js&quot; readability=&quot;9&quot;&gt;
&lt;h3 class=&quot;chart__title&quot;&gt;Earnings Power&lt;/h3&gt;
&lt;p class=&quot;chart__subtitle&quot;&gt;Audi generates the most profit of any VW automotive brand&lt;/p&gt;

&lt;p class=&quot;chart__source&quot;&gt;Source: Company annual report&lt;/p&gt;

&lt;/div&gt;
&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iRnoeXxbd5N0/v1/-1x-1.png&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;p&gt;&lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/quote/VOW3:GY&quot; title=&quot;1-Year Share Price&quot; target=&quot;_blank&quot;&gt;Volkswagen&lt;/a&gt; declined 3.1 percent Monday to 156.06 euros, the lowest since February, extending losses this year to 6.2 percent.&lt;/p&gt;
&lt;p&gt;Stadler has led Audi since 2007. VW’s controlling Porsche and Piech families had so far backed him despite a constant drumbeat of allegations ever since Audi got embroiled in the diesel scandal in November 2015. Initially rejecting U.S. regulators’ claims it used illegal engine software, the carmaker has struggled to put an end to a drip-feed of negative diesel-related headlines as German authorities stepped up scrutiny on its domestic market as well.&lt;/p&gt;
&lt;p&gt;Ulrich Weiss, a former top engineer at Audi’s engine development operation, told a German labor court last year Stadler had been aware of the illegal software earlier than he admitted. Weiss and Audi have since settled the legal dispute over his firing.&lt;/p&gt;
&lt;h3&gt;Piech Assistant&lt;/h3&gt;
&lt;p&gt;Stadler joined Volkswagen’s Audi unit in 1990, where he assisted the unit’s then-CEO Ferdinand Piech, the famed and feared later Volkswagen chairman. At Audi, he also worked alongside then-head of development Martin Winterkorn, who resigned as VW CEO days after the cheating scandal first erupted. The U.S. Justice Department in May issued a warrant for Winterkorn’s arrest.&lt;/p&gt;
&lt;p&gt;VW still faces legal proceedings in 55 countries and investigations into stock-market manipulation in its home market. The company has earmarked more than 27 billion euros for fines, buybacks and costs. Investors have accused the company of informing investors too late about the probe, a view the carmaker has contested.&lt;/p&gt;
&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;Prosecutors in Munich, Stuttgart and Braunschweig are continuing their investigations of VW and its units. In April, Stuttgart authorities &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/terminal/P7HNNB6VDKHV&quot; title=&quot;VW’s Porsche Unit Manager Arrested in Emissions Probe (2)&quot; class=&quot;terminal-news-story&quot; target=&quot;_blank&quot;&gt;arrested&lt;/a&gt; a senior engine manager at Porsche, after conducting raids at 10 sites. Wolfgang Hatz, who ran motor development from 2007 to 2011, has been in custody since September. Giovanni Pamio, a former Audi engineer, was arrested last year and released four months later after extensive questioning. The Munich probe now involves 20 people linked to Audi.&lt;/p&gt;
&lt;p&gt;Two VW employees are currently serving prison terms in the U.S. James Liang, a veteran company engineer who pleaded guilty to conspiracy, was sentenced to 40 months in custody. Oliver Schmidt, VW’s compliance liaison with American regulators, pleaded guilty in August to one count of conspiracy to defraud the U.S. He received a seven-year sentence.&lt;/p&gt;
&lt;p&gt;“The ongoing public bickering continues to undermine shareholder, customer and employee confidence,” Evercore ISI analyst Arndt Ellinghorst wrote in a note. “Almost three years after the diesel scandal broke, it takes the police to take action against the Audi CEO.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;— With assistance by Hugo Miller&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jun 2018 12:27:12 +0000</pubDate>
<dc:creator>crunchlibrarian</dc:creator>
<og:description>Volkswagen AG’s board was unable to agree on a new leader for its Audi unit after more than six hours of debate Monday, with some members balking at making a hasty choice after the unexpected arrest of the brand’s longtime chief.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iqZpdUC19Fpk/v0/1200x800.jpg</og:image>
<og:title>VW Stakeholders Fail to Select New Audi Chief in 6-Hour Meeting</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-06-18/audi-ceo-stadler-taken-into-custody-in-diesel-probe</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-06-18/audi-ceo-stadler-taken-into-custody-in-diesel-probe</dc:identifier>
</item>
<item>
<title>World Airports Voronoi (2014)</title>
<link>https://www.jasondavies.com/maps/voronoi/airports/</link>
<guid isPermaLink="true" >https://www.jasondavies.com/maps/voronoi/airports/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@jasondavies&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;World Airports Voronoi&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;The major airports of the world and their closest regions.&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://www.jasondavies.com/maps/voronoi/airports/full.png&quot;/&gt;&lt;title&gt;World Airports Voronoi&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;32.774406332454&quot;&gt;
&lt;p class=&quot;breadcrumbs&quot;&gt;&lt;a href=&quot;http://www.jasondavies.com/&quot;&gt;Jason Davies&lt;/a&gt; → &lt;a href=&quot;https://www.jasondavies.com/maps/&quot;&gt;Maps&lt;/a&gt; → &lt;a href=&quot;https://www.jasondavies.com/maps/voronoi/&quot;&gt;Spherical Voronoi Diagrams&lt;/a&gt;&lt;/p&gt;


&lt;p class=&quot;cite&quot;&gt;2,980 large and medium airports with scheduled services from &lt;a href=&quot;http://ourairports.com/data/&quot;&gt;OurAirports&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;wrapper&quot; readability=&quot;10.365384615385&quot;&gt;
&lt;p&gt;Each region is closer to a particular airport than any other. This partitioning of the sphere is called a spherical &lt;a href=&quot;http://en.wikipedia.org/wiki/Voronoi_diagram&quot;&gt;Voronoi diagram&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Most Remote Point&lt;/h2&gt;
&lt;p&gt;The point at &lt;span id=&quot;remote-point-coordinates&quot;&gt;…&lt;/span&gt; is furthest away from any airport in the above dataset; &lt;span id=&quot;remote-point-distance&quot;&gt;…&lt;/span&gt; from the nearest three airports.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;wrapper&quot; readability=&quot;9.9152542372881&quot;&gt;
&lt;p&gt;This is the &lt;a href=&quot;http://mathworld.wolfram.com/Circumcenter.html&quot;&gt;circumcentre&lt;/a&gt; of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Delaunay_triangulation&quot;&gt;Delaunay triangle&lt;/a&gt; with the largest &lt;a href=&quot;http://mathworld.wolfram.com/Circumcircle.html&quot;&gt;circumcircle&lt;/a&gt; radius.&lt;/p&gt;
&lt;p&gt;There &lt;em&gt;are&lt;/em&gt; in fact airports on Antarctica, but they are not classed as medium or large, and do not have scheduled services according to this dataset.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;wrapper&quot; readability=&quot;8&quot;&gt;
&lt;h2&gt;Most Remote Airport&lt;/h2&gt;
&lt;p&gt;&lt;span id=&quot;remote-airport-name&quot;&gt;…&lt;/span&gt; at &lt;span id=&quot;remote-airport-coordinates&quot;&gt;…&lt;/span&gt; is the most remote; &lt;span id=&quot;remote-airport-distance&quot;/&gt; from the nearest airport, &lt;span id=&quot;remote-airport-neighbour&quot;/&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;/body&gt;</description>
<pubDate>Mon, 18 Jun 2018 12:11:41 +0000</pubDate>
<dc:creator>JoelSanchez</dc:creator>
<og:title>World Airports Voronoi</og:title>
<og:description>The major airports of the world and their closest regions.</og:description>
<og:image>https://www.jasondavies.com/maps/voronoi/airports/full.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.jasondavies.com/maps/voronoi/airports/</dc:identifier>
</item>
<item>
<title>Railway-Oriented Programming (2015)</title>
<link>https://fsharpforfunandprofit.com/rop/</link>
<guid isPermaLink="true" >https://fsharpforfunandprofit.com/rop/</guid>
<description>&lt;p&gt;This page contains links to the slides and code from my talk “Railway Oriented Programming”.&lt;/p&gt;
&lt;p&gt;Here’s the blurb for the talk:&lt;/p&gt;
&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;Many examples in functional programming assume that you are always on the “happy path”. But to create a robust real world application you must deal with validation, logging, network and service errors, and other annoyances.&lt;/p&gt;&lt;p&gt;So, how do you handle all this in a clean functional way?&lt;/p&gt;&lt;p&gt;This talk will provide a brief introduction to this topic, using a fun and easy-to-understand railway analogy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am also planning to upload some posts on these topics soon. Meanwhile, please see the &lt;a href=&quot;https://fsharpforfunandprofit.com/series/a-recipe-for-a-functional-app.html&quot;&gt;recipe for a functional app&lt;/a&gt; series, which covers similar ground.&lt;/p&gt;
&lt;p&gt;If you want to to see some real code, I have created &lt;a href=&quot;https://github.com/swlaschin/Railway-Oriented-Programming-Example&quot;&gt;this project on Github that compares normal C# with F# using the ROP approach&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;videos&quot;&gt;Videos&lt;/h2&gt;
&lt;p&gt;I presented on this topic at NDC London 2014 (click image to view video)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://goo.gl/Lv5ZAo&quot;&gt;&lt;img src=&quot;https://fsharpforfunandprofit.com/rop/rop427.jpg&quot; alt=&quot;Video from NDC London 2014&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other videos of this talk are available are from &lt;a href=&quot;http://vimeo.com/97344498&quot;&gt;NDC Oslo 2014&lt;/a&gt; and &lt;a href=&quot;https://skillsmatter.com/skillscasts/4964-railway-oriented-programming&quot;&gt;Functional Programming eXchange, 2014&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;slides&quot;&gt;Slides&lt;/h2&gt;
&lt;p&gt;Slides from Functional Programming eXchange, March 14, 2014&lt;/p&gt;


&lt;p&gt;The powerpoint slides are also available from &lt;a href=&quot;https://github.com/swlaschin/RailwayOrientedProgramming&quot;&gt;Github&lt;/a&gt;. Feel free to borrow from them!&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;If you like my way of explaining things with pictures, take a look at &lt;a href=&quot;https://fsharpforfunandprofit.com/books&quot;&gt;my &quot;Domain Modeling Made Functional&quot; book!&lt;/a&gt; It's a friendly introduction to Domain Driven Design, modeling with types, and functional programming.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id=&quot;relationship-to-the-either-monad-and-kleisli-composition&quot;&gt;Relationship to the Either monad and Kleisli composition&lt;/h2&gt;
&lt;p&gt;Any Haskellers reading this will immediately recognize this approach as the &lt;a href=&quot;http://book.realworldhaskell.org/read/error-handling.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Either&lt;/code&gt; type&lt;/a&gt;, specialized to use a list of a custom error type for the Left case. In Haskell, something like: &lt;code class=&quot;highlighter-rouge&quot;&gt;type TwoTrack a b = Either [a] (b,[a])&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I’m certainly not trying to claim that I invented this approach at all (although I do lay claim to the silly analogy). So why did I not use the standard Haskell terminology?&lt;/p&gt;
&lt;p&gt;First, &lt;strong&gt;this post is not trying to be a monad tutorial&lt;/strong&gt;, but is instead focused on solving the specific problem of error handling.&lt;/p&gt;
&lt;p&gt;Most people coming to F# are not familiar with monads. I’d rather present an approach that is visual, non-intimidating, and generally more intuitive for many people.&lt;/p&gt;
&lt;p&gt;I am strong believer in a &lt;a href=&quot;https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/&quot;&gt;“begin with the concrete, and move to the abstract”&lt;/a&gt; pedagogical approach. In my experience, once you are familiar with this particular approach, the higher level abstractions are easier to grasp later.&lt;/p&gt;
&lt;p&gt;Second, I would be incorrect to claim that my two-track type with bind is a monad anyway – a monad is more complicated than that, and I just didn’t want to get into the monad laws here.&lt;/p&gt;
&lt;p&gt;Third, and most importantly, &lt;code class=&quot;highlighter-rouge&quot;&gt;Either&lt;/code&gt; is too general a concept. &lt;strong&gt;I wanted to present a recipe, not a tool&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example, if I want a recipe for making a loaf of bread, saying “just use flour and an oven” is not very helpful.&lt;/p&gt;
&lt;p&gt;And so, in the same way, if I want a recipe for handling errors, saying “just use Either with bind” is not very helpful.&lt;/p&gt;
&lt;p&gt;So, in this approach, I’m presenting a whole series of techniques:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using a list of custom error types on both the left and right sides of Either (rather than, say, &lt;code class=&quot;highlighter-rouge&quot;&gt;Either String a&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;“bind” (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;=&lt;/code&gt;) for integrating monadic functions into the pipeline.&lt;/li&gt;
&lt;li&gt;Kleisli composition (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&amp;gt;&lt;/code&gt;) for composing monadic functions.&lt;/li&gt;
&lt;li&gt;“map” (&lt;code class=&quot;highlighter-rouge&quot;&gt;fmap&lt;/code&gt;) for integrating non-monadic functions into the pipeline.&lt;/li&gt;
&lt;li&gt;“tee” for integrating unit functions into the pipeline (because F# doesn’t use the IO monad).&lt;/li&gt;
&lt;li&gt;Mapping from exceptions to error cases.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt; for combining monadic functions in parallel (e.g. for validation).&lt;/li&gt;
&lt;li&gt;The benefits of custom error types for domain driven design.&lt;/li&gt;
&lt;li&gt;And obvious extensions for logging, domain events, compensating transactions, and more.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I hope you can see that this is a more comprehensive approach than “just use the Either monad”!&lt;/p&gt;
&lt;p&gt;My goal here is to provide a template that is versatile enough to be used in almost all situations, yet constrained enough to enforce a consistent style. That is, there is basically only one way to write the code. This is extremely helpful to anyone who has to maintain the code later, as they can immediately understand how it is put together.&lt;/p&gt;
&lt;p&gt;I’m not saying that this is the &lt;em&gt;only&lt;/em&gt; way to do it. But I think this approach is a good start.&lt;/p&gt;
&lt;p&gt;As an aside, even in the Haskell community &lt;a href=&quot;http://www.randomhacks.net/2007/03/10/haskell-8-ways-to-report-errors/&quot;&gt;there is no consistent approach to error handling&lt;/a&gt;, which can make things &lt;a href=&quot;http://programmers.stackexchange.com/questions/252977/cleanest-way-to-report-errors-in-haskell&quot;&gt;confusing for beginners&lt;/a&gt;. I know that there is a &lt;a href=&quot;http://www.fpcomplete.com/school/starting-with-haskell/basics-of-haskell/10_Error_Handling&quot;&gt;lot of content&lt;/a&gt; about the individual &lt;a href=&quot;http://hackage.haskell.org/package/errors&quot;&gt;error handling techniques&lt;/a&gt;, but I’m not aware of a document that brings all these tools together in a comprehensive way.&lt;/p&gt;
&lt;h2 id=&quot;how-can-i-use-this-in-my-own-code&quot;&gt;How can I use this in my own code?&lt;/h2&gt;
&lt;p&gt;F# does not have type classes, and so you don’t really have a reusable way to do monads (although the &lt;a href=&quot;https://github.com/fsprojects/fsharpx/blob/master/src/FSharpx.Core/ComputationExpressions/Monad.fs&quot;&gt;FSharpX library&lt;/a&gt; has a useful approach). This means the &lt;code class=&quot;highlighter-rouge&quot;&gt;Rop.fs&lt;/code&gt; library defines all its functions from scratch. (In some ways though, this isolation can be helpful because there are no external dependencies at all.)&lt;/p&gt;
&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em&gt;“One bind does not a monad make” – Aristotle&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As I mentioned above, one reason why I stayed away from monads is that defining a monad correctly is &lt;em&gt;not&lt;/em&gt; just a matter of implementing “bind” and “return”. It is an algebraic structure that needs to obey the monad laws (which in turn are just the &lt;a href=&quot;https://fsharpforfunandprofit.com/posts/monoids-without-tears/&quot;&gt;monoid laws&lt;/a&gt; in a specific situation) and that was a path I did not want to head down in this particular talk.&lt;/p&gt;
&lt;p&gt;However if you are interested in more detail on &lt;code class=&quot;highlighter-rouge&quot;&gt;Either&lt;/code&gt; and Kleisi composition, here are some links that might be useful:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Monads in general&lt;/strong&gt;.
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Either&lt;/code&gt; monad&lt;/strong&gt;.
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kleisli categories and composition&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comprehensive error handling approaches&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.randomhacks.net/2007/03/10/haskell-8-ways-to-report-errors/&quot;&gt;Item 5 in this post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I’m not aware of other approaches that cover all the techniques discussed in this talk. If you do know of any, ping me in the comments and I’ll update this page.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Comments&lt;/h4&gt;

&lt;noscript readability=&quot;1.15625&quot;&gt;
&lt;p&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;a href=&quot;https://disqus.com/&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;/a&gt;</description>
<pubDate>Mon, 18 Jun 2018 10:45:56 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://fsharpforfunandprofit.com/rop/</dc:identifier>
</item>
<item>
<title>Ask HN: Solo app devs, how do you do user testing?</title>
<link>https://news.ycombinator.com/item?id=17336984</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=17336984</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;17337834&quot; readability=&quot;7.7424892703863&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8712446351931&quot;&gt;&lt;tr readability=&quot;7.7424892703863&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.12982832618&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;21.878453038674&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Solo dev for an app with hundreds of thousands of users. These are the things I do that ensure smooth releases:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;• run a beta test group. These users consist mostly of users that have emailed in with feature suggestions or bugs. I ask them if they’d like to join the beta (e.g. they can check their bug is fixed). I frequently get great feedback from a few of these users.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;• fiverr.com. Shell out $100 spread across a range of testers, and give them all slightly different briefings. Some feedback is terrible but there’s some gold there that’s really worth far more than $100.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;• learn how to test your own product. It’s hard to do well, but you can learn. It’s a valuable skill that can really set you apart in a regular engineering job too.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;• used phased releases. Pause the release at 1%, give it a few days for any minor issues to roll in and fix these before releasing to 100%. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338618&quot; readability=&quot;11.704035874439&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8520179372197&quot;&gt;&lt;tr readability=&quot;11.704035874439&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.679372197309&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;24.856815578465&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Also a &quot;Solo dev for an app with hundreds of thousands of users&quot;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I just test everything myself. On one OS (Mac). The worst part is having to run VMWare with older OS versions sometimes, but not usually.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I find that bugs are almost never OS specific, and are rather just logic errors.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I find that having other people test my code adds little value, as I can literally just test it myself in the OS that I write it in most the time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I know that this goes against all advice that you read, and all the &quot;common knowledge&quot; that is out there... but I've been doing this for 15 years and have got over 1 million users in total probably, and I almost never get support emails regarding bug reports. So, in my experience, I really find that everything I have heard is wrong. I realize that other people may have other experiences but found this point of reference interesting. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339049&quot; readability=&quot;6.6253521126761&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.312676056338&quot;&gt;&lt;tr readability=&quot;6.6253521126761&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.1521126760563&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.823008849558&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Experience building software can lower the testing requirements.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I find the degree of testing needed can be relative to the difficulty of the problem, the unnecessary complexity of the solution, and the average skill of the developers working on all 3.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Clever (simple) architecture will often beat clever programming in the long run. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339117&quot; readability=&quot;5.295652173913&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6478260869565&quot;&gt;&lt;tr readability=&quot;5.295652173913&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.854347826087&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.7572815533981&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Experience building software can lower the testing requirements.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This is a good point. The longer I've been at this, the less often, &quot;this is likely to work&quot; is a thought that I let go unchallenged. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339257&quot; readability=&quot;3.5740740740741&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.787037037037&quot;&gt;&lt;tr readability=&quot;3.5740740740741&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&quot;This is totally going to work&quot; is only said when I am completely sure that it is going to fail catastrophically. If anything works I feel mild distrust with my code from that point forward.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340005&quot; readability=&quot;4.1056910569106&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.0528455284553&quot;&gt;&lt;tr readability=&quot;4.1056910569106&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I think it's only fair, as a developer, to live in a state of constant fear and paranoia.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;(joking) &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339365&quot; readability=&quot;5.800350262697&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.9001751313485&quot;&gt;&lt;tr readability=&quot;5.800350262697&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.7670753064799&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.882882882883&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Knowing the difference between thinking less about yourself vs less of yourself is important when taking your work seriously but not taking yourself too seriously.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I have a healthy doubt of my own work that seems to end up making it work well first by keeping it as simple as possible.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Keeping the mindset of an innocent beginner is critical as a developer with experience. Everything is easy in the beginning, not the long term - I like to see what code bases people have worked on for many years instead of being able to neatly start from scratch. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339361&quot; readability=&quot;7.6793248945148&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8396624472574&quot;&gt;&lt;tr readability=&quot;7.6793248945148&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.7594936708861&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.879912663755&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Absolutely. It doesn't mean testing isn't required - it's absolutely the case when something is business critical, or average / inexperienced devs are painting unicorns and rainbows everywhere.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I have a healthy skepticism of my own work, it keeps hubris in check. This combined with a preference to keep things simple (to come back to later and to let others join easily), I find encourages everyone to build a code base they want to work on long term. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338236&quot; readability=&quot;2.5573770491803&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2786885245902&quot;&gt;&lt;tr readability=&quot;2.5573770491803&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.8360655737705&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.748427672956&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; used phased releases. Pause the release at 1%&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Could you expound on this? How do you do that? (Related: How are you distributing? Through an app store?) &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338308&quot; readability=&quot;2.5636942675159&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339554&quot; readability=&quot;5.3533834586466&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6766917293233&quot;&gt;&lt;tr readability=&quot;5.3533834586466&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.015037593985&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.4722955145119&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; fiverr.com. Shell out $100 spread across a range of testers, and give them all slightly different briefings. Some feedback is terrible but there’s some gold there that’s really worth far more than $100.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Also check out Cent (&lt;a href=&quot;https://beta.cent.co&quot; rel=&quot;nofollow&quot;&gt;https://beta.cent.co&lt;/a&gt;) - $20 in Ether can get you a pretty good set of responses. I am a cofounder - feel free to ama here or at cameron@cent.co &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17341073&quot; readability=&quot;2.5033112582781&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2516556291391&quot;&gt;&lt;tr readability=&quot;2.5033112582781&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;So you want most of the work to happen for free? I really hope your product fails. This is even worse than mechanical turk.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338508&quot; readability=&quot;2.28&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338608&quot; readability=&quot;5.3670886075949&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6835443037975&quot;&gt;&lt;tr readability=&quot;5.3670886075949&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Probably a mobile app, and probably deployed via the platform tools. They have options for beta releases which users can opt-in themselves, and also phased releases are supported out of the box. Just my guess.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340299&quot; readability=&quot;1.32&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338435&quot; readability=&quot;3.1929824561404&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338735&quot; readability=&quot;12.831077422848&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.4155387114239&quot;&gt;&lt;tr readability=&quot;12.831077422848&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;15.792095289659&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;30.915115005476&quot;&gt;&lt;span class=&quot;c00&quot;&gt;It doesn't matter how big you are, the same cheep method works for informal but fairly accurate quick and dirty testing.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Beer.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;You think I'm kidding but if you go to a bar, there are lots of people who will test whatever you put in front of them for a free drink. If you want to keep your costs down even further then go during happy hour.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Is that &quot;user testing&quot; no... not in the sense we think of it today. Is it testing of the usability of your product: yes it is. Im guessing that most apps issues that are more likely the latter and not the former. Basic things that you think are clear that really aren't (your too close to the problem and the solution). If you explain, point and guide through the same aspect of your feature 10 times in 10 tests people might not get it! These are the problems you might want to solve, dumb it down, change it up, make it better.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Does this work? Yes, as long as you can moderate. If you can you be neutral and friendly and avoid &quot;traps&quot; that will alter your results. Saying things like &quot;MY app&quot; or reacting personally will alter your results, and learning when to &quot;guide them&quot; through a frustrating point and when to let them puzzle through it is a bit of an art (this too offers clues if your guiding people at the same place). For me personally a drink or two helps ME in the process...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I have also discovered that this process works very well with pairs of people. Two friends already have a rapport and will happily talk to each other to try to get through something problematic. One can encourage or discourage the other and their dialog can be enlightening. Letting them play together with your app and drink free drinks can give you a LOT more insight than the next three individuals testing. Anything more than two people becomes problematic so look to avoid large groups. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340800&quot; readability=&quot;1.875&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340106&quot; readability=&quot;3.4764397905759&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.738219895288&quot;&gt;&lt;tr readability=&quot;3.4764397905759&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;This is a great idea to gather problems/questions. There's no substitute for scaled A/B testing, and finding worthwhile things for testing can be the hardest part.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340968&quot; readability=&quot;4.52&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.26&quot;&gt;&lt;tr readability=&quot;4.52&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.616&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8471615720524&quot;&gt;&lt;span class=&quot;c00&quot;&gt;There are lots of risks in A/B testing. Is B a complete failure for some basic UI issue, and you just lost real customers or harmed a relationship?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Doing this step first is a good way to avoid some of the worst case issues. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338897&quot; readability=&quot;5.5755627009646&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7877813504823&quot;&gt;&lt;tr readability=&quot;5.5755627009646&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Guerilla testing is a great starting point. Do you usualy give one or multiple scenarios to complete? Be aware that you are not controlling the environment and the users may be distracted by outside factors. Which may affect some of your metrics (time to perform tasks, success rate...)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340944&quot; readability=&quot;14.73293768546&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.36646884273&quot;&gt;&lt;tr readability=&quot;14.73293768546&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;17.679525222552&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;34.868123587038&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Do you usualy give one or multiple scenarios to complete?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I am OP, and it depends.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Im old enough that I have done this with paper prototypes, and it is shockingly effective.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Now most of the code I write is compartmentalized enough that with a bit of effort I can come up with a one off digital artifact. Just rip out the chunk of your app that you want to test and present ONLY that. Spend a day building ugly shims early enough in the process and you might make some dramatic changes!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; Be aware that you are not controlling the environment and the users may be distracted by outside factors. Which may affect some of your metrics (time to perform tasks, success rate...)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Even with those things going on your going to be shocked at not only what issues come up but how frequently. That thing you did that you thought was simple and sane, no one gets it. Do more than half of your test subjects comment on the same thing (good, bad, both) then you have a problem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The key isn't controlling the key is listening...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I also want to state that a slighty drunk, distracted bar patron, getting through your process without quitting, telling you your product is shit, or giving up is a positive sign that in the real world people who are more motivated than &quot;beer&quot; are going to have a fairly positive and expedient experience. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339903&quot; readability=&quot;13.559370529328&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.7796852646638&quot;&gt;&lt;tr readability=&quot;13.559370529328&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.2639484978541&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.897058823529&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I'm not OP, but I've used similar styles of pub/coffee shop testing. When I do it, I don't give scenarios or bother measuring things like success rate. It's very freeform, unscripted and raw. It's kind of like hallway testing for people who work alone. And, instead of coworkers, you're working with complete strangers who might not have any idea what's happening.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;If I had to pick one thing to measure, I'd be more inclined to measure positive versus negative fucks (I'm not joking), but honestly, it's more about the experience and the totally raw, sometimes terrifyingly honest feedback I hear. Numbers aren't useful because the most useful sessions go way off the rails. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339314&quot; readability=&quot;3.6425531914894&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8212765957447&quot;&gt;&lt;tr readability=&quot;3.6425531914894&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.0978723404255&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.815668202765&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; not controlling the environment and the users may be distracted by outside factors&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;So probably how they will be when actually using your app? I do agree though in a reproduce-ability/data-integrity standpoint. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339072&quot; readability=&quot;1.3636363636364&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338816&quot; readability=&quot;1.8&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337655&quot; readability=&quot;16.692307692308&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.3461538461538&quot;&gt;&lt;tr readability=&quot;16.692307692308&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.237556561086&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;27.871323529412&quot;&gt;&lt;span class=&quot;c00&quot;&gt;1. Stick the mailing list sign-up form on a landing page and do a bit of promoting in relevant places. Specifically say it's for beta announcements, preview release testing and picking everyone's brain. This should net you some users to bootstrap the process with, and they &lt;em&gt;will&lt;/em&gt; be responsive.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;2. Release the beta, mark it as such and ask people for feedback after they used the product for a bit. Listen to the feedback, act on what's relevant, keep improving the beta. Give kudos where they are due.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Have public forum, actively participate in all threads. Many people look at how active the support forum is before trying the goods or leaving any feedback. So the more active it is, the better. Also, moderate it aggressively to trim junk and trivialities.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;3. Once out of the beta, don't forget to &lt;em&gt;genereously&lt;/em&gt; reward everyone who chipped in. Ideally with a special gift, like a specially tagged lifetime premium account, a handful of most expensive licenses, etc. The worst thing to do is to offer a discount on a production version - this comes across as a cheap and greedy move. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340768&quot; readability=&quot;14.702290076336&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.3511450381679&quot;&gt;&lt;tr readability=&quot;14.702290076336&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;12.251908396947&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;23.90675990676&quot;&gt;&lt;span class=&quot;c00&quot;&gt;If I need to get feedback on a feature, I build a prototype, and then show it to one or two people (friends, family, customers that sent feature requests). I tell them roughly what they should do, and watch if they can figure it out. Then I change things as necessary, and show it to the next person. Usually a handful of people are enough to find the the major issues.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- don't &quot;burn&quot; beta testers. show a prototype to one or two people, and don't show it to more people before you fixed the issues that have come up. otherwise you just get duplicate feedback&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- ask people personally. Emails to a group of people are ignored by 99% of recipients&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- feel free to ignore advise from testers. everyone always wants to give advise, but that is irrelevant. the important part is: did the tester manage to complete the task?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- do not ignore people struggling with your app. the natural reaction to people failing to use your app is to think they are stupid. they aren't. most of the time your ui is stupid and you need to fix it. it doesn't matter how brilliant you think the ui is, if testers can't use it, change it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- sometimes the answer is that what you built doesn't work and you just wasted a lot of time and you need to throw it away and start over. do not ignore this possibility &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337315&quot; readability=&quot;9.6606060606061&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.830303030303&quot;&gt;&lt;tr readability=&quot;9.6606060606061&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.6945454545455&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.89375&quot;&gt;&lt;span class=&quot;c00&quot;&gt;In the past (when I was still a solo developer), after being 90% confident the code won't completely break the environment or do something screwy with user data, sticking the code in production and funneling 50% of the requests to it while watching NewRelic.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;There are no better user testers than your users, and the risk is only moderate. I could always pull the server down and restore the previous version while trying to fix whatever I broke in the deployment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;But if you aren't doing SaaS, user testing as a solo developer is not really feasible. The best user testing I can think of that doesn't &quot;cost&quot; is a Beta/RC Program for your users to volunteer to get potentially broke software for a discount or just early feature releases. For this to work though, you have to have enough users. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337477&quot; readability=&quot;9.5959595959596&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.7979797979798&quot;&gt;&lt;tr readability=&quot;9.5959595959596&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I agree, it's easier to do for web apps since you don't have to contend with &quot;app store reviews&quot;, that can potentially leave a lasting blemish on your product. So far I've done it as you describe as well and it's the &quot;getting enough users&quot; part that's a pickle. If you get X users on to sign up for a beta, only a fraction of those will actually ever install the app and give it a spin and again, only a fraction of those will give you any real feedback to work from. Finding real testers without breaking the budget, of your (maybe zero-profit) app is the challenge.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337934&quot; readability=&quot;4.4890510948905&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2445255474453&quot;&gt;&lt;tr readability=&quot;4.4890510948905&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.0401459854015&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8393574297189&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I've never trusted a user to provide feedback. They will complain if something if it's terribly broken, but not if it's still usable.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;That's why I have always used a 3rd party system to collect actual usage analytics combined with server logs. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337436&quot; readability=&quot;8.5233050847458&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2616525423729&quot;&gt;&lt;tr readability=&quot;8.5233050847458&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.2616525423729&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.9111111111111&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I have an app in the windows store with a few thousand users. When anyone emails me with feedback or an issue, I usually ask if they want to try the beta version (after I've resolved their issue of course). I've gotten about 15-20 part time testers this way, they've been a mixed bag. Some provide pages if detailed feedback, some barely anything.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;When I have a decent, bug free mvp of the next version I'm going to fork out for usertesting.com &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337615&quot; readability=&quot;3.5967741935484&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7983870967742&quot;&gt;&lt;tr readability=&quot;3.5967741935484&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Forget usertesting.com use Mechanical Turk(get testers to download screen record plug in for chrome to record/send you their tests..charge $10 or less a test). Way cheaper and you get more screen recorded tests for less.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337555&quot; readability=&quot;8.4881516587678&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2440758293839&quot;&gt;&lt;tr readability=&quot;8.4881516587678&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;That actually sounds like a great approach! I can imagine you've triggered a sense of involvement or idea ownership in the most active ones. From my own experience, as a user, reporting a bug er suggesting a feature in a product, only to see it fixed or added, has a tremendous effect in loyalty and even promotion of said product. I think I'll definitely adopt this idea once properly released.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337643&quot; readability=&quot;5.7653631284916&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8826815642458&quot;&gt;&lt;tr readability=&quot;5.7653631284916&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.3240223463687&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.9229287090559&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I do something similar. I have a Android app that I sell outside of the app store. I did build some licensing and support infrastructure to allow for automatic notification of updates. There is also a Beta release channel. Therefore, I use the support conversation in order to see if they want to be flipped to that channel.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I also use ACRA and Tracepot to capture crashes and anomalous events. Users can also email me a debug log along with their current app settings. This has evolved over a 5 or 6 year period. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337274&quot; readability=&quot;17.691614066727&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8458070333634&quot;&gt;&lt;tr readability=&quot;17.691614066727&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;19.165915238954&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;37.826166514181&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Post-launch:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;What's your goal? Do you want to test whether your update works correctly on many devices? Do you want to get ideas for new features? How many users do you have?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I have about 10,000 active users. I don't do much testing. I test myself on an Android device and an iPhone. Since my app is built with Ionic and based on Cordova, it works anyways and real crashes are not to expected.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Feedback is easy: I just wait until people write me an email. It's funny: Sometimes, you don't hear about a feature request or some issue for months. Then 2-3 people write you within a day. Then nothing again.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Back when I started, I implemented a lot of features. Now I basically reject almost every feature request, unless it comes up extremely often in emails. I sometimes take notes, but most of the time, I type a quick reply, thanking for the suggestion, archive the email and only try to get a feeling for what people want.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Obviously, this has its limits, but since I know my core users and what they want, it works for me.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;If there's a serious bug, people will let you know soon enough. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337401&quot; readability=&quot;14.472913616398&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.2364568081991&quot;&gt;&lt;tr readability=&quot;14.472913616398&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.6837481698389&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.871601208459&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Post-launch is mainly vetting that new features makes sense to users and catching UX faux pas, instability or even crashes, etc. before opening up to a wider audience, and possibly scores of bad reviews.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I was thinking about just opening up on the app store as well, and just sit back and wait for reviews or emails, but that seems risky, since potentially bad reviews are forever. For a paid app at least, that can have a pretty serious impact on possible uptake. Having at least some level on confidence, that the app is usable and stable before general availability, is the safe play I think. To that affect, closed testing seems the only viable option. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337284&quot; readability=&quot;17.698647778493&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.8493238892466&quot;&gt;&lt;tr readability=&quot;17.698647778493&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.307469414037&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;21.928104575163&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I've used UserTesting.com for previous tests. If your product affects a lowest-common-denominator user or you are testing mainly UX/interaction, I'd recommend it. At that time I paid around $20 per usability test (I bought a packet of multiple sessions). Testers recorded using my product for 5 to 10 minutes and it was great watching them stumble over what I had designed. They were also trained to be over-communicative and think aloud, which really helped. In total I did four or five of them before I had my first release (since it was still somewhat expensive, I tried to ration my tests by fixing all previous UX bugs before issuing another one). It's been a long time, but if I recall correctly, a few times the testers weren't tech-competent enough to actually do the test, but when I asked UserTesting for a credit or refund to re-do the test because the tester was &quot;bad&quot;, they provided one without hassle.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;You need to be make it as easy as possible to run your user test, because a tester will give up on roadblocks that take more than 60 seconds to solve.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I was developing a language learning product, and so needed testers who were interested in language X. In the end, the people I found using the filter [Interested in X language, native English] weren't actually interested in language X. Rather, they came across as people who had accepted the filter to make an extra buck.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;However, it was good enough for a random internet trial. If I wanted better results I had to do it in person (which I also recommend). &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337546&quot; readability=&quot;8.7402760351317&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.3701380175659&quot;&gt;&lt;tr readability=&quot;8.7402760351317&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.682559598494&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;20.864864864865&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I wouldn't ever pay for an agency to do user testing, and it has nothing to do with money.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Your ideal tester is someone who cares enough about your product to use it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I also wouldn't even start developing the product unless I had a decent sized list of people who really want it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;In which case, testing it is easy. Just ask those people to test drive your app during development. If your app solves a real problem they will happily do it for free since it solves their problem, but you could also give them perks like giving them 2 months of your service for free when it launches.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Your users will naturally give you feedback if things are broken, so that handles post-launch real world testing. Of course you'll want to supplement that with heaps of automated tests too. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338859&quot; readability=&quot;6.5457227138643&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2728613569322&quot;&gt;&lt;tr readability=&quot;6.5457227138643&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;An agency or proper usability testing should provide you insights and ways to correct the usability issues based on the results. What you describe may work to get feedbacks and new feature requests. But you won't know why a user is not using a feature, where they are struggling, what they don't understand or see.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339360&quot; readability=&quot;8.7448453608247&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.3724226804124&quot;&gt;&lt;tr readability=&quot;8.7448453608247&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.7448453608247&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.887714663144&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&amp;gt; An agency or proper usability testing should provide you insights and ways to correct the usability issues based on the results. What you describe may work to get feedbacks and new feature requests. But you won't know why a user is not using a feature, where they are struggling, what they don't understand or see.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;If you use heatmaps and other analytical tracking tools you can see how users interact with your app.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;That's all you really need to see why a user isn't using a feature, struggling with the UI or happen to not see something.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;An agency would just have X number of paid employees systematically going through your UI and giving you their opinions on what they think is best, but that might not align with what your real users are doing. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338276&quot; readability=&quot;15.328050713154&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.6640253565769&quot;&gt;&lt;tr readability=&quot;15.328050713154&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;16.765055467512&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;33.229149797571&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The most important way to do this is to actually be a user of your product, e.g. &quot;Eating your own dog food&quot;.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This doesn't mean logging in, trying all the features and playing with it for an hour - you have to &lt;em&gt;really&lt;/em&gt; use it with your data on a daily basis over a long period of time. You'll come across a lot of bugs and start logging feature requests yourself.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Once &lt;em&gt;you&lt;/em&gt; can use it without issues [and you'll need to be careful to split the wishlist features you come up with, against the actual bugs which need to be fixed], then you can get others to try it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Best way to get user testing from others?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- email your users and ask them if they have had any issues, or want any new features.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- ask people to give your product a quick test - for example, &lt;a href=&quot;https://www.lifepim.com&quot; rel=&quot;nofollow&quot;&gt;https://www.lifepim.com&lt;/a&gt; is my new webapp to easily manage your personal information [shamless plug/warning - notes and tasks work well, contacts needs work, and calendar is not pretty]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;- pay particular attention to requests from users who pay for your product. Everyone wants software to work in a certain way, but when someone &lt;em&gt;pays&lt;/em&gt;, it can be a good indicator to listen to what they want. If they say something isn't working, make it a priority to investigate and address this. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338861&quot; readability=&quot;5.6272189349112&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8136094674556&quot;&gt;&lt;tr readability=&quot;5.6272189349112&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Just keep in mind with dogfooding that there is a difference between figuring out how things work and working efficiently/effectively once you have figured out how things work. Dogfooding is really only good for 'testing' the latter, because you already know how everything works better than any normal user would.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337340&quot; readability=&quot;5.738219895288&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.869109947644&quot;&gt;&lt;tr readability=&quot;5.738219895288&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.738219895288&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.900181488203&quot;&gt;&lt;span class=&quot;c00&quot;&gt;For web apps I’ve always used Mechanical Turk and paid each user $10 vs. just a dollar or less. I made each tester download a screen record plug in for chrome, hit record and then go through all the steps in the test. Once finished they emailed me the recording.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The above is what you get from usertesting.com and other sites but pay up the nose($50 a test) vs. $10 or less dollars per test.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;If it’s a downloadable app Just spin up a web UI/UX and have the turkers follow same steps but have them change the browser to say iPhone 6/7/8 view. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337657&quot; readability=&quot;4.5330739299611&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2665369649805&quot;&gt;&lt;tr readability=&quot;4.5330739299611&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I don't understand this, why would you want people to test something that's already predefined? You could automate that. You want real users that will use the app for real things. Blind testing from a list seems kind of pointless.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338804&quot; readability=&quot;7.5555555555556&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7777777777778&quot;&gt;&lt;tr readability=&quot;7.5555555555556&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The goal is to detect usability issues. Your features should have user stories associated to them, come up with few scenarios around these (e.g. book a flight, cancel your flight from the landing page...). Then test your scenarios with multiple users/personas. This will allow you to detect UX/usabilities issues, and prioritize update based on how critical the issue is.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340058&quot; readability=&quot;2.5&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.25&quot;&gt;&lt;tr readability=&quot;2.5&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Exactly and with multiple recordings of each user story you will be able to see if your design is idiot proof or not.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337764&quot; readability=&quot;2.2718446601942&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337295&quot; readability=&quot;4.4&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2&quot;&gt;&lt;tr readability=&quot;4.4&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I usually hang out in the kitchen at our shared office space and ask people. If that's not enough, then I'll start visiting friends' offices for team breakfast or post-work beers and do the same.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338419&quot; readability=&quot;6.625&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.3125&quot;&gt;&lt;tr readability=&quot;6.625&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.2589285714286&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.9063231850117&quot;&gt;&lt;span class=&quot;c00&quot;&gt;There are user-testing companies that does this for small fee:&lt;/span&gt;
&lt;pre&gt;
&lt;span class=&quot;c00&quot;&gt;&lt;code&gt;   * http://www.trymyui.com/
   * https://www.usertesting.com/
   * https://Whatusersdo.com/
   * https://Userlytics.com/
&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;span class=&quot;c00&quot;&gt;Disclaimer: I've also worked on couple of those companies as a tester when I needed money and I was out of job, but thankfully I'm currently back working as developer again. On some of them, the tester also needed to record themselves using webcam.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337372&quot; readability=&quot;17.759708737864&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;8.879854368932&quot;&gt;&lt;tr readability=&quot;17.759708737864&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.253033980583&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;35.889502762431&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I'd say it depends on the sort of application you're developing.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;In the next couple of weeks I'm due to release a boxing game (shameless plug: leatherthegame.com), and other than myself my only tester has been my cousin.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Having worked on the project for over 3 years I'm aware that there are areas where I &quot;can't see the wood for the trees&quot;, but I am confident in my own knowledge, and only wanted an external viewpoint to see how a noob would see things from afresh (both in terms of not having used the app before and also him being only a lite-casual boxing fan, so he wasn't up-to-speed with some terminology).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I know full well that once its released the proper boxing fans will get in touch, and I'll change things post-release from that feedback, so my strategy is very much a post-launch end user feedback one. In an ideal world I would have had more friends who could help me test it, but there's only so many opinions I can factor in pre-launch, and managing their experiences and feedback would have been a mini-project to manage purely by itself. When already time-constrained with launch schedules, app store listings and last minute bug hunts and device optimisation I couldn't spare the time to manage a phalanx of testers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;This has been a passion project/scratch-my-own-itch project, which is why I feel more secure not having many outside opinions. If you're building something more strategic, to fill a target niche in a specific market say, then my approach will DEFINITELY NOT WORK. In this case you'd be best off firing out a message on LinkedIn or something like that, asking for would-be best testers. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340623&quot; readability=&quot;8.7167512690355&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.3583756345178&quot;&gt;&lt;tr readability=&quot;8.7167512690355&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.169543147208&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;19.895506792059&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I used to be a solo dev working in a niche field where I made plug-ins for some creative apps. I found that one thing that really helped was being active in the forums where users were, and (if allowed by the forum) posting that you have a product and you'd like to get some people to test it. I'd then require them to fill out a simple form that gathered some information about how they work.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;The form served 2 purposes:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;1) It gave me the ability to balance different types of users. Hobbyists vs. professionals. People in this specialty vs. that specialty. etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;2) It weeded out people who just wanted something free and weren't interested in giving feedback. Seriously, a simple form requiring a name, an email, and the answer to 3-5 questions helped get rid of the freeloaders. But don't make it too onerous or you won't end up with any testers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I'd then usually give a free license for the released product to anyone who provided useful feedback. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338569&quot; readability=&quot;4.6817538896747&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3408769448373&quot;&gt;&lt;tr readability=&quot;4.6817538896747&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Using your product daily is essential not only to help steer the ship on what to build but also to cue you in on what's buggy / inefficient. I have the good fortune of having a live chat interface (product is: &lt;a href=&quot;https://www.jqbx.fm&quot; rel=&quot;nofollow&quot;&gt;https://www.jqbx.fm&lt;/a&gt;) so I get pretty quick feedback if something that's been pushed is causing anyone any issues. However to keep bugs to a minimum I keep most of the logic client side and have a dev environment that I can run on production- I usually test a version for a couple days (see: eat your own dogfood) before releasing anything. Also forcing yourself to review your own code is a good skill and has helped catch some issues right before pulling the trigger.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338670&quot; readability=&quot;5.6796714579055&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8398357289528&quot;&gt;&lt;tr readability=&quot;5.6796714579055&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6262833675565&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.859913793103&quot;&gt;&lt;span class=&quot;c00&quot;&gt;One thing I have found to be very useful is to ask my existing userbase of other projects if they want to test something new and give me feedback.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;In fact this worked so well that I am currently building a new project around this. A site that lets startups gather feedback from people who are interested in trying out new sites and giving feedback.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;It is currently in private beta with about 20 startups. If you want an invite, feel free to send me an email. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338408&quot; readability=&quot;4.6762589928058&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3381294964029&quot;&gt;&lt;tr readability=&quot;4.6762589928058&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Try to make a simple tutorial video of some sort. Even if it isn't useful in a practical sense it forces yourself (or someone else) to walk through the UI stating their intentions and trying to execute them. Some of the best feedback I've gotten was through watching videos like this for an application that I work on as you can see where the stumbling points are throughout the process.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337703&quot; readability=&quot;2.5989304812834&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2994652406417&quot;&gt;&lt;tr readability=&quot;2.5989304812834&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I generally find sellers on fiverr. They are willing to record screen and comment for about 30 mins for $5. Not a bad deal and mostly good insightful feedback.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340513&quot; readability=&quot;2.5471698113208&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2735849056604&quot;&gt;&lt;tr readability=&quot;2.5471698113208&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Integrated tests are key. Not a solo dev but my company won't give me any QA resources so the only way forward is integration tests.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17341099&quot; readability=&quot;6.6877323420074&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.3438661710037&quot;&gt;&lt;tr readability=&quot;6.6877323420074&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;On projects I do solo dev, I do integrated tests because after a while the project becomes big enough that trying to cover all paths takes too damn long. My current project got to be about 70% testing/30% code and I was miserable. I stopped all coding and moved to e2e tests and now I'm back to 95% coding / 5% coding and quite happy. Most companies surprisingly don't care about full integration tests, they talk about it but are quite happy to have fingers on the keyboard and mouse pecking and clicking away.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337406&quot; readability=&quot;2.5714285714286&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2857142857143&quot;&gt;&lt;tr readability=&quot;2.5714285714286&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I give it to my friends and ask them to do specific things. Most of the time they will point me to something i didn't know.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337520&quot; readability=&quot;4.4736842105263&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2368421052632&quot;&gt;&lt;tr readability=&quot;4.4736842105263&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;That's currently where I'm at myself. Do you feel that, that approach scales fine and you get a broad enough idea of where problems are for the general user and where you need to improve/change things?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337607&quot; readability=&quot;4.4890510948905&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2445255474453&quot;&gt;&lt;tr readability=&quot;4.4890510948905&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;It doesn't scale, in that you ideally want to test your app's UI/UX with first time users who haven't gotten used to your app's quirks yet. But it allows to catch a lot of stuff early on at the cost of buying them a coffee or a beer (if that).&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337742&quot; readability=&quot;8.9670014347202&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.4835007173601&quot;&gt;&lt;tr readability=&quot;8.9670014347202&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.6219512195122&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;14.811292719168&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I do a free beta, then various paid betas. The goal is also to find a price point. A user can either leave feedback in my betas and get that month free, or they can pay. The idea that all they have to do is give feedback for a free service usually works well...&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Eventually, when it's easier to pay, some users will start leaving money instead if feedback. At some point I'll raise prices a bit and stop the feedback for service system.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I've done this for:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;&lt;a href=&quot;https://projectpiglet.com/&quot; rel=&quot;nofollow&quot;&gt;https://projectpiglet.com/&lt;/a&gt; and &lt;a href=&quot;https://easy-a.net/&quot; rel=&quot;nofollow&quot;&gt;https://easy-a.net/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;And a few others, it's always fairly successful - &lt;em&gt;assuming you have a decent landing page&lt;/em&gt; and you can advertise the site in your target market for cheap / free. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338682&quot; readability=&quot;3.5555555555556&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7777777777778&quot;&gt;&lt;tr readability=&quot;3.5555555555556&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.741935483871&quot;&gt;&lt;span class=&quot;c00&quot;&gt;I push the code live and see what the numbers say.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I know this isn't the answer most people want to hear, but no one tells the truth like live users. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337407&quot; readability=&quot;3.537037037037&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7685185185185&quot;&gt;&lt;tr readability=&quot;3.537037037037&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.3055555555556&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.716494845361&quot;&gt;&lt;span class=&quot;c00&quot;&gt;Automated testing.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;I start out with manual tests.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;If I have a bug at any part of the code I add a unit test.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;When it gets too big and starts taking too long then I start writing e2e tests. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17337832&quot; readability=&quot;3.5799086757991&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7899543378995&quot;&gt;&lt;tr readability=&quot;3.5799086757991&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.027397260274&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.7989949748744&quot;&gt;&lt;span class=&quot;c00&quot;&gt;The menu system being &quot;unclear&quot; is not a bug you can find with automated tests.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;Its true that unit-tests ensure quality software. But this quality is a waste if real user's can't figure it out. &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338442&quot; readability=&quot;8.3628318584071&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.1814159292035&quot;&gt;&lt;tr readability=&quot;8.3628318584071&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;True, I'm not talking about UI/UX test, but tests that test that your application is &quot;correct&quot; and does the right thing. For such tests, you need to start out a beta or just wait for user feedback or also be great in product design and thinking like the average user. Adding help popups, and good documentations.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340451&quot; readability=&quot;3.52&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.76&quot;&gt;&lt;tr readability=&quot;3.52&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;c5a&quot;&gt;Probably it was already said, but quite crucial in the process would be proper analytics. To see where the user's flow is concentrated or stops at all.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17340026&quot; readability=&quot;1&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17338768&quot; readability=&quot;2.1976744186047&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339898&quot; readability=&quot;0.85714285714286&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;17339128&quot; readability=&quot;12.984894259819&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.4924471299094&quot;&gt;&lt;tr readability=&quot;12.984894259819&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.8111782477341&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;17.709677419355&quot;&gt;&lt;span class=&quot;c00&quot;&gt;external agency, 1-2 weekly tests, specially critical in the first stages of the product.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;good price, cheap compared to a dev’s salary, or compared to my time, paying less than $500 per month.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;c00&quot;&gt;do 5-second tests, usability, card sorting, path testing, all ux and ui testing for greater chance of success &lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Mon, 18 Jun 2018 10:06:15 +0000</pubDate>
<dc:creator>rhardih</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=17336984</dc:identifier>
</item>
<item>
<title>Why Skylake CPUs Are Sometimes 50% Slower</title>
<link>https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/</link>
<guid isPermaLink="true" >https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/</guid>
<description>&lt;p&gt;I got a call that on newer hardware some performance regression tests have become slower. Not a big deal. Usually it is a bad configuration somewhere in Windows or some BIOS settings were set to non optimal values. But this time we were not able to find a setting that did bring performance back to normal. Since the change was not small 9s vs 19s (blue is old hardware orange is new hardware) we needed to drill deeper:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb.png?w=274&amp;amp;h=442&quot; width=&quot;274&quot; height=&quot;442&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Same OS, Same Hardware, Different CPU – 2 Times Slower&lt;/h2&gt;
&lt;p&gt;A perf drop from 9,1s to 19,6s is definitely significant. We did more checks if the software version under test, Windows, BIOS settings were somehow different from the old baseline hardware. But nope everything was identical. The only difference was that the same tests were running on different CPUs. Below is a picture of the newest CPU&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image1.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb1.png?w=433&amp;amp;h=462&quot; width=&quot;433&quot; height=&quot;462&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is the one used for comparison&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image2.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb2.png?w=429&amp;amp;h=429&quot; width=&quot;429&quot; height=&quot;429&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Xeon Gold runs on a different CPU Architecture named Skylake which is common to all CPUs produced by Intel since mid 2017. If you are buying current hardware you will get a CPU with Skylake CPU architecture. These are nice machines but as the tests have shown newer and slower is not the right direction. If all else fails get a repro and use a real profiler ™ to drill deeper. When you record the same test on the old hardware and on the new hardware it should quickly lead to somewhere:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image3.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb3.png?w=1189&amp;amp;h=818&quot; width=&quot;1189&quot; height=&quot;818&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Remember the diff view in WPA shows in the table the delta of Trace 2 (11s) – Trace 1 (19s). Hence a negative delta in the table indicates a CPU consumption increase of the slower test. When we look at the biggest CPU consumer differences we find &lt;em&gt;AwareLock::Contention&lt;/em&gt;, &lt;em&gt;JIT_MonEnterWorker_InlineGetThread_GetThread_PatchLabel&lt;/em&gt; and &lt;em&gt;ThreadNative.SpinWait&lt;/em&gt;. Everything points towards CPU spinning when threads are competing for locks. But that is a false red herring because spinning is not the root cause of slower performance. Increased lock contention means that something in our software did become slower while holding a lock which as a consequence results in more CPU spinning. I was checking locking times and other key metrics, like disk and alike but I failed to find anything relevant which could explain the performance degradation. Although not logical I turned back to the increased CPU consumption in various methods.&lt;/p&gt;
&lt;p&gt;To find where exactly the CPU was stuck would be interesting. WPA has file and line columns but these work only with private symbols which we do not have because it is .NET Framework code. The next best thing is to get the address of the dll where the instruction is located which is called Image RVA. When I load the same dll into the debugger and then do&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;u xxx.dll+ImageRVA&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;then I should see the instruction which was burning most CPU cycles which was basically only one hot address.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image4.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb4.png?w=823&amp;amp;h=328&quot; width=&quot;823&quot; height=&quot;328&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lets examine the hot code locations of the different methods with Windbg:&lt;/p&gt;
&lt;pre class=&quot;csharpcode&quot;&gt;
0:000&amp;gt; u clr.dll+0x195&lt;span&gt;66B&lt;/span&gt;-10
clr!AwareLock::Contention+0x135:
00007ff8`0535565b f00f4cc6        &lt;span class=&quot;kwrd&quot;&gt;lock&lt;/span&gt; cmovl eax,esi
00007ff8`0535565f 2bf0            sub     esi,eax
00007ff8`05355661 eb01            jmp     clr!AwareLock::Contention+0x13f (00007ff8`05355664)
00007ff8`05355663 cc              &lt;span class=&quot;kwrd&quot;&gt;int&lt;/span&gt;     3
00007ff8`05355664 83e801          sub     eax,1
00007ff8`05355667 7405            je      clr!AwareLock::Contention+0x144 (00007ff8`0535566e)
00007ff8`05355669 f390            &lt;span&gt;pause&lt;/span&gt;
00007ff8`05355&lt;span&gt;66b&lt;/span&gt; ebf7            jmp     clr!AwareLock::Contention+0x13f (00007ff8`05355664)
&lt;/pre&gt;
&lt;p&gt;We do this for the JIT method as well&lt;/p&gt;
&lt;pre class=&quot;csharpcode&quot;&gt;
0:000&amp;gt; u clr.dll+0x&lt;span&gt;2801&lt;/span&gt;-10
clr!JIT_MonEnterWorker_InlineGetThread_GetThread_PatchLabel+0x124:
00007ff8`051c27f1 5e              pop     rsi
00007ff8`051c27f2 c3              ret
00007ff8`051c27f3 833d0679930001  cmp     dword ptr [clr!g_SystemInfo+0x20 (00007ff8`05afa100)],1
00007ff8`051c27fa 7e1b            jle     clr!JIT_MonEnterWorker_InlineGetThread_GetThread_PatchLabel+0x14a (00007ff8`051c2817)
00007ff8`051c27fc 418bc2          mov     eax,r10d
00007ff8`051c27ff f390            &lt;span&gt;pause&lt;/span&gt;
00007ff8`051c&lt;span&gt;2801&lt;/span&gt; 83e801          sub     eax,1
00007ff8`051c2804 75f9            jne     clr!JIT_MonEnterWorker_InlineGetThread_GetThread_PatchLabel+0x132 (00007ff8`051c27ff)
&lt;/pre&gt;
&lt;p&gt;Now we have a pattern. One time the hot location is a jump instruction and the other time it is a subtraction. But both hot instructions are preceded by the same common instruction named pause. Different methods execute the same CPU instruction which is for some reason very time consuming. Lets measure the duration of the pause instruction to see if we are on the right track.&lt;/p&gt;
&lt;h2&gt;If You Document A Problem It It Becomes A Feature&lt;/h2&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;400&quot; border=&quot;1&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;224&quot;&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;176&quot;&gt;&lt;strong&gt;Pause Duration In ns&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;224&quot;&gt;Xeon E5 1620v3 3.5GHz&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;176&quot;&gt;4&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;224&quot;&gt;Xeon(R) Gold 6126 CPU @ 2.60GHz&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;176&quot;&gt;43&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Pause on the new Skylake CPUs is an order of magnitude slower. Sure things can get faster and sometimes a bit slower. But over 10 times slower? That sounds more like a bug. A little internet search about the pause instruction leads to the Intel manuals where the Skylake Microarchitecture and the pause instruction are explicitly mentioned:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf&quot;&gt;https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image5.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb5.png?w=732&amp;amp;h=769&quot; width=&quot;732&quot; height=&quot;769&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No this is not a bug, it is a documented feature. There exists even a web page which contains the timings of pretty much all CPU instructions&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.agner.org/optimize/instruction_tables.pdf&quot;&gt;http://www.agner.org/optimize/instruction_tables.pdf&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sandy Bridge     11&lt;/li&gt;
&lt;li&gt;Ivy Bridege         10&lt;/li&gt;
&lt;li&gt;Haswell                9&lt;/li&gt;
&lt;li&gt;Broadwell            9&lt;/li&gt;
&lt;li&gt;SkylakeX             141&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The numbers are CPU cycles. To calculate the actual time you need to divide the cycle counts by the CPU frequency (usually GHz) to get the time in ns.&lt;/p&gt;
&lt;p&gt;That means when I execute heavily multithreaded applications on .NET on latest hardware things can become much slower. Someone else has this noticed already in August 2017 and has written an issue for it:  &lt;a href=&quot;https://github.com/dotnet/coreclr/issues/13388&quot;&gt;https://github.com/dotnet/coreclr/issues/13388&lt;/a&gt;. The issue has been fixed with .NET Core 2.1 and .NET Framework 4.8 Preview contains also the fixes for it.&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/build-3621/dotnet-build-3621-changes.md#clr&quot; href=&quot;https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/build-3621/dotnet-build-3621-changes.md#clr&quot;&gt;https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/build-3621/dotnet-build-3621-changes.md#clr&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Improved spin-waits in several synchronization primitives to perform better on Intel Skylake and more recent microarchitectures. [495945, mscorlib.dll, Bug]&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But since .NET 4.8 is still one year away I have requested a backport of the fixes to get .NET 4.7.2 back to speed on latest hardware. Since many parts of .NET are using spinlocks you should look out for increased CPU consumption around Thread.SpinWait and other spinning methods.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image6.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb6.png?w=602&amp;amp;h=318&quot; width=&quot;602&quot; height=&quot;318&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;E.g. Task.Result will internally Spin internally where I could see for other tests also a significant increase in CPU consumption and degraded performance.&lt;/p&gt;
&lt;h2&gt;How Bad Is It?&lt;/h2&gt;
&lt;p&gt;I have looked at the .NET Core code how long the CPU will keep spinning when the lock is not released before calling into WaitForSingleObject to pay the “expensive” context switch. A context switch is somewhere in the microsecond region and becomes much slower when many threads are waiting on the same kernel object.&lt;/p&gt;
&lt;p&gt;.NET Locks multiply the maximum Spin duration with the number of cores which has the fully contended case in mind where every core has a thread waiting for the same lock and tries to spin long enough to give everyone a chance to work a bit before paying for the kernel call. Spinning inside .NET uses an exponential back off algorithm where spinning starts with 50 pause calls in a loop where for each iteration the number of spins is multiplied by 3 until the next spin count becomes greater than the maximum spin duration. I have calculated the total time how long a thread would spin on pre Skylake CPU and current Skylake CPUs for various core numbers:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image7.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb7.png?w=898&amp;amp;h=423&quot; width=&quot;898&quot; height=&quot;423&quot;/&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Below is some simplified code how .NET Locks perform spinning:&lt;/p&gt;

&lt;div&gt;
&lt;pre&gt;
&lt;span&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;/// This is how .NET is spinning during lock contention minus the Lock taking/SwitchToThread/Sleep calls&lt;/span&gt;
&lt;span&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;/// &amp;lt;param name=&quot;nCores&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; &lt;span&gt;Spin&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; nCores)
{
        &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; dwRepetitions = &lt;span&gt;10&lt;/span&gt;;
        &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; dwInitialDuration = &lt;span&gt;0&lt;/span&gt;x32;
        &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; dwBackOffFactor = &lt;span&gt;3&lt;/span&gt;;
        
        &lt;span&gt;int&lt;/span&gt; dwMaximumDuration = &lt;span&gt;20&lt;/span&gt; * &lt;span&gt;1000&lt;/span&gt; * nCores;

        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; dwRepetitions; i++)
        {
                &lt;span&gt;int&lt;/span&gt; duration = dwInitialDuration;
                &lt;span&gt;do&lt;/span&gt;
                {
                        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; k = &lt;span&gt;0&lt;/span&gt;; k &amp;lt; duration; k++)
                        {
                                Call_PAUSE();
                        }
                        duration *= dwBackOffFactor;
                }
                &lt;span&gt;while&lt;/span&gt; (duration &amp;lt; dwMaximumDuration);
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The old spinning times were in the millisecond region (19ms for 24 cores) which is already quite a lot compared to the always mentioned high costs of context switches which are an order of magnitude faster. But with Skylake CPUs the total CPU Spinning times for a contended lock have exploded and we will spin up to 246ms on a 24 or 48 core machine only because the latency of the new Intel CPUs has increased the pause instruction by a factor 14. Is this really the case? I have created  a small tester to check full CPU spinning and the calculated numbers nicely match my expectations. I have 48 threads waiting on a 24 core machine for a single lock where I call Monitor.PulseAll to let the race begin:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image8.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb8.png?w=890&amp;amp;h=531&quot; width=&quot;890&quot; height=&quot;531&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Only one thread will win the race but 47 threads will spin until the give up. This is experimental evidence that we indeed have a real issue with CPU consumption and very long Spin times are a real issue. Excessive spinning hurts scalability because CPU cycles are burned where other threads might need the CPU, although the usage of the pause instruction frees up some of the shared CPU resources while “sleeping” for longer times. The reason for spinning is to acquire the lock fast without going to the kernel. If that is true the increased CPU consumption might not look good in task manager but it should not influence performance at all as long as there are cores left for other tasks. But what the tests did show that nearly single threaded operations where one thread adds something to a worker queue while the worker thread waits for work and then performs some task with the work item are slowed down.&lt;/p&gt;
&lt;p&gt;The reason for that can be shown best with a diagram. Spinning for a contended lock happens in steps where the amount of spinning is tripled after each step. After each Spin Round the lock checks again if the current thread can get it. While spinning the lock tries to be fair and switches over to other threads from time to time to help the other thread/s to complete its work. That increases the chances the lock has been released when we check again later. The problem is that only after a complete Spin Round has completed the lock checks if it can be taken:&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image9.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb9.png?w=665&amp;amp;h=251&quot; width=&quot;665&quot; height=&quot;251&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If e.g. during Spin Round 5 the lock becomes signaled right after we did start Round 5 we wait for the complete Spin Round until we can acquire the lock. By calculating the spin duration for the last round we can estimate the worst case of delay that can happen to our thread:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image10.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb10.png?w=934&amp;amp;h=303&quot; width=&quot;934&quot; height=&quot;303&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That are many milliseconds we can wait until spinning has completed. Is that a real issue?&lt;/p&gt;
&lt;p&gt;I have created a simple test application that implements a producer consumer queue where the worker thread works for each work item 10ms and the consumer has a delay of 1-9 ms before sending in the next work item. That is sufficient to see the effect:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image11.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb11.png?w=365&amp;amp;h=169&quot; width=&quot;365&quot; height=&quot;169&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We see for some sender thread delays of one and two ms a total duration of 2,2s whereas the other times we are twice as fast with ca. 1,2s. This shows that excessive CPU spinning is not only a cosmetic issue which only hurts heavily multithreaded applications but also simple producer consumer threading which involves only two threads. For the run above the ETW data speaks on its own that the increased CPU spinning is really the cause for the observed delay:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image12.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb12.png?w=841&amp;amp;h=462&quot; width=&quot;841&quot; height=&quot;462&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When we zoom into the slow section we find in red the 11ms of spinning although the worker (light blue) has completed its work and has returned the lock a long time ago.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image13.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb13.png?w=838&amp;amp;h=352&quot; width=&quot;838&quot; height=&quot;352&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fast non degenerate case looks much better where only 1ms is spent spinning for the the lock.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aloiskraus.files.wordpress.com/2018/06/image14.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;https://aloiskraus.files.wordpress.com/2018/06/image_thumb14.png?w=837&amp;amp;h=354&quot; width=&quot;837&quot; height=&quot;354&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The test application I did use is named  &lt;em&gt;SkylakeXPause&lt;/em&gt; and located at &lt;a title=&quot;https://1drv.ms/u/s!AhcFq7XO98yJgsMDiyTk6ZEt9pDXGA&quot; href=&quot;https://1drv.ms/u/s!AhcFq7XO98yJgsMDiyTk6ZEt9pDXGA&quot;&gt;https://1drv.ms/u/s!AhcFq7XO98yJgsMDiyTk6ZEt9pDXGA&lt;/a&gt; which contains a zip file with the source code and the binaries for .NET Core and .NET 4.5. What I actually did to compare things was to install on the Skylake machine .NET 4.8 Preview which contains the fixes and .NET Core 2.0 which still implements the old spinning behavior. The application targets .NET Standard 2.0 and .NET 4.5 which produces and exe and a dll. Now I can test the old and new spinning behavior side by side without the need to patch anything which is very convenient.&lt;/p&gt;

&lt;div&gt;
&lt;pre&gt;
&lt;span&gt;readonly&lt;/span&gt; &lt;span&gt;object&lt;/span&gt; _LockObject = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;object&lt;/span&gt;();
&lt;span&gt;int&lt;/span&gt; WorkItems;
&lt;span&gt;int&lt;/span&gt; CompletedWorkItems;
Barrier SyncPoint;
        
&lt;span&gt;void&lt;/span&gt; &lt;span&gt;RunSlowTest&lt;/span&gt;()
{
        &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; processingTimeinMs = &lt;span&gt;10&lt;/span&gt;;
        &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; WorkItemsToSend = &lt;span&gt;100&lt;/span&gt;;
        Console.WriteLine(&lt;span&gt;$&lt;/span&gt;&lt;span&gt;&quot;Worker thread works {processingTimeinMs} ms for {WorkItemsToSend} times&quot;&lt;/span&gt;);

        &lt;span&gt;// Test one sender one receiver thread with different timings when the sender wakes up again&lt;/span&gt;
        &lt;span&gt;// to send the next work item&lt;/span&gt;

        &lt;span&gt;// synchronize worker and sender. Ensure that worker starts first&lt;/span&gt;
        &lt;span&gt;double&lt;/span&gt;[] sendDelayTimes = { &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt; };

        &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; sendDelay &lt;span&gt;in&lt;/span&gt; sendDelayTimes)
        {
                SyncPoint = &lt;span&gt;new&lt;/span&gt; Barrier(&lt;span&gt;2&lt;/span&gt;);  &lt;span&gt;// one sender one receiver&lt;/span&gt;

                &lt;span&gt;var&lt;/span&gt; sw = Stopwatch.StartNew();
                Parallel.Invoke(() =&amp;gt; Sender(workItems: WorkItemsToSend,          delayInMs: sendDelay),
                                                () =&amp;gt; Worker(maxWorkItemsToWork: WorkItemsToSend, workItemProcessTimeInMs: processingTimeinMs));
                sw.Stop();
                Console.WriteLine(&lt;span&gt;$&lt;/span&gt;&lt;span&gt;&quot;Send Delay: {sendDelay:F1} ms Work completed in {sw.Elapsed.TotalSeconds:F3} s&quot;&lt;/span&gt;);
                Thread.Sleep(&lt;span&gt;100&lt;/span&gt;);  &lt;span&gt;// show some gap in ETW data so we can differentiate the test runs&lt;/span&gt;
        }
}

&lt;span&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;/// Simulate a worker thread which consumes CPU which is triggered by the Sender thread&lt;/span&gt;
&lt;span&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; &lt;span&gt;Worker&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; maxWorkItemsToWork, &lt;span&gt;double&lt;/span&gt; workItemProcessTimeInMs)
{
        SyncPoint.SignalAndWait();

        &lt;span&gt;while&lt;/span&gt; (CompletedWorkItems != maxWorkItemsToWork)
        {
                &lt;span&gt;lock&lt;/span&gt; (_LockObject)
                {
                        &lt;span&gt;if&lt;/span&gt; (WorkItems == &lt;span&gt;0&lt;/span&gt;)
                        {
                                Monitor.Wait(_LockObject); &lt;span&gt;// wait for work&lt;/span&gt;
                        }

                        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; WorkItems; i++)
                        {
                                CompletedWorkItems++;
                                SimulateWork(workItemProcessTimeInMs); &lt;span&gt;// consume CPU under this lock&lt;/span&gt;
                        }

                        WorkItems = &lt;span&gt;0&lt;/span&gt;;
                }
        }
}

&lt;span&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;/// Insert work for the Worker thread under a lock and wake up the worker thread n times&lt;/span&gt;
&lt;span&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; &lt;span&gt;Sender&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; workItems, &lt;span&gt;double&lt;/span&gt; delayInMs)
{
        CompletedWorkItems = &lt;span&gt;0&lt;/span&gt;; &lt;span&gt;// delete previous work&lt;/span&gt;
        SyncPoint.SignalAndWait();
        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; workItems; i++)
        {
                &lt;span&gt;lock&lt;/span&gt; (_LockObject)
                {
                        WorkItems++;
                        Monitor.PulseAll(_LockObject);
                }
                SimulateWork(delayInMs);
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;This is not a .NET issue. It affects all Spinlock implementations which use the pause instruction. I have done a quick check into the Windows Kernel of Server 2016 but there is no issue like that visible. Looks like Intel was kind enough to give time a hint that some changes in the spinning strategy are needed.&lt;/p&gt;
&lt;p&gt;When the issue was reported to .NET Core in August 2017 in September 2017 it was already fixed and pushed out with .NET Core 2.0.3 (&lt;a title=&quot;https://github.com/dotnet/coreclr/issues/13388&quot; href=&quot;https://github.com/dotnet/coreclr/issues/13388&quot;&gt;https://github.com/dotnet/coreclr/issues/13388&lt;/a&gt;). It is not only that the reaction speed of the .NET Core team is amazing but also that the issue has been fixed on the mono branch a few days ago now as well and discussions about even more Spinning improvements are ongoing. Unfortunately the Desktop .NET Framework is not moving as fast but at least we have with .NET Framework 4.8 Preview at least a proof of concept that the fixes work there as well. Now I am waiting for the backport to .NET 4.7.2 to be able to use .NET at its full speed also on latest hardware. This was my first bug which was directly related to a performance change in one CPU instruction. ETW remains the profiling tool of choice on Windows. If I had a wish I would Microsoft make to port the ETW infrastructure on Linux because the current performance tooling still sucks at Linux. There were some interesting kernel capabilities added recently but an analysis tool like WPA remains yet to be seen there.&lt;/p&gt;
&lt;p&gt;If you are running .NET Core 2.0 or desktop .NET Framework on CPUs which were produced since mid 2017 you should definitely check out your application with a profiler if you are running at reduced speed due to this issue and upgrade to the newer .NET Core and hopefully soon .NET Desktop version. My test application can tell you if you could be having issues&lt;/p&gt;
&lt;pre class=&quot;csharpcode&quot;&gt;
D:\SkylakeXPause\bin\Release\netcoreapp2.0&amp;gt;dotnet SkylakeXPause.dll -check
Did call pause 1,000,000 &lt;span class=&quot;kwrd&quot;&gt;in&lt;/span&gt; 3.5990 ms, Processors: 8
No SkylakeX problem detected

or 

D:\SkylakeXPause\SkylakeXPause\bin\Release\net45&amp;gt;SkylakeXPause.exe -check
Did call pause 1,000,000 &lt;span class=&quot;kwrd&quot;&gt;in&lt;/span&gt; 3.6195 ms, Processors: 8
No SkylakeX problem detected
&lt;/pre&gt;
&lt;p&gt;The tool will report an issue only if you are running on a not fixed .NET Framework on a Skylake CPU. I hope you did find the issue as fascinating as I did. To really understand an issue you need to create a reproducer which allows you to experiment to find all relevant influencing factors. The rest is just boring work but now I do understand the reasons and consequences of CPU spinning much better.&lt;/p&gt;

&lt;div class=&quot;wpcnt&quot;&gt;
&lt;div class=&quot;wpa wpmrec&quot;&gt;&lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-113324481-561-5b28478cb9501&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20180319#blog_id=113324481&amp;amp;post_id=561&amp;amp;origin=aloiskraus.wordpress.com&amp;amp;obj_id=113324481-561-5b28478cb9501&quot; data-name=&quot;like-post-frame-113324481-561-5b28478cb9501&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 18 Jun 2018 09:25:04 +0000</pubDate>
<dc:creator>GordonS</dc:creator>
<og:type>article</og:type>
<og:title>Why Skylake CPUs Are Sometimes 50% Slower – How Intel Has Broken Existing Code</og:title>
<og:url>https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/</og:url>
<og:description>I got a call that on newer hardware some performance regression tests have become slower. Not a big deal. Usually it is a bad configuration somewhere in Windows or some BIOS settings were set to no…</og:description>
<og:image>https://aloiskraus.files.wordpress.com/2018/06/image_thumb14.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/</dc:identifier>
</item>
</channel>
</rss>