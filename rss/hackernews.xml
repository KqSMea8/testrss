<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Macbook Pro frying USB peripherals</title>
<link>https://discussions.apple.com/thread/8223635</link>
<guid isPermaLink="true" >https://discussions.apple.com/thread/8223635</guid>
<description>&lt;p&gt;So this weirdest thing has happened to my Mac.&lt;/p&gt;
&lt;p&gt;It only affects the left furthermost USB-C port. When the charger is connected to the Mac (through any of the remaining 3 ports), this one port will supply 20 volts on standby instead of the regular 5 volts, effectively frying any regular USB peripheral that's connected. When the charger is not connected, the port operates normally and supplies 5V.&lt;/p&gt;
&lt;p&gt;The test setup is as follows: Apple USB-C to USB adapter plugged to left furthermost port, to which a regular USB cable is attached which exposes convenient measurement points for the multimeter.&lt;/p&gt;
&lt;p&gt;Here's measurement taken of the voltage with charger disconnected:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://discussions.apple.com/servlet/JiveServlet/showImage/932985/IMG_0597.JPG&quot;&gt;&lt;img src=&quot;https://discussions.apple.com/servlet/JiveServlet/downloadImage/932985/IMG_0597.JPG&quot; alt=&quot;User uploaded file&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and with charger connected (to any of the remaining 3 USB-C ports):&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://discussions.apple.com/servlet/JiveServlet/showImage/933155/IMG_0599.JPG&quot;&gt;&lt;img src=&quot;https://discussions.apple.com/servlet/JiveServlet/downloadImage/933155/IMG_0599.JPG&quot; alt=&quot;User uploaded file&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 01 May 2018 20:13:49 +0000</pubDate>
<dc:creator>United857</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://discussions.apple.com/thread/8223635</dc:identifier>
</item>
<item>
<title>Amazon threatens to suspend Signal&amp;#039;s AWS account over censorship circumvention</title>
<link>https://signal.org/blog/looking-back-on-the-front/</link>
<guid isPermaLink="true" >https://signal.org/blog/looking-back-on-the-front/</guid>
<description>&lt;p&gt;Last week, we received the following email from Amazon:&lt;/p&gt;
&lt;div class=&quot;email&quot; readability=&quot;24&quot;&gt;
&lt;p&gt;From: [redacted], [redacted] &amp;lt;[redacted]@amazon.com&amp;gt;&lt;br/&gt;Subject: Notification of potential account suspension regarding AWS Service Terms&lt;/p&gt;
&lt;p&gt;Moxie,&lt;/p&gt;
&lt;p&gt;Yesterday AWS became aware of your Github and Hacker News/ycombinator posts describing how Signal plans to make its traffic look like traffic from another site, (popularly known as “domain fronting”) by using a domain owned by Amazon -- Souq.com. You do not have permission from Amazon to use Souq.com for any purpose. Any use of Souq.com or any other domain to masquerade as another entity without express permission of the domain owner is in clear violation of the AWS Service Terms (Amazon CloudFront, Sec. 2.1: “You must own or have all necessary rights to use any domain name or SSL certificate that you use in conjunction with Amazon CloudFront”). It is also a violation of our Acceptable Use Policy by falsifying the origin of traffic and the unauthorized use of a domain.&lt;/p&gt;
&lt;p&gt;We are happy for you to use AWS Services, but you must comply with our Service Terms. We will immediately suspend your use of CloudFront if you use third party domains without their permission to masquerade as that third party.&lt;/p&gt;
&lt;p&gt;Thank you,&lt;/p&gt;
&lt;p&gt;[redacted]&lt;/p&gt;
&lt;p&gt;General Manager, Amazon CloudFront&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;history&quot;&gt;History&lt;/h2&gt;
&lt;p&gt;Direct access to Signal has been censored in Egypt, Oman, Qatar, and UAE for the past 1.5 years. These countries attempt to block Signal by blocking connections to Signal servers from all ISPs.&lt;/p&gt;
&lt;p&gt;Like most modern services, Signal does not have a single static IP address that ISPs can filter. In cloud environments, IP addresses can change over time as load balancers scale up and down, and the addresses aren’t even always dedicated to a single endpoint. Amazon CloudFront, for example, may terminate requests on the same IP for any number of services that wish to distribute content on their CDN. This can make it more difficult for a censor to identify traffic based on IP address alone.&lt;/p&gt;
&lt;p&gt;Unfortunately, a TLS handshake fully exposes the target hostname in plaintext, since the hostname is included in the SNI header in the clear. This remains the case even in TLS 1.3, and it gives a censor all they need.&lt;/p&gt;
&lt;p&gt;However, several cloud environments were built with an idiosyncrasy that allowed us to work around this TLS metadata problem. Google and Amazon built their TLS termination layer separately from their request processing layer, such that it was possible to create what looked like a TLS connection for domain A with a request that would actually be received and processed by domain B. This is known as “&lt;a href=&quot;https://www.bamsoftware.com/papers/fronting/&quot;&gt;domain fronting&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;When access to Signal was originally censored in Egypt, Oman, Qatar, and UAE, we responded by &lt;a href=&quot;https://signal.org/blog/doodles-stickers-censorship&quot;&gt;deploying domain fronting in those countries&lt;/a&gt; through Google App Engine. This meant that to block Signal, those countries would also have to block google.com. That was not a step those countries were willing to take, and as a result Signal has been usable there for the past 1.5 years, even though direct access remains blocked. This required no configuration from users; they could simply install the app and use it as normal.&lt;/p&gt;
&lt;h2 id=&quot;iran&quot;&gt;Iran&lt;/h2&gt;
&lt;p&gt;Direct access to Signal has also been blocked in Iran for the past 3+ years, but it was not possible to use the same domain fronting technique there. In an apparently unique interpretation of US sanction law, Google does not allow any requests from Iran to be processed by Google App Engine. Requests would get past Iranian censors, but then Google themselves would block them.&lt;/p&gt;
&lt;p&gt;In early 2018, a number of policy organizations increased pressure on Google to change their position on how they were interpreting US sanction law so that domain fronting would be possible from Iran. Sadly, these lobbying efforts seem to have had the opposite effect. When Google’s leadership became more aware of domain fronting, it generated internal conversations about whether they wanted to put themselves in the situation of providing cover for sites that entire countries wished to block.&lt;/p&gt;
&lt;p&gt;A month later, we received 30-day advance notice from Google that they would be making internal changes to stop domain fronting from working entirely.&lt;/p&gt;
&lt;h2 id=&quot;aws&quot;&gt;AWS&lt;/h2&gt;
&lt;p&gt;With Google no longer an option, we decided to look for popular domains in censored regions that were on CloudFront instead. Nothing is anywhere near as popular as Google, but there were a few sites that used CloudFront in the Alexa top 50 or 100. We’re an open source project, so the commit switching from GAE to CloudFront was public. Someone saw the commit and submitted it to HN. That post became popular, and apparently people inside Amazon saw it too.&lt;/p&gt;
&lt;p&gt;That’s how we got to the above email. Although our interpretation is ultimately not the one that matters, we don’t believe that we are violating the terms they describe:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Our CloudFront distribution isn’t using the SSL certificate of any domain but our own.&lt;/li&gt;
&lt;li&gt;We aren’t falsifying the origin of traffic when our clients connect to CloudFront.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;However, in the time-honored tradition of sharing unpopular news late on a Friday afternoon, a few days ago Amazon also announced what they are calling &lt;a href=&quot;https://aws.amazon.com/blogs/security/enhanced-domain-protections-for-amazon-cloudfront-requests/&quot;&gt;Enhanced Domain Protections for Amazon CloudFront Requests&lt;/a&gt;. It is a set of changes designed to prevent domain fronting from working entirely, across all of CloudFront.&lt;/p&gt;
&lt;h2 id=&quot;future&quot;&gt;Future&lt;/h2&gt;
&lt;p&gt;With Google Cloud and AWS out of the picture, it seems that domain fronting as a censorship circumvention technique is now largely non-viable in the countries where Signal had enabled this feature. The idea behind domain fronting was that to block a single site, you’d have to block the rest of the internet as well. In the end, the rest of the internet didn’t like that plan.&lt;/p&gt;
&lt;p&gt;We are considering ideas for a more robust system, but these ecosystem changes have happened very suddenly. Our team is only a few people, and developing new techniques will take time. Moreover, if recent changes by large cloud providers indicate a commitment to providing network-level visibility into the final destination of encrypted traffic flows, then the range of potential solutions becomes severely limited. If you’d like to help, &lt;a href=&quot;https://signal.org/workworkwork/&quot;&gt;we’re hiring&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the meantime, the censors in these countries will have (at least temporarily) achieved their goals. Sadly, they didn’t have to do anything but wait.&lt;/p&gt;

</description>
<pubDate>Tue, 01 May 2018 18:55:01 +0000</pubDate>
<dc:creator>jboynyc</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://signal.org/blog/looking-back-on-the-front/</dc:identifier>
</item>
<item>
<title>Facebook announces Clear History feature</title>
<link>https://www.facebook.com/zuck/posts/10104899855107881</link>
<guid isPermaLink="true" >https://www.facebook.com/zuck/posts/10104899855107881</guid>
<description>&lt;p&gt;Today at our F8 conference I'm going to discuss a new privacy control we're building called &quot;Clear History&quot;.&lt;/p&gt;
&lt;p&gt;In your web browser, you have a simple way to clear your cookies and history. The idea is a lot of sites need cookies to work, but you should still be able to flush your history whenever you want. We're building a version of this for Facebook too. It will be a simple control to clear your browsing history on Facebook -- what you've clicked on, websites you've visited, and so on.&lt;/p&gt;
&lt;p&gt;We're starting with something a lot of people have asked about recently: the information we see from websites and apps that use Facebook's ads and analytics tools.&lt;/p&gt;
&lt;p&gt;Once we roll out this update, you'll be able to see information about the apps and websites you've interacted with, and you'll be able to clear this information from your account. You'll even be able to turn off having this information stored with your account.&lt;/p&gt;
&lt;p&gt;To be clear, when you clear your cookies in your browser, it can make parts of your experience worse. You may have to sign back in to every website, and you may have to reconfigure things. The same will be true here. Your Facebook won't be as good while it relearns your preferences.&lt;/p&gt;
&lt;p&gt;But after going through our systems, this is an example of the kind of control we think you should have. It's something privacy advocates have been asking for -- and we will work with them to make sure we get it right.&lt;/p&gt;
&lt;p&gt;One thing I learned from my experience testifying in Congress is that I didn't have clear enough answers to some of the questions about data. We're working to make sure these controls are clear, and we will have more to come soon.&lt;/p&gt;
</description>
<pubDate>Tue, 01 May 2018 17:40:56 +0000</pubDate>
<dc:creator>anigbrowl</dc:creator>
<og:title>Mark Zuckerberg</og:title>
<og:description>Today at our F8 conference I'm going to discuss a new privacy control we're building called &quot;Clear History&quot;. In your web browser, you have a simple way to clear your cookies and history. The idea...</og:description>
<og:image>https://scontent.fphx1-2.fna.fbcdn.net/v/t34.0-1/p200x200/16176889_112685309244626_578204711_n.jpg?_nc_cat=0&amp;oh=461e0f8c4b6fd6f151aee1893544fb6b&amp;oe=5AEB6525</og:image>
<og:url>https://www.facebook.com/zuck/posts/10104899855107881</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.facebook.com/zuck/posts/10104899855107881?_fb_noscript=1</dc:identifier>
</item>
<item>
<title>Facebook is launching a dating feature</title>
<link>https://www.cnbc.com/2018/05/01/facebook-is-launching-a-dating-app.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2018/05/01/facebook-is-launching-a-dating-app.html</guid>
<description>&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Facebook is launching a dating feature, CEO Mark Zuckerberg announced during the keynote address at &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;139619&quot; data-inline-quote-symbol=&quot;FB&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=FB&quot;&gt;Facebook&lt;/a&gt;'s annual F8 developer conference Tuesday.&lt;/p&gt;
&lt;p&gt;&quot;This is going to be for building real, long-term relationships — not just hook-ups,&quot; Zuckerberg said.&lt;/p&gt;
&lt;p&gt;The opt-in feature will match users specifically with people they aren't already friends with. Facebook users can build a dating profile — which friends won't be able to see.&lt;/p&gt;

&lt;p&gt;Shares of online dating company &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;157307&quot; data-inline-quote-symbol=&quot;MTCH&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=MTCH&quot;&gt;Match&lt;/a&gt; plunged 22 percent on the news. Its parent company &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;45174&quot; data-inline-quote-symbol=&quot;IAC&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=IAC&quot;&gt;IAC&lt;/a&gt; dropped almost 18 percent.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;The dating feature is likely to be a free service, challenging services such as Match-owned Tinder, which has been rolling out premium, paid features, according to Jefferies analyst Brent Thill.&lt;/p&gt;
&lt;p&gt;&quot;It's the first real meaningful competitor,&quot; Thill told CNBC's &quot;&lt;a href=&quot;https://www.cnbc.com/power-lunch-cnbc/&quot;&gt;Power Lunch&lt;/a&gt;&quot; following the announcement. &quot;This is a blow to the story [for Match] in the short term.&quot;&lt;/p&gt;
&lt;p&gt;IAC chief executive Joey Levin said Facebook's product &quot;could be great for US/Russia relationships&quot; but hinted the space had already been cornered.&lt;/p&gt;
&lt;p&gt;&quot;Come on in. The water's warm,&quot; Levin said in a statement.&lt;/p&gt;
&lt;p&gt;Match CEO Mandy Ginsberg echoed the confidence, saying the company was &quot;flattered&quot; Facebook was entering the space.&lt;/p&gt;
&lt;p&gt;&quot;We're surprised at the timing given the amount of personal and sensitive data that comes with this territory,&quot; Ginsberg said in a statement. &quot;Regardless, we're going to continue to delight our users through product innovation and relentless focus on relationship success. We understand this category better than anyone.&quot;&lt;/p&gt;
&lt;p&gt;The F8 conference, often an opportunity to announce new developer tools or hardware, comes amid a broader discussion of policy and privacy for the company.&lt;/p&gt;
&lt;p&gt;Facebook for months has been dealing with the fallout of the Cambridge Analytica data leak and questions of user privacy — a firestorm set off by reports that an app developer mishandled sensitive user information.&lt;/p&gt;
&lt;p&gt;But Zuckerberg said during his address that the company will &quot;keep building, even while we focus on keeping people safe.&quot;&lt;/p&gt;
&lt;p&gt;The new dating feature links to events and groups on the larger platform, allowing users with dating profiles to connect via shared interests or commonly attended events.&lt;/p&gt;
&lt;p&gt;&quot;It mirrors the way people actually date, which is usually at events and institutions that they're connected to,&quot; chief product officer Chris Cox said during the F8 conference.&lt;/p&gt;
&lt;p&gt;Users can launch text-only private messages, separate from Facebook Messenger or WhatsApp.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;/&gt;</description>
<pubDate>Tue, 01 May 2018 17:28:20 +0000</pubDate>
<dc:creator>mendelk</dc:creator>
<og:type>article</og:type>
<og:url>https://www.cnbc.com/2018/05/01/facebook-is-launching-a-dating-app.html</og:url>
<og:image>https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2018/05/01/105175459-AP_18121666918909.1910x1000.jpg</og:image>
<og:title>Facebook announces new dating feature, and Match is getting clobbered</og:title>
<og:description>The conference, often an opportunity to announce new developer tools or hardware, comes amid a broader discussion of policy and privacy for the company.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2018/05/01/facebook-is-launching-a-dating-app.html</dc:identifier>
</item>
<item>
<title>Americans Are a Lonely Lot, and Young People Bear the Heaviest Burden</title>
<link>https://www.npr.org/sections/health-shots/2018/05/01/606588504/americans-are-a-lonely-lot-and-young-people-bear-the-heaviest-burden</link>
<guid isPermaLink="true" >https://www.npr.org/sections/health-shots/2018/05/01/606588504/americans-are-a-lonely-lot-and-young-people-bear-the-heaviest-burden</guid>
<description>&lt;div id=&quot;res606588972&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/04/27/lonely-1_custom-c4ba6a0865f8d83d3a87c7457d4b1491ed65fab4-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/04/27/lonely-1_custom-c4ba6a0865f8d83d3a87c7457d4b1491ed65fab4-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;Loneliness is on the rise in the U.S., particularly among younger people, such as members of Generation Z, born between the mid-1990s and the early 2000s, and millennials, just a little bit older. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Tara Moore/Getty Images&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Tara Moore/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2018/04/27/lonely-1_enl-008eeaf6c2a919cbb68288a618b0f8d30f21c07b-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;13&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;Loneliness is on the rise in the U.S., particularly among younger people, such as members of Generation Z, born between the mid-1990s and the early 2000s, and millennials, just a little bit older.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Tara Moore/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Loneliness isn't just a fleeting feeling, leaving us sad for a few hours to a few days. Research in recent years suggests that for many people, loneliness is more like a chronic ache, affecting their daily lives and sense of well-being.&lt;/p&gt;
&lt;p&gt;Now a &lt;a href=&quot;https://www.multivu.com/players/English/8294451-cigna-us-loneliness-survey/&quot;&gt;nationwide survey&lt;/a&gt; by the health insurer Cigna underscores that. It finds that loneliness is widespread in America, with nearly 50 percent of respondents reporting that they feel alone or left out always or sometimes.&lt;/p&gt;
&lt;p&gt;Using one of the best-known tools for measuring loneliness — &lt;a href=&quot;http://psycnet.apa.org/doiLanding?doi=10.1037%2F0022-3514.39.3.472&quot;&gt;the UCLA Loneliness Scale&lt;/a&gt; — Cigna surveyed 20,000 adults online across the country. The University of California, Los Angeles tool uses a series of statements and a formula to calculate a loneliness score based on responses. Scores on the UCLA scale range from 20 to 80. People scoring 43 and above were considered lonely in the Cigna survey, with a higher score suggesting a greater level of loneliness and social isolation.&lt;/p&gt;
&lt;p&gt;More than half of survey respondents — 54 percent — said they always or sometimes feel that no one knows them well. Fifty-six percent reported they sometimes or always felt like the people around them &quot;are not necessarily &lt;em&gt;with&lt;/em&gt; them.&quot; And 2 in 5 felt like &quot;they lack companionship,&quot; that their &quot;relationships aren't meaningful&quot; and that they &quot;are isolated from others.&quot;&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;The survey found that the average loneliness score in America is 44, which suggests that &quot;most Americans are considered lonely,&quot; according to the report released Tuesday by the health insurer.&lt;/p&gt;

&lt;p&gt;&quot;Half of Americans view themselves as lonely,&quot; said &lt;a href=&quot;https://www.cigna.com/about-us/company-profile/cigna-leadership-team/david-cordani&quot;&gt;David Cordani&lt;/a&gt;, president and CEO of Cigna Corp. &quot;I can't help but be surprised [by that].&quot; (Cigna is an NPR sponsor and a major provider of health insurance for NPR employees.)&lt;/p&gt;
&lt;p&gt;But the results are consistent with other previous research, says &lt;a href=&quot;https://fhssfaculty.byu.edu/FacultyPage?id=jh67&quot;&gt;Julianne Holt-Lunstad&lt;/a&gt;, a psychologist at Brigham Young University, who studies loneliness and its health effects. She wasn't involved in the Cigna survey. While it's difficult to compare the loneliness scores in different studies, she says, other nationally representative estimates have found between 20 percent and 43 percent of Americans report feeling lonely or socially isolated.&lt;/p&gt;
&lt;p&gt;Loneliness has health consequences. &quot;There's a blurred line between mental and physical health,&quot; says Cordani. &quot;Oftentimes, medical symptoms present themselves and they're correlated with mental, lifestyle, behavioral issues like loneliness.&quot;&lt;/p&gt;
&lt;p&gt;Several studies in recent years, including ones by Holt-Lunstad, have documented the public health effect of loneliness. It has been linked with a higher risk of &lt;a href=&quot;http://heart.bmj.com/content/heartjnl/102/13/1009.full.pdf&quot;&gt;coronary heart disease and stroke&lt;/a&gt;. It has been shown to influence our &lt;a href=&quot;https://www.npr.org/sections/health-shots/2015/11/29/457255876/loneliness-may-warp-our-genes-and-our-immune-systems&quot;&gt;genes and our immune systems&lt;/a&gt;, and even &lt;a href=&quot;https://www.cbsnews.com/news/loneliness-may-sabotage-breast-cancer-survival-study-finds/&quot;&gt;recovery from breast cancer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And there is growing evidence that loneliness can kill. &quot;We have &lt;a href=&quot;http://journals.plos.org/plosmedicine/article?id=10.1371/journal.pmed.1000316&quot;&gt;robust evidence&lt;/a&gt; that it increases risk for premature mortality,&quot; says Holt-Lunstad. Studies have found that it is a predictor of premature death, not just for the elderly, but &lt;a href=&quot;http://journals.sagepub.com/doi/abs/10.1177/1745691614568352&quot;&gt;even more&lt;/a&gt; so for younger people.&lt;/p&gt;
&lt;p&gt;The latest survey also found something surprising about loneliness in the younger generation. &quot;Our survey found that actually the younger generation was lonelier than the older generations,&quot; says Dr. Douglas Nemecek, the chief medical officer for behavioral health at Cigna.&lt;/p&gt;
&lt;p&gt;Members of Generation Z, born between the mid-1990s and the early 2000s, had an overall loneliness score of 48.3. Millennials, just a little bit older, scored 45.3. By comparison, baby boomers scored 42.4. The Greatest Generation, people ages 72 and above, had a score of 38.6 on the loneliness scale.&lt;/p&gt;
&lt;p&gt;&quot;Too often people think that this [problem] is specific to older adults,&quot; says Holt-Lunstad. &quot;This report helps with the recognition that this can affect those at younger ages.&quot;&lt;/p&gt;
&lt;p&gt;In fact, some &lt;a href=&quot;http://journals.sagepub.com/doi/10.1177/2167702617723376&quot;&gt;research&lt;/a&gt; published in 2017 by psychologist &lt;a href=&quot;http://www.psychology.sdsu.edu/people/jean-twenge/&quot;&gt;Jean Twenge&lt;/a&gt; at San Diego State University suggests that more screen time and social media may have caused a rise in depression and suicide among American adolescents. The study also found that people who spend less time looking at screens and more time having face-to-face social interactions are less likely to be depressive or suicidal.&lt;/p&gt;
&lt;p&gt;However, the Cigna survey didn't find a correlation between social media use and feelings of loneliness. This would on the surface contradict the new findings on screen time, but Holt-Lunstad says that previous research shows that how people use social media determine its influence on one's sense of isolation.&lt;/p&gt;
&lt;p&gt;&quot;If you're passively using it, if you're just scrolling feeds, that's associated with more negative effects,&quot; she says. &quot;But if you're using it to reach out and connect to people to facilitate other kinds of [in-person] interactions, it's associated with more positive effects.&quot;&lt;/p&gt;
&lt;p&gt;That last finding is also corroborated by the Cigna survey across all age groups. Respondents who said they have more in-person social interactions on a daily basis reported being less lonely.&lt;/p&gt;
&lt;div id=&quot;res607210161&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage594719471&quot; href=&quot;https://www.npr.org/2018/03/19/594719471/guys-we-have-a-problem-how-american-masculinity-creates-lonely-men&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2018\/03\/19\/594719471\/guys-we-have-a-problem-how-american-masculinity-creates-lonely-men&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/03/19/gettyimages-488932807_sq-9d6afbcdb846a0bfa761c56da05e561c79d84fee-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/03/19/gettyimages-488932807_sq-9d6afbcdb846a0bfa761c56da05e561c79d84fee-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Guys, We Have A Problem: How American Masculinity Creates Lonely Men&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The survey also found that working too little or too much is also associated with the experience of loneliness, suggesting that our workplaces are an important source of our social relationships and also that work-life balance is important for avoiding loneliness.&lt;/p&gt;
&lt;p&gt;Cigna wants to work with employers to &quot;help address loneliness in the workplace,&quot; says Nemecek.&lt;/p&gt;
&lt;p&gt;Social connection or the lack of it is now considered a social determinant of health. In a &lt;a href=&quot;http://www.nationalacademies.org/hmd/~/media/Files/Report%20Files/2014/EHR-Phase-1/EHRdomains.pdf&quot;&gt;2014 report&lt;/a&gt;, the Institute of Medicine (now the &lt;a href=&quot;http://www.nationalacademies.org/hmd/About-HMD.aspx&quot;&gt;Health and Medicine Division of the National Academies of Sciences, Engineering, and Medicine&lt;/a&gt;) suggested that health providers should collect information about patients' &quot;social connections and social isolation&quot; along with information on education, employment, lifestyle (diet, exercise, smoking, etc.) and psychological health.&lt;/p&gt;
&lt;p&gt;&quot;But this hasn't happened,&quot; says Holt-Lunstad. &quot;I would hope that with a large insurer like Cigna [releasing a report on loneliness], that it would start to be more on the radar of major health organizations but also actual health care providers.&quot;&lt;/p&gt;
</description>
<pubDate>Tue, 01 May 2018 16:13:29 +0000</pubDate>
<dc:creator>sudouser</dc:creator>
<og:title>Americans Are A Lonely Lot, And Young People Bear The Heaviest Burden</og:title>
<og:url>https://www.npr.org/sections/health-shots/2018/05/01/606588504/americans-are-a-lonely-lot-and-young-people-bear-the-heaviest-burden</og:url>
<og:type>article</og:type>
<og:description>A nationwide survey by health insurer Cigna finds that loneliness is widespread in America. Millennials and people in Generation Z tend to feel lonelier than retirees.</og:description>
<og:image>https://media.npr.org/assets/img/2018/04/27/lonely-1_wide-9f17df73b537675bdf7c592bbb4cb5ee4dbd6579.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/sections/health-shots/2018/05/01/606588504/americans-are-a-lonely-lot-and-young-people-bear-the-heaviest-burden</dc:identifier>
</item>
<item>
<title>Introducing .app, a more secure home for apps on the web</title>
<link>https://www.blog.google/topics/developers/introducing-app-more-secure-home-apps-web/</link>
<guid isPermaLink="true" >https://www.blog.google/topics/developers/introducing-app-more-secure-home-apps-web/</guid>
<description>&lt;p&gt;Today we’re announcing &lt;a href=&quot;https://get.app&quot;&gt;.app&lt;/a&gt;, the newest top-level domain (TLD) from &lt;a href=&quot;https://www.registry.google/&quot;&gt;Google Registry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A TLD is the last part of a domain name, like .com in “www.google.com” or .google in “blog.google” (the site you’re on right now). We created the .app TLD specifically for apps and app developers, with added security to help you showcase your apps to the world.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Even if you spend your days working in the world of mobile apps, you can still benefit from a home on the web. With a memorable .app domain name, it’s easy for people to find and learn more about your app. You can use your new domain as a landing page to share trustworthy download links, keep users up to date, and deep link to in-app content.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;A key benefit of the .app domain is that security is built in—for you &lt;em&gt;and&lt;/em&gt; your users. The big difference is that HTTPS is &lt;a href=&quot;https://security.googleblog.com/2017/09/broadening-hsts-to-secure-more-of-web.html&quot;&gt;required to connect to all .app websites&lt;/a&gt;, helping protect against ad malware and tracking injection by ISPs, in addition to safeguarding against spying on open WiFi networks. Because .app will be the first TLD with enforced security made available for general registration, it’s helping move the web to an &lt;a href=&quot;https://security.googleblog.com/2018/02/a-secure-web-is-here-to-stay.html&quot;&gt;HTTPS-everywhere future&lt;/a&gt; in a big way.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Starting today at 9:00am PDT and through May 7, .app domains are available to register as part of our Early Access Program, where, for an additional fee, you can secure your desired domains ahead of general availability. And then beginning on May 8, .app domains will be available to the general public through your registrar of choice.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Just visit &lt;a href=&quot;https://get.app&quot;&gt;get.app&lt;/a&gt; to see who’s already on .app and choose a registrar partner to begin registering your domain. We look forward to seeing where your new .app domain takes you!&lt;br/&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 01 May 2018 15:30:23 +0000</pubDate>
<dc:creator>daniel-alex</dc:creator>
<og:type>article</og:type>
<og:title>Introducing .app, a more secure home for apps on the web</og:title>
<og:description>Today we’re announcing .app, the newest top-level domain (TLD) from Google Registry, created specifically for apps and app developers.</og:description>
<og:image>https://storage.googleapis.com/gweb-uniblog-publish-prod/images/app_hero.max-2800x2800.png</og:image>
<og:url>https://www.blog.google/topics/developers/introducing-app-more-secure-home-apps-web/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.blog.google/topics/developers/introducing-app-more-secure-home-apps-web/</dc:identifier>
</item>
<item>
<title>C Is Not a Low-Level Language</title>
<link>https://queue.acm.org/detail.cfm?id=3212479</link>
<guid isPermaLink="true" >https://queue.acm.org/detail.cfm?id=3212479</guid>
<description>&lt;div class=&quot;navbar&quot;&gt;

&lt;a href=&quot;https://queue.acm.org/&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/acmqueue_logo.gif&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;a href=&quot;https://queue.acm.org/app/&quot; target=&quot;_new&quot;&gt;&lt;img src=&quot;https://queue.acm.org/app/2018_03-04_lrg.png&quot; with=&quot;90&quot; height=&quot;120&quot; alt=&quot;March/April 2018 issue of acmqueue&quot;/&gt;&lt;/a&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot;&gt;The March/April issue of acmqueue is out now&lt;/a&gt;&lt;/strong&gt;&lt;br clear=&quot;all&quot;/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;br/&gt;&lt;h4&gt;&lt;a href=&quot;https://queue.acm.org/listing.cfm?item_topic=Programming%20Languages&amp;amp;qc_type=theme_list&amp;amp;filter=Programming%20Languages&amp;amp;page_title=Programming%20Languages&amp;amp;order=desc&quot;&gt;Programming Languages&lt;/a&gt;&lt;/h4&gt;

&lt;label&gt;April 30, 2018&lt;br/&gt;&lt;strong&gt;&lt;a class=&quot;descriptor&quot; href=&quot;https://queue.acm.org/issuedetail.cfm?issue=3212477&quot;&gt;Volume 16, issue 2&lt;/a&gt;&lt;/strong&gt;&lt;/label&gt;

&lt;h2&gt;Your computer is not a fast PDP-11.&lt;/h2&gt;
&lt;h3&gt;David Chisnall&lt;/h3&gt;
&lt;p&gt;In the wake of the recent Meltdown and Spectre vulnerabilities, it's worth spending some time looking at root causes. Both of these vulnerabilities involved processors speculatively executing instructions past some kind of access check and allowing the attacker to observe the results via a side channel. The features that led to these vulnerabilities, along with several others, were added to let C programmers continue to believe they were programming in a low-level language, when this hasn't been the case for decades.&lt;/p&gt;
&lt;p&gt;Processor vendors are not alone in this. Those of us working on C/C++ compilers have also participated.&lt;/p&gt;
&lt;h3&gt;What Is a Low-Level Language?&lt;/h3&gt;
&lt;p&gt;Computer science pioneer Alan Perlis defined low-level languages this way:&lt;/p&gt;
&lt;p&gt;&quot;A programming language is low level when its programs require attention to the irrelevant.&quot;&lt;sup&gt;5&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;While, yes, this definition applies to C, it does not capture what people desire in a low-level language. Various attributes cause people to regard a language as low-level. Think of programming languages as belonging on a continuum, with assembly at one end and the interface to the Starship &lt;em&gt;Enterprise&lt;/em&gt;'s computer at the other. Low-level languages are &quot;close to the metal,&quot; whereas high-level languages are closer to how humans think.&lt;/p&gt;
&lt;p&gt;For a language to be &quot;close to the metal,&quot; it must provide an abstract machine that maps easily to the abstractions exposed by the target platform. It's easy to argue that C was a low-level language for the PDP-11. They both described a model in which programs executed sequentially, in which memory was a flat space, and even the pre- and post-increment operators cleanly lined up with the PDP-11 addressing modes.&lt;/p&gt;
&lt;h3&gt;Fast PDP-11 Emulators&lt;/h3&gt;
&lt;p&gt;The root cause of the Spectre and Meltdown vulnerabilities was that processor architects were trying to build not just fast processors, but fast processors that expose the same abstract machine as a PDP-11. This is essential because it allows C programmers to continue in the belief that their language is close to the underlying hardware.&lt;/p&gt;
&lt;p&gt;C code provides a mostly serial abstract machine (until C11, an entirely serial machine if nonstandard vendor extensions were excluded). Creating a new thread is a library operation known to be expensive, so processors wishing to keep their execution units busy running C code rely on ILP (instruction-level parallelism). They inspect adjacent operations and issue independent ones in parallel. This adds a significant amount of complexity (and power consumption) to allow programmers to write mostly sequential code. In contrast, GPUs achieve very high performance without any of this logic, at the expense of requiring explicitly parallel programs.&lt;/p&gt;
&lt;p&gt;The quest for high ILP was the direct cause of Spectre and Meltdown. A modern Intel processor has up to 180 instructions in flight at a time (in stark contrast to a sequential C abstract machine, which expects each operation to complete before the next one begins). A typical heuristic for C code is that there is a branch, on average, every seven instructions. If you wish to keep such a pipeline full from a single thread, then you must guess the targets of the next 25 branches. This, again, adds complexity; it also means that an incorrect guess results in work being done and then discarded, which is not ideal for power consumption. This discarded work has visible side effects, which the Spectre and Meltdown attacks could exploit.&lt;/p&gt;
&lt;p&gt;On a modern high-end core, the register rename engine is one of the largest consumers of die area and power. To make matters worse, it cannot be turned off or power gated while any instructions are running, which makes it inconvenient in a dark silicon era when transistors are cheap but powered transistors are an expensive resource. This unit is conspicuously absent on GPUs, where parallelism again comes from multiple threads rather than trying to extract instruction-level parallelism from intrinsically scalar code. If instructions do not have dependencies that need to be reordered, then register renaming is not necessary.&lt;/p&gt;
&lt;p&gt;Consider another core part of the C abstract machine's memory model: flat memory. This hasn't been true for more than two decades. A modern processor often has three levels of cache in between registers and main memory, which attempt to hide latency.&lt;/p&gt;
&lt;p&gt;The cache is, as its name implies, hidden from the programmer and so is not visible to C. Efficient use of the cache is one of the most important ways of making code run quickly on a modern processor, yet this is completely hidden by the abstract machine, and programmers must rely on knowing implementation details of the cache (for example, two values that are 64-byte-aligned may end up in the same cache line) to write efficient code.&lt;/p&gt;
&lt;h3&gt;Optimizing C&lt;/h3&gt;
&lt;p&gt;One of the common attributes ascribed to low-level languages is that they're fast. In particular, they should be easy to translate into fast code without requiring a particularly complex compiler. The argument that a sufficiently smart compiler can make a language fast is one that C proponents often dismiss when talking about other languages.&lt;/p&gt;
&lt;p&gt;Unfortunately, simple translation providing fast code is not true for C. In spite of the heroic efforts that processor architects invest in trying to design chips that can run C code fast, the levels of performance expected by C programmers are achieved only as a result of incredibly complex compiler transforms. The Clang compiler, including the relevant parts of LLVM, is around 2 million lines of code. Even just counting the analysis and transform passes required to make C run quickly adds up to almost 200,000 lines (excluding comments and blank lines).&lt;/p&gt;
&lt;p&gt;For example, in C, processing a large amount of data means writing a loop that processes each element sequentially. To run this optimally on a modern CPU, the compiler must first determine that the loop iterations are independent. The C &lt;code&gt;restrict&lt;/code&gt; keyword can help here. It guarantees that writes through one pointer do not interfere with reads via another (or if they do, that the programmer is happy for the program to give unexpected results). This information is far more limited than in a language such as Fortran, which is a big part of the reason that C has failed to displace Fortran in high-performance computing.&lt;/p&gt;
&lt;p&gt;Once the compiler has determined that loop iterations are independent, then the next step is to attempt to vectorize the result, because modern processors get four to eight times the throughput in vector code that they achieve in scalar code. A low-level language for such processors would have native vector types of arbitrary lengths. LLVM IR (intermediate representation) has precisely this, because it is always easier to split a large vector operation into smaller ones than to construct larger vector operations.&lt;/p&gt;
&lt;p&gt;Optimizers at this point must fight the C memory layout guarantees. C guarantees that structures with the same prefix can be used interchangeably, and it exposes the offset of structure fields into the language. This means that a compiler is not free to reorder fields or insert padding to improve vectorization (for example, transforming a structure of arrays into an array of structures or vice versa). That's not necessarily a problem for a low-level language, where fine-grained control over data structure layout is a feature, but it does make it harder to make C fast.&lt;/p&gt;
&lt;p&gt;C also requires padding at the end of a structure because it guarantees no padding in arrays. Padding is a particularly complex part of the C specification and interacts poorly with other parts of the language. For example, you must be able to compare two &lt;code&gt;struct&lt;/code&gt;s using a type-oblivious comparison (e.g., &lt;code&gt;memcmp&lt;/code&gt;), so a copy of a &lt;code&gt;struct&lt;/code&gt; must retain its padding. In some experimentation, a noticeable amount of total runtime on some workloads was found to be spent in copying padding (which is often awkwardly sized and aligned).&lt;/p&gt;
&lt;p&gt;Consider two of the core optimizations that a C compiler performs: SROA (scalar replacement of aggregates) and loop unswitching. SROA attempts to replace &lt;code&gt;struct&lt;/code&gt;s (and arrays with fixed lengths) with individual variables. This then allows the compiler to treat accesses as independent and elide operations entirely if it can prove that the results are never visible. This has the side effect of deleting padding in some cases but not others.&lt;/p&gt;
&lt;p&gt;The second optimization, loop unswitching, transforms a loop containing a conditional into a conditional with a loop in both paths. This changes flow control, contradicting the idea that a programmer knows what code will execute when low-level language code runs. It can also cause significant problems with C's notions of unspecified values and undefined behavior.&lt;/p&gt;
&lt;p&gt;In C, a read from an uninitialized variable is an unspecified value and is allowed to be any value each time it is read. This is important, because it allows behavior such as lazy recycling of pages: for example, on FreeBSD the &lt;code&gt;malloc&lt;/code&gt; implementation informs the operating system that pages are currently unused, and the operating system uses the first write to a page as the hint that this is no longer true. A read to newly &lt;code&gt;malloc&lt;/code&gt;ed memory may initially read the old value; then the operating system may reuse the underlying physical page; and then on the next write to a different location in the page replace it with a newly zeroed page. The second read from the same location will then give a zero value.&lt;/p&gt;
&lt;p&gt;If an unspecified value for flow control is used (for example, using it as the condition in an &lt;code&gt;if&lt;/code&gt; statement), then the result is undefined behavior: anything is allowed to happen. Consider the loop-unswitching optimization, this time in the case where the loop ends up being executed zero times. In the original version, the entire body of the loop is dead code. In the unswitched version, there is now a branch on the variable, which may be uninitialized. Some dead code has now been transformed into undefined behavior. This is just one of many optimizations that a close investigation of the C semantics shows to be unsound.&lt;/p&gt;
&lt;p&gt;In summary, it is possible to make C code run quickly but only by spending thousands of person-years building a sufficiently smart compiler—and even then, only if you violate some of the language rules. Compiler writers let C programmers pretend that they are writing code that is &quot;close to the metal&quot; but must then generate machine code that has very different behavior if they want C programmers to keep believing that they are using a fast language.&lt;/p&gt;
&lt;h3&gt;Understanding C&lt;/h3&gt;
&lt;p&gt;One of the key attributes of a low-level language is that programmers can easily understand how the language's abstract machine maps to the underlying physical machine. This was certainly true on the PDP-11, where each C expression mapped trivially to one or two instructions. Similarly, the compiler performed a straightforward lowering of local variables to stack slots and mapped primitive types to things that the PDP-11 could operate on natively.&lt;/p&gt;
&lt;p&gt;Since then, implementations of C have had to become increasingly complex to maintain the illusion that C maps easily to the underlying hardware and gives fast code. A 2015 survey of C programmers, compiler writers, and standards committee members raised several issues about the comprehensibility of C.&lt;sup&gt;3&lt;/sup&gt; For example, C permits an implementation to insert padding into structures (but not into arrays) to ensure that all fields have a useful alignment for the target. If you zero a structure and then set some of the fields, will the padding bits all be zero? According to the results of the survey, 36 percent were sure that they would be, and 29 percent didn't know. Depending on the compiler (and optimization level), it may or may not be.&lt;/p&gt;
&lt;p&gt;This is a fairly trivial example, yet a significant proportion of programmers either believe the wrong thing or are not sure. When you introduce pointers, the semantics of C become a lot more confusing. The BCPL model was fairly simple: values are words. Each word is either some data or the address of some data. Memory is a flat array of storage cells indexed by address.&lt;/p&gt;
&lt;p&gt;The C model, in contrast, was intended to allow implementation on a variety of targets, including segmented architectures (where a pointer might be a segment ID and an offset) and even garbage-collected virtual machines. The C specification is careful to restrict valid operations on pointers to avoid problems for such systems. The response to Defect Report 260&lt;sup&gt;1&lt;/sup&gt; included the notion of &lt;em&gt;pointer provenance&lt;/em&gt; in the definition of pointer:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&quot;Implementations are permitted to track the origins of a bit pattern and treat those representing an indeterminate value as distinct from those representing a determined value. They may also treat pointers based on different origins as distinct even though they are bitwise identical.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, the word &lt;em&gt;provenance&lt;/em&gt; does not appear in the C11 specification at all, so it is up to compiler writes to decide what it means. GCC (GNU Compiler Collection) and Clang, for example, differ on whether a pointer that is converted to an integer and back retains its provenance through the casts. Compilers are free to determine that two pointers to different &lt;code&gt;malloc&lt;/code&gt; results or stack allocations always compare as not-equal, even when a bitwise comparison of the pointers may show them to describe the same address.&lt;/p&gt;
&lt;p&gt;These misunderstandings are not purely academic in nature. For example, security vulnerabilities have been observed from signed integer overflow (undefined behavior in C) and from code that dereferenced a pointer before a null check, indicating to the compiler that the pointer could not be null because dereferencing a null pointer is undefined behavior in C and therefore can be assumed not to happen (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1897).&lt;/p&gt;
&lt;p&gt;In light of such issues, it is difficult to argue that a programmer can be expected to understand exactly how a C program will map to an underlying architecture.&lt;/p&gt;
&lt;h3&gt;Imagining a Non-C Processor&lt;/h3&gt;
&lt;p&gt;The proposed fixes for Spectre and Meltdown impose significant performance penalties, largely offsetting the advances in microarchitecure in the past decade. Perhaps it's time to stop trying to make C code fast and instead think about what programming models would look like on a processor designed to be fast.&lt;/p&gt;
&lt;p&gt;We have a number of examples of designs that have not focused on traditional C code to provide some inspiration. For example, highly multithreaded chips, such as Sun/Oracle's UltraSPARC Tx series, don't require as much cache to keep their execution units full. Research processors&lt;sup&gt;2&lt;/sup&gt; have extended this concept to very large numbers of hardware-scheduled threads. The key idea behind these designs is that with enough high-level parallelism, you can suspend the threads that are waiting for data from memory and fill your execution units with instructions from others. The problem with such designs is that C programs tend to have few busy threads.&lt;/p&gt;
&lt;p&gt;ARM's SVE (Scalar Vector Extensions)—and similar work from Berkeley&lt;sup&gt;4&lt;/sup&gt;—provides another glimpse at a better interface between program and hardware. Conventional vector units expose fixed-sized vector operations and expect the compiler to try to map the algorithm to the available unit size. In contrast, the SVE interface expects the programmer to describe the degree of parallelism available and relies on the hardware to map it down to the available number of execution units. Using this from C is complex, because the autovectorizer must infer the available parallelism from loop structures. Generating code for it from a functional-style map operation is trivial: the length of the mapped array is the degree of available parallelism.&lt;/p&gt;
&lt;p&gt;Caches are large, but their size isn't the only reason for their complexity. The &lt;em&gt;cache coherency protocol&lt;/em&gt; is one of the hardest parts of a modern CPU to make both fast and correct. Most of the complexity involved comes from supporting a language in which data is expected to be both shared and mutable as a matter of course. Consider in contrast an Erlang-style abstract machine, where every object is either thread-local or immutable (Erlang has a simplification of even this, where there is only one mutable object per thread). A cache coherency protocol for such a system would have two cases: mutable or shared. A software thread being migrated to a different processor would need its cache explicitly invalidated, but that's a relatively uncommon operation.&lt;/p&gt;
&lt;p&gt;Immutable objects can simplify caches even more, as well as making several operations even cheaper. Sun Labs' Project Maxwell noted that the objects in the cache and the objects that would be allocated in a young generation are almost the same set. If objects are dead before they need to be evicted from the cache, then never writing them back to main memory can save a lot of power. Project Maxwell proposed a young-generation garbage collector (and allocator) that would run in the cache and allow memory to be recycled quickly. With immutable objects on the heap and a mutable stack, a garbage collector becomes a very simple state machine that is trivial to implement in hardware and allows for more efficient use of a relatively small cache.&lt;/p&gt;
&lt;p&gt;A processor designed purely for speed, not for a compromise between speed and C support, would likely support large numbers of threads, have wide vector units, and have a much simpler memory model. Running C code on such a system would be problematic, so, given the large amount of legacy C code in the world, it would not likely be a commercial success.&lt;/p&gt;
&lt;p&gt;There is a common myth in software development that parallel programming is hard. This would come as a surprise to Alan Kay, who was able to teach an actor-model language to young children, with which they wrote working programs with more than 200 threads. It comes as a surprise to Erlang programmers, who commonly write programs with thousands of parallel components. It's more accurate to say that parallel programming in a language with a C-like abstract machine is difficult, and given the prevalence of parallel hardware, from multicore CPUs to many-core GPUs, that's just another way of saying that C doesn't map to modern hardware very well.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;p&gt;1. C Defect Report 260. 2004; &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_260.htm&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_260.htm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2. Chadwick, G. A. 2013. Communication centric, multi-core, fine-grained processor architecture. Technical Report 832. University of Cambridge, Computer Laboratory; &lt;a href=&quot;https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-832.pdf&quot;&gt;http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-832.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;3. Memarian, K., Matthiesen, J., Lingard, J., Nienhuis, K., Chisnall, D. Watson, R. N. M., Sewell, P. 2016. Into the depths of C: elaborating the de facto standards. &lt;em&gt;Proceedings of the 37&lt;sup&gt;th&lt;/sup&gt; ACM SIGPLAN Conference on Programming Language Design and Implementation&lt;/em&gt;: 1-15; &lt;a href=&quot;https://dl.acm.org/authorize?N04455&quot;&gt;http://dl.acm.org/authorize?N04455&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;4. Ou, A., Nguyen, Q., Lee, Y., Asanović, K. 2014. A case for MVPs: mixed-precision vector processors. Second International Workshop on Parallelism in Mobile Platforms at the 41st International Symposium on Computer Architecture.&lt;/p&gt;
&lt;p&gt;5. Perlis, A. 1982. Epigrams on programming. &lt;em&gt;ACM SIGPLAN&lt;/em&gt; &lt;em&gt;Notices&lt;/em&gt; 17(9).&lt;/p&gt;
&lt;h4&gt;Related articles&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2543971&quot;&gt;The Challenge of Cross-language Interoperability&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;David Chisnall&lt;br/&gt;Interfacing between languages is increasingly important.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2543971&quot;&gt;https://queue.acm.org/detail.cfm?id=2543971&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2620662&quot;&gt;Finding More than One Worm in the Apple&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Mike Bland&lt;br/&gt;If you see something, say something.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2620662&quot;&gt;https://queue.acm.org/detail.cfm?id=2620662&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1113336&quot;&gt;Coding for the Code&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Friedrich Steimann, Thomas Kühne&lt;br/&gt;Can models provide the DNA for software development?&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1113336&quot;&gt;https://queue.acm.org/detail.cfm?id=1113336&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;David Chisnall&lt;/strong&gt; is a researcher at the University of Cambridge, where he works on programming language design and implementation. He spent several years consulting in between finishing his Ph.D. and arriving at Cambridge, during which time he also wrote books on Xen and the Objective-C and Go programming languages, as well as numerous articles. He also contributes to the LLVM, Clang, FreeBSD, GNUstep, and Étoilé open-source projects, and he dances the Argentine tango.&lt;/p&gt;
&lt;p&gt;Copyright © 2018 held by owner/author. Publication rights licensed to ACM.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;floatLeft&quot; src=&quot;https://queue.acm.org/img/q%20stamp_small.jpg&quot; width=&quot;26&quot; height=&quot;45&quot; alt=&quot;acmqueue&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Originally published in Queue vol. 16, no. 2&lt;/em&gt;—&lt;br/&gt;see this item in the &lt;a href=&quot;https://portal.acm.org/citation.cfm?id=3212479&quot;&gt;ACM Digital Library&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;ACMQueue&quot;&gt;Tweet&lt;/a&gt; 


&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;
Related:
&lt;p&gt;&lt;span&gt;Tobias Lauinger, Abdelberi Chaabane, Christo Wilson&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3205288&quot;&gt;&lt;strong&gt;Thou Shalt Not Depend on Me&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;A look at JavaScript libraries in the wild&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Robert C. Seacord&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3041020&quot;&gt;&lt;strong&gt;Uninitialized Reads&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Understanding the proposed revisions to the C language&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Carlos Baquero, Nuno Preguiça&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2917756&quot;&gt;&lt;strong&gt;Why Logical Clocks are Easy&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Sometimes all you need is the right language.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Erik Meijer, Kevin Millikin, Gilad Bracha&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2747873&quot;&gt;&lt;strong&gt;Spicing Up Dart with Side Effects&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;A set of extensions to the Dart programming language, designed to support asynchrony and generator functions&lt;/p&gt;
&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;(newest first)&lt;/p&gt;


&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3212479#&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/logo_acm.gif&quot;/&gt;&lt;/a&gt;&lt;br/&gt;© 2018 ACM, Inc. All Rights Reserved.&lt;/p&gt;
</description>
<pubDate>Tue, 01 May 2018 15:13:35 +0000</pubDate>
<dc:creator>jodooshi</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://queue.acm.org/detail.cfm?id=3212479</dc:identifier>
</item>
<item>
<title>Ask HN: Who is hiring? (May 2018)</title>
<link>https://news.ycombinator.com/item?id=16967543</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=16967543</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8.0520581113801&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;5.8153753026634&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;16967543&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=16967543&quot; class=&quot;storylink&quot;&gt;Ask HN: Who is hiring? (May 2018)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.71428571428571&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_16967543&quot;&gt;395 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=whoishiring&quot; class=&quot;hnuser&quot;&gt;whoishiring&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=16967543&quot;&gt;8 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_16967543&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=16967543&amp;amp;goto=item%3Fid%3D16967543&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Who%20is%20hiring%3F%20(May%202018)&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20Who%20is%20hiring%3F%20(May%202018)&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=16967543&amp;amp;auth=54044484e59a51a370e2674340d74f4c71ced5bd&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=16967543&quot;&gt;718 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;16&quot;&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.
&lt;p&gt;Please only post if you personally are part of the hiring company—no recruiting firms or job boards. Only one post per month, please. If it isn't a household name, explain what your company does.&lt;/p&gt;
&lt;p&gt;Commenters: please don't reply to job posts to complain about something. It's off topic here.&lt;/p&gt;
&lt;p&gt;Readers: please only email submitters if you personally are interested in the job—no recruiters or sales calls.&lt;/p&gt;
&lt;p&gt;You can also use kristopolous' console script to search the thread: https://news.ycombinator.com/item?id=10313519.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Tue, 01 May 2018 15:02:12 +0000</pubDate>
<dc:creator>whoishiring</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=16967543</dc:identifier>
</item>
<item>
<title>A Mass of Copyrighted Works Will Soon Enter the Public Domain</title>
<link>https://www.theatlantic.com/technology/archive/2018/04/copywritten-so-dont-copy-me/557420/</link>
<guid isPermaLink="true" >https://www.theatlantic.com/technology/archive/2018/04/copywritten-so-dont-copy-me/557420/</guid>
<description>&lt;section id=&quot;article-section-1&quot;&gt;&lt;p&gt;&lt;em&gt;The Great American Novel&lt;/em&gt; enters the public domain on January 1, 2019—quite literally. Not the concept, but the book by William Carlos Williams. It will be joined by hundreds of thousands of other books, musical scores, and films first published in the United States during 1923. It’s the first time since 1998 for a mass shift to the public domain of material protected under copyright. It’s also the beginning of a new annual tradition: For several decades from 2019 onward, each New Year’s Day will unleash a full year’s worth of works published 95 years earlier.&lt;/p&gt;
&lt;p&gt;This coming January, Charlie Chaplin’s film &lt;em&gt;The Pilgrim&lt;/em&gt; and Cecil B. DeMille’s &lt;em&gt;The 10 Commandments&lt;/em&gt; will slip the shackles of ownership, allowing any individual or company to release them freely, mash them up with other work, or sell them with no restriction. This will be true also for some compositions by Bela Bartok, Aldous Huxley’s &lt;em&gt;Antic Hay&lt;/em&gt;, Winston Churchill’s &lt;em&gt;The World Crisis&lt;/em&gt;, Carl Sandburg’s &lt;em&gt;Rootabaga Pigeons&lt;/em&gt;, e.e. cummings’s &lt;em&gt;Tulips and Chimneys&lt;/em&gt;, Noël Coward’s &lt;em&gt;London Calling!&lt;/em&gt; musical, Edith Wharton’s &lt;em&gt;A Son at the Front&lt;/em&gt;, many stories by P.G. Wodehouse, and hosts upon hosts of forgotten works, according to research by the Duke University School of Law’s Center for the Study of the Public Domain.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-2&quot;&gt;&lt;p&gt;Throughout the 20th century, changes in copyright law led to longer periods of protection for works that had been created decades earlier, which altered a pattern of relatively brief copyright protection that dates back to the founding of the nation. This came from two separate impetuses. First, the United States had long stood alone in defining copyright as a fixed period of time instead of using an author’s life plus a certain number of years following it, which most of the world had agreed to in 1886. Second, the ever-increasing value of intellectual property could be exploited with a longer term.&lt;/p&gt;
&lt;p&gt;But extending American copyright law and bringing it into international harmony meant applying “patches” retroactively to work already created and published. And that led, in turn, to lengthy delays in copyright expiring on works that now date back almost a century.&lt;/p&gt;
&lt;p&gt;Only so much that’s created has room to persist in memory, culture, and scholarship. Some works may have been forgotten because they were simply terrible or perishable. But it’s also the case that a lack of access to these works in digital form limits whether they get considered at all. In recent years, Google, libraries, the Internet Archive, and other institutions have posted millions of works in the public domain from 1922 and earlier. With lightning-fast ease, their entire contents are now as contemporary as news articles, and may show up intermingled in search results. More recent work, however, remains locked up. The distant past is more accessible than 10 or 50 years ago.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-3&quot;&gt;&lt;p&gt;The details of copyright law get complicated fast, but they date back to the original grant in the Constitution that gives Congress the right to bestow exclusive rights to a creator for “limited times.” In the first copyright act in 1790, that was 14 years, with the option to apply for an automatically granted 14-year renewal. By 1909, both terms had grown to 28 years. In 1976, the law was radically changed to harmonize with the Berne Convention, an international agreement originally signed in 1886. This switched expiration to an author’s life plus 50 years. In 1998, an act named for Sonny Bono, recently deceased and a defender of Hollywood’s expansive rights, bumped that to 70 years.&lt;/p&gt;
&lt;p&gt;The Sonny Bono Act was widely seen as a way to keep Disney’s &lt;em&gt;Steamboat Willie&lt;/em&gt; from slipping into the public domain, which would allow that first appearance of Mickey Mouse in 1928 from being freely copied and distributed. By tweaking the law, Mickey got another 20-year reprieve. When that expires, &lt;em&gt;Steamboat Willie&lt;/em&gt; can be given away, sold, remixed, turned pornographic, or anything else. (Mickey himself doesn’t lose protection as such, but his graphical appearance, his dialog, and any specific behavior in &lt;em&gt;Steamboat Willie&lt;/em&gt;—his character traits—become likewise freely available. This was decided &lt;a href=&quot;https://www.economist.com/blogs/prospero/2014/06/public-domain&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'0',r'557420'&quot;&gt;in a case involving Sherlock Holmes&lt;/a&gt; in 2014.)&lt;/p&gt;
&lt;p&gt;The reason that New Year’s Day 2019 has special significance arises from the 1976 changes in copyright law’s retroactive extensions. First, the 1976 law extended the 56-year period (28 plus an equal renewal) to 75 years. That meant work through 1922 was protected until 1998. Then, in 1998, the Sonny Bono Act also fixed a period of 95 years for anything placed under copyright from 1923 to 1977, after which the measure isn’t fixed, but based on when an author perishes. Hence the long gap from 1998 until now, and why the drought’s about to end.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;article-section-4&quot;&gt;&lt;p&gt;Of course, it’s never easy. If you published something between 1923 and 1963 and wanted to renew copyright, the law required registration with the U.S. Copyright Office at any point in the first 28 years of copyright, followed at the 28-year mark with the renewal request. Without both a registration and a renewal, anything between 1923 and 1963 is already in the public domain. Many books, songs, and other printed media were never renewed by the author or publisher due to lack of sales or interest, an author’s death, or a publisher’s shutting down or bankruptcy. One estimate from 2011 &lt;a href=&quot;https://crl.acrl.org/index.php/crl/article/view/16582&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'1',r'557420'&quot;&gt;suggests&lt;/a&gt; about 90 percent of works published in the 1920s haven’t been renewed. That number shifts to 60 percent or so for works from the 1940s. But there are murky issues about ownership and other factors for as many as 30 percent of books from 1923 to 1963. It’s impossible to determine copyright status easily for them.&lt;/p&gt;
&lt;p&gt;It’s easier to prove a renewal was issued than not, making it difficult for those who want to make use of material without any risk of challenge. Jennifer Jenkins, the director of Duke’s Center for the Study of the Public Domain, says, “Even if works from 1923 technically entered the public domain earlier because of nonrenewal, next year will be different, because then we’ll know for sure that these works are in the public domain without tedious research.”&lt;/p&gt;
&lt;p&gt;Jenkins’s group was unable, for instance, to find definitive proof that &lt;em&gt;The Great American Novel&lt;/em&gt; wasn’t renewed, but that doesn’t mean there’s not an undigitized record in a file in Washington, D.C. While courts can be petitioned to find works affirmatively in the public domain, as ultimately happened following a &lt;a href=&quot;https://www.hollywoodreporter.com/thr-esq/warner-music-pays-14-million-863120&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'2',r'557420'&quot;&gt;knotted dispute&lt;/a&gt; over “Happy Birthday to You,” most of the time the issue only comes up when an alleged rights holder takes legal action to assert that copyright still holds. As a result, it’s more likely a publisher would wait to reissue &lt;em&gt;The Great American Novel&lt;/em&gt; in 2019 than worry about Williams’s current copyright holders objecting in 2018.&lt;/p&gt;
&lt;aside class=&quot;callout&quot; data-omni-click=&quot;r'article',r' ',d,r'related',#data-omni-index,@data-article-id&quot;&gt;&lt;hr/&gt;&lt;h4&gt;Related Stories&lt;/h4&gt;
&lt;div&gt;&lt;a href=&quot;https://www.theatlantic.com/technology/archive/2016/01/internet-rejoice/422883/&quot; data-omni-index=&quot;0&quot; data-article-id=&quot;934151&quot; data-omni-click=&quot;inherit&quot;&gt;&lt;img width=&quot;242&quot; src=&quot;https://cdn.theatlantic.com/assets/media/img/mt/2016/01/nypl.digitalcollections.537f04a0_6276_0130_cf5a_58d385a7bbd0.001.w-1/thumb_wide_medium.jpg?1522797779&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;/aside&gt;&lt;p&gt;There’s one more bit of wiggle, too: Libraries were granted special dispensation in the 1998 copyright revision over work in its last 20 years of its copyright so long as the work isn’t being commercially exploited, such as a publisher or author having a book in print or a musician actively selling or licensing digital sheet music. But hundreds of thousands of published works from 1923 to 1941 can be posted legally by libraries today, moving forward a year every year. (The Internet Archive assembles these works from partners &lt;a href=&quot;https://archive.org/details/last20&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'3',r'557420'&quot;&gt;at its ironic Sonny Bono Memorial Collection site&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;It’s possible this could all change again as corporate copyright holders start to get itchy about expirations. However, the United States is now in harmony with most of the rest of the world, and &lt;a href=&quot;https://arstechnica.com/tech-policy/2018/01/hollywood-says-its-not-planning-another-copyright-extension-push/&quot; data-omni-click=&quot;r'article',r'',d,r'intext',r'4',r'557420'&quot;&gt;no legislative action is underway this year&lt;/a&gt; to make any waves that would affect the 2019 rollover.&lt;/p&gt;
&lt;p&gt;A Google spokesperson confirmed that Google Books stands ready. Its software is already set up so that on January 1 of each year, the material from 95 years earlier that’s currently digitized but only available for searching suddenly switches to full text. We’ll soon find out more about what 1923 was really like. And in 2024, we might all ring in the new year whistling Steamboat Willie’s song.&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Tue, 01 May 2018 11:58:00 +0000</pubDate>
<dc:creator>punnerud</dc:creator>
<og:title>A Landslide of Classic Art Is About to Enter the Public Domain</og:title>
<og:type>article</og:type>
<og:url>https://www.theatlantic.com/technology/archive/2018/04/copywritten-so-dont-copy-me/557420/</og:url>
<og:image>https://cdn.theatlantic.com/assets/media/img/mt/2018/04/_Associated_First_National_Pictures_Sunset_Boulevard_Corbis_Getty/facebook.jpg?1523050190</og:image>
<og:description>For the first time in two decades, a huge number of books, films, and other works will escape U.S. copyright law.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theatlantic.com/technology/archive/2018/04/copywritten-so-dont-copy-me/557420/</dc:identifier>
</item>
<item>
<title>Finding the longest straight line you could sail without hitting land</title>
<link>https://www.technologyreview.com/s/611012/computer-scientists-have-found-the-longest-straight-line-you-could-sail-without-hitting/</link>
<guid isPermaLink="true" >https://www.technologyreview.com/s/611012/computer-scientists-have-found-the-longest-straight-line-you-could-sail-without-hitting/</guid>
<description>&lt;p&gt;Back in 2012, a curious debate emerged on the discussion website Reddit, specifically on a subreddit called /r/MapPorn. Here the user Kepleronlyknows posted a map of the world purporting to show the longest navigable straight-line path over water without hitting land. The route began in Pakistan and followed a great circle under Africa and South America until it hit eastern Russia.&lt;/p&gt;
&lt;p&gt;The post generated huge debate, with much head-scratching and pawing over charts and globes. The big question was whether the claim was correct—could there be a different straight-line route over water that was longer but uninterrupted by land of any kind? At the same time, same question arose for land—what was the longest straight-line route uninterrupted by lakes or seas?&lt;/p&gt;

&lt;p&gt;For cartographers, it is clear that the answers would have to follow a great circle: an arc along one of the many largest imaginary circles that can be drawn around a sphere. Great circles always follow the shortest path between two points on a sphere. But how to find the great circles that contain the solutions?&lt;/p&gt;
&lt;img class=&quot;article-img article-img--text-col&quot; src=&quot;https://cdn.technologyreview.com/i/images/longest-land-journey.png?sw=600&amp;amp;cx=61&amp;amp;cy=0&amp;amp;cw=1232&amp;amp;ch=693&quot; srcset=&quot;https://cdn.technologyreview.com/i/images/longest-land-journey.png?sw=600&amp;amp;cx=61&amp;amp;cy=0&amp;amp;cw=1232&amp;amp;ch=693 1x,https://cdn.technologyreview.com/i/images/longest-land-journey.png?sw=1200&amp;amp;cx=61&amp;amp;cy=0&amp;amp;cw=1232&amp;amp;ch=693 2x&quot;/&gt;
The longest straight-line land journey on Earth.
&lt;p&gt;We now have an answer thanks to the work of Rohan Chabukswar at the United Technologies Research Center in Ireland and Kushal Mukherjee at IBM Research in India. These guys have developed an algorithm for calculating the longest straight-line path on land or sea. &lt;/p&gt;
&lt;p&gt;One way to solve this problem is by brute force—measuring the length of every possible straight-line path over land and water. This would be time-consuming to say the least. A global map with resolution of 1.85 kilometers has over 230 billion great circles. Each of these consists of 21,600 individual points, making a total of over five trillion points to consider.&lt;/p&gt;
&lt;img class=&quot;article-img article-img--text-col&quot; src=&quot;https://cdn.technologyreview.com/i/images/longest-sea-journey.png?sw=600&amp;amp;cx=0&amp;amp;cy=0&amp;amp;cw=1372&amp;amp;ch=692&quot; srcset=&quot;https://cdn.technologyreview.com/i/images/longest-sea-journey.png?sw=600&amp;amp;cx=0&amp;amp;cy=0&amp;amp;cw=1372&amp;amp;ch=692 1x,https://cdn.technologyreview.com/i/images/longest-sea-journey.png?sw=1200&amp;amp;cx=0&amp;amp;cy=0&amp;amp;cw=1372&amp;amp;ch=692 2x&quot;/&gt;
The longest straight-line sea journey without hitting land.
&lt;p&gt;But Chabukswar and Mukherjee have developed a quicker method using an algorithm that exploits a technique known as branch and bound.&lt;/p&gt;
&lt;p&gt;This works by considering potential solutions as branches on a tree. Instead of evaluating all solutions, the algorithm checks one branch after another. That’s called branching, and it is essentially the same as a brute-force search. But another technique, called bounding, significantly reduces the task. Each branch contains a subset of potential solutions, one of which is the optimal solution. The trick is to find a property of the subsets that depends on how close the solutions come to the optimal one.&lt;/p&gt;
&lt;p&gt;The bounding part of the algorithm measures this property to determine whether the subset of solutions is closer to the optimal value. If it isn’t, the algorithm ignores this branch entirely. If it is closer, this becomes the best subset of solutions, and the next branch is compared against it.&lt;/p&gt;
&lt;div class=&quot;l-automated-trending--ordered&quot; data-widget-type=&quot;automated-trending&quot; data-widget-layout=&quot;ordered&quot;&gt;
&lt;h5 class=&quot;automated-trending__h&quot;&gt;Recommended for You&lt;/h5&gt;
&lt;ol class=&quot;automated-trending__tz-list&quot;&gt;&lt;li class=&quot;automated-trending--ordered__tz&quot;&gt;

&lt;/li&gt;
&lt;li class=&quot;automated-trending--ordered__tz&quot;&gt;

&lt;/li&gt;
&lt;li class=&quot;automated-trending--ordered__tz&quot;&gt;

&lt;/li&gt;
&lt;li class=&quot;automated-trending--ordered__tz&quot;&gt;

&lt;/li&gt;
&lt;li class=&quot;automated-trending--ordered__tz&quot;&gt;

&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;p&gt;This process continues until all branches have been tested, revealing the one that contains the optimal solution. The branching algorithm then divides this branch up into smaller branches and the process repeats until it arrives at the single optimal solution.&lt;/p&gt;
&lt;p&gt;The trick that Chabukswar and Mukherjee have perfected is to find a mathematical property of great-circle paths that bounds the optimal solution for straight-line paths. They then create an algorithm that uses this to find the longest path.&lt;/p&gt;
&lt;p&gt;“The algorithm returned the longest path in about 10 minutes of computation for water path, and 45 minutes of computation for land path on a standard laptop,” say the researchers.&lt;/p&gt;
&lt;p&gt;It turns out that Kepleronlyknows was entirely correct. The longest straight-line path over water begins in Sonmiani, Balochistan, Pakistan, passes between Africa and Madagascar and then between Antarctica and Tierra del Fuego in South America, and ends in the Karaginsky District, Kamchatka Krai, in Russia. It is 32,089.7 kilometers long.&lt;/p&gt;
&lt;p&gt;“This path is visually the same one as found by &lt;em&gt;kepleronlyknows&lt;/em&gt;, thus proving his [sic] assertion,” say Chabukswar and Mukherjee.&lt;/p&gt;
&lt;p&gt;The longest path over land runs from near Jinjiang, Fujian, in China, weaves through Mongolia Kazakhstan and Russia, and finally reaches Europe to finish near Sagres in Portugal. In total the route passes through 15 countries over 11,241.1 kilometers.&lt;/p&gt;
&lt;p&gt; The question now is: who will be the first to make these journeys, when, and how?&lt;/p&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://arxiv.org/abs/1804.07389&quot;&gt;arxiv.org/abs/1804.07389&lt;/a&gt; : Longest Straight Line Paths on Water or Land on the Earth&lt;/p&gt;


</description>
<pubDate>Tue, 01 May 2018 09:41:47 +0000</pubDate>
<dc:creator>zeristor</dc:creator>
<og:url>https://www.technologyreview.com/s/611012/computer-scientists-have-found-the-longest-straight-line-you-could-sail-without-hitting/</og:url>
<og:title>Computer scientists have found the longest straight line you could sail without hitting land</og:title>
<og:type>article</og:type>
<og:image>https://cdn.technologyreview.com/i/images/longest-sea-journey.png?cx=4&amp;cy=16&amp;cw=1171&amp;ch=659&amp;sw=1200</og:image>
<og:description>While they were at it, they found the longest straight path you could drive without hitting water.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.technologyreview.com/s/611012/computer-scientists-have-found-the-longest-straight-line-you-could-sail-without-hitting/</dc:identifier>
</item>
</channel>
</rss>